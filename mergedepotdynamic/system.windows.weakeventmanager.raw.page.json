{"content":"    \r\n    <h1 id=\"System_Windows_WeakEventManager\">\r\n      <span class=\"lang-csharp\">WeakEventManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a base class for the event manager that is used in the <em>weak event pattern</em>. The manager adds and removes listeners for events (or callbacks) that also use the pattern.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class WeakEventManager : System.Windows.Threading.DispatcherObject</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">System.Windows.Threading.DispatcherObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WeakEventManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You typically use the weak event pattern when the event source has an object lifetime that is independent of the event listeners. Using the central event dispatching capability of a WeakEventManager allows the listener&#39;s handlers to be garbage collected even if the source object persists. By contrast, a regular event hookup using the <code>+=</code> operator causes the potentially disconnected source to hold a reference to the listeners. This prevents the receiver from being garbage collected in a timely fashion.  </p>\n<p> One common situation where the lifetime relationships between sources and listeners should use of the weak event pattern is the handling of update events coming from data bindings.  </p>\n<p> The weak event pattern can also be used for callbacks and regular events.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager__ctor\" data-linktype=\"self-bookmark\">WeakEventManager()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes base class values when it is used as the initializer by the constructor of a derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_Item_System_Object_\" data-linktype=\"self-bookmark\">Item(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data being stored for the specified source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_ReadLock\" data-linktype=\"self-bookmark\">ReadLock</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Establishes a read-lock on the underlying data table, and returns an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_WriteLock\" data-linktype=\"self-bookmark\">WriteLock</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Establishes a write-lock on the underlying data table, and returns an<a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_DeliverEvent_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">DeliverEvent(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Delivers the event being managed to each listener.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_DeliverEventToList_System_Object_System_EventArgs_System_Windows_WeakEventManager_ListenerList_\" data-linktype=\"self-bookmark\">DeliverEventToList(Object,EventArgs,WeakEventManager+ListenerList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Delivers the event being managed to each listener in the provided list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_GetCurrentManager_System_Type_\" data-linktype=\"self-bookmark\">GetCurrentManager(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> implementation that is used for the provided type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_NewListenerList\" data-linktype=\"self-bookmark\">NewListenerList()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new object to contain listeners to an event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_ProtectedAddHandler_System_Object_System_Delegate_\" data-linktype=\"self-bookmark\">ProtectedAddHandler(Object,Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified delegate as an event handler of the specified source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_ProtectedAddListener_System_Object_System_Windows_IWeakEventListener_\" data-linktype=\"self-bookmark\">ProtectedAddListener(Object,IWeakEventListener)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the provided listener to the provided source for the event being managed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_ProtectedRemoveHandler_System_Object_System_Delegate_\" data-linktype=\"self-bookmark\">ProtectedRemoveHandler(Object,Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the previously added handler from the specified source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_ProtectedRemoveListener_System_Object_System_Windows_IWeakEventListener_\" data-linktype=\"self-bookmark\">ProtectedRemoveListener(Object,IWeakEventListener)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a previously added listener from the provided source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_Purge_System_Object_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">Purge(Object,Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes inactive listener entries from the data list for the provided source. Returns <code>true</code> if some entries were actually removed from the list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_Remove_System_Object_\" data-linktype=\"self-bookmark\">Remove(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all listeners for the specified source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_ScheduleCleanup\" data-linktype=\"self-bookmark\">ScheduleCleanup()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_SetCurrentManager_System_Type_System_Windows_WeakEventManager_\" data-linktype=\"self-bookmark\">SetCurrentManager(Type,WeakEventManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the current manager for the specified manager type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_StartListening_System_Object_\" data-linktype=\"self-bookmark\">StartListening(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, starts listening for the event being managed. After the StartListening method is first called, the manager should be in the state of calling <span class=\"xref\">stem.Windows.WeakEventManager.DeliverEvent*</span> or <span class=\"xref\">stem.Windows.WeakEventManager.DeliverEventToList*</span> whenever the relevant event from the provided source is handled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_WeakEventManager_StopListening_System_Object_\" data-linktype=\"self-bookmark\">StopListening(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, stops listening on the provided source for the event being managed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager__ctor\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WeakEventManager()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes base class values when it is used as the initializer by the constructor of a derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WeakEventManager ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_Item_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data being stored for the specified source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected object this[object source] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the requested source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Data being stored by the manager for this source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Derived classes can choose what data and type to store in this indexer. Typically this is implemented as a <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a>, which is a list of weak references to listeners. You would only have to change this type if the <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> type cannot contain your required information. If so, you will have to override the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_Purge_\" data-linktype=\"relative-path\">Purge</a> method so that all cleanup of the underlying type is performed correctly.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_ReadLock\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_ReadLock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadLock</div>        \r\n          </div>\r\n    \r\n            <p>Establishes a read-lock on the underlying data table, and returns an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected IDisposable ReadLock { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <code>using</code> construct.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In derived classes, queries to the table contained in <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_Item_\" data-linktype=\"relative-path\">Item</a> should always occur within a <code>using (ReadLock) { ... }</code> clause, except for queries that are already within a write lock. These queries may be necessary if your class supports a more sophisticated <code>AddListener</code> implementation that requires more data beyond the <code>source</code> and the <code>listener</code>, and uses the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_Item_\" data-linktype=\"relative-path\">Item</a> collection to store the extra information.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_WriteLock\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_WriteLock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLock</div>        \r\n          </div>\r\n    \r\n            <p>Establishes a write-lock on the underlying data table, and returns an<a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected IDisposable WriteLock { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to establish a lock on the data table members and then be appropriately disposed with a <code>using</code> construct.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In derived classes, all modifications to the underlying data table should occur within a <code>using (WriteLock) { ... }</code> clause. These modifications may be necessary if your class supports a more sophisticated <code>AddListener</code> implementation that requires more data beyond the <code>source</code> and the <code>listener</code>, and uses the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_Item_\" data-linktype=\"relative-path\">Item</a> collection to store the extra information.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_DeliverEvent_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_DeliverEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeliverEvent(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Delivers the event being managed to each listener.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void DeliverEvent (object sender, EventArgs args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object on which the event is being handled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data for the event to deliver.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the DeliverEvent method from within the event handlers that are added or removed by the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_StartListening_\" data-linktype=\"relative-path\">StartListening</a> and <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_StopListening_\" data-linktype=\"relative-path\">StopListening</a> implementations of subclasses.  </p>\n<p> If you call the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_ProtectedAddListener_\" data-linktype=\"relative-path\">ProtectedAddListener</a> method in your <code>AddListener</code> implementation of your class, the list of listeners receiving the event is kept in an underlying collection. (<code>AddListener</code> is not part of an interface or class contract. <code>AddListener</code> is the suggested name for the method of your manager class that calls <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_ProtectedAddListener_\" data-linktype=\"relative-path\">ProtectedAddListener</a> and adds weak event pattern listeners for the event.)  </p>\n<p> <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_ProtectedAddListener_\" data-linktype=\"relative-path\">ProtectedAddListener</a> adds listeners to a single list. If your manager implementation maintains more than one list of listeners per event, do not use DeliverEvent or <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_ProtectedAddListener_\" data-linktype=\"relative-path\">ProtectedAddListener</a>. Instead, your implementation should create its own <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> instances, <code>AddListener</code> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_DeliverEventToList_\" data-linktype=\"relative-path\">DeliverEventToList</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_DeliverEventToList_System_Object_System_EventArgs_System_Windows_WeakEventManager_ListenerList_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_DeliverEventToList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeliverEventToList(Object,EventArgs,WeakEventManager+ListenerList)</div>        \r\n          </div>\r\n    \r\n            <p>Delivers the event being managed to each listener in the provided list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void DeliverEventToList (object sender, EventArgs args, System.Windows.WeakEventManager.ListenerList list);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object on which the event is being handled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>list</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The provided <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is necessary if your manager implementation maintains separate listeners lists based on information that is captured in the event data. If you use this advanced technique, you must create and maintain the separate lists as part of your manager implementation, and you must provide a way to add listeners to a specific list. Your handler implementation that listens to the raw event must act upon the condition that you use to differentiate the lists, and deliver the event only to the appropriate list or lists.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_GetCurrentManager_System_Type_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_GetCurrentManager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrentManager(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> implementation that is used for the provided type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static System.Windows.WeakEventManager GetCurrentManager (Type managerType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>managerType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to obtain the <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a></div>\r\n                  </div>\r\n                  <p>The matching <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> implementation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.iweakeventlistener#System_Windows_IWeakEventListener_ReceiveWeakEvent_\" data-linktype=\"relative-path\">ReceiveWeakEvent</a> implementations call this method using their passed <code>managerType</code>. The returned <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> is then used as the differentiator that determines which event was received, and which private class handler to invoke.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_NewListenerList\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_NewListenerList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewListenerList()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new object to contain listeners to an event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.WeakEventManager.ListenerList NewListenerList ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a></div>\r\n                  </div>\r\n                  <p>A new object to contain listeners to an event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_ProtectedAddHandler_System_Object_System_Delegate_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_ProtectedAddHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProtectedAddHandler(Object,Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified delegate as an event handler of the specified source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ProtectedAddHandler (object source, Delegate handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source object that the handler delegate subscribes to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate that handles the event that is raised by <code>source</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_ProtectedAddListener_System_Object_System_Windows_IWeakEventListener_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_ProtectedAddListener_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProtectedAddListener(Object,IWeakEventListener)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the provided listener to the provided source for the event being managed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ProtectedAddListener (object source, System.Windows.IWeakEventListener listener);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source to attach listeners to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>listener</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iweakeventlistener\" data-linktype=\"relative-path\">IWeakEventListener</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The listening class (which must implement <a class=\"xref\" href=\"system.windows.iweakeventlistener\" data-linktype=\"relative-path\">IWeakEventListener</a>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method within your manager class <code>AddListener</code> methods on <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> implementations. <code>AddListener</code> is the suggested name for the static method you define on your manager class to enable other classes to add a listener for your weak event pattern. <code>AddListener</code> should take two parameters: the <code>source</code> where the listener is attached, and the <code>listener</code> instance. For your <code>AddListener</code> implementation, call the ProtectedAddListener method on the current manager and pass the same two parameters.  </p>\n<p> If the list of listeners was previously empty, ProtectedAddListener calls the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_StartListening_\" data-linktype=\"relative-path\">StartListening</a> method internally, which will call your specific <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_StartListening_\" data-linktype=\"relative-path\">StartListening</a> override through polymorphism.  </p>\n<p> ProtectedAddListener adds listeners to a single internal <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> per <code>source</code>. If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedAddListener. Instead, your implementation should create its own <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> instances, <code>AddListener</code> should add listeners to the appropriate list, and events should be delivered to the appropriate listener list by calling the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_DeliverEventToList_\" data-linktype=\"relative-path\">DeliverEventToList</a> event instead of the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_DeliverEvent_\" data-linktype=\"relative-path\">DeliverEvent</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_ProtectedRemoveHandler_System_Object_System_Delegate_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_ProtectedRemoveHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProtectedRemoveHandler(Object,Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the previously added handler from the specified source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ProtectedRemoveHandler (object source, Delegate handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source to remove the handler from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to remove from <code>source</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_ProtectedRemoveListener_System_Object_System_Windows_IWeakEventListener_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_ProtectedRemoveListener_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProtectedRemoveListener(Object,IWeakEventListener)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a previously added listener from the provided source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ProtectedRemoveListener (object source, System.Windows.IWeakEventListener listener);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source to remove listeners from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>listener</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iweakeventlistener\" data-linktype=\"relative-path\">IWeakEventListener</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The listening class (which must implement <a class=\"xref\" href=\"system.windows.iweakeventlistener\" data-linktype=\"relative-path\">IWeakEventListener</a>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method within your manager class <code>RemoveListener</code> methods on <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> implementations. <code>RemoveListener</code> is the suggested name for the static method you define on your manager class to enable other classes to remove a listener for your weak event pattern. <code>RemoveListener</code> should take two parameters: the <code>source</code> where the listener is removed, and the <code>listener</code> class. For your <code>RemoveListener</code> implementation, call the ProtectedRemoveListener method on the current manager and pass the same two parameters.  </p>\n<p> If a call to ProtectedRemoveListener removes the last listener in the list, ProtectedRemoveListener calls the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_StopListening_\" data-linktype=\"relative-path\">StopListening</a> method internally, which will call your specific <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_StopListening_\" data-linktype=\"relative-path\">StopListening</a> override through polymorphism.  </p>\n<p> ProtectedRemoveListener removes listeners from a single internal <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> per <code>source</code>. If your manager implementation maintains more than one list of listeners for each event-source combination, do not use ProtectedRemoveListener. Instead, your implementation should create its own <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> instances, <code>RemoveListener</code> should remove listeners from the appropriate list, and events should be delivered to the appropriate listener list by calling the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_DeliverEventToList_\" data-linktype=\"relative-path\">DeliverEventToList</a> method instead of the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_DeliverEvent_\" data-linktype=\"relative-path\">DeliverEvent</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_Purge_System_Object_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_Purge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Purge(Object,Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Removes inactive listener entries from the data list for the provided source. Returns <code>true</code> if some entries were actually removed from the list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool Purge (object source, object data, bool purgeAll);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source for events being listened to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data to check. This object is expected to be a <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a> implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>purgeAll</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to stop listening to <code>source</code>, and completely remove all entries from <code>data</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if some entries were actually removed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Purge method has a default implementation that will remove all entries when data is a <a class=\"xref\" href=\"system.windows.weakeventmanager.listenerlist\" data-linktype=\"relative-path\">WeakEventManager+ListenerList</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_Remove_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Removes all listeners for the specified source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void Remove (object source);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source to remove listener information for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_ScheduleCleanup\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_ScheduleCleanup_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScheduleCleanup()</div>        \r\n          </div>\r\n    \r\n            <p>Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ScheduleCleanup ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling the ScheduleCleanup method is similar to calling the <a class=\"xref\" href=\"system.windows.weakeventmanager#System_Windows_WeakEventManager_Purge_\" data-linktype=\"relative-path\">Purge</a> method on the current manager&#39;s list, at lower thread priority, with the <code>purgeAll</code> parameter set to <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_SetCurrentManager_System_Type_System_Windows_WeakEventManager_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_SetCurrentManager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCurrentManager(Type,WeakEventManager)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the current manager for the specified manager type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static void SetCurrentManager (Type managerType, System.Windows.WeakEventManager manager);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>managerType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to set the new event manager.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>manager</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new event manager.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the SetCurrentManager method to initialize a manager, if that is required by a call to your <code>CurrentManager</code> property on a <a class=\"xref\" href=\"system.windows.weakeventmanager\" data-linktype=\"relative-path\">WeakEventManager</a> implementation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_StartListening_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_StartListening_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartListening(Object)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, starts listening for the event being managed. After the StartListening method is first called, the manager should be in the state of calling <span class=\"xref\">stem.Windows.WeakEventManager.DeliverEvent*</span> or <span class=\"xref\">stem.Windows.WeakEventManager.DeliverEventToList*</span> whenever the relevant event from the provided source is handled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void StartListening (object source);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source to begin listening on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_WeakEventManager_StopListening_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_WeakEventManager_StopListening_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StopListening(Object)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, stops listening on the provided source for the event being managed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void StopListening (object source);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source to stop listening on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.WeakEventManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.WeakEventManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.DeliverEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.DeliverEventToList\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.GetCurrentManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.Item\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.NewListenerList\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.ProtectedAddHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.ProtectedAddListener\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.ProtectedRemoveHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.ProtectedRemoveListener\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.Purge\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.ReadLock\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.Remove\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.ScheduleCleanup\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.SetCurrentManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.StartListening\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.StopListening\">\r\n<meta name=\"APIName\" content=\"System.Windows.WeakEventManager.WriteLock\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"bfa617f9-347b-dbde-d984-584ad8f62fcd\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.WeakEventManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.WeakEventManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.WeakEventManager.yml","open_to_public_contributors":true,"api_name":["System.Windows.WeakEventManager","System.Windows.WeakEventManager..ctor","System.Windows.WeakEventManager.DeliverEvent","System.Windows.WeakEventManager.DeliverEventToList","System.Windows.WeakEventManager.GetCurrentManager","System.Windows.WeakEventManager.Item","System.Windows.WeakEventManager.NewListenerList","System.Windows.WeakEventManager.ProtectedAddHandler","System.Windows.WeakEventManager.ProtectedAddListener","System.Windows.WeakEventManager.ProtectedRemoveHandler","System.Windows.WeakEventManager.ProtectedRemoveListener","System.Windows.WeakEventManager.Purge","System.Windows.WeakEventManager.ReadLock","System.Windows.WeakEventManager.Remove","System.Windows.WeakEventManager.ScheduleCleanup","System.Windows.WeakEventManager.SetCurrentManager","System.Windows.WeakEventManager.StartListening","System.Windows.WeakEventManager.StopListening","System.Windows.WeakEventManager.WriteLock"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.WeakEventManager","System::Windows::WeakEventManager","System.Windows.WeakEventManager.#ctor","System::Windows::WeakEventManager::#ctor","System.Windows.WeakEventManager.DeliverEvent","System::Windows::WeakEventManager::DeliverEvent","System.Windows.WeakEventManager.DeliverEventToList","System::Windows::WeakEventManager::DeliverEventToList","System.Windows.WeakEventManager.GetCurrentManager","System::Windows::WeakEventManager::GetCurrentManager","System.Windows.WeakEventManager.Item","System::Windows::WeakEventManager::Item","System.Windows.WeakEventManager.NewListenerList","System::Windows::WeakEventManager::NewListenerList","System.Windows.WeakEventManager.ProtectedAddHandler","System::Windows::WeakEventManager::ProtectedAddHandler","System.Windows.WeakEventManager.ProtectedAddListener","System::Windows::WeakEventManager::ProtectedAddListener","System.Windows.WeakEventManager.ProtectedRemoveHandler","System::Windows::WeakEventManager::ProtectedRemoveHandler","System.Windows.WeakEventManager.ProtectedRemoveListener","System::Windows::WeakEventManager::ProtectedRemoveListener","System.Windows.WeakEventManager.Purge","System::Windows::WeakEventManager::Purge","System.Windows.WeakEventManager.ReadLock","System::Windows::WeakEventManager::ReadLock","System.Windows.WeakEventManager.Remove","System::Windows::WeakEventManager::Remove","System.Windows.WeakEventManager.ScheduleCleanup","System::Windows::WeakEventManager::ScheduleCleanup","System.Windows.WeakEventManager.SetCurrentManager","System::Windows::WeakEventManager::SetCurrentManager","System.Windows.WeakEventManager.StartListening","System::Windows::WeakEventManager::StartListening","System.Windows.WeakEventManager.StopListening","System::Windows::WeakEventManager::StopListening","System.Windows.WeakEventManager.WriteLock","System::Windows::WeakEventManager::WriteLock"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"bfa617f9-347b-dbde-d984-584ad8f62fcd","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows/WeakEventManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WeakEventManager class | Microsoft Docs","_op_ogTitle":"WeakEventManager class","description":"Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.\n","toc_asset_id":"_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.WeakEventManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.weakeventmanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.weakeventmanager","fileRelativePath":"System.Windows.WeakEventManager.html"},"themesRelativePathToOutputRoot":"_themes/"}