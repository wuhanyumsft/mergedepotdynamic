{"content":"    \r\n    <h1 id=\"System_Runtime_InteropServices_GCHandle\">\r\n      <span class=\"lang-csharp\">GCHandle</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a way to access a managed object from unmanaged memory.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic struct GCHandle</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">GCHandle</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The GCHandle structure is used with the <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> enumeration to create a handle corresponding to any managed object. This handle can be one of four types: <code>Weak</code>, <code>WeakTrackResurrection</code>, <code>Normal</code>, or <code>Pinned</code>. When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference. Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.  </p>\n<p> You can also use GCHandle to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.  </p>\n<p> When the handle goes out of scope you must explicitly release it by calling the <a class=\"xref\" href=\"system.runtime.interopservices.gchandle#System_Runtime_InteropServices_GCHandle_Free_\" data-linktype=\"relative-path\">Free</a> method; otherwise, memory leaks may occur. When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_IsAllocated\" data-linktype=\"self-bookmark\">IsAllocated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the handle is allocated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_Target\" data-linktype=\"self-bookmark\">Target</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object this handle represents.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_AddrOfPinnedObject\" data-linktype=\"self-bookmark\">AddrOfPinnedObject()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the address of an object in a <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_Alloc_System_Object_\" data-linktype=\"self-bookmark\">Alloc(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allocates a <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handle for the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_Alloc_System_Object_System_Runtime_InteropServices_GCHandleType_\" data-linktype=\"self-bookmark\">Alloc(Object,GCHandleType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allocates a handle of the specified type for the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object is equal to the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_Free\" data-linktype=\"self-bookmark\">Free()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases a <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_FromIntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">FromIntPtr(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object created from a handle to a managed object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an identifier for the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_ToIntPtr_System_Runtime_InteropServices_GCHandle_\" data-linktype=\"self-bookmark\">ToIntPtr(GCHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the internal integer representation of a <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_op_Equality_System_Runtime_InteropServices_GCHandle_System_Runtime_InteropServices_GCHandle_\" data-linktype=\"self-bookmark\">op_Equality(GCHandle,GCHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether two <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> objects are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_op_Explicit_System_IntPtr_to_System_Runtime_InteropServices_GCHandle_\" data-linktype=\"self-bookmark\">op_Explicit(IntPtr)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_op_Explicit_System_Runtime_InteropServices_GCHandle_to_System_IntPtr_\" data-linktype=\"self-bookmark\">op_Explicit(GCHandle)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_GCHandle_op_Inequality_System_Runtime_InteropServices_GCHandle_System_Runtime_InteropServices_GCHandle_\" data-linktype=\"self-bookmark\">op_Inequality(GCHandle,GCHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether two <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> objects are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_IsAllocated\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_IsAllocated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAllocated</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the handle is allocated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAllocated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the handle is allocated; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property when using <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handles to determine if the <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> is still available. When the garbage collector collects the object, the <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handle can still be resurrected in the finalizer. In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_Target\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_Target_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Target</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object this handle represents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Target { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The object this handle represents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The handle was freed, or never initialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an <code>App</code> class that creates a handle to a managed object using the <code>GCHandle.Alloc</code> method, which prevents the managed object from being collected. A call to the <code>EnumWindows</code> method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.GCHandle#1\">Imports System\nImports System.IO\nImports System.Threading\nImports System.Windows.Forms\nImports System.Runtime.InteropServices\nImports System.Security.Permissions\n\nPublic Delegate Function CallBack(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n\n\nModule LibWrap\n\n    &#39; passing managed object as LPARAM\n    &#39; BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n    &lt;DllImport(&quot;user32.dll&quot;)&gt; _\n    Function EnumWindows(ByVal cb As CallBack, ByVal param As IntPtr) As Boolean\n    End Function\nEnd Module &#39;LibWrap\n\n\nModule App\n\n    Sub Main()\n\tRun()\n\n    End Sub\n\n    &lt;SecurityPermission(SecurityAction.Demand, UnmanagedCode:=true)&gt; _\n    Sub Run()\n\n        Dim tw As TextWriter = System.Console.Out\n        Dim gch As GCHandle = GCHandle.Alloc(tw)\n\n        Dim cewp As CallBack\n        cewp = AddressOf CaptureEnumWindowsProc\n\n        &#39; platform invoke will prevent delegate to be garbage collected\n        &#39; before call ends\n        LibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch))\n        gch.Free()\n\n    End Sub\n\n\n    Function CaptureEnumWindowsProc(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n        Dim gch As GCHandle = GCHandle.FromIntPtr(param)\n        Dim tw As TextWriter = CType(gch.Target, TextWriter)\n        tw.WriteLine(handle)\n        Return True\n\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.GCHandle#1\">using System;\nusing System.IO;\nusing System.Threading;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\nusing System.Security.Permissions;\n\npublic delegate bool CallBack(int handle, IntPtr param);\n\npublic class LibWrap\n{\n\t// passing managed object as LPARAM\n\t// BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n\n\t[DllImport(&quot;user32.dll&quot;)]\n\tpublic static extern bool EnumWindows(CallBack cb, IntPtr param);\n}\n\npublic class App\n{\n\tpublic static void Main()\n\t{\n\t\tRun();\n\t}\n\n        [SecurityPermission(SecurityAction.Demand, UnmanagedCode=true)]\n\tpublic static void Run()\n        {\n\t\tTextWriter tw = System.Console.Out;\n\t\tGCHandle gch = GCHandle.Alloc(tw);\n\n\t\tCallBack cewp = new CallBack(CaptureEnumWindowsProc);\n\n\t\t// platform invoke will prevent delegate to be garbage collected\n\t\t// before call ends\n\n\t\tLibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch));\n\t\tgch.Free();\n        }\n\n\tprivate static bool CaptureEnumWindowsProc(int handle, IntPtr param)\n\t{\n\t\tGCHandle gch = GCHandle.FromIntPtr(param);\n\t\tTextWriter tw = (TextWriter)gch.Target;\n\t\ttw.WriteLine(handle);\n\t\treturn true;\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_AddrOfPinnedObject\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_AddrOfPinnedObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddrOfPinnedObject()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the address of an object in a <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr AddrOfPinnedObject ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>The address of the pinned object as an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The handle is any type other than <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to get a stable pointer to the object. Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_Alloc_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_Alloc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Alloc(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Allocates a <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handle for the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.InteropServices.GCHandle Alloc (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that uses the <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> that protects the object from garbage collection. This <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> must be released with <span class=\"xref\">stem.Runtime.InteropServices.GCHandle.Free*</span> when it is no longer needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An instance with nonprimitive (non-blittable) members cannot be pinned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an <code>App</code> class that creates a handle to a managed object using the <code>GCHandle.Alloc</code> method, which prevents the managed object from being collected. A call to the <code>EnumWindows</code> method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.GCHandle#1\">Imports System\nImports System.IO\nImports System.Threading\nImports System.Windows.Forms\nImports System.Runtime.InteropServices\nImports System.Security.Permissions\n\nPublic Delegate Function CallBack(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n\n\nModule LibWrap\n\n    &#39; passing managed object as LPARAM\n    &#39; BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n    &lt;DllImport(&quot;user32.dll&quot;)&gt; _\n    Function EnumWindows(ByVal cb As CallBack, ByVal param As IntPtr) As Boolean\n    End Function\nEnd Module &#39;LibWrap\n\n\nModule App\n\n    Sub Main()\n\tRun()\n\n    End Sub\n\n    &lt;SecurityPermission(SecurityAction.Demand, UnmanagedCode:=true)&gt; _\n    Sub Run()\n\n        Dim tw As TextWriter = System.Console.Out\n        Dim gch As GCHandle = GCHandle.Alloc(tw)\n\n        Dim cewp As CallBack\n        cewp = AddressOf CaptureEnumWindowsProc\n\n        &#39; platform invoke will prevent delegate to be garbage collected\n        &#39; before call ends\n        LibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch))\n        gch.Free()\n\n    End Sub\n\n\n    Function CaptureEnumWindowsProc(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n        Dim gch As GCHandle = GCHandle.FromIntPtr(param)\n        Dim tw As TextWriter = CType(gch.Target, TextWriter)\n        tw.WriteLine(handle)\n        Return True\n\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.GCHandle#1\">using System;\nusing System.IO;\nusing System.Threading;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\nusing System.Security.Permissions;\n\npublic delegate bool CallBack(int handle, IntPtr param);\n\npublic class LibWrap\n{\n\t// passing managed object as LPARAM\n\t// BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n\n\t[DllImport(&quot;user32.dll&quot;)]\n\tpublic static extern bool EnumWindows(CallBack cb, IntPtr param);\n}\n\npublic class App\n{\n\tpublic static void Main()\n\t{\n\t\tRun();\n\t}\n\n        [SecurityPermission(SecurityAction.Demand, UnmanagedCode=true)]\n\tpublic static void Run()\n        {\n\t\tTextWriter tw = System.Console.Out;\n\t\tGCHandle gch = GCHandle.Alloc(tw);\n\n\t\tCallBack cewp = new CallBack(CaptureEnumWindowsProc);\n\n\t\t// platform invoke will prevent delegate to be garbage collected\n\t\t// before call ends\n\n\t\tLibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch));\n\t\tgch.Free();\n        }\n\n\tprivate static bool CaptureEnumWindowsProc(int handle, IntPtr param)\n\t{\n\t\tGCHandle gch = GCHandle.FromIntPtr(param);\n\t\tTextWriter tw = (TextWriter)gch.Target;\n\t\ttw.WriteLine(handle);\n\t\treturn true;\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_Alloc_System_Object_System_Runtime_InteropServices_GCHandleType_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_Alloc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Alloc(Object,GCHandleType)</div>        \r\n          </div>\r\n    \r\n            <p>Allocates a handle of the specified type for the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.InteropServices.GCHandle Alloc (object value, System.Runtime.InteropServices.GCHandleType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that uses the <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.runtime.interopservices.gchandletype\" data-linktype=\"relative-path\">GCHandleType</a> values, indicating the type of <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> to create.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> of the specified type. This <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> must be released with <span class=\"xref\">stem.Runtime.InteropServices.GCHandle.Free*</span> when it is no longer needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An instance with nonprimitive (non-blittable) members cannot be pinned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object is equal to the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object to compare with the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object is equal to the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> objects are equal if they point to the same memory handle.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_Free\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_Free_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Free()</div>        \r\n          </div>\r\n    \r\n            <p>Releases a <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Free ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The handle was freed or never initialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The caller must ensure that for a given handle, Free is called only once.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an <code>App</code> class that creates a handle to a managed object using the <code>GCHandle.Alloc</code> method, which prevents the managed object from being collected. A call to the <code>EnumWindows</code> method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.GCHandle#1\">Imports System\nImports System.IO\nImports System.Threading\nImports System.Windows.Forms\nImports System.Runtime.InteropServices\nImports System.Security.Permissions\n\nPublic Delegate Function CallBack(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n\n\nModule LibWrap\n\n    &#39; passing managed object as LPARAM\n    &#39; BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n    &lt;DllImport(&quot;user32.dll&quot;)&gt; _\n    Function EnumWindows(ByVal cb As CallBack, ByVal param As IntPtr) As Boolean\n    End Function\nEnd Module &#39;LibWrap\n\n\nModule App\n\n    Sub Main()\n\tRun()\n\n    End Sub\n\n    &lt;SecurityPermission(SecurityAction.Demand, UnmanagedCode:=true)&gt; _\n    Sub Run()\n\n        Dim tw As TextWriter = System.Console.Out\n        Dim gch As GCHandle = GCHandle.Alloc(tw)\n\n        Dim cewp As CallBack\n        cewp = AddressOf CaptureEnumWindowsProc\n\n        &#39; platform invoke will prevent delegate to be garbage collected\n        &#39; before call ends\n        LibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch))\n        gch.Free()\n\n    End Sub\n\n\n    Function CaptureEnumWindowsProc(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n        Dim gch As GCHandle = GCHandle.FromIntPtr(param)\n        Dim tw As TextWriter = CType(gch.Target, TextWriter)\n        tw.WriteLine(handle)\n        Return True\n\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.GCHandle#1\">using System;\nusing System.IO;\nusing System.Threading;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\nusing System.Security.Permissions;\n\npublic delegate bool CallBack(int handle, IntPtr param);\n\npublic class LibWrap\n{\n\t// passing managed object as LPARAM\n\t// BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n\n\t[DllImport(&quot;user32.dll&quot;)]\n\tpublic static extern bool EnumWindows(CallBack cb, IntPtr param);\n}\n\npublic class App\n{\n\tpublic static void Main()\n\t{\n\t\tRun();\n\t}\n\n        [SecurityPermission(SecurityAction.Demand, UnmanagedCode=true)]\n\tpublic static void Run()\n        {\n\t\tTextWriter tw = System.Console.Out;\n\t\tGCHandle gch = GCHandle.Alloc(tw);\n\n\t\tCallBack cewp = new CallBack(CaptureEnumWindowsProc);\n\n\t\t// platform invoke will prevent delegate to be garbage collected\n\t\t// before call ends\n\n\t\tLibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch));\n\t\tgch.Free();\n        }\n\n\tprivate static bool CaptureEnumWindowsProc(int handle, IntPtr param)\n\t{\n\t\tGCHandle gch = GCHandle.FromIntPtr(param);\n\t\tTextWriter tw = (TextWriter)gch.Target;\n\t\ttw.WriteLine(handle);\n\t\treturn true;\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_FromIntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_FromIntPtr_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromIntPtr(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object created from a handle to a managed object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.InteropServices.GCHandle FromIntPtr (IntPtr value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> handle to a managed object to create a <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object that corresponds to the value parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>value</code> parameter is <a class=\"xref\" href=\"system.intptr#System_IntPtr_Zero\" data-linktype=\"relative-path\">Zero</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an <code>App</code> class that creates a handle to a managed object using the <code>GCHandle.Alloc</code> method, which prevents the managed object from being collected. A call to the <code>EnumWindows</code> method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> object. The unmanaged function passes the type back to the caller as a parameter of the callback function.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.GCHandle#1\">Imports System\nImports System.IO\nImports System.Threading\nImports System.Windows.Forms\nImports System.Runtime.InteropServices\nImports System.Security.Permissions\n\nPublic Delegate Function CallBack(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n\n\nModule LibWrap\n\n    &#39; passing managed object as LPARAM\n    &#39; BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n    &lt;DllImport(&quot;user32.dll&quot;)&gt; _\n    Function EnumWindows(ByVal cb As CallBack, ByVal param As IntPtr) As Boolean\n    End Function\nEnd Module &#39;LibWrap\n\n\nModule App\n\n    Sub Main()\n\tRun()\n\n    End Sub\n\n    &lt;SecurityPermission(SecurityAction.Demand, UnmanagedCode:=true)&gt; _\n    Sub Run()\n\n        Dim tw As TextWriter = System.Console.Out\n        Dim gch As GCHandle = GCHandle.Alloc(tw)\n\n        Dim cewp As CallBack\n        cewp = AddressOf CaptureEnumWindowsProc\n\n        &#39; platform invoke will prevent delegate to be garbage collected\n        &#39; before call ends\n        LibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch))\n        gch.Free()\n\n    End Sub\n\n\n    Function CaptureEnumWindowsProc(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n        Dim gch As GCHandle = GCHandle.FromIntPtr(param)\n        Dim tw As TextWriter = CType(gch.Target, TextWriter)\n        tw.WriteLine(handle)\n        Return True\n\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.GCHandle#1\">using System;\nusing System.IO;\nusing System.Threading;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\nusing System.Security.Permissions;\n\npublic delegate bool CallBack(int handle, IntPtr param);\n\npublic class LibWrap\n{\n\t// passing managed object as LPARAM\n\t// BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n\n\t[DllImport(&quot;user32.dll&quot;)]\n\tpublic static extern bool EnumWindows(CallBack cb, IntPtr param);\n}\n\npublic class App\n{\n\tpublic static void Main()\n\t{\n\t\tRun();\n\t}\n\n        [SecurityPermission(SecurityAction.Demand, UnmanagedCode=true)]\n\tpublic static void Run()\n        {\n\t\tTextWriter tw = System.Console.Out;\n\t\tGCHandle gch = GCHandle.Alloc(tw);\n\n\t\tCallBack cewp = new CallBack(CaptureEnumWindowsProc);\n\n\t\t// platform invoke will prevent delegate to be garbage collected\n\t\t// before call ends\n\n\t\tLibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch));\n\t\tgch.Free();\n        }\n\n\tprivate static bool CaptureEnumWindowsProc(int handle, IntPtr param)\n\t{\n\t\tGCHandle gch = GCHandle.FromIntPtr(param);\n\t\tTextWriter tw = (TextWriter)gch.Target;\n\t\ttw.WriteLine(handle);\n\t\treturn true;\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_GetHashCode\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an identifier for the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An identifier for the current <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetHashCode method returns an integer representation of the internal memory handle encapsulated by the <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> structure.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_ToIntPtr_System_Runtime_InteropServices_GCHandle_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_ToIntPtr_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToIntPtr(GCHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the internal integer representation of a <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static IntPtr ToIntPtr (System.Runtime.InteropServices.GCHandle value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object to retrieve an internal integer representation from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> object that represents a <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an <code>App</code> class that creates a handle to a managed object using the <code>GCHandle.Alloc</code> method, which prevents the managed object from being collected. A call to the <code>EnumWindows</code> method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> object. The unmanaged function passes the type back to the caller as a parameter of the callback function.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.GCHandle#1\">Imports System\nImports System.IO\nImports System.Threading\nImports System.Windows.Forms\nImports System.Runtime.InteropServices\nImports System.Security.Permissions\n\nPublic Delegate Function CallBack(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n\n\nModule LibWrap\n\n    &#39; passing managed object as LPARAM\n    &#39; BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n    &lt;DllImport(&quot;user32.dll&quot;)&gt; _\n    Function EnumWindows(ByVal cb As CallBack, ByVal param As IntPtr) As Boolean\n    End Function\nEnd Module &#39;LibWrap\n\n\nModule App\n\n    Sub Main()\n\tRun()\n\n    End Sub\n\n    &lt;SecurityPermission(SecurityAction.Demand, UnmanagedCode:=true)&gt; _\n    Sub Run()\n\n        Dim tw As TextWriter = System.Console.Out\n        Dim gch As GCHandle = GCHandle.Alloc(tw)\n\n        Dim cewp As CallBack\n        cewp = AddressOf CaptureEnumWindowsProc\n\n        &#39; platform invoke will prevent delegate to be garbage collected\n        &#39; before call ends\n        LibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch))\n        gch.Free()\n\n    End Sub\n\n\n    Function CaptureEnumWindowsProc(ByVal handle As Integer, ByVal param As IntPtr) As Boolean\n        Dim gch As GCHandle = GCHandle.FromIntPtr(param)\n        Dim tw As TextWriter = CType(gch.Target, TextWriter)\n        tw.WriteLine(handle)\n        Return True\n\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.GCHandle#1\">using System;\nusing System.IO;\nusing System.Threading;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\nusing System.Security.Permissions;\n\npublic delegate bool CallBack(int handle, IntPtr param);\n\npublic class LibWrap\n{\n\t// passing managed object as LPARAM\n\t// BOOL EnumWindows(WNDENUMPROC lpEnumFunc, LPARAM lParam);\n\n\t[DllImport(&quot;user32.dll&quot;)]\n\tpublic static extern bool EnumWindows(CallBack cb, IntPtr param);\n}\n\npublic class App\n{\n\tpublic static void Main()\n\t{\n\t\tRun();\n\t}\n\n        [SecurityPermission(SecurityAction.Demand, UnmanagedCode=true)]\n\tpublic static void Run()\n        {\n\t\tTextWriter tw = System.Console.Out;\n\t\tGCHandle gch = GCHandle.Alloc(tw);\n\n\t\tCallBack cewp = new CallBack(CaptureEnumWindowsProc);\n\n\t\t// platform invoke will prevent delegate to be garbage collected\n\t\t// before call ends\n\n\t\tLibWrap.EnumWindows(cewp, GCHandle.ToIntPtr(gch));\n\t\tgch.Free();\n        }\n\n\tprivate static bool CaptureEnumWindowsProc(int handle, IntPtr param)\n\t{\n\t\tGCHandle gch = GCHandle.FromIntPtr(param);\n\t\tTextWriter tw = (TextWriter)gch.Target;\n\t\ttw.WriteLine(handle);\n\t\treturn true;\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_op_Equality_System_Runtime_InteropServices_GCHandle_System_Runtime_InteropServices_GCHandle_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(GCHandle,GCHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether two <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> objects are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object to compare with the <code>b</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object to compare with the <code>a</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>a</code> and <code>b</code> parameters are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_op_Explicit_System_IntPtr_to_System_Runtime_InteropServices_GCHandle_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_op_Explicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Explicit(IntPtr)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.InteropServices.GCHandle op_Explicit (IntPtr value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_op_Explicit_System_Runtime_InteropServices_GCHandle_to_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_op_Explicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Explicit(GCHandle)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static IntPtr op_Explicit (System.Runtime.InteropServices.GCHandle value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_GCHandle_op_Inequality_System_Runtime_InteropServices_GCHandle_System_Runtime_InteropServices_GCHandle_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_GCHandle_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(GCHandle,GCHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether two <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> objects are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object to compare with the <code>b</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.interopservices.gchandle\" data-linktype=\"relative-path\">GCHandle</a> object to compare with the <code>a</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>a</code> and <code>b</code> parameters are not equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.InteropServices.GCHandle.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.InteropServices.GCHandle.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.Alloc\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.Equals\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.Free\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.FromIntPtr\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.IsAllocated\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.op_Explicit\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.op_op_Explicit\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.Target\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.GCHandle.ToIntPtr\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4dedecd8-209d-8066-bffe-fe5174111bce\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a way to access a managed object from unmanaged memory.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.InteropServices/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.InteropServices.GCHandle\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.InteropServices.GCHandle.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.InteropServices.GCHandle.yml","open_to_public_contributors":true,"api_name":["System.Runtime.InteropServices.GCHandle","System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject","System.Runtime.InteropServices.GCHandle.Alloc","System.Runtime.InteropServices.GCHandle.Equals","System.Runtime.InteropServices.GCHandle.Free","System.Runtime.InteropServices.GCHandle.FromIntPtr","System.Runtime.InteropServices.GCHandle.GetHashCode","System.Runtime.InteropServices.GCHandle.IsAllocated","System.Runtime.InteropServices.GCHandle.op_Equality","System.Runtime.InteropServices.GCHandle.op_op_Equality","System.Runtime.InteropServices.GCHandle.op_Explicit","System.Runtime.InteropServices.GCHandle.op_op_Explicit","System.Runtime.InteropServices.GCHandle.op_Inequality","System.Runtime.InteropServices.GCHandle.op_op_Inequality","System.Runtime.InteropServices.GCHandle.Target","System.Runtime.InteropServices.GCHandle.ToIntPtr"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.InteropServices.GCHandle","System::Runtime::InteropServices::GCHandle","System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject","System::Runtime::InteropServices::GCHandle::AddrOfPinnedObject","System.Runtime.InteropServices.GCHandle.Alloc","System::Runtime::InteropServices::GCHandle::Alloc","System.Runtime.InteropServices.GCHandle.Equals","System::Runtime::InteropServices::GCHandle::Equals","System.Runtime.InteropServices.GCHandle.Free","System::Runtime::InteropServices::GCHandle::Free","System.Runtime.InteropServices.GCHandle.FromIntPtr","System::Runtime::InteropServices::GCHandle::FromIntPtr","System.Runtime.InteropServices.GCHandle.GetHashCode","System::Runtime::InteropServices::GCHandle::GetHashCode","System.Runtime.InteropServices.GCHandle.IsAllocated","System::Runtime::InteropServices::GCHandle::IsAllocated","System.Runtime.InteropServices.GCHandle.op_Equality","System::Runtime::InteropServices::GCHandle::op_Equality","System.Runtime.InteropServices.GCHandle.op_Explicit","System::Runtime::InteropServices::GCHandle::op_Explicit","System.Runtime.InteropServices.GCHandle.op_Inequality","System::Runtime::InteropServices::GCHandle::op_Inequality","System.Runtime.InteropServices.GCHandle.Target","System::Runtime::InteropServices::GCHandle::Target","System.Runtime.InteropServices.GCHandle.ToIntPtr","System::Runtime::InteropServices::GCHandle::ToIntPtr"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4dedecd8-209d-8066-bffe-fe5174111bce","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.InteropServices/GCHandle.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GCHandle struct | Microsoft Docs","_op_ogTitle":"GCHandle struct","description":"Provides a way to access a managed object from unmanaged memory.\n","toc_asset_id":"_splitted/System.Runtime.InteropServices/toc.json","toc_rel":"_splitted/System.Runtime.InteropServices/toc.json","source_url":"","ms.assetid":"System.Runtime.InteropServices.GCHandle","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.interopservices.gchandle","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.interopservices.gchandle","fileRelativePath":"System.Runtime.InteropServices.GCHandle.html"},"themesRelativePathToOutputRoot":"_themes/"}