{"content":"    \r\n    <h1 id=\"System_ServiceModel_Channels_IReplyChannel\">\r\n      <span class=\"lang-csharp\">IReplyChannel</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IReplyChannel : System.ServiceModel.Channels.IChannel</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IReplyChannel interface includes synchronous and asynchronous variants of a <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> method return an <a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> that can be used to construct replies to received requests.  </p>\n<p> The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.  </p>\n<p> An IReplyChannel is not necessarily bound to a single sender. Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.  </p>\n<p> The pull model is used with an IReplyChannel to receive messages. This model consists of calling <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> (or one of its variants) and then waiting for a message to arrive.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_LocalAddress\" data-linktype=\"self-bookmark\">LocalAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the address on which this reply channel receives messages.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginReceiveRequest(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous operation to receive an available request with a default timeout.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginReceiveRequest(TimeSpan,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous operation to receive an available request with a specified timeout.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_BeginTryReceiveRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_BeginWaitForRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginWaitForRequest(TimeSpan,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request operation that has a specified time out and state object associated with it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_EndReceiveRequest_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndReceiveRequest(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Completes an asynchronous operation to receive an available request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_EndTryReceiveRequest_System_IAsyncResult_System_ServiceModel_Channels_RequestContext__\" data-linktype=\"self-bookmark\">EndTryReceiveRequest(IAsyncResult,RequestContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Completes the specified asynchronous operation to receive a request message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_EndWaitForRequest_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndWaitForRequest(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Completes the specified asynchronous wait-for-a-request message operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest\" data-linktype=\"self-bookmark\">ReceiveRequest()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the context of the request received, if one is available. If a context is not available, waits until there is one available.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_System_TimeSpan_\" data-linktype=\"self-bookmark\">ReceiveRequest(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the context of the request received, if one is available. If a context is not available, waits until there is one available.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_TryReceiveRequest_System_TimeSpan_System_ServiceModel_Channels_RequestContext__\" data-linktype=\"self-bookmark\">TryReceiveRequest(TimeSpan,RequestContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether a request is received before a specified interval of time elapses.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IReplyChannel_WaitForRequest_System_TimeSpan_\" data-linktype=\"self-bookmark\">WaitForRequest(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether a request message is received before a specified interval of time elapses.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_LocalAddress\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_LocalAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets the address on which this reply channel receives messages.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.EndpointAddress LocalAddress { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.endpointaddress\" data-linktype=\"relative-path\">EndpointAddress</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.endpointaddress\" data-linktype=\"relative-path\">EndpointAddress</a> on which this reply channel receives messages.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this property:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#0\">            public EndpointAddress LocalAddress\n            {\n                get\n                {\n                    return this.InnerChannel.LocalAddress;\n                }\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginReceiveRequest(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous operation to receive an available request with a default timeout.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginReceiveRequest (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that receives the notification of the asynchronous receive that a request operation completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous reception of the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginReceiveRequest method implements the standard pattern for invoking <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest\" data-linktype=\"relative-path\">ReceiveRequest()</a> asynchronously. The default timeout is 1 minute. If a receive timeout is set on the binding used to configure the connection, then that value is used. Use <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"relative-path\">BeginReceiveRequest(TimeSpan,AsyncCallback,Object)</a> if you want to specify an explicit timeout with the call that overrides these other values.  </p>\n<p> If the request message received is larger that the maximum message size allowed by the binding being used, a <a class=\"xref\" href=\"system.servicemodel.quotaexceededexception\" data-linktype=\"relative-path\">QuotaExceededException</a> is thrown. The maximum message size is set by the <a class=\"xref\" href=\"system.servicemodel.channels.transportbindingelement#System_ServiceModel_Channels_TransportBindingElement_MaxReceivedMessageSize_\" data-linktype=\"relative-path\">MaxReceivedMessageSize</a> property. The default value is 65536 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#1\">            public IAsyncResult BeginReceiveRequest(AsyncCallback callback, object state)\n            {\n                return BeginReceiveRequest(DefaultReceiveTimeout, callback, state);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_System_TimeSpan_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_BeginReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginReceiveRequest(TimeSpan,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous operation to receive an available request with a specified timeout.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies the interval of time to wait for the reception of an available request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that receives the notification of the asynchronous receive that a request operation completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous reception of the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginReceiveRequest method implements the standard pattern for invoking <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_System_TimeSpan_\" data-linktype=\"relative-path\">ReceiveRequest(TimeSpan)</a>asynchronously. The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.  </p>\n<p> If the request message received is larger that the maximum message size allowed by the binding being used, a <a class=\"xref\" href=\"system.servicemodel.quotaexceededexception\" data-linktype=\"relative-path\">QuotaExceededException</a> is thrown. The maximum message size is set by the <a class=\"xref\" href=\"system.servicemodel.channels.transportbindingelement#System_ServiceModel_Channels_TransportBindingElement_MaxReceivedMessageSize_\" data-linktype=\"relative-path\">MaxReceivedMessageSize</a> property. The default value is 65536 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#2\">            public IAsyncResult BeginReceiveRequest(TimeSpan timeout, AsyncCallback callback, object state)\n            {\n                ReceiveRequestAsyncResult result = new ReceiveRequestAsyncResult(this, timeout, callback, state);\n                result.Begin();\n                return result;\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_BeginTryReceiveRequest_System_TimeSpan_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_BeginTryReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginTryReceiveRequest (TimeSpan timeout, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies how long the receive request operation has to complete before timing out and returning <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that receives the notification of the asynchronous receive that a request operation completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous receive request operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the asynchronous BeginTryReceiveRequest method when you need the application processing to continue without waiting. Use one of the synchronous <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_TryReceiveRequest_System_TimeSpan_System_ServiceModel_Channels_RequestContext__\" data-linktype=\"relative-path\">TryReceiveRequest(TimeSpan,RequestContext)</a> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.  </p>\n<p> This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time out occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#5\">            public IAsyncResult BeginTryReceiveRequest(TimeSpan timeout, AsyncCallback callback, object state)\n            {\n                TryReceiveRequestAsyncResult result = new TryReceiveRequestAsyncResult(this, timeout, callback, state);\n                result.Begin();\n                return result;\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_BeginWaitForRequest_System_TimeSpan_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_BeginWaitForRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginWaitForRequest(TimeSpan,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request operation that has a specified time out and state object associated with it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginWaitForRequest (TimeSpan timeout, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies the interval of time to wait for the reception of an available request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that receives the notification of the asynchronous receive that a request operation completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous operation to wait for a request message to arrive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the synchronous <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_WaitForRequest_System_TimeSpan_\" data-linktype=\"relative-path\">WaitForRequest(TimeSpan)</a> method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue. The thread is blocked up to the specified <code>timeout</code>.  </p>\n<p> This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a request message becomes available in the channel or the time out occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#10\">            public IAsyncResult BeginWaitForRequest(TimeSpan timeout, AsyncCallback callback, object state)\n            {\n                return this.InnerChannel.BeginWaitForRequest(timeout, callback, state);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_EndReceiveRequest_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_EndReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndReceiveRequest(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Completes an asynchronous operation to receive an available request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.Channels.RequestContext EndReceiveRequest (IAsyncResult result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> returned by a call to the <span class=\"xref\">stem.ServiceModel.Channels.IInputChannel.BeginReceive*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> used to construct a reply to the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the request message received is larger that the maximum message size allowed by the binding being used, a <a class=\"xref\" href=\"system.servicemodel.quotaexceededexception\" data-linktype=\"relative-path\">QuotaExceededException</a> is thrown. The maximum message size is set by the <a class=\"xref\" href=\"system.servicemodel.channels.transportbindingelement#System_ServiceModel_Channels_TransportBindingElement_MaxReceivedMessageSize_\" data-linktype=\"relative-path\">MaxReceivedMessageSize</a> property. The default value is 65536 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#3\">            public RequestContext EndReceiveRequest(IAsyncResult result)\n            {\n                return ReceiveRequestAsyncResult.End(result);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_EndTryReceiveRequest_System_IAsyncResult_System_ServiceModel_Channels_RequestContext__\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_EndTryReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndTryReceiveRequest(IAsyncResult,RequestContext)</div>        \r\n          </div>\r\n    \r\n            <p>Completes the specified asynchronous operation to receive a request message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EndTryReceiveRequest (IAsyncResult result, out System.ServiceModel.Channels.RequestContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> returned by a call to the <span class=\"xref\">stem.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a request message is received before the specified interval of time elapses; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#6\">            public bool EndTryReceiveRequest(IAsyncResult result, out RequestContext requestContext)\n            {\n                return TryReceiveRequestAsyncResult.End(result, out requestContext);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_EndWaitForRequest_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_EndWaitForRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndWaitForRequest(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Completes the specified asynchronous wait-for-a-request message operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EndWaitForRequest (IAsyncResult result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that identifies the <span class=\"xref\">stem.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)</span> operation to finish, and from which to retrieve an end result.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a request is received before the specified interval of time elapses; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#11\">            public bool EndWaitForRequest(IAsyncResult result)\n            {\n                return this.InnerChannel.EndWaitForRequest(result);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_ReceiveRequest\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReceiveRequest()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the context of the request received, if one is available. If a context is not available, waits until there is one available.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.Channels.RequestContext ReceiveRequest ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> used to construct replies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> encapsulates the request message and a mechanism for replying to that message.  </p>\n<p> ReceiveRequest can be called multiple times or concurrently. Only one ReceiveRequest call completes per request received.  </p>\n<p> If the request message received is larger that the maximum message size allowed by the binding being used, a <a class=\"xref\" href=\"system.servicemodel.quotaexceededexception\" data-linktype=\"relative-path\">QuotaExceededException</a> is thrown. The maximum message size is set by the <a class=\"xref\" href=\"system.servicemodel.channels.transportbindingelement#System_ServiceModel_Channels_TransportBindingElement_MaxReceivedMessageSize_\" data-linktype=\"relative-path\">MaxReceivedMessageSize</a> property. The default value is 65536 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#7\">            public RequestContext ReceiveRequest()\n            {\n                return ReceiveRequest(DefaultReceiveTimeout);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReceiveRequest(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the context of the request received, if one is available. If a context is not available, waits until there is one available.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceModel.Channels.RequestContext ReceiveRequest (TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies how long the receive of a request operation has to complete before timing out and returning <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> used to construct replies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> encapsulates the request message and a mechanism for replying to that message.  </p>\n<p> <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> can be called multiple times or concurrently. Only one <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> call completes per request received.  </p>\n<p> If the request message received is larger that the maximum message size allowed by the binding being used, a <a class=\"xref\" href=\"system.servicemodel.quotaexceededexception\" data-linktype=\"relative-path\">QuotaExceededException</a> is thrown. The maximum message size is set by the <a class=\"xref\" href=\"system.servicemodel.channels.transportbindingelement#System_ServiceModel_Channels_TransportBindingElement_MaxReceivedMessageSize_\" data-linktype=\"relative-path\">MaxReceivedMessageSize</a> property. The default value is 65536 bytes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#8\">            public RequestContext ReceiveRequest(TimeSpan timeout)\n            {\n                RequestContext requestContext;\n                while (true)\n                {\n                    requestContext = this.InnerChannel.ReceiveRequest(timeout);\n                    if (ProcessRequestContext(ref requestContext))\n                    {\n                        break;\n                    }\n                }\n\n                return requestContext;\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_TryReceiveRequest_System_TimeSpan_System_ServiceModel_Channels_RequestContext__\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_TryReceiveRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryReceiveRequest(TimeSpan,RequestContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether a request is received before a specified interval of time elapses.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TryReceiveRequest (TimeSpan timeout, out System.ServiceModel.Channels.RequestContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies how long the receive of a request operation has to complete before timing out and returning <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.servicemodel.channels.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a request message is received before the specified interval of time elapses; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use TryReceiveRequest when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue. The thread is blocked up to the specified <code>timeout</code>. If you need the application processing to continue without waiting, use the asynchronous <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_BeginTryReceiveRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"relative-path\">BeginTryReceiveRequest(TimeSpan,AsyncCallback,Object)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#4\">            public bool TryReceiveRequest(TimeSpan timeout, out RequestContext requestContext)\n            {\n                bool result;\n\n                while (true)\n                {\n                    result = this.InnerChannel.TryReceiveRequest(timeout, out requestContext);\n                    if (!result || ProcessRequestContext(ref requestContext))\n                    {\n                        break;\n                    }\n                }\n\n                return result;\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IReplyChannel_WaitForRequest_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IReplyChannel_WaitForRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitForRequest(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether a request message is received before a specified interval of time elapses.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool WaitForRequest (TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> that specifies how long a request operation has to complete before timing out and returning <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a request is received before the specified interval of time elapses; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling WaitForRequest does not result in a request message being received or processed in any way.  </p>\n<p> The <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_BeginWaitForRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"relative-path\">BeginWaitForRequest(TimeSpan,AsyncCallback,Object)</a> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction. When using just <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> normally for this, the user must create the transaction, and then call <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> and hope the message arrives before the transaction times out, which may not be possible.  </p>\n<p> Instead, the user can call WaitForRequest and specify the time out (even infinite), then when a message arrives they can open the transaction, call <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_ReceiveRequest_\" data-linktype=\"relative-path\">ReceiveRequest</a> and be confident that they can get the message back before the transaction expires.  </p>\n<p> Use WaitForRequest when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue. The thread is blocked up to the specified <code>timeout</code>. If you need the application processing to continue without waiting, use the asynchronous <a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel#System_ServiceModel_Channels_IReplyChannel_BeginWaitForRequest_System_TimeSpan_System_AsyncCallback_System_Object_\" data-linktype=\"relative-path\">BeginWaitForRequest(TimeSpan,AsyncCallback,Object)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code illustrates how to implement this method:  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_MessageInterceptor#9\">            public bool WaitForRequest(TimeSpan timeout)\n            {\n                return this.InnerChannel.WaitForRequest(timeout);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Channels.IReplyChannel.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Channels.IReplyChannel.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.LocalAddress\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.ReceiveRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IReplyChannel.WaitForRequest\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b33265d5-d748-a840-25de-032a14b610be\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Channels/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Channels.IReplyChannel\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Channels.IReplyChannel.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Channels.IReplyChannel.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Channels.IReplyChannel","System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest","System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest","System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest","System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest","System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest","System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest","System.ServiceModel.Channels.IReplyChannel.LocalAddress","System.ServiceModel.Channels.IReplyChannel.ReceiveRequest","System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest","System.ServiceModel.Channels.IReplyChannel.WaitForRequest"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Channels.IReplyChannel","System::ServiceModel::Channels::IReplyChannel","System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest","System::ServiceModel::Channels::IReplyChannel::BeginReceiveRequest","System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest","System::ServiceModel::Channels::IReplyChannel::BeginTryReceiveRequest","System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest","System::ServiceModel::Channels::IReplyChannel::BeginWaitForRequest","System.ServiceModel.Channels.IReplyChannel.EndReceiveRequest","System::ServiceModel::Channels::IReplyChannel::EndReceiveRequest","System.ServiceModel.Channels.IReplyChannel.EndTryReceiveRequest","System::ServiceModel::Channels::IReplyChannel::EndTryReceiveRequest","System.ServiceModel.Channels.IReplyChannel.EndWaitForRequest","System::ServiceModel::Channels::IReplyChannel::EndWaitForRequest","System.ServiceModel.Channels.IReplyChannel.LocalAddress","System::ServiceModel::Channels::IReplyChannel::LocalAddress","System.ServiceModel.Channels.IReplyChannel.ReceiveRequest","System::ServiceModel::Channels::IReplyChannel::ReceiveRequest","System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest","System::ServiceModel::Channels::IReplyChannel::TryReceiveRequest","System.ServiceModel.Channels.IReplyChannel.WaitForRequest","System::ServiceModel::Channels::IReplyChannel::WaitForRequest"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b33265d5-d748-a840-25de-032a14b610be","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Channels/IReplyChannel.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IReplyChannel interface | Microsoft Docs","_op_ogTitle":"IReplyChannel interface","description":"Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.\n","toc_asset_id":"_splitted/System.ServiceModel.Channels/toc.json","toc_rel":"_splitted/System.ServiceModel.Channels/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Channels.IReplyChannel","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.channels.ireplychannel","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.channels.ireplychannel","fileRelativePath":"System.ServiceModel.Channels.IReplyChannel.html"},"themesRelativePathToOutputRoot":"_themes/"}