{"content":"    \r\n    <h1 id=\"System_Xml_IFragmentCapableXmlDictionaryWriter\">\r\n      <span class=\"lang-csharp\">IFragmentCapableXmlDictionaryWriter</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains properties and methods that when implemented by a <a class=\"xref\" href=\"system.xml.xmldictionarywriter\" data-linktype=\"relative-path\">XmlDictionaryWriter</a>, allows processing of XML fragments.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IFragmentCapableXmlDictionaryWriter</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class defines the properties and methods related to the capability of an <a class=\"xref\" href=\"system.xml.xmldictionarywriter\" data-linktype=\"relative-path\">XmlDictionaryWriter</a> to redirect part of its output (a &#39;fragment&#39;) to a different stream than the stream it was created with and to directly insert such a fragment captured by redirection back into the main stream of the same writer at a later point.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_IFragmentCapableXmlDictionaryWriter_CanFragment\" data-linktype=\"self-bookmark\">CanFragment</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xml.xmldictionarywriter\" data-linktype=\"relative-path\">XmlDictionaryWriter</a> can process XML fragments.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_IFragmentCapableXmlDictionaryWriter_EndFragment\" data-linktype=\"self-bookmark\">EndFragment()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends the processing of an XML fragment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_IFragmentCapableXmlDictionaryWriter_StartFragment_System_IO_Stream_System_Boolean_\" data-linktype=\"self-bookmark\">StartFragment(Stream,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts the processing of an XML fragment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_IFragmentCapableXmlDictionaryWriter_WriteFragment_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteFragment(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an XML fragment to the underlying stream of the writer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_CanFragment\">\r\n    \r\n            <a id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_CanFragment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanFragment</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xml.xmldictionarywriter\" data-linktype=\"relative-path\">XmlDictionaryWriter</a> can process XML fragments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanFragment { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xml.xmldictionarywriter\" data-linktype=\"relative-path\">XmlDictionaryWriter</a> can process XML fragments; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Returns t<code>r</code>ue if the writer that implements this interface can generate and accept XML fragments.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_EndFragment\">\r\n    \r\n            <a id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_EndFragment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndFragment()</div>        \r\n          </div>\r\n    \r\n            <p>Ends the processing of an XML fragment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndFragment ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Stops redirecting output to the stream supplied by the matching <code>StartFragment</code> call. After this call, the XML writing output goes to the stream originally used by the writer before the <code>StartFragment</code> call.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_StartFragment_System_IO_Stream_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_StartFragment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartFragment(Stream,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Starts the processing of an XML fragment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to write to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>generateSelfContainedTextFragment</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>true</code>, any namespaces declared outside the fragment is declared again if used inside of it; if <code>false</code> the namespaces are not declared again.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Temporarily starts redirecting the writing of the XML output to the supplied stream until <code>EndFragment</code> is called. If <code>generateSelfContainedTextFragment</code> is <code>true</code>, then the redirected XML output is always text XML and is self-contained in terms of its namespace context. <code>StartFragment</code>() calls cannot be nested.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_WriteFragment_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_IFragmentCapableXmlDictionaryWriter_WriteFragment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFragment(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an XML fragment to the underlying stream of the writer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteFragment (byte[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer to write to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting position from which to write in <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to be written to the <code>buffer</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Writes a fragment captured between <code>StartFragment</code> and <code>EndFragment</code> and calls back into the XmlDictionaryWriter&#39;s main stream. The fragment written is <code>count</code> bytes starting at the index <code>offset</code> from the supplied <code>buffer</code>. The behavior is undefined if the supplied fragment was not captured using this writer instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code>MemoryStream stream = new MemoryStream();  \nMemoryStream fragmentStream = new MemoryStream();  \nXmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  \nIXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  \nif (fragmentWriter == null || !fragmentWriter.CanFragment)  \n{  \nConsole.WriteLine(&quot;This writer doesn&#39;t support fragments&quot;);  \nreturn;  \n}  \nwriter.WriteStartElement(&quot;Root&quot;);  \nfragmentWriter.StartFragment(fragmentStream, false);  \nwriter.WriteStartElement(&quot;Body&quot;);  \nwriter.WriteString(&quot;This is my body&quot;);  \nwriter.WriteEndElement();  \nfragmentWriter.EndFragment();  \nwriter.WriteStartElement(&quot;CharsInTheBody&quot;);  \nwriter.WriteValue(fragmentStream.Length);  \nwriter.WriteEndElement();  \nfragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  \nwriter.WriteEndElement(); // Root  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.IFragmentCapableXmlDictionaryWriter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.IFragmentCapableXmlDictionaryWriter.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.IFragmentCapableXmlDictionaryWriter\">\r\n<meta name=\"APIName\" content=\"System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment\">\r\n<meta name=\"APIName\" content=\"System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment\">\r\n<meta name=\"APIName\" content=\"System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment\">\r\n<meta name=\"APIName\" content=\"System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Serialization.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2e2cd358-bcb5-3769-c828-c42d41ff70e9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains properties and methods that when implemented by a , allows processing of XML fragments.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.IFragmentCapableXmlDictionaryWriter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.IFragmentCapableXmlDictionaryWriter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.IFragmentCapableXmlDictionaryWriter.yml","open_to_public_contributors":true,"api_name":["System.Xml.IFragmentCapableXmlDictionaryWriter","System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment","System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment","System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment","System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment"],"api_location":["System.Runtime.Serialization.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.IFragmentCapableXmlDictionaryWriter","System::Xml::IFragmentCapableXmlDictionaryWriter","System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment","System::Xml::IFragmentCapableXmlDictionaryWriter::CanFragment","System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment","System::Xml::IFragmentCapableXmlDictionaryWriter::EndFragment","System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment","System::Xml::IFragmentCapableXmlDictionaryWriter::StartFragment","System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment","System::Xml::IFragmentCapableXmlDictionaryWriter::WriteFragment"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2e2cd358-bcb5-3769-c828-c42d41ff70e9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/IFragmentCapableXmlDictionaryWriter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IFragmentCapableXmlDictionaryWriter interface | Microsoft Docs","_op_ogTitle":"IFragmentCapableXmlDictionaryWriter interface","description":"Contains properties and methods that when implemented by a , allows processing of XML fragments.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.IFragmentCapableXmlDictionaryWriter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.ifragmentcapablexmldictionarywriter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.ifragmentcapablexmldictionarywriter","fileRelativePath":"System.Xml.IFragmentCapableXmlDictionaryWriter.html"},"themesRelativePathToOutputRoot":"_themes/"}