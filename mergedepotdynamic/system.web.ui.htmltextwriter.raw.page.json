{"content":"    \r\n    <h1 id=\"System_Web_UI_HtmlTextWriter\">\r\n      <span class=\"lang-csharp\">HtmlTextWriter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Writes markup characters and text to an ASP.NET server control output stream. This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class HtmlTextWriter : System.IO.TextWriter</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HtmlTextWriter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_CoreNewLine\" data-linktype=\"relative-path\">CoreNewLine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_FormatProvider\" data-linktype=\"relative-path\">FormatProvider</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Null\" data-linktype=\"relative-path\">Null</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Synchronized_System_IO_TextWriter_\" data-linktype=\"relative-path\">Synchronized(TextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Decimal_\" data-linktype=\"relative-path\">Write(Decimal)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_String_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">Write(String,Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_UInt32_\" data-linktype=\"relative-path\">Write(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_UInt64_\" data-linktype=\"relative-path\">Write(UInt64)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char_\" data-linktype=\"relative-path\">WriteAsync(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char___\" data-linktype=\"relative-path\">WriteAsync(Char[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Char[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_String_\" data-linktype=\"relative-path\">WriteAsync(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Decimal_\" data-linktype=\"relative-path\">WriteLine(Decimal)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">WriteLine(String,Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_UInt64_\" data-linktype=\"relative-path\">WriteLine(UInt64)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync\" data-linktype=\"relative-path\">WriteLineAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char_\" data-linktype=\"relative-path\">WriteLineAsync(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char___\" data-linktype=\"relative-path\">WriteLineAsync(Char[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteLineAsync(Char[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_String_\" data-linktype=\"relative-path\">WriteLineAsync(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The HtmlTextWriter class is used to render HTML 4.0 to desktop browsers. The HtmlTextWriter is also the base class for all markup writers in the <a class=\"xref\" href=\"system.web.ui\" data-linktype=\"relative-path\">System.Web.UI</a> namespace, including the <a class=\"xref\" href=\"system.web.ui.chtmltextwriter\" data-linktype=\"relative-path\">ChtmlTextWriter</a>, <a class=\"xref\" href=\"system.web.ui.html32textwriter\" data-linktype=\"relative-path\">Html32TextWriter</a>, and <a class=\"xref\" href=\"system.web.ui.xhtmltextwriter\" data-linktype=\"relative-path\">XhtmlTextWriter</a> classes. These classes are used to write the elements, attributes, and style and layout information for different types of markup. In addition, these classes are used by the page and control adapter classes that are associated with each markup language.  </p>\n<p> In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device. However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <code>controlAdapters</code> section of the application .browser file.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_\" data-linktype=\"self-bookmark\">HtmlTextWriter(TextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class that uses a default tab string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_System_String_\" data-linktype=\"self-bookmark\">HtmlTextWriter(TextWriter,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class with a specified tab string character.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_DefaultTabString\" data-linktype=\"self-bookmark\">DefaultTabString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents a single tab character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_DoubleQuoteChar\" data-linktype=\"self-bookmark\">DoubleQuoteChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the quotation mark (&quot;) character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EndTagLeftChars\" data-linktype=\"self-bookmark\">EndTagLeftChars</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EqualsChar\" data-linktype=\"self-bookmark\">EqualsChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the equal sign (<code>=</code>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EqualsDoubleQuoteString\" data-linktype=\"self-bookmark\">EqualsDoubleQuoteString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents an equal sign (=) and a double quotation mark (&quot;) together in a string (=&quot;).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_SelfClosingChars\" data-linktype=\"self-bookmark\">SelfClosingChars</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents a space and the self-closing slash mark (/) of a markup tag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_SelfClosingTagEnd\" data-linktype=\"self-bookmark\">SelfClosingTagEnd</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_SemicolonChar\" data-linktype=\"self-bookmark\">SemicolonChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the semicolon (;).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_SingleQuoteChar\" data-linktype=\"self-bookmark\">SingleQuoteChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents an apostrophe (&#39;).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_SlashChar\" data-linktype=\"self-bookmark\">SlashChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the slash mark (/).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_SpaceChar\" data-linktype=\"self-bookmark\">SpaceChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents a space ( ) character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_StyleEqualsChar\" data-linktype=\"self-bookmark\">StyleEqualsChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the style equals (<code>:</code>) character used to set style attributes equal to values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_TagLeftChar\" data-linktype=\"self-bookmark\">TagLeftChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the opening angle bracket (&lt;) of a markup tag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_TagRightChar\" data-linktype=\"self-bookmark\">TagRightChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the closing angle bracket (&gt;) of a markup tag.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Encoding\" data-linktype=\"self-bookmark\">Encoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the encoding that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object uses to write content to the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Indent\" data-linktype=\"self-bookmark\">Indent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of tab positions to indent the beginning of each line of markup.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_InnerWriter\" data-linktype=\"self-bookmark\">InnerWriter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text writer that writes the inner content of the markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_NewLine\" data-linktype=\"self-bookmark\">NewLine</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the line terminator string used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_TagKey\" data-linktype=\"self-bookmark\">TagKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the specified markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_TagName\" data-linktype=\"self-bookmark\">TagName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the tag name of the markup element being rendered.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">AddAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified markup attribute and value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddAttribute_System_Web_UI_HtmlTextWriterAttribute_System_String_\" data-linktype=\"self-bookmark\">AddAttribute(HtmlTextWriterAttribute,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the markup attribute and the attribute value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddAttribute_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">AddAttribute(String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified markup attribute and value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method, with optional encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddAttribute_System_String_System_String_System_Web_UI_HtmlTextWriterAttribute_\" data-linktype=\"self-bookmark\">AddAttribute(String,String,HtmlTextWriterAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified markup attribute and value, along with an <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value, to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddAttribute_System_Web_UI_HtmlTextWriterAttribute_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">AddAttribute(HtmlTextWriterAttribute,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the markup attribute and the attribute value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method, with optional encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddStyleAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">AddStyleAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddStyleAttribute_System_Web_UI_HtmlTextWriterStyle_System_String_\" data-linktype=\"self-bookmark\">AddStyleAttribute(HtmlTextWriterStyle,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the markup style attribute associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> value and the attribute value to the opening markup tag created by a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_AddStyleAttribute_System_String_System_String_System_Web_UI_HtmlTextWriterStyle_\" data-linktype=\"self-bookmark\">AddStyleAttribute(String,String,HtmlTextWriterStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified markup style attribute and the attribute value, along with an <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value, to the opening markup tag created by a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_BeginRender\" data-linktype=\"self-bookmark\">BeginRender()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies an <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, or an object of a derived class, that a control is about to be rendered.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object and releases any system resources associated with it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EncodeAttributeValue_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">EncodeAttributeValue(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes the value of the specified markup attribute based on the requirements of the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> object of the current context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EncodeAttributeValue_System_Web_UI_HtmlTextWriterAttribute_System_String_\" data-linktype=\"self-bookmark\">EncodeAttributeValue(HtmlTextWriterAttribute,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes the value of the specified markup attribute based on the requirements of the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> object of the current context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EncodeUrl_System_String_\" data-linktype=\"self-bookmark\">EncodeUrl(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs minimal URL encoding by converting spaces in the specified URL to the string &quot;%20&quot;.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EndRender\" data-linktype=\"self-bookmark\">EndRender()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies an <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, or an object of a derived class, that a control has finished rendering. You can use this method to close any markup elements opened in the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.BeginRender*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"self-bookmark\">EnterStyle(Style)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the opening tag of a <code>&lt;span&gt;</code> element that contains attributes that implement the layout and character formatting of the specified style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"self-bookmark\">EnterStyle(Style,HtmlTextWriterTag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_ExitStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"self-bookmark\">ExitStyle(Style)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the closing tag of a <code>&lt;span&gt;</code> element to end the specified layout and character formatting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_ExitStyle_System_Web_UI_WebControls_Style_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"self-bookmark\">ExitStyle(Style,HtmlTextWriterTag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_FilterAttributes\" data-linktype=\"self-bookmark\">FilterAttributes()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all the markup and style attributes on all properties of the page or Web server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all buffers for the current <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object and causes any buffered data to be written to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_GetAttributeKey_System_String_\" data-linktype=\"self-bookmark\">GetAttributeKey(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value for the specified attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_GetAttributeName_System_Web_UI_HtmlTextWriterAttribute_\" data-linktype=\"self-bookmark\">GetAttributeName(HtmlTextWriterAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains the name of the markup attribute associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_GetStyleKey_System_String_\" data-linktype=\"self-bookmark\">GetStyleKey(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value for the specified style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_GetStyleName_System_Web_UI_HtmlTextWriterStyle_\" data-linktype=\"self-bookmark\">GetStyleName(HtmlTextWriterStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains the markup style attribute name associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_GetTagKey_System_String_\" data-linktype=\"self-bookmark\">GetTagKey(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value associated with the specified markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_GetTagName_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"self-bookmark\">GetTagName(HtmlTextWriterTag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains the markup element associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_IsAttributeDefined_System_Web_UI_HtmlTextWriterAttribute_\" data-linktype=\"self-bookmark\">IsAttributeDefined(HtmlTextWriterAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup attribute and its value are rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_IsAttributeDefined_System_Web_UI_HtmlTextWriterAttribute_System_String__\" data-linktype=\"self-bookmark\">IsAttributeDefined(HtmlTextWriterAttribute,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup attribute and its value are rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_System_Web_UI_HtmlTextWriterStyle_\" data-linktype=\"self-bookmark\">IsStyleAttributeDefined(HtmlTextWriterStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup style attribute is rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_System_Web_UI_HtmlTextWriterStyle_System_String__\" data-linktype=\"self-bookmark\">IsStyleAttributeDefined(HtmlTextWriterStyle,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup style attribute and its value are rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_IsValidFormAttribute_System_String_\" data-linktype=\"self-bookmark\">IsValidFormAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks an attribute to ensure that it can be rendered in the opening tag of a <code>&lt;form&gt;</code> markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_OnAttributeRender_System_String_System_String_System_Web_UI_HtmlTextWriterAttribute_\" data-linktype=\"self-bookmark\">OnAttributeRender(String,String,HtmlTextWriterAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_OnStyleAttributeRender_System_String_System_String_System_Web_UI_HtmlTextWriterStyle_\" data-linktype=\"self-bookmark\">OnStyleAttributeRender(String,String,HtmlTextWriterStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_OnTagRender_System_String_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"self-bookmark\">OnTagRender(String,HtmlTextWriterTag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified markup element will be rendered to the requesting page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_OutputTabs\" data-linktype=\"self-bookmark\">OutputTabs()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a series of tab strings that represent the indentation level for a line of markup characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_PopEndTag\" data-linktype=\"self-bookmark\">PopEndTag()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the most recently saved markup element from the list of rendered elements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_PushEndTag_System_String_\" data-linktype=\"self-bookmark\">PushEndTag(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the specified markup element for later use when generating the end tag for a markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RegisterAttribute_System_String_System_Web_UI_HtmlTextWriterAttribute_\" data-linktype=\"self-bookmark\">RegisterAttribute(String,HtmlTextWriterAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RegisterStyle_System_String_System_Web_UI_HtmlTextWriterStyle_\" data-linktype=\"self-bookmark\">RegisterStyle(String,HtmlTextWriterStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RegisterTag_System_String_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"self-bookmark\">RegisterTag(String,HtmlTextWriterTag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderAfterContent\" data-linktype=\"self-bookmark\">RenderAfterContent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderAfterTag\" data-linktype=\"self-bookmark\">RenderAfterTag()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any spacing or text that occurs after the closing tag for a markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderBeforeContent\" data-linktype=\"self-bookmark\">RenderBeforeContent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any text or spacing before the content and after the opening tag of a markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderBeforeTag\" data-linktype=\"self-bookmark\">RenderBeforeTag()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any text or spacing that occurs before the opening tag of a markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderBeginTag_System_String_\" data-linktype=\"self-bookmark\">RenderBeginTag(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the opening tag of the specified markup element to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderBeginTag_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"self-bookmark\">RenderBeginTag(HtmlTextWriterTag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the opening tag of the markup element associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_RenderEndTag\" data-linktype=\"self-bookmark\">RenderEndTag()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the end tag of a markup element to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Boolean_\" data-linktype=\"self-bookmark\">Write(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Char_\" data-linktype=\"self-bookmark\">Write(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Char___\" data-linktype=\"self-bookmark\">Write(Char[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Double_\" data-linktype=\"self-bookmark\">Write(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Int32_\" data-linktype=\"self-bookmark\">Write(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Int64_\" data-linktype=\"self-bookmark\">Write(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Object_\" data-linktype=\"self-bookmark\">Write(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an object to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Single_\" data-linktype=\"self-bookmark\">Write(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_String_System_Object_\" data-linktype=\"self-bookmark\">Write(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a tab string and a formatted string to the output stream, using the same semantics as the <span class=\"xref\">stem.String.Format*</span> method, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_String_System_Object___\" data-linktype=\"self-bookmark\">Write(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing. This method uses the same semantics as the <span class=\"xref\">stem.String.Format*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_Write_System_String_System_Object_System_Object_\" data-linktype=\"self-bookmark\">Write(String,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing. This method uses the same semantics as the <span class=\"xref\">stem.String.Format*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified markup attribute and value to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">WriteAttribute(String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteBeginTag_System_String_\" data-linktype=\"self-bookmark\">WriteBeginTag(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteBreak\" data-linktype=\"self-bookmark\">WriteBreak()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <code>&lt;br /&gt;</code> markup element to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteEncodedText_System_String_\" data-linktype=\"self-bookmark\">WriteEncodedText(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes the specified text for the requesting device, and then writes it to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteEncodedUrl_System_String_\" data-linktype=\"self-bookmark\">WriteEncodedUrl(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes the specified URL, and then writes it to the output stream. The URL might include parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteEncodedUrlParameter_System_String_\" data-linktype=\"self-bookmark\">WriteEncodedUrlParameter(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteEndTag_System_String_\" data-linktype=\"self-bookmark\">WriteEndTag(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any tab spacing and the closing tag of the specified markup element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteFullBeginTag_System_String_\" data-linktype=\"self-bookmark\">WriteFullBeginTag(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine\" data-linktype=\"self-bookmark\">WriteLine()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a line terminator string to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Boolean_\" data-linktype=\"self-bookmark\">WriteLine(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Char_\" data-linktype=\"self-bookmark\">WriteLine(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Char___\" data-linktype=\"self-bookmark\">WriteLine(Char[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Double_\" data-linktype=\"self-bookmark\">WriteLine(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Int32_\" data-linktype=\"self-bookmark\">WriteLine(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Int64_\" data-linktype=\"self-bookmark\">WriteLine(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Single_\" data-linktype=\"self-bookmark\">WriteLine(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_String_\" data-linktype=\"self-bookmark\">WriteLine(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_UInt32_\" data-linktype=\"self-bookmark\">WriteLine(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_String_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_String_System_Object___\" data-linktype=\"self-bookmark\">WriteLine(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteLine(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLine_System_String_System_Object_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(String,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteLineNoTabs_System_String_\" data-linktype=\"self-bookmark\">WriteLineNoTabs(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a string, followed by a line terminator string, to the output stream. This method ignores any specified tab spacing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteStyleAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStyleAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified style attribute to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteStyleAttribute_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">WriteStyleAttribute(String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_HtmlTextWriter_WriteUrlEncodedString_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">WriteUrlEncodedString(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string, encoding it according to URL requirements.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HtmlTextWriter(TextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class that uses a default tab string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HtmlTextWriter (System.IO.TextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> instance that renders the markup content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The HtmlTextWriter overload of the HtmlTextWriter constructor uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_DefaultTabString\" data-linktype=\"relative-path\">DefaultTabString</a> constant when indentation of a line is necessary. It calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_System_String_\" data-linktype=\"relative-path\">HtmlTextWriter(TextWriter,String)</a> overload to initialize the new instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HtmlTextWriter constructor to create a custom <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object named <code>StyledLabelHtmlWriter.</code> When the <code>MyPage</code> custom class, which is derived from the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> class, is requested by a client browser, it uses the <code>StyledLabelHtmlWriter</code> class to render its content to the output stream.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#10\">    &#39; A custom class that overrides the CreateHtmlTextWriter method.\n    &#39; This page uses the StyledLabelHtmlWriter to render its content.  \n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public Class MyPage\n        Inherits Page\n\n        Protected Overrides Function CreateHtmlTextWriter(ByVal writer As TextWriter) As HtmlTextWriter\n            Return New HtmlStyledLabelWriter(writer)\n        End Function &#39;CreateHtmlTextWriter\n    End Class &#39;MyPage\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#10\">// A custom class that overrides its CreateHtmlTextWriter method.\n// This page uses the StyledLabelHtmlWriter class to render its content.\npublic ref class MyPage: public Page\n{\nprotected:\n   virtual HtmlTextWriter^ CreateHtmlTextWriter( TextWriter^ writer ) override\n   {\n      return gcnew HtmlStyledLabelWriter( writer );\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#10\">\n    // A custom class that overrides its CreateHtmlTextWriter method.\n    // This page uses the HtmlStyledLabelWriter class to render its content.\n    [AspNetHostingPermission(SecurityAction.Demand,\n        Level = AspNetHostingPermissionLevel.Minimal)]\n    [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n        Level = AspNetHostingPermissionLevel.Minimal)]\n    public class MyPage : Page\n    {\n        protected override HtmlTextWriter CreateHtmlTextWriter(TextWriter writer)\n        {\n            return new HtmlStyledLabelWriter(writer);\n        }\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HtmlTextWriter(TextWriter,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class with a specified tab string character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HtmlTextWriter (System.IO.TextWriter writer, string tabString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> that renders the markup content.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tabString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to use to render a line indentation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The HtmlTextWriter overload of the HtmlTextWriter constructor uses <code>tabString</code> when indentation of a line is necessary. It calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter__ctor_System_IFormatProvider_\" data-linktype=\"relative-path\">System.IO.TextWriter.TextWriter(IFormatProvider)</a> base constructor to initialize the new instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_\" data-linktype=\"relative-path\">HtmlTextWriter(TextWriter)</a> constructor to create a custom <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object named <code>StyledLabelHtmlWriter.</code> When the <code>MyPage</code> custom class, which is derived from the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> class, is requested by a client browser, it uses the <code>StyledLabelHtmlWriter</code> class to render its content to the output stream.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#10\">    &#39; A custom class that overrides the CreateHtmlTextWriter method.\n    &#39; This page uses the StyledLabelHtmlWriter to render its content.  \n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public Class MyPage\n        Inherits Page\n\n        Protected Overrides Function CreateHtmlTextWriter(ByVal writer As TextWriter) As HtmlTextWriter\n            Return New HtmlStyledLabelWriter(writer)\n        End Function &#39;CreateHtmlTextWriter\n    End Class &#39;MyPage\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#10\">// A custom class that overrides its CreateHtmlTextWriter method.\n// This page uses the StyledLabelHtmlWriter class to render its content.\npublic ref class MyPage: public Page\n{\nprotected:\n   virtual HtmlTextWriter^ CreateHtmlTextWriter( TextWriter^ writer ) override\n   {\n      return gcnew HtmlStyledLabelWriter( writer );\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#10\">\n    // A custom class that overrides its CreateHtmlTextWriter method.\n    // This page uses the HtmlStyledLabelWriter class to render its content.\n    [AspNetHostingPermission(SecurityAction.Demand,\n        Level = AspNetHostingPermissionLevel.Minimal)]\n    [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n        Level = AspNetHostingPermissionLevel.Minimal)]\n    public class MyPage : Page\n    {\n        protected override HtmlTextWriter CreateHtmlTextWriter(TextWriter writer)\n        {\n            return new HtmlStyledLabelWriter(writer);\n        }\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_DefaultTabString\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultTabString</div>        \r\n          </div>\r\n    \r\n            <p>Represents a single tab character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string DefaultTabString;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The single tab is represented by the ASCII 9 character.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a constructor that takes a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object as a parameter and passes the DefaultTabString field as a parameter argument to a second version of the constructor. When this constructor is called from code, the DefaultTabString field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods3#1\">        // Create a markup class constructor that uses the\n        // DefaultTabString property to establish indent settings\n        // for the writer.\n        public SimpleHtmlTextWriter(TextWriter writer)\n            :\n            this(writer, DefaultTabString)\n        {\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods3#1\">         &#39; Create a markup class constructor that uses the\n         &#39; DefaultTabString property to establish indent settings\n         &#39; for the writer.\n         Public Sub New(writer As TextWriter)\n             me.New(writer, DefaultTabString)\n         End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_DoubleQuoteChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoubleQuoteChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the quotation mark (&quot;) character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char DoubleQuoteChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DoubleQuoteChar field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> method to close an attribute.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to render a <code>border</code> attribute for a <code>&lt;table&gt;</code> element. The code calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to render the attribute and its value and uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to render the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EqualsDoubleQuoteString\" data-linktype=\"relative-path\">EqualsDoubleQuoteString</a> and DoubleQuoteChar fields.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>border=&quot;1&quot;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#6\">            &#39; Create a border attribute for the table,\n            &#39; and set it to 1.\n            writer.Write(&quot;border&quot;)\n            writer.Write(HtmlTextWriter.EqualsDoubleQuoteString)\n            writer.Write(&quot;1&quot;)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#6\">            // Create a border attribute for the table,\n            // and set it to 1.\n            writer.Write(&quot;border&quot;);\n            writer.Write(HtmlTextWriter.EqualsDoubleQuoteString);\n            writer.Write(&quot;1&quot;);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EndTagLeftChars\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndTagLeftChars</div>        \r\n          </div>\r\n    \r\n            <p>Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string EndTagLeftChars;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndTagLeftChars field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method to construct markup element end tags.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to render the closing tag of a <code>&lt;table&gt;</code> markup element by using the EndTagLeftChars and the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_TagRightChar\" data-linktype=\"relative-path\">TagRightChar</a> fields as parameter values in calls to the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>&lt;/table&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#4\">            &#39; Write the closing tag of a table element.\n            writer.Write(HtmlTextWriter.EndTagLeftChars)\n            writer.Write(&quot;table&quot;)\n            writer.Write(HtmlTextWriter.TagRightChar)\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#4\">            // Write the closing tag of a table element.\n            writer.Write(HtmlTextWriter.EndTagLeftChars);\n            writer.Write(&quot;table&quot;);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EqualsChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EqualsChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the equal sign (<code>=</code>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char EqualsChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You might want to use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EqualsDoubleQuoteString\" data-linktype=\"relative-path\">EqualsDoubleQuoteString</a> field instead of the EqualsChar field when constructing the opening delimiter of an attribute value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to render the <code>src</code> attribute and part of its value for an <code>&lt;img&gt;</code> element. The code uses the EqualsChar field in a <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method call to render the equal sign (=) between the <code>src</code> attribute and its value.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>src=&quot;/images/</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#10\">            // Write the src attribute and the path\n            // for the image file.\n            writer.Write(&quot;src&quot;);\n            writer.Write(HtmlTextWriter.EqualsChar);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n            writer.Write(HtmlTextWriter.SlashChar);\n            writer.Write(&quot;images&quot;);\n            writer.Write(HtmlTextWriter.SlashChar);\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#10\">            &#39; Write the src attribute and the path\n            &#39; for the image file.\n            writer.Write(&quot;src&quot;)\n            writer.Write(HtmlTextWriter.EqualsChar)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n            writer.Write(HtmlTextWriter.SlashChar)\n            writer.Write(&quot;images&quot;)\n            writer.Write(HtmlTextWriter.SlashChar)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EqualsDoubleQuoteString\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EqualsDoubleQuoteString</div>        \r\n          </div>\r\n    \r\n            <p>Represents an equal sign (=) and a double quotation mark (&quot;) together in a string (=&quot;).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string EqualsDoubleQuoteString;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EqualsDoubleQuoteString field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> methods to construct the opening delimiter of attribute values.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to render a <code>border</code> attribute for a <code>&lt;table&gt;</code> element. The code calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to render the attribute and its value and uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to render the EqualsDoubleQuoteString and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_DoubleQuoteChar\" data-linktype=\"relative-path\">DoubleQuoteChar</a> fields.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>border=&quot;1&quot;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#6\">            &#39; Create a border attribute for the table,\n            &#39; and set it to 1.\n            writer.Write(&quot;border&quot;)\n            writer.Write(HtmlTextWriter.EqualsDoubleQuoteString)\n            writer.Write(&quot;1&quot;)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#6\">            // Create a border attribute for the table,\n            // and set it to 1.\n            writer.Write(&quot;border&quot;);\n            writer.Write(HtmlTextWriter.EqualsDoubleQuoteString);\n            writer.Write(&quot;1&quot;);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_SelfClosingChars\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelfClosingChars</div>        \r\n          </div>\r\n    \r\n            <p>Represents a space and the self-closing slash mark (/) of a markup tag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string SelfClosingChars;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelfClosingChars field is used in markup elements that are self-closed. For example:  </p>\n<p> <code>&lt;input type=&quot;submit&quot; value=&quot;go&quot;  /&gt;</code></p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_SelfClosingTagEnd\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelfClosingTagEnd</div>        \r\n          </div>\r\n    \r\n            <p>Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string SelfClosingTagEnd;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelfClosingTagEnd field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method when constructing self-closing markup elements.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to render the value of a custom <code>FileName</code> property followed by a quotation mark and the characters represented by the SelfClosingTagEnd field. The code example calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method and passes the SelfClosingTagEnd field as the parameter argument to close the element.  </p>\n<p> This code example renders the <code>FileName</code> property value, and then the following markup:  </p>\n<p> <code>&quot; /&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#11\">            // Write the name of the image file from the \n            // FileName property, close the path, and then\n            // close the &lt;img&gt; element.\n            writer.Write(FileName);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n            writer.Write(HtmlTextWriter.SelfClosingTagEnd);\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#11\">            &#39; Write the name of the image file from the \n            &#39; FileName property, close the path, and then\n            &#39; close the &lt;img&gt; element.\n            writer.Write(FileName)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n            writer.Write(HtmlTextWriter.SelfClosingTagEnd)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_SemicolonChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SemicolonChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the semicolon (;).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char SemicolonChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Pass the SemicolonChar field as the parameter argument in a <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method call when you want to render a semicolon from a custom control or adapter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to manually render a series of styles on a markup element. The code example uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to render <code>font-size</code> and <code>border-style</code> style attributes. The SemicolonChar field is used as a parameter of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to separate the value of the <code>font-size</code> attribute from the beginning of the <code>border-style</code> attribute.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>style=&quot;font-size:12pt;border-style:ridge&quot;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#7\">            // Create some styles for the button.\n            writer.Write(HtmlTextWriter.SpaceChar);\n            writer.Write(&quot;style&quot;);\n            writer.Write(HtmlTextWriter.EqualsDoubleQuoteString);\n            writer.Write(&quot;font-size&quot;);\n            writer.Write(HtmlTextWriter.StyleEqualsChar);\n            writer.Write(&quot;12pt&quot;);\n            writer.Write(HtmlTextWriter.SemicolonChar);\n            writer.Write(&quot;border-style&quot;);\n            writer.Write(HtmlTextWriter.StyleEqualsChar);\n            writer.Write(&quot;ridge&quot;);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#7\">            &#39; Create some styles for the button.\n            writer.Write(HtmlTextWriter.SpaceChar)\n            writer.Write(&quot;style&quot;)\n            writer.Write(HtmlTextWriter.EqualsDoubleQuoteString)\n            writer.Write(&quot;font-size&quot;)\n            writer.Write(HtmlTextWriter.StyleEqualsChar)\n            writer.Write(&quot;12pt&quot;)\n            writer.Write(HtmlTextWriter.SemicolonChar)\n            writer.Write(&quot;border-style&quot;)\n            writer.Write(HtmlTextWriter.StyleEqualsChar)\n            writer.Write(&quot;ridge&quot;)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_SingleQuoteChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SingleQuoteChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents an apostrophe (&#39;).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char SingleQuoteChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SingleQuoteChar field when it is necessary to render an apostrophe.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_SlashChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SlashChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the slash mark (/).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char SlashChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SlashChar field to render the slash marks when you write a URL. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> method uses the SlashChar field when writing the closing tag of a markup element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to manually render the <code>src</code> attribute of an <code>&lt;img&gt;</code> element. The code example uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method with the SlashChar field as its parameter to render slash marks in the path that is applied to the <code>src</code> attribute.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>src=&quot;/images/</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#10\">            // Write the src attribute and the path\n            // for the image file.\n            writer.Write(&quot;src&quot;);\n            writer.Write(HtmlTextWriter.EqualsChar);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n            writer.Write(HtmlTextWriter.SlashChar);\n            writer.Write(&quot;images&quot;);\n            writer.Write(HtmlTextWriter.SlashChar);\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#10\">            &#39; Write the src attribute and the path\n            &#39; for the image file.\n            writer.Write(&quot;src&quot;)\n            writer.Write(HtmlTextWriter.EqualsChar)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n            writer.Write(HtmlTextWriter.SlashChar)\n            writer.Write(&quot;images&quot;)\n            writer.Write(HtmlTextWriter.SlashChar)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_SpaceChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpaceChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents a space ( ) character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char SpaceChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SpaceChar field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> methods when writing separators between elements and attributes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  </p>\n<p> These code examples generate the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>hello world</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<p> The following code example shows how to create a <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> array that contains the SpaceChar field.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#13\">        private char[] testChars = {&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;,\n            HtmlTextWriter.SpaceChar ,&#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#13\">        Private testChars() As Char = _\n            {&quot;h&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, _\n            HtmlTextWriter.SpaceChar, &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n</code></pre><p> The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#12\">            // Render a character array as the \n            // contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.Write(testChars);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#12\">            &#39; Render a character array as the \n            &#39; contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.Write(testChars)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_StyleEqualsChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StyleEqualsChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the style equals (<code>:</code>) character used to set style attributes equal to values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char StyleEqualsChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The StyleEqualsChar field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteStyleAttribute_\" data-linktype=\"relative-path\">WriteStyleAttribute</a> method to delimit style names and values.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to render a <code>FontWeight</code> attribute and value of <code>bold</code> to the opening tag of an element. The code example uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method with the StyleEqualsChar field as the parameter to render the character that sets the value of each style attribute.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>FontWeight:&quot;bold&quot;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#5\">            &#39; Write a space and a FontWeight\n            &#39; attribute to the tag.\n            writer.Write(HtmlTextWriter.SpaceChar)\n            writer.Write(&quot;FontWeight&quot;)\n\n            &#39; Set the FontWeight attribute to Bold.\n            writer.Write(HtmlTextWriter.StyleEqualsChar)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n            writer.Write(&quot;bold&quot;)\n            writer.Write(HtmlTextWriter.DoubleQuoteChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#5\">            // Write a space and a FontWeight\n            // attribute to the tag.\n            writer.Write(HtmlTextWriter.SpaceChar);\n            writer.Write(&quot;FontWeight&quot;);\n\n            // Set the FontWeight attribute to Bold.\n            writer.Write(HtmlTextWriter.StyleEqualsChar);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n            writer.Write(&quot;bold&quot;);\n            writer.Write(HtmlTextWriter.DoubleQuoteChar);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_TagLeftChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TagLeftChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the opening angle bracket (&lt;) of a markup tag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char TagLeftChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TagLeftChar field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a>, <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteBeginTag_\" data-linktype=\"relative-path\">WriteBeginTag</a>, <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteFullBeginTag_\" data-linktype=\"relative-path\">WriteFullBeginTag</a>, and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> methods when writing markup tags.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example renders the first character of the opening tag of a <code>&lt;table&gt;</code> element with the element name. The code example uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method with the TagLeftChar field as a parameter.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>&lt;table</code>  </p>\n<pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#9\">            &#39; Create the opening tag of a table element\n            &#39; with styles by using the HtmlTextWriter class. \n            writer.Write(HtmlTextWriter.TagLeftChar)\n            writer.Write(&quot;table&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#9\">            // Create the opening tag of a table element\n            // with styles by using the HtmlTextWriter class.\n            writer.Write(HtmlTextWriter.TagLeftChar);\n            writer.Write(&quot;table&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_TagRightChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TagRightChar</div>        \r\n          </div>\r\n    \r\n            <p>Represents the closing angle bracket (&gt;) of a markup tag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const char TagRightChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TagRightChar field is used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a>, <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteFullBeginTag_\" data-linktype=\"relative-path\">WriteFullBeginTag</a>, and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> methods when writing markup tags.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to render the closing tag of a <code>&lt;table&gt;</code> element by making calls to overloads of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method. To render the final character of the tag, the code example uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method with the TagRightChar field as a parameter.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>&lt;/table&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Constants#4\">            &#39; Write the closing tag of a table element.\n            writer.Write(HtmlTextWriter.EndTagLeftChars)\n            writer.Write(&quot;table&quot;)\n            writer.Write(HtmlTextWriter.TagRightChar)\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Constants#4\">            // Write the closing tag of a table element.\n            writer.Write(HtmlTextWriter.EndTagLeftChars);\n            writer.Write(&quot;table&quot;);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Encoding\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Encoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the encoding that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object uses to write content to the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Text.Encoding Encoding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> in which the markup is written to the page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Encoding property obtains its value from the base <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Encoding property to write the type of encoding that a custom control uses to render text to the page that contains it.  </p>\n<pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Properties#2\">      // Get the value of the current markup writer&#39;s\n      // Encoding property, convert it to a string, and\n      // write it to the markup stream.\n      writer-&gt;Write( String::Concat( &quot;Encoding : &quot;, writer-&gt;Encoding, &quot;&lt;br&gt;&quot; ) );\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Properties#2\">            // Get the value of the current markup writer&#39;s \n            // Encoding property, convert it to a string, and \n            // write it to the markup stream.\n            writer.Write(&quot;Encoding : &quot; + writer.Encoding.ToString() + &quot;&lt;br&gt;&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Properties#2\">            &#39; Get the value of the current markup writer&#39;s \n            &#39; Encoding property, convert it to a string, and \n            &#39; write it to the HtmlTextWriter stream.\n            writer.Write((&quot;Encoding : &quot; + writer.Encoding.ToString() &amp; &quot;&lt;br&gt;&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Indent\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Indent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Indent</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of tab positions to indent the beginning of each line of markup.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Indent { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of tab positions to indent each line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Indentation is performed by writing the string that is specified by the <code>tabString</code> parameter of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter__ctor_System_IO_TextWriter_System_String_\" data-linktype=\"relative-path\">HtmlTextWriter(TextWriter,String)</a> constructor the number of times that are specified by the Indent property.  </p>\n<p> If the Indent property is set to a negative value, it is changed to 0 before being saved.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to increment the value that is assigned to the Indent property when attributes have been added to the opening tag of a <code>&lt;span&gt;</code> element and the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method has been called. This increases the indentation for any markup that is rendered inside the <code>&lt;span&gt;</code> element.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Samples1#2\">            // Set attributes and values along with attributes and styles  \n            // attribute defined for a &lt;span&gt; element.\n            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, &quot;alert(&#39;Hello&#39;);&quot;);\n            writer.AddAttribute(&quot;CustomAttribute&quot;, &quot;CustomAttributeValue&quot;);\n            writer.AddStyleAttribute(HtmlTextWriterStyle.Color, &quot;Red&quot;);\n            writer.AddStyleAttribute(&quot;Customstyle&quot;, &quot;CustomStyleValue&quot;);\n            writer.RenderBeginTag(HtmlTextWriterTag.Span);\n            // Create a space and indent the markup inside the \n            // &lt;span&gt; element.\n            writer.WriteLine();\n            writer.Indent++;\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Samples1#2\">            &#39; Set attributes and values along with attributes and styles\n            &#39; attribute defined for a &lt;span&gt; element.\n            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, &quot;alert(&#39;Hello&#39;);&quot;)\n            writer.AddAttribute(&quot;CustomAttribute&quot;, &quot;CustomAttributeValue&quot;)\n            writer.AddStyleAttribute(HtmlTextWriterStyle.Color, &quot;Red&quot;)\n            writer.AddStyleAttribute(&quot;CustomStyle&quot;, &quot;CustomStyleValue&quot;)\n            writer.RenderBeginTag(HtmlTextWriterTag.Span)\n\n            &#39;  Create a space and indent the markup inside the \n            &#39; &lt;span&gt; element.\n            writer.WriteLine()\n            writer.Indent += 1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_InnerWriter\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_InnerWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InnerWriter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text writer that writes the inner content of the markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.TextWriter InnerWriter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> that writes the inner markup content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Inner markup content is the text found between the opening and closing tags of a markup language element.  </p>\n<p> If the InnerWriter property is set to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object that is an instance of the <a class=\"xref\" href=\"system.web.httpwriter\" data-linktype=\"relative-path\">HttpWriter</a> class, this fact is noted and a separate reference is saved.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use a custom Web server control, derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a> class, that overrides the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Render_\" data-linktype=\"relative-path\">Render</a> method. It uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class to write a <code>&lt;font&gt;</code> element. After it writes the opening tag of the element, it uses the InnerWriter property to write the string <code>&quot;&lt;br&gt; The time on the server:&quot;</code> and concatenates this string with the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a> property.  </p>\n<pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Properties#3\">      // Write the opening tag of a Font element.\n      writer-&gt;WriteBeginTag( &quot;font&quot; );\n      \n      // Write a Color style attribute to the opening tag\n      // of the Font element and set its value to red.\n      writer-&gt;WriteAttribute( &quot;color&quot;, &quot;red&quot; );\n      \n      // Write the closing character for the opening tag of\n      // the Font element.\n      writer-&gt;Write( &#39;&gt;&#39; );\n      \n      // Use the InnerWriter property to create a TextWriter\n      // object that will write the content found between\n      // the opening and closing tags of the Font element.\n      // Message is a string property of the control that\n      // overrides the Render method.\n      TextWriter^ innerTextWriter = writer-&gt;InnerWriter;\n      innerTextWriter-&gt;Write( String::Concat( Message, &quot;&lt;br&gt; The time on the server : &quot;, System::DateTime::Now.ToLongTimeString() ) );\n      \n      // Write the closing tag of the Font element.\n      writer-&gt;WriteEndTag( &quot;font&quot; );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Properties#3\">            // Write the opening tag of a Font element.\n            writer.WriteBeginTag(&quot;font&quot;);\n            // Write a Color style attribute to the opening tag\n            // of the Font element and set its value to red.\n            writer.WriteAttribute(&quot;color&quot;, &quot;red&quot;);\n            // Write the closing character for the opening tag of\n            // the Font element.\n            writer.Write(&#39;&gt;&#39;);\n\n            // Use the InnerWriter property to create a TextWriter\n            // object that will write the content found between\n            // the opening and closing tags of the Font element.\n            // Message is a string property of the control that \n            // overrides the Render method.\n            TextWriter innerTextWriter = writer.InnerWriter;\n            innerTextWriter.Write(Message + &quot;&lt;br&gt; The time on the server :&quot; + System.DateTime.Now.ToLongTimeString());\n\n            // Write the closing tag of the Font element.\n            writer.WriteEndTag(&quot;font&quot;);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Properties#3\">            &#39; Write the opening tag of a Font element.\n            writer.WriteBeginTag(&quot;font&quot;)\n            &#39; Write a Color style attribute to the opening tag\n            &#39; of the Font element and set its value to red.\n            writer.WriteAttribute(&quot;color&quot;, &quot;red&quot;)\n            &#39; Write the closing character for the opening tag of\n            &#39; the Font element.\n            writer.Write(&quot;&gt;&quot;)\n\n            &#39; Use the InnerWriter property to create a TextWriter\n            &#39; object that will write the content found between\n            &#39; the opening and closing tags of the Font element.\n            &#39; Message is a string property of the control that \n            &#39; overrides the Render method.\n            Dim innerTextWriter As TextWriter = writer.InnerWriter\n            innerTextWriter.Write((Message + &quot;&lt;br&gt; The time on the server :&quot; &amp; _\n               System.DateTime.Now.ToLongTimeString()))\n\n            &#39; Write the closing tag of the Font element.\n            writer.WriteEndTag(&quot;font&quot;)\n        End Sub &#39;Render\n    End Class &#39;FirstControl \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_NewLine\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_NewLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewLine</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the line terminator string used by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string NewLine { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The line terminator string used by the current <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return, followed by a line feed (&quot;\\r\\n&quot;).  </p>\n<p> The line terminator string is written to the output stream whenever one of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods is called. If the NewLine property is set to <code>null</code>, the default new line character is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use a custom class, derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class, that overrides the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_FilterAttributes_\" data-linktype=\"relative-path\">FilterAttributes</a> method. When called, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_FilterAttributes_\" data-linktype=\"relative-path\">FilterAttributes</a> override checks whether the text writer renders any <code>&lt;label&gt;</code> or <code>&lt;a&gt;</code> elements. If so, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_FilterAttributes_\" data-linktype=\"relative-path\">FilterAttributes</a> method determines whether a style attribute is defined for the label. If no style is defined, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_FilterAttributes_\" data-linktype=\"relative-path\">FilterAttributes</a> method sets the default value for the <code>style:color</code> attribute to blue. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_FilterAttributes_\" data-linktype=\"relative-path\">FilterAttributes</a> method then uses the NewLine property to insert a line break in the markup tag and writes any other defined attributes.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#4\">        // Override the FilterAttributes method to check whether \n        // &lt;label&gt; and &lt;anchor&gt; elements contain specific attributes.      \n        protected override void FilterAttributes()\n        {\n            // If the &lt;label&gt; element is rendered and a style\n            // attribute is not defined, add a style attribute \n            // and set its value to blue.\n            if (TagKey == HtmlTextWriterTag.Label)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Style))\n                {\n                    AddAttribute(&quot;style&quot;, EncodeAttributeValue(&quot;color:blue&quot;, true));\n                    Write(NewLine);\n                    Indent = 3;\n                    OutputTabs();\n                }\n            }\n\n            // If an &lt;anchor&gt; element is rendered and an href\n            // attribute has not been defined, call the AddAttribute\n            // method to add an href attribute\n            // and set it to http://www.cohowinery.com.\n            // Use the EncodeUrl method to convert any spaces to %20.\n            if (TagKey == HtmlTextWriterTag.A)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Href))\n                {\n                    AddAttribute(&quot;href&quot;, EncodeUrl(&quot;http://www.cohowinery.com&quot;));\n                }\n            }\n            // Call the FilterAttributes method of the base class.\n            base.FilterAttributes();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#4\">        &#39; Override the FilterAttributes method to check whether \n        &#39; &lt;label&gt; and &lt;anchor&gt; elements contain specific attributes.   \n        Protected Overrides Sub FilterAttributes()\n\n            &#39; If the &lt;label&gt; element is rendered and a style\n            &#39; attribute is not defined, add a style attribute \n            &#39; and set its value to blue.\n            If TagKey = HtmlTextWriterTag.Label Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Style) Then\n                    AddAttribute(&quot;style&quot;, EncodeAttributeValue(&quot;color:blue&quot;, True))\n                    Write(NewLine)\n                    Indent = 3\n                    OutputTabs()\n                End If\n            End If\n            &#39; If an &lt;anchor&gt; element is rendered and an href\n            &#39; attribute has not been defined, call the AddAttribute\n            &#39; method to add an href attribute\n            &#39; and set it to http://www.cohowinery.com.\n            &#39; Use the EncodeUrl method to convert any spaces to %20.\n            If TagKey = HtmlTextWriterTag.A Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Href) Then\n                    AddAttribute(&quot;href&quot;, EncodeUrl(&quot;http://www.cohowinery.com&quot;))\n                End If\n            End If\n\n            &#39; Call the FilterAttributes method of the base class.\n            MyBase.FilterAttributes()\n        End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#4\">   // Override the FilterAttributes method to check whether \n   // &lt;label&gt; and &lt;anchor&gt; elements contain specific attributes. \n   virtual void FilterAttributes() override\n   {\n      // If the &lt;label&gt; element is rendered and a style\n      // attribute is not defined, add a style attribute \n      // and set its value to blue.\n      if ( TagKey == HtmlTextWriterTag::Label )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Style ) )\n         {\n            AddAttribute( &quot;style&quot;, EncodeAttributeValue( &quot;color:blue&quot;, true ) );\n            Write( NewLine );\n            Indent = 3;\n            OutputTabs();\n         }\n      }\n\n      // If an &lt;anchor&gt; element is rendered and an href\n      // attribute has not been defined, call the AddAttribute\n      // method to add an href attribute\n      // and set it to http://www.cohowinery.com.\n      // Use the EncodeUrl method to convert any spaces to %20.\n      if ( TagKey == HtmlTextWriterTag::A )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Href ) )\n         {\n            AddAttribute( &quot;href&quot;, EncodeUrl( &quot;http://www.cohowinery.com&quot; ) );\n         }\n      }\n\n      // Call the FilterAttributes method of the base class.\n      __super::FilterAttributes();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_TagKey\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_TagKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TagKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the specified markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </div>\r\n                  <p>The markup element that is having its opening tag rendered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The property value cannot be set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TagKey property is of use only to classes that inherit from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. You should read or set the TagKey property only in a call to the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method; this is the only time it is set to a consistent value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates an overridden version of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeforeContent_\" data-linktype=\"relative-path\">RenderBeforeContent</a> method in a class that derives from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. It uses the value of the TagKey property to determine whether a server control using the custom <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object is rendering a <code>&lt;label&gt;</code> markup element. If it is, a <code>&lt;font&gt;</code> element with a <code>color</code> attribute set to <code>red</code> is returned to modify the formatting of the <code>&lt;label&gt;</code> element&#39;s text.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods1#2\">    &#39; Override the RenderBeforeContent method to write\n    &#39; a font element that applies red to the text in a Label element.\n    Protected Overrides Function RenderBeforeContent() As String\n        &#39; Check to determine whether the element being rendered\n        &#39; is a label element. If so, render the opening tag\n        &#39; of the font element; otherwise, call the base method.\n        If TagKey = HtmlTextWriterTag.Label Then\n            Return &quot;&lt;font color=&quot;&quot;red&quot;&quot;&gt;&quot;\n        Else\n            Return MyBase.RenderBeforeContent()\n        End If\n    End Function &#39;RenderBeforeContent\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods1#2\">        // Override the RenderBeforeContent method to write\n        // a font element that applies red to the text in a Label element.\n        protected override string RenderBeforeContent()\n        {\n            // Check to determine whether the element being rendered\n            // is a label element. If so, render the opening tag\n            // of the font element; otherwise, call the base method.\n            if (TagKey == HtmlTextWriterTag.Label)\n            {\n                return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n            }\n            else\n            {\n                return base.RenderBeforeContent();\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods1#2\">   // Override the RenderBeforeContent method to write\n   // a font element that applies red to the text in a Label element.\n\n   virtual String^ RenderBeforeContent() override\n   {\n      \n      // Check to determine whether the element being rendered\n      // is a label element. If so, render the opening tag\n      // of the font element; otherwise, call the base method.\n      if ( TagKey == HtmlTextWriterTag::Label )\n      {\n         return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n      }\n      else\n      {\n         return __super::RenderBeforeContent();\n      }\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_TagName\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_TagName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TagName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the tag name of the markup element being rendered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string TagName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The tag name of the markup element being rendered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TagName property is of use only to classes that inherit from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. You should read or set the TagName property only in <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method calls; this is the only time it is set to a consistent value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates an overridden version of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeforeTag_\" data-linktype=\"relative-path\">RenderBeforeTag</a> method in a class that derives from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. The code example checks whether the element to render is a <code>&lt;label&gt;</code> element by calling the <a class=\"xref\" href=\"system.string#System_String_Compare_\" data-linktype=\"relative-path\">Compare</a> method, and then passing the TagName property value and a string, <code>&quot;label&quot;</code>, as the parameter arguments. If a <code>&lt;label&gt;</code> element is about to be rendered, the opening tag of a <code>&lt;font&gt;</code> element, with a <code>color</code> attribute set to <code>red</code>, is rendered before the <code>&lt;label&gt;</code> element&#39;s opening tag. If the element to render is not a <code>&lt;label&gt;</code> element, the base class&#39;s version of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeforeTag_\" data-linktype=\"relative-path\">RenderBeforeTag</a> method is called.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods4#1\">        // Override the RenderBeforeTag method to add the \n        // opening tag of a Font element before the \n        // opening tag of any Label elements rendered by this \n        // custom markup writer. \n        protected override string RenderBeforeTag()\n        {\n            // Compare the TagName property value to the\n            // string label to determine whether the element to \n            // be rendered is a Label. If it is a Label,\n            // the opening tag of the Font element, with a Color\n            // style attribute set to red, is added before\n            // the Label.\n            if (String.Compare(TagName, &quot;label&quot;) == 0)\n            {\n                return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n            }\n            // If a Label is not being rendered, use \n                // the base RenderBeforeTag method.\n            else\n            {\n                return base.RenderBeforeTag();\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods4#1\">        &#39; Override the RenderBeforeTag method to add the \n        &#39; opening tag of a Font element before the \n        &#39; opening tag of any Label elements rendered by this \n        &#39; custom markup writer. \n        Protected Overrides Function RenderBeforeTag() As String\n            &#39; Compare the TagName property value to the\n            &#39; string label to determine whether the element to \n            &#39; be rendered is a Label. If it is a Label,\n            &#39; the opening tag of the Font element, with a Color\n            &#39; style attribute set to red, is added before\n            &#39; the Label.\n            If String.Compare(TagName, &quot;label&quot;) = 0 Then\n                Return &quot;&lt;font color=&quot;&quot;red&quot;&quot;&gt;&quot;\n                &#39; If a Label is not being rendered, use \n                &#39; the base RenderBeforeTag method.\n            Else\n                Return MyBase.RenderBeforeTag()\n            End If\n        End Function &#39;RenderBeforeTag\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods4#1\">   // Override the RenderBeforeTag method to add the\n   // opening tag of a Font element before the\n   // opening tag of any Label elements rendered by this\n   // custom markup writer.\n   virtual String^ RenderBeforeTag() override\n   {\n      // Compare the TagName property value to the\n      // String* label to determine whether the element to\n      // be rendered is a Label. If it is a Label,\n      // the opening tag of the Font element, with a Color\n      // style attribute set to red, is added before\n      // the Label.\n      if ( String::Compare( TagName, &quot;label&quot; ) == 0 )\n      {\n         return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n      }\n      // If a Label is not being rendered, use\n      // the base RenderBeforeTag method.\n      else\n      {\n         return __super::RenderBeforeTag();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified markup attribute and value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddAttribute (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the attribute to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value to assign to the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddAttribute overload of the AddAttribute method if the attribute is not one of the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> values, or if the attribute is not known until run time.  </p>\n<p> For an instance of any given markup element, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class maintains a list of attributes for that element. When the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method is called, any attributes added by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method are rendered to the opening tag of the element. The list of attributes is then cleared from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.  </p>\n<p> The coding pattern for rendering markup elements is as follows:  </p>\n<ul>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method to add any attributes to the element.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method.  </p>\n</li>\n<li><p>Use other methods as needed to render the content found between the element&#39;s opening and closing tags.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method before calling the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method. The code calls two different overloads of <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> and two different overloads of <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> before it calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method to render a <code>&lt;span&gt;</code> element to the output stream. The AddAttribute method is used to define the custom attribute named <code>CustomAttribute</code> and the custom value named <code>CustomAttributeValue</code> for the <code>&lt;span&gt;</code> element that this code renders.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Samples1#2\">            // Set attributes and values along with attributes and styles  \n            // attribute defined for a &lt;span&gt; element.\n            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, &quot;alert(&#39;Hello&#39;);&quot;);\n            writer.AddAttribute(&quot;CustomAttribute&quot;, &quot;CustomAttributeValue&quot;);\n            writer.AddStyleAttribute(HtmlTextWriterStyle.Color, &quot;Red&quot;);\n            writer.AddStyleAttribute(&quot;Customstyle&quot;, &quot;CustomStyleValue&quot;);\n            writer.RenderBeginTag(HtmlTextWriterTag.Span);\n            // Create a space and indent the markup inside the \n            // &lt;span&gt; element.\n            writer.WriteLine();\n            writer.Indent++;\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Samples1#2\">            &#39; Set attributes and values along with attributes and styles\n            &#39; attribute defined for a &lt;span&gt; element.\n            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, &quot;alert(&#39;Hello&#39;);&quot;)\n            writer.AddAttribute(&quot;CustomAttribute&quot;, &quot;CustomAttributeValue&quot;)\n            writer.AddStyleAttribute(HtmlTextWriterStyle.Color, &quot;Red&quot;)\n            writer.AddStyleAttribute(&quot;CustomStyle&quot;, &quot;CustomStyleValue&quot;)\n            writer.RenderBeginTag(HtmlTextWriterTag.Span)\n\n            &#39;  Create a space and indent the markup inside the \n            &#39; &lt;span&gt; element.\n            writer.WriteLine()\n            writer.Indent += 1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddAttribute_System_Web_UI_HtmlTextWriterAttribute_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAttribute(HtmlTextWriterAttribute,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the markup attribute and the attribute value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> that represents the markup attribute to add to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value to assign to the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddAttribute overload of the AddAttribute method to render a standard markup attribute.  </p>\n<p> For an instance of any given markup element, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class maintains a list of attributes for that element. When the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method is called, any attributes that are added by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method are rendered to the opening tag of the element. The list of attributes is then cleared from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a>.  </p>\n<p> The coding pattern for rendering markup elements is as follows:  </p>\n<ul>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method to add any attributes to the element.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method.  </p>\n</li>\n<li><p>Use other methods as needed to render the content found between the element&#39;s opening and closing tags.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the AddAttribute overload of the AddAttribute method to add an <code>Onclick</code> attribute to a markup element, and then set its value to the following ECMAScript code:  </p>\n<pre><code>alert(&#39;Hello&#39;);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#1\">            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, &quot;alert(&#39;Hello&#39;);&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#1\">            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, &quot;alert(&#39;Hello&#39;);&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#1\">      writer-&gt;AddAttribute( HtmlTextWriterAttribute::Onclick, &quot;alert(&#39;Hello&#39;);&quot; );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddAttribute_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAttribute(String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified markup attribute and value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method, with optional encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddAttribute (string name, string value, bool fEndode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the attribute to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value to assign to the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fEndode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to encode the attribute and its value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddAttribute overload of the AddAttribute method if the attribute is not one of the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> values, or if the attribute is not known until run time and encoding is needed.  </p>\n<p> For an instance of any given markup element, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class maintains a list of attributes for that element. When the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method is called, any attributes added by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method are rendered to the opening tag of the element. The list of attributes is then cleared from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.  </p>\n<p> Use the AddAttribute method with <code>fEncode</code> set to <code>true</code>, if the attribute can possibly contain a quotation mark (&quot;), a less than sign (&lt;), or an ampersand (&amp;). The method call will encode the attribute to meet the requirements of the requesting device. You can set <code>fEncode</code> to <code>false</code>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.  </p>\n<p> The coding pattern for rendering markup elements is as follows:  </p>\n<ul>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method to add any attributes to the element.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method.  </p>\n</li>\n<li><p>Use other methods as needed to render the content found between the element&#39;s opening and closing tags.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the AddAttribute overload of the AddAttribute method to ensure that a custom attribute, named <code>myattribute</code>, and its value are not encoded for an <code>&lt;img&gt;</code> element.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#3\">            &#39; Control the encoding of attributes.\n            &#39; Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, &quot;&quot;Required&quot;&quot;&quot;, True)\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.RenderBeginTag(HtmlTextWriterTag.Img)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#3\">            // Control the encoding of attributes. \n            // Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true);\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.RenderBeginTag(HtmlTextWriterTag.Img);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#3\">      // Control the encoding of attributes.\n      // Simple known values do not need encoding.\n      writer-&gt;AddAttribute( HtmlTextWriterAttribute::Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true );\n      writer-&gt;AddAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;RenderBeginTag( HtmlTextWriterTag::Img );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddAttribute_System_String_System_String_System_Web_UI_HtmlTextWriterAttribute_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAttribute(String,String,HtmlTextWriterAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified markup attribute and value, along with an <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value, to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the attribute to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value to assign to the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> that represents the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddAttribute overload of the AddAttribute method only when inheriting from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. It enables you to create new <code>name</code> and <code>key</code> pairs for attributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddAttribute_System_Web_UI_HtmlTextWriterAttribute_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAttribute(HtmlTextWriterAttribute,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the markup attribute and the attribute value to the opening tag of the element that the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object creates with a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method, with optional encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> that represents the markup attribute to add to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value to assign to the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fEncode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to encode the attribute and its value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddAttribute overload of the AddAttribute method to render a standard markup attribute, with optional encoding.  </p>\n<p> For an instance of any given markup element, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class maintains a list of attributes for that element. When the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method is called, any attributes added by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> are rendered to the opening tag of the element. The list of attributes is then cleared from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.  </p>\n<p> Use the AddAttribute method with <code>fEncode</code> set to <code>true</code>, if the attribute can possibly contain a quotation mark (&quot;), a less than sign (&lt;), or an ampersand (&amp;). The method call will encode the attribute to meet the requirements of the requesting device. You can set <code>fEncode</code> to <code>false</code>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.  </p>\n<p> The coding pattern for rendering markup elements is as follows:  </p>\n<ul>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method to add any attributes to the element.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method.  </p>\n</li>\n<li><p>Use other methods as needed to render the content found between the element&#39;s opening and closing tags.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AddAttribute method to ensure that the string value that is assigned to an <code>Alt</code> attribute for an <code>&lt;img&gt;</code> element is encoded for the requesting device.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#3\">            &#39; Control the encoding of attributes.\n            &#39; Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, &quot;&quot;Required&quot;&quot;&quot;, True)\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.RenderBeginTag(HtmlTextWriterTag.Img)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#3\">            // Control the encoding of attributes. \n            // Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true);\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.RenderBeginTag(HtmlTextWriterTag.Img);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#3\">      // Control the encoding of attributes.\n      // Simple known values do not need encoding.\n      writer-&gt;AddAttribute( HtmlTextWriterAttribute::Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true );\n      writer-&gt;AddAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;RenderBeginTag( HtmlTextWriterTag::Img );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddStyleAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddStyleAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddStyleAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddStyleAttribute (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the style attribute to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the value to assign to the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddStyleAttribute overload of the AddStyleAttribute method when the style is not a member of the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration or is not known until run time.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class maintains a list of styles for the markup elements it renders. When the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method is called, any styles that are added by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method are rendered to the opening tag of the element. The list of styles is then cleared.  </p>\n<p> The coding pattern for rendering markup elements is as follows:  </p>\n<ul>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method to add any style attributes to the element.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method.  </p>\n</li>\n<li><p>Use other methods as needed to render the content found between the element opening and closing tags.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> overload of the AddStyleAttribute method to render <code>font-size</code> and <code>color</code> style attributes on a <code>&lt;p&gt;</code> element. This code example uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class to render the contents of the control.  </p>\n<pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_AddStyleAttribute#1\">         // Add style attribute for &#39;p&#39;(paragraph) element.\n         writer-&gt;AddStyleAttribute( &quot;font-size&quot;, &quot;12pt&quot; );\n         writer-&gt;AddStyleAttribute( &quot;color&quot;, &quot;fuchsia&quot; );\n         // Output the &#39;p&#39; (paragraph) element with the style attributes.\n         writer-&gt;RenderBeginTag( &quot;p&quot; );\n         // Output the &#39;Message&#39; property contents and the time on the server.\n         writer-&gt;Write( String::Concat( Message, &quot;&lt;br&gt;&quot;,\n            &quot;The time on the server: &quot;,\n            System::DateTime::Now.ToLongTimeString() ) );\n         \n         // Close the element.\n         writer-&gt;RenderEndTag();\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_AddStyleAttribute#1\">            // Add style attribute for &#39;p&#39;(paragraph) element.\n            writer.AddStyleAttribute(&quot;font-size&quot;, &quot;12pt&quot;);\n            writer.AddStyleAttribute(&quot;color&quot;, &quot;fuchsia&quot;);\n            // Output the &#39;p&#39; (paragraph) element with the style attributes.\n            writer.RenderBeginTag(&quot;p&quot;);\n            // Output the &#39;Message&#39; property contents and the time on the server.\n            writer.Write(Message + &quot;&lt;br&gt;&quot; +\n                &quot;The time on the server: &quot; +\n                System.DateTime.Now.ToLongTimeString());\n\n            // Close the element.\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_AddStyleAttribute#1\">            &#39;Add style attribute for &#39;p&#39;(paragraph) element.\n            writer.AddStyleAttribute(&quot;font-size&quot;, &quot;12pt&quot;)\n            writer.AddStyleAttribute(&quot;color&quot;, &quot;fuchsia&quot;)\n\n            &#39;Output the &#39;p&#39; (paragraph) element with the style attributes.\n            writer.RenderBeginTag(&quot;p&quot;)\n\n            &#39;Output the &#39;Message&#39; property contents and the time on the server.\n            writer.Write((Message &amp; &quot;&lt;br&gt;&quot; &amp; &quot;The time on the server: &quot; &amp; _\n               System.DateTime.Now.ToLongTimeString()))\n\n            &#39; Close the element.\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddStyleAttribute_System_Web_UI_HtmlTextWriterStyle_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddStyleAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddStyleAttribute(HtmlTextWriterStyle,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the markup style attribute associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> value and the attribute value to the opening markup tag created by a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> that represents the style attribute to add to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the value to assign to the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddStyleAttribute overload of the AddStyleAttribute method when the style is a member of the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration and is known before run time.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class maintains a list of styles for the markup elements it renders. When the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method is called, any styles added by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method are rendered to the opening tag of the element. The list of styles is then cleared.  </p>\n<p> The coding pattern for rendering markup elements is as follows:  </p>\n<ul>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method to add any style attributes to the element.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method.  </p>\n</li>\n<li><p>Use other methods as needed to render the content found between the element opening and closing tags.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use part of an override of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method in a class derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. The code checks whether a <code>&lt;Label&gt;</code> element is being rendered. If so, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_\" data-linktype=\"relative-path\">IsStyleAttributeDefined</a> method is called to check whether a <code>Color</code> style attribute has been defined for the <code>&lt;Label&gt;</code> element. If a <code>Color</code> attribute has not been defined, the code calls this overload of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method to add the <code>Color</code> attribute to the style attribute, and then set its value to <code>red</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#4\">            &#39; If the markup element being rendered is a Label,\n            &#39; render the opening tag of a Font element before it.\n            If tagKey = HtmlTextWriterTag.Label Then\n                &#39; Check whether a Color style attribute is \n                &#39; included on the Label. If not, use the\n                &#39; AddStyleAttribute and GetStyleName methods to add one\n                &#39; and set its value to red.\n                If Not IsStyleAttributeDefined(HtmlTextWriterStyle.Color) Then\n                    AddStyleAttribute(GetStyleName(HtmlTextWriterStyle.Color), &quot;red&quot;)\n                End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#4\">      // If the markup element being rendered is a Label,\n      // render the opening tag of a &lt;Font&gt; element before it.\n      if ( tagKey == HtmlTextWriterTag::Label )\n      {\n         \n         // Check whether a Color style attribute is\n         // included on the Label. If not, use the\n         // AddStyleAttribute and GetStyleName methods to add one\n         // and set its value to red.\n         if (  !IsStyleAttributeDefined( HtmlTextWriterStyle::Color ) )\n         {\n            AddStyleAttribute( GetStyleName( HtmlTextWriterStyle::Color ), &quot;red&quot; );\n         }\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#4\">            // If the markup element being rendered is a Label,\n            // render the opening tag of a Font element before it.\n            if (tagKey == HtmlTextWriterTag.Label)\n            {\n                // Check whether a Color style attribute is \n                // included on the Label. If not, use the\n                // AddStyleAttribute and GetStyleName methods to add one\n                // and set its value to red.\n                if (!IsStyleAttributeDefined(HtmlTextWriterStyle.Color))\n                {\n                    AddStyleAttribute(GetStyleName(HtmlTextWriterStyle.Color), &quot;red&quot;);\n                }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_AddStyleAttribute_System_String_System_String_System_Web_UI_HtmlTextWriterStyle_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_AddStyleAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddStyleAttribute(String,String,HtmlTextWriterStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified markup style attribute and the attribute value, along with an <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value, to the opening markup tag created by a subsequent call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the style attribute to be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the value to assign to the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> that represents the style attribute to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AddStyleAttribute overload of the AddStyleAttribute method only when inheriting from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. It enables you to create new <code>name</code> and <code>value</code> pairs for <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_BeginRender\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_BeginRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginRender()</div>        \r\n          </div>\r\n    \r\n            <p>Notifies an <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, or an object of a derived class, that a control is about to be rendered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void BeginRender ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the BeginRender method has no functionality. You must override the BeginRender method in a class derived from <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> to provide your own rendering functionality. For example, in a markup language that might require <code>&lt;p&gt;</code> elements to be rendered immediately ahead of a control, but where the need for the <code>&lt;p&gt;</code> element is determined earlier, you could use the BeginRender override.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Close\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object and releases any system resources associated with it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This implementation of the Close method calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Close_\" data-linktype=\"relative-path\">Close</a> base method.  </p>\n<p> Following a call to the Close method, any operations on the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object might throw exceptions because all its resources have been released.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EncodeAttributeValue_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_EncodeAttributeValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncodeAttributeValue(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes the value of the specified markup attribute based on the requirements of the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> object of the current context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string EncodeAttributeValue (string value, bool fEncode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the attribute value to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fEncode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to encode the attribute value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the encoded attribute value, <code>null</code> if <code>value</code> is empty, or the unencoded attribute value if <code>fEncode</code> is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EncodeAttributeValue overload of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EncodeAttributeValue_System_Web_UI_HtmlTextWriterAttribute_System_String_\" data-linktype=\"relative-path\">EncodeAttributeValue(HtmlTextWriterAttribute,String)</a> method if the attribute is not an <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value or is not known until run time.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EncodeAttributeValue_\" data-linktype=\"relative-path\">EncodeAttributeValue</a> method removes double quotation marks (&quot;), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input. The actual encoding is performed by the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlAttributeEncode_\" data-linktype=\"relative-path\">HtmlAttributeEncode</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the EncodeAttributeValue method as a parameter in an <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method call, and then encodes a <code>color:blue</code> style attribute value.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#5\">            // If the &lt;label&gt; element is rendered and a style\n            // attribute is not defined, add a style attribute \n            // and set its value to blue.\n            if (TagKey == HtmlTextWriterTag.Label)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Style))\n                {\n                    AddAttribute(&quot;style&quot;, EncodeAttributeValue(&quot;color:blue&quot;, true));\n                    Write(NewLine);\n                    Indent = 3;\n                    OutputTabs();\n                }\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#5\">            &#39; If the &lt;label&gt; element is rendered and a style\n            &#39; attribute is not defined, add a style attribute \n            &#39; and set its value to blue.\n            If TagKey = HtmlTextWriterTag.Label Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Style) Then\n                    AddAttribute(&quot;style&quot;, EncodeAttributeValue(&quot;color:blue&quot;, True))\n                    Write(NewLine)\n                    Indent = 3\n                    OutputTabs()\n                End If\n            End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#5\">      // If the &lt;label&gt; element is rendered and a style\n      // attribute is not defined, add a style attribute \n      // and set its value to blue.\n      if ( TagKey == HtmlTextWriterTag::Label )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Style ) )\n         {\n            AddAttribute( &quot;style&quot;, EncodeAttributeValue( &quot;color:blue&quot;, true ) );\n            Write( NewLine );\n            Indent = 3;\n            OutputTabs();\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EncodeAttributeValue_System_Web_UI_HtmlTextWriterAttribute_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_EncodeAttributeValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncodeAttributeValue(HtmlTextWriterAttribute,String)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes the value of the specified markup attribute based on the requirements of the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> object of the current context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attrKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> representing the markup attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the attribute value to encode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the encoded attribute value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EncodeAttributeValue method removes double quotation marks (&quot;), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input. The actual encoding is performed by the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlAttributeEncode_\" data-linktype=\"relative-path\">HtmlAttributeEncode</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EncodeUrl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_EncodeUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncodeUrl(String)</div>        \r\n          </div>\r\n    \r\n            <p>Performs minimal URL encoding by converting spaces in the specified URL to the string &quot;%20&quot;.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string EncodeUrl (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the URL to encode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the encoded URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character. The hexadecimal representation of a space is 20.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the EncodeUrl method to convert any spaces in the URL that is passed as a parameter in an <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method call.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#6\">            // If an &lt;anchor&gt; element is rendered and an href\n            // attribute has not been defined, call the AddAttribute\n            // method to add an href attribute\n            // and set it to http://www.cohowinery.com.\n            // Use the EncodeUrl method to convert any spaces to %20.\n            if (TagKey == HtmlTextWriterTag.A)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Href))\n                {\n                    AddAttribute(&quot;href&quot;, EncodeUrl(&quot;http://www.cohowinery.com&quot;));\n                }\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#6\">            &#39; If an &lt;anchor&gt; element is rendered and an href\n            &#39; attribute has not been defined, call the AddAttribute\n            &#39; method to add an href attribute\n            &#39; and set it to http://www.cohowinery.com.\n            &#39; Use the EncodeUrl method to convert any spaces to %20.\n            If TagKey = HtmlTextWriterTag.A Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Href) Then\n                    AddAttribute(&quot;href&quot;, EncodeUrl(&quot;http://www.cohowinery.com&quot;))\n                End If\n            End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#6\">      // If an &lt;anchor&gt; element is rendered and an href\n      // attribute has not been defined, call the AddAttribute\n      // method to add an href attribute\n      // and set it to http://www.cohowinery.com.\n      // Use the EncodeUrl method to convert any spaces to %20.\n      if ( TagKey == HtmlTextWriterTag::A )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Href ) )\n         {\n            AddAttribute( &quot;href&quot;, EncodeUrl( &quot;http://www.cohowinery.com&quot; ) );\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EndRender\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_EndRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndRender()</div>        \r\n          </div>\r\n    \r\n            <p>Notifies an <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, or an object of a derived class, that a control has finished rendering. You can use this method to close any markup elements opened in the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.BeginRender*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void EndRender ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the EndRender method has no functionality. You must override EndRender in a class derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class to provide your own rendering functionality.  </p>\n<p> You can use the EndRender method to close any markup elements opened in the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_BeginRender_\" data-linktype=\"relative-path\">BeginRender</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_EnterStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnterStyle(Style)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the opening tag of a <code>&lt;span&gt;</code> element that contains attributes that implement the layout and character formatting of the specified style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void EnterStyle (System.Web.UI.WebControls.Style style);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> that specifies the layout and formatting to begin applying to the block of markup.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EnterStyle method to apply styles, such as background color or border width, to a block of markup.  </p>\n<p> The EnterStyle and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> methods allow a device adapter or control to create markup that uses the character formatting of the specified style. Use the same value for <code>style</code> in the EnterStyle method that you use in the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> method.  </p>\n<p> The EnterStyle overload of the EnterStyle method renders the opening tag of a <code>&lt;span&gt;</code> element. This method then adds the necessary attributes and style attributes to the opening tag of the <code>&lt;span&gt;</code> element to display the settings specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> object. If you want to render a different markup element to contain the attributes and style attributes, use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"relative-path\">EnterStyle(Style,HtmlTextWriterTag)</a> overload.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a custom class named <code>TextSample</code>, derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a> class, that uses the EnterStyle method to apply a <a class=\"xref\" href=\"system.web.ui.webcontrols.style#System_Web_UI_WebControls_Style_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> style to a string of text.  </p>\n<p> The EnterStyle method renders the HTML <code>&lt;span style=&quot;color:Navy;&quot;&gt;</code>. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> method call closes the <code>&lt;span&gt;</code> element after the text has been rendered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter_EnterStyle#1\">Imports System\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Security.Permissions\nImports System.Drawing\n\n&#39; Create a custom class, named TextSample, that renders\n&#39; its Text property with styles applied by the\n&#39; EnterStyle and ExitStyle methods. \nNamespace AspNet.Samples\n\n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public Class TextSample\n        Inherits Control\n\n        &#39; Create an instance of the Style class.\n        Private textStyle As Style = New Style()\n        Private textMessage As String\n\n        &#39; Create a Text property.\n        Public Property Text() As String\n            Get\n                Return textMessage\n            End Get\n            Set(ByVal value As String)\n                textMessage = value\n            End Set\n        End Property\n\n\n        Protected Overrides Sub Render(ByVal writer As HtmlTextWriter)\n            &#39; Set the value of the Text property.\n            textMessage = &quot;Hello, World!&quot;\n\n            &#39; Set the Style object&#39;s ForeColor\n            &#39; property to Navy.\n            textStyle.ForeColor = Color.Navy\n\n            &#39; Render the Text property with the style.\n            writer.WriteLine(&quot;The text property styled: &quot;)\n            writer.EnterStyle(textStyle)\n            writer.Write(Text)\n            writer.ExitStyle(textStyle)\n\n            &#39; Use the WriteBreak method twice to render\n            &#39; an empty line between the lines of rendered text.\n            writer.WriteBreak()\n            writer.WriteBreak()\n\n            &#39; Render the Text property without the style.\n            writer.WriteLine(&quot;The Text property unstyled: &quot;)\n            writer.Write(Text)\n        End Sub\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_System_Web_UI_HtmlTextWriterTag_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_EnterStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnterStyle(Style,HtmlTextWriterTag)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> that specifies the layout and formatting to begin applying to the block of markup.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> that specifies the opening tag of the markup element that will contain the style object specified in <code>style</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EnterStyle method to apply styles, such as background color or border width, to a block of markup.  </p>\n<p> The EnterStyle and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> methods allow a device adapter or control to create markup that uses the character formatting of the specified style. Use the same value for <code>style</code> in the EnterStyle method that you use in the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> method.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> overload of the EnterStyle method renders the opening tag of the element specified by the <code>tag</code> parameter. The EnterStyle method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> object. Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"relative-path\">EnterStyle(Style)</a> overload to render the opening tag of a <code>&lt;span&gt;</code> element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a custom class named <code>TextSample</code>, derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a> class, that uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method to apply a <a class=\"xref\" href=\"system.web.ui.webcontrols.style#System_Web_UI_WebControls_Style_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> style to a string of text.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method renders the HTML<code>&lt;span style=&quot;color:Navy;&quot;&gt;</code>. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> method call closes the <code>&lt;span&gt;</code> element after the text has been rendered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter_EnterStyle#1\">Imports System\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Security.Permissions\nImports System.Drawing\n\n&#39; Create a custom class, named TextSample, that renders\n&#39; its Text property with styles applied by the\n&#39; EnterStyle and ExitStyle methods. \nNamespace AspNet.Samples\n\n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public Class TextSample\n        Inherits Control\n\n        &#39; Create an instance of the Style class.\n        Private textStyle As Style = New Style()\n        Private textMessage As String\n\n        &#39; Create a Text property.\n        Public Property Text() As String\n            Get\n                Return textMessage\n            End Get\n            Set(ByVal value As String)\n                textMessage = value\n            End Set\n        End Property\n\n\n        Protected Overrides Sub Render(ByVal writer As HtmlTextWriter)\n            &#39; Set the value of the Text property.\n            textMessage = &quot;Hello, World!&quot;\n\n            &#39; Set the Style object&#39;s ForeColor\n            &#39; property to Navy.\n            textStyle.ForeColor = Color.Navy\n\n            &#39; Render the Text property with the style.\n            writer.WriteLine(&quot;The text property styled: &quot;)\n            writer.EnterStyle(textStyle)\n            writer.Write(Text)\n            writer.ExitStyle(textStyle)\n\n            &#39; Use the WriteBreak method twice to render\n            &#39; an empty line between the lines of rendered text.\n            writer.WriteBreak()\n            writer.WriteBreak()\n\n            &#39; Render the Text property without the style.\n            writer.WriteLine(&quot;The Text property unstyled: &quot;)\n            writer.Write(Text)\n        End Sub\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_ExitStyle_System_Web_UI_WebControls_Style_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_ExitStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExitStyle(Style)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the closing tag of a <code>&lt;span&gt;</code> element to end the specified layout and character formatting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void ExitStyle (System.Web.UI.WebControls.Style style);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> that specifies the layout and formatting to close.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExitStyle overload of the ExitStyle method renders the closing tag of a <code>&lt;span&gt;</code> element after the closing tag of the control, closing the element opened by the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> call.  </p>\n<p> The ExitStyle and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style. Use the same value for <code>style</code> in the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method that you use in the corresponding ExitStyle method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a custom class named <code>TextSample</code>, derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a> class, that uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method to apply a <a class=\"xref\" href=\"system.web.ui.webcontrols.style#System_Web_UI_WebControls_Style_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> style to a string of text.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method renders the HTML <code>&lt;span style=&quot;color:Navy;&quot;&gt;</code>. The ExitStyle method call closes the <code>&lt;span&gt;</code> element after the text has been rendered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter_EnterStyle#1\">Imports System\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Security.Permissions\nImports System.Drawing\n\n&#39; Create a custom class, named TextSample, that renders\n&#39; its Text property with styles applied by the\n&#39; EnterStyle and ExitStyle methods. \nNamespace AspNet.Samples\n\n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public Class TextSample\n        Inherits Control\n\n        &#39; Create an instance of the Style class.\n        Private textStyle As Style = New Style()\n        Private textMessage As String\n\n        &#39; Create a Text property.\n        Public Property Text() As String\n            Get\n                Return textMessage\n            End Get\n            Set(ByVal value As String)\n                textMessage = value\n            End Set\n        End Property\n\n\n        Protected Overrides Sub Render(ByVal writer As HtmlTextWriter)\n            &#39; Set the value of the Text property.\n            textMessage = &quot;Hello, World!&quot;\n\n            &#39; Set the Style object&#39;s ForeColor\n            &#39; property to Navy.\n            textStyle.ForeColor = Color.Navy\n\n            &#39; Render the Text property with the style.\n            writer.WriteLine(&quot;The text property styled: &quot;)\n            writer.EnterStyle(textStyle)\n            writer.Write(Text)\n            writer.ExitStyle(textStyle)\n\n            &#39; Use the WriteBreak method twice to render\n            &#39; an empty line between the lines of rendered text.\n            writer.WriteBreak()\n            writer.WriteBreak()\n\n            &#39; Render the Text property without the style.\n            writer.WriteLine(&quot;The Text property unstyled: &quot;)\n            writer.Write(Text)\n        End Sub\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_ExitStyle_System_Web_UI_WebControls_Style_System_Web_UI_HtmlTextWriterTag_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_ExitStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExitStyle(Style,HtmlTextWriterTag)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> that specifies the layout and formatting to stop applying to the output text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> that specifies the closing tag of the markup element that contained the attributes that applied the specified style. This must match the key passed in the corresponding <span class=\"xref\">stem.Web.UI.HtmlTextWriter.EnterStyle*</span> call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExitStyle overload of the ExitStyle method renders the closing tag of the element that is specified by <code>tag</code> after the closing tag of the control, closing the element that was opened by the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_System_Web_UI_WebControls_Style_System_Web_UI_HtmlTextWriterTag_\" data-linktype=\"relative-path\">EnterStyle(Style,HtmlTextWriterTag)</a> method call.  </p>\n<p> The ExitStyle and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style. Use the same value for <code>style</code> in the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method that you use in the corresponding ExitStyle method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a custom class named <code>TextSample</code>, derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a> class, that uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method to apply a <a class=\"xref\" href=\"system.web.ui.webcontrols.style#System_Web_UI_WebControls_Style_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> style to a string of text.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_EnterStyle_\" data-linktype=\"relative-path\">EnterStyle</a> method renders the HTML <code>&lt;span style=&quot;color:Navy;&quot;&gt;</code>. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_ExitStyle_\" data-linktype=\"relative-path\">ExitStyle</a> method call closes the <code>&lt;span&gt;</code> element after the text has been rendered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter_EnterStyle#1\">Imports System\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Security.Permissions\nImports System.Drawing\n\n&#39; Create a custom class, named TextSample, that renders\n&#39; its Text property with styles applied by the\n&#39; EnterStyle and ExitStyle methods. \nNamespace AspNet.Samples\n\n    &lt;AspNetHostingPermission(SecurityAction.Demand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n        Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n    Public Class TextSample\n        Inherits Control\n\n        &#39; Create an instance of the Style class.\n        Private textStyle As Style = New Style()\n        Private textMessage As String\n\n        &#39; Create a Text property.\n        Public Property Text() As String\n            Get\n                Return textMessage\n            End Get\n            Set(ByVal value As String)\n                textMessage = value\n            End Set\n        End Property\n\n\n        Protected Overrides Sub Render(ByVal writer As HtmlTextWriter)\n            &#39; Set the value of the Text property.\n            textMessage = &quot;Hello, World!&quot;\n\n            &#39; Set the Style object&#39;s ForeColor\n            &#39; property to Navy.\n            textStyle.ForeColor = Color.Navy\n\n            &#39; Render the Text property with the style.\n            writer.WriteLine(&quot;The text property styled: &quot;)\n            writer.EnterStyle(textStyle)\n            writer.Write(Text)\n            writer.ExitStyle(textStyle)\n\n            &#39; Use the WriteBreak method twice to render\n            &#39; an empty line between the lines of rendered text.\n            writer.WriteBreak()\n            writer.WriteBreak()\n\n            &#39; Render the Text property without the style.\n            writer.WriteLine(&quot;The Text property unstyled: &quot;)\n            writer.Write(Text)\n        End Sub\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_FilterAttributes\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_FilterAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilterAttributes()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all the markup and style attributes on all properties of the page or Web server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void FilterAttributes ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before attributes are rendered on a markup element, the FilterAttributes method is called. In turn, the FilterAttributes method calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_OnAttributeRender_\" data-linktype=\"relative-path\">OnAttributeRender</a> and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_OnStyleAttributeRender_\" data-linktype=\"relative-path\">OnStyleAttributeRender</a> methods for each attribute and style to render.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use a custom class, derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class, that overrides the FilterAttributes method. When called, the FilterAttributes override checks whether the text writer renders any <code>&lt;label&gt;</code> or <code>&lt;a&gt;</code> elements:  </p>\n<ul>\n<li><p>If a <code>&lt;label&gt;</code> element is being rendered, the FilterAttributes method checks whether a <code>style</code> attribute is rendered on the element and, if not, creates a <code>style</code> attribute and sets it to <code>color: blue</code>.  </p>\n</li>\n<li><p>If an <code>&lt;a&gt;</code> element is being rendered, the FilterAttributes method determines whether an <code>href</code> attribute is included and, if not, adds an <code>href</code> to the URL <a href=\"http://www.cohowinery.com\" data-linktype=\"external\">http://www.cohowinery.com</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#4\">        // Override the FilterAttributes method to check whether \n        // &lt;label&gt; and &lt;anchor&gt; elements contain specific attributes.      \n        protected override void FilterAttributes()\n        {\n            // If the &lt;label&gt; element is rendered and a style\n            // attribute is not defined, add a style attribute \n            // and set its value to blue.\n            if (TagKey == HtmlTextWriterTag.Label)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Style))\n                {\n                    AddAttribute(&quot;style&quot;, EncodeAttributeValue(&quot;color:blue&quot;, true));\n                    Write(NewLine);\n                    Indent = 3;\n                    OutputTabs();\n                }\n            }\n\n            // If an &lt;anchor&gt; element is rendered and an href\n            // attribute has not been defined, call the AddAttribute\n            // method to add an href attribute\n            // and set it to http://www.cohowinery.com.\n            // Use the EncodeUrl method to convert any spaces to %20.\n            if (TagKey == HtmlTextWriterTag.A)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Href))\n                {\n                    AddAttribute(&quot;href&quot;, EncodeUrl(&quot;http://www.cohowinery.com&quot;));\n                }\n            }\n            // Call the FilterAttributes method of the base class.\n            base.FilterAttributes();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#4\">        &#39; Override the FilterAttributes method to check whether \n        &#39; &lt;label&gt; and &lt;anchor&gt; elements contain specific attributes.   \n        Protected Overrides Sub FilterAttributes()\n\n            &#39; If the &lt;label&gt; element is rendered and a style\n            &#39; attribute is not defined, add a style attribute \n            &#39; and set its value to blue.\n            If TagKey = HtmlTextWriterTag.Label Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Style) Then\n                    AddAttribute(&quot;style&quot;, EncodeAttributeValue(&quot;color:blue&quot;, True))\n                    Write(NewLine)\n                    Indent = 3\n                    OutputTabs()\n                End If\n            End If\n            &#39; If an &lt;anchor&gt; element is rendered and an href\n            &#39; attribute has not been defined, call the AddAttribute\n            &#39; method to add an href attribute\n            &#39; and set it to http://www.cohowinery.com.\n            &#39; Use the EncodeUrl method to convert any spaces to %20.\n            If TagKey = HtmlTextWriterTag.A Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Href) Then\n                    AddAttribute(&quot;href&quot;, EncodeUrl(&quot;http://www.cohowinery.com&quot;))\n                End If\n            End If\n\n            &#39; Call the FilterAttributes method of the base class.\n            MyBase.FilterAttributes()\n        End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#4\">   // Override the FilterAttributes method to check whether \n   // &lt;label&gt; and &lt;anchor&gt; elements contain specific attributes. \n   virtual void FilterAttributes() override\n   {\n      // If the &lt;label&gt; element is rendered and a style\n      // attribute is not defined, add a style attribute \n      // and set its value to blue.\n      if ( TagKey == HtmlTextWriterTag::Label )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Style ) )\n         {\n            AddAttribute( &quot;style&quot;, EncodeAttributeValue( &quot;color:blue&quot;, true ) );\n            Write( NewLine );\n            Indent = 3;\n            OutputTabs();\n         }\n      }\n\n      // If an &lt;anchor&gt; element is rendered and an href\n      // attribute has not been defined, call the AddAttribute\n      // method to add an href attribute\n      // and set it to http://www.cohowinery.com.\n      // Use the EncodeUrl method to convert any spaces to %20.\n      if ( TagKey == HtmlTextWriterTag::A )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Href ) )\n         {\n            AddAttribute( &quot;href&quot;, EncodeUrl( &quot;http://www.cohowinery.com&quot; ) );\n         }\n      }\n\n      // Call the FilterAttributes method of the base class.\n      __super::FilterAttributes();\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Flush\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all buffers for the current <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object and causes any buffered data to be written to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the Flush method just calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Flush_\" data-linktype=\"relative-path\">Flush</a> base method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_GetAttributeKey_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_GetAttributeKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAttributeKey(String)</div>        \r\n          </div>\r\n    \r\n            <p>Obtains the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value for the specified attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attrName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the attribute for which to obtain the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value for the specified attribute; otherwise, an invalid <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> value if the attribute is not a member of the enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>attrName</code> is <code>null</code> or an empty string (&quot;&quot;), or cannot be found in the table of attribute names, the value -1, typed to an <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> object, is returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a class, derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class, that overrides the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method. The override checks whether <code>tagKey</code> is equal to the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> field, which indicates that a <code>&lt;font&gt;</code> markup element will be rendered. If so, the override calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_IsAttributeDefined_\" data-linktype=\"relative-path\">IsAttributeDefined</a> method to find out whether the <code>&lt;font&gt;</code> element contains a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute. If the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_IsAttributeDefined_\" data-linktype=\"relative-path\">IsAttributeDefined</a> returns <code>false</code>, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method calls the GetAttributeKey method, which defines the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> and sets its value to <code>30pt</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#3\">            // If the tagKey parameter is set to a &lt;font&gt; element\n            // but a size attribute is not defined on the element,\n            // the AddStyleAttribute method adds a size attribute\n            // and sets it to 30 point. \n            if (tagKey == HtmlTextWriterTag.Font)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Size))\n                {\n                    AddAttribute(GetAttributeKey(&quot;size&quot;), &quot;30pt&quot;);\n                }\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#3\">            &#39; If the tagKey parameter is set to a &lt;font&gt; element\n            &#39; but a size attribute is not defined on the element,\n            &#39; the AddStyleAttribute method adds a size attribute\n            &#39; and sets it to 30 point. \n            If tagKey = HtmlTextWriterTag.Font Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Size) Then\n                    AddAttribute(GetAttributeKey(&quot;size&quot;), &quot;30pt&quot;)\n                End If\n            End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#3\">      // If the tagKey parameter is set to a &lt;font&gt; element\n      // but a size attribute is not defined on the element,\n      // the AddStyleAttribute method adds a size attribute\n      // and sets it to 30 point.\n      if ( tagKey == HtmlTextWriterTag::Font )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Size ) )\n         {\n            AddAttribute( GetAttributeKey( &quot;size&quot; ), &quot;30pt&quot; );\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_GetAttributeName_System_Web_UI_HtmlTextWriterAttribute_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_GetAttributeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAttributeName(HtmlTextWriterAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Obtains the name of the markup attribute associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attrKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> to obtain the markup attribute name for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the name of the markup attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetAttributeName method returns an empty string (&quot;&quot;), if <code>attrKey</code> is not a valid <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the GetAttributeName method to convert a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> enumeration value to its string name.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#6\">                &#39; Use the GetAttributeName method to associate \n                &#39; the Size attribute with its HtmlTextWriteAttribute\n                &#39; enumeration value in a Write method call.\n                writer.Write(GetAttributeName(HtmlTextWriterAttribute.Size))\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#6\">         // Use the GetAttributeName method to associate \n         // the Size attribute with its HtmlTextWriteAttribute\n         // enumeration value in a Write method call.\n         Write( GetAttributeName( HtmlTextWriterAttribute::Size ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#6\">                // Use the GetAttributeName method to associate \n                // the Size attribute with its HtmlTextWriteAttribute\n                // enumeration value in a Write method call.\n                Write(GetAttributeName(HtmlTextWriterAttribute.Size));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_GetStyleKey_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_GetStyleKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStyleKey(String)</div>        \r\n          </div>\r\n    \r\n            <p>Obtains the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value for the specified style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>styleName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The style attribute for which to obtain the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value corresponding to <code>styleName</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetStyleKey method returns the value -1 typed as a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> value, if <code>styleName</code> does not correspond to any <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method in a class derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> override determines whether a <code>&lt;label&gt;</code> markup will be rendered, and, if so, checks the element for a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute. If a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute has not been defined, the GetStyleKey method is used as the first parameter in a call to the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method to add a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute to a <code>&lt;label&gt;</code> markup element and set the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute to <code>red</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#1\">        // Override the RenderBeginTag method to check whether\n        // the tagKey parameter is set to a &lt;label&gt; element\n        // or a &lt;font&gt; element.\n        public override void RenderBeginTag(HtmlTextWriterTag tagKey)\n        {\n\n            // If the tagKey parameter is set to a &lt;label&gt; element\n            // but a color attribute is not defined on the element,\n            // the AddStyleAttribute method adds a color attribute\n            // and sets it to red.\n            if (tagKey == HtmlTextWriterTag.Label)\n            {\n                if (!IsStyleAttributeDefined(HtmlTextWriterStyle.Color))\n                {\n                    AddStyleAttribute(GetStyleKey(&quot;color&quot;), &quot;red&quot;);\n                }\n            }\n            // If the tagKey parameter is set to a &lt;font&gt; element\n            // but a size attribute is not defined on the element,\n            // the AddStyleAttribute method adds a size attribute\n            // and sets it to 30 point. \n            if (tagKey == HtmlTextWriterTag.Font)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Size))\n                {\n                    AddAttribute(GetAttributeKey(&quot;size&quot;), &quot;30pt&quot;);\n                }\n            }\n            // Call the base class&#39;s RenderBeginTag method\n            // to ensure that this custom MarkupTextWriter\n            // includes functionality for all other markup elements.\n            base.RenderBeginTag(tagKey);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#1\">        &#39; Override the RenderBeginTag method to check whether\n        &#39; the tagKey parameter is set to a &lt;label&gt; element\n        &#39; or a &lt;font&gt; element.   \n        Public Overloads Overrides Sub RenderBeginTag(ByVal tagKey As HtmlTextWriterTag)\n            &#39; If the tagKey parameter is set to a &lt;label&gt; element\n            &#39; but a color attribute is not defined on the element,\n            &#39; the AddStyleAttribute method adds a color attribute\n            &#39; and sets it to red.\n            If tagKey = HtmlTextWriterTag.Label Then\n                If Not IsStyleAttributeDefined(HtmlTextWriterStyle.Color) Then\n                    AddStyleAttribute(GetStyleKey(&quot;color&quot;), &quot;red&quot;)\n                End If\n            End If\n\n            &#39; If the tagKey parameter is set to a &lt;font&gt; element\n            &#39; but a size attribute is not defined on the element,\n            &#39; the AddStyleAttribute method adds a size attribute\n            &#39; and sets it to 30 point. \n            If tagKey = HtmlTextWriterTag.Font Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Size) Then\n                    AddAttribute(GetAttributeKey(&quot;size&quot;), &quot;30pt&quot;)\n                End If\n            End If\n\n            &#39; Call the base class&#39;s RenderBeginTag method\n            &#39; to ensure that this custom MarkupTextWriter\n            &#39; includes functionality for all other markup elements.\n            MyBase.RenderBeginTag(tagKey)\n        End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#1\">   // Override the RenderBeginTag method to check whether\n   // the tagKey parameter is set to a &lt;label&gt; element\n   // or a &lt;font&gt; element.   \n   virtual void RenderBeginTag( HtmlTextWriterTag tagKey ) override\n   {\n      // If the tagKey parameter is set to a &lt;label&gt; element\n      // but a color attribute is not defined on the element,\n      // the AddStyleAttribute method adds a color attribute\n      // and sets it to red.\n      if ( tagKey == HtmlTextWriterTag::Label )\n      {\n         if (  !IsStyleAttributeDefined( HtmlTextWriterStyle::Color ) )\n         {\n            AddStyleAttribute( GetStyleKey( &quot;color&quot; ), &quot;red&quot; );\n         }\n      }\n\n      // If the tagKey parameter is set to a &lt;font&gt; element\n      // but a size attribute is not defined on the element,\n      // the AddStyleAttribute method adds a size attribute\n      // and sets it to 30 point.\n      if ( tagKey == HtmlTextWriterTag::Font )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Size ) )\n         {\n            AddAttribute( GetAttributeKey( &quot;size&quot; ), &quot;30pt&quot; );\n         }\n      }\n\n      // Call the base class&#39;s RenderBeginTag method\n      // to ensure that calling this custom markup writer\n      // includes functionality for all other elements.\n      __super::RenderBeginTag( tagKey );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_GetStyleName_System_Web_UI_HtmlTextWriterStyle_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_GetStyleName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStyleName(HtmlTextWriterStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Obtains the markup style attribute name associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>styleKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> to obtain the style attribute name for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The style attribute name associated with the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration value specified in <code>styleKey</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>styleKey</code> is not a valid <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> object, the GetStyleName method returns an empty string (&quot;&quot;).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to check whether a <code>&lt;label&gt;</code> element is being rendered. If so, it checks whether a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> style attribute has been defined on the element. If the attribute has not been defined, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method is called and the GetStyleName method converts the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> enumeration member into its string representation to pass to the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#4\">            &#39; If the markup element being rendered is a Label,\n            &#39; render the opening tag of a Font element before it.\n            If tagKey = HtmlTextWriterTag.Label Then\n                &#39; Check whether a Color style attribute is \n                &#39; included on the Label. If not, use the\n                &#39; AddStyleAttribute and GetStyleName methods to add one\n                &#39; and set its value to red.\n                If Not IsStyleAttributeDefined(HtmlTextWriterStyle.Color) Then\n                    AddStyleAttribute(GetStyleName(HtmlTextWriterStyle.Color), &quot;red&quot;)\n                End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#4\">      // If the markup element being rendered is a Label,\n      // render the opening tag of a &lt;Font&gt; element before it.\n      if ( tagKey == HtmlTextWriterTag::Label )\n      {\n         \n         // Check whether a Color style attribute is\n         // included on the Label. If not, use the\n         // AddStyleAttribute and GetStyleName methods to add one\n         // and set its value to red.\n         if (  !IsStyleAttributeDefined( HtmlTextWriterStyle::Color ) )\n         {\n            AddStyleAttribute( GetStyleName( HtmlTextWriterStyle::Color ), &quot;red&quot; );\n         }\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#4\">            // If the markup element being rendered is a Label,\n            // render the opening tag of a Font element before it.\n            if (tagKey == HtmlTextWriterTag.Label)\n            {\n                // Check whether a Color style attribute is \n                // included on the Label. If not, use the\n                // AddStyleAttribute and GetStyleName methods to add one\n                // and set its value to red.\n                if (!IsStyleAttributeDefined(HtmlTextWriterStyle.Color))\n                {\n                    AddStyleAttribute(GetStyleName(HtmlTextWriterStyle.Color), &quot;red&quot;);\n                }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_GetTagKey_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_GetTagKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTagKey(String)</div>        \r\n          </div>\r\n    \r\n            <p>Obtains the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value associated with the specified markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The markup element for which to obtain the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value; otherwise, if <code>tagName</code> is not associated with a specific <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value, <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>tagName</code> is <code>null</code>, an empty string (&quot;&quot;), or cannot be found in the table of markup tag names, the GetTagKey method returns the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> field.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the overload of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method that takes a string as its parameter. The string is passed to the GetTagKey method, which converts it to the corresponding <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration member, and then passes that to the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> overload that takes a <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value as a parameter.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#8\">        Public Overloads Overrides Sub RenderBeginTag(ByVal tagName As String)\n            &#39; Call the overloaded RenderBeginTag(HtmlTextWriterTag) method.\n            RenderBeginTag(GetTagKey(tagName))\n        End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#8\">   virtual void RenderBeginTag( String^ tagName ) override\n   {\n      \n      // Call the overloaded RenderBeginTag(HtmlTextWriterTag) method.\n      RenderBeginTag( GetTagKey( tagName ) );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#8\">        public override void RenderBeginTag(string tagName)\n        {\n            // Call the overloaded RenderBeginTag(HtmlTextWriterTag)\n            // method.\n            RenderBeginTag(GetTagKey(tagName));\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_GetTagName_System_Web_UI_HtmlTextWriterTag_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_GetTagName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTagName(HtmlTextWriterTag)</div>        \r\n          </div>\r\n    \r\n            <p>Obtains the markup element associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> to obtain the markup element for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representing the markup element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>tagKey</code> is not a valid <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value, the GetTagName method returns an empty string (&quot;&quot;).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to close a <code>&lt;font&gt;</code> element by using the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> method. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> method calls the GetTagName method to convert the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value to a string.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#7\">                &#39; Close the Font element.\n                Me.WriteEndTag(GetTagName(HtmlTextWriterTag.Font))\n            End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#7\">         // Close the Font element.\n         WriteEndTag( GetTagName( HtmlTextWriterTag::Font ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#7\">                // Close the Font element.\n                Write(GetTagName(HtmlTextWriterTag.Font));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_IsAttributeDefined_System_Web_UI_HtmlTextWriterAttribute_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_IsAttributeDefined_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAttributeDefined(HtmlTextWriterAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup attribute and its value are rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> associated with the markup attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the attribute is rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the value to be assigned to the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> object, use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_IsAttributeDefined_System_Web_UI_HtmlTextWriterAttribute_System_String__\" data-linktype=\"relative-path\">IsAttributeDefined(HtmlTextWriterAttribute,String)</a> overload instead of this one.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use an override of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method in a class that inherits from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> override checks whether a <code>&lt;font&gt;</code> markup element will be rendered. If so, the override calls the IsAttributeDefined method to check whether the <code>&lt;font&gt;</code> element contains a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute. If not, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_GetAttributeKey_\" data-linktype=\"relative-path\">GetAttributeKey</a> method, which defines the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute and sets its value to <code>30pt</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#3\">            // If the tagKey parameter is set to a &lt;font&gt; element\n            // but a size attribute is not defined on the element,\n            // the AddStyleAttribute method adds a size attribute\n            // and sets it to 30 point. \n            if (tagKey == HtmlTextWriterTag.Font)\n            {\n                if (!IsAttributeDefined(HtmlTextWriterAttribute.Size))\n                {\n                    AddAttribute(GetAttributeKey(&quot;size&quot;), &quot;30pt&quot;);\n                }\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#3\">            &#39; If the tagKey parameter is set to a &lt;font&gt; element\n            &#39; but a size attribute is not defined on the element,\n            &#39; the AddStyleAttribute method adds a size attribute\n            &#39; and sets it to 30 point. \n            If tagKey = HtmlTextWriterTag.Font Then\n                If Not IsAttributeDefined(HtmlTextWriterAttribute.Size) Then\n                    AddAttribute(GetAttributeKey(&quot;size&quot;), &quot;30pt&quot;)\n                End If\n            End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#3\">      // If the tagKey parameter is set to a &lt;font&gt; element\n      // but a size attribute is not defined on the element,\n      // the AddStyleAttribute method adds a size attribute\n      // and sets it to 30 point.\n      if ( tagKey == HtmlTextWriterTag::Font )\n      {\n         if (  !IsAttributeDefined( HtmlTextWriterAttribute::Size ) )\n         {\n            AddAttribute( GetAttributeKey( &quot;size&quot; ), &quot;30pt&quot; );\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_IsAttributeDefined_System_Web_UI_HtmlTextWriterAttribute_System_String__\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_IsAttributeDefined_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAttributeDefined(HtmlTextWriterAttribute,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup attribute and its value are rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> associated with the markup attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value assigned to the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the attribute is rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the IsAttributeDefined method returns <code>true</code>, the value to be assigned to the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> object is returned in the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_System_Web_UI_HtmlTextWriterStyle_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsStyleAttributeDefined(HtmlTextWriterStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup style attribute is rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> associated with the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the attribute will be rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the value that will be rendered with the specified style attribute, use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_System_Web_UI_HtmlTextWriterStyle_System_String__\" data-linktype=\"relative-path\">IsStyleAttributeDefined(HtmlTextWriterStyle,String)</a> overload of the IsStyleAttributeDefined method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to check whether a <code>&lt;label&gt;</code> element is being rendered. If so, the IsStyleAttributeDefined method checks whether a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> style attribute has been defined on the element. If the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute has not been defined, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method defines the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute and sets its value to <code>red</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods3#4\">            &#39; If the markup element being rendered is a Label,\n            &#39; render the opening tag of a Font element before it.\n            If tagKey = HtmlTextWriterTag.Label Then\n                &#39; Check whether a Color style attribute is \n                &#39; included on the Label. If not, use the\n                &#39; AddStyleAttribute and GetStyleName methods to add one\n                &#39; and set its value to red.\n                If Not IsStyleAttributeDefined(HtmlTextWriterStyle.Color) Then\n                    AddStyleAttribute(GetStyleName(HtmlTextWriterStyle.Color), &quot;red&quot;)\n                End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods3#4\">      // If the markup element being rendered is a Label,\n      // render the opening tag of a &lt;Font&gt; element before it.\n      if ( tagKey == HtmlTextWriterTag::Label )\n      {\n         \n         // Check whether a Color style attribute is\n         // included on the Label. If not, use the\n         // AddStyleAttribute and GetStyleName methods to add one\n         // and set its value to red.\n         if (  !IsStyleAttributeDefined( HtmlTextWriterStyle::Color ) )\n         {\n            AddStyleAttribute( GetStyleName( HtmlTextWriterStyle::Color ), &quot;red&quot; );\n         }\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods3#4\">            // If the markup element being rendered is a Label,\n            // render the opening tag of a Font element before it.\n            if (tagKey == HtmlTextWriterTag.Label)\n            {\n                // Check whether a Color style attribute is \n                // included on the Label. If not, use the\n                // AddStyleAttribute and GetStyleName methods to add one\n                // and set its value to red.\n                if (!IsStyleAttributeDefined(HtmlTextWriterStyle.Color))\n                {\n                    AddStyleAttribute(GetStyleName(HtmlTextWriterStyle.Color), &quot;red&quot;);\n                }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_System_Web_UI_HtmlTextWriterStyle_System_String__\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_IsStyleAttributeDefined_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsStyleAttributeDefined(HtmlTextWriterStyle,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup style attribute and its value are rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> associated with the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value assigned to the style attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the attribute and its value will be rendered during the next call to the <span class=\"xref\">stem.Web.UI.HtmlTextWriter.RenderBeginTag*</span> method; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the IsStyleAttributeDefined method returns <code>true</code>, the value to be assigned to the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute is returned in the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_IsValidFormAttribute_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_IsValidFormAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsValidFormAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks an attribute to ensure that it can be rendered in the opening tag of a <code>&lt;form&gt;</code> markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsValidFormAttribute (string attribute);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attribute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the name of the attribute to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the IsValidFormAttribute method returns <code>true</code> for all attributes. Override the IsValidFormAttribute to limit the attributes that can be rendered in the opening tag of a <code>&lt;form&gt;</code> element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_OnAttributeRender_System_String_System_String_System_Web_UI_HtmlTextWriterAttribute_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_OnAttributeRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAttributeRender(String,String,HtmlTextWriterAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the attribute to render.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value that is assigned to the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> associated with the markup attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the OnAttributeRender method always returns <code>true</code>. The OnAttributeRender overrides can determine whether an attribute will be rendered to the page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the OnAttributeRender method. If a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute is rendered, but the <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> value is not <code>30pt</code>, the OnAttributeRender override calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method to add a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute and set its value to <code>30pt</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods3#5\">        // If a size attribute is to be rendered, compare its value to 30 point.\n        // If it is not set to 30 point, add the attribute and set the value to 30,\n        // then return false.\n        protected override bool OnAttributeRender(string name,\n            string value,\n            HtmlTextWriterAttribute key)\n        {\n\n            if (key == HtmlTextWriterAttribute.Size)\n            {\n                if (string.Compare(value, &quot;30pt&quot;) != 0)\n                {\n                    AddAttribute(&quot;size&quot;, &quot;30pt&quot;);\n                    return false;\n                }\n            }\n\n            // If the attribute is not a size attribute, use\n            // the base functionality of the OnAttributeRender method.\n            return base.OnAttributeRender(name, value, key);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods3#5\">        &#39; If a size attribute is to be rendered, compare its value to 30 point.\n        &#39; If it is not set to 30 point, add the attribute and set the value to 30\n        &#39; then return false.\n        Protected Overrides Function OnAttributeRender(name As String, _\n            value As String, _\n            key As HtmlTextWriterAttribute) _\n        As Boolean\n\n            If key = HtmlTextWriterAttribute.Size Then\n                If [String].Compare(value, &quot;30pt&quot;) &lt;&gt; 0 Then\n                    AddAttribute(&quot;size&quot;, &quot;30pt&quot;)\n                    Return False\n                End If\n            End If\n\n            &#39; If the attribute is not a size attribute, use\n            &#39; the base functionality of the OnAttributeRender method.\n            Return MyBase.OnAttributeRender(name, value, key)\n        End Function &#39;OnAttributeRender\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_OnStyleAttributeRender_System_String_System_String_System_Web_UI_HtmlTextWriterStyle_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_OnStyleAttributeRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStyleAttributeRender(String,String,HtmlTextWriterStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the style attribute to render.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the value that is assigned to the style attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> associated with the style attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the OnStyleAttributeRender method always returns <code>true</code>. The OnStyleAttributeRender overrides can determine whether a style attribute will be rendered to the page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the OnStyleAttributeRender method. If a <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> style attribute is rendered, but the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> value is not <code>purple</code>, the OnStyleAttributeRender override uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> method to set the <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> attribute to <code>purple</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods3#6\">        // If a color style attribute is to be rendered,\n        // compare its value to purple. If it is not set to\n        // purple, add the style attribute and set the value\n        // to purple, then return false.\n        protected override bool OnStyleAttributeRender(string name,\n            string value,\n            HtmlTextWriterStyle key)\n        {\n\n            if (key == HtmlTextWriterStyle.Color)\n            {\n                if (string.Compare(value, &quot;purple&quot;) != 0)\n                {\n                    AddStyleAttribute(&quot;color&quot;, &quot;purple&quot;);\n                    return false;\n                }\n            }\n\n            // If the style attribute is not a color attribute,\n            // use the base functionality of the\n            // OnStyleAttributeRender method.\n            return base.OnStyleAttributeRender(name, value, key);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods3#6\">        &#39; If a color style attribute is to be rendered,\n        &#39; compare its value to purple. If it is not set to\n        &#39; purple, add the style attribute and set the value\n        &#39; to purple, then return false.\n        Protected Overrides Function OnStyleAttributeRender(name As String, _\n            value As String, _\n            key As HtmlTextWriterStyle) _\n        As Boolean\n\n            If key = HtmlTextWriterStyle.Color Then\n                If [String].Compare(value, &quot;purple&quot;) &lt;&gt; 0 Then\n                    AddStyleAttribute(&quot;color&quot;, &quot;purple&quot;)\n                    Return False\n                End If\n            End If\n\n            &#39; If the style attribute is not a color attribute,\n            &#39; use the base functionality of the\n            &#39; OnStyleAttributeRender method.\n            Return MyBase.OnStyleAttributeRender(name, value, key)\n        End Function &#39;OnStyleAttributeRender\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_OnTagRender_System_String_System_Web_UI_HtmlTextWriterTag_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_OnTagRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnTagRender(String,HtmlTextWriterTag)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified markup element will be rendered to the requesting page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the element to render.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> associated with the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class implementation of the OnTagRender method always returns <code>true</code>. The OnTagRender overrides can determine whether an element will be rendered to the page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the OnTagRender method. If a <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> element is being rendered, the OnTagRender override uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_IsAttributeDefined_\" data-linktype=\"relative-path\">IsAttributeDefined</a> method to determine whether a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute is being rendered. If not, it uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method to create a <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> attribute and set its value to <code>20pt</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods3#4\">        // If a &lt;font&gt; element is to be rendered, check whether it contains\n        // a size attribute. If it does not, add one and set its value to\n        // 20 points, then return true.\n        protected override bool OnTagRender(string name, HtmlTextWriterTag key)\n        {\n\n            if (key == HtmlTextWriterTag.Font)\n            {\n                if (!(IsAttributeDefined(HtmlTextWriterAttribute.Size)))\n                {\n                    AddAttribute(HtmlTextWriterAttribute.Size, &quot;20pt&quot;);\n                    return true;\n                }\n            }\n\n            // If the element is not a &lt;font&gt; element, use\n            // the base functionality of the OnTagRenderMethod.\n            return base.OnTagRender(name, key);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods3#4\">        &#39; If a &lt;font&gt; element is to be rendered, check whether it contains\n        &#39; a size attribute. If it does not, add one and set its value to\n        &#39; 20 points, then return true.\n        Protected Overrides Function OnTagRender( _\n            name As String, _\n            key As HtmlTextWriterTag) _\n        As Boolean\n\n            If (key = HtmlTextWriterTag.Font) Then\n                If Not (IsAttributeDefined(HtmlTextWriterAttribute.Size)) Then\n                    AddAttribute(HtmlTextWriterAttribute.Size, &quot;20pt&quot;)\n                    Return True\n                End If\n            End If\n\n            &#39; If the element is not a &lt;font&gt; element, use\n            &#39; the base functionality of the OnTagRenderMethod.\n            Return MyBase.OnTagRender(name, key)\n        End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_OutputTabs\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_OutputTabs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutputTabs()</div>        \r\n          </div>\r\n    \r\n            <p>Writes a series of tab strings that represent the indentation level for a line of markup characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OutputTabs ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OutputTabs method uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Indent_\" data-linktype=\"relative-path\">Indent</a> property to determine how many tab strings to write to obtain the desired indentation.  </p>\n<p> The tab string is specified with the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter__ctor_\" data-linktype=\"relative-path\">HtmlTextWriter</a> constructor. If no tab string is specified, the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_DefaultTabString\" data-linktype=\"relative-path\">DefaultTabString</a> constant (<code>\\t</code>) is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the OutputTabs method in a class that is derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class. The OutputTabs override always uses the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_DefaultTabString\" data-linktype=\"relative-path\">DefaultTabString</a> constant to perform the indentation.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods#7\">        // Override the OutputTabs method to set the tab to\n        // the number of spaces defined by the Indent variable.      \n        protected override void OutputTabs()\n        {\n            // Output the DefaultTabString for the number\n            // of times specified in the Indent property.\n            for (int i = 0; i &lt; Indent; i++)\n                Write(DefaultTabString);\n            base.OutputTabs();\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods#7\">        &#39; Override the OutputTabs method to set the tab to\n        &#39; the number of spaces defined by the Indent variable.   \n        Protected Overrides Sub OutputTabs()\n            &#39; Output the DefaultTabString for the number\n            &#39; of times specified in the Indent property.\n            Dim i As Integer\n            For i = 0 To Indent - 1\n                Write(DefaultTabString)\n            Next i\n            MyBase.OutputTabs()\n        End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods#7\">   // Override the OutputTabs method to set the tab to\n   // the number of spaces defined by the Indent variable.\n   virtual void OutputTabs() override\n   {\n      \n      // Output the DefaultTabString for the number\n      // of times specified in the Indent property.\n      for ( int i = 0; i &lt; Indent; i++ )\n         Write( DefaultTabString );\n      __super::OutputTabs();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_PopEndTag\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_PopEndTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PopEndTag()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the most recently saved markup element from the list of rendered elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string PopEndTag ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the most recently rendered markup element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The list of rendered elements is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Elements are added to the list of rendered markup elements by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method removes markup elements from the list by calling the PopEndTag method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_PushEndTag_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_PushEndTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushEndTag(String)</div>        \r\n          </div>\r\n    \r\n            <p>Saves the specified markup element for later use when generating the end tag for a markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void PushEndTag (string endTag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>endTag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The closing tag of the markup element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Elements are added to the list of rendered markup elements when the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method calls the PushEndTag method. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method removes markup elements from the list after it renders the end tag for the element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RegisterAttribute_System_String_System_Web_UI_HtmlTextWriterAttribute_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RegisterAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterAttribute(String,HtmlTextWriterAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the markup attribute to register.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriterattribute\" data-linktype=\"relative-path\">HtmlTextWriterAttribute</a> that corresponds with the attribute name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The predefined attributes of the HTML markup language are registered by calls to the RegisterAttribute method when the first <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object is created. Dynamic attributes can be registered by using the RegisterAttribute method at other times.  </p>\n<p> The registration table used by the RegisterAttribute method is <code>static</code>, so registration of attributes applies to all <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> objects on the host computer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RegisterStyle_System_String_System_Web_UI_HtmlTextWriterStyle_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RegisterStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterStyle(String,HtmlTextWriterStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string passed from the source file specifying the style name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriterstyle\" data-linktype=\"relative-path\">HtmlTextWriterStyle</a> that corresponds with the specified style.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the RegisterStyle method when the first <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object is created. Dynamic style attributes can be registered by using the RegisterStyle method at other times.  </p>\n<p> The registration table used by the RegisterStyle method is <code>static</code>, so registration of attributes applies to all <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> objects on the host computer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RegisterTag_System_String_System_Web_UI_HtmlTextWriterTag_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RegisterTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterTag(String,HtmlTextWriterTag)</div>        \r\n          </div>\r\n    \r\n            <p>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the HTML tag.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> that specifies which element to render.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The predefined markup tags of the HTML language are registered by calls to the RegisterTag method when the first <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object is created. Dynamic markup tags can be registered by using the RegisterTag method at other times.  </p>\n<p> The registration table used by the RegisterTag method is <code>static</code>, so registration of tags applies to all <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> objects on the host computer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderAfterContent\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderAfterContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderAfterContent()</div>        \r\n          </div>\r\n    \r\n            <p>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string RenderAfterContent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the spacing or text to write after the content of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RenderAfterContent method can be useful if you want to insert child elements into the current markup element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the RenderAfterContent method in a class derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class to determine whether a <code>&lt;label&gt;</code> element is being rendered. If so, the RenderAfterContent override inserts the closing tag of a <code>&lt;font&gt;</code> element immediately before the closing tag of the <code>&lt;label&gt;</code> element. If an element other than <code>&lt;label&gt;</code> is being rendered, the RenderAfterContent base method is used.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods1#3\">    &#39; Override the RenderAfterContent method to render\n    &#39; the closing tag of a font element if the \n    &#39; rendered tag is a label element.\n    Protected Overrides Function RenderAfterContent() As String\n        &#39; Check to determine whether the element being rendered\n        &#39; is a label element. If so, render the closing tag\n        &#39; of the font element; otherwise, call the base method.\n        If TagKey = HtmlTextWriterTag.Label Then\n            Return &quot;&lt;/font&gt;&quot;\n        Else\n            Return MyBase.RenderAfterContent()\n        End If\n    End Function &#39;RenderAfterContent\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods1#3\">        // Override the RenderAfterContent method to render\n        // the closing tag of a font element if the \n        // rendered tag is a label element.\n        protected override string RenderAfterContent()\n        {\n            // Check to determine whether the element being rendered\n            // is a label element. If so, render the closing tag\n            // of the font element; otherwise, call the base method.\n            if (TagKey == HtmlTextWriterTag.Label)\n            {\n                return &quot;&lt;/font&gt;&quot;;\n            }\n            else\n            {\n                return base.RenderAfterContent();\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods1#3\">   // Override the RenderAfterContent method to render\n   // the closing tag of a font element if the\n   // rendered tag is a label element.\n\n   virtual String^ RenderAfterContent() override\n   {\n      \n      // Check to determine whether the element being rendered\n      // is a label element. If so, render the closing tag\n      // of the font element; otherwise, call the base method.\n      if ( TagKey == HtmlTextWriterTag::Label )\n      {\n         return &quot;&lt;/font&gt;&quot;;\n      }\n      else\n      {\n         return __super::RenderAfterContent();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderAfterTag\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderAfterTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderAfterTag()</div>        \r\n          </div>\r\n    \r\n            <p>Writes any spacing or text that occurs after the closing tag for a markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string RenderAfterTag ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The spacing or text to write after the closing tag of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RenderAfterTag method can be useful if you want to render additional closing tags after the element tag.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the RenderAfterTag method to determine whether a class derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class is rendering a <code>&lt;label&gt;</code> element. If so, the RenderAfterTag override inserts the closing tag of a <code>&lt;font&gt;</code> element immediately after the <code>&lt;label&gt;</code> element. If it is not a <code>&lt;label&gt;</code> element, the RenderAfterTag base method is used.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods4#2\">        // Override the RenderAfterTag method to add the \n        // closing tag of the Font element after the \n        // closing tag of a Label element has been rendered.\n        protected override string RenderAfterTag()\n        {\n            // Compare the TagName property value to the\n            // string label to determine whether the element to \n            // be rendered is a Label. If it is a Label,\n            // the closing tag of a Font element is rendered\n            // after the closing tag of the Label element.\n            if (String.Compare(TagName, &quot;label&quot;) == 0)\n            {\n                return &quot;&lt;/font&gt;&quot;;\n            }\n            // If a Label is not being rendered, use \n                // the base RenderAfterTag method.\n            else\n            {\n                return base.RenderAfterTag();\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods4#2\">        &#39; Override the RenderAfterTag method to add the \n        &#39; closing tag of the Font element after the \n        &#39; closing tag of a Label element has been rendered.\n        Protected Overrides Function RenderAfterTag() As String\n            &#39; Compare the TagName property value to the\n            &#39; string label to determine whether the element to \n            &#39; be rendered is a Label. If it is a Label,\n            &#39; the closing tag of a Font element is rendered\n            &#39; after the closing tag of the Label element.\n            If String.Compare(TagName, &quot;label&quot;) = 0 Then\n                Return &quot;&lt;/font&gt;&quot;\n                &#39; If a Label is not being rendered, use \n                &#39; the base RenderAfterTag method.\n            Else\n                Return MyBase.RenderAfterTag()\n            End If\n        End Function &#39;RenderAfterTag\n    End Class &#39;htwFour \n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods4#2\">   // Override the RenderAfterTag method to add the\n   // closing tag of the Font element after the\n   // closing tag of a Label element has been rendered.\n   virtual String^ RenderAfterTag() override\n   {\n      // Compare the TagName property value to the\n      // String* label to determine whether the element to\n      // be rendered is a Label. If it is a Label,\n      // the closing tag of a Font element is rendered\n      // after the closing tag of the Label element.\n      if ( String::Compare( TagName, &quot;label&quot; ) == 0 )\n      {\n         return &quot;&lt;/font&gt;&quot;;\n      }\n      // If a Label is not being rendered, use\n      // the base RenderAfterTag method.\n      else\n      {\n         return __super::RenderAfterTag();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderBeforeContent\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderBeforeContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderBeforeContent()</div>        \r\n          </div>\r\n    \r\n            <p>Writes any text or spacing before the content and after the opening tag of a markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string RenderBeforeContent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text or spacing to write prior to the content of the element. If not overridden, RenderBeforeContent returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RenderBeforeContent method can be useful if you want to insert child elements into the current markup element before the inner markup.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the RenderBeforeContent method to determine whether a class derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class is about to render a <code>&lt;label&gt;</code> element. If so, the RenderBeforeContent override inserts the opening tag of a <code>&lt;font&gt;</code> element immediately after the opening tag of the <code>&lt;label&gt;</code> element. If it is not a <code>&lt;label&gt;</code> element, the RenderBeforeContent base method is used.  </p>\n<pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods1#2\">    &#39; Override the RenderBeforeContent method to write\n    &#39; a font element that applies red to the text in a Label element.\n    Protected Overrides Function RenderBeforeContent() As String\n        &#39; Check to determine whether the element being rendered\n        &#39; is a label element. If so, render the opening tag\n        &#39; of the font element; otherwise, call the base method.\n        If TagKey = HtmlTextWriterTag.Label Then\n            Return &quot;&lt;font color=&quot;&quot;red&quot;&quot;&gt;&quot;\n        Else\n            Return MyBase.RenderBeforeContent()\n        End If\n    End Function &#39;RenderBeforeContent\n</code></pre><pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods1#2\">        // Override the RenderBeforeContent method to write\n        // a font element that applies red to the text in a Label element.\n        protected override string RenderBeforeContent()\n        {\n            // Check to determine whether the element being rendered\n            // is a label element. If so, render the opening tag\n            // of the font element; otherwise, call the base method.\n            if (TagKey == HtmlTextWriterTag.Label)\n            {\n                return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n            }\n            else\n            {\n                return base.RenderBeforeContent();\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods1#2\">   // Override the RenderBeforeContent method to write\n   // a font element that applies red to the text in a Label element.\n\n   virtual String^ RenderBeforeContent() override\n   {\n      \n      // Check to determine whether the element being rendered\n      // is a label element. If so, render the opening tag\n      // of the font element; otherwise, call the base method.\n      if ( TagKey == HtmlTextWriterTag::Label )\n      {\n         return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n      }\n      else\n      {\n         return __super::RenderBeforeContent();\n      }\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderBeforeTag\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderBeforeTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderBeforeTag()</div>        \r\n          </div>\r\n    \r\n            <p>Writes any text or spacing that occurs before the opening tag of a markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string RenderBeforeTag ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text or spacing to write before the markup element opening tag. If not overridden, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RenderBeforeTag method can be useful if you want to render additional opening tags before the opening tag of the intended element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to override the RenderBeforeTag method to determine whether a class that is derived from the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> class is about to render a <code>&lt;label&gt;</code> element. If so, the RenderBeforeTag override inserts the opening tag of a <code>&lt;font&gt;</code> element immediately before the <code>&lt;label&gt;</code> element. If it is not rendering a <code>&lt;label&gt;</code> element, the RenderBeforeTag base method is used.  </p>\n<pre><code class=\"lang-cs\" name=\"HtmlTextWriter_Methods4#1\">        // Override the RenderBeforeTag method to add the \n        // opening tag of a Font element before the \n        // opening tag of any Label elements rendered by this \n        // custom markup writer. \n        protected override string RenderBeforeTag()\n        {\n            // Compare the TagName property value to the\n            // string label to determine whether the element to \n            // be rendered is a Label. If it is a Label,\n            // the opening tag of the Font element, with a Color\n            // style attribute set to red, is added before\n            // the Label.\n            if (String.Compare(TagName, &quot;label&quot;) == 0)\n            {\n                return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n            }\n            // If a Label is not being rendered, use \n                // the base RenderBeforeTag method.\n            else\n            {\n                return base.RenderBeforeTag();\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"HtmlTextWriter_Methods4#1\">        &#39; Override the RenderBeforeTag method to add the \n        &#39; opening tag of a Font element before the \n        &#39; opening tag of any Label elements rendered by this \n        &#39; custom markup writer. \n        Protected Overrides Function RenderBeforeTag() As String\n            &#39; Compare the TagName property value to the\n            &#39; string label to determine whether the element to \n            &#39; be rendered is a Label. If it is a Label,\n            &#39; the opening tag of the Font element, with a Color\n            &#39; style attribute set to red, is added before\n            &#39; the Label.\n            If String.Compare(TagName, &quot;label&quot;) = 0 Then\n                Return &quot;&lt;font color=&quot;&quot;red&quot;&quot;&gt;&quot;\n                &#39; If a Label is not being rendered, use \n                &#39; the base RenderBeforeTag method.\n            Else\n                Return MyBase.RenderBeforeTag()\n            End If\n        End Function &#39;RenderBeforeTag\n</code></pre><pre><code class=\"lang-cpp\" name=\"HtmlTextWriter_Methods4#1\">   // Override the RenderBeforeTag method to add the\n   // opening tag of a Font element before the\n   // opening tag of any Label elements rendered by this\n   // custom markup writer.\n   virtual String^ RenderBeforeTag() override\n   {\n      // Compare the TagName property value to the\n      // String* label to determine whether the element to\n      // be rendered is a Label. If it is a Label,\n      // the opening tag of the Font element, with a Color\n      // style attribute set to red, is added before\n      // the Label.\n      if ( String::Compare( TagName, &quot;label&quot; ) == 0 )\n      {\n         return &quot;&lt;font color=\\&quot;red\\&quot;&gt;&quot;;\n      }\n      // If a Label is not being rendered, use\n      // the base RenderBeforeTag method.\n      else\n      {\n         return __super::RenderBeforeTag();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderBeginTag_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderBeginTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderBeginTag(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the opening tag of the specified markup element to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void RenderBeginTag (string tagName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the name of the markup element for which to render the opening tag.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the RenderBeginTag override of the RenderBeginTag method, if the markup element is not one of the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration values.  </p>\n<p> To generate a markup element by using the RenderBeginTag method, first call the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> and the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element. After generating the inner markup, call the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method to generate the closing tag.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the RenderBeginTag method in a custom control to render the opening tag of a non-standard <code>MyTag</code> element. The code example then calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to render inner markup, and then calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method to close the element.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;MyTag&gt;</code>  </p>\n<p> <code>Contents of MyTag</code>  </p>\n<p> <code>&lt;/MyTag&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#4\">            &#39; Create a non-standard tag.\n            writer.RenderBeginTag(&quot;MyTag&quot;)\n            writer.Write(&quot;Contents of MyTag&quot;)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#4\">            // Create a non-standard tag.\n            writer.RenderBeginTag(&quot;MyTag&quot;);\n            writer.Write(&quot;Contents of MyTag&quot;);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#4\">      // Create a non-standard tag.\n      writer-&gt;RenderBeginTag( &quot;MyTag&quot; );\n      writer-&gt;Write( &quot;Contents of MyTag&quot; );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderBeginTag_System_Web_UI_HtmlTextWriterTag_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderBeginTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderBeginTag(HtmlTextWriterTag)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the opening tag of the markup element associated with the specified <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration value to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> values that defines the opening tag of the markup element to render.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the RenderBeginTag overload of the RenderBeginTag method if the markup element is of a known type that is one of the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> enumeration values.  </p>\n<p> To generate a markup element by using the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method, first call the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> and the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddStyleAttribute_\" data-linktype=\"relative-path\">AddStyleAttribute</a> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element. After generating the inner markup, call the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method to generate the closing tag.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the RenderBeginTag method to output the opening tag of an <code>&lt;img&gt;</code> element. The attributes that are added to the element by the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_AddAttribute_\" data-linktype=\"relative-path\">AddAttribute</a> method will be in the opening <code>&lt;img&gt;</code> tag. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method is used to generate the closing tag.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;img alt=&quot;Encoding &amp;quot;Required&amp;quot;&quot; myattribute=&quot;No &amp;quot;encoding&amp;quot; required&quot;&gt;</code>  </p>\n<p> <code>&lt;/img&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#3\">            &#39; Control the encoding of attributes.\n            &#39; Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, &quot;&quot;Required&quot;&quot;&quot;, True)\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.RenderBeginTag(HtmlTextWriterTag.Img)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#3\">            // Control the encoding of attributes. \n            // Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true);\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.RenderBeginTag(HtmlTextWriterTag.Img);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#3\">      // Control the encoding of attributes.\n      // Simple known values do not need encoding.\n      writer-&gt;AddAttribute( HtmlTextWriterAttribute::Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true );\n      writer-&gt;AddAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;RenderBeginTag( HtmlTextWriterTag::Img );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_RenderEndTag\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_RenderEndTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderEndTag()</div>        \r\n          </div>\r\n    \r\n            <p>Writes the end tag of a markup element to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void RenderEndTag ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the RenderEndTag method after the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the RenderEndTag method after both the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderBeginTag_\" data-linktype=\"relative-path\">RenderBeginTag</a> method that generates the opening tag and the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_Write_\" data-linktype=\"relative-path\">Write</a> method that renders the inner markup between the opening and closing tags of the custom <code>MyTag</code> element have been called.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;MyTag&gt;</code>  </p>\n<p> <code>Contents of MyTag</code>  </p>\n<p> <code>&lt;/MyTag&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#4\">            &#39; Create a non-standard tag.\n            writer.RenderBeginTag(&quot;MyTag&quot;)\n            writer.Write(&quot;Contents of MyTag&quot;)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#4\">            // Create a non-standard tag.\n            writer.RenderBeginTag(&quot;MyTag&quot;);\n            writer.Write(&quot;Contents of MyTag&quot;);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#4\">      // Create a non-standard tag.\n      writer-&gt;RenderBeginTag( &quot;MyTag&quot; );\n      writer-&gt;Write( &quot;Contents of MyTag&quot; );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Char_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (char value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Unicode character to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the Write method to end the opening tag of an <code>&lt;img&gt;</code> element by using the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_TagRightChar\" data-linktype=\"relative-path\">TagRightChar</a> constant.  </p>\n<p> This code example renders the following markup:  </p>\n<p> <code>&lt;img alt=&quot;A custom image&quot;&gt;</code>  </p>\n<p> <code>&lt;/img&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Samples1#5\">            // Create a manually rendered &lt;img&gt; element\n            // that contains an alt attribute.\n            writer.WriteBeginTag(&quot;img&quot;);\n            writer.WriteAttribute(&quot;alt&quot;, &quot;A custom image.&quot;);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteEndTag(&quot;img&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Samples1#5\">            &#39; Create a manually rendered &lt;img&gt; element\n            &#39; that contains an alt attribute.\n            writer.WriteBeginTag(&quot;img&quot;)\n            writer.WriteAttribute(&quot;alt&quot;, &quot;A custom image.&quot;)\n            writer.Write(HtmlTextWriter.TagRightChar)\n            writer.WriteEndTag(&quot;img&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Char___\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (char[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of Unicode characters to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section provides two code examples. The first one demonstrates how to create an array of characters. The second one demonstrates how to use the array.  </p>\n<p> These code examples generate the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>hello world</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<p> The following code example demonstrates how to create an array of characters that spell out <code>hello world</code>. Included in the array is the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_SpaceChar\" data-linktype=\"relative-path\">SpaceChar</a> field, which creates a space between the two words.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#13\">        private char[] testChars = {&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;,\n            HtmlTextWriter.SpaceChar ,&#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#13\">        Private testChars() As Char = _\n            {&quot;h&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, _\n            HtmlTextWriter.SpaceChar, &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n</code></pre><p> The following code example demonstrates how to use the Write method to render the <code>hello world</code> character array created in the preceding code example to a page, when the control that contains this example code is included in a page.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#12\">            // Render a character array as the \n            // contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.Write(testChars);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#12\">            &#39; Render a character array as the \n            &#39; contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.Write(testChars)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Double_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The double-precision floating-point number to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Write method to render the value of the <a class=\"xref\" href=\"system.double#System_Double_MaxValue\" data-linktype=\"relative-path\">System.Double.MaxValue</a> field.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>1.79769313486232E+308</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#7\">             // Use the Write(Double) method to render\n             // the MaxValue field of the Double structure. \n             writer.RenderBeginTag(HtmlTextWriterTag.Label);\n             writer.Write(Double.MaxValue);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#7\">            &#39; Use the WriteLine(Double) method to render\n            &#39; the MaxValue field of the Double structure. \n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(Double.MaxValue)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 32-byte signed integer to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Int64_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 64-byte signed integer to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an object to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Write method to render the value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>This is a rendered CultureInfo object.</code>  </p>\n<p> <code>&lt;bold&gt;</code>  </p>\n<p> The value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property:  </p>\n<p> <code>&lt;/bold&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#8\">             // Use the Write method to render an arbitrary\n             // object, in this case a CultureInfo object. \n             writer.Write(&quot;This is a rendered CultureInfo Object.&quot;);\n             writer.RenderBeginTag(HtmlTextWriterTag.B);\n             writer.Write(CultureInfo.CurrentCulture);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#8\">            &#39; Use the Write method to render an arbitrary\n            &#39; object, in this case a CultureInfo object.\n            writer.Write(&quot;This is a rendered CultureInfo Object.&quot;)\n            writer.RenderBeginTag(HtmlTextWriterTag.B)\n            writer.Write(CultureInfo.CurrentCulture)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Single_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The single-precision floating-point number to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Write method to render the value of the <a class=\"xref\" href=\"system.single#System_Single_Epsilon\" data-linktype=\"relative-path\">System.Single.Epsilon</a> field, which is the smallest possible value of the <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> structure.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;b&gt;</code>  </p>\n<p> <code>1.401298E-45</code>  </p>\n<p> <code>&lt;/b&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#10\">             // Use the Write(Single) method to render the\n             // Epsilon field of the Single structure. \n             writer.RenderBeginTag(HtmlTextWriterTag.B);\n             writer.Write(Single.Epsilon);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#10\">            &#39; Use the Write(Single) method to render the\n            &#39; Epsilon field of the Single structure. \n            writer.RenderBeginTag(HtmlTextWriterTag.B)\n            writer.Write(Single.Epsilon)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Write method to render a string between the opening and closing tags of a custom markup element.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;MyTag&gt;</code>  </p>\n<p> <code>Contents of MyTag</code>  </p>\n<p> <code>&lt;/MyTag&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#4\">            &#39; Create a non-standard tag.\n            writer.RenderBeginTag(&quot;MyTag&quot;)\n            writer.Write(&quot;Contents of MyTag&quot;)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#4\">            // Create a non-standard tag.\n            writer.RenderBeginTag(&quot;MyTag&quot;);\n            writer.Write(&quot;Contents of MyTag&quot;);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#4\">      // Create a non-standard tag.\n      writer-&gt;RenderBeginTag( &quot;MyTag&quot; );\n      writer-&gt;Write( &quot;Contents of MyTag&quot; );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a tab string and a formatted string to the output stream, using the same semantics as the <span class=\"xref\">stem.String.Format*</span> method, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string format, object arg0);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains zero or more format items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Write method to render a formatted string with the value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#5\">             // Use the Write(string, object) method to\n             // render a formatted string and an object in it.\n             writer.RenderBeginTag(HtmlTextWriterTag.Label);\n             writer.Write(&quot;The current cultural settings are {0}&quot;,\n                 CultureInfo.CurrentCulture);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#5\">            &#39; Use the Write(string, object) method to\n            &#39; render a formatted string and an object in it.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.Write(&quot;The current cultural settings are {0}.&quot;, _\n                CultureInfo.CurrentCulture)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing. This method uses the same semantics as the <span class=\"xref\">stem.String.Format*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string format, object[] arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains zero or more format items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object array to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first one demonstrates how to render a formatted string and the contents of an array. The second one demonstrates how to declare the array.  </p>\n<p> The following code example shows how to use the Write method to render a formatted string and the contents of an object array, named <code>curPriceTime</code>. The method call renders the second member of the array before it renders the first member.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#9\">            // Render a formatted string and the\n            // text representation of an object array,\n            // myObjectArray, as the contents of\n            // a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.Write(&quot;The trade value at {1} is ${0}.&quot;, curPriceTime);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#9\">            &#39; Render a formatted string and the\n            &#39; text representation of an object array,\n            &#39; myObjectArray, as the contents of\n            &#39; a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.Write(&quot;The trade value at {1} is ${0}.&quot;, curPriceTime)\n            writer.RenderEndTag()\n</code></pre><p> The following code example demonstrates declaring the <code>curPriceTime</code> object array.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#14\">        private object[] curPriceTime = {4.25, DateTime.Now};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#14\">        Private curPriceTime() As Object = {4.25, DateTime.Now}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of characters from which to write text to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index location in the array where writing begins.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section provides two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  </p>\n<p> These code examples generate the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>hello</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<p> The following code example shows how to create an array of characters that spell out <code>hello world</code>. Included in the array is the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_SpaceChar\" data-linktype=\"relative-path\">SpaceChar</a> field, which creates a space between the two words.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#13\">        private char[] testChars = {&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;,\n            HtmlTextWriter.SpaceChar ,&#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#13\">        Private testChars() As Char = _\n            {&quot;h&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, _\n            HtmlTextWriter.SpaceChar, &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n</code></pre><p> The following portion of the code example uses the <code>index</code> and <code>count</code> parameters of the Write method to render the first five characters of the array created in the preceding example.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#11\">            // Render a subarray of a character array\n            // as the contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.Write(testChars, 0, 5);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#11\">            &#39; Render a subarray of a character array\n            &#39; as the contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.Write(testChars, 0, 5)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_Write_System_String_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing. This method uses the same semantics as the <span class=\"xref\">stem.String.Format*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string format, object arg0, object arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains zero or more format items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method generates any tabs that are pending, and then calls the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_\" data-linktype=\"relative-path\">Write</a> base method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Write method to render a formatted string and the values of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_Today_\" data-linktype=\"relative-path\">Today</a> properties.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#6\">             // Use the Write(string,object,object) method to\n             // render a formatted string and two objects \n             // in the string.\n             writer.RenderBeginTag(HtmlTextWriterTag.Label);\n             writer.Write(&quot;The current cultural settings are {0}. Today&#39;s date is {1}.&quot;,\n                 CultureInfo.CurrentCulture, DateTime.Today);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#6\">            &#39; Use the Write(string,object,object) method to\n            &#39; render a formatted string and two objects \n            &#39; in the string.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.Write(&quot;The current cultural settings are {0}. Today&#39;s date is {1}.&quot;, _\n                CultureInfo.CurrentCulture, DateTime.Today)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified markup attribute and value to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteAttribute (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The attribute to write to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value assigned to the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the WriteAttribute method to write markup attributes and their values with no encoding. The WriteAttribute method writes the attribute value enclosed in double quotation marks (&quot;). If <code>value</code> is <code>null</code>, the WriteAttribute method writes only the attribute name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates rendering an <code>&lt;img&gt;</code> element in which both overloads of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> method are called. The code example uses the following process:  </p>\n<ul>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteBeginTag_\" data-linktype=\"relative-path\">WriteBeginTag</a> method, which renders the opening characters of the element.  </p>\n</li>\n<li><p>Calls the WriteAttribute overload, which writes an <code>alt</code> attribute and its value to the <code>&lt;img&gt;</code> element.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_System_Boolean_\" data-linktype=\"relative-path\">WriteAttribute(String,String,Boolean)</a> overload to render a custom <code>myattribute</code> attribute, with a value of <code>No &quot;encoding&quot; required</code>, and then sets <code>fEncode</code> to <code>false</code>.  </p>\n</li>\n<li><p>Closes the opening tag of the element, and then calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> method to close the <code>&lt;img&gt;</code> element.  </p>\n<p>This code example generates the following markup:  </p>\n<p><code>&lt;img alt=&quot;AtlValue&quot; myattribute=&quot;No &amp;quot;encoding&amp;quot; required&quot;&gt;</code>  </p>\n<p><code>&lt;/img&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#5\">            &#39; Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;)\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;)\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.Write(HtmlTextWriter.TagRightChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#5\">            // Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;);\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;);\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteEndTag(&quot;img&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#5\">      // Create a manually rendered tag.\n      writer-&gt;WriteBeginTag( &quot;img&quot; );\n      writer-&gt;WriteAttribute( &quot;alt&quot;, &quot;AtlValue&quot; );\n      writer-&gt;WriteAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;Write( HtmlTextWriter::TagRightChar );\n      writer-&gt;WriteEndTag( &quot;img&quot; );\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttribute(String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteAttribute (string name, string value, bool fEncode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The markup attribute to write to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value assigned to the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fEncode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to encode the attribute and its assigned value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the WriteAttribute method to write markup attributes and their values with or without encoding. The WriteAttribute method uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlAttributeEncode_\" data-linktype=\"relative-path\">HtmlAttributeEncode</a> method to do the encoding.  </p>\n<p> The WriteAttribute method writes the attribute value enclosed in double quotation marks (&quot;). If <code>value</code> is <code>null</code>, the WriteAttribute method writes only the attribute name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates rendering an <code>&lt;img&gt;</code> element in which both overloads of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> method are called. The code example uses the following process:  </p>\n<ul>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteBeginTag_\" data-linktype=\"relative-path\">WriteBeginTag</a> method, which renders the opening characters of the element.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_\" data-linktype=\"relative-path\">WriteAttribute(String,String)</a> overload, which writes an <code>alt</code> attribute and its value to the <code>&lt;img&gt;</code> element.  </p>\n</li>\n<li><p>Calls the WriteAttribute overload to render a custom <code>myattribute</code> attribute, with a value of <code>No &quot;encoding&quot; required</code>, and then sets <code>fEncode</code> to <code>false</code>.  </p>\n</li>\n<li><p>Closes the opening tag of the element, and then calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> method to close the <code>&lt;img&gt;</code> element.  </p>\n<p>This code example generates the following markup:  </p>\n<p><code>&lt;img alt=&quot;AtlValue&quot; myattribute=&quot;No &amp;quot;encoding&amp;quot; required&quot;&gt;</code>  </p>\n<p><code>&lt;/img&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#5\">            &#39; Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;)\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;)\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.Write(HtmlTextWriter.TagRightChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#5\">            // Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;);\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;);\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteEndTag(&quot;img&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#5\">      // Create a manually rendered tag.\n      writer-&gt;WriteBeginTag( &quot;img&quot; );\n      writer-&gt;WriteAttribute( &quot;alt&quot;, &quot;AtlValue&quot; );\n      writer-&gt;WriteAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;Write( HtmlTextWriter::TagRightChar );\n      writer-&gt;WriteEndTag( &quot;img&quot; );\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteBeginTag_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteBeginTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBeginTag(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteBeginTag (string tagName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The markup element of which to write the opening tag.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteBeginTag method does not write the closing angle bracket (&gt;) of the markup element&#39;s opening tag. This allows the writing of markup attributes to the opening tag of the element. Use the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_TagRightChar\" data-linktype=\"relative-path\">TagRightChar</a> constant to close the opening tag when calling the WriteBeginTag method. Use the WriteBeginTag method with the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_SelfClosingTagEnd\" data-linktype=\"relative-path\">SelfClosingTagEnd</a> constant when you write markup elements that are self-closing.  </p>\n<p> The WriteBeginTag method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates rendering an <code>&lt;img&gt;</code> element in which both overloads of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> method are called. The code example uses the following process:  </p>\n<ul>\n<li><p>Calls the WriteBeginTag method, which renders the opening characters of the element.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_\" data-linktype=\"relative-path\">WriteAttribute(String,String)</a> overload, which writes an <code>alt</code> attribute and its value to the <code>&lt;img&gt;</code> element.  </p>\n</li>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_System_String_System_String_System_Boolean_\" data-linktype=\"relative-path\">WriteAttribute(String,String,Boolean)</a> overload to render a custom <code>myattribute</code> attribute, with a value of <code>No &quot;encoding&quot; required</code>, and then sets <code>fEncode</code> to <code>false</code>.  </p>\n</li>\n<li><p>Closes the opening tag of the element, and then calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEndTag_\" data-linktype=\"relative-path\">WriteEndTag</a> method to close the <code>&lt;img&gt;</code> element.  </p>\n<p>This code example generates the following markup:  </p>\n<p><code>&lt;img alt=&quot;AtlValue&quot; myattribute=&quot;No &amp;quot;encoding&amp;quot; required&quot;&gt;</code>  </p>\n<p><code>&lt;/img&gt;</code>  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#5\">            &#39; Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;)\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;)\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.Write(HtmlTextWriter.TagRightChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#5\">            // Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;);\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;);\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteEndTag(&quot;img&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#5\">      // Create a manually rendered tag.\n      writer-&gt;WriteBeginTag( &quot;img&quot; );\n      writer-&gt;WriteAttribute( &quot;alt&quot;, &quot;AtlValue&quot; );\n      writer-&gt;WriteAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;Write( HtmlTextWriter::TagRightChar );\n      writer-&gt;WriteEndTag( &quot;img&quot; );\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteBreak\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteBreak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBreak()</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <code>&lt;br /&gt;</code> markup element to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteBreak ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the WriteBreak method to render line breaks in custom control or adapter markup. The WriteBreak method writes a space between the <code>br</code> and <code>/</code> for improved HTML compatibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the WriteBreak method to write a <code>&lt;br /&gt;</code> element to the requesting browser after the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEncodedText_\" data-linktype=\"relative-path\">WriteEncodedText</a> method writes the encoded <code>&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;</code> markup.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.MarkupTextWriter_Samples1#2\">            // Assign a value to a string variable,\n            // encode it, and write it to a page.\n            colHeads = &quot;&lt;custID&gt; &amp; &lt;invoice#&gt;&quot;; \n            writer.WriteEncodedText(colHeads);\n            writer.WriteBreak();\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.MarkupTextWriter_Samples1#2\">          &#39; Assign a value to a string variable,\n          &#39; encode it, and write it to a page.\n          colHeads = &quot;&lt;custID&gt; &amp; &lt;invoice#&gt;&quot; \n          writer.WriteEncodedText(colHeads)\n          writer.WriteBreak()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteEncodedText_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteEncodedText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEncodedText(String)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes the specified text for the requesting device, and then writes it to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteEncodedText (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text string to encode and write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>text</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the WriteEncodedText method when a string contains angle brackets (&lt; or &gt;) or an ampersand (&amp;).  </p>\n<p> The WriteEncodedText method uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to perform the encoding and also converts Unicode character <code>00A0</code> to <code>&amp;nbsp;</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteEncodedText method to write the encoded markup <code>&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;</code> to the output stream. The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteBreak_\" data-linktype=\"relative-path\">WriteBreak</a> method writes <code>&lt;br /&gt;</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.MarkupTextWriter_Samples1#2\">            // Assign a value to a string variable,\n            // encode it, and write it to a page.\n            colHeads = &quot;&lt;custID&gt; &amp; &lt;invoice#&gt;&quot;; \n            writer.WriteEncodedText(colHeads);\n            writer.WriteBreak();\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.MarkupTextWriter_Samples1#2\">          &#39; Assign a value to a string variable,\n          &#39; encode it, and write it to a page.\n          colHeads = &quot;&lt;custID&gt; &amp; &lt;invoice#&gt;&quot; \n          writer.WriteEncodedText(colHeads)\n          writer.WriteBreak()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteEncodedUrl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteEncodedUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEncodedUrl(String)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes the specified URL, and then writes it to the output stream. The URL might include parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteEncodedUrl (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL string to encode and write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteEncodedUrl method encodes the string in the <code>url</code> parameter in accordance with the specification for URL encoding. The parameters that follow the question mark (?) delimiter are not encoded.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteEncodedUrl method, which generates the following output:  </p>\n<p> <code>http://localhost/Sample%20Folder/Sample%20%2b%20File.txt</code>  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.MarkupTextWriter_Samples1#3\">            // Assign a value to a string variable\n            // and URL-encode it to a page.\n            url = &quot;http://localhost/SampleFolder/Sample + File.txt&quot;; \n            writer.WriteBreak();\n            writer.WriteEncodedUrl(url);\n            writer.WriteBreak();\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.MarkupTextWriter_Samples1#3\">          &#39; Assign a value to a string variable\n          &#39; and URL-encode it to a page.\n          url = &quot;http://localhost/SampleFolder/Sample + File.txt&quot; \n          writer.WriteBreak()\n          writer.WriteEncodedUrl(url)\n          writer.WriteBreak()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteEncodedUrlParameter_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteEncodedUrlParameter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEncodedUrlParameter(String)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteEncodedUrlParameter (string urlText);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>urlText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL parameter string to encode and write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <code>%3d</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteEncodedUrlParameter method, which generates the following output:  </p>\n<p> <code>ID%3dCity+State</code>  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.MarkupTextWriter_Samples1#4\">            // Assign a value to a string variable\n            // and encode it to a page as a \n            // URL parameter.      \n            param = &quot;ID=City State&quot;;\n            writer.WriteBreak();\n            writer.WriteEncodedUrlParameter(param);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.MarkupTextWriter_Samples1#4\">          &#39; Assign a value to a string variable\n          &#39; and encode it to a page as a \n          &#39; URL parameter.      \n          param = &quot;ID=City State&quot;\n          writer.WriteBreak()\n          writer.WriteEncodedUrlParameter(param)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteEndTag_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteEndTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndTag(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any tab spacing and the closing tag of the specified markup element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteEndTag (string tagName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to write the closing tag for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_RenderEndTag_\" data-linktype=\"relative-path\">RenderEndTag</a> method, the WriteEndTag method has no logic to make the element end tag match the corresponding opening tag.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates rendering an <code>&lt;img&gt;</code> element. The code example uses the following process:  </p>\n<ul>\n<li><p>Calls the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteBeginTag_\" data-linktype=\"relative-path\">WriteBeginTag</a> method to render the opening characters of the element.  </p>\n</li>\n<li><p>Calls the two overloads of the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteAttribute_\" data-linktype=\"relative-path\">WriteAttribute</a> method to write attributes to the <code>&lt;img&gt;</code> element.  </p>\n</li>\n<li><p>Calls the WriteEndTag method to close the <code>&lt;img&gt;</code> element.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#5\">            &#39; Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;)\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;)\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.Write(HtmlTextWriter.TagRightChar)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#5\">            // Create a manually rendered tag.\n            writer.WriteBeginTag(&quot;img&quot;);\n            writer.WriteAttribute(&quot;alt&quot;, &quot;AtlValue&quot;);\n            writer.WriteAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.Write(HtmlTextWriter.TagRightChar);\n            writer.WriteEndTag(&quot;img&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#5\">      // Create a manually rendered tag.\n      writer-&gt;WriteBeginTag( &quot;img&quot; );\n      writer-&gt;WriteAttribute( &quot;alt&quot;, &quot;AtlValue&quot; );\n      writer-&gt;WriteAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;Write( HtmlTextWriter::TagRightChar );\n      writer-&gt;WriteEndTag( &quot;img&quot; );\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteFullBeginTag_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteFullBeginTag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFullBeginTag(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteFullBeginTag (string tagName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteFullBeginTag method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteBeginTag_\" data-linktype=\"relative-path\">WriteBeginTag</a> method, which does not write the closing angle bracket. Use WriteFullBeginTag for markup elements that have no attributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine()</div>        \r\n          </div>\r\n    \r\n            <p>Writes a line terminator string to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). For more information, see <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the WriteLine method to insert a line after an <code>&lt;img&gt;</code> element is rendered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.HtmlTextWriter#3\">            &#39; Control the encoding of attributes.\n            &#39; Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, &quot;&quot;Required&quot;&quot;&quot;, True)\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, False)\n            writer.RenderBeginTag(HtmlTextWriterTag.Img)\n            writer.RenderEndTag()\n            writer.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.HtmlTextWriter#3\">            // Control the encoding of attributes. \n            // Simple known values do not need encoding.\n            writer.AddAttribute(HtmlTextWriterAttribute.Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true);\n            writer.AddAttribute(&quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false);\n            writer.RenderBeginTag(HtmlTextWriterTag.Img);\n            writer.RenderEndTag();\n            writer.WriteLine();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Web.UI.HtmlTextWriter#3\">      // Control the encoding of attributes.\n      // Simple known values do not need encoding.\n      writer-&gt;AddAttribute( HtmlTextWriterAttribute::Alt, &quot;Encoding, \\&quot;Required\\&quot;&quot;, true );\n      writer-&gt;AddAttribute( &quot;myattribute&quot;, &quot;No &amp;quot;encoding &amp;quot; required&quot;, false );\n      writer-&gt;RenderBeginTag( HtmlTextWriterTag::Img );\n      writer-&gt;RenderEndTag();\n      writer-&gt;WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Boolean to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Char_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (char value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Char___\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Char[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (char[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section provides two code examples. The first one demonstrates how to create an array. The second one demonstrates how to use that array.  </p>\n<p> These code examples generate the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>hello world</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<p> The following code example shows how to create an array of characters that spell out <code>hello world</code>. Included in the array is the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_SpaceChar\" data-linktype=\"relative-path\">SpaceChar</a> field, which creates a space between the two words.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#6\">        private char[] testChars = {&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;,\n            HtmlTextWriter.SpaceChar ,&#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#6\">        Private testChars() As Char = _\n            {&quot;h&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, _\n            HtmlTextWriter.SpaceChar, &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n</code></pre><p> The following code example renders the <code>hello world</code> character array that was created in the preceding example by using the WriteLine method.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#5\">            // Render a character array as the contents of \n            // a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.WriteLine(testChars);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#5\">            &#39; Render a character array as the \n            &#39; contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(testChars)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Double_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The double-precision floating-point number to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteLine method to render the value of the <a class=\"xref\" href=\"system.double#System_Double_MaxValue\" data-linktype=\"relative-path\">System.Double.MaxValue</a> field.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>1.79769313486232E+308</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#3\">             // Use the WriteLine(Double) method to render\n             // the MaxValue field of the Double structure. \n             writer.RenderBeginTag(HtmlTextWriterTag.Label);\n             writer.WriteLine(Double.MaxValue);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#3\">            &#39; Use the WriteLine(Double) method to render\n            &#39; the MaxValue field of the Double structure. \n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(Double.MaxValue)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 32-byte signed integer to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Int64_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 64-byte signed integer to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteLine method to render the value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property to a control.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#4\">             // Use the WriteLine method to render an arbitrary\n             // object, in this case a CutltureInfo object.\n             writer.RenderBeginTag(HtmlTextWriterTag.B);\n             writer.WriteLine(CultureInfo.CurrentCulture);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#4\">            &#39; Use the WriteLine method to render an arbitrary\n            &#39; object, in this case a CutltureInfo object.\n            writer.RenderBeginTag(HtmlTextWriterTag.B)\n            writer.WriteLine(CultureInfo.CurrentCulture)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Single_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The single-precision floating point number to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteLine method to render the value of the <a class=\"xref\" href=\"system.single#System_Single_Epsilon\" data-linktype=\"relative-path\">System.Single.Epsilon</a> field, which is the smallest possible value of the <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> structure.  </p>\n<p> This code example generates the following markup:  </p>\n<p> <code>&lt;b&gt;</code>  </p>\n<p> <code>1.401298E-45</code>  </p>\n<p> <code>&lt;/b&gt;</code>  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#9\">             // Use the WriteLine(Single) method to render the\n             // Epsilon field of the Single structure.\n             writer.RenderBeginTag(HtmlTextWriterTag.B);\n             writer.WriteLine(Single.Epsilon);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#9\">            &#39; Use the WriteLine(Single) method to render the\n            &#39; Epsilon field of the Single structure. \n            writer.RenderBeginTag(HtmlTextWriterTag.B)\n            writer.WriteLine(Single.Epsilon)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_UInt32_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (uint value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 4-byte unsigned integer to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string format, object arg0);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing zero or more format items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The WriteLine method uses the same semantics as the <a class=\"xref\" href=\"system.string#System_String_Format_System_String_System_Object_\" data-linktype=\"relative-path\">Format(String,Object)</a> method. The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the WriteLine method to render a formatted string with the value of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#1\">            // Use the WriteLine(string, object) method to\n            // render a formatted string and an object in it.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.WriteLine(&quot;The current cultural settings are {0}&quot;,\n                CultureInfo.CurrentCulture);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#1\">            &#39; Use the WriteLine(string, object) method to\n            &#39; render a formatted string and an object in it.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(&quot;The current cultural settings are {0}.&quot;, _\n                CultureInfo.CurrentCulture)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string format, object[] arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing zero or more format items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object array to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The WriteLine method uses the same semantics as the [Format(String,â€‚Object&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt; method. The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first one demonstrates how to render a string and an array to the output stream. The second one shows how to declare the array.  </p>\n<p> The following code example demonstrates how to use the WriteLine method to render a formatted string and the contents of an object array to the output stream.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#2\">            // Render a formatted string and the\n            // text representation of an object array,\n            // myObjectArray, as the contents of\n            // a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.WriteLine(&quot;The trade value at {1} is ${0}.&quot;, curPriceTime);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#2\">            &#39; Render a formatted string and the\n            &#39; text representation of an object array,\n            &#39; myObjectArray, as the contents of\n            &#39; a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(&quot;The trade value at {1} is ${0}.&quot;, curPriceTime)\n            writer.RenderEndTag()\n</code></pre><p> The following code example shows how to declare the object array that was rendered in the preceding code example.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#7\">        private object[] curPriceTime = {4.25, DateTime.Now};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#7\">        Private curPriceTime() As Object = {4.25, DateTime.Now}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array from which to write text to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in the character array where writing begins.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters in the array to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first one demonstrates how to create a character array. The second one demonstrates how to use the array.  </p>\n<p> These code examples generate the following markup:  </p>\n<p> <code>&lt;label&gt;</code>  </p>\n<p> <code>hello</code>  </p>\n<p> <code>&lt;/label&gt;</code>  </p>\n<p> The following code example demonstrates how to create an array of characters that spell out <code>hello world</code>. Included in the array is the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_SpaceChar\" data-linktype=\"relative-path\">SpaceChar</a> field, which creates a space between the two words.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#6\">        private char[] testChars = {&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;,\n            HtmlTextWriter.SpaceChar ,&#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#6\">        Private testChars() As Char = _\n            {&quot;h&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, _\n            HtmlTextWriter.SpaceChar, &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n</code></pre><p> The following code example uses the <code>index</code> and <code>count</code> parameters of the WriteLine method to render the first five characters of the array created in the preceding code example.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods2#4\">            // Render a subarray of a character array\n            // as the contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label);\n            writer.WriteLine(testChars, 0, 5);\n            writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods2#4\">            &#39; Render a subarray of a character array\n            &#39; as the contents of a &lt;label&gt; element.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(testChars, 0, 5)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLine_System_String_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string format, object arg0, object arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing zero or more format items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The WriteLine method uses the same semantics as the <a class=\"xref\" href=\"system.string#System_String_Format_System_String_System_Object_System_Object_\" data-linktype=\"relative-path\">Format(String,Object,Object)</a> method. The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the WriteLine method to render a formatted string and the values of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Today_\" data-linktype=\"relative-path\">Today</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"MarkupTextWriter_Methods1#2\">             // Use the WriteLine(string,object,object) method to\n             // render a formatted string and two objects \n             // in the string.\n             writer.RenderBeginTag(HtmlTextWriterTag.Label);\n             writer.WriteLine(&quot;The current cultural settings are {0}. Today&#39;s date is {1}.&quot;,\n                 CultureInfo.CurrentCulture, DateTime.Today);\n             writer.RenderEndTag();\n</code></pre><pre><code class=\"lang-vb\" name=\"MarkupTextWriter_Methods1#2\">            &#39; Use the WriteLine(string,object,object) method to\n            &#39; render a formatted string and two objects \n            &#39; in the string.\n            writer.RenderBeginTag(HtmlTextWriterTag.Label)\n            writer.WriteLine(&quot;The current cultural settings are {0}. Today&#39;s date is {1}.&quot;, _\n                CultureInfo.CurrentCulture, DateTime.Today)\n            writer.RenderEndTag()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteLineNoTabs_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteLineNoTabs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLineNoTabs(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a string, followed by a line terminator string, to the output stream. This method ignores any specified tab spacing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteLineNoTabs (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the WriteLineNoTabs method rather than the <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method when you do not want to render any tab spacing ahead of the rendered string <code>s</code>.  </p>\n<p> The default line terminator string is a carriage return followed by a line feed (&quot;\\r\\n&quot;). The <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> base method is used to write the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteStyleAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteStyleAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStyleAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified style attribute to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteStyleAttribute (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The style attribute to write to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value assigned to the style attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteStyleAttribute method writes the style attribute in the following form:  </p>\n<p> <code>name</code> <code>=</code> <code>value</code> <code>;</code></p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteStyleAttribute_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteStyleAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStyleAttribute(String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteStyleAttribute (string name, string value, bool fEncode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The style attribute to write to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value assigned to the style attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fEncode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to encode the style attribute and its assigned value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteStyleAttribute method writes the style attribute in the following form:  </p>\n<p> <code>name</code> <code>=</code> <code>value</code> <code>;</code>  </p>\n<p> The <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlAttributeEncode_\" data-linktype=\"relative-path\">HtmlAttributeEncode</a> method is used to encode the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_HtmlTextWriter_WriteUrlEncodedString_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_HtmlTextWriter_WriteUrlEncodedString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteUrlEncodedString(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string, encoding it according to URL requirements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteUrlEncodedString (string text, bool argument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to encode and write to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to encode the string as a part of the parameter section of the URL; <code>false</code> to encode the string as part of the path section of the URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteUrlEncodedString method encodes characters that could be considered URL delimiters (dependent on the setting of <code>argument</code>) into strings of the form <code>%``xx</code>, if the ASCII code is less than 128; otherwise, <code>%u``xxxx</code>, where <code>x</code> is a hexadecimal digit.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEncodedUrl_\" data-linktype=\"relative-path\">WriteEncodedUrl</a> and <a class=\"xref\" href=\"system.web.ui.htmltextwriter#System_Web_UI_HtmlTextWriter_WriteEncodedUrlParameter_\" data-linktype=\"relative-path\">WriteEncodedUrlParameter</a> methods use the WriteUrlEncodedString method as a utility method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.HtmlTextWriter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.HtmlTextWriter.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.AddAttribute\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.AddStyleAttribute\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.BeginRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.Close\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.DefaultTabString\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.DoubleQuoteChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EncodeAttributeValue\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EncodeUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.Encoding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EndRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EndTagLeftChars\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EnterStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EqualsChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.ExitStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.FilterAttributes\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.Flush\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.GetAttributeKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.GetAttributeName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.GetStyleKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.GetStyleName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.GetTagKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.GetTagName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.Indent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.InnerWriter\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.IsAttributeDefined\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.IsValidFormAttribute\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.NewLine\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.OnAttributeRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.OnStyleAttributeRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.OnTagRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.OutputTabs\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.PopEndTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.PushEndTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RegisterAttribute\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RegisterStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RegisterTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RenderAfterContent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RenderAfterTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RenderBeforeContent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RenderBeforeTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RenderBeginTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.RenderEndTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.SelfClosingChars\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.SelfClosingTagEnd\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.SemicolonChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.SingleQuoteChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.SlashChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.SpaceChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.StyleEqualsChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.TagKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.TagLeftChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.TagName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.TagRightChar\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.Write\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteAttribute\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteBeginTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteBreak\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteEncodedText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteEncodedUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteEndTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteFullBeginTag\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteLine\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteLineNoTabs\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteStyleAttribute\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.HtmlTextWriter.WriteUrlEncodedString\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9fde19a7-b564-951d-6893-a4d1aa123028\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI\\HtmlTextWriter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Writes markup characters and text to an ASP.NET server control output stream. This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.HtmlTextWriter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.HtmlTextWriter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.HtmlTextWriter.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.HtmlTextWriter","System.Web.UI.HtmlTextWriter..ctor","System.Web.UI.HtmlTextWriter.AddAttribute","System.Web.UI.HtmlTextWriter.AddStyleAttribute","System.Web.UI.HtmlTextWriter.BeginRender","System.Web.UI.HtmlTextWriter.Close","System.Web.UI.HtmlTextWriter.DefaultTabString","System.Web.UI.HtmlTextWriter.DoubleQuoteChar","System.Web.UI.HtmlTextWriter.EncodeAttributeValue","System.Web.UI.HtmlTextWriter.EncodeUrl","System.Web.UI.HtmlTextWriter.Encoding","System.Web.UI.HtmlTextWriter.EndRender","System.Web.UI.HtmlTextWriter.EndTagLeftChars","System.Web.UI.HtmlTextWriter.EnterStyle","System.Web.UI.HtmlTextWriter.EqualsChar","System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString","System.Web.UI.HtmlTextWriter.ExitStyle","System.Web.UI.HtmlTextWriter.FilterAttributes","System.Web.UI.HtmlTextWriter.Flush","System.Web.UI.HtmlTextWriter.GetAttributeKey","System.Web.UI.HtmlTextWriter.GetAttributeName","System.Web.UI.HtmlTextWriter.GetStyleKey","System.Web.UI.HtmlTextWriter.GetStyleName","System.Web.UI.HtmlTextWriter.GetTagKey","System.Web.UI.HtmlTextWriter.GetTagName","System.Web.UI.HtmlTextWriter.Indent","System.Web.UI.HtmlTextWriter.InnerWriter","System.Web.UI.HtmlTextWriter.IsAttributeDefined","System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined","System.Web.UI.HtmlTextWriter.IsValidFormAttribute","System.Web.UI.HtmlTextWriter.NewLine","System.Web.UI.HtmlTextWriter.OnAttributeRender","System.Web.UI.HtmlTextWriter.OnStyleAttributeRender","System.Web.UI.HtmlTextWriter.OnTagRender","System.Web.UI.HtmlTextWriter.OutputTabs","System.Web.UI.HtmlTextWriter.PopEndTag","System.Web.UI.HtmlTextWriter.PushEndTag","System.Web.UI.HtmlTextWriter.RegisterAttribute","System.Web.UI.HtmlTextWriter.RegisterStyle","System.Web.UI.HtmlTextWriter.RegisterTag","System.Web.UI.HtmlTextWriter.RenderAfterContent","System.Web.UI.HtmlTextWriter.RenderAfterTag","System.Web.UI.HtmlTextWriter.RenderBeforeContent","System.Web.UI.HtmlTextWriter.RenderBeforeTag","System.Web.UI.HtmlTextWriter.RenderBeginTag","System.Web.UI.HtmlTextWriter.RenderEndTag","System.Web.UI.HtmlTextWriter.SelfClosingChars","System.Web.UI.HtmlTextWriter.SelfClosingTagEnd","System.Web.UI.HtmlTextWriter.SemicolonChar","System.Web.UI.HtmlTextWriter.SingleQuoteChar","System.Web.UI.HtmlTextWriter.SlashChar","System.Web.UI.HtmlTextWriter.SpaceChar","System.Web.UI.HtmlTextWriter.StyleEqualsChar","System.Web.UI.HtmlTextWriter.TagKey","System.Web.UI.HtmlTextWriter.TagLeftChar","System.Web.UI.HtmlTextWriter.TagName","System.Web.UI.HtmlTextWriter.TagRightChar","System.Web.UI.HtmlTextWriter.Write","System.Web.UI.HtmlTextWriter.WriteAttribute","System.Web.UI.HtmlTextWriter.WriteBeginTag","System.Web.UI.HtmlTextWriter.WriteBreak","System.Web.UI.HtmlTextWriter.WriteEncodedText","System.Web.UI.HtmlTextWriter.WriteEncodedUrl","System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter","System.Web.UI.HtmlTextWriter.WriteEndTag","System.Web.UI.HtmlTextWriter.WriteFullBeginTag","System.Web.UI.HtmlTextWriter.WriteLine","System.Web.UI.HtmlTextWriter.WriteLineNoTabs","System.Web.UI.HtmlTextWriter.WriteStyleAttribute","System.Web.UI.HtmlTextWriter.WriteUrlEncodedString"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.HtmlTextWriter","System::Web::UI::HtmlTextWriter","System.Web.UI.HtmlTextWriter.#ctor","System::Web::UI::HtmlTextWriter::#ctor","System.Web.UI.HtmlTextWriter.AddAttribute","System::Web::UI::HtmlTextWriter::AddAttribute","System.Web.UI.HtmlTextWriter.AddStyleAttribute","System::Web::UI::HtmlTextWriter::AddStyleAttribute","System.Web.UI.HtmlTextWriter.BeginRender","System::Web::UI::HtmlTextWriter::BeginRender","System.Web.UI.HtmlTextWriter.Close","System::Web::UI::HtmlTextWriter::Close","System.Web.UI.HtmlTextWriter.DefaultTabString","System::Web::UI::HtmlTextWriter::DefaultTabString","System.Web.UI.HtmlTextWriter.DoubleQuoteChar","System::Web::UI::HtmlTextWriter::DoubleQuoteChar","System.Web.UI.HtmlTextWriter.EncodeAttributeValue","System::Web::UI::HtmlTextWriter::EncodeAttributeValue","System.Web.UI.HtmlTextWriter.EncodeUrl","System::Web::UI::HtmlTextWriter::EncodeUrl","System.Web.UI.HtmlTextWriter.Encoding","System::Web::UI::HtmlTextWriter::Encoding","System.Web.UI.HtmlTextWriter.EndRender","System::Web::UI::HtmlTextWriter::EndRender","System.Web.UI.HtmlTextWriter.EndTagLeftChars","System::Web::UI::HtmlTextWriter::EndTagLeftChars","System.Web.UI.HtmlTextWriter.EnterStyle","System::Web::UI::HtmlTextWriter::EnterStyle","System.Web.UI.HtmlTextWriter.EqualsChar","System::Web::UI::HtmlTextWriter::EqualsChar","System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString","System::Web::UI::HtmlTextWriter::EqualsDoubleQuoteString","System.Web.UI.HtmlTextWriter.ExitStyle","System::Web::UI::HtmlTextWriter::ExitStyle","System.Web.UI.HtmlTextWriter.FilterAttributes","System::Web::UI::HtmlTextWriter::FilterAttributes","System.Web.UI.HtmlTextWriter.Flush","System::Web::UI::HtmlTextWriter::Flush","System.Web.UI.HtmlTextWriter.GetAttributeKey","System::Web::UI::HtmlTextWriter::GetAttributeKey","System.Web.UI.HtmlTextWriter.GetAttributeName","System::Web::UI::HtmlTextWriter::GetAttributeName","System.Web.UI.HtmlTextWriter.GetStyleKey","System::Web::UI::HtmlTextWriter::GetStyleKey","System.Web.UI.HtmlTextWriter.GetStyleName","System::Web::UI::HtmlTextWriter::GetStyleName","System.Web.UI.HtmlTextWriter.GetTagKey","System::Web::UI::HtmlTextWriter::GetTagKey","System.Web.UI.HtmlTextWriter.GetTagName","System::Web::UI::HtmlTextWriter::GetTagName","System.Web.UI.HtmlTextWriter.Indent","System::Web::UI::HtmlTextWriter::Indent","System.Web.UI.HtmlTextWriter.InnerWriter","System::Web::UI::HtmlTextWriter::InnerWriter","System.Web.UI.HtmlTextWriter.IsAttributeDefined","System::Web::UI::HtmlTextWriter::IsAttributeDefined","System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined","System::Web::UI::HtmlTextWriter::IsStyleAttributeDefined","System.Web.UI.HtmlTextWriter.IsValidFormAttribute","System::Web::UI::HtmlTextWriter::IsValidFormAttribute","System.Web.UI.HtmlTextWriter.NewLine","System::Web::UI::HtmlTextWriter::NewLine","System.Web.UI.HtmlTextWriter.OnAttributeRender","System::Web::UI::HtmlTextWriter::OnAttributeRender","System.Web.UI.HtmlTextWriter.OnStyleAttributeRender","System::Web::UI::HtmlTextWriter::OnStyleAttributeRender","System.Web.UI.HtmlTextWriter.OnTagRender","System::Web::UI::HtmlTextWriter::OnTagRender","System.Web.UI.HtmlTextWriter.OutputTabs","System::Web::UI::HtmlTextWriter::OutputTabs","System.Web.UI.HtmlTextWriter.PopEndTag","System::Web::UI::HtmlTextWriter::PopEndTag","System.Web.UI.HtmlTextWriter.PushEndTag","System::Web::UI::HtmlTextWriter::PushEndTag","System.Web.UI.HtmlTextWriter.RegisterAttribute","System::Web::UI::HtmlTextWriter::RegisterAttribute","System.Web.UI.HtmlTextWriter.RegisterStyle","System::Web::UI::HtmlTextWriter::RegisterStyle","System.Web.UI.HtmlTextWriter.RegisterTag","System::Web::UI::HtmlTextWriter::RegisterTag","System.Web.UI.HtmlTextWriter.RenderAfterContent","System::Web::UI::HtmlTextWriter::RenderAfterContent","System.Web.UI.HtmlTextWriter.RenderAfterTag","System::Web::UI::HtmlTextWriter::RenderAfterTag","System.Web.UI.HtmlTextWriter.RenderBeforeContent","System::Web::UI::HtmlTextWriter::RenderBeforeContent","System.Web.UI.HtmlTextWriter.RenderBeforeTag","System::Web::UI::HtmlTextWriter::RenderBeforeTag","System.Web.UI.HtmlTextWriter.RenderBeginTag","System::Web::UI::HtmlTextWriter::RenderBeginTag","System.Web.UI.HtmlTextWriter.RenderEndTag","System::Web::UI::HtmlTextWriter::RenderEndTag","System.Web.UI.HtmlTextWriter.SelfClosingChars","System::Web::UI::HtmlTextWriter::SelfClosingChars","System.Web.UI.HtmlTextWriter.SelfClosingTagEnd","System::Web::UI::HtmlTextWriter::SelfClosingTagEnd","System.Web.UI.HtmlTextWriter.SemicolonChar","System::Web::UI::HtmlTextWriter::SemicolonChar","System.Web.UI.HtmlTextWriter.SingleQuoteChar","System::Web::UI::HtmlTextWriter::SingleQuoteChar","System.Web.UI.HtmlTextWriter.SlashChar","System::Web::UI::HtmlTextWriter::SlashChar","System.Web.UI.HtmlTextWriter.SpaceChar","System::Web::UI::HtmlTextWriter::SpaceChar","System.Web.UI.HtmlTextWriter.StyleEqualsChar","System::Web::UI::HtmlTextWriter::StyleEqualsChar","System.Web.UI.HtmlTextWriter.TagKey","System::Web::UI::HtmlTextWriter::TagKey","System.Web.UI.HtmlTextWriter.TagLeftChar","System::Web::UI::HtmlTextWriter::TagLeftChar","System.Web.UI.HtmlTextWriter.TagName","System::Web::UI::HtmlTextWriter::TagName","System.Web.UI.HtmlTextWriter.TagRightChar","System::Web::UI::HtmlTextWriter::TagRightChar","System.Web.UI.HtmlTextWriter.Write","System::Web::UI::HtmlTextWriter::Write","System.Web.UI.HtmlTextWriter.WriteAttribute","System::Web::UI::HtmlTextWriter::WriteAttribute","System.Web.UI.HtmlTextWriter.WriteBeginTag","System::Web::UI::HtmlTextWriter::WriteBeginTag","System.Web.UI.HtmlTextWriter.WriteBreak","System::Web::UI::HtmlTextWriter::WriteBreak","System.Web.UI.HtmlTextWriter.WriteEncodedText","System::Web::UI::HtmlTextWriter::WriteEncodedText","System.Web.UI.HtmlTextWriter.WriteEncodedUrl","System::Web::UI::HtmlTextWriter::WriteEncodedUrl","System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter","System::Web::UI::HtmlTextWriter::WriteEncodedUrlParameter","System.Web.UI.HtmlTextWriter.WriteEndTag","System::Web::UI::HtmlTextWriter::WriteEndTag","System.Web.UI.HtmlTextWriter.WriteFullBeginTag","System::Web::UI::HtmlTextWriter::WriteFullBeginTag","System.Web.UI.HtmlTextWriter.WriteLine","System::Web::UI::HtmlTextWriter::WriteLine","System.Web.UI.HtmlTextWriter.WriteLineNoTabs","System::Web::UI::HtmlTextWriter::WriteLineNoTabs","System.Web.UI.HtmlTextWriter.WriteStyleAttribute","System::Web::UI::HtmlTextWriter::WriteStyleAttribute","System.Web.UI.HtmlTextWriter.WriteUrlEncodedString","System::Web::UI::HtmlTextWriter::WriteUrlEncodedString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9fde19a7-b564-951d-6893-a4d1aa123028","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI\\HtmlTextWriter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI/HtmlTextWriter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HtmlTextWriter class | Microsoft Docs","_op_ogTitle":"HtmlTextWriter class","description":"Writes markup characters and text to an ASP.NET server control output stream. This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.\n","toc_asset_id":"_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.HtmlTextWriter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.htmltextwriter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.htmltextwriter","fileRelativePath":"System.Web.UI.HtmlTextWriter.html"},"themesRelativePathToOutputRoot":"_themes/"}