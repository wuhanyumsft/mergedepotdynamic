{"content":"    \r\n    <h1 id=\"System_Windows_Forms_HtmlDocument\">\r\n      <span class=\"lang-csharp\">HtmlDocument</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides top-level programmatic access to an HTML document hosted by the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class HtmlDocument</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HtmlDocument</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>HtmlDocument provides a managed wrapper around Internet Explorer&#39;s document object, also known as the HTML Document Object Model (DOM). You obtain an instance of HtmlDocument through the <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_Document_\" data-linktype=\"relative-path\">Document</a> property of the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control.  </p>\n<p> HTML tags inside of an HTML document can be nested inside one another. HtmlDocument thus represents a document tree, whose children are instances of the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> class. The following code example shows a simple HTML file.  </p>\n<pre><code>&lt;HTML&gt;  \n    &lt;BODY&gt;  \n        &lt;DIV name=&quot;Span1&quot;&gt;Simple HTML Form&lt;/DIV&gt;  \n        &lt;FORM&gt;  \n            &lt;SPAN name=&quot;TextLabel&quot;&gt;Enter Your Name:&lt;/SPAN&gt;  \n            &lt;INPUT type=&quot;text&quot; size=&quot;20&quot; name=&quot;Text1&quot;&gt;  \n        &lt;/FORM&gt;  \n    &lt;/BODY&gt;  \n&lt;/HTML&gt;  \n</code></pre><p> In this example, HtmlDocument represents the entire document inside the <code>HTML</code> tags. The <code>BODY</code>, <code>DIV</code>, <code>FORM</code> and <code>SPAN</code> tags are represented by individual <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects.  </p>\n<p> There are several ways you can access the elements in this tree. Use the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Body_\" data-linktype=\"relative-path\">Body</a> property to access the <code>BODY</code> tag and all of its children. The <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_ActiveElement_\" data-linktype=\"relative-path\">ActiveElement</a> property gives you the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> for the element on an HTML page that has user input focus. All elements within an HTML page can have a name; the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_All_\" data-linktype=\"relative-path\">All</a> collection provides access to each <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> using its name as an index. <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_GetElementsByTagName_\" data-linktype=\"relative-path\">GetElementsByTagName</a> will return an <a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a> of all <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects with a given HTML tag name, such as <code>DIV</code> or <code>TABLE</code>. <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_GetElementById_\" data-linktype=\"relative-path\">GetElementById</a> will return the single <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> corresponding to the unique ID that you supply. <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_GetElementFromPoint_\" data-linktype=\"relative-path\">GetElementFromPoint</a> will return the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> that can be found on the screen at the supplied mouse pointer coordinates.  </p>\n<p> You can also use the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Forms_\" data-linktype=\"relative-path\">Forms</a> and <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Images_\" data-linktype=\"relative-path\">Images</a> collection to iterate through elements that represent user input forms and graphics, respectively.  </p>\n<p> HtmlDocument is based on the unmanaged interfaces implemented by Internet Explorer&#39;s DHTML DOM: <code>IHTMLDocument</code>, <code>IHTMLDocument2</code>, <code>IHTMLDocument3</code>, and <code>IHTMLDocument4</code>. Only the most frequently used properties and methods on these unmanaged interfaces are exposed by HtmlDocument. You can access all other properties and methods directly using the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_DomDocument_\" data-linktype=\"relative-path\">DomDocument</a> property, which you can cast to the desired unmanaged interface pointer.  </p>\n<p> An HTML document may contain frames, which are different windows inside of the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control. Each frame displays its own HTML page. The <a class=\"xref\" href=\"system.windows.forms.htmlwindow#System_Windows_Forms_HtmlWindow_Frames_\" data-linktype=\"relative-path\">Frames</a> collection is available through the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Window_\" data-linktype=\"relative-path\">Window</a> property. You may also use the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Window_\" data-linktype=\"relative-path\">Window</a> property to resize the displayed page, scroll the document, or display alerts and prompts to the user.  </p>\n<p> HtmlDocument exposes the most common events you would expect to handle when hosting HTML pages. For events not exposed directly by the interface, you can add a handler for the event using <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_AttachEventHandler_\" data-linktype=\"relative-path\">AttachEventHandler</a>.  </p>\n<p> HTML files may contain <code>SCRIPT</code> tags that encapsulate code written in one of the Active Scripting languages, such as JScript or VBScript. The <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_InvokeScript_\" data-linktype=\"relative-path\">InvokeScript</a> method provides for execution of properties and methods defined in a <code>SCRIPT</code> tag.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> While most of the properties, methods, and events on HtmlDocument have kept the same names as they have on the unmanaged DOM, some have been changed for consistency with the .NET Framework.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_ActiveElement\" data-linktype=\"self-bookmark\">ActiveElement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> which currently has user input focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_ActiveLinkColor\" data-linktype=\"self-bookmark\">ActiveLinkColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of a hyperlink when clicked by a user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_All\" data-linktype=\"self-bookmark\">All</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an instance of <a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a>, which stores all <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects for the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_BackColor\" data-linktype=\"self-bookmark\">BackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of the HTML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Body\" data-linktype=\"self-bookmark\">Body</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> for the <code>BODY</code> tag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Cookie\" data-linktype=\"self-bookmark\">Cookie</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP cookies associated with this document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_DefaultEncoding\" data-linktype=\"self-bookmark\">DefaultEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the encoding used by default for the current document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Domain\" data-linktype=\"self-bookmark\">Domain</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the string describing the domain of this document for security purposes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_DomDocument\" data-linktype=\"self-bookmark\">DomDocument</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the unmanaged interface pointer for this <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Encoding\" data-linktype=\"self-bookmark\">Encoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the character encoding for this document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Focused\" data-linktype=\"self-bookmark\">Focused</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the document has user input focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_ForeColor\" data-linktype=\"self-bookmark\">ForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text color for the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Forms\" data-linktype=\"self-bookmark\">Forms</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of all of the <code><form></code> elements in the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Images\" data-linktype=\"self-bookmark\">Images</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of all image tags in the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_LinkColor\" data-linktype=\"self-bookmark\">LinkColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color of hyperlinks.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Links\" data-linktype=\"self-bookmark\">Links</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of all the hyperlinks within this HTML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_RightToLeft\" data-linktype=\"self-bookmark\">RightToLeft</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the direction of text in the current document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Title\" data-linktype=\"self-bookmark\">Title</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text value of the <code><title></title></code> tag in the current HTML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Url\" data-linktype=\"self-bookmark\">Url</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URL describing the location of this document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_VisitedLinkColor\" data-linktype=\"self-bookmark\">VisitedLinkColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the Color of links to HTML pages that the user has already visited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Window\" data-linktype=\"self-bookmark\">Window</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlwindow\" data-linktype=\"relative-path\">HtmlWindow</a> associated with this document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_AttachEventHandler_System_String_System_EventHandler_\" data-linktype=\"self-bookmark\">AttachEventHandler(String,EventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an event handler for the named HTML DOM event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_CreateElement_System_String_\" data-linktype=\"self-bookmark\">CreateElement(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <code>HtmlElement</code> of the specified HTML tag type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_DetachEventHandler_System_String_System_EventHandler_\" data-linktype=\"self-bookmark\">DetachEventHandler(String,EventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes an event handler from a named event on the HTML DOM.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests the object for equality against the current object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_ExecCommand_System_String_System_Boolean_System_Object_\" data-linktype=\"self-bookmark\">ExecCommand(String,Boolean,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified command against the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Focus\" data-linktype=\"self-bookmark\">Focus()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets user input focus on the current document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_GetElementById_System_String_\" data-linktype=\"self-bookmark\">GetElementById(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a single <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> using the element&#39;s <code>ID</code> attribute as a search key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_GetElementFromPoint_System_Drawing_Point_\" data-linktype=\"self-bookmark\">GetElementFromPoint(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the HTML element located at the specified client coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_GetElementsByTagName_System_String_\" data-linktype=\"self-bookmark\">GetElementsByTagName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieve a collection of elements with the specified HTML tag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the hash code for this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_InvokeScript_System_String_\" data-linktype=\"self-bookmark\">InvokeScript(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes an Active Scripting function defined in an HTML page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_InvokeScript_System_String_System_Object___\" data-linktype=\"self-bookmark\">InvokeScript(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes an Active Scripting function defined in an HTML page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_OpenNew_System_Boolean_\" data-linktype=\"self-bookmark\">OpenNew(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a new <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> to use with the <span class=\"xref\">stem.Windows.Forms.HtmlDocument.Write*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a new HTML page.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"self-bookmark\">Click</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks anywhere on the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_ContextMenuShowing\" data-linktype=\"self-bookmark\">ContextMenuShowing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user requests to display the document&#39;s context menu.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Focusing\" data-linktype=\"self-bookmark\">Focusing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before focus is given to the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_LosingFocus\" data-linktype=\"self-bookmark\">LosingFocus</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs while focus is leaving a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_MouseDown\" data-linktype=\"self-bookmark\">MouseDown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks the left mouse button.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_MouseLeave\" data-linktype=\"self-bookmark\">MouseLeave</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse is no longer hovering over the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_MouseMove\" data-linktype=\"self-bookmark\">MouseMove</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse is moved over the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_MouseOver\" data-linktype=\"self-bookmark\">MouseOver</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse is moved over the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_MouseUp\" data-linktype=\"self-bookmark\">MouseUp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user releases the left mouse button.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_Stop\" data-linktype=\"self-bookmark\">Stop</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when navigation to another Web page is halted.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_op_Equality_System_Windows_Forms_HtmlDocument_System_Windows_Forms_HtmlDocument_\" data-linktype=\"self-bookmark\">op_Equality(HtmlDocument,HtmlDocument)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the specified <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> instances represent the same value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlDocument_op_Inequality_System_Windows_Forms_HtmlDocument_System_Windows_Forms_HtmlDocument_\" data-linktype=\"self-bookmark\">op_Inequality(HtmlDocument,HtmlDocument)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the specified <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> instances do not represent the same value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_ActiveElement\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_ActiveElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActiveElement</div>        \r\n          </div>\r\n    \r\n            <p>Provides the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> which currently has user input focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement ActiveElement { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> which currently has user input focus.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the document has focus, but no element of the document has been given focus, ActiveElement returns the element corresponding to the <code>&lt;BODY&gt;</code> tag.  </p>\n<p> If the document does not have focus, ActiveElement returns <code>null</code>.  </p>\n<p> If the current element with input focus is a cell (<code>TD</code>) in an HTML <code>TABLE</code> tag, ActiveElement will return the element that contains the <code>TABLE</code> element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_ActiveLinkColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_ActiveLinkColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActiveLinkColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of a hyperlink when clicked by a user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color ActiveLinkColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> for active links.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A link is active when a user is clicking on it. Change this property to change the color of the link prior to navigation.  </p>\n<p> The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> type in the .NET Framework supports an <code>Alpha</code> value, but the HTML DOM does not. Therefore, <code>Alpha</code> will have no effect when assigned to this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_All\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_All_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">All</div>        \r\n          </div>\r\n    \r\n            <p>Gets an instance of <a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a>, which stores all <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects for the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElementCollection All { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a> of all elements in the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The All collection provides random access to any element in the HTML document, regardless of its position in the document tree. Use it to access any element in an HTML document by name, ID, or index. You may also iterate over all of the elements within a document.  </p>\n<p> Some elements, such as <code>HEAD</code> and <code>TITLE</code>, will never have names associated with them. All other elements will have names only if the author of the HTML file assigned them. You can access elements without names by ID or index.  </p>\n<p> You cannot add elements directly to the All collection, because all elements in an HTML file outside of the <code>HTML</code> tag must have a parent element. Use the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a> method or the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InnerHtml_\" data-linktype=\"relative-path\">InnerHtml</a> property on <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> to add new elements to the tree.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example iterates through all of the elements in a document and sets <code>Enabled=True</code>, enabling any elements that may have been disabled by default to prevent user input while the document was loading. The code example requires that your application contains a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control named <code>WebBrowser1</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#1\">Private Sub EnableAllElements()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        For Each PageElement As HtmlElement In WebBrowser1.Document.All\n            PageElement.Enabled = True\n        Next\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#1\">public void EnableAllElements()\n{\n    if (webBrowser1.Document != null)\n    {\n        foreach (HtmlElement pageElement in webBrowser1.Document.All)\n        {\n            pageElement.Enabled = true;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_BackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_BackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of the HTML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color BackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of the document&#39;s background.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>BackColor will display when no other element occupies that area of the screen.  </p>\n<p> The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> type in the .NET Framework supports an <code>Alpha</code> value, but the HTML DOM does not. Therefore, <code>Alpha</code> will have no effect when assigned to this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Body\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Body_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Body</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> for the <code>BODY</code> tag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement Body { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> object for the <code>BODY</code> tag.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An HTML document is split into two major sections:  </p>\n<ul>\n<li><p><code>HEAD</code>, which contains the document&#39;s title, any document meta-data, and <code>SCRIPT</code> elements.  </p>\n</li>\n<li><p><code>BODY</code>, which contains all of the elements involved in the on-screen appearance of the document.  </p>\n<p>There is no equivalent <code>Head</code> property on <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>. To obtain the <code>HEAD</code> element, use <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_GetElementsByTagName_\" data-linktype=\"relative-path\">GetElementsByTagName</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new <code>DIV</code> element and appends it to the bottom of the document using the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#13\">Private Sub AppendText(ByVal Text As String)\n    If (WebBrowser1.Document IsNot Nothing) Then\n        With WebBrowser1.Document\n            Dim TextElem As HtmlElement = .CreateElement(&quot;DIV&quot;)\n            TextElem.InnerText = Text\n            .Body.AppendChild(TextElem)\n        End With\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#13\">private void AppendText(String text)\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlDocument doc = webBrowser1.Document;\n        HtmlElement textElem = doc.CreateElement(&quot;DIV&quot;);\n        textElem.InnerText = text;\n        doc.Body.AppendChild(textElem);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Cookie\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Cookie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cookie</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP cookies associated with this document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Cookie { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing a list of cookies, with each cookie separated by a semicolon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Cookie property of <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> exposes all cookies set for a Web page.  </p>\n<p> A <em>cookie</em> is an arbitrary name/value pair associated with a given Web page. Web developers use cookies to track when users visit or return to a Web site. A cookie is composed of multiple parts, called cookie crumbs, that determine the following:  </p>\n<ul>\n<li><p>The document set to which the cookie applies; its domain and path.  </p>\n</li>\n<li><p>The name and value of the cookie.  </p>\n</li>\n<li><p>The expiration date of the cookie.  </p>\n</li>\n<li><p>Whether the cookie can only be sent using a secure connection.  </p>\n<p>The Cookie property may contain multiple cookies.  </p>\n<p>You can only use the Cookie property to set one cookie at a time.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_DefaultEncoding\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_DefaultEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the encoding used by default for the current document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DefaultEncoding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representing the encoding that the browser uses when the page is first displayed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default encoding is the encoding the managed HTML Document Object Model (DOM) will attempt to use when the page is initially loaded. This encoding is derived either from Internet Explorer&#39;s <strong>Encoding</strong> settings, or from a <code>META</code> tag embedded within the page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Domain\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Domain_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Domain</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the string describing the domain of this document for security purposes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Domain { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A valid domain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The argument for the <code>Domain</code> property must be a valid domain name using Domain Name System (DNS) conventions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, two Web pages in different frames are prevented from accessing each other&#39;s content using script; even www.microsoft.com and msdn.microsoft.com are, in this instance, considered different domains. To enable cross-frame scripting for pages from the same top-level domain, you can assign a new value to the Domain property. In the pervious URL example, setting Domain to microsoft.com would allow both pages to communicate with one another.  </p>\n<p> Strings assigned to the Domain property must be valid top-level domains. In the previous URL example, you can set Domain to microsoft.com, but not to .com, which would enable any page on the Internet to script a page&#39;s contents.  </p>\n<p> You cannot use the Domain property to enable cross-frame scripting for pages accessed using two different protocols. If one frame in your page comes from a Web server (the http:// protocol) and another comes from the file system (the file://) protocol, they will not be able to communicate with one another regardless of the value of the Domain property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_DomDocument\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_DomDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DomDocument</div>        \r\n          </div>\r\n    \r\n            <p>Gets the unmanaged interface pointer for this <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object DomDocument { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing an <code>IDispatch</code> pointer to the unmanaged document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written in COM. If you need to access unexposed properties or methods on the underlying COM interfaces, such as <code>IHTMLDocument2</code>, you can use this object to query for them.  </p>\n<p> To use the unmanaged interfaces, import the MSHTML library (mshtml.dll) into your application. However, you can also execute unexposed properties and methods using the <code>IDispatch::Invoke</code> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example casts the DomDocument to an <code>IHTMLDocument2</code> pointer and displays the value of the <code>lastModified</code> property, which tells when the owner of the document last updated its contents. The code example requires that you have a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> on your form named <code>Button6</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#3\">Private Function GetLastModifiedDate() As String\n    If (Not (WebBrowser1.Document Is Nothing)) Then\n        Dim CurrentDocument As MSHTML.IHTMLDocument2 = WebBrowser1.Document.DomDocument\n        GetLastModifiedDate = CurrentDocument.lastModified\n    Else\n        GetLastModifiedDate = Nothing\n    End If\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#3\">private string GetLastModifiedDate()\n{\n    if (webBrowser1.Document != null)\n    {\n        MSHTML.IHTMLDocument2 currentDoc = (MSHTML.IHTMLDocument2)webBrowser1.Document.DomDocument;\n        return (currentDoc.lastModified);\n    }\n    else\n    {\n        return (&quot;&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Encoding\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Encoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the character encoding for this document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Encoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representing the current character encoding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Focused\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Focused_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Focused</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the document has user input focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Focused { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the document has focus; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_ForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_ForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text color for the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color ForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The color of the text in the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> type in the .NET Framework supports an <code>Alpha</code> value, but the HTML DOM does not. Therefore, <code>Alpha</code> will have no effect when assigned to this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Forms\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Forms_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Forms</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of all of the <code><form></code> elements in the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElementCollection Forms { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a> of the <code><form></code> elements within the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An HTML document may have one or more <code>FORM</code> elements with input fields for submitting data back to a server.  </p>\n<p> You can programmatically submit a <code>FORM</code> by obtaining its <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> and calling its <code>Submit</code> method using the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InvokeMember_\" data-linktype=\"relative-path\">InvokeMember</a> method.  </p>\n<p> To add a new <code>FORM</code> to a document, you can either create a new <code>FORM</code> tag as a string, and assign it to the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InnerHtml_\" data-linktype=\"relative-path\">InnerHtml</a> property of an element previously added to the HTML DOM; or you can use the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_CreateElement_\" data-linktype=\"relative-path\">CreateElement</a> method, set its properties using <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_SetAttribute_\" data-linktype=\"relative-path\">SetAttribute</a>, and add it as a child of an existing element using <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example iterates through all of the <code>Form</code> elements on a Web page and clears all user input, setting the forms back to their default values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#4\">Private Sub ResetForms()\n    If (Not (WebBrowser1.Document Is Nothing)) Then\n        For Each FormElem As HtmlElement In WebBrowser1.Document.Forms\n            FormElem.InvokeMember(&quot;reset&quot;)\n        Next\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#4\">private void ResetForms()\n{\n    if (webBrowser1.Document != null)\n    {\n        foreach (HtmlElement form in webBrowser1.Document.Forms)\n        {\n            form.InvokeMember(&quot;reset&quot;);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Images\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Images_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Images</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of all image tags in the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElementCollection Images { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects, one for each IMG tag in the document. Elements are returned from the collection in source order.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Images returns a collection of <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects. To access attributes, such as <code>ALT</code> and <code>SRC</code>, that are not directly exposed by <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a>, use the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_GetAttribute_\" data-linktype=\"relative-path\">GetAttribute</a> method.  </p>\n<p> To add a new image to a document, either create a new <code>IMG</code> tag as a string, and assign it to the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InnerHtml_\" data-linktype=\"relative-path\">InnerHtml</a> property of an element previously added to the HTML DOM; or use the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_CreateElement_\" data-linktype=\"relative-path\">CreateElement</a> method, set its properties using <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_SetAttribute_\" data-linktype=\"relative-path\">SetAttribute</a>, and add it as a child of an existing element using <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example examines the <code>ALT</code> attribute of all of the images in the document, and sets a default <code>ALT</code> attribute if a value is not already set.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#8\">Private Function GetImageUrls() As String()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim Urls(WebBrowser1.Document.Images.Count) As String\n\n        For Each ImgElement As HtmlElement In WebBrowser1.Document.Images\n            Urls(Urls.Length) = ImgElement.GetAttribute(&quot;SRC&quot;)\n        Next\n\n        GetImageUrls = Urls\n    Else\n        Dim Urls(0) As String\n        GetImageUrls = Urls\n    End If\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#8\">private string[] GetImageUrls()\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlDocument doc = webBrowser1.Document;\n        string[] urls = (string[])Array.CreateInstance(Type.GetType(&quot;System.String&quot;), doc.Images.Count);\n\n        foreach (HtmlElement imgElement in doc.Images)\n        {\n            urls[urls.Length] = imgElement.GetAttribute(&quot;src&quot;);\n        }\n        return (urls);\n    }\n    else\n    {\n        return (new string[0]);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_LinkColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_LinkColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color of hyperlinks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color LinkColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The color for hyperlinks in the current document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> type in the .NET Framework supports an <code>Alpha</code> value, but the HTML DOM does not. Therefore, <code>Alpha</code> will have no effect when assigned to this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Links\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Links_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Links</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of all the hyperlinks within this HTML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElementCollection Links { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a> of <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This collection will contain all links created using the <code>A</code>, <code>LINK</code>, and <code>AREA</code> tags in HTML.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects contained within this collection encapsulate the unmanaged <code>IHTMLLinkElement</code> interface. To access the properties of the underlying interface safely, use the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_GetAttribute_\" data-linktype=\"relative-path\">GetAttribute</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_RightToLeft\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_RightToLeft_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RightToLeft</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the direction of text in the current document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RightToLeft { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if text renders from right to left; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>RightToLeft will not have any value unless it has been set explicitly, either in code or in HTML.  </p>\n<p> Unlike the RightToLeft property on Windows Forms controls, RightToLeft on the managed HTML DOM will not affect the direction of Latin text.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Title\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Title_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Title</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text value of the <code><title></title></code> tag in the current HTML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Title { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The title of the current document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Title property to identify the document by way of a human-readable name.  </p>\n<p> Changes to this property will also reflect in the <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_DocumentTitle_\" data-linktype=\"relative-path\">DocumentTitle</a> property of the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an HTML hyperlink to the current document using the URL of the document as the link&#39;s location and the title of the document as the link text. The code example requires that your application has a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control named <code>WebBrowser1</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#14\">Private Sub ExportDocumentLink()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim Link As String = &quot;&lt;A HREF=&quot;&quot;&quot; &amp; WebBrowser1.Document.Url.ToString() &amp; &quot;&quot;&quot;&gt;&quot; &amp; WebBrowser1.Document.Title &amp; &quot;&lt;/A&gt;&quot;\n\n        Dim DataObj As IDataObject = Clipboard.GetDataObject()\n        DataObj.SetData(&quot;Html&quot;, True, CObj(Link))\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#14\">private void ExportDocumentLink()\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlDocument doc = webBrowser1.Document;\n        String link = &quot;&lt;A HREF=\\&quot;&quot; + webBrowser1.Document.Url.ToString() + &quot;\\&quot;&gt;&quot; + webBrowser1.Document.Title + &quot;&lt;/A&gt;&quot;;\n\n        IDataObject dataObj = Clipboard.GetDataObject();\n        dataObj.SetData(&quot;HTML&quot;, true, (object)link);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Url\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Url_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Url</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URL describing the location of this document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri Url { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> representing this document&#39;s URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is read-only. To navigate to a new document, use the <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_Url_\" data-linktype=\"relative-path\">Url</a> property on the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_VisitedLinkColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_VisitedLinkColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitedLinkColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the Color of links to HTML pages that the user has already visited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color VisitedLinkColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The color of visited links.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Color</code> type in the .NET Framework supports an <code>Alpha</code> value, but the HTML DOM does not. Therefore, <code>Alpha</code> will have no effect when assigned to this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Window\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Window_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Window</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlwindow\" data-linktype=\"relative-path\">HtmlWindow</a> associated with this document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlWindow Window { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlwindow\" data-linktype=\"relative-path\">HtmlWindow</a></div>\r\n                  </div>\r\n                  <p>The window for this document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All HTML documents have an HTML DOM object called a window, which can be used to manipulate the screen size of the document and open new windows, as well as access other important objects, such as an <a class=\"xref\" href=\"system.windows.forms.htmlhistory\" data-linktype=\"relative-path\">HtmlHistory</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_AttachEventHandler_System_String_System_EventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_AttachEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttachEventHandler(String,EventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an event handler for the named HTML DOM event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AttachEventHandler (string eventName, EventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event you want to handle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The managed code that handles the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You should not attach an event to the document or one of its objects until the document has completed loading. The earliest you should call this method is in the <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_DocumentCompleted\" data-linktype=\"relative-path\">DocumentCompleted</a> event of the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control.  </p>\n<p> This method allows you to attach handlers to unmanaged DOM events not exposed by <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>. For more information about available unmanaged DOM events, see <a href=\"../Topic/Accessing%20Unexposed%20Members%20on%20the%20Managed%20HTML%20Document%20Object%20Model.md\" data-linktype=\"relative-path\">Accessing Unexposed Members on the Managed HTML Document Object Model</a> and the IHTMLDocument interfaces: <a href=\"http://go.microsoft.com/fwlink/?LinkId=104882\" data-linktype=\"external\">IHTMLDocument</a>, <a href=\"http://go.microsoft.com/fwlink/?LinkId=104884\" data-linktype=\"external\">IHTMLDocument2</a>, <a href=\"http://go.microsoft.com/fwlink/?LinkId=104886\" data-linktype=\"external\">IHTMLDocument3</a>, <a href=\"http://go.microsoft.com/fwlink/?LinkId=104887\" data-linktype=\"external\">IHTMLDocument4</a>, <a href=\"http://go.microsoft.com/fwlink/?LinkId=104888\" data-linktype=\"external\">IHTMLDocument5</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_CreateElement_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_CreateElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateElement(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <code>HtmlElement</code> of the specified HTML tag type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement CreateElement (string elementTag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementTag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the HTML element to create.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>A new element of the specified tag type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>elementTag</code> may be one of any of the supported HTML tags in Internet Explorer, except for <code>FRAME</code> or <code>IFRAME</code>.  </p>\n<p> CreateElement returns an element unattached to the current document tree. To add the element to the document, use either the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InsertAdjacentElement_\" data-linktype=\"relative-path\">InsertAdjacentElement</a> or <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a> methods.  </p>\n<p> This method will not affect the state of an existing document&#39;s source code when you use the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control&#39;s <strong>View Source</strong> context menu command or the <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_DocumentText_\" data-linktype=\"relative-path\">DocumentText</a> and <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_DocumentStream_\" data-linktype=\"relative-path\">DocumentStream</a> properties of the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control.  </p>\n<p> When you create new elements with CreateElement, you will not be able to set certain properties, such as <code>Name</code>. In cases where you need to set the Name attribute, assign them as HTML to the <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InnerHtml_\" data-linktype=\"relative-path\">InnerHtml</a> property of another object in the document.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses data from the Northwind database to create an HTML table using CreateElement. The <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a> method is also used, first to add cells (<code>TD</code> elements) to rows (<code>TR</code> elements), then to add rows to the table, and finally to append the table to the end of the current document. The code example requires that your application has a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control called <code>WebBrowser1</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#10\">Private Sub DisplayCustomersTable()\n    &#39; Initialize the database connection.\n    Dim CustomerData As New DataSet()\n    Dim CustomerTable As DataTable\n\n    Try\n        Dim DBConn As New SqlConnection(&quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind;&quot;)\n        Dim DBQuery As New SqlDataAdapter(&quot;SELECT * FROM CUSTOMERS&quot;, DBConn)\n        DBQuery.Fill(CustomerData)\n    Catch dbEX As DataException\n\n    End Try\n\n    CustomerTable = CustomerData.Tables(&quot;Customers&quot;)\n\n    If (Not (WebBrowser1.Document Is Nothing)) Then\n        With WebBrowser1.Document\n            Dim TableElem As HtmlElement = .CreateElement(&quot;TABLE&quot;)\n            .Body.AppendChild(TableElem)\n\n            Dim TableRow As HtmlElement\n\n            &#39; Create the table header. \n            Dim TableHeader As HtmlElement = .CreateElement(&quot;THEAD&quot;)\n            TableElem.AppendChild(TableHeader)\n            TableRow = .CreateElement(&quot;TR&quot;)\n            TableHeader.AppendChild(TableRow)\n\n            Dim HeaderElem As HtmlElement\n            For Each Col As DataColumn In CustomerTable.Columns\n                HeaderElem = .CreateElement(&quot;TH&quot;)\n                HeaderElem.InnerText = Col.ColumnName\n                TableRow.AppendChild(HeaderElem)\n            Next\n\n            &#39; Create table rows.\n            Dim TableBody As HtmlElement = .CreateElement(&quot;TBODY&quot;)\n            TableElem.AppendChild(TableBody)\n            For Each Row As DataRow In CustomerTable.Rows\n                TableRow = .CreateElement(&quot;TR&quot;)\n                TableBody.AppendChild(TableRow)\n                For Each Col As DataColumn In CustomerTable.Columns\n                    Dim Item As Object = Row(Col)\n                    Dim TableCell As HtmlElement = .CreateElement(&quot;TD&quot;)\n                    If Not (TypeOf (Item) Is DBNull) Then\n                        TableCell.InnerText = CStr(Item)\n                    End If\n                    TableRow.AppendChild(TableCell)\n                Next\n            Next\n\n        End With\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#10\">private void DisplayCustomersTable()\n{\n    DataSet customersSet = new DataSet();\n    DataTable customersTable = null;\n    SqlDataAdapter sda = new SqlDataAdapter(&quot;SELECT * FROM Customers&quot;, &quot;Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind;&quot;);\n    sda.Fill(customersTable);\n    customersTable = customersSet.Tables[0];\n\n    if (webBrowser1.Document != null)\n    {\n        HtmlElement tableRow = null;\n        HtmlElement headerElem = null;\n\n        HtmlDocument doc = webBrowser1.Document;\n        HtmlElement tableElem = doc.CreateElement(&quot;TABLE&quot;);\n        doc.Body.AppendChild(tableElem);\n\n        HtmlElement tableHeader = doc.CreateElement(&quot;THEAD&quot;);\n        tableElem.AppendChild(tableHeader);\n        tableRow = doc.CreateElement(&quot;TR&quot;);\n        tableHeader.AppendChild(tableRow);\n\n        foreach (DataColumn col in customersTable.Columns)\n        {\n            headerElem = doc.CreateElement(&quot;TH&quot;);\n            headerElem.InnerText = col.ColumnName;\n            tableRow.AppendChild(headerElem);\n        }\n\n        // Create table rows.\n        HtmlElement tableBody = doc.CreateElement(&quot;TBODY&quot;);\n        tableElem.AppendChild(tableBody);\n        foreach (DataRow dr in customersTable.Rows)\n        {\n            tableRow = doc.CreateElement(&quot;TR&quot;);\n            tableBody.AppendChild(tableRow);\n            foreach (DataColumn col in customersTable.Columns)\n            {\n                Object dbCell = dr[col];\n                HtmlElement tableCell = doc.CreateElement(&quot;TD&quot;);\n                if (!(dbCell is DBNull))\n                {\n                    tableCell.InnerText = dbCell.ToString();\n                }\n                tableRow.AppendChild(tableCell);\n            }\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_DetachEventHandler_System_String_System_EventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_DetachEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DetachEventHandler(String,EventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Removes an event handler from a named event on the HTML DOM.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DetachEventHandler (string eventName, EventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event you want to cease handling.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The managed code that handles the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Tests the object for equality against the current object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the objects are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_ExecCommand_System_String_System_Boolean_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_ExecCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecCommand(String,Boolean,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified command against the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ExecCommand (string command, bool showUI, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the command to execute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>showUI</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Whether or not to show command-specific dialog boxes or message boxes to the user.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to assign using the command. Not applicable for all commands.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ExecCommand exposes a large array of commands for which there are no methods exposed on <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>. Using ExecCommand you can insert new HTML elements, select and format text, and clear any cached authentication credentials. For a full list of commands, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=198814\" data-linktype=\"external\">Command Identifiers</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Certain commands, such as copy, have return values. In the current implementation of ExecCommand, you cannot obtain a return value from your call. To retrieve return values, use the corresponding unmanaged method on a <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_DomDocument_\" data-linktype=\"relative-path\">DomDocument</a> reference instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Focus\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Focus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Focus()</div>        \r\n          </div>\r\n    \r\n            <p>Sets user input focus on the current document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Focus ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Focus will set focus on the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control, if the control currently does not have focus. If the document is hosted inside of a <code>FRAME</code>, this method will put focus on that <code>FRAME</code> within the <code>FRAMESET</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_GetElementById_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_GetElementById_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetElementById(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a single <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> using the element&#39;s <code>ID</code> attribute as a search key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement GetElementById (string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID attribute of the element to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>Returns the first object with the same <code>ID</code> attribute as the specified value, or <code>null</code> if the <code>id</code> cannot be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are multiple elements in the document with the same ID value, GetElementById will return the first one it finds.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example retrieves a named <code>TABLE</code> from a document, counts up the number of rows, and displays the result in the Web page. The code example requires that you have a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control in your project named <code>WebBrowser1</code>, and that you have loaded a Web page with a <code>TABLE</code> whose <code>ID</code> attribute is <code>Table1</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#5\">Private Function GetTableRowCount(ByVal TableID As String) As Integer\n    Dim Count As Integer = 0\n\n    If (WebBrowser1.Document IsNot Nothing) Then\n\n        Dim TableElem As HtmlElement = WebBrowser1.Document.GetElementById(TableID)\n        If (TableElem IsNot Nothing) Then\n            For Each RowElem As HtmlElement In TableElem.GetElementsByTagName(&quot;TR&quot;)\n                Count = Count + 1\n            Next\n        Else\n            Throw (New ArgumentException(&quot;No TABLE with an ID of &quot; &amp; TableID &amp; &quot; exists.&quot;))\n        End If\n    End If\n    GetTableRowCount = Count\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#5\">private Int32 GetTableRowCount(string tableID)\n{\n    Int32 count = 0;\n\n    if (webBrowser1.Document != null)\n    {\n        HtmlElement tableElem = webBrowser1.Document.GetElementById(tableID);\n        if (tableElem != null)\n        {\n            foreach (HtmlElement rowElem in tableElem.GetElementsByTagName(&quot;TR&quot;))\n            {\n                count++;\n            }\n        }\n        else\n        {\n            throw(new ArgumentException(&quot;No TABLE with an ID of &quot; + tableID + &quot; exists.&quot;));\n        }\n    }\n\n    return(count);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_GetElementFromPoint_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_GetElementFromPoint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetElementFromPoint(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the HTML element located at the specified client coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement GetElementFromPoint (System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x,y position of the element on the screen, relative to the top-left corner of the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> at the specified screen location in the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetElementFromPoint uses client coordinates, in which the upper-left corner of the document is assigned the value (0,0). Client coordinates for the current position of the cursor can be obtained using the <a class=\"xref\" href=\"system.windows.forms.htmlwindow#System_Windows_Forms_HtmlWindow_Position_\" data-linktype=\"relative-path\">Position</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example detects a click on the document, finds the element, and uses <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_ScrollIntoView_\" data-linktype=\"relative-path\">ScrollIntoView</a> to align the element with the top of the Web page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#7\">Private Sub Document_Click(ByVal sender As Object, ByVal e As HtmlElementEventArgs)\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim Elem As HtmlElement = WebBrowser1.Document.GetElementFromPoint(e.ClientMousePosition)\n        Elem.ScrollIntoView(True)\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#7\">private void Document_Click(Object sender, HtmlElementEventArgs e)\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlElement elem = webBrowser1.Document.GetElementFromPoint(e.ClientMousePosition);\n        elem.ScrollIntoView(true);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_GetElementsByTagName_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_GetElementsByTagName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetElementsByTagName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieve a collection of elements with the specified HTML tag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tagName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the HTML tag for the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> objects you want to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelementcollection\" data-linktype=\"relative-path\">HtmlElementCollection</a></div>\r\n                  </div>\r\n                  <p>The collection of elements who tag name is equal to the <code>tagName</code> argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>HTML pages often use the <code>META</code> tag to embed arbitrary information about the document. The following HTML code example retrieves all of the <code>META</code> tags within an HTML document, finds the <code>META</code> tag with the name <code>Description</code>, and displays it to the user. The code example requires that your application has a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control named <code>WebBrowser1</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#6\">Private Sub DisplayMetaDescription()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim Elems As HtmlElementCollection \n        Dim WebOC as WebBrowser = WebBrowser1\n\n Elems = WebOC.Document.GetElementsByTagName(&quot;META&quot;)\n\n        For Each elem As HtmlElement In Elems\n            Dim NameStr As String = elem.GetAttribute(&quot;name&quot;)\n\n            If ((NameStr IsNot Nothing) And (NameStr.Length &lt;&gt; 0)) Then\n                If NameStr.ToLower().Equals(&quot;description&quot;) Then\n                    Dim ContentStr As String = elem.GetAttribute(&quot;content&quot;)\n                    MessageBox.Show(&quot;Document: &quot; &amp; WebOC.Url.ToString() &amp; vbCrLf &amp; &quot;Description: &quot; &amp; ContentStr)\n                End If\n            End If\n        Next\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#6\">private void DisplayMetaDescription()\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlElementCollection elems = webBrowser1.Document.GetElementsByTagName(&quot;META&quot;);\n        foreach (HtmlElement elem in elems)\n        {\n            String nameStr = elem.GetAttribute(&quot;name&quot;);\n            if (nameStr != null &amp;&amp; nameStr.Length != 0)\n            {\n                String contentStr = elem.GetAttribute(&quot;content&quot;);\n                MessageBox.Show(&quot;Document: &quot; + webBrowser1.Url.ToString() + &quot;<br>Description: &quot; + contentStr);\n            }\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_GetHashCode\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the hash code for this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> representing an in-memory hash of this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_InvokeScript_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_InvokeScript_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeScript(String)</div>        \r\n          </div>\r\n    \r\n            <p>Executes an Active Scripting function defined in an HTML page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object InvokeScript (string scriptName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scriptName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the script method to invoke.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object returned by the Active Scripting call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The underlying type of the object returned by InvokeScript will vary. If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string. If it returns a script-based object, such as an object created using JScript or VBScript&#39;s <code>new</code> operator, it will be of type <code>Object</code>. (You can make calls on such objects by calling <a class=\"xref\" href=\"system.object#System_Object_GetType_\" data-linktype=\"relative-path\">GetType</a> and using <a class=\"xref\" href=\"system.type#System_Type_InvokeMember_\" data-linktype=\"relative-path\">InvokeMember</a>.) If it returns an HTML DOM element, such as a <code>DIV</code> or a <code>TABLE</code>, it will be of type <code>Object</code>; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.  </p>\n<p> You may call any function written in any Active Scripting language installed on the user&#39;s computer, including JScript and VBScript.  </p>\n<p> The InvokeScript will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example executes the contents of a script in a Web page. The code example requires that you have a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> in your application called <code>WebBrowser1</code>, and that you have loaded the following Web page.  </p>\n<pre><code>&lt;HTML&gt;  \n\n    &lt;HEAD&gt;  \n        &lt;TITLE&gt;Invoke Script Sample&lt;/TITLE&gt;  \n\n        &lt;SCRIPT&gt;  \n            function MyObject() {  \n                this.Data = &quot;Data for my private object.&quot;;  \n            }  \n            // Return a string.  \n            function test() {  \n                return(&quot;This is a test.&quot;);  \n            }  \n            // Return a JScript object.  \n            function testJScriptObject() {  \n                return(new(MyObject));  \n            }  \n            // Return a DOM element.  \n            function testElement() {  \n                return(div1);  \n            }  \n        &lt;/SCRIPT&gt;  \n    &lt;/HEAD&gt;  \n\n    &lt;BODY&gt;  \n\n        &lt;DIV id=&quot;div1&quot;&gt;  \n        &lt;/DIV&gt;  \n\n    &lt;/BODY&gt;  \n\n&lt;/HTML&gt;  \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#12\">Private Sub InvokeScript()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        With WebBrowser1.Document\n            Dim Str As String = .InvokeScript(&quot;test&quot;)\n            Dim JScriptObj As Object = .InvokeScript(&quot;testJScriptObject&quot;)\n            Dim DomObj As Object = .InvokeScript(&quot;testElement&quot;)\n        End With\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#12\">private void InvokeScript()\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlDocument doc = webBrowser1.Document;\n        String str = doc.InvokeScript(&quot;test&quot;).ToString() ;\n        Object jscriptObj = doc.InvokeScript(&quot;testJScriptObject&quot;);\n        Object domOb = doc.InvokeScript(&quot;testElement&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_InvokeScript_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_InvokeScript_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeScript(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes an Active Scripting function defined in an HTML page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object InvokeScript (string scriptName, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scriptName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the script method to invoke.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments to pass to the script method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object returned by the Active Scripting call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The underlying type of the object returned by InvokeScript will vary. If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string. If it returns a script-based object, such as an object created using JScript or VBScript&#39;s <code>new</code> operator, it will be of type <code>Object</code>. (You can make calls on such objects by calling <a class=\"xref\" href=\"system.object#System_Object_GetType_\" data-linktype=\"relative-path\">GetType</a> and using <a class=\"xref\" href=\"system.type#System_Type_InvokeMember_\" data-linktype=\"relative-path\">InvokeMember</a>.) If it returns an HTML DOM element, such as a <code>DIV</code> or a <code>TABLE</code>, it will be of type <code>Object</code>; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.  </p>\n<p> You may call any function written in any Active Scripting language installed on the user&#39;s machine, including JScript and VBScript.  </p>\n<p> This method will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example executes the contents of a script in a Web page. The code example requires that you have a <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> in your application called <code>WebBrowser1</code>, and that you have loaded the following Web page.  </p>\n<pre><code>&lt;HTML&gt;  \n    &lt;SCRIPT&gt;  \n        function test(name, address) {  \n            window.alert(&quot;Name is &quot; + name + &quot;; address is &quot; + address);  \n        }  \n    &lt;/SCRIPT&gt;  \n\n    &lt;BODY&gt;  \n    &lt;/BODY&gt;  \n&lt;/HTML&gt;  \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#9\">Private Sub InvokeTestMethod(ByVal Name As String, ByVal Address As String)\n    If (Not (WebBrowser1.Document Is Nothing)) Then\n        Dim ObjArr(2) As Object\n        ObjArr(0) = CObj(New String(Name))\n        ObjArr(1) = CObj(New String(Address))\n        WebBrowser1.Document.InvokeScript(&quot;test&quot;, ObjArr)\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#9\">private void InvokeTestMethod(String name, String address)\n{\n    if (webBrowser1.Document != null)\n    {\n        Object[] objArray = new Object[2];\n        objArray[0] = (Object)name;\n        objArray[1] = (Object)address;\n        webBrowser1.Document.InvokeScript(&quot;test&quot;, objArray);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_OpenNew_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_OpenNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenNew(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a new <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> to use with the <span class=\"xref\">stem.Windows.Forms.HtmlDocument.Write*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlDocument OpenNew (bool replaceInHistory);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>replaceInHistory</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Whether the new window&#39;s navigation should replace the previous element in the navigation history of the DOM.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a></div>\r\n                  </div>\r\n                  <p>A new document for writing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>OpenNew will clear the previous loaded document, including any associated state, such as variables. It will not cause navigation events in <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> to be raised.  </p>\n<p> OpenNew always creates a new document in the current window. To open a document in a new window, use the <a class=\"xref\" href=\"system.windows.forms.htmlwindow#System_Windows_Forms_HtmlWindow_Open_\" data-linktype=\"relative-path\">Open</a> method on the <a class=\"xref\" href=\"system.windows.forms.htmlwindow\" data-linktype=\"relative-path\">HtmlWindow</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example prepares the DOM for writing and writes a new document using the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Write_\" data-linktype=\"relative-path\">Write</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#11\">Private Sub WriteNewDocument()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim doc As HtmlDocument = WebBrowser1.Document.OpenNew(True)\n        doc.Write(&quot;&lt;HTML&gt;&lt;BODY&gt;This is a new HTML document.&lt;/BODY&gt;&lt;/HTML&gt;&quot;)\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#11\">private void WriteNewDocument()\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlDocument doc = webBrowser1.Document.OpenNew(true);\n        doc.Write(&quot;&lt;HTML&gt;&lt;BODY&gt;This is a new HTML document.&lt;/BODY&gt;&lt;/HTML&gt;&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Write_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a new HTML page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTML text to write into the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All calls to Write should be preceded by a call to <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_OpenNew_\" data-linktype=\"relative-path\">OpenNew</a>, which will clear the current document and all of its variables. Your calls to Write will create a new HTML document in its place. To change only a specific portion of the document, obtain the appropriate <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> and set its <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_InnerHtml_\" data-linktype=\"relative-path\">InnerHtml</a> property.  </p>\n<p> It is recommended that you write an entire valid HTML document using the Write method, including <code>HTML</code> and <code>BODY</code> tags. However, if you write just HTML elements, the Document Object Model (DOM) will supply these elements for you.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens a new <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> and writes in a new HTML file.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#11\">Private Sub WriteNewDocument()\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim doc As HtmlDocument = WebBrowser1.Document.OpenNew(True)\n        doc.Write(&quot;&lt;HTML&gt;&lt;BODY&gt;This is a new HTML document.&lt;/BODY&gt;&lt;/HTML&gt;&quot;)\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#11\">private void WriteNewDocument()\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlDocument doc = webBrowser1.Document.OpenNew(true);\n        doc.Write(&quot;&lt;HTML&gt;&lt;BODY&gt;This is a new HTML document.&lt;/BODY&gt;&lt;/HTML&gt;&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Click\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Click</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks anywhere on the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler Click;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example detects a click on the document, finds the element, and uses <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_ScrollIntoView_\" data-linktype=\"relative-path\">ScrollIntoView</a> to align the element with the top of the Web page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlDocument#7\">Private Sub Document_Click(ByVal sender As Object, ByVal e As HtmlElementEventArgs)\n    If (WebBrowser1.Document IsNot Nothing) Then\n        Dim Elem As HtmlElement = WebBrowser1.Document.GetElementFromPoint(e.ClientMousePosition)\n        Elem.ScrollIntoView(True)\n    End If\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#7\">private void Document_Click(Object sender, HtmlElementEventArgs e)\n{\n    if (webBrowser1.Document != null)\n    {\n        HtmlElement elem = webBrowser1.Document.GetElementFromPoint(e.ClientMousePosition);\n        elem.ScrollIntoView(true);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_ContextMenuShowing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContextMenuShowing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user requests to display the document&#39;s context menu.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler ContextMenuShowing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, if you right-click your mouse on a document or an element in a document, it will display a default context menu particular to the element. Use this event to cancel the display of the context menu and display one of your own.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example captures the ContextMenuShowing event and uses it to display a <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#15\">ContextMenuStrip menuStrip = null;\n\npublic void DetectContextMenu()\n{\n    if (webBrowser1.Document != null)\n    {\n        webBrowser1.Document.ContextMenuShowing += new HtmlElementEventHandler(Document_ContextMenuShowing);\n        menuStrip = new ContextMenuStrip();\n        menuStrip.Items.Add(&quot;&amp;Custom menu item...&quot;);\n    }\n}\n\nvoid Document_ContextMenuShowing(object sender, HtmlElementEventArgs e)\n{\n    menuStrip.Show(e.MousePosition);\n    e.ReturnValue = false;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Focusing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Focusing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before focus is given to the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler Focusing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Focusing event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the Focusing event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#424\">private void HtmlDocument1_Focusing(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Focusing Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#424\">Private Sub HtmlDocument1_Focusing(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Focusing\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Focusing Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_LosingFocus\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LosingFocus</div>        \r\n          </div>\r\n    \r\n            <p>Occurs while focus is leaving a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LosingFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the LosingFocus event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#425\">private void HtmlDocument1_LosingFocus(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;LosingFocus Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#425\">Private Sub HtmlDocument1_LosingFocus(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.LosingFocus\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;LosingFocus Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_MouseDown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseDown</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks the left mouse button.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler MouseDown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseDown event occurs before the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">Click</a> event.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the MouseDown event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#426\">private void HtmlDocument1_MouseDown(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseDown Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#426\">Private Sub HtmlDocument1_MouseDown(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.MouseDown\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseDown Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_MouseLeave\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseLeave</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse is no longer hovering over the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseLeave event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the MouseLeave event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#427\">private void HtmlDocument1_MouseLeave(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseLeave Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#427\">Private Sub HtmlDocument1_MouseLeave(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.MouseLeave\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseLeave Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_MouseMove\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseMove</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse is moved over the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler MouseMove;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseMove event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the MouseMove event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#428\">private void HtmlDocument1_MouseMove(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseMove Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#428\">Private Sub HtmlDocument1_MouseMove(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.MouseMove\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseMove Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_MouseOver\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseOver</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse is moved over the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler MouseOver;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseOver event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the MouseOver event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#429\">private void HtmlDocument1_MouseOver(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseOver Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#429\">Private Sub HtmlDocument1_MouseOver(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.MouseOver\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseOver Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_MouseUp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseUp</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user releases the left mouse button.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler MouseUp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the MouseUp event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#430\">private void HtmlDocument1_MouseUp(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseUp Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#430\">Private Sub HtmlDocument1_MouseUp(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.MouseUp\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseUp Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_Stop\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Stop</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when navigation to another Web page is halted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.HtmlElementEventHandler Stop;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The loading of a Web page will halt if program code calls the <a class=\"xref\" href=\"system.windows.forms.webbrowser#System_Windows_Forms_WebBrowser_Stop_\" data-linktype=\"relative-path\">Stop</a> method of the <a class=\"xref\" href=\"system.windows.forms.webbrowser\" data-linktype=\"relative-path\">WebBrowser</a> control. Navigation failures caused by network outages or malfunctioning Web sites will not cause Stop to occur.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example resets the status bar on a Windows Forms application when the <code>Stop</code> event has occurred. The code example requires that you have a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control named <code>StatusBar1</code> in your application.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlDocument#15\">ContextMenuStrip menuStrip = null;\n\npublic void DetectContextMenu()\n{\n    if (webBrowser1.Document != null)\n    {\n        webBrowser1.Document.ContextMenuShowing += new HtmlElementEventHandler(Document_ContextMenuShowing);\n        menuStrip = new ContextMenuStrip();\n        menuStrip.Items.Add(&quot;&amp;Custom menu item...&quot;);\n    }\n}\n\nvoid Document_ContextMenuShowing(object sender, HtmlElementEventArgs e)\n{\n    menuStrip.Show(e.MousePosition);\n    e.ReturnValue = false;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_op_Equality_System_Windows_Forms_HtmlDocument_System_Windows_Forms_HtmlDocument_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(HtmlDocument,HtmlDocument)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the specified <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> instances represent the same value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Windows.Forms.HtmlDocument left, System.Windows.Forms.HtmlDocument right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first instance to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second instance to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified instances are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlDocument_op_Inequality_System_Windows_Forms_HtmlDocument_System_Windows_Forms_HtmlDocument_\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlDocument_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(HtmlDocument,HtmlDocument)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the specified <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> instances do not represent the same value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Windows.Forms.HtmlDocument left, System.Windows.Forms.HtmlDocument right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first instance to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second instance to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified instances are not equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.HtmlDocument.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.HtmlDocument.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.ActiveElement\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.ActiveLinkColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.All\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.AttachEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Body\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.ContextMenuShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_ContextMenuShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_ContextMenuShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Cookie\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.CreateElement\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.DefaultEncoding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.DetachEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Domain\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.DomDocument\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Encoding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Equals\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.ExecCommand\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Focus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Focused\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Focusing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_Focusing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_Focusing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.ForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Forms\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.GetElementById\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.GetElementFromPoint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.GetElementsByTagName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Images\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.InvokeScript\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.LinkColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Links\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.LosingFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_LosingFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_LosingFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.MouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_MouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_MouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.MouseOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_MouseOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_MouseOver\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.OpenNew\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.RightToLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Stop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.add_Stop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.remove_Stop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Title\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Url\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.VisitedLinkColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Window\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlDocument.Write\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b8d25f3f-a35b-9a95-d92f-3ac2af753b52\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides top-level programmatic access to an HTML document hosted by the  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.HtmlDocument\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.HtmlDocument.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.HtmlDocument.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.HtmlDocument","System.Windows.Forms.HtmlDocument.ActiveElement","System.Windows.Forms.HtmlDocument.ActiveLinkColor","System.Windows.Forms.HtmlDocument.All","System.Windows.Forms.HtmlDocument.AttachEventHandler","System.Windows.Forms.HtmlDocument.BackColor","System.Windows.Forms.HtmlDocument.Body","System.Windows.Forms.HtmlDocument.Click","System.Windows.Forms.HtmlDocument.add_Click","System.Windows.Forms.HtmlDocument.remove_Click","System.Windows.Forms.HtmlDocument.ContextMenuShowing","System.Windows.Forms.HtmlDocument.add_ContextMenuShowing","System.Windows.Forms.HtmlDocument.remove_ContextMenuShowing","System.Windows.Forms.HtmlDocument.Cookie","System.Windows.Forms.HtmlDocument.CreateElement","System.Windows.Forms.HtmlDocument.DefaultEncoding","System.Windows.Forms.HtmlDocument.DetachEventHandler","System.Windows.Forms.HtmlDocument.Domain","System.Windows.Forms.HtmlDocument.DomDocument","System.Windows.Forms.HtmlDocument.Encoding","System.Windows.Forms.HtmlDocument.Equals","System.Windows.Forms.HtmlDocument.ExecCommand","System.Windows.Forms.HtmlDocument.Focus","System.Windows.Forms.HtmlDocument.Focused","System.Windows.Forms.HtmlDocument.Focusing","System.Windows.Forms.HtmlDocument.add_Focusing","System.Windows.Forms.HtmlDocument.remove_Focusing","System.Windows.Forms.HtmlDocument.ForeColor","System.Windows.Forms.HtmlDocument.Forms","System.Windows.Forms.HtmlDocument.GetElementById","System.Windows.Forms.HtmlDocument.GetElementFromPoint","System.Windows.Forms.HtmlDocument.GetElementsByTagName","System.Windows.Forms.HtmlDocument.GetHashCode","System.Windows.Forms.HtmlDocument.Images","System.Windows.Forms.HtmlDocument.InvokeScript","System.Windows.Forms.HtmlDocument.LinkColor","System.Windows.Forms.HtmlDocument.Links","System.Windows.Forms.HtmlDocument.LosingFocus","System.Windows.Forms.HtmlDocument.add_LosingFocus","System.Windows.Forms.HtmlDocument.remove_LosingFocus","System.Windows.Forms.HtmlDocument.MouseDown","System.Windows.Forms.HtmlDocument.add_MouseDown","System.Windows.Forms.HtmlDocument.remove_MouseDown","System.Windows.Forms.HtmlDocument.MouseLeave","System.Windows.Forms.HtmlDocument.add_MouseLeave","System.Windows.Forms.HtmlDocument.remove_MouseLeave","System.Windows.Forms.HtmlDocument.MouseMove","System.Windows.Forms.HtmlDocument.add_MouseMove","System.Windows.Forms.HtmlDocument.remove_MouseMove","System.Windows.Forms.HtmlDocument.MouseOver","System.Windows.Forms.HtmlDocument.add_MouseOver","System.Windows.Forms.HtmlDocument.remove_MouseOver","System.Windows.Forms.HtmlDocument.MouseUp","System.Windows.Forms.HtmlDocument.add_MouseUp","System.Windows.Forms.HtmlDocument.remove_MouseUp","System.Windows.Forms.HtmlDocument.op_Equality","System.Windows.Forms.HtmlDocument.op_op_Equality","System.Windows.Forms.HtmlDocument.op_Inequality","System.Windows.Forms.HtmlDocument.op_op_Inequality","System.Windows.Forms.HtmlDocument.OpenNew","System.Windows.Forms.HtmlDocument.RightToLeft","System.Windows.Forms.HtmlDocument.Stop","System.Windows.Forms.HtmlDocument.add_Stop","System.Windows.Forms.HtmlDocument.remove_Stop","System.Windows.Forms.HtmlDocument.Title","System.Windows.Forms.HtmlDocument.Url","System.Windows.Forms.HtmlDocument.VisitedLinkColor","System.Windows.Forms.HtmlDocument.Window","System.Windows.Forms.HtmlDocument.Write"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.HtmlDocument","System::Windows::Forms::HtmlDocument","System.Windows.Forms.HtmlDocument.ActiveElement","System::Windows::Forms::HtmlDocument::ActiveElement","System.Windows.Forms.HtmlDocument.ActiveLinkColor","System::Windows::Forms::HtmlDocument::ActiveLinkColor","System.Windows.Forms.HtmlDocument.All","System::Windows::Forms::HtmlDocument::All","System.Windows.Forms.HtmlDocument.AttachEventHandler","System::Windows::Forms::HtmlDocument::AttachEventHandler","System.Windows.Forms.HtmlDocument.BackColor","System::Windows::Forms::HtmlDocument::BackColor","System.Windows.Forms.HtmlDocument.Body","System::Windows::Forms::HtmlDocument::Body","System.Windows.Forms.HtmlDocument.Click","System::Windows::Forms::HtmlDocument::Click","System.Windows.Forms.HtmlDocument.ContextMenuShowing","System::Windows::Forms::HtmlDocument::ContextMenuShowing","System.Windows.Forms.HtmlDocument.Cookie","System::Windows::Forms::HtmlDocument::Cookie","System.Windows.Forms.HtmlDocument.CreateElement","System::Windows::Forms::HtmlDocument::CreateElement","System.Windows.Forms.HtmlDocument.DefaultEncoding","System::Windows::Forms::HtmlDocument::DefaultEncoding","System.Windows.Forms.HtmlDocument.DetachEventHandler","System::Windows::Forms::HtmlDocument::DetachEventHandler","System.Windows.Forms.HtmlDocument.Domain","System::Windows::Forms::HtmlDocument::Domain","System.Windows.Forms.HtmlDocument.DomDocument","System::Windows::Forms::HtmlDocument::DomDocument","System.Windows.Forms.HtmlDocument.Encoding","System::Windows::Forms::HtmlDocument::Encoding","System.Windows.Forms.HtmlDocument.Equals","System::Windows::Forms::HtmlDocument::Equals","System.Windows.Forms.HtmlDocument.ExecCommand","System::Windows::Forms::HtmlDocument::ExecCommand","System.Windows.Forms.HtmlDocument.Focus","System::Windows::Forms::HtmlDocument::Focus","System.Windows.Forms.HtmlDocument.Focused","System::Windows::Forms::HtmlDocument::Focused","System.Windows.Forms.HtmlDocument.Focusing","System::Windows::Forms::HtmlDocument::Focusing","System.Windows.Forms.HtmlDocument.ForeColor","System::Windows::Forms::HtmlDocument::ForeColor","System.Windows.Forms.HtmlDocument.Forms","System::Windows::Forms::HtmlDocument::Forms","System.Windows.Forms.HtmlDocument.GetElementById","System::Windows::Forms::HtmlDocument::GetElementById","System.Windows.Forms.HtmlDocument.GetElementFromPoint","System::Windows::Forms::HtmlDocument::GetElementFromPoint","System.Windows.Forms.HtmlDocument.GetElementsByTagName","System::Windows::Forms::HtmlDocument::GetElementsByTagName","System.Windows.Forms.HtmlDocument.GetHashCode","System::Windows::Forms::HtmlDocument::GetHashCode","System.Windows.Forms.HtmlDocument.Images","System::Windows::Forms::HtmlDocument::Images","System.Windows.Forms.HtmlDocument.InvokeScript","System::Windows::Forms::HtmlDocument::InvokeScript","System.Windows.Forms.HtmlDocument.LinkColor","System::Windows::Forms::HtmlDocument::LinkColor","System.Windows.Forms.HtmlDocument.Links","System::Windows::Forms::HtmlDocument::Links","System.Windows.Forms.HtmlDocument.LosingFocus","System::Windows::Forms::HtmlDocument::LosingFocus","System.Windows.Forms.HtmlDocument.MouseDown","System::Windows::Forms::HtmlDocument::MouseDown","System.Windows.Forms.HtmlDocument.MouseLeave","System::Windows::Forms::HtmlDocument::MouseLeave","System.Windows.Forms.HtmlDocument.MouseMove","System::Windows::Forms::HtmlDocument::MouseMove","System.Windows.Forms.HtmlDocument.MouseOver","System::Windows::Forms::HtmlDocument::MouseOver","System.Windows.Forms.HtmlDocument.MouseUp","System::Windows::Forms::HtmlDocument::MouseUp","System.Windows.Forms.HtmlDocument.op_Equality","System::Windows::Forms::HtmlDocument::op_Equality","System.Windows.Forms.HtmlDocument.op_Inequality","System::Windows::Forms::HtmlDocument::op_Inequality","System.Windows.Forms.HtmlDocument.OpenNew","System::Windows::Forms::HtmlDocument::OpenNew","System.Windows.Forms.HtmlDocument.RightToLeft","System::Windows::Forms::HtmlDocument::RightToLeft","System.Windows.Forms.HtmlDocument.Stop","System::Windows::Forms::HtmlDocument::Stop","System.Windows.Forms.HtmlDocument.Title","System::Windows::Forms::HtmlDocument::Title","System.Windows.Forms.HtmlDocument.Url","System::Windows::Forms::HtmlDocument::Url","System.Windows.Forms.HtmlDocument.VisitedLinkColor","System::Windows::Forms::HtmlDocument::VisitedLinkColor","System.Windows.Forms.HtmlDocument.Window","System::Windows::Forms::HtmlDocument::Window","System.Windows.Forms.HtmlDocument.Write","System::Windows::Forms::HtmlDocument::Write"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b8d25f3f-a35b-9a95-d92f-3ac2af753b52","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/HtmlDocument.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HtmlDocument class | Microsoft Docs","_op_ogTitle":"HtmlDocument class","description":"Provides top-level programmatic access to an HTML document hosted by the  control.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.HtmlDocument","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.htmldocument","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.htmldocument","fileRelativePath":"System.Windows.Forms.HtmlDocument.html"},"themesRelativePathToOutputRoot":"_themes/"}