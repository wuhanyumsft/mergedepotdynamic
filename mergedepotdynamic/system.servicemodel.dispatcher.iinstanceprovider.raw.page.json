{"content":"    \r\n    <h1 id=\"System_ServiceModel_Dispatcher_IInstanceProvider\">\r\n      <span class=\"lang-csharp\">IInstanceProvider</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IInstanceProvider</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Implement the IInstanceProvider interface to control the creation and recycling of service objects when one is requested or disposed by an <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.  </p>\n<p> Once the IInstanceProvider interface is implemented, you must assign your custom instance provider object to the <a class=\"xref\" href=\"system.servicemodel.dispatcher.dispatchruntime#System_ServiceModel_Dispatcher_DispatchRuntime_InstanceProvider_\" data-linktype=\"relative-path\">InstanceProvider</a> property using either an endpoint behavior (a <a class=\"xref\" href=\"system.servicemodel.description.iendpointbehavior\" data-linktype=\"relative-path\">IEndpointBehavior</a> object) or a contract behavior (a <a class=\"xref\" href=\"system.servicemodel.description.icontractbehavior\" data-linktype=\"relative-path\">IContractBehavior</a> object).  </p>\n<p> If the insertion mechanism is an endpoint behavior you can also implement a <a class=\"xref\" href=\"system.servicemodel.configuration.behaviorextensionelement\" data-linktype=\"relative-path\">BehaviorExtensionElement</a> object that can insert your custom behavior using a configuration file. If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute. (For an example of the contract behavior approach, see the Example section.)  </p>\n<p> IInstanceProvider has two methods, <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_\" data-linktype=\"relative-path\">GetInstance</a> and <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_\" data-linktype=\"relative-path\">ReleaseInstance</a>. These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object. Service object pooling is one example of custom IInstanceProvider functionality.  </p>\n<p> Typically, the <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> invokes the <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_\" data-linktype=\"relative-path\">GetInstance</a> when the <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> is first created and invokes the <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_\" data-linktype=\"relative-path\">ReleaseInstance</a> method when the <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> is closed.  </p>\n<p> There are two ways to cause an <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object to release a service object before the <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> is closed. The first method is to set the <a class=\"xref\" href=\"system.servicemodel.operationbehaviorattribute#System_ServiceModel_OperationBehaviorAttribute_ReleaseInstanceMode_\" data-linktype=\"relative-path\">ReleaseInstanceMode</a> to <a class=\"xref\" href=\"system.servicemodel.releaseinstancemode\" data-linktype=\"relative-path\">ReleaseInstanceMode</a> or <a class=\"xref\" href=\"system.servicemodel.releaseinstancemode\" data-linktype=\"relative-path\">ReleaseInstanceMode</a>. The second method is to call the <a class=\"xref\" href=\"system.servicemodel.instancecontext#System_ServiceModel_InstanceContext_ReleaseServiceInstance_\" data-linktype=\"relative-path\">ReleaseServiceInstance</a> method. If this is done, the <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> calls the <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_\" data-linktype=\"relative-path\">ReleaseInstance</a> method on the dispatcher&#39;s instance provider. If a new message arrives after the instance has been released, WCF creates a new instance using the <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_\" data-linktype=\"relative-path\">GetInstance</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.servicemodel.instancecontextmode\" data-linktype=\"relative-path\">InstanceContextMode</a> of the service is <a class=\"xref\" href=\"system.servicemodel.instancecontextmode\" data-linktype=\"relative-path\">InstanceContextMode</a>, the system does not call the <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_\" data-linktype=\"relative-path\">GetInstance</a> or <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider#System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_\" data-linktype=\"relative-path\">ReleaseInstance</a> methods even when the user did not provide a well-known service object unless the user directly calls <a class=\"xref\" href=\"system.servicemodel.instancecontext#System_ServiceModel_InstanceContext_ReleaseServiceInstance_\" data-linktype=\"relative-path\">ReleaseServiceInstance</a> and then calls <a class=\"xref\" href=\"system.servicemodel.instancecontext#System_ServiceModel_InstanceContext_GetServiceInstance_\" data-linktype=\"relative-path\">GetServiceInstance</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_System_ServiceModel_InstanceContext_\" data-linktype=\"self-bookmark\">GetInstance(InstanceContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a service object given the specified <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_System_ServiceModel_InstanceContext_System_ServiceModel_Channels_Message_\" data-linktype=\"self-bookmark\">GetInstance(InstanceContext,Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a service object given the specified <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_System_ServiceModel_InstanceContext_System_Object_\" data-linktype=\"self-bookmark\">ReleaseInstance(InstanceContext,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when an <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object recycles a service object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_System_ServiceModel_InstanceContext_\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInstance(InstanceContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a service object given the specified <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetInstance (System.ServiceModel.InstanceContext instanceContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>A user-defined service object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the GetInstance method to control the exact service object that a WCF service receives when it attempts to create a new one.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to implement <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider\" data-linktype=\"relative-path\">IInstanceProvider</a> that provides &quot;singleton&quot; behavior; it always returns the same service instance and does not recycle it.  </p>\n<pre><code class=\"lang-cs\" name=\"IContractBehavior#1\">public class ObjectProviderBehavior : IInstanceProvider\n{\n\n  string message;\n  SampleService service = null;\n\n  public ObjectProviderBehavior(string msg)\n  {\n    Console.WriteLine(&quot;The non-default constructor has been called.&quot;);\n    this.message = msg;\n    this.service = new SampleService(&quot;Singleton sample service.&quot;);\n  }\n\n  #region IInstanceProvider Members\n\n  public object GetInstance(InstanceContext instanceContext, System.ServiceModel.Channels.Message message)\n  {\n    Console.WriteLine(&quot;GetInstance is called:&quot;);\n    return this.service;\n  }\n\n  public object GetInstance(InstanceContext instanceContext)\n  {\n    Console.WriteLine(&quot;GetInstance is called:&quot;);\n    return this.service;\n  }\n\n  public void ReleaseInstance(InstanceContext instanceContext, object instance)\n  {\n    Console.WriteLine(&quot;ReleaseInstance is called. The SingletonBehaviorAttribute never releases.&quot;);\n  }\n\n  #endregion\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IContractBehavior#1\"> Public Class ObjectProviderBehavior\n  Implements IInstanceProvider\n\nPrivate message As String\nPrivate service As SampleService = Nothing\n\nPublic Sub New(ByVal msg As String)\n  Console.WriteLine(&quot;The non-default constructor has been called.&quot;)\n  Me.message = msg\n  Me.service = New SampleService(&quot;Singleton sample service.&quot;)\nEnd Sub\n\n#Region &quot;IInstanceProvider Members&quot;\n\nPublic Function GetInstance(ByVal instanceContext As InstanceContext, ByVal message As System.ServiceModel.Channels.Message) As Object Implements IInstanceProvider.GetInstance\n  Console.WriteLine(&quot;GetInstance is called:&quot;)\n  Return Me.service\nEnd Function\n\nPublic Function GetInstance(ByVal instanceContext As InstanceContext) As Object Implements IInstanceProvider.GetInstance\n  Console.WriteLine(&quot;GetInstance is called:&quot;)\n  Return Me.service\nEnd Function\n\nPublic Sub ReleaseInstance(ByVal instanceContext As InstanceContext, ByVal instance As Object) Implements IInstanceProvider.ReleaseInstance\n  Console.WriteLine(&quot;ReleaseInstance is called. The SingletonBehaviorAttribute never releases.&quot;)\nEnd Sub\n\n#End Region\n End Class\n</code></pre><p> The following code example shows how to implement a custom attribute that implements <a class=\"xref\" href=\"system.servicemodel.description.icontractbehavior\" data-linktype=\"relative-path\">IContractBehavior</a> to insert the custom service instance provider. It also implements <a class=\"xref\" href=\"system.servicemodel.description.icontractbehaviorattribute\" data-linktype=\"relative-path\">IContractBehaviorAttribute</a>, which binds its use to a specific contract.  </p>\n<pre><code class=\"lang-cs\" name=\"IContractBehavior#2\">public class SingletonBehaviorAttribute : Attribute, IContractBehaviorAttribute, IContractBehavior\n{\n\n  #region IContractBehaviorAttribute Members\n\n  public Type TargetContract\n  {\n    get { return typeof(ISampleService); }\n  }\n\n  #endregion\n\n  #region IContractBehavior Members\n\n  public void AddBindingParameters(ContractDescription description, ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection parameters)\n  {\n    return;\n  }\n\n  public void ApplyClientBehavior(ContractDescription description, ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n  {\n    return;\n  }\n\n  public void ApplyDispatchBehavior(ContractDescription description, ServiceEndpoint endpoint, DispatchRuntime dispatch)\n  {\n    dispatch.InstanceProvider = new ObjectProviderBehavior(&quot;Custom ObjectProviderBehavior constructor.&quot;);\n  }\n\n  public void Validate(ContractDescription description, ServiceEndpoint endpoint)\n  {\n    return;\n  }\n\n  #endregion\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IContractBehavior#2\"> Public Class SingletonBehaviorAttribute\n  Inherits Attribute\n  Implements IContractBehaviorAttribute, IContractBehavior\n\n#Region &quot;IContractBehaviorAttribute Members&quot;\n\nPublic ReadOnly Property TargetContract() As Type Implements IContractBehaviorAttribute.TargetContract\n  Get\n\t  Return GetType(ISampleService)\n  End Get\nEnd Property\n\n#End Region\n\n#Region &quot;IContractBehavior Members&quot;\n\nPublic Sub AddBindingParameters(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint, ByVal parameters As System.ServiceModel.Channels.BindingParameterCollection) Implements IContractBehavior.AddBindingParameters\n  Return\nEnd Sub\n\nPublic Sub ApplyClientBehavior(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint, ByVal clientRuntime As ClientRuntime) Implements IContractBehavior.ApplyClientBehavior\n  Return\nEnd Sub\n\nPublic Sub ApplyDispatchBehavior(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint, ByVal dispatch As DispatchRuntime) Implements IContractBehavior.ApplyDispatchBehavior\n  dispatch.InstanceProvider = New ObjectProviderBehavior(&quot;Custom ObjectProviderBehavior constructor.&quot;)\nEnd Sub\n\nPublic Sub Validate(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint) Implements IContractBehavior.Validate\n  Return\nEnd Sub\n\n#End Region\n End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_System_ServiceModel_InstanceContext_System_ServiceModel_Channels_Message_\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_IInstanceProvider_GetInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInstance(InstanceContext,Message)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a service object given the specified <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetInstance (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message that triggered the creation of a service object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The service object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the GetInstance method to control the exact service object that a WCF service receives when it attempts to create a new one.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to implement <a class=\"xref\" href=\"system.servicemodel.dispatcher.iinstanceprovider\" data-linktype=\"relative-path\">IInstanceProvider</a> that provides &quot;singleton&quot; behavior; it always returns the same service instance and does not recycle it.  </p>\n<pre><code class=\"lang-cs\" name=\"IContractBehavior#1\">public class ObjectProviderBehavior : IInstanceProvider\n{\n\n  string message;\n  SampleService service = null;\n\n  public ObjectProviderBehavior(string msg)\n  {\n    Console.WriteLine(&quot;The non-default constructor has been called.&quot;);\n    this.message = msg;\n    this.service = new SampleService(&quot;Singleton sample service.&quot;);\n  }\n\n  #region IInstanceProvider Members\n\n  public object GetInstance(InstanceContext instanceContext, System.ServiceModel.Channels.Message message)\n  {\n    Console.WriteLine(&quot;GetInstance is called:&quot;);\n    return this.service;\n  }\n\n  public object GetInstance(InstanceContext instanceContext)\n  {\n    Console.WriteLine(&quot;GetInstance is called:&quot;);\n    return this.service;\n  }\n\n  public void ReleaseInstance(InstanceContext instanceContext, object instance)\n  {\n    Console.WriteLine(&quot;ReleaseInstance is called. The SingletonBehaviorAttribute never releases.&quot;);\n  }\n\n  #endregion\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IContractBehavior#1\"> Public Class ObjectProviderBehavior\n  Implements IInstanceProvider\n\nPrivate message As String\nPrivate service As SampleService = Nothing\n\nPublic Sub New(ByVal msg As String)\n  Console.WriteLine(&quot;The non-default constructor has been called.&quot;)\n  Me.message = msg\n  Me.service = New SampleService(&quot;Singleton sample service.&quot;)\nEnd Sub\n\n#Region &quot;IInstanceProvider Members&quot;\n\nPublic Function GetInstance(ByVal instanceContext As InstanceContext, ByVal message As System.ServiceModel.Channels.Message) As Object Implements IInstanceProvider.GetInstance\n  Console.WriteLine(&quot;GetInstance is called:&quot;)\n  Return Me.service\nEnd Function\n\nPublic Function GetInstance(ByVal instanceContext As InstanceContext) As Object Implements IInstanceProvider.GetInstance\n  Console.WriteLine(&quot;GetInstance is called:&quot;)\n  Return Me.service\nEnd Function\n\nPublic Sub ReleaseInstance(ByVal instanceContext As InstanceContext, ByVal instance As Object) Implements IInstanceProvider.ReleaseInstance\n  Console.WriteLine(&quot;ReleaseInstance is called. The SingletonBehaviorAttribute never releases.&quot;)\nEnd Sub\n\n#End Region\n End Class\n</code></pre><p> The following code example shows how to implement a custom attribute that implements <a class=\"xref\" href=\"system.servicemodel.description.icontractbehavior\" data-linktype=\"relative-path\">IContractBehavior</a> to insert the custom service instance provider. It also implements <a class=\"xref\" href=\"system.servicemodel.description.icontractbehaviorattribute\" data-linktype=\"relative-path\">IContractBehaviorAttribute</a>, which binds its use to a specific contract.  </p>\n<pre><code class=\"lang-cs\" name=\"IContractBehavior#2\">public class SingletonBehaviorAttribute : Attribute, IContractBehaviorAttribute, IContractBehavior\n{\n\n  #region IContractBehaviorAttribute Members\n\n  public Type TargetContract\n  {\n    get { return typeof(ISampleService); }\n  }\n\n  #endregion\n\n  #region IContractBehavior Members\n\n  public void AddBindingParameters(ContractDescription description, ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection parameters)\n  {\n    return;\n  }\n\n  public void ApplyClientBehavior(ContractDescription description, ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n  {\n    return;\n  }\n\n  public void ApplyDispatchBehavior(ContractDescription description, ServiceEndpoint endpoint, DispatchRuntime dispatch)\n  {\n    dispatch.InstanceProvider = new ObjectProviderBehavior(&quot;Custom ObjectProviderBehavior constructor.&quot;);\n  }\n\n  public void Validate(ContractDescription description, ServiceEndpoint endpoint)\n  {\n    return;\n  }\n\n  #endregion\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IContractBehavior#2\"> Public Class SingletonBehaviorAttribute\n  Inherits Attribute\n  Implements IContractBehaviorAttribute, IContractBehavior\n\n#Region &quot;IContractBehaviorAttribute Members&quot;\n\nPublic ReadOnly Property TargetContract() As Type Implements IContractBehaviorAttribute.TargetContract\n  Get\n\t  Return GetType(ISampleService)\n  End Get\nEnd Property\n\n#End Region\n\n#Region &quot;IContractBehavior Members&quot;\n\nPublic Sub AddBindingParameters(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint, ByVal parameters As System.ServiceModel.Channels.BindingParameterCollection) Implements IContractBehavior.AddBindingParameters\n  Return\nEnd Sub\n\nPublic Sub ApplyClientBehavior(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint, ByVal clientRuntime As ClientRuntime) Implements IContractBehavior.ApplyClientBehavior\n  Return\nEnd Sub\n\nPublic Sub ApplyDispatchBehavior(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint, ByVal dispatch As DispatchRuntime) Implements IContractBehavior.ApplyDispatchBehavior\n  dispatch.InstanceProvider = New ObjectProviderBehavior(&quot;Custom ObjectProviderBehavior constructor.&quot;)\nEnd Sub\n\nPublic Sub Validate(ByVal description As ContractDescription, ByVal endpoint As ServiceEndpoint) Implements IContractBehavior.Validate\n  Return\nEnd Sub\n\n#End Region\n End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_System_ServiceModel_InstanceContext_System_Object_\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_IInstanceProvider_ReleaseInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseInstance(InstanceContext,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Called when an <a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a> object recycles a service object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ReleaseInstance (System.ServiceModel.InstanceContext instanceContext, object instance);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.instancecontext\" data-linktype=\"relative-path\">InstanceContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The service&#39;s instance context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>instance</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The service object to be recycled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ReleaseInstance method to perform some custom resource disposal or other recycling customization when a service recycles a service object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Dispatcher.IInstanceProvider.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Dispatcher.IInstanceProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.IInstanceProvider\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3b33d879-3238-d5a7-7f23-b572065c6c6e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Dispatcher/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Dispatcher.IInstanceProvider\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Dispatcher.IInstanceProvider.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Dispatcher.IInstanceProvider.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Dispatcher.IInstanceProvider","System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance","System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Dispatcher.IInstanceProvider","System::ServiceModel::Dispatcher::IInstanceProvider","System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance","System::ServiceModel::Dispatcher::IInstanceProvider::GetInstance","System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance","System::ServiceModel::Dispatcher::IInstanceProvider::ReleaseInstance"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3b33d879-3238-d5a7-7f23-b572065c6c6e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IInstanceProvider interface | Microsoft Docs","_op_ogTitle":"IInstanceProvider interface","description":"Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.\n","toc_asset_id":"_splitted/System.ServiceModel.Dispatcher/toc.json","toc_rel":"_splitted/System.ServiceModel.Dispatcher/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Dispatcher.IInstanceProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.dispatcher.iinstanceprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.dispatcher.iinstanceprovider","fileRelativePath":"System.ServiceModel.Dispatcher.IInstanceProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}