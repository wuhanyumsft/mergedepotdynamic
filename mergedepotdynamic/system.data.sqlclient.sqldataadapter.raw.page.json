{"content":"    \r\n    <h1 id=\"System_Data_SqlClient_SqlDataAdapter\">\r\n      <span class=\"lang-csharp\">SqlDataAdapter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a set of data commands and a database connection that are used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and update a SQL Server database. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;RowUpdated&quot;)]\n[System.ComponentModel.Designer(&quot;Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItem(&quot;Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\npublic sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter\" data-linktype=\"relative-path\">DataAdapter</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">System.Data.Common.DbDataAdapter</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l5\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SqlDataAdapter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_AcceptChangesDuringFill\" data-linktype=\"relative-path\">AcceptChangesDuringFill</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_AcceptChangesDuringUpdate\" data-linktype=\"relative-path\">AcceptChangesDuringUpdate</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_CloneInternals\" data-linktype=\"relative-path\">CloneInternals()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ContinueUpdateOnError\" data-linktype=\"relative-path\">ContinueUpdateOnError</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_CreateTableMappings\" data-linktype=\"relative-path\">CreateTableMappings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_Fill_System_Data_DataSet_System_String_System_Data_IDataReader_System_Int32_System_Int32_\" data-linktype=\"relative-path\">Fill(DataSet,String,IDataReader,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_Fill_System_Data_DataTable_System_Data_IDataReader_\" data-linktype=\"relative-path\">Fill(DataTable,IDataReader)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_Fill_System_Data_DataTable___System_Data_IDataReader_System_Int32_System_Int32_\" data-linktype=\"relative-path\">Fill(DataTable[],IDataReader,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_FillError\" data-linktype=\"relative-path\">FillError</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_FillLoadOption\" data-linktype=\"relative-path\">FillLoadOption</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_FillSchema_System_Data_DataSet_System_Data_SchemaType_System_String_System_Data_IDataReader_\" data-linktype=\"relative-path\">FillSchema(DataSet,SchemaType,String,IDataReader)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_FillSchema_System_Data_DataTable_System_Data_SchemaType_System_Data_IDataReader_\" data-linktype=\"relative-path\">FillSchema(DataTable,SchemaType,IDataReader)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_HasTableMappings\" data-linktype=\"relative-path\">HasTableMappings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingMappingAction\" data-linktype=\"relative-path\">MissingMappingAction</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingSchemaAction\" data-linktype=\"relative-path\">MissingSchemaAction</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_OnFillError_System_Data_FillErrorEventArgs_\" data-linktype=\"relative-path\">OnFillError(FillErrorEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ResetFillLoadOption\" data-linktype=\"relative-path\">ResetFillLoadOption()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ReturnProviderSpecificTypes\" data-linktype=\"relative-path\">ReturnProviderSpecificTypes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ShouldSerializeAcceptChangesDuringFill\" data-linktype=\"relative-path\">ShouldSerializeAcceptChangesDuringFill()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ShouldSerializeFillLoadOption\" data-linktype=\"relative-path\">ShouldSerializeFillLoadOption()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ShouldSerializeTableMappings\" data-linktype=\"relative-path\">ShouldSerializeTableMappings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_System_Data_IDataAdapter_TableMappings\" data-linktype=\"relative-path\">IDataAdapter.TableMappings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_TableMappings\" data-linktype=\"relative-path\">TableMappings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_DefaultSourceTableName\" data-linktype=\"relative-path\">DefaultSourceTableName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataSet_\" data-linktype=\"relative-path\">Fill(DataSet)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataSet_System_Int32_System_Int32_System_String_\" data-linktype=\"relative-path\">Fill(DataSet,Int32,Int32,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataSet_System_Int32_System_Int32_System_String_System_Data_IDbCommand_System_Data_CommandBehavior_\" data-linktype=\"relative-path\">Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataSet_System_String_\" data-linktype=\"relative-path\">Fill(DataSet,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataTable_\" data-linktype=\"relative-path\">Fill(DataTable)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataTable_System_Data_IDbCommand_System_Data_CommandBehavior_\" data-linktype=\"relative-path\">Fill(DataTable,IDbCommand,CommandBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Data_DataTable___System_Int32_System_Int32_System_Data_IDbCommand_System_Data_CommandBehavior_\" data-linktype=\"relative-path\">Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_System_Int32_System_Int32_System_Data_DataTable___\" data-linktype=\"relative-path\">Fill(Int32,Int32,DataTable[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_FillCommandBehavior\" data-linktype=\"relative-path\">FillCommandBehavior</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_FillSchema_System_Data_DataSet_System_Data_SchemaType_\" data-linktype=\"relative-path\">FillSchema(DataSet,SchemaType)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_FillSchema_System_Data_DataSet_System_Data_SchemaType_System_Data_IDbCommand_System_String_System_Data_CommandBehavior_\" data-linktype=\"relative-path\">FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_FillSchema_System_Data_DataSet_System_Data_SchemaType_System_String_\" data-linktype=\"relative-path\">FillSchema(DataSet,SchemaType,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_FillSchema_System_Data_DataTable_System_Data_SchemaType_\" data-linktype=\"relative-path\">FillSchema(DataTable,SchemaType)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_FillSchema_System_Data_DataTable_System_Data_SchemaType_System_Data_IDbCommand_System_Data_CommandBehavior_\" data-linktype=\"relative-path\">FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_GetFillParameters\" data-linktype=\"relative-path\">GetFillParameters()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_System_Data_DataRow___\" data-linktype=\"relative-path\">Update(DataRow[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_System_Data_DataRow___System_Data_Common_DataTableMapping_\" data-linktype=\"relative-path\">Update(DataRow[],DataTableMapping)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_System_Data_DataSet_\" data-linktype=\"relative-path\">Update(DataSet)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_System_Data_DataSet_System_String_\" data-linktype=\"relative-path\">Update(DataSet,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_System_Data_DataTable_\" data-linktype=\"relative-path\">Update(DataTable)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SqlDataAdapter, serves as a bridge between a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and SQL Server for retrieving and saving data. The SqlDataAdapter provides this bridge by mapping <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a>, which changes the data in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to match the data in the data source, and <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, which changes the data in the data source to match the data in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, using the appropriate Transact-SQL statements against the data source. The update is performed on a by-row basis. For every inserted, modified, and deleted row, the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a> method determines the type of change that has been performed on it (<code>Insert</code>, <code>Update</code>, or <code>Delete</code>). Depending on the type of change, the <code>Insert</code>, <code>Update</code>, or <code>Delete</code> command template executes to propagate the modified row to the data source. When the SqlDataAdapter fills a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, it creates the necessary tables and columns for the returned data if they do not already exist. However, primary key information is not included in the implicitly created schema unless the <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingSchemaAction_\" data-linktype=\"relative-path\">MissingSchemaAction</a> property is set to <a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a>. You may also have the SqlDataAdapter create the schema of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, including primary key information, before filling it with data using <code>FillSchema</code>. For more information, see <a href=\"../Topic/Adding%20Existing%20Constraints%20to%20a%20DataSet.md\" data-linktype=\"relative-path\">Adding Existing Constraints to a DataSet</a>.  </p>\n<p> SqlDataAdapter is used in conjunction with <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> and <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> to increase performance when connecting to a SQL Server database.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are using SQL Server stored procedures to edit or delete data using a <code>DataAdapter</code>, make sure that you do not use SET NOCOUNT ON in the stored procedure definition. This causes the rows affected count returned to be zero, which the <code>DataAdapter</code> interprets as a concurrency conflict. In this event, a <a class=\"xref\" href=\"system.data.dbconcurrencyexception\" data-linktype=\"relative-path\">DBConcurrencyException</a> will be thrown.  </p>\n</div>\n<p> The SqlDataAdapter also includes the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a>, and <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_TableMappings_\" data-linktype=\"relative-path\">TableMappings</a> properties to facilitate the loading and updating of data.  </p>\n<p> When an instance of SqlDataAdapter is created, the read/write properties are set to initial values. For a list of these values, see the SqlDataAdapter constructor.  </p>\n<p> The <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a>, and <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a> are generic templates that are automatically filled with individual values from every modified row through the parameters mechanism.  </p>\n<p> For every column that you propagate to the data source on <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, a parameter should be added to the <code>InsertCommand</code>, <code>UpdateCommand</code>, or <code>DeleteCommand</code>. The <a class=\"xref\" href=\"system.data.common.dbparameter#System_Data_Common_DbParameter_SourceColumn_\" data-linktype=\"relative-path\">SourceColumn</a> property of the <a class=\"xref\" href=\"system.data.common.dbparameter\" data-linktype=\"relative-path\">DbParameter</a> object should be set to the name of the column. This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will occur if the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method is called and the table contains a user-defined type that is not available on the client computer. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=139492\" data-linktype=\"external\">Creating and Using User-Defined Types</a> in SQL Server Books Online.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter__ctor\" data-linktype=\"self-bookmark\">SqlDataAdapter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter__ctor_System_Data_SqlClient_SqlCommand_\" data-linktype=\"self-bookmark\">SqlDataAdapter(SqlCommand)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class with the specified <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> as the <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter__ctor_System_String_System_Data_SqlClient_SqlConnection_\" data-linktype=\"self-bookmark\">SqlDataAdapter(String,SqlConnection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class with a <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> and a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">SqlDataAdapter(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class with a <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> and a connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_DeleteCommand\" data-linktype=\"self-bookmark\">DeleteCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_InsertCommand\" data-linktype=\"self-bookmark\">InsertCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_SelectCommand\" data-linktype=\"self-bookmark\">SelectCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_UpdateBatchSize\" data-linktype=\"self-bookmark\">UpdateBatchSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of rows that are processed in each round-trip to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_UpdateCommand\" data-linktype=\"self-bookmark\">UpdateCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_AddToBatch_System_Data_IDbCommand_\" data-linktype=\"self-bookmark\">AddToBatch(IDbCommand)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_ClearBatch\" data-linktype=\"self-bookmark\">ClearBatch()</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_CreateRowUpdatedEvent_System_Data_DataRow_System_Data_IDbCommand_System_Data_StatementType_System_Data_Common_DataTableMapping_\" data-linktype=\"self-bookmark\">CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_CreateRowUpdatingEvent_System_Data_DataRow_System_Data_IDbCommand_System_Data_StatementType_System_Data_Common_DataTableMapping_\" data-linktype=\"self-bookmark\">CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_ExecuteBatch\" data-linktype=\"self-bookmark\">ExecuteBatch()</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_GetBatchedParameter_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetBatchedParameter(Int32,Int32)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_GetBatchedRecordsAffected_System_Int32_System_Int32__System_Exception__\" data-linktype=\"self-bookmark\">GetBatchedRecordsAffected(Int32,Int32,Exception)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_InitializeBatching\" data-linktype=\"self-bookmark\">InitializeBatching()</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_OnRowUpdated_System_Data_Common_RowUpdatedEventArgs_\" data-linktype=\"self-bookmark\">OnRowUpdated(RowUpdatedEventArgs)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_OnRowUpdating_System_Data_Common_RowUpdatingEventArgs_\" data-linktype=\"self-bookmark\">OnRowUpdating(RowUpdatingEventArgs)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_TerminateBatching\" data-linktype=\"self-bookmark\">TerminateBatching()</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_RowUpdated\" data-linktype=\"self-bookmark\">RowUpdated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> after a command is executed against the data source. The attempt to update is made, so the event fires.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_RowUpdating\" data-linktype=\"self-bookmark\">RowUpdating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> before a command is executed against the data source. The attempt to update is made, so the event fires.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_DeleteCommand\" data-linktype=\"self-bookmark\">IDbDataAdapter.DeleteCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.DeleteCommand*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_InsertCommand\" data-linktype=\"self-bookmark\">IDbDataAdapter.InsertCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.InsertCommand*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_SelectCommand\" data-linktype=\"self-bookmark\">IDbDataAdapter.SelectCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.SelectCommand*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_UpdateCommand\" data-linktype=\"self-bookmark\">IDbDataAdapter.UpdateCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.UpdateCommand*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlDataAdapter_System_ICloneable_Clone\" data-linktype=\"self-bookmark\">ICloneable.Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.ICloneable.Clone*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter__ctor\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlDataAdapter()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SqlDataAdapter ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When an instance of <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> is created, the following read/write properties are set to the following initial values.  </p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingMappingAction_\" data-linktype=\"relative-path\">MissingMappingAction</a></td>\n<td><code>MissingMappingAction.Passthrough</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingSchemaAction_\" data-linktype=\"relative-path\">MissingSchemaAction</a></td>\n<td><code>MissingSchemaAction.Add</code></td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value of any of these properties through a separate call to the property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets some of its properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter Example#1\">    Public Function CreateSqlDataAdapter( _\n        ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey\n\n        &#39; Create the commands.\n        adapter.SelectCommand = New SqlCommand( _\n            &quot;SELECT CustomerID, CompanyName FROM CUSTOMERS&quot;, connection)\n        adapter.InsertCommand = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n             &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n        adapter.UpdateCommand = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = &quot; &amp; _\n            &quot;@CompanyName WHERE CustomerID = @oldCustomerID&quot;, connection)\n        adapter.DeleteCommand = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = _\n            DataRowVersion.Original\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = _\n            DataRowVersion.Original\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter Example#1\">    public static SqlDataAdapter CreateSqlDataAdapter(SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter();\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey;\n\n        // Create the commands.\n        adapter.SelectCommand = new SqlCommand(\n            &quot;SELECT CustomerID, CompanyName FROM CUSTOMERS&quot;, connection);\n        adapter.InsertCommand = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n        adapter.UpdateCommand = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n        adapter.DeleteCommand = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = \n            DataRowVersion.Original;\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = \n            DataRowVersion.Original;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter__ctor_System_Data_SqlClient_SqlCommand_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlDataAdapter(SqlCommand)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class with the specified <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> as the <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectCommand</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> that is a Transact-SQL SELECT statement or stored procedure and is set as the <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> property of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This implementation of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> constructor sets the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property to the value specified in the <code>selectCommand</code> parameter.  </p>\n<p> When an instance of <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> is created, the following read/write properties are set to the following initial values.  </p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingMappingAction_\" data-linktype=\"relative-path\">MissingMappingAction</a></td>\n<td><code>MissingMappingAction.Passthrough</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingSchemaAction_\" data-linktype=\"relative-path\">MissingSchemaAction</a></td>\n<td><code>MissingSchemaAction.Add</code></td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value of any of these properties through a separate call to the property.  </p>\n<p> When <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> (or any of the other command properties) is assigned to a previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>, the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> is not cloned. The <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> maintains a reference to the previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets some of its properties.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1\">    public static SqlDataAdapter CreateSqlDataAdapter(SqlCommand selectCommand,\n        SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter(selectCommand);\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey;\n\n        // Create the other commands.\n        adapter.InsertCommand = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n\n        adapter.UpdateCommand = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n\n        adapter.DeleteCommand = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original;\n\n        return adapter;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1\">    Public Function CreateSqlDataAdapter(ByVal selectCommand As SqlCommand, _\n        ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter(selectCommand)\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey\n\n        &#39; Create the commands.\n        adapter.InsertCommand = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n             &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n\n        adapter.UpdateCommand = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection)\n\n        adapter.DeleteCommand = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original\n\n        Return adapter\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter__ctor_System_String_System_Data_SqlClient_SqlConnection_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlDataAdapter(String,SqlConnection)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class with a <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> and a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectCommandText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that is a Transact-SQL SELECT statement or stored procedure to be used by the <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> property of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectConnection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> that represents the connection. If your connection string does not use <code>Integrated Security = true</code>, you can use <a class=\"xref\" href=\"system.data.sqlclient.sqlcredential\" data-linktype=\"relative-path\">SqlCredential</a> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This implementation of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> opens and closes a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> if it is not already open. This can be useful in an application that must call the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method for two or more <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> objects. If the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> is already open, you must explicitly call <strong>Close</strong> or <strong>Dispose</strong> to close it.  </p>\n<p> When an instance of <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> is created, the following read/write properties are set to the following initial values.  </p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingMappingAction_\" data-linktype=\"relative-path\">MissingMappingAction</a></td>\n<td><code>MissingMappingAction.Passthrough</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingSchemaAction_\" data-linktype=\"relative-path\">MissingSchemaAction</a></td>\n<td><code>MissingSchemaAction.Add</code></td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value of either of these properties through a separate call to the property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets some of its properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1\">    Public Function CreateSqlDataAdapter(ByVal commandText As String, _\n        ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter(commandText, connection)\n\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey\n\n        &#39; Create the commands.\n        adapter.InsertCommand = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n             &quot;VALUES (@CustomerID, @CompanyName)&quot;)\n\n        adapter.UpdateCommand = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;)\n\n        adapter.DeleteCommand = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;)\n\n        &#39; Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1\">    public static SqlDataAdapter CreateSqlDataAdapter(string commandText,\n        SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter(commandText, connection);\n\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey;\n\n        // Create the other commands.\n        adapter.InsertCommand = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;);\n\n        adapter.UpdateCommand = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;);\n\n        adapter.DeleteCommand = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;);\n\n        // Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlDataAdapter(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> class with a <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> and a connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SqlDataAdapter (string selectCommandText, string selectConnectionString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectCommandText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that is a Transact-SQL SELECT statement or stored procedure to be used by the <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.SelectCommand*</span> property of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectConnectionString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The connection string. If your connection string does not use <code>Integrated Security = true</code>, you can use <span class=\"xref\">stem.Data.SqlClient.SqlDataAdapter.#ctor*</span> and <a class=\"xref\" href=\"system.data.sqlclient.sqlcredential\" data-linktype=\"relative-path\">SqlCredential</a> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> constructor uses the <code>selectCommandText</code> parameter to set the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property. The <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> will create and maintain the connection created with the <code>selectConnectionString</code> parameter.  </p>\n<p> When an instance of <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> is created, the following read/write properties are set to the following initial values.  </p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingMappingAction_\" data-linktype=\"relative-path\">MissingMappingAction</a></td>\n<td><code>MissingMappingAction.Passthrough</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_MissingSchemaAction_\" data-linktype=\"relative-path\">MissingSchemaAction</a></td>\n<td><code>MissingSchemaAction.Add</code></td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value of any of these properties through a separate call to the property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets some of its properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1\">    Public Function CreateSqlDataAdapter(ByVal commandText As String, _\n        ByVal connectionString As String) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter(commandText, connectionString)\n        Dim connection As SqlConnection = adapter.SelectCommand.Connection\n\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey\n\n        &#39; Create the commands.\n        adapter.InsertCommand = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n             &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n\n        adapter.UpdateCommand = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection)\n\n        adapter.DeleteCommand = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, _\n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;)\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, _\n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1\">    public static SqlDataAdapter CreateSqlDataAdapter(string commandText,\n        string connectionString)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter(commandText, connectionString);\n        SqlConnection connection = adapter.SelectCommand.Connection;\n\n        adapter.MissingSchemaAction = MissingSchemaAction.AddWithKey;\n\n        // Create the commands.\n        adapter.InsertCommand = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n\n        adapter.UpdateCommand = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n\n        adapter.DeleteCommand = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Create the parameters.\n        adapter.InsertCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.InsertCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.UpdateCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@CompanyName&quot;, \n            SqlDbType.VarChar, 40, &quot;CompanyName&quot;);\n        adapter.UpdateCommand.Parameters.Add(&quot;@oldCustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand.Parameters.Add(&quot;@CustomerID&quot;, \n            SqlDbType.Char, 5, &quot;CustomerID&quot;).SourceVersion = DataRowVersion.Original;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_DeleteCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_DeleteCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to delete records in the database that correspond to deleted rows in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the DeleteCommand can be generated automatically if you set the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property and use the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommandbuilder\" data-linktype=\"relative-path\">SqlCommandBuilder</a>. Then, any additional commands that you do not set are generated by the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommandbuilder\" data-linktype=\"relative-path\">SqlCommandBuilder</a>. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information, see <a href=\"../Topic/Generating%20Commands%20with%20CommandBuilders.md\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When DeleteCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>, the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> is not cloned. The DeleteCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.  </p>\n<p> For every column that you propagate to the data source on <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, a parameter should be added to the <code>InsertCommand</code>, <code>UpdateCommand</code>, or <code>DeleteCommand</code>. The <code>SourceColumn</code> property of the parameter should be set to the name of the column. This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a>, and DeleteCommand properties. It assumes you have already created a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlDataAdapter.Command#1\">    Public Function CreateCustomerAdapter( _\n      ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n\n        &#39; Create the SelectCommand.\n        Dim command As SqlCommand = New SqlCommand( _\n            &quot;SELECT * FROM Customers &quot; &amp; _\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection)\n\n        &#39; Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15)\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15)\n\n        adapter.SelectCommand = command\n\n        &#39; Create the InsertCommand.\n        command = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n\n        &#39; Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.InsertCommand = command\n\n        &#39; Create the UpdateCommand.\n        command = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection)\n\n        &#39; Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n        Dim parameter As SqlParameter = command.Parameters.Add( _\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.UpdateCommand = command\n\n        &#39; Create the DeleteCommand.\n        command = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Add the parameters for the DeleteCommand.\n        command.Parameters.Add( _\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand = command\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlDataAdapter.Command#1\">    public static SqlDataAdapter CreateCustomerAdapter(\n        SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter();\n\n        // Create the SelectCommand.\n        SqlCommand command = new SqlCommand(&quot;SELECT * FROM Customers &quot; +\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection);\n\n        // Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15);\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15);\n\n        adapter.SelectCommand = command;\n\n        // Create the InsertCommand.\n        command = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n\n        // Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.InsertCommand = command;\n\n        // Create the UpdateCommand.\n        command = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n\n        // Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n        SqlParameter parameter = command.Parameters.Add(\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.UpdateCommand = command;\n\n        // Create the DeleteCommand.\n        command = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Add the parameters for the DeleteCommand.\n        parameter = command.Parameters.Add(\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand = command;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_InsertCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_InsertCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to insert records into the database that correspond to new rows in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the InsertCommand can be generated automatically if you set the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property and use the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommandbuilder\" data-linktype=\"relative-path\">SqlCommandBuilder</a>. Then, any additional commands that you do not set are generated by the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommandbuilder\" data-linktype=\"relative-path\">SqlCommandBuilder</a>. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information, see <a href=\"../Topic/Generating%20Commands%20with%20CommandBuilders.md\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When InsertCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>, the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> is not cloned. The InsertCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.  </p>\n<p> If execution of this command returns rows, these rows can be added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> depending on how you set the <strong>UpdatedRowSource</strong> property of the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.  </p>\n<p> For every column that you propagate to the data source on <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, a parameter should be added to <code>InsertCommand</code>, <code>UpdateCommand</code>, or <code>DeleteCommand</code>. The <code>SourceColumn</code> property of the parameter should be set to the name of the column. This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a>, InsertCommand, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a>, and <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a> properties. It assumes you have already created a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlDataAdapter.Command#1\">    Public Function CreateCustomerAdapter( _\n      ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n\n        &#39; Create the SelectCommand.\n        Dim command As SqlCommand = New SqlCommand( _\n            &quot;SELECT * FROM Customers &quot; &amp; _\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection)\n\n        &#39; Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15)\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15)\n\n        adapter.SelectCommand = command\n\n        &#39; Create the InsertCommand.\n        command = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n\n        &#39; Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.InsertCommand = command\n\n        &#39; Create the UpdateCommand.\n        command = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection)\n\n        &#39; Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n        Dim parameter As SqlParameter = command.Parameters.Add( _\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.UpdateCommand = command\n\n        &#39; Create the DeleteCommand.\n        command = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Add the parameters for the DeleteCommand.\n        command.Parameters.Add( _\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand = command\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlDataAdapter.Command#1\">    public static SqlDataAdapter CreateCustomerAdapter(\n        SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter();\n\n        // Create the SelectCommand.\n        SqlCommand command = new SqlCommand(&quot;SELECT * FROM Customers &quot; +\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection);\n\n        // Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15);\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15);\n\n        adapter.SelectCommand = command;\n\n        // Create the InsertCommand.\n        command = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n\n        // Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.InsertCommand = command;\n\n        // Create the UpdateCommand.\n        command = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n\n        // Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n        SqlParameter parameter = command.Parameters.Add(\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.UpdateCommand = command;\n\n        // Create the DeleteCommand.\n        command = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Add the parameters for the DeleteCommand.\n        parameter = command.Parameters.Add(\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand = command;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_SelectCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_SelectCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Fill*</span> to select records from the database for placement in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When SelectCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>, the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> is not cloned. The SelectCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.  </p>\n<p> If the SelectCommand does not return any rows, no tables are added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, and no exception is raised.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets the SelectCommand, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a>, and <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a> properties. It assumes you have already created a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlDataAdapter.Command#1\">    Public Function CreateCustomerAdapter( _\n      ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n\n        &#39; Create the SelectCommand.\n        Dim command As SqlCommand = New SqlCommand( _\n            &quot;SELECT * FROM Customers &quot; &amp; _\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection)\n\n        &#39; Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15)\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15)\n\n        adapter.SelectCommand = command\n\n        &#39; Create the InsertCommand.\n        command = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n\n        &#39; Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.InsertCommand = command\n\n        &#39; Create the UpdateCommand.\n        command = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection)\n\n        &#39; Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n        Dim parameter As SqlParameter = command.Parameters.Add( _\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.UpdateCommand = command\n\n        &#39; Create the DeleteCommand.\n        command = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Add the parameters for the DeleteCommand.\n        command.Parameters.Add( _\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand = command\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlDataAdapter.Command#1\">    public static SqlDataAdapter CreateCustomerAdapter(\n        SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter();\n\n        // Create the SelectCommand.\n        SqlCommand command = new SqlCommand(&quot;SELECT * FROM Customers &quot; +\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection);\n\n        // Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15);\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15);\n\n        adapter.SelectCommand = command;\n\n        // Create the InsertCommand.\n        command = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n\n        // Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.InsertCommand = command;\n\n        // Create the UpdateCommand.\n        command = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n\n        // Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n        SqlParameter parameter = command.Parameters.Add(\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.UpdateCommand = command;\n\n        // Create the DeleteCommand.\n        command = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Add the parameters for the DeleteCommand.\n        parameter = command.Parameters.Add(\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand = command;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_UpdateBatchSize\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_UpdateBatchSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateBatchSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of rows that are processed in each round-trip to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int UpdateBatchSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows to process per-batch.  </p>\n <table><thead><tr><th> Value is<br>\n </th><th> Effect<br>\n </th></tr></thead><tbody><tr><td> 0<br>\n </td><td> There is no limit on the batch size..<br>\n </td></tr><tr><td> 1<br>\n </td><td> Disables batch updating.<br>\n </td></tr><tr><td> &gt;1<br>\n </td><td> Changes are sent using batches of UpdateBatchSize operations at a time.<br>\n </td></tr></tbody></table>  \n\n<p> When setting this to a value other than 1, all the commands associated with the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> have to have their <strong>UpdatedRowSource</strong> property set to <code>None</code> or <code>OutputParameters</code>. An exception is thrown otherwise.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.  </p>\n<p> Use the UpdateBatchSize property to update a data source with changes from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This can increase application performance by reducing the number of round-trips to the server.  </p>\n<p> Executing an extremely large batch could decrease performance. Therefore, you should test for the optimum batch size setting before implementing your application.  </p>\n<p> An <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> is thrown if the value is set to a number less than zero.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_UpdateCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_UpdateCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to update records in the database that correspond to modified rows in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the UpdateCommand can be generated automatically if you set the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property and use the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommandbuilder\" data-linktype=\"relative-path\">SqlCommandBuilder</a>. Then, any additional commands that you do not set are generated by the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommandbuilder\" data-linktype=\"relative-path\">SqlCommandBuilder</a>. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information, see <a href=\"../Topic/Generating%20Commands%20with%20CommandBuilders.md\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When UpdateCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a>, the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> is not cloned. The UpdateCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If execution of this command returns rows, the updated rows may be merged with the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> depending on how you set the <strong>UpdatedRowSource</strong> property of the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object.  </p>\n</div>\n<p> For every column that you propagate to the data source on <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, a parameter should be added to <code>InsertCommand</code>, <code>UpdateCommand</code>, or <code>DeleteCommand</code>.  </p>\n<p> The <code>SourceColumn</code> property of the parameter should be set to the name of the column. This indicates that the value of the parameter is not set manually, but taken from the particular column in the currently processed row.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> and sets the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a>, UpdateCommand and <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a> properties. It assumes you have already created a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlDataAdapter.Command#1\">    Public Function CreateCustomerAdapter( _\n      ByVal connection As SqlConnection) As SqlDataAdapter\n\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n\n        &#39; Create the SelectCommand.\n        Dim command As SqlCommand = New SqlCommand( _\n            &quot;SELECT * FROM Customers &quot; &amp; _\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection)\n\n        &#39; Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15)\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15)\n\n        adapter.SelectCommand = command\n\n        &#39; Create the InsertCommand.\n        command = New SqlCommand( _\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection)\n\n        &#39; Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n\n        adapter.InsertCommand = command\n\n        &#39; Create the UpdateCommand.\n        command = New SqlCommand( _\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; &amp; _\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection)\n\n        &#39; Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;)\n        Dim parameter As SqlParameter = command.Parameters.Add( _\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.UpdateCommand = command\n\n        &#39; Create the DeleteCommand.\n        command = New SqlCommand( _\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection)\n\n        &#39; Add the parameters for the DeleteCommand.\n        command.Parameters.Add( _\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        adapter.DeleteCommand = command\n\n        Return adapter\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlDataAdapter.Command#1\">    public static SqlDataAdapter CreateCustomerAdapter(\n        SqlConnection connection)\n    {\n        SqlDataAdapter adapter = new SqlDataAdapter();\n\n        // Create the SelectCommand.\n        SqlCommand command = new SqlCommand(&quot;SELECT * FROM Customers &quot; +\n            &quot;WHERE Country = @Country AND City = @City&quot;, connection);\n\n        // Add the parameters for the SelectCommand.\n        command.Parameters.Add(&quot;@Country&quot;, SqlDbType.NVarChar, 15);\n        command.Parameters.Add(&quot;@City&quot;, SqlDbType.NVarChar, 15);\n\n        adapter.SelectCommand = command;\n\n        // Create the InsertCommand.\n        command = new SqlCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (@CustomerID, @CompanyName)&quot;, connection);\n\n        // Add the parameters for the InsertCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.InsertCommand = command;\n\n        // Create the UpdateCommand.\n        command = new SqlCommand(\n            &quot;UPDATE Customers SET CustomerID = @CustomerID, CompanyName = @CompanyName &quot; +\n            &quot;WHERE CustomerID = @oldCustomerID&quot;, connection);\n\n        // Add the parameters for the UpdateCommand.\n        command.Parameters.Add(&quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(&quot;@CompanyName&quot;, SqlDbType.NVarChar, 40, &quot;CompanyName&quot;);\n        SqlParameter parameter = command.Parameters.Add(\n            &quot;@oldCustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.UpdateCommand = command;\n\n        // Create the DeleteCommand.\n        command = new SqlCommand(\n            &quot;DELETE FROM Customers WHERE CustomerID = @CustomerID&quot;, connection);\n\n        // Add the parameters for the DeleteCommand.\n        parameter = command.Parameters.Add(\n            &quot;@CustomerID&quot;, SqlDbType.NChar, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        adapter.DeleteCommand = command;\n\n        return adapter;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_AddToBatch_System_Data_IDbCommand_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_AddToBatch_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddToBatch(IDbCommand)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override int AddToBatch (System.Data.IDbCommand command);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_ClearBatch\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_ClearBatch_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearBatch()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void ClearBatch ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_CreateRowUpdatedEvent_System_Data_DataRow_System_Data_IDbCommand_System_Data_StatementType_System_Data_Common_DataTableMapping_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_CreateRowUpdatedEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>statementType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.statementtype\" data-linktype=\"relative-path\">StatementType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tableMapping</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.datatablemapping\" data-linktype=\"relative-path\">DataTableMapping</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.rowupdatedeventargs\" data-linktype=\"relative-path\">RowUpdatedEventArgs</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_CreateRowUpdatingEvent_System_Data_DataRow_System_Data_IDbCommand_System_Data_StatementType_System_Data_Common_DataTableMapping_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_CreateRowUpdatingEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>statementType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.statementtype\" data-linktype=\"relative-path\">StatementType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tableMapping</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.datatablemapping\" data-linktype=\"relative-path\">DataTableMapping</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.rowupdatingeventargs\" data-linktype=\"relative-path\">RowUpdatingEventArgs</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_ExecuteBatch\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_ExecuteBatch_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteBatch()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override int ExecuteBatch ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_GetBatchedParameter_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_GetBatchedParameter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBatchedParameter(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandIdentifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameterIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idataparameter\" data-linktype=\"relative-path\">IDataParameter</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_GetBatchedRecordsAffected_System_Int32_System_Int32__System_Exception__\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_GetBatchedRecordsAffected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBatchedRecordsAffected(Int32,Int32,Exception)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandIdentifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>recordsAffected</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>error</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_InitializeBatching\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_InitializeBatching_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeBatching()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void InitializeBatching ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_OnRowUpdated_System_Data_Common_RowUpdatedEventArgs_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_OnRowUpdated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowUpdated(RowUpdatedEventArgs)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.rowupdatedeventargs\" data-linktype=\"relative-path\">RowUpdatedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_OnRowUpdating_System_Data_Common_RowUpdatingEventArgs_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_OnRowUpdating_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowUpdating(RowUpdatingEventArgs)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.rowupdatingeventargs\" data-linktype=\"relative-path\">RowUpdatingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_TerminateBatching\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_TerminateBatching_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TerminateBatching()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void TerminateBatching ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_RowUpdated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowUpdated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> after a command is executed against the data source. The attempt to update is made, so the event fires.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When using <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, there are two events that occur per data row updated. The order of execution is as follows:  </p>\n<ol>\n<li><p>The values in the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> are moved to the parameter values.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_OnRowUpdating_\" data-linktype=\"relative-path\">OnRowUpdating</a> event is raised.  </p>\n</li>\n<li><p>The command executes.  </p>\n</li>\n<li><p>If the command is set to <code>FirstReturnedRecord</code>, the first returned result is placed in the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.  </p>\n</li>\n<li><p>If there are output parameters, they are placed in the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_OnRowUpdated_\" data-linktype=\"relative-path\">OnRowUpdated</a> event is raised.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> is called.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use both the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> and RowUpdated events.  </p>\n<p> The <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event returns this output:  </p>\n<p> event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  </p>\n<p> The RowUpdated event returns this output:  </p>\n<p> event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter.RowUpdated Example#1\">    &#39; handler for RowUpdating event\n    Private Shared Sub OnRowUpdating(sender As Object, e As SqlRowUpdatingEventArgs)\n        PrintEventArgs(e)\n    End Sub \n\n    &#39; handler for RowUpdated event\n    Private Shared Sub OnRowUpdated(sender As Object, e As SqlRowUpdatedEventArgs)\n        PrintEventArgs(e)\n    End Sub \n    \n    &#39;Entry point which delegates to C-style main Private Function\n    Public Overloads Shared Sub Main()\n        System.Environment.ExitCode = Main(System.Environment.GetCommandLineArgs())\n    End Sub\n    \n    Overloads Public Shared Function Main(args() As String) As Integer\n        Const connectionString As String = _\n            &quot;Integrated Security=SSPI;database=Northwind;server=MSSQL1&quot;\n        Const queryString As String = &quot;SELECT * FROMProducts&quot;\n        \n        &#39; create DataAdapter\n        Dim adapter As New SqlDataAdapter(queryString, connectionString)\n        Dim builder As SqlCommandBuilder = New SqlCommandBuilder(adapter)\n        \n        &#39; Create and fill DataSet (select only first 5 rows)\n        Dim dataSet As New DataSet()\n        adapter.Fill(dataSet, 0, 5, &quot;Table&quot;)\n        \n        &#39; Modify DataSet\n        Dim table As DataTable = dataSet.Tables(&quot;Table&quot;)\n        table.Rows(0)(1) = &quot;new product&quot;\n        \n        &#39; add handlers\n        AddHandler adapter.RowUpdating, AddressOf OnRowUpdating\n        AddHandler adapter.RowUpdated, AddressOf OnRowUpdated\n        \n        &#39; update, this operation fires two events \n        &#39;(RowUpdating/RowUpdated) per changed row \n        adapter.Update(dataSet, &quot;Table&quot;)\n        \n        &#39; remove handlers\n        RemoveHandler adapter.RowUpdating, AddressOf OnRowUpdating\n        RemoveHandler adapter.RowUpdated, AddressOf OnRowUpdated\n        Return 0\n    End Function \n    \n    \n    Overloads Private Shared Sub PrintEventArgs(args As SqlRowUpdatingEventArgs)\n        Console.WriteLine(&quot;OnRowUpdating&quot;)\n        Console.WriteLine(&quot;  event args: (&quot; &amp; &quot; command=&quot; &amp; args.Command.CommandText &amp; _\n           &quot; commandType=&quot; &amp; args.StatementType &amp; &quot; status=&quot; &amp; args.Status &amp; &quot;)&quot;)\n    End Sub \n    \n    \n    Overloads Private Shared Sub PrintEventArgs(args As SqlRowUpdatedEventArgs)\n        Console.WriteLine(&quot;OnRowUpdated&quot;)\n        Console.WriteLine(&quot;  event args: (&quot; &amp; &quot; command=&quot; &amp; args.Command.CommandText &amp; _\n           &quot; commandType=&quot; &amp; args.StatementType &amp; &quot; recordsAffected=&quot; &amp; _\n           args.RecordsAffected &amp; &quot; status=&quot; &amp; args.Status &amp; &quot;)&quot;)\n    End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter.RowUpdated Example#1\">    // handler for RowUpdating event\n    private static void OnRowUpdating(object sender, SqlRowUpdatingEventArgs e) \n    {\n        PrintEventArgs(e);\n    }\n \n    // handler for RowUpdated event\n    private static void OnRowUpdated(object sender, SqlRowUpdatedEventArgs e) \n    {\n        PrintEventArgs(e);\n    }\n \n    public static int Main() \n    {\n        const string connectionString = \n                  &quot;Integrated Security=SSPI;database=Northwind;server=MSSQL1&quot;;\n        const string queryString = &quot;SELECT * FROMProducts&quot;;\n \n        // create DataAdapter\n        SqlDataAdapter adapter = new SqlDataAdapter(queryString, connectionString);\n        SqlCommandBuilder builder = new SqlCommandBuilder(adapter);\n \n        // Create and fill DataSet (select only first 5 rows)\n        DataSet dataSet = new DataSet();\n        adapter.Fill(dataSet, 0, 5, &quot;Table&quot;);\n \n        // Modify DataSet\n        DataTable table = dataSet.Tables[&quot;Table&quot;];\n        table.Rows[0][1] = &quot;new product&quot;;\n \n        // add handlers\n        adapter.RowUpdating += new SqlRowUpdatingEventHandler( OnRowUpdating );\n        adapter.RowUpdated += new SqlRowUpdatedEventHandler( OnRowUpdated );\n \n        // update, this operation fires two events \n        // (RowUpdating/RowUpdated) per changed row \n        adapter.Update(dataSet, &quot;Table&quot;);\n \n        // remove handlers\n        adapter.RowUpdating -= new SqlRowUpdatingEventHandler( OnRowUpdating );\n        adapter.RowUpdated -= new SqlRowUpdatedEventHandler( OnRowUpdated );\n        return 0;\n    }\n \n    private static void PrintEventArgs(SqlRowUpdatingEventArgs args) \n    {\n        Console.WriteLine(&quot;OnRowUpdating&quot;);\n        Console.WriteLine(&quot;  event args: (&quot;+\n            &quot; command=&quot; + args.Command + \n            &quot; commandType=&quot; + args.StatementType + \n            &quot; status=&quot; + args.Status + &quot;)&quot;);\n    }\n \n    private static void PrintEventArgs(SqlRowUpdatedEventArgs args) \n    {\n        Console.WriteLine(&quot;OnRowUpdated&quot;);\n        Console.WriteLine( &quot;  event args: (&quot;+\n            &quot; command=&quot; + args.Command +\n            &quot; commandType=&quot; + args.StatementType + \n            &quot; recordsAffected=&quot; + args.RecordsAffected + \n            &quot; status=&quot; + args.Status + &quot;)&quot;);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_RowUpdating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowUpdating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> before a command is executed against the data source. The attempt to update is made, so the event fires.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When using <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, there are two events that occur per data row updated. The order of execution is as follows:  </p>\n<ol>\n<li><p>The values in the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> are moved to the parameter values.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_OnRowUpdating_\" data-linktype=\"relative-path\">OnRowUpdating</a> event is raised.  </p>\n</li>\n<li><p>The command executes.  </p>\n</li>\n<li><p>If the command is set to <code>FirstReturnedRecord</code>, the first returned result is placed in the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.  </p>\n</li>\n<li><p>If there are output parameters, they are placed in the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_OnRowUpdated_\" data-linktype=\"relative-path\">OnRowUpdated</a> event is raised.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> is called.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use both the RowUpdating and <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> events.  </p>\n<p> The RowUpdating event returns this output:  </p>\n<p> event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  </p>\n<p> The <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter#System_Data_SqlClient_SqlDataAdapter_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event returns this output:  </p>\n<p> event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData SqlDataAdapter.RowUpdated Example#1\">    &#39; handler for RowUpdating event\n    Private Shared Sub OnRowUpdating(sender As Object, e As SqlRowUpdatingEventArgs)\n        PrintEventArgs(e)\n    End Sub \n\n    &#39; handler for RowUpdated event\n    Private Shared Sub OnRowUpdated(sender As Object, e As SqlRowUpdatedEventArgs)\n        PrintEventArgs(e)\n    End Sub \n    \n    &#39;Entry point which delegates to C-style main Private Function\n    Public Overloads Shared Sub Main()\n        System.Environment.ExitCode = Main(System.Environment.GetCommandLineArgs())\n    End Sub\n    \n    Overloads Public Shared Function Main(args() As String) As Integer\n        Const connectionString As String = _\n            &quot;Integrated Security=SSPI;database=Northwind;server=MSSQL1&quot;\n        Const queryString As String = &quot;SELECT * FROMProducts&quot;\n        \n        &#39; create DataAdapter\n        Dim adapter As New SqlDataAdapter(queryString, connectionString)\n        Dim builder As SqlCommandBuilder = New SqlCommandBuilder(adapter)\n        \n        &#39; Create and fill DataSet (select only first 5 rows)\n        Dim dataSet As New DataSet()\n        adapter.Fill(dataSet, 0, 5, &quot;Table&quot;)\n        \n        &#39; Modify DataSet\n        Dim table As DataTable = dataSet.Tables(&quot;Table&quot;)\n        table.Rows(0)(1) = &quot;new product&quot;\n        \n        &#39; add handlers\n        AddHandler adapter.RowUpdating, AddressOf OnRowUpdating\n        AddHandler adapter.RowUpdated, AddressOf OnRowUpdated\n        \n        &#39; update, this operation fires two events \n        &#39;(RowUpdating/RowUpdated) per changed row \n        adapter.Update(dataSet, &quot;Table&quot;)\n        \n        &#39; remove handlers\n        RemoveHandler adapter.RowUpdating, AddressOf OnRowUpdating\n        RemoveHandler adapter.RowUpdated, AddressOf OnRowUpdated\n        Return 0\n    End Function \n    \n    \n    Overloads Private Shared Sub PrintEventArgs(args As SqlRowUpdatingEventArgs)\n        Console.WriteLine(&quot;OnRowUpdating&quot;)\n        Console.WriteLine(&quot;  event args: (&quot; &amp; &quot; command=&quot; &amp; args.Command.CommandText &amp; _\n           &quot; commandType=&quot; &amp; args.StatementType &amp; &quot; status=&quot; &amp; args.Status &amp; &quot;)&quot;)\n    End Sub \n    \n    \n    Overloads Private Shared Sub PrintEventArgs(args As SqlRowUpdatedEventArgs)\n        Console.WriteLine(&quot;OnRowUpdated&quot;)\n        Console.WriteLine(&quot;  event args: (&quot; &amp; &quot; command=&quot; &amp; args.Command.CommandText &amp; _\n           &quot; commandType=&quot; &amp; args.StatementType &amp; &quot; recordsAffected=&quot; &amp; _\n           args.RecordsAffected &amp; &quot; status=&quot; &amp; args.Status &amp; &quot;)&quot;)\n    End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData SqlDataAdapter.RowUpdated Example#1\">    // handler for RowUpdating event\n    private static void OnRowUpdating(object sender, SqlRowUpdatingEventArgs e) \n    {\n        PrintEventArgs(e);\n    }\n \n    // handler for RowUpdated event\n    private static void OnRowUpdated(object sender, SqlRowUpdatedEventArgs e) \n    {\n        PrintEventArgs(e);\n    }\n \n    public static int Main() \n    {\n        const string connectionString = \n                  &quot;Integrated Security=SSPI;database=Northwind;server=MSSQL1&quot;;\n        const string queryString = &quot;SELECT * FROMProducts&quot;;\n \n        // create DataAdapter\n        SqlDataAdapter adapter = new SqlDataAdapter(queryString, connectionString);\n        SqlCommandBuilder builder = new SqlCommandBuilder(adapter);\n \n        // Create and fill DataSet (select only first 5 rows)\n        DataSet dataSet = new DataSet();\n        adapter.Fill(dataSet, 0, 5, &quot;Table&quot;);\n \n        // Modify DataSet\n        DataTable table = dataSet.Tables[&quot;Table&quot;];\n        table.Rows[0][1] = &quot;new product&quot;;\n \n        // add handlers\n        adapter.RowUpdating += new SqlRowUpdatingEventHandler( OnRowUpdating );\n        adapter.RowUpdated += new SqlRowUpdatedEventHandler( OnRowUpdated );\n \n        // update, this operation fires two events \n        // (RowUpdating/RowUpdated) per changed row \n        adapter.Update(dataSet, &quot;Table&quot;);\n \n        // remove handlers\n        adapter.RowUpdating -= new SqlRowUpdatingEventHandler( OnRowUpdating );\n        adapter.RowUpdated -= new SqlRowUpdatedEventHandler( OnRowUpdated );\n        return 0;\n    }\n \n    private static void PrintEventArgs(SqlRowUpdatingEventArgs args) \n    {\n        Console.WriteLine(&quot;OnRowUpdating&quot;);\n        Console.WriteLine(&quot;  event args: (&quot;+\n            &quot; command=&quot; + args.Command + \n            &quot; commandType=&quot; + args.StatementType + \n            &quot; status=&quot; + args.Status + &quot;)&quot;);\n    }\n \n    private static void PrintEventArgs(SqlRowUpdatedEventArgs args) \n    {\n        Console.WriteLine(&quot;OnRowUpdated&quot;);\n        Console.WriteLine( &quot;  event args: (&quot;+\n            &quot; command=&quot; + args.Command +\n            &quot; commandType=&quot; + args.StatementType + \n            &quot; recordsAffected=&quot; + args.RecordsAffected + \n            &quot; status=&quot; + args.Status + &quot;)&quot;);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_DeleteCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_DeleteCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDbDataAdapter.DeleteCommand</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.DeleteCommand*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> that is used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to delete records in the data source for deleted rows in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> instance is cast to an <a class=\"xref\" href=\"system.data.idbdataadapter\" data-linktype=\"relative-path\">IDbDataAdapter</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_InsertCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_InsertCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDbDataAdapter.InsertCommand</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.InsertCommand*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> that is used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to insert records in the data source for new rows in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> instance is cast to an <a class=\"xref\" href=\"system.data.idbdataadapter\" data-linktype=\"relative-path\">IDbDataAdapter</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_SelectCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_SelectCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDbDataAdapter.SelectCommand</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.SelectCommand*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> that is used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to select records from data source for placement in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> instance is cast to an <a class=\"xref\" href=\"system.data.idbdataadapter\" data-linktype=\"relative-path\">IDbDataAdapter</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_UpdateCommand\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_System_Data_IDbDataAdapter_UpdateCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDbDataAdapter.UpdateCommand</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Data.IDbDataAdapter.UpdateCommand*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Data.IdbCommand</span> that is used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to update records in the data source for modified rows in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> instance is cast to an <a class=\"xref\" href=\"system.data.idbdataadapter\" data-linktype=\"relative-path\">IDbDataAdapter</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlDataAdapter_System_ICloneable_Clone\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlDataAdapter_System_ICloneable_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICloneable.Clone()</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.ICloneable.Clone*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object ICloneable.Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>A new object that is a copy of the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.sqlclient.sqldataadapter\" data-linktype=\"relative-path\">SqlDataAdapter</a> instance is cast to an <a class=\"xref\" href=\"system.icloneable\" data-linktype=\"relative-path\">ICloneable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.SqlClient.SqlDataAdapter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.SqlClient.SqlDataAdapter.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.AddToBatch\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.ClearBatch\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.DeleteCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.ExecuteBatch\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.InitializeBatching\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.InsertCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.OnRowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.OnRowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.RowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.add_RowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.remove_RowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.RowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.add_RowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.remove_RowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.SelectCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.DeleteCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.InsertCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.SelectCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.UpdateCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.ICloneable.Clone\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.TerminateBatching\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlDataAdapter.UpdateCommand\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5352e020-88cf-5718-dc46-218968745094\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Data.SqlClient\\SqlDataAdapter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a set of data commands and a database connection that are used to fill the  and update a SQL Server database. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.SqlClient/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.SqlClient.SqlDataAdapter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.SqlClient.SqlDataAdapter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.SqlClient.SqlDataAdapter.yml","open_to_public_contributors":true,"api_name":["System.Data.SqlClient.SqlDataAdapter","System.Data.SqlClient.SqlDataAdapter..ctor","System.Data.SqlClient.SqlDataAdapter.AddToBatch","System.Data.SqlClient.SqlDataAdapter.ClearBatch","System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent","System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent","System.Data.SqlClient.SqlDataAdapter.DeleteCommand","System.Data.SqlClient.SqlDataAdapter.ExecuteBatch","System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter","System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected","System.Data.SqlClient.SqlDataAdapter.InitializeBatching","System.Data.SqlClient.SqlDataAdapter.InsertCommand","System.Data.SqlClient.SqlDataAdapter.OnRowUpdated","System.Data.SqlClient.SqlDataAdapter.OnRowUpdating","System.Data.SqlClient.SqlDataAdapter.RowUpdated","System.Data.SqlClient.SqlDataAdapter.add_RowUpdated","System.Data.SqlClient.SqlDataAdapter.remove_RowUpdated","System.Data.SqlClient.SqlDataAdapter.RowUpdating","System.Data.SqlClient.SqlDataAdapter.add_RowUpdating","System.Data.SqlClient.SqlDataAdapter.remove_RowUpdating","System.Data.SqlClient.SqlDataAdapter.SelectCommand","System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.DeleteCommand","System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.InsertCommand","System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.SelectCommand","System.Data.SqlClient.SqlDataAdapter.IDbDataAdapter.UpdateCommand","System.Data.SqlClient.SqlDataAdapter.ICloneable.Clone","System.Data.SqlClient.SqlDataAdapter.TerminateBatching","System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize","System.Data.SqlClient.SqlDataAdapter.UpdateCommand"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.SqlClient.SqlDataAdapter","System::Data::SqlClient::SqlDataAdapter","System.Data.SqlClient.SqlDataAdapter.#ctor","System::Data::SqlClient::SqlDataAdapter::#ctor","System.Data.SqlClient.SqlDataAdapter.AddToBatch","System::Data::SqlClient::SqlDataAdapter::AddToBatch","System.Data.SqlClient.SqlDataAdapter.ClearBatch","System::Data::SqlClient::SqlDataAdapter::ClearBatch","System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent","System::Data::SqlClient::SqlDataAdapter::CreateRowUpdatedEvent","System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent","System::Data::SqlClient::SqlDataAdapter::CreateRowUpdatingEvent","System.Data.SqlClient.SqlDataAdapter.DeleteCommand","System::Data::SqlClient::SqlDataAdapter::DeleteCommand","System.Data.SqlClient.SqlDataAdapter.ExecuteBatch","System::Data::SqlClient::SqlDataAdapter::ExecuteBatch","System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter","System::Data::SqlClient::SqlDataAdapter::GetBatchedParameter","System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected","System::Data::SqlClient::SqlDataAdapter::GetBatchedRecordsAffected","System.Data.SqlClient.SqlDataAdapter.InitializeBatching","System::Data::SqlClient::SqlDataAdapter::InitializeBatching","System.Data.SqlClient.SqlDataAdapter.InsertCommand","System::Data::SqlClient::SqlDataAdapter::InsertCommand","System.Data.SqlClient.SqlDataAdapter.OnRowUpdated","System::Data::SqlClient::SqlDataAdapter::OnRowUpdated","System.Data.SqlClient.SqlDataAdapter.OnRowUpdating","System::Data::SqlClient::SqlDataAdapter::OnRowUpdating","System.Data.SqlClient.SqlDataAdapter.RowUpdated","System::Data::SqlClient::SqlDataAdapter::RowUpdated","System.Data.SqlClient.SqlDataAdapter.RowUpdating","System::Data::SqlClient::SqlDataAdapter::RowUpdating","System.Data.SqlClient.SqlDataAdapter.SelectCommand","System::Data::SqlClient::SqlDataAdapter::SelectCommand","System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand","System::Data::SqlClient::SqlDataAdapter::System#Data#IDbDataAdapter#DeleteCommand","System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand","System::Data::SqlClient::SqlDataAdapter::System#Data#IDbDataAdapter#InsertCommand","System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand","System::Data::SqlClient::SqlDataAdapter::System#Data#IDbDataAdapter#SelectCommand","System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand","System::Data::SqlClient::SqlDataAdapter::System#Data#IDbDataAdapter#UpdateCommand","System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone","System::Data::SqlClient::SqlDataAdapter::System#ICloneable#Clone","System.Data.SqlClient.SqlDataAdapter.TerminateBatching","System::Data::SqlClient::SqlDataAdapter::TerminateBatching","System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize","System::Data::SqlClient::SqlDataAdapter::UpdateBatchSize","System.Data.SqlClient.SqlDataAdapter.UpdateCommand","System::Data::SqlClient::SqlDataAdapter::UpdateCommand"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5352e020-88cf-5718-dc46-218968745094","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Data.SqlClient\\SqlDataAdapter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.SqlClient/SqlDataAdapter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SqlDataAdapter class | Microsoft Docs","_op_ogTitle":"SqlDataAdapter class","description":"Represents a set of data commands and a database connection that are used to fill the  and update a SQL Server database. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Data.SqlClient/toc.json","toc_rel":"_splitted/System.Data.SqlClient/toc.json","source_url":"","ms.assetid":"System.Data.SqlClient.SqlDataAdapter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.sqlclient.sqldataadapter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.sqlclient.sqldataadapter","fileRelativePath":"System.Data.SqlClient.SqlDataAdapter.html"},"themesRelativePathToOutputRoot":"_themes/"}