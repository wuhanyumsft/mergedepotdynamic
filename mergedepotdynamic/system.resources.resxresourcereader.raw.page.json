{"content":"    \r\n    <h1 id=\"System_Resources_ResXResourceReader\">\r\n      <span class=\"lang-csharp\">ResXResourceReader</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ResXResourceReader : System.Resources.IResourceReader</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ResXResourceReader</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ResXResourceReader class provides a default implementation of the <a class=\"xref\" href=\"system.resources.iresourcereader\" data-linktype=\"relative-path\">IResourceReader</a> interface that reads resource information in an XML format. To read resource information from a binary resource format, use the <a class=\"xref\" href=\"system.resources.resourcereader\" data-linktype=\"relative-path\">ResourceReader</a> class.  </p>\n<p> You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (<a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a>) that is returned by the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method. You call the methods provided by <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> to advance to the next resource and to read the name and value of each resource in the .resx file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ResXResourceReader class provides two enumerators. The <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method returns an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object; we recommend that you use this method to enumerate resources. The <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_System_Collections_IEnumerable_GetEnumerator_\" data-linktype=\"relative-path\">System.Collections.IEnumerable.GetEnumerator</a> method is an explicit interface implementation that returns an <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> object; we do not recommend its use.  </p>\n</div>\n<p> The following example uses the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method to obtain an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that is used to enumerate the resources in a .resx file. The example includes a <code>CreateResourceFile</code> routine that creates the necessary resource file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Resources.ResXResourceReader.Class#1\">using System;\nusing System.Collections;\nusing System.Resources;\n\npublic class Example\n{\n   private const string resxFilename = @&quot;.\\CountryHeaders.resx&quot;;\n    \n   public static void Main()\n   {\n      // Create a resource file to read.\n      CreateResourceFile();\n      \n      // Enumerate the resources in the file.\n      ResXResourceReader rr = new ResXResourceReader(resxFilename);\n      IDictionaryEnumerator dict = rr.GetEnumerator();\n      while (dict.MoveNext())\n         Console.WriteLine(&quot;{0}: {1}&quot;, dict.Key, dict.Value);   \n   }\n\n   private static void CreateResourceFile()\n   {\n      ResXResourceWriter rw = new ResXResourceWriter(resxFilename);\n      string[] resNames = {&quot;Country&quot;, &quot;Population&quot;, &quot;Area&quot;, \n                           &quot;Capital&quot;, &quot;LCity&quot; };\n      string[] columnHeaders = { &quot;Country Name&quot;, &quot;Population (2010}&quot;, \n                                 &quot;Area&quot;, &quot;Capital&quot;, &quot;Largest City&quot; };\n      string[] comments = { &quot;The localized country name&quot;, &quot;&quot;, \n                            &quot;The area in square miles&quot;, &quot;&quot;, \n                            &quot;The largest city based on 2010 data&quot; };\n      rw.AddResource(&quot;Title&quot;, &quot;Country Information&quot;);\n      rw.AddResource(&quot;nColumns&quot;, resNames.Length);\n      for (int ctr = 0; ctr &lt; resNames.Length; ctr++) {\n         ResXDataNode node = new ResXDataNode(resNames[ctr], columnHeaders[ctr]);\n         node.Comment = comments[ctr];\n         rw.AddResource(node);\n      }\n      rw.Generate();\n      rw.Close();\n   }\n}\n// The example displays the following output:\n//       Title: Country Information\n//       nColumns: 5\n//       Country: Country Name\n//       Population: Population (2010}\n//       Area: Area\n//       Capital: Capital\n//       LCity: Largest City\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResXResourceReader.Class#1\">Imports System.Collections\nImports System.Resources\n\nModule Example\n   Private Const resxFilename As String = &quot;.\\CountryHeaders.resx&quot;\n     \n   Public Sub Main()\n      &#39; Create a resource file to read.\n      CreateResourceFile()\n      \n      &#39; Enumerate the resources in the file.\n      Dim rr As New ResXResourceReader(resxFilename)\n      Dim dict As IDictionaryEnumerator = rr.GetEnumerator()\n      Do While dict.MoveNext()\n         Console.WriteLine(&quot;{0}: {1}&quot;, dict.Key, dict.Value)   \n      Loop\n   End Sub\n   \n   Private Sub CreateResourceFile()\n      Dim rw As New ResxResourceWriter(resxFilename)\n      Dim resNames() As String = {&quot;Country&quot;, &quot;Population&quot;, &quot;Area&quot;, \n                                  &quot;Capital&quot;, &quot;LCity&quot; }\n      Dim columnHeaders() As String = { &quot;Country Name&quot;, &quot;Population (2010}&quot;, \n                                        &quot;Area&quot;, &quot;Capital&quot;, &quot;Largest City&quot; }\n      Dim comments() As String = { &quot;The localized country name&quot;, &quot;&quot;, \n                                   &quot;The area in square miles&quot;, &quot;&quot;, \n                                   &quot;The largest city based on 2010 data&quot; }\n      rw.AddResource(&quot;Title&quot;, &quot;Country Information&quot;)\n      rw.AddResource(&quot;nColumns&quot;, resNames.Length)\n      For ctr As Integer = 0 To resNames.Length - 1\n         Dim node As New ResXDataNode(resNames(ctr), columnHeaders(ctr))\n         node.Comment = comments(ctr)\n         rw.AddResource(node)\n      Next\n      rw.Generate()\n      rw.Close()\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Title: Country Information\n&#39;       nColumns: 5\n&#39;       Country: Country Name\n&#39;       Population: Population (2010}\n&#39;       Area: Area\n&#39;       Capital: Capital\n&#39;       LCity: Largest City\n</code></pre><p> If the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_UseResXDataNodes_\" data-linktype=\"relative-path\">UseResXDataNodes</a> property is <code>true</code>, the value of the <a class=\"xref\" href=\"system.collections.idictionaryenumerator#System_Collections_IDictionaryEnumerator_Value_\" data-linktype=\"relative-path\">Value</a> property is a <a class=\"xref\" href=\"system.resources.resxdatanode\" data-linktype=\"relative-path\">ResXDataNode</a> object rather than the resource value. This makes a resource item&#39;s comment available from the <a class=\"xref\" href=\"system.resources.resxdatanode#System_Resources_ResXDataNode_Comment_\" data-linktype=\"relative-path\">Comment</a> property. The following example sets the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_UseResXDataNodes_\" data-linktype=\"relative-path\">UseResXDataNodes</a> property to <code>true</code> and enumerates the resources in a .resx file,  </p>\n<pre><code class=\"lang-cs\" name=\"System.Resources.ResXResourceReader.Class#2\">using System;\nusing System.Collections;\nusing System.ComponentModel.Design;\nusing System.Resources;\n\npublic class Example\n{\n   private const string resxFilename = @&quot;.\\CountryHeaders.resx&quot;;\n    \n   public static void Main()\n   {\n      // Create a resource file to read.\n      CreateResourceFile();\n      \n      // Enumerate the resources in the file.\n      ResXResourceReader rr = new ResXResourceReader(resxFilename);\n      rr.UseResXDataNodes = true;\n      IDictionaryEnumerator dict = rr.GetEnumerator();\n      while (dict.MoveNext()) {\n         ResXDataNode node = (ResXDataNode) dict.Value;\n         Console.WriteLine(&quot;{0,-20} {1,-20} {2}&quot;, \n                           node.Name + &quot;:&quot;, \n                           node.GetValue((ITypeResolutionService) null), \n                           ! String.IsNullOrEmpty(node.Comment) ? &quot;// &quot; + node.Comment : &quot;&quot;);\n      }\n   }\n\n   private static void CreateResourceFile()\n   {\n      ResXResourceWriter rw = new ResXResourceWriter(resxFilename);\n      string[] resNames = {&quot;Country&quot;, &quot;Population&quot;, &quot;Area&quot;, \n                           &quot;Capital&quot;, &quot;LCity&quot; };\n      string[] columnHeaders = { &quot;Country Name&quot;, &quot;Population (2010}&quot;, \n                                 &quot;Area&quot;, &quot;Capital&quot;, &quot;Largest City&quot; };\n      string[] comments = { &quot;The localized country name&quot;, &quot;&quot;, \n                            &quot;The area in square miles&quot;, &quot;&quot;, \n                            &quot;The largest city based on 2010 data&quot; };\n      rw.AddResource(&quot;Title&quot;, &quot;Country Information&quot;);\n      rw.AddResource(&quot;nColumns&quot;, resNames.Length);\n      for (int ctr = 0; ctr &lt; resNames.Length; ctr++) {\n         ResXDataNode node = new ResXDataNode(resNames[ctr], columnHeaders[ctr]);\n         node.Comment = comments[ctr];\n         rw.AddResource(node);\n      }\n      rw.Generate();\n      rw.Close();\n   }\n}\n// The example displays the following output:\n//    Title:               Country Information\n//    nColumns:            5\n//    Country:             Country Name         // The localized country name\n//    Population:          Population (2010}\n//    Area:                Area                 // The area in square miles\n//    Capital:             Capital\n//    LCity:               Largest City         // The largest city based on 2010 data\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResXResourceReader.Class#2\">Imports System.Collections\nImports System.ComponentModel.Design\nImports System.Resources\n\nModule Example\n   Private Const resxFilename As String = &quot;.\\CountryHeaders.resx&quot;\n     \n   Public Sub Main()\n      &#39; Create a resource file to read.\n      CreateResourceFile()\n      \n      &#39; Enumerate the resources in the file.\n      Dim rr As New ResXResourceReader(resxFilename)\n      rr.UseResXDataNodes = True\n      Dim dict As IDictionaryEnumerator = rr.GetEnumerator()\n      Do While dict.MoveNext()\n         Dim node As ResXDataNode = DirectCast(dict.Value, ResXDataNode)\n         Console.WriteLine(&quot;{0,-20} {1,-20} {2}&quot;, \n                           node.Name + &quot;:&quot;, \n                           node.GetValue(CType(Nothing, ITypeResolutionService)), \n                           If(Not String.IsNullOrEmpty(node.Comment), &quot;// &quot; + node.Comment, &quot;&quot;))\n      Loop\n   End Sub\n   \n   Private Sub CreateResourceFile()\n      Dim rw As New ResxResourceWriter(resxFilename)\n      Dim resNames() As String = {&quot;Country&quot;, &quot;Population&quot;, &quot;Area&quot;, \n                                  &quot;Capital&quot;, &quot;LCity&quot; }\n      Dim columnHeaders() As String = { &quot;Country Name&quot;, &quot;Population (2010}&quot;, \n                                        &quot;Area&quot;, &quot;Capital&quot;, &quot;Largest City&quot; }\n      Dim comments() As String = { &quot;The localized country name&quot;, &quot;&quot;, \n                                   &quot;The area in square miles&quot;, &quot;&quot;, \n                                   &quot;The largest city based on 2010 data&quot; }\n      rw.AddResource(&quot;Title&quot;, &quot;Country Information&quot;)\n      rw.AddResource(&quot;nColumns&quot;, resNames.Length)\n      For ctr As Integer = 0 To resNames.Length - 1\n         Dim node As New ResXDataNode(resNames(ctr), columnHeaders(ctr))\n         node.Comment = comments(ctr)\n         rw.AddResource(node)\n      Next\n      rw.Generate()\n      rw.Close()\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Title:               Country Information\n&#39;    nColumns:            5\n&#39;    Country:             Country Name         // The localized country name\n&#39;    Population:          Population (2010}\n&#39;    Area:                Area                 // The area in square miles\n&#39;    Capital:             Capital\n&#39;    LCity:               Largest City         // The largest city based on 2010 data\n</code></pre><p> If <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_UseResXDataNodes_\" data-linktype=\"relative-path\">UseResXDataNodes</a> is <code>true</code>, the <a class=\"xref\" href=\"system.resources.resxdatanode\" data-linktype=\"relative-path\">ResXDataNode</a> items in the enumeration can be either:  </p>\n<ul>\n<li><p>Named resources along with their data. In this case, the <a class=\"xref\" href=\"system.resources.resxdatanode#System_Resources_ResXDataNode_FileRef_\" data-linktype=\"relative-path\">FileRef</a> property is <code>null</code>.  </p>\n</li>\n<li><p>Named resources along with the name of the file that contains the resource data. In this case, the <a class=\"xref\" href=\"system.resources.resxdatanode#System_Resources_ResXDataNode_FileRef_\" data-linktype=\"relative-path\">FileRef</a> property returns a <a class=\"xref\" href=\"system.resources.resxfileref\" data-linktype=\"relative-path\">ResXFileRef</a> object that provides information about the resource, including its filename. If relative file names are used, you should always set the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_BasePath_\" data-linktype=\"relative-path\">BasePath</a> property to provide a reference point for the relative file path.  </p>\n<p>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <a class=\"xref\" href=\"system.resources.resxresourceset\" data-linktype=\"relative-path\">ResXResourceSet</a> object and call its <code>GetString</code> and <code>GetObject</code> methods.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members. A <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_IO_Stream_\" data-linktype=\"self-bookmark\">ResXResourceReader(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_IO_TextReader_\" data-linktype=\"self-bookmark\">ResXResourceReader(TextReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_String_\" data-linktype=\"self-bookmark\">ResXResourceReader(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified resource file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_IO_Stream_System_ComponentModel_Design_ITypeResolutionService_\" data-linktype=\"self-bookmark\">ResXResourceReader(Stream,ITypeResolutionService)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using an input stream and a type resolution service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_IO_Stream_System_Reflection_AssemblyName___\" data-linktype=\"self-bookmark\">ResXResourceReader(Stream,AssemblyName[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a stream and an array of assembly names.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_IO_TextReader_System_ComponentModel_Design_ITypeResolutionService_\" data-linktype=\"self-bookmark\">ResXResourceReader(TextReader,ITypeResolutionService)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a text stream reader and a type resolution service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_IO_TextReader_System_Reflection_AssemblyName___\" data-linktype=\"self-bookmark\">ResXResourceReader(TextReader,AssemblyName[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> object and an array of assembly names.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_String_System_ComponentModel_Design_ITypeResolutionService_\" data-linktype=\"self-bookmark\">ResXResourceReader(String,ITypeResolutionService)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a file name and a type resolution service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader__ctor_System_String_System_Reflection_AssemblyName___\" data-linktype=\"self-bookmark\">ResXResourceReader(String,AssemblyName[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using an XML resource file name and an array of assembly names.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_BasePath\" data-linktype=\"self-bookmark\">BasePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the base path for the relative file path specified in a <a class=\"xref\" href=\"system.resources.resxfileref\" data-linktype=\"relative-path\">ResXFileRef</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_UseResXDataNodes\" data-linktype=\"self-bookmark\">UseResXDataNodes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether <a class=\"xref\" href=\"system.resources.resxdatanode\" data-linktype=\"relative-path\">ResXDataNode</a> objects are returned when reading the current XML resource file or stream.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member overrides the <span class=\"xref\">stem.Object.Finalize*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_FromFileContents_System_String_\" data-linktype=\"self-bookmark\">FromFileContents(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object and initializes it to read a string whose contents are in the form of an XML resource file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_FromFileContents_System_String_System_ComponentModel_Design_ITypeResolutionService_\" data-linktype=\"self-bookmark\">FromFileContents(String,ITypeResolutionService)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <a class=\"xref\" href=\"system.componentmodel.design.ityperesolutionservice\" data-linktype=\"relative-path\">ITypeResolutionService</a> object to resolve type names specified in a resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_FromFileContents_System_String_System_Reflection_AssemblyName___\" data-linktype=\"self-bookmark\">FromFileContents(String,AssemblyName[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a> objects to resolve type names specified in a resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator for the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_GetMetadataEnumerator\" data-linktype=\"self-bookmark\">GetMetadataEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator for the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object. For a description of this member, see the <span class=\"xref\">stem.Collections.IEnumerable.GetEnumerator*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Resources_ResXResourceReader_System_IDisposable_Dispose\" data-linktype=\"self-bookmark\">IDisposable.Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> and optionally releases the managed resources. For a description of this member, see the <span class=\"xref\">stem.IDisposable.Dispose*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An input stream that contains resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_Dispose_\" data-linktype=\"relative-path\">Dispose</a> and <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_Close_\" data-linktype=\"relative-path\">Close</a> methods do not close the stream you specify in this constructor.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_IO_TextReader_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(TextReader)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (System.IO.TextReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A text input stream that contains resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified resource file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path of the resource file to read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class for the specified file, iterates through the resources of the file, and displays the contents to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Resources.ResxresourceReader Example#1\">#using &lt;system.windows.forms.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Resources;\nusing namespace System::Collections;\nvoid main()\n{\n\n   // Create a ResXResourceReader for the file items.resx.\n   ResXResourceReader^ rsxr = gcnew ResXResourceReader( &quot;items.resx&quot; );\n\n\n   // Iterate through the resources and display the contents to the console.\n   IEnumerator^ myEnum = rsxr-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;{0}:&nbsp;&nbsp;&nbsp;&nbsp; {1}&quot;, d-&gt;Key, d-&gt;Value );\n   }\n\n\n   //Close the reader.\n   rsxr-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Resources.ResxresourceReader Example#1\">using System;\nusing System.Resources;\nusing System.Collections;\n\nclass ReadResXResources\n{\n   public static void Main()\n   {\n\n      // Create a ResXResourceReader for the file items.resx.\n      ResXResourceReader rsxr = new ResXResourceReader(&quot;items.resx&quot;);\n\n      // Iterate through the resources and display the contents to the console.\n      foreach (DictionaryEntry d in rsxr)\n      {\n    Console.WriteLine(d.Key.ToString() + &quot;:&nbsp;&nbsp;&nbsp;&nbsp;&quot; + d.Value.ToString());\n      }\n\n     //Close the reader.\n     rsxr.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResxresourceReader Example#1\">Imports System\nImports System.Resources\nImports System.Collections\nImports Microsoft.VisualBasic\n\nClass ReadResXResources\n   \n   Public Shared Sub Main()\n      \n      &#39; Create a ResXResourceReader for the file items.resx.\n      Dim rsxr As ResXResourceReader\n      rsxr = New ResXResourceReader(&quot;items.resx&quot;)\n\n      &#39; Iterate through the resources and display the contents to the console.\n      Dim d As DictionaryEntry\n      For Each d In  rsxr\n         Console.WriteLine(d.Key.ToString() + &quot;:&quot; + ControlChars.Tab + d.Value.ToString())\n      Next d\n      \n      &#39;Close the reader.\n      rsxr.Close()\n\n   End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_IO_Stream_System_ComponentModel_Design_ITypeResolutionService_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(Stream,ITypeResolutionService)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using an input stream and a type resolution service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An input stream that contains resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.ityperesolutionservice\" data-linktype=\"relative-path\">ITypeResolutionService</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that resolves type names specified in a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_IO_Stream_System_Reflection_AssemblyName___\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(Stream,AssemblyName[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a stream and an array of assembly names.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An input stream that contains resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_IO_TextReader_System_ComponentModel_Design_ITypeResolutionService_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(TextReader,ITypeResolutionService)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a text stream reader and a type resolution service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A text stream reader that contains resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.ityperesolutionservice\" data-linktype=\"relative-path\">ITypeResolutionService</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that resolves type names specified in a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_IO_TextReader_System_Reflection_AssemblyName___\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(TextReader,AssemblyName[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> object and an array of assembly names.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object used to read resources from a stream of text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_String_System_ComponentModel_Design_ITypeResolutionService_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(String,ITypeResolutionService)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using a file name and a type resolution service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of an XML resource file that contains resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.ityperesolutionservice\" data-linktype=\"relative-path\">ITypeResolutionService</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that resolves type names specified in a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader__ctor_System_String_System_Reflection_AssemblyName___\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResXResourceReader(String,AssemblyName[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> class using an XML resource file name and an array of assembly names.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of an XML resource file that contains resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_BasePath\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_BasePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BasePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the base path for the relative file path specified in a <a class=\"xref\" href=\"system.resources.resxfileref\" data-linktype=\"relative-path\">ResXFileRef</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BasePath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A path that, if prepended to the relative file path specified in a <a class=\"xref\" href=\"system.resources.resxfileref\" data-linktype=\"relative-path\">ResXFileRef</a> object, yields an absolute path to a resource file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BasePath property is used to resolve relative file path references that are assigned to the <a class=\"xref\" href=\"system.resources.resxfileref#System_Resources_ResXFileRef_FileName_\" data-linktype=\"relative-path\">FileName</a> property of <a class=\"xref\" href=\"system.resources.resxfileref\" data-linktype=\"relative-path\">ResXFileRef</a> objects.  By default, its value is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>, and relative file path references are resolved in relationship to the current directory returned by the <a class=\"xref\" href=\"system.environment#System_Environment_CurrentDirectory_\" data-linktype=\"relative-path\">CurrentDirectory</a> property. You should set this property before you begin enumerating resources.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource. <a class=\"xref\" href=\"system.resources.resxfileref\" data-linktype=\"relative-path\">ResXFileRef</a> objects are used to store the path to the images rather than storing the binary images themselves in the resource file. The example sets the BasePath property so that the relative file paths in the images&#39; file names are interpreted as subdirectories of a directory named C:\\data\\.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Resources.ResXResourceReader.BasePath#1\">Imports System.Collections\nImports System.ComponentModel.Design\nImports System.Drawing\nImports System.Reflection\nImports System.Resources\n\nModule Example\n   Public Sub Main()\n      CreateXMLResourceFile()\n      \n      &#39; Read the resources in the XML resource file.\n      Dim resx As New ResXResourceReader(&quot;DogBreeds.resx&quot;) \n      Console.WriteLine(&quot;Default Base Path: &#39;{0}&#39;&quot;, resx.BasePath)\n      resx.BasePath = &quot;C:\\Data\\&quot;\n      Console.WriteLine(&quot;Current Base Path: &#39;{0}&#39;&quot;, resx.BasePath) \n      Console.WriteLine()     \n      resx.UseResXDataNodes = True\n\n      Dim dict As IDictionaryEnumerator = resx.GetEnumerator()\n      Dim assemblyNames() As AssemblyName = \n                       { New AssemblyName(GetType(Bitmap).Assembly.FullName) }\n      Do While dict.MoveNext()\n         Dim node As ResXDataNode = CType(dict.Value, ResXDataNode)\n         If node.FileRef IsNot Nothing Then\n            Dim image As Object = node.GetValue(assemblyNames)\n            Console.WriteLine(&quot;{0}: {1} from {2}&quot;, dict.Key, image.GetType().Name, node.FileRef.Filename)\n         Else\n            Console.WriteLine(&quot;{0}: {1}&quot;, node.Name, node.GetValue(CType(Nothing, ITypeResolutionService)))\n         End If   \n      Loop   \n   End Sub\n   \n   Private Sub CreateXMLResourceFile()\n      &#39; Define an array of ResXFileRef objects for images.\n      Dim typeName As String = String.Format(&quot;{0}, {1}&quot;, GetType(Bitmap).Fullname, GetType(Bitmap).Assembly.FullName)\n      Dim imageRefs() As ResXFileRef =\n         { New ResXFileRef(&quot;images\\Akita.jpg&quot;, typeName),\n           New ResXFileRef(&quot;images\\Dalmatian.jpg&quot;, typeName),\n           New ResXFileRef(&quot;images\\Husky.jpg&quot;, typeName),\n           New ResXFileRef(&quot;images\\GreatPyrenees.jpg&quot;, typeName),\n           New ResXFileRef(&quot;images\\Malamute.jpg&quot;, typeName),\n           New ResXFileRef(&quot;images<br>ewfoundland.jpg&quot;, typeName),\n           New ResXFileRef(&quot;images\\Rottweiler.jpg&quot;, typeName) \n         }\n      \n      Using resx As New ResXResourceWriter(&quot;.\\DogBreeds.resx&quot;)\n         &#39; Add each ResXFileRef object to the resource file.\n         For Each imageRef In imageRefs\n            &#39; Form resource name from name of image.\n            Dim name As String = imageRef.FileName\n            name = name.Substring(name.IndexOf(&quot;\\&quot;) + 1)\n            name = name.Substring(0, name.IndexOf(&quot;.&quot;))\n            Dim node As New ResXDataNode(name, imageRef) \n            resx.AddResource(node)\n         Next\n         resx.AddResource(&quot;CreatedBy&quot;, GetType(Example).Assembly.FullName)\n      End Using   \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Default Base Path: &#39;&#39;\n&#39;       Current Base Path: &#39;C:\\Data\\&#39;\n&#39;       \n&#39;       Akita: Bitmap from C:\\Data\\images\\Akita.jpg\n&#39;       Dalmatian: Bitmap from C:\\Data\\images\\Dalmatian.jpg\n&#39;       Husky: Bitmap from C:\\Data\\images\\Husky.jpg\n&#39;       GreatPyrenees: Bitmap from C:\\Data\\images\\GreatPyrenees.jpg\n&#39;       Malamute: Bitmap from C:\\Data\\images\\Malamute.jpg\n&#39;       Newfoundland: Bitmap from C:\\Data\\images<br>ewfoundland.jpg\n&#39;       Rottweiler: Bitmap from C:\\Data\\images\\Rottweiler.jpg\n&#39;       CreatedBy: BasePathEx1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Resources.ResXResourceReader.BasePath#1\">using System;\nusing System.Collections;\nusing System.ComponentModel.Design;\nusing System.Drawing;\nusing System.Reflection;\nusing System.Resources;\n\npublic class Example\n{\n   public static void Main()\n   {\n      CreateXMLResourceFile();\n      \n      // Read the resources in the XML resource file.\n      ResXResourceReader resx = new ResXResourceReader(&quot;DogBreeds.resx&quot;); \n      Console.WriteLine(&quot;Default Base Path: &#39;{0}&#39;&quot;, resx.BasePath);\n      resx.BasePath = @&quot;C:\\Data\\&quot;;\n      Console.WriteLine(&quot;Current Base Path: &#39;{0}&#39;<br>&quot;, resx.BasePath); \n      resx.UseResXDataNodes = true;\n\n      IDictionaryEnumerator dict = resx.GetEnumerator();\n      AssemblyName[] assemblyNames = { new AssemblyName(typeof(Bitmap).Assembly.FullName) };\n      while (dict.MoveNext()) {\n         ResXDataNode node = (ResXDataNode) dict.Value;\n         if (node.FileRef != null) {\n            object image = node.GetValue(assemblyNames);\n            Console.WriteLine(&quot;{0}: {1} from {2}&quot;, dict.Key, \n                              image.GetType().Name, node.FileRef.FileName);\n         }\n         else {\n            Console.WriteLine(&quot;{0}: {1}&quot;, node.Name, node.GetValue((ITypeResolutionService) null));\n         }   \n      }   \n   }\n\n   private static void CreateXMLResourceFile()\n   {\n      // Define an array of ResXFileRef objects for images.\n      String typeName = String.Format(&quot;{0}, {1}&quot;, typeof(Bitmap).FullName, \n                                      typeof(Bitmap).Assembly.FullName);\n      ResXFileRef[] imageRefs =\n         { new ResXFileRef(@&quot;images\\Akita.jpg&quot;, typeName),\n           new ResXFileRef(@&quot;images\\Dalmatian.jpg&quot;, typeName),\n           new ResXFileRef(@&quot;images\\Husky.jpg&quot;, typeName),\n           new ResXFileRef(@&quot;images\\GreatPyrenees.jpg&quot;, typeName),\n           new ResXFileRef(@&quot;images\\Malamute.jpg&quot;, typeName),\n           new ResXFileRef(@&quot;images<br>ewfoundland.jpg&quot;, typeName),\n           new ResXFileRef(@&quot;images\\Rottweiler.jpg&quot;, typeName) \n         };\n      \n      using (ResXResourceWriter resx = new ResXResourceWriter(@&quot;.\\DogBreeds.resx&quot;)) {\n         // Add each ResXFileRef object to the resource file.\n         foreach (var imageRef in imageRefs) {\n            // Form resource name from name of image.\n            String name = imageRef.FileName;\n            name = name.Substring(name.IndexOf(@&quot;\\&quot;) + 1);\n            name = name.Substring(0, name.IndexOf(&quot;.&quot;));\n            ResXDataNode node = new ResXDataNode(name, imageRef); \n            resx.AddResource(node);\n         }\n         resx.AddResource(&quot;CreatedBy&quot;, typeof(Example).Assembly.FullName);\n      }   \n   }\n}\n// The example displays the following output:\n//    Default Base Path: &#39;&#39;\n//    Current Base Path: &#39;C:\\Data\\&#39;\n//    \n//    Akita: Bitmap from C:\\Data\\images\\Akita.jpg\n//    Dalmatian: Bitmap from C:\\Data\\images\\Dalmatian.jpg\n//    Husky: Bitmap from C:\\Data\\images\\Husky.jpg\n//    GreatPyrenees: Bitmap from C:\\Data\\images\\GreatPyrenees.jpg\n//    Malamute: Bitmap from C:\\Data\\images\\Malamute.jpg\n//    newfoundland: Bitmap from C:\\Data\\images<br>ewfoundland.jpg\n//    Rottweiler: Bitmap from C:\\Data\\images\\Rottweiler.jpg\n//    CreatedBy: BasePathEx1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null\n</code></pre><p> Note that you must add a reference to System.Drawing.dll to compile the project successfully. The example also requires that the necessary images exist in a directory named C:\\data\\images\\.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_UseResXDataNodes\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_UseResXDataNodes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseResXDataNodes</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether <a class=\"xref\" href=\"system.resources.resxdatanode\" data-linktype=\"relative-path\">ResXDataNode</a> objects are returned when reading the current XML resource file or stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UseResXDataNodes { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if resource data nodes are retrieved; <code>false</code> if resource data nodes are ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>In a set operation, the enumerator for the resource file or stream is already open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can set the UseResXDataNodes property before you begin enumerating resources. By default, its value is <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example enumerates and displays resource items in an XML file. Initially, UseResXDataNodes is set to <code>false</code> to show both data and metadata items as they occur in the resource file. The second enumeration has the UseResXDataNodes set to <code>true</code> so that resource data elements are returned as <a class=\"xref\" href=\"system.resources.resxdatanode\" data-linktype=\"relative-path\">ResXDataNode</a>objects.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Resources.ResXResourceReader Example#2\">Imports System\nImports System.Collections\nImports System.Resources\nImports System.ComponentModel.Design\n\nNamespace UseDataNodesExample\n    Public Class Program\n        Public Shared Sub Main()\n            Console.WriteLine(vbNewLine + &quot;Enumerating as data items...&quot;)\n            EnumResourceItems(&quot;Resource1.resx&quot;, False)\n\n            Console.WriteLine(vbNewLine + &quot;Enumerating as data nodes...&quot;)\n            EnumResourceItems(&quot;Resource1.resx&quot;, True)\n        End Sub\n\n        Public Shared Sub EnumResourceItems(resxFile As String, useDataNodes As Boolean)\n            Using reader As New ResXResourceReader(resxFile)\n                reader.UseResXDataNodes = useDataNodes\n\n                &#39; Enumerate using IEnumerable.GetEnumerator().\n                Console.WriteLine(vbNewLine + &quot;  Default enumerator:&quot;)\n                For Each entry As DictionaryEntry In reader\n                    ShowResourceItem(entry, useDataNodes)\n                Next entry\n\n                &#39; Enumerate using GetMetadataEnumerator()\n                Dim metadataEnumerator As IDictionaryEnumerator = reader.GetMetadataEnumerator()\n\n                Console.WriteLine(vbNewLine + &quot;  MetadataEnumerator:&quot;)\n                While metadataEnumerator.MoveNext()\n                    ShowResourceItem(metadataEnumerator.Entry, useDataNodes)\n                End While\n\n                &#39; Enumerate using GetEnumerator()\n                Dim enumerator As IDictionaryEnumerator = reader.GetEnumerator()\n\n                Console.WriteLine(vbNewLine + &quot;  Enumerator:&quot;)\n                While enumerator.MoveNext()\n                    ShowResourceItem(enumerator.Entry, useDataNodes)\n                End While\n            End Using\n        End Sub\n\n        Public Shared Sub ShowResourceItem(entry As DictionaryEntry, isDataNode As Boolean)\n            &#39; Use a Nothing type resolver.\n            Dim typeres As ITypeResolutionService = Nothing\n            Dim dnode As ResXDataNode\n\n            If isDataNode Then\n                &#39; Display from node info.\n                dnode = CType(entry.Value, ResXDataNode)\n                Console.WriteLine(&quot;  {0}={1}&quot;, dnode.Name, dnode.GetValue(typeres))\n            Else\n                &#39; Display as DictionaryEntry info.\n                Console.WriteLine(&quot;  {0}={1}&quot;, entry.Key, entry.Value)\n            End If\n        End Sub\n    End Class\nEnd Namespace\n\n&#39; The example program will have the following output:\n&#39;\n&#39; Enumerating as data items...\n&#39;\n&#39;   Default enumerator:\n&#39;   DataSample=Sample DATA value\n&#39;\n&#39;   MetadataEnumerator:\n&#39;   MetadataSample=Sample METADATA value\n&#39;\n&#39;   Enumerator:\n&#39;   DataSample=Sample DATA value\n&#39;\n&#39; Enumerating as data nodes...\n&#39;\n&#39;   Default enumerator:\n&#39;   DataSample=Sample DATA value\n&#39;   MetadataSample=Sample METADATA value\n&#39;\n&#39;   MetadataEnumerator:\n&#39;\n&#39;   Enumerator:\n&#39;   DataSample=Sample DATA value\n&#39;   MetadataSample=Sample METADATA value\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Resources.ResXResourceReader Example#2\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Resources;\nusing namespace System::ComponentModel::Design;\n\nnamespace UseDataNodesExample\n{\n    public ref class Program\n    {\n    public:\n        static void Main()\n        {\n            Console::WriteLine(&quot;<br>Enumerating as data items...&quot;);\n            EnumResourceItems(&quot;Resource1.resx&quot;, false);\n\n            Console::WriteLine(&quot;<br>Enumerating as data nodes...&quot;);\n            EnumResourceItems(&quot;Resource1.resx&quot;, true);\n        }\n\n        static void EnumResourceItems(String^ resxFile, bool useDataNodes)\n        {\n            ResXResourceReader^ reader = gcnew ResXResourceReader(resxFile);\n\n            reader-&gt;UseResXDataNodes = useDataNodes;\n\n            // Enumerate using IEnumerable.GetEnumerator().\n            Console::WriteLine(&quot;<br>  Default enumerator:&quot;);\n            for each (DictionaryEntry entry in reader)\n            {\n                ShowResourceItem(entry, useDataNodes);\n            }\n\n            // Enumerate using GetMetadataEnumerator()\n            IDictionaryEnumerator^ metadataEnumerator = reader-&gt;GetMetadataEnumerator();\n\n            Console::WriteLine(&quot;<br>  MetadataEnumerator:&quot;);\n            while (metadataEnumerator-&gt;MoveNext())\n            {\n                ShowResourceItem(metadataEnumerator-&gt;Entry, useDataNodes);\n            }\n\n            // Enumerate using GetEnumerator()\n            IDictionaryEnumerator^ enumerator = reader-&gt;GetEnumerator();\n\n            Console::WriteLine(&quot;<br>  Enumerator:&quot;);\n            while (enumerator-&gt;MoveNext())\n            {\n                ShowResourceItem(enumerator-&gt;Entry, useDataNodes);\n            }\n            delete reader;\n        }\n\n        static void ShowResourceItem(DictionaryEntry entry, bool isDataNode)\n        {\n            // Use a nullptr type resolver.\n            ITypeResolutionService^ typeres = nullptr;\n            ResXDataNode^ dnode;\n\n            if (isDataNode)\n            {\n                // Display from node info.\n                dnode = (ResXDataNode^)entry.Value;\n                Console::WriteLine(&quot;  {0}={1}&quot;, dnode-&gt;Name, dnode-&gt;GetValue(typeres));\n            }\n            else\n            {\n                // Display as DictionaryEntry info.\n                Console::WriteLine(&quot;  {0}={1}&quot;, entry.Key, entry.Value);\n            }\n        }\n    };\n}\n\nint main()\n{\n    UseDataNodesExample::Program::Main();\n}\n// The example program will have the following output:\n//\n// Enumerating as data items...\n//\n//   Default enumerator:\n//   DataSample=Sample DATA value\n//\n//   MetadataEnumerator:\n//   MetadataSample=Sample METADATA value\n//\n//   Enumerator:\n//   DataSample=Sample DATA value\n//\n// Enumerating as data nodes...\n//\n//   Default enumerator:\n//   DataSample=Sample DATA value\n//   MetadataSample=Sample METADATA value\n//\n//   MetadataEnumerator:\n//\n//   Enumerator:\n//   DataSample=Sample DATA value\n//   MetadataSample=Sample METADATA value\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Resources.ResXResourceReader Example#2\">using System;\nusing System.Collections;\nusing System.Resources;\nusing System.ComponentModel.Design;\n\nnamespace UseDataNodesExample\n{\n    public class Program\n    {\n        public static void Main()\n        {\n            Console.WriteLine(&quot;<br>Enumerating as data items...&quot;);\n            EnumResourceItems(&quot;Resource1.resx&quot;, false);\n\n            Console.WriteLine(&quot;<br>Enumerating as data nodes...&quot;);\n            EnumResourceItems(&quot;Resource1.resx&quot;, true);\n        }\n\n        public static void EnumResourceItems(string resxFile, bool useDataNodes)\n        {\n            using (ResXResourceReader reader = new ResXResourceReader(resxFile))\n            {\n                reader.UseResXDataNodes = useDataNodes;\n\n                // Enumerate using IEnumerable.GetEnumerator().\n                Console.WriteLine(&quot;<br>  Default enumerator:&quot;);\n                foreach (DictionaryEntry entry in reader)\n                {\n                    ShowResourceItem(entry, useDataNodes);\n                }\n\n                // Enumerate using GetMetadataEnumerator()\n                IDictionaryEnumerator metadataEnumerator = reader.GetMetadataEnumerator();\n\n                Console.WriteLine(&quot;<br>  MetadataEnumerator:&quot;);\n                while (metadataEnumerator.MoveNext())\n                {\n                    ShowResourceItem(metadataEnumerator.Entry, useDataNodes);\n                }\n\n                // Enumerate using GetEnumerator()\n                IDictionaryEnumerator enumerator = reader.GetEnumerator();\n\n                Console.WriteLine(&quot;<br>  Enumerator:&quot;);\n                while (enumerator.MoveNext())\n                {\n                    ShowResourceItem(enumerator.Entry, useDataNodes);\n                }\n            }\n        }\n\n        public static void ShowResourceItem(DictionaryEntry entry, bool isDataNode)\n        {\n            // Use a null type resolver.\n            ITypeResolutionService typeres = null;\n            ResXDataNode dnode;\n\n            if (isDataNode)\n            {\n                // Display from node info.\n                dnode = (ResXDataNode)entry.Value;\n                Console.WriteLine(&quot;  {0}={1}&quot;, dnode.Name, dnode.GetValue(typeres));\n            }\n            else\n            {\n                // Display as DictionaryEntry info.\n                Console.WriteLine(&quot;  {0}={1}&quot;, entry.Key, entry.Value);\n            }\n        }\n    }\n}\n\n// The example program will have the following output:\n//\n// Enumerating as data items...\n//\n//   Default enumerator:\n//   DataSample=Sample DATA value\n//\n//   MetadataEnumerator:\n//   MetadataSample=Sample METADATA value\n//\n//   Enumerator:\n//   DataSample=Sample DATA value\n//\n// Enumerating as data nodes...\n//\n//   Default enumerator:\n//   DataSample=Sample DATA value\n//   MetadataSample=Sample METADATA value\n//\n//   MetadataEnumerator:\n//\n//   Enumerator:\n//   DataSample=Sample DATA value\n//   MetadataSample=Sample METADATA value\n</code></pre><p> The resource XML file used by the example contains one data node and one metadata node. To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;root&gt;  \n  &lt;resheader name=&quot;resmimetype&quot;&gt;  \n    &lt;value&gt;text/microsoft-resx&lt;/value&gt;  \n  &lt;/resheader&gt;  \n  &lt;resheader name=&quot;version&quot;&gt;  \n    &lt;value&gt;2.0&lt;/value&gt;  \n  &lt;/resheader&gt;  \n  &lt;resheader name=&quot;reader&quot;&gt;  \n    &lt;value&gt;System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    &lt;/value&gt;  \n  &lt;/resheader&gt;  \n  &lt;resheader name=&quot;writer&quot;&gt;  \n    &lt;value&gt;System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    &lt;/value&gt;  \n  &lt;/resheader&gt;  \n  &lt;data name=&quot;DataSample&quot; xml:space=&quot;preserve&quot;&gt;  \n    &lt;value&gt;Sample DATA value&lt;/value&gt;  \n  &lt;/data&gt;  \n  &lt;metadata name=&quot;MetadataSample&quot;&gt;  \n    &lt;value&gt;Sample METADATA value&lt;/value&gt;  \n  &lt;/metadata&gt;  \n&lt;/root&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_Close\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Close enables the resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> to be reallocated for other purposes. For more information about Close, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the resources of a file to the console, and then uses the Close method to shut down the reader and to make its resources available for other processes.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Resources.ResxresourceReader Example#1\">#using &lt;system.windows.forms.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Resources;\nusing namespace System::Collections;\nvoid main()\n{\n\n   // Create a ResXResourceReader for the file items.resx.\n   ResXResourceReader^ rsxr = gcnew ResXResourceReader( &quot;items.resx&quot; );\n\n\n   // Iterate through the resources and display the contents to the console.\n   IEnumerator^ myEnum = rsxr-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;{0}:&nbsp;&nbsp;&nbsp;&nbsp; {1}&quot;, d-&gt;Key, d-&gt;Value );\n   }\n\n\n   //Close the reader.\n   rsxr-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Resources.ResxresourceReader Example#1\">using System;\nusing System.Resources;\nusing System.Collections;\n\nclass ReadResXResources\n{\n   public static void Main()\n   {\n\n      // Create a ResXResourceReader for the file items.resx.\n      ResXResourceReader rsxr = new ResXResourceReader(&quot;items.resx&quot;);\n\n      // Iterate through the resources and display the contents to the console.\n      foreach (DictionaryEntry d in rsxr)\n      {\n    Console.WriteLine(d.Key.ToString() + &quot;:&nbsp;&nbsp;&nbsp;&nbsp;&quot; + d.Value.ToString());\n      }\n\n     //Close the reader.\n     rsxr.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResxresourceReader Example#1\">Imports System\nImports System.Resources\nImports System.Collections\nImports Microsoft.VisualBasic\n\nClass ReadResXResources\n   \n   Public Shared Sub Main()\n      \n      &#39; Create a ResXResourceReader for the file items.resx.\n      Dim rsxr As ResXResourceReader\n      rsxr = New ResXResourceReader(&quot;items.resx&quot;)\n\n      &#39; Iterate through the resources and display the contents to the console.\n      Dim d As DictionaryEntry\n      For Each d In  rsxr\n         Console.WriteLine(d.Key.ToString() + &quot;:&quot; + ControlChars.Tab + d.Value.ToString())\n      Next d\n      \n      &#39;Close the reader.\n      rsxr.Close()\n\n   End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be called by either the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_System_IDisposable_Dispose_\" data-linktype=\"relative-path\">System.IDisposable.Dispose</a> method or the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_System_IDisposable_Dispose_\" data-linktype=\"relative-path\">System.IDisposable.Dispose</a> invokes this method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes this method with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> references. This method invokes the <code>Dispose</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_Finalize\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>This member overrides the <span class=\"xref\">stem.Object.Finalize*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~ResXResourceReader ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_FromFileContents_System_String_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_FromFileContents_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromFileContents(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object and initializes it to read a string whose contents are in the form of an XML resource file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Resources.ResXResourceReader FromFileContents (string fileContents);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileContents</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing XML resource-formatted information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a></div>\r\n                  </div>\r\n                  <p>An object that reads resources from the <code>fileContents</code> string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_FromFileContents_System_String_System_ComponentModel_Design_ITypeResolutionService_\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_FromFileContents_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromFileContents(String,ITypeResolutionService)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <a class=\"xref\" href=\"system.componentmodel.design.ityperesolutionservice\" data-linktype=\"relative-path\">ITypeResolutionService</a> object to resolve type names specified in a resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileContents</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing XML resource-formatted information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.ityperesolutionservice\" data-linktype=\"relative-path\">ITypeResolutionService</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that resolves type names specified in a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a></div>\r\n                  </div>\r\n                  <p>An object that reads resources from the <code>fileContents</code> string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_FromFileContents_System_String_System_Reflection_AssemblyName___\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_FromFileContents_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromFileContents(String,AssemblyName[])</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a> objects to resolve type names specified in a resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileContents</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string whose contents are in the form of an XML resource file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a></div>\r\n                  </div>\r\n                  <p>An object that reads resources from the <code>fileContents</code> string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_GetEnumerator\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator for the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IDictionaryEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator for the current <a class=\"xref\" href=\"system.resources.resourcereader\" data-linktype=\"relative-path\">ResourceReader</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object. However, if the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_UseResXDataNodes_\" data-linktype=\"relative-path\">UseResXDataNodes</a> property is set to <code>true</code> before you call GetEnumerator, the resource items are retrieved as <a class=\"xref\" href=\"system.resources.resxdatanode\" data-linktype=\"relative-path\">ResXDataNode</a> objects. In this case, all resource nodes are returned regardless of type.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetEnumerator method to obtain an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that is used to enumerate the resources in a .resx file. The example includes a <code>CreateResourceFile</code> routine that creates the necessary resource file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Resources.ResXResourceReader.Class#1\">using System;\nusing System.Collections;\nusing System.Resources;\n\npublic class Example\n{\n   private const string resxFilename = @&quot;.\\CountryHeaders.resx&quot;;\n    \n   public static void Main()\n   {\n      // Create a resource file to read.\n      CreateResourceFile();\n      \n      // Enumerate the resources in the file.\n      ResXResourceReader rr = new ResXResourceReader(resxFilename);\n      IDictionaryEnumerator dict = rr.GetEnumerator();\n      while (dict.MoveNext())\n         Console.WriteLine(&quot;{0}: {1}&quot;, dict.Key, dict.Value);   \n   }\n\n   private static void CreateResourceFile()\n   {\n      ResXResourceWriter rw = new ResXResourceWriter(resxFilename);\n      string[] resNames = {&quot;Country&quot;, &quot;Population&quot;, &quot;Area&quot;, \n                           &quot;Capital&quot;, &quot;LCity&quot; };\n      string[] columnHeaders = { &quot;Country Name&quot;, &quot;Population (2010}&quot;, \n                                 &quot;Area&quot;, &quot;Capital&quot;, &quot;Largest City&quot; };\n      string[] comments = { &quot;The localized country name&quot;, &quot;&quot;, \n                            &quot;The area in square miles&quot;, &quot;&quot;, \n                            &quot;The largest city based on 2010 data&quot; };\n      rw.AddResource(&quot;Title&quot;, &quot;Country Information&quot;);\n      rw.AddResource(&quot;nColumns&quot;, resNames.Length);\n      for (int ctr = 0; ctr &lt; resNames.Length; ctr++) {\n         ResXDataNode node = new ResXDataNode(resNames[ctr], columnHeaders[ctr]);\n         node.Comment = comments[ctr];\n         rw.AddResource(node);\n      }\n      rw.Generate();\n      rw.Close();\n   }\n}\n// The example displays the following output:\n//       Title: Country Information\n//       nColumns: 5\n//       Country: Country Name\n//       Population: Population (2010}\n//       Area: Area\n//       Capital: Capital\n//       LCity: Largest City\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Resources.ResXResourceReader.Class#1\">Imports System.Collections\nImports System.Resources\n\nModule Example\n   Private Const resxFilename As String = &quot;.\\CountryHeaders.resx&quot;\n     \n   Public Sub Main()\n      &#39; Create a resource file to read.\n      CreateResourceFile()\n      \n      &#39; Enumerate the resources in the file.\n      Dim rr As New ResXResourceReader(resxFilename)\n      Dim dict As IDictionaryEnumerator = rr.GetEnumerator()\n      Do While dict.MoveNext()\n         Console.WriteLine(&quot;{0}: {1}&quot;, dict.Key, dict.Value)   \n      Loop\n   End Sub\n   \n   Private Sub CreateResourceFile()\n      Dim rw As New ResxResourceWriter(resxFilename)\n      Dim resNames() As String = {&quot;Country&quot;, &quot;Population&quot;, &quot;Area&quot;, \n                                  &quot;Capital&quot;, &quot;LCity&quot; }\n      Dim columnHeaders() As String = { &quot;Country Name&quot;, &quot;Population (2010}&quot;, \n                                        &quot;Area&quot;, &quot;Capital&quot;, &quot;Largest City&quot; }\n      Dim comments() As String = { &quot;The localized country name&quot;, &quot;&quot;, \n                                   &quot;The area in square miles&quot;, &quot;&quot;, \n                                   &quot;The largest city based on 2010 data&quot; }\n      rw.AddResource(&quot;Title&quot;, &quot;Country Information&quot;)\n      rw.AddResource(&quot;nColumns&quot;, resNames.Length)\n      For ctr As Integer = 0 To resNames.Length - 1\n         Dim node As New ResXDataNode(resNames(ctr), columnHeaders(ctr))\n         node.Comment = comments(ctr)\n         rw.AddResource(node)\n      Next\n      rw.Generate()\n      rw.Close()\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Title: Country Information\n&#39;       nColumns: 5\n&#39;       Country: Country Name\n&#39;       Population: Population (2010}\n&#39;       Area: Area\n&#39;       Capital: Capital\n&#39;       LCity: Largest City\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_GetMetadataEnumerator\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_GetMetadataEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMetadataEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator for the metadata in a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Resources are stored as name/value pairs in a resource file or stream. Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources. The GetMetadataEnumerator method provides an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that can retrieve the metadata from the resource file or stream associated with the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object. However, if the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_UseResXDataNodes_\" data-linktype=\"relative-path\">UseResXDataNodes</a> property is set to <code>true</code> before you call GetMetadataEnumerator, no resource nodes are retrieved.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetMetadataEnumerator method to iterate through the metadata resources in an XML resource file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_UseResXDataNodes_\" data-linktype=\"relative-path\">UseResXDataNodes</a> property.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Resources.ResxresourceReader Example#4\">                &#39; Enumerate using GetMetadataEnumerator()\n                Dim metadataEnumerator As IDictionaryEnumerator = reader.GetMetadataEnumerator()\n\n                Console.WriteLine(vbNewLine + &quot;  MetadataEnumerator:&quot;)\n                While metadataEnumerator.MoveNext()\n                    ShowResourceItem(metadataEnumerator.Entry, useDataNodes)\n                End While\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Resources.ResxresourceReader Example#4\">            // Enumerate using GetMetadataEnumerator()\n            IDictionaryEnumerator^ metadataEnumerator = reader-&gt;GetMetadataEnumerator();\n\n            Console::WriteLine(&quot;<br>  MetadataEnumerator:&quot;);\n            while (metadataEnumerator-&gt;MoveNext())\n            {\n                ShowResourceItem(metadataEnumerator-&gt;Entry, useDataNodes);\n            }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Resources.ResxresourceReader Example#4\">                // Enumerate using GetMetadataEnumerator()\n                IDictionaryEnumerator metadataEnumerator = reader.GetMetadataEnumerator();\n\n                Console.WriteLine(&quot;<br>  MetadataEnumerator:&quot;);\n                while (metadataEnumerator.MoveNext())\n                {\n                    ShowResourceItem(metadataEnumerator.Entry, useDataNodes);\n                }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator for the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object. For a description of this member, see the <span class=\"xref\">stem.Collections.IEnumerable.GetEnumerator*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> interface. To enumerate the resources in a .resx file, we recommend that you call the <a class=\"xref\" href=\"system.resources.resxresourcereader#System_Resources_ResXResourceReader_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> method, and then call the <code>MoveNext</code> method on the returned <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Resources_ResXResourceReader_System_IDisposable_Dispose\">\r\n    \r\n            <a id=\"System_Resources_ResXResourceReader_System_IDisposable_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDisposable.Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> and optionally releases the managed resources. For a description of this member, see the <span class=\"xref\">stem.IDisposable.Dispose*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDisposable.Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.resources.resxresourcereader\" data-linktype=\"relative-path\">ResXResourceReader</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Resources.ResXResourceReader.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Resources.ResXResourceReader.yml\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader..ctor\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.BasePath\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.Close\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.FromFileContents\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.GetMetadataEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.IDisposable.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Resources.ResXResourceReader.UseResXDataNodes\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8d13d998-0a5f-83cb-c40b-f207a2f278a3\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Resources\\ResXResourceReader.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Resources/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Resources.ResXResourceReader\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Resources.ResXResourceReader.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Resources.ResXResourceReader.yml","open_to_public_contributors":true,"api_name":["System.Resources.ResXResourceReader","System.Resources.ResXResourceReader..ctor","System.Resources.ResXResourceReader.BasePath","System.Resources.ResXResourceReader.Close","System.Resources.ResXResourceReader.Dispose","System.Resources.ResXResourceReader.Finalize","System.Resources.ResXResourceReader.FromFileContents","System.Resources.ResXResourceReader.GetEnumerator","System.Resources.ResXResourceReader.GetMetadataEnumerator","System.Resources.ResXResourceReader.IEnumerable.GetEnumerator","System.Resources.ResXResourceReader.IDisposable.Dispose","System.Resources.ResXResourceReader.UseResXDataNodes"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Resources.ResXResourceReader","System::Resources::ResXResourceReader","System.Resources.ResXResourceReader.#ctor","System::Resources::ResXResourceReader::#ctor","System.Resources.ResXResourceReader.BasePath","System::Resources::ResXResourceReader::BasePath","System.Resources.ResXResourceReader.Close","System::Resources::ResXResourceReader::Close","System.Resources.ResXResourceReader.Dispose","System::Resources::ResXResourceReader::Dispose","System.Resources.ResXResourceReader.Finalize","System::Resources::ResXResourceReader::Finalize","System.Resources.ResXResourceReader.FromFileContents","System::Resources::ResXResourceReader::FromFileContents","System.Resources.ResXResourceReader.GetEnumerator","System::Resources::ResXResourceReader::GetEnumerator","System.Resources.ResXResourceReader.GetMetadataEnumerator","System::Resources::ResXResourceReader::GetMetadataEnumerator","System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator","System::Resources::ResXResourceReader::System#Collections#IEnumerable#GetEnumerator","System.Resources.ResXResourceReader.System#IDisposable#Dispose","System::Resources::ResXResourceReader::System#IDisposable#Dispose","System.Resources.ResXResourceReader.UseResXDataNodes","System::Resources::ResXResourceReader::UseResXDataNodes"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8d13d998-0a5f-83cb-c40b-f207a2f278a3","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Resources\\ResXResourceReader.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Resources/ResXResourceReader.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ResXResourceReader class | Microsoft Docs","_op_ogTitle":"ResXResourceReader class","description":"Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.\n","toc_asset_id":"_splitted/System.Resources/toc.json","toc_rel":"_splitted/System.Resources/toc.json","source_url":"","ms.assetid":"System.Resources.ResXResourceReader","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.resources.resxresourcereader","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.resources.resxresourcereader","fileRelativePath":"System.Resources.ResXResourceReader.html"},"themesRelativePathToOutputRoot":"_themes/"}