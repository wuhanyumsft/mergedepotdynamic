{"content":"    \r\n    <h1 id=\"System_Nullable_1\">\r\n      <span class=\"lang-csharp\">Nullable&lt;T&gt;</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a value type that can be assigned <code>null</code>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct Nullable&lt;T&gt; where T : struct</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The underlying value type of the Nullable(T) generic type.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Nullable&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A type is said to be nullable if it can be assigned a value or can be assigned <code>null</code>, which means the type has no value whatsoever. By default, all reference types, such as <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, are nullable, but all value types, such as <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>, are not.  </p>\n<p> In C# and Visual Basic, you mark a value type as nullable by using the <code>?</code> notation after the value type. For example, <code>int?</code> in C# or <code>Integer?</code> in Visual Basic declares an integer value type that can be assigned <code>null</code>.  </p>\n<p> The Nullable(T) structure supports using only a value type as a nullable type because reference types are nullable by design.  </p>\n<p> The <a class=\"xref\" href=\"system.nullable\" data-linktype=\"relative-path\">Nullable</a> class provides complementary support for the Nullable(T) structure. The <a class=\"xref\" href=\"system.nullable\" data-linktype=\"relative-path\">Nullable</a> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  </p>\n<h2 id=\"fundamental-properties\">Fundamental Properties</h2>\n<p> The two fundamental members of the Nullable(T) structure are the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> and <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> properties. If the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property for a Nullable(T) object is <code>true</code>, the value of the object can be accessed with the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property. If the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property is <code>false</code>, the value of the object is undefined and an attempt to access the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<h2 id=\"boxing-and-unboxing\">Boxing and Unboxing</h2>\n<p> When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the Nullable(T) object, not the Nullable(T) object itself. That is, if the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property is <code>true</code>, the contents of the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new Nullable(T) structure initialized to the underlying value.  </p>\n<p> If the <code>HasValue</code> property of a nullable type is <code>false</code>, the result of a boxing operation is <code>null</code>. Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is <code>null</code>. When <code>null</code> is unboxed into a nullable type, the common language runtime creates a new Nullable(T) structure and initializes its <code>HasValue</code> property to <code>false</code>.  </p>\n<h2 id=\"includenetv451addincludesnet-v451-mdmd-and-windows-runtime-components\">.NET Framework 4.5.1 and Windows Runtime Components</h2>\n<p> Starting with the .NET Framework 4.5.1, you can include a Nullable(T) type as a member of a structure exported in a WinMD library. Previously, this was not supported.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1__ctor__0_\" data-linktype=\"self-bookmark\">Nullable&lt;T&gt;(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Nullable`1</span> structure to the specified value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_HasValue\" data-linktype=\"self-bookmark\">HasValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current <span class=\"xref\">stem.Nullable`1</span> object has a valid value of its underlying type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the current <span class=\"xref\">stem.Nullable`1</span> object if it has been assigned a valid underlying value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the current <span class=\"xref\">stem.Nullable`1</span> object is equal to a specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the hash code of the object returned by the <span class=\"xref\">stem.Nullable`1.Value*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_GetValueOrDefault\" data-linktype=\"self-bookmark\">GetValueOrDefault()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the value of the current <span class=\"xref\">stem.Nullable`1</span> object, or the object&#39;s default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_GetValueOrDefault__0_\" data-linktype=\"self-bookmark\">GetValueOrDefault(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the value of the current <span class=\"xref\">stem.Nullable`1</span> object, or the specified default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the text representation of the value of the current <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_op_Explicit_System_Nullable_T__to_T_\" data-linktype=\"self-bookmark\">op_Explicit(Nullable&lt;T&gt;)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_1_op_Implicit__0_\" data-linktype=\"self-bookmark\">op_Implicit(T)</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1__ctor__0_\">\r\n    \r\n            <a id=\"System_Nullable_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Nullable&lt;T&gt;(T)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Nullable`1</span> structure to the specified value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Nullable (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Nullable(T) constructor initializes the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property of the new <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object to <code>true</code>, and the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property to the value of the <code>value</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_HasValue\">\r\n    \r\n            <a id=\"System_Nullable_1_HasValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current <span class=\"xref\">stem.Nullable`1</span> object has a valid value of its underlying type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current <span class=\"xref\">stem.Nullable`1</span> object has a value; <code>false</code> if the current <span class=\"xref\">stem.Nullable`1</span> object has no value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the HasValue property is <code>true</code>, the value of the current <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object can be accessed with the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property. Otherwise, attempting to access its value throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the HasValue property of a <code>Nullable&lt;Integer&gt;</code> object to determine whether it should display the object&#39;s <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property or its <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_GetValueOrDefault_\" data-linktype=\"relative-path\">GetValueOrDefault</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Nullable~1.HasValue#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Nullable&lt;int&gt; n1 = new Nullable&lt;int&gt;(10);\n      Nullable&lt;int&gt; n2 = null;\n      Nullable&lt;int&gt; n3 = new Nullable&lt;int&gt;(20);\n      n3 = null;\n      Nullable&lt;int&gt;[] items = { n1, n2, n3 }; \n\n      foreach (var item in items) {\n         Console.WriteLine(&quot;Has a value: {0}&quot;, item.HasValue);\n         if (item.HasValue) {\n            Console.WriteLine(&quot;Type: {0}&quot;, item.GetType().Name);\n            Console.WriteLine(&quot;Value: {0}&quot;, item.Value);\n         }\n         else {\n            Console.WriteLine(&quot;Null: {0}&quot;, item == null);\n            Console.WriteLine(&quot;Default Value: {0}&quot;, item.GetValueOrDefault());\n         }\n         Console.WriteLine();\n      }                  \n   }\n}\n// The example displays the following output:\n//       Has a value: True\n//       Type: Int32\n//       Value: 10\n//       \n//       Has a value: False\n//       Null: True\n//       Default Value: 0\n//       \n//       Has a value: False\n//       Null: True\n//       Default Value: 0\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Nullable~1.HasValue#1\">Module Example\n   Public Sub Main()\n      Dim n1 As New Nullable(Of Integer)(10)\n      Dim n2 As Nullable(Of Integer)\n      Dim n3 As New Nullable(Of Integer)(20)\n      n3 = Nothing\n      Dim items() As Nullable(Of Integer) = { n1, n2, n3 }\n\n      For Each item In items\n         Console.WriteLine(&quot;Has a value: {0}&quot;, item.HasValue)\n         If item.HasValue Then\n            Console.WriteLine(&quot;Type: {0}&quot;, item.GetType().Name)\n            Console.WriteLine(&quot;Value: {0}&quot;, item.Value)\n         Else\n            Console.WriteLine(&quot;Null: {0}&quot;, item Is Nothing)\n            Console.WriteLine(&quot;Default Value: {0}&quot;, item.GetValueOrDefault())\n         End If\n         Console.WriteLine()\n      Next                  \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Has a value: True\n&#39;       Type: Int32\n&#39;       Value: 10\n&#39;       \n&#39;       Has a value: False\n&#39;       Null: True\n&#39;       Default Value: 0\n&#39;       \n&#39;       Has a value: False\n&#39;       Null: True\n&#39;       Default Value: 0\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_Value\">\r\n    \r\n            <a id=\"System_Nullable_1_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the current <span class=\"xref\">stem.Nullable`1</span> object if it has been assigned a valid underlying value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Value { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The value of the current <span class=\"xref\">stem.Nullable`1</span> object if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code>. An exception is thrown if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a value of type <code>T</code> has not been assigned to the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object, you can compare it to <code>null</code> and retrieve its <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property, but you cannot access its Value property or call its other members.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property of a <code>Nullable&lt;Integer&gt;</code> object to determine whether it should display the object&#39;s Value property or its <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_GetValueOrDefault_\" data-linktype=\"relative-path\">GetValueOrDefault</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Nullable~1.HasValue#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Nullable&lt;int&gt; n1 = new Nullable&lt;int&gt;(10);\n      Nullable&lt;int&gt; n2 = null;\n      Nullable&lt;int&gt; n3 = new Nullable&lt;int&gt;(20);\n      n3 = null;\n      Nullable&lt;int&gt;[] items = { n1, n2, n3 }; \n\n      foreach (var item in items) {\n         Console.WriteLine(&quot;Has a value: {0}&quot;, item.HasValue);\n         if (item.HasValue) {\n            Console.WriteLine(&quot;Type: {0}&quot;, item.GetType().Name);\n            Console.WriteLine(&quot;Value: {0}&quot;, item.Value);\n         }\n         else {\n            Console.WriteLine(&quot;Null: {0}&quot;, item == null);\n            Console.WriteLine(&quot;Default Value: {0}&quot;, item.GetValueOrDefault());\n         }\n         Console.WriteLine();\n      }                  \n   }\n}\n// The example displays the following output:\n//       Has a value: True\n//       Type: Int32\n//       Value: 10\n//       \n//       Has a value: False\n//       Null: True\n//       Default Value: 0\n//       \n//       Has a value: False\n//       Null: True\n//       Default Value: 0\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Nullable~1.HasValue#1\">Module Example\n   Public Sub Main()\n      Dim n1 As New Nullable(Of Integer)(10)\n      Dim n2 As Nullable(Of Integer)\n      Dim n3 As New Nullable(Of Integer)(20)\n      n3 = Nothing\n      Dim items() As Nullable(Of Integer) = { n1, n2, n3 }\n\n      For Each item In items\n         Console.WriteLine(&quot;Has a value: {0}&quot;, item.HasValue)\n         If item.HasValue Then\n            Console.WriteLine(&quot;Type: {0}&quot;, item.GetType().Name)\n            Console.WriteLine(&quot;Value: {0}&quot;, item.Value)\n         Else\n            Console.WriteLine(&quot;Null: {0}&quot;, item Is Nothing)\n            Console.WriteLine(&quot;Default Value: {0}&quot;, item.GetValueOrDefault())\n         End If\n         Console.WriteLine()\n      Next                  \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Has a value: True\n&#39;       Type: Int32\n&#39;       Value: 10\n&#39;       \n&#39;       Has a value: False\n&#39;       Null: True\n&#39;       Default Value: 0\n&#39;       \n&#39;       Has a value: False\n&#39;       Null: True\n&#39;       Default Value: 0\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Nullable_1_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the current <span class=\"xref\">stem.Nullable`1</span> object is equal to a specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>other</code> parameter is equal to the current <span class=\"xref\">stem.Nullable`1</span> object; otherwise, <code>false</code>.  </p>\n<p> This table describes how equality is defined for the compared values:  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td><code>true</code></td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>false</code>, and the <code>other</code> parameter is <code>null</code>. That is, two null values are equal by definition.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code>, and the value returned by the <span class=\"xref\">stem.Nullable`1.Value*</span> property is equal to the <code>other</code> parameter.<br>\n </td></tr><tr><td><code>false</code></td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for the current <span class=\"xref\">stem.Nullable`1</span> structure is <code>true</code>, and the <code>other</code> parameter is <code>null</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for the current <span class=\"xref\">stem.Nullable`1</span> structure is <code>false</code>, and the <code>other</code> parameter is not <code>null</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for the current <span class=\"xref\">stem.Nullable`1</span> structure is <code>true</code>, and the value returned by the <span class=\"xref\">stem.Nullable`1.Value*</span> property is not equal to the <code>other</code> parameter.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property of the current <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> structure is <code>true</code> and the <code>other</code> argument is not <code>null</code>, equality is determined by passing the <code>other</code> parameter to the <code>Equals</code> method of the underlying value of the current <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> structure.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether an object and a <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object are equal to the current <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"system.nullableOfT.Equals#1\">&#39; This code example demonstrates the Nullable(Of T).Equals \n&#39; methods.\n\nImports System\n\nClass Sample\n    Public Shared Sub Main() \n        Dim nullInt1 As Nullable(Of Integer) = 100 \n        Dim nullInt2 As Nullable(Of Integer) = 200\n        Dim myObj As Object\n        \n    &#39; Determine if two nullable of System.Int32 values are equal. \n    &#39; The nullable objects have different values.\n        Console.Write(&quot;1) nullInt1 and nullInt2 &quot;)\n        If nullInt1.Equals(nullInt2) Then\n            Console.Write(&quot;are&quot;)\n        Else\n            Console.Write(&quot;are not&quot;)\n        End If\n        Console.WriteLine(&quot; equal.&quot;)\n        \n    &#39; Determine if a nullable of System.Int32 and an object \n    &#39; are equal. The object contains the boxed value of the\n    &#39; nullable object.\n        myObj = CType(nullInt1, Object)\n        Console.Write(&quot;2) nullInt1 and myObj &quot;)\n        If nullInt1.Equals(myObj) Then\n            Console.Write(&quot;are&quot;)\n        Else\n            Console.Write(&quot;are not&quot;)\n        End If\n        Console.WriteLine(&quot; equal.&quot;)\n    End Sub &#39;Main \nEnd Class &#39;Sample\n\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;1) nullInt1 and nullInt2 are not equal.\n&#39;2) nullInt1 and myObj are equal.\n&#39;\n</code></pre><pre><code class=\"lang-cs\" name=\"system.nullableOfT.Equals#1\">// This code example demonstrates the Nullable&lt;T&gt;.Equals \n// methods.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    int? nullInt1 = 100;\n    int? nullInt2 = 200;\n    object myObj;\n\n// Determine if two nullable of System.Int32 values are equal.\n// The nullable objects have different values.\n    Console.Write(&quot;1) nullInt1 and nullInt2 &quot;);\n    if (nullInt1.Equals(nullInt2))\n        Console.Write(&quot;are&quot;);\n    else\n        Console.Write(&quot;are not&quot;);\n    Console.WriteLine(&quot; equal.&quot;);\n\n// Determine if a nullable of System.Int32 and an object \n// are equal. The object contains the boxed value of the\n// nullable object.\n\n    myObj = (object)nullInt1;\n    Console.Write(&quot;2) nullInt1 and myObj &quot;);\n    if (nullInt1.Equals(myObj))\n        Console.Write(&quot;are&quot;);\n    else\n        Console.Write(&quot;are not&quot;);\n    Console.WriteLine(&quot; equal.&quot;);\n    }\n}\n\n/*\nThis code example produces the following results:\n\n1) nullInt1 and nullInt2 are not equal.\n2) nullInt1 and myObj are equal.\n\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_GetHashCode\">\r\n    \r\n            <a id=\"System_Nullable_1_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the hash code of the object returned by the <span class=\"xref\">stem.Nullable`1.Value*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code of the object returned by the <span class=\"xref\">stem.Nullable`1.Value*</span> property if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code>, or zero if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_GetValueOrDefault\">\r\n    \r\n            <a id=\"System_Nullable_1_GetValueOrDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValueOrDefault()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the value of the current <span class=\"xref\">stem.Nullable`1</span> object, or the object&#39;s default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T GetValueOrDefault ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property if the  <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code>; otherwise, the default value of the current <span class=\"xref\">stem.Nullable`1</span> object. The type of the default value is the type argument of the current <span class=\"xref\">stem.Nullable`1</span> object, and the value of the default value consists solely of binary zeroes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_GetValueOrDefault_\" data-linktype=\"relative-path\">GetValueOrDefault</a> method returns a value even if the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property is <code>false</code> (unlike the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property, which throws an exception).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example retrieves the value of a <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object if that value is defined; otherwise, it retrieves the default value or a specific default value.  </p>\n<pre><code class=\"lang-cs\" name=\"system.nullableOfT.GetValueOrDefault#1\">// This code example demonstrates the \n// Nullable&lt;T&gt;.GetValueOrDefault methods.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    float? mySingle = 12.34f;\n    float? yourSingle = -1.0f;\n\n   Console.WriteLine(&quot;*** Display a value or the default value ***<br>&quot;);\n// Display the values of mySingle and yourSingle.\n\n    Display(&quot;A1&quot;, mySingle, yourSingle);\n\n// Assign the value of mySingle to yourSingle, then display the values \n// of mySingle and yourSingle. The yourSingle variable is assigned the \n// value 12.34 because mySingle has a value.\n\n    yourSingle = mySingle.GetValueOrDefault();\n    Display(&quot;A2&quot;, mySingle, yourSingle);\n\n// Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n// defined for mySingle. Then assign the value of mySingle to yourSingle and\n// display the values of both variables. The default value of all binary zeroes \n// is assigned to yourSingle because mySingle has no value.\n\n    mySingle = null;\n    yourSingle = mySingle.GetValueOrDefault();\n    Display(&quot;A3&quot;, mySingle, yourSingle);\n\n// Reassign the original values of mySingle and yourSingle.\n    mySingle = 12.34f;\n    yourSingle = -1.0f;\n\n    Console.Write(&quot;<br>*** Display a value or the &quot;);\n    Console.WriteLine(&quot;specified default value ***<br>&quot;);\n\n// Display the values of mySingle and yourSingle.\n    Display(&quot;B1&quot;, mySingle, yourSingle);\n\n// Assign the value of mySingle to yourSingle, then display the values \n// of mySingle and yourSingle. The yourSingle variable is assigned the \n// value 12.34 because mySingle has a value.\n\n    yourSingle = mySingle.GetValueOrDefault(-222.22f);\n    Display(&quot;B2&quot;, mySingle, yourSingle);\n\n// Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n// defined for mySingle. Then assign the value of mySingle to yourSingle and\n// display the values of both variables. The specified default value of -333.33\n// is assigned to yourSingle because mySingle has no value.\n\n    mySingle = null;\n    yourSingle = mySingle.GetValueOrDefault(-333.33f);\n    Display(&quot;B3&quot;, mySingle, yourSingle);\n\n    }\n\n// Display the values of two nullable of System.Single structures.\n// The Console.WriteLine method automatically calls the ToString methods of \n// each input argument to display its values. If no value is defined for a\n// nullable type, the ToString method for that argument returns the empty\n// string (&quot;&quot;).\n    public static void Display(string title, float? dspMySingle, float? dspYourSingle)\n    {\n    Console.WriteLine(&quot;{0}) mySingle = [{1}], yourSingle = [{2}]&quot;, \n                      title, dspMySingle, dspYourSingle);    \n    }\n}\n\n/*\nThis code example produces the following results:\n\nA1) mySingle = [12.34], yourSingle = [-1]\nA2) mySingle = [12.34], yourSingle = [12.34]\nA3) mySingle = [], yourSingle = [0]\n\n*** Display a value or the specified default value ***\n\nB1) mySingle = [12.34], yourSingle = [-1]\nB2) mySingle = [12.34], yourSingle = [12.34]\nB3) mySingle = [], yourSingle = [-333.33]\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"system.nullableOfT.GetValueOrDefault#1\">&#39; This code example demonstrates the \n&#39; Nullable(Of T).GetValueOrDefault methods.\n\nImports System\n\nClass Sample\n    Public Shared Sub Main() \n        Dim mySingle As Nullable(Of System.Single) = 12.34F \n        Dim yourSingle As Nullable(Of System.Single) = - 1.0F \n        \n        Console.WriteLine(&quot;*** Display a value or the default value ***&quot; &amp; vbCrLf)\n    &#39; Display the values of mySingle and yourSingle.\n        Display(&quot;A1&quot;, mySingle, yourSingle)\n        \n    &#39; Assign the value of mySingle to yourSingle, then display the values \n    &#39; of mySingle and yourSingle. The yourSingle variable is assigned the \n    &#39; value 12.34 because mySingle has a value.\n        yourSingle = mySingle.GetValueOrDefault()\n        Display(&quot;A2&quot;, mySingle, yourSingle)\n        \n    &#39; Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n    &#39; defined for mySingle. Then assign the value of mySingle to yourSingle and\n    &#39; display the values of both variables. The default value of all binary zeroes \n    &#39; is assigned to yourSingle because mySingle has no value.\n        mySingle = Nothing\n        yourSingle = mySingle.GetValueOrDefault()\n        Display(&quot;A3&quot;, mySingle, yourSingle)\n        \n    &#39; Reassign the original values of mySingle and yourSingle.\n        mySingle = 12.34F\n        yourSingle = - 1.0F\n        \n        Console.Write(vbCrLf &amp; &quot;*** Display a value or the &quot;)\n        Console.WriteLine(&quot;specified default value ***&quot; &amp; vbCrLf)\n        \n    &#39; Display the values of mySingle and yourSingle.\n        Display(&quot;B1&quot;, mySingle, yourSingle)\n        \n    &#39; Assign the value of mySingle to yourSingle, then display the values \n    &#39; of mySingle and yourSingle. The yourSingle variable is assigned the \n    &#39; value 12.34 because mySingle has a value.\n        yourSingle = mySingle.GetValueOrDefault(- 222.22F)\n        Display(&quot;B2&quot;, mySingle, yourSingle)\n        \n    &#39; Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n    &#39; defined for mySingle. Then assign the value of mySingle to yourSingle and\n    &#39; display the values of both variables. The specified default value of -333.33\n    &#39; is assigned to yourSingle because mySingle has no value.\n        mySingle = Nothing\n        yourSingle = mySingle.GetValueOrDefault(- 333.33F)\n        Display(&quot;B3&quot;, mySingle, yourSingle)\n    \n    End Sub &#39;Main\n     \n    \n    &#39; Display the values of two nullable of System.Single structures.\n    &#39; The Console.WriteLine method automatically calls the ToString methods of \n    &#39; each input argument to display its values. If no value is defined for a\n    &#39; nullable type, the ToString method for that argument returns the empty\n    &#39; string (&quot;&quot;).\n\n    Public Shared Sub Display(ByVal title As String, _\n                              ByVal dspMySingle As Nullable(Of System.Single), _\n                              ByVal dspYourSingle As Nullable(Of System.Single))\n        If (True) Then\n            Console.WriteLine(&quot;{0}) mySingle = [{1}], yourSingle = [{2}]&quot;, _\n                               title, dspMySingle, dspYourSingle)\n        End If\n    End Sub &#39;Display\nEnd Class &#39;Sample\n\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;A1) mySingle = [12.34], yourSingle = [-1]\n&#39;A2) mySingle = [12.34], yourSingle = [12.34]\n&#39;A3) mySingle = [], yourSingle = [0]\n&#39;\n&#39;*** Display a value or the specified default value ***\n&#39;\n&#39;B1) mySingle = [12.34], yourSingle = [-1]\n&#39;B2) mySingle = [12.34], yourSingle = [12.34]\n&#39;B3) mySingle = [], yourSingle = [-333.33]\n&#39;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_GetValueOrDefault__0_\">\r\n    \r\n            <a id=\"System_Nullable_1_GetValueOrDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValueOrDefault(T)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the value of the current <span class=\"xref\">stem.Nullable`1</span> object, or the specified default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T GetValueOrDefault (T defaultValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value to return if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code>; otherwise, the <code>defaultValue</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_GetValueOrDefault_\" data-linktype=\"relative-path\">GetValueOrDefault</a> method returns a value even if the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property is <code>false</code> (unlike the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property, which throws an exception).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example retrieves the value of a <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object if that value is defined; otherwise, it retrieves the default value or a specific default value.  </p>\n<pre><code class=\"lang-cs\" name=\"system.nullableOfT.GetValueOrDefault#1\">// This code example demonstrates the \n// Nullable&lt;T&gt;.GetValueOrDefault methods.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    float? mySingle = 12.34f;\n    float? yourSingle = -1.0f;\n\n   Console.WriteLine(&quot;*** Display a value or the default value ***<br>&quot;);\n// Display the values of mySingle and yourSingle.\n\n    Display(&quot;A1&quot;, mySingle, yourSingle);\n\n// Assign the value of mySingle to yourSingle, then display the values \n// of mySingle and yourSingle. The yourSingle variable is assigned the \n// value 12.34 because mySingle has a value.\n\n    yourSingle = mySingle.GetValueOrDefault();\n    Display(&quot;A2&quot;, mySingle, yourSingle);\n\n// Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n// defined for mySingle. Then assign the value of mySingle to yourSingle and\n// display the values of both variables. The default value of all binary zeroes \n// is assigned to yourSingle because mySingle has no value.\n\n    mySingle = null;\n    yourSingle = mySingle.GetValueOrDefault();\n    Display(&quot;A3&quot;, mySingle, yourSingle);\n\n// Reassign the original values of mySingle and yourSingle.\n    mySingle = 12.34f;\n    yourSingle = -1.0f;\n\n    Console.Write(&quot;<br>*** Display a value or the &quot;);\n    Console.WriteLine(&quot;specified default value ***<br>&quot;);\n\n// Display the values of mySingle and yourSingle.\n    Display(&quot;B1&quot;, mySingle, yourSingle);\n\n// Assign the value of mySingle to yourSingle, then display the values \n// of mySingle and yourSingle. The yourSingle variable is assigned the \n// value 12.34 because mySingle has a value.\n\n    yourSingle = mySingle.GetValueOrDefault(-222.22f);\n    Display(&quot;B2&quot;, mySingle, yourSingle);\n\n// Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n// defined for mySingle. Then assign the value of mySingle to yourSingle and\n// display the values of both variables. The specified default value of -333.33\n// is assigned to yourSingle because mySingle has no value.\n\n    mySingle = null;\n    yourSingle = mySingle.GetValueOrDefault(-333.33f);\n    Display(&quot;B3&quot;, mySingle, yourSingle);\n\n    }\n\n// Display the values of two nullable of System.Single structures.\n// The Console.WriteLine method automatically calls the ToString methods of \n// each input argument to display its values. If no value is defined for a\n// nullable type, the ToString method for that argument returns the empty\n// string (&quot;&quot;).\n    public static void Display(string title, float? dspMySingle, float? dspYourSingle)\n    {\n    Console.WriteLine(&quot;{0}) mySingle = [{1}], yourSingle = [{2}]&quot;, \n                      title, dspMySingle, dspYourSingle);    \n    }\n}\n\n/*\nThis code example produces the following results:\n\nA1) mySingle = [12.34], yourSingle = [-1]\nA2) mySingle = [12.34], yourSingle = [12.34]\nA3) mySingle = [], yourSingle = [0]\n\n*** Display a value or the specified default value ***\n\nB1) mySingle = [12.34], yourSingle = [-1]\nB2) mySingle = [12.34], yourSingle = [12.34]\nB3) mySingle = [], yourSingle = [-333.33]\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"system.nullableOfT.GetValueOrDefault#1\">&#39; This code example demonstrates the \n&#39; Nullable(Of T).GetValueOrDefault methods.\n\nImports System\n\nClass Sample\n    Public Shared Sub Main() \n        Dim mySingle As Nullable(Of System.Single) = 12.34F \n        Dim yourSingle As Nullable(Of System.Single) = - 1.0F \n        \n        Console.WriteLine(&quot;*** Display a value or the default value ***&quot; &amp; vbCrLf)\n    &#39; Display the values of mySingle and yourSingle.\n        Display(&quot;A1&quot;, mySingle, yourSingle)\n        \n    &#39; Assign the value of mySingle to yourSingle, then display the values \n    &#39; of mySingle and yourSingle. The yourSingle variable is assigned the \n    &#39; value 12.34 because mySingle has a value.\n        yourSingle = mySingle.GetValueOrDefault()\n        Display(&quot;A2&quot;, mySingle, yourSingle)\n        \n    &#39; Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n    &#39; defined for mySingle. Then assign the value of mySingle to yourSingle and\n    &#39; display the values of both variables. The default value of all binary zeroes \n    &#39; is assigned to yourSingle because mySingle has no value.\n        mySingle = Nothing\n        yourSingle = mySingle.GetValueOrDefault()\n        Display(&quot;A3&quot;, mySingle, yourSingle)\n        \n    &#39; Reassign the original values of mySingle and yourSingle.\n        mySingle = 12.34F\n        yourSingle = - 1.0F\n        \n        Console.Write(vbCrLf &amp; &quot;*** Display a value or the &quot;)\n        Console.WriteLine(&quot;specified default value ***&quot; &amp; vbCrLf)\n        \n    &#39; Display the values of mySingle and yourSingle.\n        Display(&quot;B1&quot;, mySingle, yourSingle)\n        \n    &#39; Assign the value of mySingle to yourSingle, then display the values \n    &#39; of mySingle and yourSingle. The yourSingle variable is assigned the \n    &#39; value 12.34 because mySingle has a value.\n        yourSingle = mySingle.GetValueOrDefault(- 222.22F)\n        Display(&quot;B2&quot;, mySingle, yourSingle)\n        \n    &#39; Assign null (Nothing in Visual Basic) to mySingle, which means no value is\n    &#39; defined for mySingle. Then assign the value of mySingle to yourSingle and\n    &#39; display the values of both variables. The specified default value of -333.33\n    &#39; is assigned to yourSingle because mySingle has no value.\n        mySingle = Nothing\n        yourSingle = mySingle.GetValueOrDefault(- 333.33F)\n        Display(&quot;B3&quot;, mySingle, yourSingle)\n    \n    End Sub &#39;Main\n     \n    \n    &#39; Display the values of two nullable of System.Single structures.\n    &#39; The Console.WriteLine method automatically calls the ToString methods of \n    &#39; each input argument to display its values. If no value is defined for a\n    &#39; nullable type, the ToString method for that argument returns the empty\n    &#39; string (&quot;&quot;).\n\n    Public Shared Sub Display(ByVal title As String, _\n                              ByVal dspMySingle As Nullable(Of System.Single), _\n                              ByVal dspYourSingle As Nullable(Of System.Single))\n        If (True) Then\n            Console.WriteLine(&quot;{0}) mySingle = [{1}], yourSingle = [{2}]&quot;, _\n                               title, dspMySingle, dspYourSingle)\n        End If\n    End Sub &#39;Display\nEnd Class &#39;Sample\n\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;A1) mySingle = [12.34], yourSingle = [-1]\n&#39;A2) mySingle = [12.34], yourSingle = [12.34]\n&#39;A3) mySingle = [], yourSingle = [0]\n&#39;\n&#39;*** Display a value or the specified default value ***\n&#39;\n&#39;B1) mySingle = [12.34], yourSingle = [-1]\n&#39;B2) mySingle = [12.34], yourSingle = [12.34]\n&#39;B3) mySingle = [], yourSingle = [-333.33]\n&#39;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_ToString\">\r\n    \r\n            <a id=\"System_Nullable_1_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the text representation of the value of the current <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text representation of the value of the current <span class=\"xref\">stem.Nullable`1</span> object if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code>, or an empty string (&quot;&quot;) if the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString property returns the string yielded by calling the <code>ToString</code> property of the object returned by the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of the current <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"system.nullableOfT.ToString#1\">&#39; This code example demonstrates the \n&#39; Nullable&lt;T&gt;.ToString method.\n\nImports System\n\nClass Sample\n    Public Shared Sub Main() \n        Dim nullableDate As Nullable(Of DateTime)\n    &#39; Display the current date and time.\n        nullableDate = DateTime.Now\n        Display(&quot;1)&quot;, nullableDate)\n        \n    &#39; Assign null (Nothing in Visual Basic) to nullableDate, then \n    &#39; display its value.\n        nullableDate = Nothing\n        Display(&quot;2)&quot;, nullableDate)\n    End Sub &#39;Main\n\n    &#39;  Display the text representation of a nullable DateTime.\n    Public Shared Sub Display(ByVal title As String, _\n                              ByVal dspDT As Nullable(Of DateTime))\n        Dim msg As String = dspDT.ToString()\n\n        Console.Write(&quot;{0} &quot;, title)\n        If String.IsNullOrEmpty(msg) Then\n            Console.WriteLine(&quot;The nullable DateTime has no defined value.&quot;)\n        Else\n            Console.WriteLine(&quot;The current date and time is {0}.&quot;, msg)\n        End If\n    End Sub &#39;Display \nEnd Class &#39;Sample\n\n&#39;This code example produces the following results:\n&#39;\n&#39;1) The current date and time is 4/19/2005 8:28:14 PM.\n&#39;2) The nullable DateTime has no defined value.\n&#39;\n</code></pre><pre><code class=\"lang-cs\" name=\"system.nullableOfT.ToString#1\">// This code example demonstrates the \n// Nullable&lt;T&gt;.ToString method.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    DateTime? nullableDate;\n\n// Display the current date and time.\n    nullableDate = DateTime.Now;\n    Display(&quot;1)&quot;, nullableDate);\n\n// Assign null (Nothing in Visual Basic) to nullableDate, then \n// display its value.\n    nullableDate = null;\n    Display(&quot;2)&quot;, nullableDate);\n    }\n\n// Display the text representation of a nullable DateTime.\n    public static void Display(string title, DateTime? dspDT)\n    {\n    string msg = dspDT.ToString();\n\n    Console.Write(&quot;{0} &quot;, title);\n    if (String.IsNullOrEmpty(msg))\n        Console.WriteLine(&quot;The nullable DateTime has no defined value.&quot;);\n    else\n        Console.WriteLine(&quot;The current date and time is {0}.&quot;, msg);\n    }\n}\n\n/*\nThis code example produces the following results:\n\n1) The current date and time is 4/19/2005 8:28:14 PM.\n2) The nullable DateTime has no defined value.\n\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_op_Explicit_System_Nullable_T__to_T_\">\r\n    \r\n            <a id=\"System_Nullable_1_op_Explicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Explicit(Nullable&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static T op_Explicit (Nullable&lt;T&gt; value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_1_op_Implicit__0_\">\r\n    \r\n            <a id=\"System_Nullable_1_op_Implicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Implicit(T)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Nullable&lt;T&gt; op_Implicit (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable<t></t></a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Nullable-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Nullable-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.Equals\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.GetValueOrDefault\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.HasValue\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.op_Explicit\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.op_op_Explicit\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.op_Implicit\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.op_op_Implicit\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.ToString\">\r\n<meta name=\"APIName\" content=\"System.Nullable&lt;T&gt;.Value\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a322606a-6251-38d9-0fb4-79affcd12832\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a value type that can be assigned null.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Nullable`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Nullable-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Nullable-1.yml","open_to_public_contributors":true,"api_name":["System.Nullable<T>","System.Nullable<T>..ctor","System.Nullable<T>.Equals","System.Nullable<T>.GetHashCode","System.Nullable<T>.GetValueOrDefault","System.Nullable<T>.HasValue","System.Nullable<T>.op_Explicit","System.Nullable<T>.op_op_Explicit","System.Nullable<T>.op_Implicit","System.Nullable<T>.op_op_Implicit","System.Nullable<T>.ToString","System.Nullable<T>.Value"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Nullable`1","System::Nullable`1","System.Nullable`1.#ctor","System::Nullable`1::#ctor","System.Nullable`1.Equals","System::Nullable`1::Equals","System.Nullable`1.GetHashCode","System::Nullable`1::GetHashCode","System.Nullable`1.GetValueOrDefault","System::Nullable`1::GetValueOrDefault","System.Nullable`1.HasValue","System::Nullable`1::HasValue","System.Nullable`1.op_Explicit","System::Nullable`1::op_Explicit","System.Nullable`1.op_Implicit","System::Nullable`1::op_Implicit","System.Nullable`1.ToString","System::Nullable`1::ToString","System.Nullable`1.Value","System::Nullable`1::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a322606a-6251-38d9-0fb4-79affcd12832","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/Nullable`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Nullable<T> struct | Microsoft Docs","_op_ogTitle":"Nullable<T> struct","description":"Represents a value type that can be assigned null.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Nullable`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.nullable-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.nullable-1","fileRelativePath":"System.Nullable-1.html"},"themesRelativePathToOutputRoot":"_themes/"}