{"content":"    \r\n    <h1 id=\"System_Text_UTF7Encoding\">\r\n      <span class=\"lang-csharp\">UTF7Encoding</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a UTF-7 encoding of Unicode characters.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class UTF7Encoding : System.Text.Encoding</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">System.Text.Encoding</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UTF7Encoding</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_ASCII\" data-linktype=\"relative-path\">ASCII</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_BigEndianUnicode\" data-linktype=\"relative-path\">BigEndianUnicode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_BodyName\" data-linktype=\"relative-path\">BodyName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_CodePage\" data-linktype=\"relative-path\">CodePage</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Convert_System_Text_Encoding_System_Text_Encoding_System_Byte___\" data-linktype=\"relative-path\">Convert(Encoding,Encoding,Byte[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Convert_System_Text_Encoding_System_Text_Encoding_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">Convert(Encoding,Encoding,Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_DecoderFallback\" data-linktype=\"relative-path\">DecoderFallback</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Default\" data-linktype=\"relative-path\">Default</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_EncoderFallback\" data-linktype=\"relative-path\">EncoderFallback</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_EncodingName\" data-linktype=\"relative-path\">EncodingName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetByteCount_System_Char___\" data-linktype=\"relative-path\">GetByteCount(Char[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetBytes_System_Char___\" data-linktype=\"relative-path\">GetBytes(Char[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetBytes_System_Char___System_Int32_System_Int32_\" data-linktype=\"relative-path\">GetBytes(Char[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetBytes_System_String_\" data-linktype=\"relative-path\">GetBytes(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetCharCount_System_Byte___\" data-linktype=\"relative-path\">GetCharCount(Byte[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetChars_System_Byte___\" data-linktype=\"relative-path\">GetChars(Byte[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetChars_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">GetChars(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncoding_System_Int32_\" data-linktype=\"relative-path\">GetEncoding(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncoding_System_Int32_System_Text_EncoderFallback_System_Text_DecoderFallback_\" data-linktype=\"relative-path\">GetEncoding(Int32,EncoderFallback,DecoderFallback)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncoding_System_String_\" data-linktype=\"relative-path\">GetEncoding(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncoding_System_String_System_Text_EncoderFallback_System_Text_DecoderFallback_\" data-linktype=\"relative-path\">GetEncoding(String,EncoderFallback,DecoderFallback)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncodings\" data-linktype=\"relative-path\">GetEncodings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetPreamble\" data-linktype=\"relative-path\">GetPreamble()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetString_System_Byte__System_Int32_\" data-linktype=\"relative-path\">GetString(Byte*,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetString_System_Byte___\" data-linktype=\"relative-path\">GetString(Byte[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_HeaderName\" data-linktype=\"relative-path\">HeaderName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsAlwaysNormalized\" data-linktype=\"relative-path\">IsAlwaysNormalized()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsAlwaysNormalized_System_Text_NormalizationForm_\" data-linktype=\"relative-path\">IsAlwaysNormalized(NormalizationForm)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsBrowserDisplay\" data-linktype=\"relative-path\">IsBrowserDisplay</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsBrowserSave\" data-linktype=\"relative-path\">IsBrowserSave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsMailNewsDisplay\" data-linktype=\"relative-path\">IsMailNewsDisplay</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsMailNewsSave\" data-linktype=\"relative-path\">IsMailNewsSave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsReadOnly\" data-linktype=\"relative-path\">IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_IsSingleByte\" data-linktype=\"relative-path\">IsSingleByte</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_RegisterProvider_System_Text_EncodingProvider_\" data-linktype=\"relative-path\">RegisterProvider(EncodingProvider)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Unicode\" data-linktype=\"relative-path\">Unicode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF32\" data-linktype=\"relative-path\">UTF32</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF7\" data-linktype=\"relative-path\">UTF7</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8\" data-linktype=\"relative-path\">UTF8</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_WebName\" data-linktype=\"relative-path\">WebName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_WindowsCodePage\" data-linktype=\"relative-path\">WindowsCodePage</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes. Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.  </p>\n<p> The UTF-7 encoding represents Unicode characters as sequences of 7-bit ASCII characters. This encoding supports certain protocols for which it is required, most often e-mail or newsgroup protocols. Since UTF-7 is not particularly secure or robust, and most modern systems allow 8-bit encodings, UTF-8 should normally be preferred to UTF-7.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> UTF7Encoding does not provide error detection. For security reasons, the application should use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.  </p>\n</div>\n<p> For more information about the UTFs and other encodings supported by <a class=\"xref\" href=\"system.text\" data-linktype=\"relative-path\">System.Text</a>, see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method determines how many bytes result in encoding a set of Unicode characters, and the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> method performs the actual encoding.  </p>\n<p> Likewise, the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a> method determines how many characters result in decoding a sequence of bytes, and the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> and <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetString_\" data-linktype=\"relative-path\">GetString</a> methods perform the actual decoding.  </p>\n<p> UTF7Encoding corresponds to the Windows code page 65000.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The state of a UTF-7 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding__ctor\" data-linktype=\"self-bookmark\">UTF7Encoding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding__ctor_System_Boolean_\" data-linktype=\"self-bookmark\">UTF7Encoding(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> class. A parameter specifies whether to allow optional characters.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the specified object is equal to the current <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetByteCount_System_String_\" data-linktype=\"self-bookmark\">GetByteCount(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the number of bytes produced by encoding the characters in the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetByteCount_System_Char__System_Int32_\" data-linktype=\"self-bookmark\">GetByteCount(Char*,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetByteCount_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetByteCount(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetBytes_System_Char__System_Int32_System_Byte__System_Int32_\" data-linktype=\"self-bookmark\">GetBytes(Char*,Int32,Byte*,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetBytes_System_Char___System_Int32_System_Int32_System_Byte___System_Int32_\" data-linktype=\"self-bookmark\">GetBytes(Char[],Int32,Int32,Byte[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes a set of characters from the specified character array into the specified byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetBytes_System_String_System_Int32_System_Int32_System_Byte___System_Int32_\" data-linktype=\"self-bookmark\">GetBytes(String,Int32,Int32,Byte[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encodes a set of characters from the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> into the specified byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetCharCount_System_Byte__System_Int32_\" data-linktype=\"self-bookmark\">GetCharCount(Byte*,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetCharCount_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetCharCount(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetChars_System_Byte__System_Int32_System_Char__System_Int32_\" data-linktype=\"self-bookmark\">GetChars(Byte*,Int32,Char*,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetChars_System_Byte___System_Int32_System_Int32_System_Char___System_Int32_\" data-linktype=\"self-bookmark\">GetChars(Byte[],Int32,Int32,Char[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decodes a sequence of bytes from the specified byte array into the specified character array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetDecoder\" data-linktype=\"self-bookmark\">GetDecoder()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetEncoder\" data-linktype=\"self-bookmark\">GetEncoder()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for the current <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetMaxByteCount_System_Int32_\" data-linktype=\"self-bookmark\">GetMaxByteCount(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the maximum number of bytes produced by encoding the specified number of characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetMaxCharCount_System_Int32_\" data-linktype=\"self-bookmark\">GetMaxCharCount(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the maximum number of characters produced by decoding the specified number of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Text_UTF7Encoding_GetString_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetString(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decodes a range of bytes from a byte array into a string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding__ctor\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UTF7Encoding()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UTF7Encoding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates an instance that does not allow optional characters. Calling the UTF7Encoding constructor is equivalent to calling the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding__ctor_System_Boolean_\" data-linktype=\"relative-path\">System.Text.UTF7Encoding.UTF7Encoding(Boolean)</a> constructor that takes an <code>allowOptionals</code> parameter and specifying <code>false</code> for that parameter.  </p>\n<p> If an instance allows optional characters, Unicode code points are encoded with a corresponding optional character instead of a modified base 64 character. The optional characters are exclamation point (&quot;!&quot;), backward slash (&quot;\\&quot;), vertical line (&quot;&#124;&quot;), double quote (&quot;&quot;&quot;), number sign (&quot;#&quot;), dollar sign (&quot;$&quot;), percent sign (&quot;%&quot;), ampersand (&quot;&amp;&quot;), asterisk (&quot;*&quot;), semicolon (&quot;;&quot;), left angle bracket (&quot;&lt;&quot;), right angle bracket (&quot;&gt;&quot;), left curly bracket (&quot;{&quot;), right curly bracket (&quot;}&quot;), left square bracket (&quot;[&quot;), right square bracket (&quot;]&quot;), equal sign (&quot;=&quot;), at sign (&quot;@&quot;), circumflex accent (&quot;^&quot;), underscore (&quot;_&quot;), and grave accent (&quot;`&quot;).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a new <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> instance and display the name of the encoding.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.ctor1 Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        UTF7Encoding utf7 = new UTF7Encoding();\n        String encodingName = utf7.EncodingName;\n        Console.WriteLine(&quot;Encoding name: &quot; + encodingName);\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.ctor1 Example#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   String^ encodingName = utf7-&gt;EncodingName;\n   Console::WriteLine( &quot;Encoding name: {0}&quot;, encodingName );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.ctor1 Example#1\">Imports System\nImports System.Text\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim utf7 As New UTF7Encoding()\n        Dim encodingName As String = utf7.EncodingName\n        Console.WriteLine(&quot;Encoding name: &quot; &amp; encodingName)\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding__ctor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UTF7Encoding(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> class. A parameter specifies whether to allow optional characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UTF7Encoding (bool allowOptionals);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowOptionals</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to specify that optional characters are allowed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an instance allows optional characters, Unicode code points are encoded with a corresponding optional character instead of a modified base 64 character. The optional characters are exclamation point (&quot;!&quot;), backward slash (&quot;\\&quot;), vertical line (&quot;&#124;&quot;), double quote (&quot;&quot;&quot;), number sign (&quot;#&quot;), dollar sign (&quot;$&quot;), percent sign (&quot;%&quot;), ampersand (&quot;&amp;&quot;), asterisk (&quot;*&quot;), semicolon (&quot;;&quot;), left angle bracket (&quot;&lt;&quot;), right angle bracket (&quot;&gt;&quot;), left curly bracket (&quot;{&quot;), right curly bracket (&quot;}&quot;), left square bracket (&quot;[&quot;), right square bracket (&quot;]&quot;), equal sign (&quot;=&quot;), at sign (&quot;@&quot;), circumflex accent (&quot;^&quot;), underscore (&quot;_&quot;), and grave accent (&quot;`&quot;).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a new <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> instance that allows optional characters.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.ctor2 Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n\n        // A few optional characters.\n        string chars = &quot;!@#$&quot;;\n\n        // The default Encoding does not allow optional characters.\n        // Alternate byte values are used.\n        UTF7Encoding utf7 = new UTF7Encoding();\n        Byte[] bytes1 = utf7.GetBytes(chars);\n        \n        Console.WriteLine(&quot;Default UTF7 Encoding:&quot;);\n        ShowArray(bytes1);\n\n        // Convert back to characters.\n        Console.WriteLine(&quot;Characters:&quot;);\n        ShowArray(utf7.GetChars(bytes1));\n\n        // Now, allow optional characters.\n        // Optional characters are encoded with their normal code points.\n        UTF7Encoding utf7AllowOptionals = new UTF7Encoding(true);\n        Byte[] bytes2 = utf7AllowOptionals.GetBytes(chars);\n        \n        Console.WriteLine(&quot;UTF7 Encoding with optional characters allowed:&quot;);\n        ShowArray(bytes2);\n\n        // Convert back to characters.\n        Console.WriteLine(&quot;Characters:&quot;);\n        ShowArray(utf7AllowOptionals.GetChars(bytes2));\n    }\n\n    public static void ShowArray(Array theArray) {\n        foreach (Object o in theArray) {\n            Console.Write(&quot;[{0}]&quot;, o);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.ctor2 Example#1\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Collections;\nvoid ShowArray( Array^ theArray )\n{\n   IEnumerator^ myEnum = theArray-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Object^ o = safe_cast&lt;Object^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;[{0}]&quot;, o );\n   }\n\n   Console::WriteLine();\n}\n\nint main()\n{\n   \n   // A few optional characters.\n   String^ chars = &quot;!@#$&quot;;\n   \n   // The default Encoding does not allow optional characters.\n   // Alternate Byte values are used.\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   array&lt;Byte&gt;^bytes1 = utf7-&gt;GetBytes( chars );\n   Console::WriteLine( &quot;Default UTF7 Encoding:&quot; );\n   ShowArray( bytes1 );\n   \n   // Convert back to characters.\n   Console::WriteLine( &quot;Characters:&quot; );\n   ShowArray( utf7-&gt;GetChars( bytes1 ) );\n   \n   // Now, allow optional characters.\n   // Optional characters are encoded with their normal code points.\n   UTF7Encoding^ utf7AllowOptionals = gcnew UTF7Encoding( true );\n   array&lt;Byte&gt;^bytes2 = utf7AllowOptionals-&gt;GetBytes( chars );\n   Console::WriteLine( &quot;UTF7 Encoding with optional characters allowed:&quot; );\n   ShowArray( bytes2 );\n   \n   // Convert back to characters.\n   Console::WriteLine( &quot;Characters:&quot; );\n   ShowArray( utf7AllowOptionals-&gt;GetChars( bytes2 ) );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.ctor2 Example#1\">Imports System\nImports System.Text\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        \n        &#39; A few optional characters.\n        Dim chars As String = &quot;!@#$&quot;\n        \n        &#39; The default Encoding does not allow optional characters.\n        &#39; Alternate byte values are used.\n        Dim utf7 As New UTF7Encoding()\n        Dim bytes1 As Byte() = utf7.GetBytes(chars)\n        \n        Console.WriteLine(&quot;Default UTF7 Encoding:&quot;)\n        ShowArray(bytes1)\n        \n        &#39; Convert back to characters.\n        Console.WriteLine(&quot;Characters:&quot;)\n        ShowArray(utf7.GetChars(bytes1))\n        \n        &#39; Now, allow optional characters.\n        &#39; Optional characters are encoded with their normal code points.\n        Dim utf7AllowOptionals As New UTF7Encoding(True)\n        Dim bytes2 As Byte() = utf7AllowOptionals.GetBytes(chars)\n        \n        Console.WriteLine(&quot;UTF7 Encoding with optional characters allowed:&quot;)\n        ShowArray(bytes2)\n        \n        &#39; Convert back to characters.\n        Console.WriteLine(&quot;Characters:&quot;)\n        ShowArray(utf7AllowOptionals.GetChars(bytes2))\n    End Sub &#39;Main\n    \n    \n    Public Shared Sub ShowArray(theArray As Array)\n        Dim o As Object\n        For Each o In  theArray\n            Console.Write(&quot;[{0}]&quot;, o)\n        Next o\n        Console.WriteLine()\n    End Sub &#39;ShowArray\nEnd Class &#39;UTF7EncodingExample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the specified object is equal to the current <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare to the current <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>value</code> is a <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object and is equal to the current <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> objects are equal if they both either allow or disallow optional characters, and if their underlying <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_EncoderFallback_\" data-linktype=\"relative-path\">EncoderFallback</a> and <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_DecoderFallback_\" data-linktype=\"relative-path\">DecoderFallback</a> properties are equal.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetByteCount_System_String_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetByteCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetByteCount(String)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the number of bytes produced by encoding the characters in the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetByteCount (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> object containing the set of characters to encode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes produced by encoding the specified characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting number of bytes is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for fuller explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size that <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> requires to store the resulting bytes, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a> method generally executes faster.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method to return the number of bytes required to encode a character array.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetByteCount Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        // Unicode characters.\n        Char[] chars = new Char[] {\n            &#39;\\u0023&#39;, // #\n            &#39;\\u0025&#39;, // %\n            &#39;\\u03a0&#39;, // Pi\n            &#39;\\u03a3&#39;  // Sigma\n        };\n\n        UTF7Encoding utf7 = new UTF7Encoding();\n        int byteCount = utf7.GetByteCount(chars, 1, 2);\n        Console.WriteLine(\n            &quot;{0} bytes needed to encode characters.&quot;, byteCount\n        );\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetByteCount Example#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   \n   // Unicode characters.\n   \n   // Pi\n   // Sigma\n   array&lt;Char&gt;^chars = {L&#39;\\u03a0&#39;,L&#39;\\u03a3&#39;,L&#39;\\u03a6&#39;,L&#39;\\u03a9&#39;};\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int byteCount = utf7-&gt;GetByteCount( chars, 1, 2 );\n   Console::WriteLine( &quot;{0} bytes needed to encode characters.&quot;, byteCount );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetByteCount Example#1\">Imports System\nImports System.Text\nImports Microsoft.VisualBasic.Strings\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        &#39; Unicode characters.\n        &#39; ChrW(35)  = #\n        &#39; ChrW(37)  = %\n        &#39; ChrW(928) = Pi\n        &#39; ChrW(931) = Sigma\n        Dim chars() As Char = {ChrW(35), ChrW(37), ChrW(928), ChrW(931)}\n        \n        Dim utf7 As New UTF7Encoding()\n        Dim byteCount As Integer = utf7.GetByteCount(chars, 1, 2)\n        Console.WriteLine(&quot;{0} bytes needed to encode characters.&quot;, byteCount)\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetByteCount_System_Char__System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetByteCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetByteCount(Char*,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetByteCount (char* chars, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the first character to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to encode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes produced by encoding the specified characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>chars</code> is <code>null</code>(<code>Nothing</code>in Visual Basic .NET).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The resulting number of bytes is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size that <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> requires to store the resulting bytes, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a> method generally executes faster.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetByteCount_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetByteCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetByteCount(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetByteCount (char[] chars, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array containing the set of characters to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first character to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to encode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes produced by encoding the specified characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>chars</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>index</code> and <code>count</code> do not denote a valid range in <code>chars</code>.  </p>\n<p> -or-  </p>\n<p> The resulting number of bytes is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> to store the resulting bytes, the application uses GetByteCount. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>. The GetByteCount method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a> method generally executes faster.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetByteCount method to return the number of bytes required to encode an array of Unicode characters.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetByteCount Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        // Unicode characters.\n        Char[] chars = new Char[] {\n            &#39;\\u0023&#39;, // #\n            &#39;\\u0025&#39;, // %\n            &#39;\\u03a0&#39;, // Pi\n            &#39;\\u03a3&#39;  // Sigma\n        };\n\n        UTF7Encoding utf7 = new UTF7Encoding();\n        int byteCount = utf7.GetByteCount(chars, 1, 2);\n        Console.WriteLine(\n            &quot;{0} bytes needed to encode characters.&quot;, byteCount\n        );\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetByteCount Example#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   \n   // Unicode characters.\n   \n   // Pi\n   // Sigma\n   array&lt;Char&gt;^chars = {L&#39;\\u03a0&#39;,L&#39;\\u03a3&#39;,L&#39;\\u03a6&#39;,L&#39;\\u03a9&#39;};\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int byteCount = utf7-&gt;GetByteCount( chars, 1, 2 );\n   Console::WriteLine( &quot;{0} bytes needed to encode characters.&quot;, byteCount );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetByteCount Example#1\">Imports System\nImports System.Text\nImports Microsoft.VisualBasic.Strings\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        &#39; Unicode characters.\n        &#39; ChrW(35)  = #\n        &#39; ChrW(37)  = %\n        &#39; ChrW(928) = Pi\n        &#39; ChrW(931) = Sigma\n        Dim chars() As Char = {ChrW(35), ChrW(37), ChrW(928), ChrW(931)}\n        \n        Dim utf7 As New UTF7Encoding()\n        Dim byteCount As Integer = utf7.GetByteCount(chars, 1, 2)\n        Console.WriteLine(&quot;{0} bytes needed to encode characters.&quot;, byteCount)\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetBytes_System_Char__System_Int32_System_Byte__System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBytes(Char*,Int32,Byte*,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the first character to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the location at which to start writing the resulting sequence of bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The actual number of bytes written at the location indicated by <code>bytes</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>chars</code> is <code>null</code>(<code>Nothing</code>).  </p>\n<p> -or-  </p>\n<p> <code>bytes</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>charCount</code> or <code>byteCount</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>byteCount</code> is less than the resulting number of bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for fuller explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> to store the resulting bytes, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a> method generally executes faster.  </p>\n<p> Data to be converted, such as data read from a stream, might be available only in sequential blocks. In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> or the <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> provided by the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> method or the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> method, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. Invalid characters are encoded as a modified base 64 character. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetBytes_System_Char___System_Int32_System_Int32_System_Byte___System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBytes(Char[],Int32,Int32,Byte[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes a set of characters from the specified character array into the specified byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array containing the set of characters to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first character to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array to contain the resulting sequence of bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index at which to start writing the resulting sequence of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The actual number of bytes written into <code>bytes</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>chars</code> is <code>null</code>(<code>Nothing</code>).  </p>\n<p> -or-  </p>\n<p> <code>bytes</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>charIndex</code> or <code>charCount</code> or <code>byteIndex</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>charIndex</code> and <code>charCount</code> do not denote a valid range in <code>chars</code>.  </p>\n<p> -or-  </p>\n<p> <code>byteIndex</code> is not a valid index in <code>bytes</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> does not have enough capacity from <code>byteIndex</code> to the end of the array to accommodate the resulting bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for fuller explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> to store the resulting bytes, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a> method generally executes faster.  </p>\n<p> Data to be converted, such as data read from a stream, might be available only in sequential blocks. In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> or the <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> provided by the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> method or the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> method, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. Invalid characters are encoded as a modified base 64 character. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> method to encode a range of characters from a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> and store the encoded bytes in a range of elements in a byte array.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetBytes Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        Byte[] bytes;\n        // Unicode characters.\n        Char[] chars = new Char[] {\n            &#39;\\u0023&#39;, // #\n            &#39;\\u0025&#39;, // %\n            &#39;\\u03a0&#39;, // Pi\n            &#39;\\u03a3&#39;  // Sigma\n        };\n        \n        UTF7Encoding utf7 = new UTF7Encoding();\n        \n        int byteCount = utf7.GetByteCount(chars, 1, 2);\n        bytes = new Byte[byteCount];\n        int bytesEncodedCount = utf7.GetBytes(chars, 1, 2, bytes, 0);\n        \n        Console.WriteLine(\n            &quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount\n        );\n\n        Console.Write(&quot;Encoded bytes: &quot;);\n        foreach (Byte b in bytes) {\n            Console.Write(&quot;[{0}]&quot;, b);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetBytes Example#1\">Imports System\nImports System.Text\nImports Microsoft.VisualBasic.strings\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim bytes() As Byte\n        &#39; Unicode characters.\n        &#39; ChrW(35)  = #\n        &#39; ChrW(37)  = %\n        &#39; ChrW(928) = Pi\n        &#39; ChrW(931) = Sigma\n        Dim chars() As Char = {ChrW(35), ChrW(37), ChrW(928), ChrW(931)}\n        \n        Dim utf7 As New UTF7Encoding()\n        \n        Dim byteCount As Integer = utf7.GetByteCount(chars, 1, 2)\n        bytes = New Byte(byteCount - 1) {}\n        Dim bytesEncodedCount As Integer = utf7.GetBytes(chars, 1, 2, bytes, 0)\n        \n        Console.WriteLine(&quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount)\n        \n        Console.Write(&quot;Encoded bytes: &quot;)\n        Dim b As Byte\n        For Each b In  bytes\n            Console.Write(&quot;[{0}]&quot;, b)\n        Next b\n        Console.WriteLine()\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetBytes Example#1\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Collections;\nint main()\n{\n   array&lt;Byte&gt;^bytes;\n   \n   // Unicode characters.\n   \n   // Pi\n   // Sigma\n   array&lt;Char&gt;^chars = {L&#39;\\u03a0&#39;,L&#39;\\u03a3&#39;,L&#39;\\u03a6&#39;,L&#39;\\u03a9&#39;};\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int byteCount = utf7-&gt;GetByteCount( chars, 1, 2 );\n   bytes = gcnew array&lt;Byte&gt;(byteCount);\n   int bytesEncodedCount = utf7-&gt;GetBytes( chars, 1, 2, bytes, 0 );\n   Console::WriteLine( &quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount );\n   Console::Write( &quot;Encoded bytes: &quot; );\n   IEnumerator^ myEnum = bytes-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;[{0}]&quot;, b );\n   }\n\n   Console::WriteLine();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetBytes_System_String_System_Int32_System_Int32_System_Byte___System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBytes(String,Int32,Int32,Byte[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Encodes a set of characters from the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> into the specified byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the set of characters to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first character to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array to contain the resulting sequence of bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index at which to start writing the resulting sequence of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The actual number of bytes written into <code>bytes</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>(<code>Nothing</code>).  </p>\n<p> -or-  </p>\n<p> <code>bytes</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>charIndex</code> or <code>charCount</code> or <code>byteIndex</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>charIndex</code> and <code>charCount</code> do not denote a valid range in <code>chars</code>.  </p>\n<p> -or-  </p>\n<p> <code>byteIndex</code> is not a valid index in <code>bytes</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> does not have enough capacity from <code>byteIndex</code> to the end of the array to accommodate the resulting bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for fuller explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by GetBytes to store the resulting bytes, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a> method generally executes faster.  </p>\n<p> Data to be converted, such as data read from a stream, might be available only in sequential blocks. In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> or the <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> provided by the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> method or the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> method, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. Invalid characters are encoded as a modified base 64 character. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetBytes method to encode a range of elements from a Unicode character array, and store the encoded bytes in a range of elements in a byte array.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetBytes Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        Byte[] bytes;\n        // Unicode characters.\n        Char[] chars = new Char[] {\n            &#39;\\u0023&#39;, // #\n            &#39;\\u0025&#39;, // %\n            &#39;\\u03a0&#39;, // Pi\n            &#39;\\u03a3&#39;  // Sigma\n        };\n        \n        UTF7Encoding utf7 = new UTF7Encoding();\n        \n        int byteCount = utf7.GetByteCount(chars, 1, 2);\n        bytes = new Byte[byteCount];\n        int bytesEncodedCount = utf7.GetBytes(chars, 1, 2, bytes, 0);\n        \n        Console.WriteLine(\n            &quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount\n        );\n\n        Console.Write(&quot;Encoded bytes: &quot;);\n        foreach (Byte b in bytes) {\n            Console.Write(&quot;[{0}]&quot;, b);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetBytes Example#1\">Imports System\nImports System.Text\nImports Microsoft.VisualBasic.strings\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim bytes() As Byte\n        &#39; Unicode characters.\n        &#39; ChrW(35)  = #\n        &#39; ChrW(37)  = %\n        &#39; ChrW(928) = Pi\n        &#39; ChrW(931) = Sigma\n        Dim chars() As Char = {ChrW(35), ChrW(37), ChrW(928), ChrW(931)}\n        \n        Dim utf7 As New UTF7Encoding()\n        \n        Dim byteCount As Integer = utf7.GetByteCount(chars, 1, 2)\n        bytes = New Byte(byteCount - 1) {}\n        Dim bytesEncodedCount As Integer = utf7.GetBytes(chars, 1, 2, bytes, 0)\n        \n        Console.WriteLine(&quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount)\n        \n        Console.Write(&quot;Encoded bytes: &quot;)\n        Dim b As Byte\n        For Each b In  bytes\n            Console.Write(&quot;[{0}]&quot;, b)\n        Next b\n        Console.WriteLine()\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetBytes Example#1\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Collections;\nint main()\n{\n   array&lt;Byte&gt;^bytes;\n   \n   // Unicode characters.\n   \n   // Pi\n   // Sigma\n   array&lt;Char&gt;^chars = {L&#39;\\u03a0&#39;,L&#39;\\u03a3&#39;,L&#39;\\u03a6&#39;,L&#39;\\u03a9&#39;};\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int byteCount = utf7-&gt;GetByteCount( chars, 1, 2 );\n   bytes = gcnew array&lt;Byte&gt;(byteCount);\n   int bytesEncodedCount = utf7-&gt;GetBytes( chars, 1, 2, bytes, 0 );\n   Console::WriteLine( &quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount );\n   Console::Write( &quot;Encoded bytes: &quot; );\n   IEnumerator^ myEnum = bytes-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;[{0}]&quot;, b );\n   }\n\n   Console::WriteLine();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetCharCount_System_Byte__System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetCharCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCharCount(Byte*,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetCharCount (byte* bytes, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the first byte to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to decode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters produced by decoding the specified sequence of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The resulting number of characters is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for fuller explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.DecoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> to store the resulting characters, use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a> method generally executes faster.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetCharCount_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetCharCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCharCount(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetCharCount (byte[] bytes, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array containing the sequence of bytes to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first byte to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to decode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters produced by decoding the specified sequence of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>index</code> and <code>count</code> do not denote a valid range in <code>bytes</code>.  </p>\n<p> -or-  </p>\n<p> The resulting number of characters is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.DecoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> to store the resulting characters, use GetCharCount. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a>. The GetCharCount method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a> method generally executes faster.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetCharCount method to return the number of characters produced by decoding a range of elements in a byte array.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Text.UnicodeEncoding.GetCharCount Example#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   array&lt;Byte&gt;^bytes = {85,0,110,0,105,0,99,0,111,0,100,0,101,0};\n   UnicodeEncoding^ Unicode = gcnew UnicodeEncoding;\n   int charCount = Unicode-&gt;GetCharCount( bytes, 2, 8 );\n   Console::WriteLine( &quot;{0} characters needed to decode bytes.&quot;, charCount );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UnicodeEncoding.GetCharCount Example#1\">Imports System\nImports System.Text\n\nClass UnicodeEncodingExample\n    \n    Public Shared Sub Main()\n        Dim bytes() As Byte = {85, 0, 110, 0, 105, 0, 99, 0, 111, 0, 100, 0, 101, 0}\n        \n        Dim uni As New UnicodeEncoding()\n        Dim charCount As Integer = uni.GetCharCount(bytes, 2, 8)\n        Console.WriteLine(&quot;{0} characters needed to decode bytes.&quot;, charCount)\n    End Sub &#39;Main\nEnd Class &#39;UnicodeEncodingExample\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.UnicodeEncoding.GetCharCount Example#1\">using System;\nusing System.Text;\n\nclass UnicodeEncodingExample {\n    public static void Main() {\n        Byte[] bytes = new Byte[] {\n            85, 0, 110, 0, 105, 0, 99, 0, 111, 0, 100, 0, 101, 0\n        };\n\n        UnicodeEncoding Unicode = new UnicodeEncoding();\n        int charCount = Unicode.GetCharCount(bytes, 2, 8);\n        Console.WriteLine(\n            &quot;{0} characters needed to decode bytes.&quot;, charCount\n        );\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetChars_System_Byte__System_Int32_System_Char__System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetChars_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChars(Byte*,Int32,Char*,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the first byte to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>chars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the location at which to start writing the resulting set of characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The actual number of characters written at the location indicated by <code>chars</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> is <code>null</code>(<code>Nothing</code>).  </p>\n<p> -or-  </p>\n<p> <code>chars</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>byteCount</code> or <code>charCount</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>charCount</code> is less than the resulting number of characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.DecoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> to store the resulting characters, use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a> method generally executes faster.  </p>\n<p> Data to be converted, such as data read from a stream, might be available only in sequential blocks. In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> or the <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> provided by the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> method or the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> method, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. When invalid bytes are encountered, <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> generally emits the invalid bytes. If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the <code>chars</code> array, and any shift sequence is terminated. For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetChars_System_Byte___System_Int32_System_Int32_System_Char___System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetChars_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChars(Byte[],Int32,Int32,Char[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Decodes a sequence of bytes from the specified byte array into the specified character array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array containing the sequence of bytes to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first byte to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>chars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to contain the resulting set of characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>charIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index at which to start writing the resulting set of characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The actual number of characters written into <code>chars</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> is <code>null</code>(<code>Nothing</code>).  </p>\n<p> -or-  </p>\n<p> <code>chars</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>byteIndex</code> or <code>byteCount</code> or <code>charIndex</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>byteindex</code> and <code>byteCount</code> do not denote a valid range in <code>bytes</code>.  </p>\n<p> -or-  </p>\n<p> <code>charIndex</code> is not a valid index in <code>chars</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>chars</code> does not have enough capacity from <code>charIndex</code> to the end of the array to accommodate the resulting characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.DecoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by GetChars to store the resulting characters, use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a>. To calculate the maximum array size, the application should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a>. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a> method generally allows allocation of less memory, while the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a> method generally executes faster.  </p>\n<p> Data to be converted, such as data read from a stream, might be available only in sequential blocks. In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> or the <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> provided by the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> method or the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> method, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. When invalid bytes are encountered, <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> generally emits the invalid bytes. If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the <code>chars</code> array, and any shift sequence is terminated. For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetChars method to decode a range of elements in a byte array and store the result in a character array.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetChars Example#1\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Collections;\nint main()\n{\n   array&lt;Char&gt;^chars;\n   array&lt;Byte&gt;^bytes = {85,84,70,55,32,69,110,99,111,100,105,110,103,32,69,120,97,109,112,108,101};\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int charCount = utf7-&gt;GetCharCount( bytes, 2, 8 );\n   chars = gcnew array&lt;Char&gt;(charCount);\n   int charsDecodedCount = utf7-&gt;GetChars( bytes, 2, 8, chars, 0 );\n   Console::WriteLine( &quot;{0} characters used to decode bytes.&quot;, charsDecodedCount );\n   Console::Write( &quot;Decoded chars: &quot; );\n   IEnumerator^ myEnum = chars-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Char c = safe_cast&lt;Char&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;[{0}]&quot;, c.ToString() );\n   }\n\n   Console::WriteLine();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetChars Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        Char[] chars;\n        Byte[] bytes = new Byte[] {\n             85,  84,  70,  55,  32,  69, 110,\n             99, 111, 100, 105, 110, 103,  32,\n             69, 120,  97, 109, 112, 108, 101\n        };\n\n        UTF7Encoding utf7 = new UTF7Encoding();\n\n        int charCount = utf7.GetCharCount(bytes, 2, 8);\n        chars = new Char[charCount];\n        int charsDecodedCount = utf7.GetChars(bytes, 2, 8, chars, 0);\n\n        Console.WriteLine(\n            &quot;{0} characters used to decode bytes.&quot;, charsDecodedCount\n        );\n\n        Console.Write(&quot;Decoded chars: &quot;);\n        foreach (Char c in chars) {\n            Console.Write(&quot;[{0}]&quot;, c);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetChars Example#1\">Imports System\nImports System.Text\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim chars() As Char\n        Dim bytes() As Byte = { _\n            85,  84,  70,  55,  32,  69, 110, _\n            99, 111, 100, 105, 110, 103,  32, _\n            69, 120,  97, 109, 112, 108, 101 _\n        }\n        \n        Dim utf7 As New UTF7Encoding()\n        \n        Dim charCount As Integer = utf7.GetCharCount(bytes, 2, 8)\n        chars = New Char(charCount - 1) {}\n        Dim charsDecodedCount As Integer = utf7.GetChars(bytes, 2, 8, chars, 0)\n        \n        Console.WriteLine(&quot;{0} characters used to decode bytes.&quot;, charsDecodedCount)\n        \n        Console.Write(&quot;Decoded chars: &quot;)\n        Dim c As Char\n        For Each c In  chars\n            Console.Write(&quot;[{0}]&quot;, c)\n        Next c\n        Console.WriteLine()\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetDecoder\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetDecoder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDecoder()</div>        \r\n          </div>\r\n    \r\n            <p>Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Text.Decoder GetDecoder ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.text.decoder#System_Text_Decoder_GetChars_\" data-linktype=\"relative-path\">GetChars</a> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> method of this class. However, a <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> maintains state information between calls so it can correctly decode byte sequences that span blocks. The <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation. Therefore, GetDecoder and <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetDecoder method to obtain a decoder to convert the UTF-7 encoded bytes into a sequence of characters.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetDecoder Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        Char[] chars;\n        Byte[] bytes = new Byte[] {\n            99, 43, 65, 119, 67, 103, 111, 65, 45\n        };\n\n        Decoder utf7Decoder = Encoding.UTF7.GetDecoder();\n\n        int charCount = utf7Decoder.GetCharCount(bytes, 0, bytes.Length);\n        chars = new Char[charCount];\n        int charsDecodedCount = utf7Decoder.GetChars(bytes, 0, bytes.Length, chars, 0);\n\n        Console.WriteLine(\n            &quot;{0} characters used to decode bytes.&quot;, charsDecodedCount\n        );\n\n        Console.Write(&quot;Decoded chars: &quot;);\n        foreach (Char c in chars) {\n            Console.Write(&quot;[{0}]&quot;, c);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetDecoder Example#1\">Imports System\nImports System.Text\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim chars() As Char\n        Dim bytes() As Byte = {99, 43, 65, 119, 67, 103, 111, 65, 45}\n        \n        Dim utf7Decoder As Decoder = Encoding.UTF7.GetDecoder()\n        \n        Dim charCount As Integer = utf7Decoder.GetCharCount(bytes, 0, bytes.Length)\n        chars = New Char(charCount - 1) {}\n        Dim charsDecodedCount As Integer = utf7Decoder.GetChars(bytes, 0, bytes.Length, chars, 0)\n        \n        Console.WriteLine(&quot;{0} characters used to decode bytes.&quot;, charsDecodedCount)\n        \n        Console.Write(&quot;Decoded chars: &quot;)\n        Dim c As Char\n        For Each c In  chars\n            Console.Write(&quot;[{0}]&quot;, c)\n        Next c\n        Console.WriteLine()\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetDecoder Example#1\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Collections;\nint main()\n{\n   array&lt;Char&gt;^chars;\n   array&lt;Byte&gt;^bytes = {99,43,65,119,67,103,111,65,45};\n   Decoder^ utf7Decoder = Encoding::UTF7-&gt;GetDecoder();\n   int charCount = utf7Decoder-&gt;GetCharCount( bytes, 0, bytes-&gt;Length );\n   chars = gcnew array&lt;Char&gt;(charCount);\n   int charsDecodedCount = utf7Decoder-&gt;GetChars( bytes, 0, bytes-&gt;Length, chars, 0 );\n   Console::WriteLine( &quot;{0} characters used to decode bytes.&quot;, charsDecodedCount );\n   Console::Write( &quot;Decoded chars: &quot; );\n   IEnumerator^ myEnum = chars-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Char c = safe_cast&lt;Char&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;[{0}]&quot;, c.ToString() );\n   }\n\n   Console::WriteLine();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetEncoder\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetEncoder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEncoder()</div>        \r\n          </div>\r\n    \r\n            <p>Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Text.Encoder GetEncoder ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.text.decoder#System_Text_Decoder_GetChars_\" data-linktype=\"relative-path\">GetChars</a> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> method. However, a <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> maintains state information between calls so it can correctly decode byte sequences that span blocks. The <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation. Therefore, <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> and GetEncoder are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetEncoder method to obtain an encoder to convert a sequence of characters into a UTF-7 encoded sequence of bytes.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetEncoder Example#1\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Collections;\nint main()\n{\n   array&lt;Char&gt;^chars = {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,L&#39;\\u0300&#39;,L&#39;\\ua0a0&#39;};\n   array&lt;Byte&gt;^bytes;\n   Encoder^ utf7Encoder = Encoding::UTF7-&gt;GetEncoder();\n   int byteCount = utf7Encoder-&gt;GetByteCount( chars, 2, 3, true );\n   bytes = gcnew array&lt;Byte&gt;(byteCount);\n   int bytesEncodedCount = utf7Encoder-&gt;GetBytes( chars, 2, 3, bytes, 0, true );\n   Console::WriteLine( &quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount );\n   Console::Write( &quot;Encoded bytes: &quot; );\n   IEnumerator^ myEnum = bytes-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;[{0}]&quot;, b );\n   }\n\n   Console::WriteLine();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetEncoder Example#1\">Imports System\nImports System.Text\nImports Microsoft.VisualBasic.Strings\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        &#39;Characters:\n        &#39; ChrW(97) = a\n        &#39; ChrW(98) = b\n        &#39; ChrW(99) = c\n        &#39; ChrW(768) = `\n        &#39; ChrW(41120) = valid unicode code point, but not a character\n        Dim chars() As Char = {ChrW(97), ChrW(98), ChrW(99), ChrW(768), ChrW(41120)}\n        Dim bytes() As Byte\n        \n        Dim utf7Encoder As Encoder = Encoding.UTF7.GetEncoder()\n        \n        Dim byteCount As Integer = utf7Encoder.GetByteCount(chars, 2, 3, True)\n        bytes = New Byte(byteCount - 1) {}\n        Dim bytesEncodedCount As Integer = utf7Encoder.GetBytes(chars, 2, 3, bytes, 0, True)\n        \n        Console.WriteLine(&quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount)\n        \n        Console.Write(&quot;Encoded bytes: &quot;)\n        Dim b As Byte\n        For Each b In  bytes\n            Console.Write(&quot;[{0}]&quot;, b)\n        Next b\n        Console.WriteLine()\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetEncoder Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        Char[] chars = new Char[] {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;\\u0300&#39;, &#39;\\ua0a0&#39;};\n        Byte[] bytes;\n\n        Encoder utf7Encoder = Encoding.UTF7.GetEncoder();\n\n        int byteCount = utf7Encoder.GetByteCount(chars, 2, 3, true);\n        bytes = new Byte[byteCount];\n        int bytesEncodedCount = utf7Encoder.GetBytes(chars, 2, 3, bytes, 0, true);\n\n        Console.WriteLine(\n            &quot;{0} bytes used to encode characters.&quot;, bytesEncodedCount\n        );\n\n        Console.Write(&quot;Encoded bytes: &quot;);\n        foreach (Byte b in bytes) {\n            Console.Write(&quot;[{0}]&quot;, b);\n        }\n        Console.WriteLine();\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetHashCode\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for the current <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by the GetHashCode method is not suitable for distinguishing one <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> object from another. If your application needs a unique hash code, it should override the GetHashCode method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetMaxByteCount_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetMaxByteCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMaxByteCount(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the maximum number of bytes produced by encoding the specified number of characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetMaxByteCount (int charCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to encode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The maximum number of bytes produced by encoding the specified number of characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>charCount</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The resulting number of bytes is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.EncoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> to store the resulting bytes, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a>. To calculate the maximum array size, the application should use GetMaxByteCount. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> method generally allows allocation of less memory, while the GetMaxByteCount method generally executes faster.  </p>\n<p> GetMaxByteCount is a worst-case number, including the worst case for the currently selected <a class=\"xref\" href=\"system.text.encoderfallback\" data-linktype=\"relative-path\">EncoderFallback</a>. If a fallback is chosen with a potentially large string, GetMaxByteCount can return large values.  </p>\n<p> In most cases, this method returns reasonable numbers for small strings. For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded. You might also want to consider a different approach using <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetByteCount_\" data-linktype=\"relative-path\">GetByteCount</a> or <a class=\"xref\" href=\"system.text.encoder#System_Text_Encoder_Convert_\" data-linktype=\"relative-path\">Convert</a>. While UTF-7 is very efficient at encoding ASCII data, one byte per character, it is extremely inefficient for other data. As remarked above, GetMaxByteCount deals with a worst case. If the data to be encoded is largely ASCII, and especially if the ASCII characters cluster together, UTF-7 is significantly more efficient than the number returned by this method suggests.  </p>\n<p> GetMaxByteCount has no relation to <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a>. If your application needs a similar function to use with <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a>, it should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxCharCount_\" data-linktype=\"relative-path\">GetMaxCharCount</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>GetMaxByteCount(N)</code> is not necessarily the same value as <code>N* GetMaxByteCount(1)</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetMaxByteCount method to return the maximum number of bytes required to encode a specified number of characters.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetMaxByteCount Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        UTF7Encoding utf7 = new UTF7Encoding();\n        int charCount = 2;\n        int maxByteCount = utf7.GetMaxByteCount(charCount);\n        Console.WriteLine(\n            &quot;Maximum of {0} bytes needed to encode {1} characters.&quot;,\n            maxByteCount,\n            charCount\n        );\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetMaxByteCount Example#1\">Imports System\nImports System.Text\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim utf7 As New UTF7Encoding()\n        Dim charCount As Integer = 2\n        Dim maxByteCount As Integer = utf7.GetMaxByteCount(charCount)\n        Console.WriteLine( _\n            &quot;Maximum of {0} bytes needed to encode {1} characters.&quot;, _\n            maxByteCount, _\n            charCount _\n        )\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetMaxByteCount Example#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int charCount = 2;\n   int maxByteCount = utf7-&gt;GetMaxByteCount( charCount );\n   Console::WriteLine( &quot;Maximum of {0} bytes needed to encode {1} characters.&quot;, maxByteCount, charCount );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetMaxCharCount_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetMaxCharCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMaxCharCount(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the maximum number of characters produced by decoding the specified number of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetMaxCharCount (int byteCount);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>byteCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to decode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The maximum number of characters produced by decoding the specified number of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>byteCount</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The resulting number of characters is greater than the maximum number that can be returned as an int.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for complete explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.DecoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To calculate the exact array size required by <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetChars_\" data-linktype=\"relative-path\">GetChars</a> to store the resulting characters, the application uses <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a>. To calculate the maximum array size, the application should use GetMaxCharCount. The <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a> method generally allows allocation of less memory, while the GetMaxCharCount method generally executes faster.  </p>\n<p> GetMaxCharCount is a worst-case number, including the worst case for the currently selected <a class=\"xref\" href=\"system.text.decoderfallback\" data-linktype=\"relative-path\">DecoderFallback</a>. If a fallback is chosen with a potentially large string, GetMaxCharCount can return large values.  </p>\n<p> In most cases, this method returns reasonable numbers for small strings. For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded. You might also want to consider a different approach using <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetCharCount_\" data-linktype=\"relative-path\">GetCharCount</a> or <a class=\"xref\" href=\"system.text.decoder#System_Text_Decoder_Convert_\" data-linktype=\"relative-path\">Convert</a>.  </p>\n<p> GetMaxCharCount has no relation to <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a>. If your application needs a similar function to use with <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a>, it should use <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetMaxByteCount_\" data-linktype=\"relative-path\">GetMaxByteCount</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>GetMaxCharCount(N)</code> is not necessarily the same value as <code>N* GetMaxCharCount(1)</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetMaxCharCount method to return the maximum number of characters produced by decoding a specified number of bytes.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.GetMaxCharCount Example#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   UTF7Encoding^ utf7 = gcnew UTF7Encoding;\n   int byteCount = 8;\n   int maxCharCount = utf7-&gt;GetMaxCharCount( byteCount );\n   Console::WriteLine( &quot;Maximum of {0} characters needed to decode {1} bytes.&quot;, maxCharCount, byteCount );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.GetMaxCharCount Example#1\">Imports System\nImports System.Text\n\nClass UTF7EncodingExample\n    \n    Public Shared Sub Main()\n        Dim utf7 As New UTF7Encoding()\n        Dim byteCount As Integer = 8\n        Dim maxCharCount As Integer = utf7.GetMaxCharCount(byteCount)\n        Console.WriteLine( _\n            &quot;Maximum of {0} characters needed to decode {1} bytes.&quot;, _\n            maxCharCount, _\n            byteCount _\n        )\n    End Sub &#39;Main\nEnd Class &#39;UTF7EncodingExample\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.GetMaxCharCount Example#1\">using System;\nusing System.Text;\n\nclass UTF7EncodingExample {\n    public static void Main() {\n        UTF7Encoding utf7 = new UTF7Encoding();\n        int byteCount = 8;\n        int maxCharCount = utf7.GetMaxCharCount(byteCount);\n        Console.WriteLine(\n            &quot;Maximum of {0} characters needed to decode {1} bytes.&quot;,\n            maxCharCount,\n            byteCount\n        );\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Text_UTF7Encoding_GetString_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Text_UTF7Encoding_GetString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetString(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Decodes a range of bytes from a byte array into a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string GetString (byte[] bytes, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array containing the sequence of bytes to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first byte to decode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to decode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the results of decoding the specified sequence of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>bytes</code> is <code>null</code>(<code>Nothing</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>index</code> and <code>count</code> do not denote a valid range in <code>bytes</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallbackexception\" data-linktype=\"relative-path\">DecoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>A fallback occurred (see <a href=\"../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Character Encoding in the .NET Framework</a> for fuller explanation)  </p>\n<p> -and-  </p>\n<p> <span class=\"xref\">stem.Text.Encoding.DecoderFallback*</span> is set to <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Data to be converted, such as data read from a stream, might be available only in sequential blocks. In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <a class=\"xref\" href=\"system.text.decoder\" data-linktype=\"relative-path\">Decoder</a> or the <a class=\"xref\" href=\"system.text.encoder\" data-linktype=\"relative-path\">Encoder</a> provided by the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetDecoder_\" data-linktype=\"relative-path\">GetDecoder</a> method or the <a class=\"xref\" href=\"system.text.utf7encoding#System_Text_UTF7Encoding_GetEncoder_\" data-linktype=\"relative-path\">GetEncoder</a> method, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> does not provide error detection. When invalid bytes are encountered, <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a> generally emits the invalid bytes. If a byte is larger than hexadecimal 0x7F, the byte value is zero-extended into a Unicode character, the result is stored in the <code>chars</code> array, and any shift sequence is terminated. For example, if the byte to encode is hexadecimal 0x81, the resulting character is U+0081. For security reasons, your applications are recommended to use <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, or <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> and enable error detection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example encodes a string into an array of bytes, and then decodes the bytes back into a string.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Text.UTF7Encoding.getstring#1\">using System;\nusing System.Text;\n\npublic class SamplesUTF7Encoding  {\n\n   public static void Main()  {\n\n      // Create an instance of UTF7Encoding.\n      UTF7Encoding u7 = new UTF7Encoding( true );\n\n\n      // Create byte arrays from the same string containing the following characters:\n      //    Latin Small Letter Z (U+007A)\n      //    Latin Small Letter A (U+0061)\n      //    Combining Breve (U+0306)\n      //    Latin Small Letter AE With Acute (U+01FD)\n      //    Greek Small Letter Beta (U+03B2)\n      String myStr = &quot;za\\u0306\\u01FD\\u03B2&quot;;\n\n      // Encode the string.\n      byte[] myBArr = new byte[u7.GetByteCount( myStr )];\n      u7.GetBytes( myStr, 0, myStr.Length, myBArr, 0 );\n\n      // Decode the byte array.\n      Console.WriteLine( &quot;The new string is: {0}&quot;, u7.GetString( myBArr, 0, myBArr.Length ) );\n\n   }\n\n}\n\n\n/*\nThis code produces the following output.  The question marks take the place of characters that cannot be displayed at the console.\n\nThe new string is: za??\n\n*/\n\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Text.UTF7Encoding.getstring#1\">using namespace System;\nusing namespace System::Text;\nint main()\n{\n   \n   // Create an instance of UTF7Encoding.\n   UTF7Encoding^ u7 = gcnew UTF7Encoding( true );\n   \n   // Create byte arrays from the same string containing the following characters:\n   //    Latin Small Letter Z (U+007A)\n   //    Latin Small Letter A (U+0061)\n   //    Combining Breve (U+0306)\n   //    Latin Small Letter AE With Acute (U+01FD)\n   //    Greek Small Letter Beta (U+03B2)\n   String^ myStr = &quot;za\\u0306\\u01FD\\u03B2&quot;;\n   \n   // Encode the string.\n   array&lt;Byte&gt;^myBArr = gcnew array&lt;Byte&gt;(u7-&gt;GetByteCount( myStr ));\n   u7-&gt;GetBytes( myStr, 0, myStr-&gt;Length, myBArr, 0 );\n   \n   // Decode the byte array.\n   Console::WriteLine( &quot;The new string is: {0}&quot;, u7-&gt;GetString( myBArr, 0, myBArr-&gt;Length ) );\n}\n\n/*\nThis code produces the following output.  The question marks take the place of characters that cannot be displayed at the console.\n\nThe new string is: za??\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Text.UTF7Encoding.getstring#1\">Imports System\nImports System.Text\nImports Microsoft.VisualBasic\n\nPublic Class SamplesUTF7Encoding\n\n   Public Shared Sub Main()\n\n      &#39; Create an instance of UTF7Encoding.\n      Dim u7 As New UTF7Encoding(True)\n\n      &#39; Create byte arrays from the same string containing the following characters:\n      &#39;    Latin Small Letter Z (U+007A)\n      &#39;    Latin Small Letter A (U+0061)\n      &#39;    Combining Breve (U+0306)\n      &#39;    Latin Small Letter AE With Acute (U+01FD)\n      &#39;    Greek Small Letter Beta (U+03B2)\n      Dim myStr As String = &quot;za&quot; &amp; ChrW(&amp;H0306) &amp; ChrW(&amp;H01FD) &amp; ChrW(&amp;H03B2)\n\n      &#39; Encode the string.\n      Dim myBArr(u7.GetByteCount(myStr)) As Byte\n      u7.GetBytes(myStr, 0, myStr.Length, myBArr, 0)\n\n      &#39; Decode the byte array.\n      Console.WriteLine(&quot;The new string is: {0}&quot;, u7.GetString(myBArr, 0, myBArr.Length))\n\n   End Sub &#39;Main \n\nEnd Class &#39;SamplesUTF7Encoding\n\n\n&#39;This code produces the following output.  The question marks take the place of characters that cannot be displayed at the console.\n&#39;\n&#39;The new string is: za??&#223;\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Text.UTF7Encoding.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.UTF7Encoding.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding..ctor\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.Equals\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetByteCount\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetBytes\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetCharCount\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetChars\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetDecoder\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetEncoder\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetMaxByteCount\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetMaxCharCount\">\r\n<meta name=\"APIName\" content=\"System.Text.UTF7Encoding.GetString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0e0433ad-113f-a4ad-1b09-d05eecfd0b35\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Text\\UTF7Encoding.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a UTF-7 encoding of Unicode characters.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Text/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.UTF7Encoding\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Text.UTF7Encoding.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.UTF7Encoding.yml","open_to_public_contributors":true,"api_name":["System.Text.UTF7Encoding","System.Text.UTF7Encoding..ctor","System.Text.UTF7Encoding.Equals","System.Text.UTF7Encoding.GetByteCount","System.Text.UTF7Encoding.GetBytes","System.Text.UTF7Encoding.GetCharCount","System.Text.UTF7Encoding.GetChars","System.Text.UTF7Encoding.GetDecoder","System.Text.UTF7Encoding.GetEncoder","System.Text.UTF7Encoding.GetHashCode","System.Text.UTF7Encoding.GetMaxByteCount","System.Text.UTF7Encoding.GetMaxCharCount","System.Text.UTF7Encoding.GetString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.UTF7Encoding","System::Text::UTF7Encoding","System.Text.UTF7Encoding.#ctor","System::Text::UTF7Encoding::#ctor","System.Text.UTF7Encoding.Equals","System::Text::UTF7Encoding::Equals","System.Text.UTF7Encoding.GetByteCount","System::Text::UTF7Encoding::GetByteCount","System.Text.UTF7Encoding.GetBytes","System::Text::UTF7Encoding::GetBytes","System.Text.UTF7Encoding.GetCharCount","System::Text::UTF7Encoding::GetCharCount","System.Text.UTF7Encoding.GetChars","System::Text::UTF7Encoding::GetChars","System.Text.UTF7Encoding.GetDecoder","System::Text::UTF7Encoding::GetDecoder","System.Text.UTF7Encoding.GetEncoder","System::Text::UTF7Encoding::GetEncoder","System.Text.UTF7Encoding.GetHashCode","System::Text::UTF7Encoding::GetHashCode","System.Text.UTF7Encoding.GetMaxByteCount","System::Text::UTF7Encoding::GetMaxByteCount","System.Text.UTF7Encoding.GetMaxCharCount","System::Text::UTF7Encoding::GetMaxCharCount","System.Text.UTF7Encoding.GetString","System::Text::UTF7Encoding::GetString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0e0433ad-113f-a4ad-1b09-d05eecfd0b35","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Text\\UTF7Encoding.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Text/UTF7Encoding.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UTF7Encoding class | Microsoft Docs","_op_ogTitle":"UTF7Encoding class","description":"Represents a UTF-7 encoding of Unicode characters.\n","toc_asset_id":"_splitted/System.Text/toc.json","toc_rel":"_splitted/System.Text/toc.json","source_url":"","ms.assetid":"System.Text.UTF7Encoding","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.utf7encoding","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.utf7encoding","fileRelativePath":"System.Text.UTF7Encoding.html"},"themesRelativePathToOutputRoot":"_themes/"}