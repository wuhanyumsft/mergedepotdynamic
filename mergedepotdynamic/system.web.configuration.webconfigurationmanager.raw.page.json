{"content":"    \r\n    <h1 id=\"System_Web_Configuration_WebConfigurationManager\">\r\n      <span class=\"lang-csharp\">WebConfigurationManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to configuration files as they apply to Web applications.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class WebConfigurationManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WebConfigurationManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The WebConfigurationManager class allows you to access computer and application information.  </p>\n<p> Using WebConfigurationManager is the preferred way to work with configuration files related to Web applications. For client applications, use the <a class=\"xref\" href=\"system.configuration.configurationmanager\" data-linktype=\"relative-path\">ConfigurationManager</a> class.  </p>\n<p> Your application can extend the <a class=\"xref\" href=\"system.configuration\" data-linktype=\"relative-path\">System.Configuration</a> types or use them directly to handle configuration information, as explained in the following list:  </p>\n<ul>\n<li><p><code>Handling configuration</code>. To handle configuration information using the standard types, you use one of the following approaches:  </p>\n<ul>\n<li><p><code>Accessing a section</code>. To access configuration information for your application, you must use one of the <code>GetSection</code> methods provided by WebConfigurationManager. For <code>&lt;appSettings&gt;</code> and <code>&lt;connectionStrings&gt;</code>, you use the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_AppSettings_\" data-linktype=\"relative-path\">AppSettings</a> and <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_ConnectionStrings_\" data-linktype=\"relative-path\">ConnectionStrings</a> properties. These methods perform read-only operations, use a single cached instance of the configuration, and are multithread aware.  </p>\n</li>\n<li><p><code>Accessing configuration files</code>. Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely. You use one of the <code>open</code> methods provided by WebConfigurationManager. These methods will return a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, which in turn provides the required methods and properties to handle the underlying configuration files. These methods perform read or write operations and recreate the configuration data every time a file is opened.  </p>\n</li>\n<li><p><code>Advanced configuration</code>. More advanced configuration handling is provided by the types <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a>, <a class=\"xref\" href=\"system.configuration.propertyinformation\" data-linktype=\"relative-path\">PropertyInformation</a>, <a class=\"xref\" href=\"system.configuration.propertyinformationcollection\" data-linktype=\"relative-path\">PropertyInformationCollection</a>, <a class=\"xref\" href=\"system.configuration.elementinformation\" data-linktype=\"relative-path\">ElementInformation</a>, <a class=\"xref\" href=\"system.configuration.contextinformation\" data-linktype=\"relative-path\">ContextInformation</a>, <a class=\"xref\" href=\"system.configuration.configurationsectiongroup\" data-linktype=\"relative-path\">ConfigurationSectionGroup</a>, and <a class=\"xref\" href=\"system.configuration.configurationsectiongroupcollection\" data-linktype=\"relative-path\">ConfigurationSectionGroupCollection</a>.  </p>\n</li>\n</ul>\n</li>\n<li><p><code>Extending configuration standard types</code>. You can also provide your custom configuration elements by extending the standard configuration types such as <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a>, <a class=\"xref\" href=\"system.configuration.configurationelementcollection\" data-linktype=\"relative-path\">ConfigurationElementCollection</a>, <a class=\"xref\" href=\"system.configuration.configurationproperty\" data-linktype=\"relative-path\">ConfigurationProperty</a>, and <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> by using a programmatic or an attributed model. Refer to the <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> class for an example of how to extend a standard configuration type programmatically. Refer to the <a class=\"xref\" href=\"system.configuration.configurationelement\" data-linktype=\"relative-path\">ConfigurationElement</a> class for an example of how to extend a standard configuration type using the attributed model.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_AppSettings\" data-linktype=\"self-bookmark\">AppSettings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Web site&#39;s application settings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_ConnectionStrings\" data-linktype=\"self-bookmark\">ConnectionStrings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Web site&#39;s connection strings.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_GetSection_System_String_\" data-linktype=\"self-bookmark\">GetSection(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the specified configuration section from the current Web application&#39;s configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_GetSection_System_String_System_String_\" data-linktype=\"self-bookmark\">GetSection(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the specified configuration section from the Web application&#39;s configuration file at the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_GetWebApplicationSection_System_String_\" data-linktype=\"self-bookmark\">GetWebApplicationSection(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the specified configuration section from the current Web application&#39;s configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration\" data-linktype=\"self-bookmark\">OpenMachineConfiguration()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the machine-configuration file on the current computer as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_\" data-linktype=\"self-bookmark\">OpenMachineConfiguration(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the machine-configuration file on the current computer as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenMachineConfiguration(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the specified machine-configuration file on the specified server as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_System_String_System_IntPtr_\" data-linktype=\"self-bookmark\">OpenMachineConfiguration(String,String,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the specified machine-configuration file on the specified server as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, using the specified security context to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenMachineConfiguration(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the specified machine-configuration file on the specified server as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, using the specified security context to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMappedMachineConfiguration_System_Configuration_ConfigurationFileMap_\" data-linktype=\"self-bookmark\">OpenMappedMachineConfiguration(ConfigurationFileMap)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the machine-configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, using the specified file mapping to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMappedMachineConfiguration_System_Configuration_ConfigurationFileMap_System_String_\" data-linktype=\"self-bookmark\">OpenMappedMachineConfiguration(ConfigurationFileMap,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the machine-configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping and location to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_System_Web_Configuration_WebConfigurationFileMap_System_String_\" data-linktype=\"self-bookmark\">OpenMappedWebConfiguration(WebConfigurationFileMap,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the specified Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping and virtual path to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_System_Web_Configuration_WebConfigurationFileMap_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenMappedWebConfiguration(WebConfigurationFileMap,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the specified Web application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping, virtual path, and site name to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_System_Web_Configuration_WebConfigurationFileMap_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenMappedWebConfiguration(WebConfigurationFileMap,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the specified Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping, virtual path, site name, and location to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_\" data-linktype=\"self-bookmark\">OpenWebConfiguration(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenWebConfiguration(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path and site name to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenWebConfiguration(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, and location to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenWebConfiguration(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, location, and server to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_System_String_System_IntPtr_\" data-linktype=\"self-bookmark\">OpenWebConfiguration(String,String,String,String,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, location, server, and security context to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenWebConfiguration(String,String,String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, location, server, and security context to allow read or write operations.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_AppSettings\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_AppSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppSettings</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Web site&#39;s application settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Specialized.NameValueCollection AppSettings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> object that contains the <a class=\"xref\" href=\"system.configuration.appsettingssection\" data-linktype=\"relative-path\">AppSettingsSection</a> object for the current Web application&#39;s default configuration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> object could not be retrieved with the application settings data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.configuration.appsettingssection\" data-linktype=\"relative-path\">AppSettingsSection</a> object contains the configuration file&#39;s <code>&lt;appSettings&gt;</code> section.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the AppSettings method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#8\">   &#39; Show the use of AppSettings property\n   &#39; to get the application settings.\n   Shared Sub GetAppSettings()\n      \n      &#39; Get the appSettings key,value pairs collection.\n        Dim appSettings As NameValueCollection = _\n        WebConfigurationManager.AppSettings\n      \n      &#39; Get the collection enumerator.\n        Dim appSettingsEnum As IEnumerator = _\n        appSettings.GetEnumerator()\n      \n      &#39; Loop through the collection and \n      &#39; display the appSettings key, value pairs.\n      Dim i As Integer = 0\n      Console.WriteLine(&quot;[Display appSettings]&quot;)\n      While appSettingsEnum.MoveNext()\n         Dim key As String = appSettings.AllKeys(i)\n            Console.WriteLine(&quot;Key: {0} Value: {1}&quot;, _\n            key, appSettings(key))\n         i += 1\n      End While\n      \n      Console.WriteLine()\n   End Sub &#39;GetAppSettings\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#8\">\n   \n        // Show the use of the AppSettings property\n        // to get the application settings. \n        static void GetAppSettings()\n        {\n\n            // Get the appSettings key,value pairs collection.\n            NameValueCollection appSettings =\n                WebConfigurationManager.AppSettings\n                as NameValueCollection;\n\n            // Get the collection enumerator.\n            IEnumerator appSettingsEnum =\n                appSettings.GetEnumerator();\n\n            // Loop through the collection and \n            // display the appSettings key, value pairs.\n            int i = 0;\n            Console.WriteLine(&quot;[Display appSettings]&quot;);\n            while (appSettingsEnum.MoveNext())\n            {\n                string key = appSettings.AllKeys[i].ToString();\n                Console.WriteLine(&quot;Key: {0} Value: {1}&quot;,\n                key, appSettings[key]);\n                i += 1;\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_ConnectionStrings\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_ConnectionStrings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionStrings</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Web site&#39;s connection strings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.connectionstringsettingscollection\" data-linktype=\"relative-path\">ConnectionStringSettingsCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.connectionstringsettingscollection\" data-linktype=\"relative-path\">ConnectionStringSettingsCollection</a> object that contains the contents of the <a class=\"xref\" href=\"system.configuration.connectionstringssection\" data-linktype=\"relative-path\">ConnectionStringsSection</a> object for the current Web application&#39;s default configuration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid <a class=\"xref\" href=\"system.configuration.connectionstringsettingscollection\" data-linktype=\"relative-path\">ConnectionStringSettingsCollection</a> object could not be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the ConnectionStrings property to access configuration information and enumerate the results. To access a specific connection string, use the returned <a class=\"xref\" href=\"system.configuration.connectionstringsettingscollection\" data-linktype=\"relative-path\">ConnectionStringSettingsCollection</a> with the name of the desired connection string as an indexer.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#7\">   &#39; Show the use of ConnectionStrings property\n   &#39; to get the connection strings. \n   Shared Sub GetConnectionStrings()\n      \n      &#39; Get the connectionStrings key,value pairs collection.\n        Dim connectionStrings As ConnectionStringSettingsCollection = _\n        WebConfigurationManager.ConnectionStrings\n      \n      &#39; Get the collection enumerator.\n        Dim connectionStringsEnum As IEnumerator = _\n        connectionStrings.GetEnumerator()\n      \n      &#39; Loop through the collection and \n      &#39; display the connectionStrings key, value pairs.\n      Dim i As Integer = 0\n      Console.WriteLine(&quot;[Display connectionStrings]&quot;)\n      While connectionStringsEnum.MoveNext()\n         Dim name As String = connectionStrings(i).Name\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            name, connectionStrings(name))\n         i += 1\n      End While\n      \n      Console.WriteLine()\n   End Sub &#39;GetConnectionStrings\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#7\">\n        // Show the use of the ConnectionString property\n        // to get the connection strings.\n        static void GetConnectionStrings()\n        {\n\n            // Get the connectionStrings key,value pairs collection.\n            ConnectionStringSettingsCollection connectionStrings =\n                WebConfigurationManager.ConnectionStrings\n                as ConnectionStringSettingsCollection;\n\n            // Get the collection enumerator.\n            IEnumerator connectionStringsEnum =\n                connectionStrings.GetEnumerator();\n\n            // Loop through the collection and \n            // display the connectionStrings key, value pairs.\n            int i = 0;\n            Console.WriteLine(&quot;[Display connectionStrings]&quot;);\n            while (connectionStringsEnum.MoveNext())\n            {\n                string name = connectionStrings[i].Name;\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                name, connectionStrings[name]);\n                i += 1;\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_GetSection_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_GetSection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSection(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the specified configuration section from the current Web application&#39;s configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetSection (string sectionName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sectionName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The configuration section name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The specified configuration section object, or <code>null</code> if the section does not exist. Remember that security restrictions exist on the use of GetSection as a runtime operation. You might not be able to access a section at run time for modifications, for example.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If GetSection is called from within a Web application, it gets the section from the configuration file selected by the system according to the Web-application configuration hierarchy.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> If your application uses a different protocol than HTTP, the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_GetSection_\" data-linktype=\"relative-path\">GetSection</a> overload that takes both a section name and a path in its parameter list is the one to use. You must specify the configuration file path because the system cannot make any assumptions about the configuration hierarchy level. If you use the GetSection overload that takes only a section name, the system will always attempt to return the configuration settings at the application level. Note, though, that if its specified path is outside of the current application, the overload that takes a path will also return the application-level configuration settings for the currently running application.  </p>\n</div>\n<p> You could call GetSection from within a client application. In this case, it gets the default section from the configuration file selected by the system according to the client configuration hierarchy. Usually, this is the Machine.config file, unless you have a mapped configuration in place. For mapping configuration files, refer to the mapping methods described next.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The GetSection method is a run-time method that operates on the section of a configuration file at the hierarchy level in which the application runs. For a non-run-time operation, use <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_GetSection_\" data-linktype=\"relative-path\">GetSection</a> instead. This method operates on the specified section of a configuration file that you obtain using one of the overloaded methods for opening a configuration file, <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\" data-linktype=\"relative-path\">OpenWebConfiguration</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to access configuration information with the GetSection method.  </p>\n<p> The following example shows a section that can be accessed from either a Web application or a console application.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example demonstrates how to use the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_GetWebApplicationSection_\" data-linktype=\"relative-path\">GetWebApplicationSection</a> method to get a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object from a configuration file.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#2\">   &#39; Show how to use the GetSection(string). \n   &#39; to access the connectionStrings section.\n   Shared Sub GetConnectionStringsSection()\n      \n      &#39; Get the connectionStrings section.\n        Dim connectionStringsSection As ConnectionStringsSection = _\n        WebConfigurationManager.GetSection(&quot;connectionStrings&quot;)\n      \n      &#39; Get the connectionStrings key,value pairs collection.\n        Dim connectionStrings As ConnectionStringSettingsCollection = _\n        connectionStringsSection.ConnectionStrings\n      \n      &#39; Get the collection enumerator.\n        Dim connectionStringsEnum As IEnumerator = _\n        connectionStrings.GetEnumerator()\n      \n      &#39; Loop through the collection and \n      &#39; display the connectionStrings key, value pairs.\n      Dim i As Integer = 0\n      Console.WriteLine(&quot;[Display the connectionStrings]&quot;)\n      While connectionStringsEnum.MoveNext()\n         Dim name As String = connectionStrings(i).Name\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            name, connectionStrings(name))\n         i += 1\n      End While\n      \n      Console.WriteLine()\n   End Sub &#39;GetSection1\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#2\">\n        // Show how to use the GetSection(string). \n        // to access the connectionStrings section.\n        static void GetConnectionStringsSection()\n        {\n\n            // Get the connectionStrings section.\n            ConnectionStringsSection connectionStringsSection =\n                WebConfigurationManager.GetSection(&quot;connectionStrings&quot;)\n                as ConnectionStringsSection;\n\n            // Get the connectionStrings key,value pairs collection.\n            ConnectionStringSettingsCollection connectionStrings =\n                connectionStringsSection.ConnectionStrings;\n           \n            // Get the collection enumerator.\n            IEnumerator connectionStringsEnum =\n                connectionStrings.GetEnumerator();\n\n            // Loop through the collection and \n            // display the connectionStrings key, value pairs.\n            int i = 0;\n            Console.WriteLine(&quot;[Display the connectionStrings]&quot;);\n            while (connectionStringsEnum.MoveNext())\n            {\n                string name = connectionStrings[i].Name;\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                name, connectionStrings[name]);\n                i += 1;\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_GetSection_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_GetSection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSection(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the specified configuration section from the Web application&#39;s configuration file at the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetSection (string sectionName, string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sectionName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The configuration section name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual configuration file path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The specified configuration section object, or <code>null</code> if the section does not exist. Remember that security restrictions exist on the use of GetSection as a run-time operation. You might not be able to access a section at run time for modifications, for instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The method is called from outside a Web application.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If GetSection is called from within a Web application, it gets the section from the configuration file defined by the specified path in the configuration hierarchy.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> If your application uses a different protocol than HTTP, the GetSection overload that takes both a section name and a path in its parameter list is the one to use. You must specify the configuration file path because the system cannot make any assumptions about the configuration hierarchy level. If you use the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_GetSection_\" data-linktype=\"relative-path\">GetSection</a> overload that takes only a section name, the system will always attempt to return the configuration settings at the application level. Note, though, that if its specified path is outside of the current application, the overload that takes a path will also return the application-level configuration settings for the currently running application.  </p>\n</div>\n<p> This method cannot be called from within a client application.  </p>\n<p> If you want to retrieve the configuration section from the configuration file located at the current Web application directory level, use the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_GetSection_\" data-linktype=\"relative-path\">GetSection</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The GetSection method is a run-time method operating on the section of a configuration file at the hierarchy level in which the application runs. For a non-run-time operation, use <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_GetSection_\" data-linktype=\"relative-path\">GetSection</a> instead. This method operates on the specified section of a configuration file that you obtain using one of the <code>open</code> configuration file methods.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_GetSection_\" data-linktype=\"relative-path\">GetSection</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example demonstrates how to use the <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_GetSection_\" data-linktype=\"relative-path\">GetSection</a> method to get a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object from a specified configuration file.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#5\">   &#39; Show the use of GetSection(string, string). \n   &#39; to access the connectionStrings section.\n   Shared Sub GetSection2()\n      \n      Try\n         &#39; Get the connectionStrings section for the \n         &#39; specified Web app. This GetSection overload\n         &#39; can olny be called from within a Web application.\n            Dim connectionStringsSection As ConnectionStringsSection = _\n            WebConfigurationManager.GetSection( _\n            &quot;connectionStrings&quot;, &quot;/configTest&quot;)\n         \n         &#39; Get the connectionStrings key,value pairs collection\n            Dim connectionStrings As ConnectionStringSettingsCollection = _\n            connectionStringsSection.ConnectionStrings\n         \n         &#39; Get the collection enumerator.\n            Dim connectionStringsEnum As IEnumerator = _\n            connectionStrings.GetEnumerator()\n         \n         &#39; Loop through the collection and \n         &#39; display the connectionStrings key, value pairs.\n         Dim i As Integer = 0\n         Console.WriteLine(&quot;[Display connectionStrings]&quot;)\n         While connectionStringsEnum.MoveNext()\n            Dim name As String = connectionStrings(i).Name\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n                name, connectionStrings(name))\n            i += 1\n         End While\n         Console.WriteLine()\n      \n      Catch e As InvalidOperationException\n         Dim errorMsg As String = e.ToString()\n         Console.WriteLine(errorMsg)\n      End Try\n   End Sub &#39;GetSection2\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#5\">\n       // Show the use of GetSection(string, string). \n       // to access the connectionStrings section.\n        static void GetSection2()\n        {\n\n            try\n            {\n                // Get the connectionStrings section for the \n                // specified Web app. This GetSection overload\n                // can olny be called from within a Web application.\n                ConnectionStringsSection connectionStringsSection =\n                    WebConfigurationManager.GetSection(&quot;connectionStrings&quot;,\n                    &quot;/configTest&quot;) as ConnectionStringsSection;\n\n                // Get the connectionStrings key,value pairs collection\n                ConnectionStringSettingsCollection connectionStrings =\n                    connectionStringsSection.ConnectionStrings;\n\n                // Get the collection enumerator.\n                IEnumerator connectionStringsEnum =\n                    connectionStrings.GetEnumerator();\n\n                // Loop through the collection and \n                // display the connectionStrings key, value pairs.\n                int i = 0;\n                Console.WriteLine(&quot;[Display connectionStrings]&quot;);\n                while (connectionStringsEnum.MoveNext())\n                {\n                    string name = connectionStrings[i].Name;\n                    Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                    name, connectionStrings[name]);\n                    i += 1;\n                }\n                Console.WriteLine();\n            }\n\n            catch (InvalidOperationException e)\n            {\n                string errorMsg = e.ToString();\n                Console.WriteLine(errorMsg);\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_GetWebApplicationSection_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_GetWebApplicationSection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetWebApplicationSection(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the specified configuration section from the current Web application&#39;s configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetWebApplicationSection (string sectionName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sectionName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The configuration section name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The specified configuration section object, or <code>null</code> if the section does not exist, or an internal object if the section is not accessible at run time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If GetWebApplicationSection is called from within a Web application, it gets the section from the configuration file selected by the system according to the Web-application configuration hierarchy.  </p>\n<p> You could call GetWebApplicationSection from within a client application. In this case, it gets the default section from the configuration file selected by the system according to the client configuration hierarchy. Usually, this is the Machine.config file, unless you have a mapped configuration in place. For mapping configuration files, refer to the mapping methods described next.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The GetWebApplicationSection method is a run-time operation that acts on the section of the application configuration file located at the current level. The <a class=\"xref\" href=\"system.configuration.configuration#System_Configuration_Configuration_GetSection_\" data-linktype=\"relative-path\">GetSection</a> method, however, is not a run-time operation but acts on the specified section obtained through one of the methods for opening the configuration files.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the GetWebApplicationSection method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example demonstrates how to use the GetWebApplicationSection method to get a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object from the default configuration file.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#6\">   &#39; Show the use of GetWebApplicationSection(string). \n   &#39; to access the connectionStrings section.\n   Shared Sub GetWebApplicationSection()\n      \n      &#39; Get the default connectionStrings section,\n        Dim connectionStringsSection As ConnectionStringsSection = _\n        WebConfigurationManager.GetWebApplicationSection( _\n        &quot;connectionStrings&quot;)\n      \n      &#39; Get the connectionStrings key,value pairs collection.\n        Dim connectionStrings As ConnectionStringSettingsCollection = _\n        connectionStringsSection.ConnectionStrings\n      \n      &#39; Get the collection enumerator.\n        Dim connectionStringsEnum As IEnumerator = _\n        connectionStrings.GetEnumerator()\n      \n      &#39; Loop through the collection and \n      &#39; display the connectionStrings key, value pairs.\n      Dim i As Integer = 0\n      Console.WriteLine(&quot;[Display connectionStrings]&quot;)\n      While connectionStringsEnum.MoveNext()\n         Dim name As String = connectionStrings(i).Name\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            name, connectionStrings(name))\n         i += 1\n      End While\n      \n      Console.WriteLine()\n   End Sub &#39;GetWebApplicationSection\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#6\">\n       // Show the use of GetWebApplicationSection(string). \n       // to get the connectionStrings section.\n        static void GetWebApplicationSection()\n        {\n\n            // Get the default connectionStrings section,\n            ConnectionStringsSection connectionStringsSection =\n                WebConfigurationManager.GetWebApplicationSection(\n                &quot;connectionStrings&quot;) as ConnectionStringsSection;\n\n            // Get the connectionStrings key,value pairs collection.\n            ConnectionStringSettingsCollection connectionStrings =\n                connectionStringsSection.ConnectionStrings;\n\n            // Get the collection enumerator.\n            IEnumerator connectionStringsEnum =\n                connectionStrings.GetEnumerator();\n\n            // Loop through the collection and \n            // display the connectionStrings key, value pairs.\n            int i = 0;\n            Console.WriteLine(&quot;[Display connectionStrings]&quot;);\n            while (connectionStringsEnum.MoveNext())\n            {\n                string name = connectionStrings[i].Name;\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                name, connectionStrings[name]);\n                i += 1;\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMachineConfiguration()</div>        \r\n          </div>\r\n    \r\n            <p>Opens the machine-configuration file on the current computer as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMachineConfiguration ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.configurationmanager#System_Configuration_ConfigurationManager_OpenMachineConfiguration_\" data-linktype=\"relative-path\">OpenMachineConfiguration</a> method opens the machine-configuration file on the computer where the application runs. This file is located in the standard build directory %windir%\\Microsoft.NET\\Framework\\version\\config.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenMachineConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#9\">   &#39; Show how to use OpenMachineConfiguration().\n   &#39; It gets the machine.config file on the current \n   &#39; machine and displays section information. \n   Shared Sub OpenMachineConfiguration1()\n      &#39; Get the machine.config file on the current machine.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenMachineConfiguration()\n      \n      &#39; Loop to get the sections. Display basic information.\n      Console.WriteLine(&quot;Name, Allow Definition&quot;)\n      Dim i As Integer = 0\n      Dim section As ConfigurationSection\n      For Each section In  config.Sections\n            Console.WriteLine((section.SectionInformation.Name + _\n            ControlChars.Tab + _\n            section.SectionInformation.AllowExeDefinition.ToString()))\n            i += 1\n        Next section\n        Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i)\n\n        &#39; Display machine.config path.\n        Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath)\n    End Sub &#39;OpenMachineConfiguration1\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#9\">\n        // Show how to use OpenMachineConfiguration().\n        // It gets the machine.config file on the current \n        // machine and displays section information. \n        static void OpenMachineConfiguration1()\n        {\n            // Get the machine.config file on the current machine.\n            System.Configuration.Configuration config =\n                    WebConfigurationManager.OpenMachineConfiguration();\n\n            // Loop to get the sections. Display basic information.\n            Console.WriteLine(&quot;Name, Allow Definition&quot;);\n            int i = 0;\n            foreach (ConfigurationSection section in config.Sections)\n            {\n                Console.WriteLine(\n                    section.SectionInformation.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                section.SectionInformation.AllowExeDefinition);\n                i += 1;\n\n            }\n            Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i);\n\n            // Display machine.config path.\n            Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath); \n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMachineConfiguration(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the machine-configuration file on the current computer as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application path to which the machine configuration applies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method opens the machine-configuration file that is applicable to the directory specified by the <code>locationSubPath</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenMachineConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#10\">    &#39; Show how to use OpenMachineConfiguration(string).\n    &#39; It gets the machine.config file applicabe to the\n    &#39; specified resource and displays section \n    &#39; basic information. \n    Shared Sub OpenMachineConfiguration2()\n        &#39; Get the machine.config file applicabe to the\n        &#39; specified reosurce.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenMachineConfiguration( _\n        &quot;configTest&quot;)\n\n        &#39; Loop to get the sections. Display basic information.\n        Console.WriteLine(&quot;Name, Allow Definition&quot;)\n        Dim i As Integer = 0\n        Dim section As ConfigurationSection\n        For Each section In config.Sections\n            Console.WriteLine((section.SectionInformation.Name + _\n            ControlChars.Tab + _\n            section.SectionInformation.AllowExeDefinition.ToString()))\n            i += 1\n        Next section\n        Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i)\n\n        &#39; Display machine.config path.\n        Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath)\n    End Sub &#39;OpenMachineConfiguration2\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#10\">\n        // Show how to use OpenMachineConfiguration(string).\n        // It gets the machine.config file applicabe to the\n        // specified resource and displays section \n        // basic information. \n        static void OpenMachineConfiguration2()\n        {\n            // Get the machine.config file applicabe to the\n            // specified reosurce.\n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenMachineConfiguration(&quot;configTest&quot;);\n\n            // Loop to get the sections. Display basic information.\n            Console.WriteLine(&quot;Name, Allow Definition&quot;);\n            int i = 0;\n            foreach (ConfigurationSection section in config.Sections)\n            {\n                Console.WriteLine(\n                    section.SectionInformation.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                section.SectionInformation.AllowExeDefinition);\n                i += 1;\n\n            }\n            Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i);\n\n            // Display machine.config path.\n            Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMachineConfiguration(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the specified machine-configuration file on the specified server as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application path to which the configuration applies.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>server</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the server to return the configuration for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method opens the machine-configuration file that is located in the directory specified by the <code>locationSubPath</code> parameter and on the computer specified by the <code>server</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenMachineConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#11\">    &#39; Show how to use OpenMachineConfiguration(string, string).\n    &#39; It gets the machine.config file on the specified server and\n    &#39; applicabe to the specified reosurce and displays section \n    &#39; basic information. \n    Shared Sub OpenMachineConfiguration3()\n        &#39; Get the machine.config file applicabe to the\n        &#39; specified reosurce and on the specified server.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenMachineConfiguration( _\n        &quot;configTest&quot;, &quot;myServer&quot;)\n\n        &#39; Loop to get the sections. Display basic information.\n        Console.WriteLine(&quot;Name, Allow Definition&quot;)\n        Dim i As Integer = 0\n        Dim section As ConfigurationSection\n        For Each section In config.Sections\n            Console.WriteLine((section.SectionInformation.Name + _\n            ControlChars.Tab + _\n            section.SectionInformation.AllowExeDefinition.ToString()))\n            i += 1\n        Next section\n        Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i)\n\n        &#39; Display machine.config path.\n        Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath)\n    End Sub &#39;OpenMachineConfiguration3\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#11\">\n        // Show how to use OpenMachineConfiguration(string, string).\n        // It gets the machine.config file on the specified server and\n        // applicabe to the specified reosurce and displays section \n        // basic information. \n        static void OpenMachineConfiguration3()\n        {\n            // Get the machine.config file applicabe to the\n            // specified reosurce and on the specified server.\n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenMachineConfiguration(&quot;configTest&quot;, \n                &quot;myServer&quot;);\n\n            // Loop to get the sections. Display basic information.\n            Console.WriteLine(&quot;Name, Allow Definition&quot;);\n            int i = 0;\n            foreach (ConfigurationSection section in config.Sections)\n            {\n                Console.WriteLine(\n                    section.SectionInformation.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                section.SectionInformation.AllowExeDefinition);\n                i += 1;\n\n            }\n            Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i);\n\n            // Display machine.config path.\n            Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_System_String_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMachineConfiguration(String,String,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the specified machine-configuration file on the specified server as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, using the specified security context to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, IntPtr userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application path to which the configuration applies.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>server</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the server to return the configuration for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An account token to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Valid values were not supplied for the <code>server</code> or <code>userToken</code> parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to access a configuration file using impersonation.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The account token is usually retrieved from an instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class or through a call to unmanaged code, such as a call to the Win32 API <code>LogonUser</code>. For more information about calls to unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenMachineConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#12\">    &#39; Show how to use OpenMachineConfiguration(string, string).\n    &#39; It gets the machine.config file on the specified server,\n    &#39; applicabe to the specified reosurce, for the specified user\n    &#39; and displays section basic information. \n    Shared Sub OpenMachineConfiguration4()\n        &#39; Get the current user token.\n        Dim userToken As IntPtr = _\n        System.Security.Principal.WindowsIdentity.GetCurrent().Token\n\n        &#39; Get the machine.config file applicabe to the\n        &#39; specified reosurce, on the specified server for the\n        &#39; specified user.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenMachineConfiguration( _\n        &quot;configTest&quot;, &quot;myServer&quot;, userToken)\n\n        &#39; Loop to get the sections. Display basic information.\n        Console.WriteLine(&quot;Name, Allow Definition&quot;)\n        Dim i As Integer = 0\n        Dim section As ConfigurationSection\n        For Each section In config.Sections\n            Console.WriteLine((section.SectionInformation.Name + _\n            ControlChars.Tab + _\n            section.SectionInformation.AllowExeDefinition.ToString()))\n            i += 1\n        Next section\n        Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i)\n\n        &#39; Display machine.config path.\n        Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath)\n    End Sub &#39;OpenMachineConfiguration4\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#12\">\n        // Show how to use OpenMachineConfiguration(string, string).\n        // It gets the machine.config file on the specified server,\n        // applicabe to the specified reosurce, for the specified user\n        // and displays section basic information. \n        static void OpenMachineConfiguration4()\n        {\n            // Get the current user token.\n            IntPtr userToken =\n                  System.Security.Principal.WindowsIdentity.GetCurrent().Token;\n\n            // Get the machine.config file applicabe to the\n            // specified reosurce, on the specified server for the\n            // specified user.\n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenMachineConfiguration(&quot;configTest&quot;,\n                &quot;myServer&quot;, userToken);\n\n            // Loop to get the sections. Display basic information.\n            Console.WriteLine(&quot;Name, Allow Definition&quot;);\n            int i = 0;\n            foreach (ConfigurationSection section in config.Sections)\n            {\n                Console.WriteLine(\n                    section.SectionInformation.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                section.SectionInformation.AllowExeDefinition);\n                i += 1;\n\n            }\n            Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i);\n\n            // Display machine.config path.\n            Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMachineConfiguration(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the specified machine-configuration file on the specified server as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, using the specified security context to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, string userName, string password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application path to which the configuration applies.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>server</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the server to return the configuration for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The full user name (Domain\\User) to use when opening the file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the user name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>server</code> or <code>userName</code> and <code>password</code> parameters were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to access a configuration file using impersonation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenMachineConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#13\">    &#39; Show how to use OpenMachineConfiguration(string, string).\n    &#39; It gets the machine.config file on the specified server,\n    &#39; applicabe to the specified reosurce, for the specified user\n    &#39; and displays section basic information. \n    Shared Sub OpenMachineConfiguration5()\n        &#39; Set the user id and password.\n        Dim user As String = _\n        System.Security.Principal.WindowsIdentity.GetCurrent().Name\n        &#39; Substitute with actual password.\n        Dim password As String = &quot;userPassword&quot;\n\n        &#39; Get the machine.config file applicabe to the\n        &#39; specified reosurce, on the specified server for the\n        &#39; specified user.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenMachineConfiguration( _\n        &quot;configTest&quot;, &quot;myServer&quot;, user, password)\n\n        &#39; Loop to get the sections. Display basic information.\n        Console.WriteLine(&quot;Name, Allow Definition&quot;)\n        Dim i As Integer = 0\n        Dim section As ConfigurationSection\n        For Each section In config.Sections\n            Console.WriteLine((section.SectionInformation.Name + _\n            ControlChars.Tab + _\n            section.SectionInformation.AllowExeDefinition.ToString()))\n            i += 1\n        Next section\n        Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i)\n\n        &#39; Display machine.config path.\n        Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath)\n    End Sub &#39;OpenMachineConfiguration5\n    \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#13\">\n        // Show how to use OpenMachineConfiguration(string, string).\n        // It gets the machine.config file on the specified server,\n        // applicabe to the specified reosurce, for the specified user\n        // and displays section basic information. \n        static void OpenMachineConfiguration5()\n        {\n            // Set the user id and password.\n            string user =\n                  System.Security.Principal.WindowsIdentity.GetCurrent().Name;\n            // Substitute with actual password.\n            string password = &quot;userPassword&quot;;\n\n            // Get the machine.config file applicabe to the\n            // specified reosurce, on the specified server for the\n            // specified user.\n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenMachineConfiguration(&quot;configTest&quot;,\n                &quot;myServer&quot;, user, password);\n\n            // Loop to get the sections. Display basic information.\n            Console.WriteLine(&quot;Name, Allow Definition&quot;);\n            int i = 0;\n            foreach (ConfigurationSection section in config.Sections)\n            {\n                Console.WriteLine(\n                    section.SectionInformation.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                section.SectionInformation.AllowExeDefinition);\n                i += 1;\n\n            }\n            Console.WriteLine(&quot;[Total number of sections: {0}]&quot;, i);\n\n            // Display machine.config path.\n            Console.WriteLine(&quot;[File path: {0}]&quot;, config.FilePath);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedMachineConfiguration_System_Configuration_ConfigurationFileMap_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMappedMachineConfiguration(ConfigurationFileMap)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the machine-configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object, using the specified file mapping to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileMap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationfilemap\" data-linktype=\"relative-path\">ConfigurationFileMap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationfilemap\" data-linktype=\"relative-path\">ConfigurationFileMap</a> object to use in place of the default machine-configuration file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedMachineConfiguration_System_Configuration_ConfigurationFileMap_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedMachineConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMappedMachineConfiguration(ConfigurationFileMap,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the machine-configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping and location to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap, string locationSubPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileMap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationfilemap\" data-linktype=\"relative-path\">ConfigurationFileMap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.configurationfilemap\" data-linktype=\"relative-path\">ConfigurationFileMap</a> object to use in place of a default machine-configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specific resource to which the configuration applies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_System_Web_Configuration_WebConfigurationFileMap_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMappedWebConfiguration(WebConfigurationFileMap,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the specified Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping and virtual path to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileMap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.configuration.webconfigurationfilemap\" data-linktype=\"relative-path\">WebConfigurationFileMap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.configuration.webconfigurationfilemap\" data-linktype=\"relative-path\">WebConfigurationFileMap</a> object to use in place of a default Web-application configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a resource, your code must have read privileges on all the configuration files from which it inherits settings. To update a configuration file, your code must additionally have write privileges for both the configuration file and the directory in which it exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the OpenMappedWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#21\">   &#39; Show how to use the OpenMappedWebConfiguration(\n   &#39; WebConfigurationFileMap, string)\n   Shared Sub OpenMappedWebConfiguration1()\n      \n      &#39; Create the configuration directories mapping.\n      Dim fileMap As WebConfigurationFileMap = CreateFileMap()\n      \n      Try\n         \n         &#39; Get the Configuration object for the mapped\n         &#39; virtual directory.\n            Dim config As System.Configuration.Configuration = _\n            WebConfigurationManager.OpenMappedWebConfiguration( _\n            fileMap, &quot;/config&quot;)\n         \n         &#39; Define a nique key for the creation of \n         &#39; an appSettings element entry.\n         Dim appStgCnt As Integer = config.AppSettings.Settings.Count\n         Dim asName As String = &quot;AppSetting&quot; + appStgCnt.ToString()\n         \n         &#39; Add a new element to the appSettings.\n            config.AppSettings.Settings.Add(asName, _\n            DateTime.Now.ToLongDateString() + &quot; &quot; + _\n            DateTime.Now.ToLongTimeString())\n         \n         &#39; Save to the configuration file.\n         config.Save(ConfigurationSaveMode.Modified)\n         \n         &#39; Display new appSettings.\n            Console.WriteLine(&quot;Count:  [{0}]&quot;, _\n            config.AppSettings.Settings.Count)\n         Dim key As String\n         For Each key In  config.AppSettings.Settings.AllKeys\n                Console.WriteLine(&quot;[{0}] = [{1}]&quot;, _\n                key, config.AppSettings.Settings(key).Value)\n         Next key\n      \n      Catch err As InvalidOperationException\n         Console.WriteLine(err.ToString())\n      End Try\n      \n      Console.WriteLine()\n   End Sub &#39;OpenMappedWebConfiguration1\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#21\">\n        // Show how to use the OpenMappedWebConfiguration(\n        // WebConfigurationFileMap, string)\n        static void OpenMappedWebConfiguration1()\n        {\n\n            // Create the configuration directories mapping.\n            WebConfigurationFileMap fileMap = \n                CreateFileMap();\n\n            try\n            {\n\n                // Get the Configuration object for the mapped\n                // virtual directory.\n                System.Configuration.Configuration config =\n                    WebConfigurationManager.OpenMappedWebConfiguration(fileMap, \n                    &quot;/config&quot;);\n\n                // Define a nique key for the creation of \n                // an appSettings element entry.\n                int appStgCnt = config.AppSettings.Settings.Count;\n                string asName = &quot;AppSetting&quot; + appStgCnt.ToString();\n\n                // Add a new element to the appSettings.\n                config.AppSettings.Settings.Add(asName,\n                    DateTime.Now.ToLongDateString() + &quot; &quot; +\n                    DateTime.Now.ToLongTimeString());\n\n                // Save to the configuration file.\n                config.Save(ConfigurationSaveMode.Modified);\n              \n                // Display new appSettings.\n                Console.WriteLine(&quot;Count:  [{0}]&quot;, config.AppSettings.Settings.Count);\n                foreach (string key in config.AppSettings.Settings.AllKeys)\n                { \n                    Console.WriteLine(&quot;[{0}] = [{1}]&quot;, key, \n                        config.AppSettings.Settings[key].Value);\n                }\n                \n            }\n            catch (InvalidOperationException err)\n            {\n                Console.WriteLine(err.ToString());\n            }\n\n            Console.WriteLine();\n        }\n</code></pre><p> The preceding example uses the following custom method to generate a <a class=\"xref\" href=\"system.configuration.configurationfilemap\" data-linktype=\"relative-path\">ConfigurationFileMap</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#20\">   &#39; Utility to map virtual directories to physical ones.\n   &#39; In the current physical directory maps \n   &#39; a physical sub-directory with its virtual directory.\n   &#39; A web.config file is created for the\n    &#39; default and the virtual directory at the appropriate level.\n    &#39;You must create a physical directory called config at the\n    &#39;level where your app is running.\n   Shared Function CreateFileMap() As WebConfigurationFileMap\n      \n      Dim fileMap As New WebConfigurationFileMap()\n      \n      &#39; Get he physical directory where this app runs.\n      &#39; We&#39;ll use it to map the virtual directories\n      &#39; defined next. \n      Dim physDir As String = Environment.CurrentDirectory\n      \n      &#39; Create a VirtualDirectoryMapping object to use\n      &#39; as the root directory for the virtual directory\n      &#39; named config. \n      &#39; Note: you must assure that you have a physical subdirectory\n      &#39; named config in the curremt physical directory where this\n      &#39; application runs.\n        Dim vDirMap As New VirtualDirectoryMapping(physDir + _\n        &quot;\\config&quot;, True)\n      \n      &#39; Add vDirMap to the VirtualDirectories collection \n      &#39; assigning to it the virtual directory name.\n      fileMap.VirtualDirectories.Add(&quot;/config&quot;, vDirMap)\n      \n      &#39; Create a VirtualDirectoryMapping object to use\n      &#39; as the default directory for all the virtual \n      &#39; directories.\n        Dim vDirMapBase As New VirtualDirectoryMapping(physDir, _\n        True, &quot;web.config&quot;)\n      \n      &#39; Add it to the virtual directory mapping collection.\n      fileMap.VirtualDirectories.Add(&quot;/&quot;, vDirMapBase)\n      \n    \n#If DEBUG Then\n      Dim key As String\n      For Each key In  fileMap.VirtualDirectories.AllKeys\n            Console.WriteLine(&quot;Virtual directory: {0} Physical path: {1}&quot;, _\n            fileMap.VirtualDirectories(key).VirtualDirectory, _\n            fileMap.VirtualDirectories(key).PhysicalDirectory)\n      Next key\n#End If\n\n      &#39; Return the mapping.\n      Return fileMap\n\n    End Function &#39;CreateFileMap\n    \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#20\">\n        // Utility to map virtual directories to physical ones.\n        // In the current physical directory maps \n        // a physical sub-directory with its virtual directory.\n        // A web.config file is created for the\n        // default and the virtual directory at the appropriate level.\n        // You must create a physical directory called config at the\n        // level where your app is running.\n        static WebConfigurationFileMap CreateFileMap()\n        {\n\n            WebConfigurationFileMap fileMap =\n                   new WebConfigurationFileMap();\n\n            // Get he physical directory where this app runs.\n            // We&#39;ll use it to map the virtual directories\n            // defined next. \n            string physDir = Environment.CurrentDirectory;\n\n            // Create a VirtualDirectoryMapping object to use\n            // as the root directory for the virtual directory\n            // named config. \n            // Note: you must assure that you have a physical subdirectory\n            // named config in the curremt physical directory where this\n            // application runs.\n            VirtualDirectoryMapping vDirMap = \n                new VirtualDirectoryMapping(physDir + &quot;\\\\config&quot;, true);\n\n            // Add vDirMap to the VirtualDirectories collection \n            // assigning to it the virtual directory name.\n            fileMap.VirtualDirectories.Add(&quot;/config&quot;, vDirMap);\n\n            // Create a VirtualDirectoryMapping object to use\n            // as the default directory for all the virtual \n            // directories.\n            VirtualDirectoryMapping vDirMapBase =\n                new VirtualDirectoryMapping(physDir, true, &quot;web.config&quot;);\n\n            // Add it to the virtual directory mapping collection.\n            fileMap.VirtualDirectories.Add(&quot;/&quot;, vDirMapBase);\n\n# if DEBUG  \n            // Test at debug time.\n            foreach (string key in fileMap.VirtualDirectories.AllKeys)\n            {\n                Console.WriteLine(&quot;Virtual directory: {0} Physical path: {1}&quot;,\n                fileMap.VirtualDirectories[key].VirtualDirectory, \n                fileMap.VirtualDirectories[key].PhysicalDirectory);\n            }\n# endif \n\n            // Return the mapping.\n            return fileMap;\n\n        }\n</code></pre><p> Refer to <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\" data-linktype=\"relative-path\">OpenMachineConfiguration</a> for an example that shows how to map a virtual directory hierarchy to a physical one.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_System_Web_Configuration_WebConfigurationFileMap_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMappedWebConfiguration(WebConfigurationFileMap,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the specified Web application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping, virtual path, and site name to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileMap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.configuration.webconfigurationfilemap\" data-linktype=\"relative-path\">WebConfigurationFileMap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.configuration.webconfigurationfilemap\" data-linktype=\"relative-path\">WebConfigurationFileMap</a> object to use in place of a default Web-application configuration-file mapping.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a resource, your code must have read privileges on all the configuration files from which it inherits settings. To update a configuration file, your code must additionally have write privileges for both the configuration file and the directory in which it exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the OpenMappedWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#22\">   &#39; Show how to use the OpenMappedWebConfiguration(\n   &#39; WebConfigurationFileMap, string, string).\n   Shared Sub OpenMappedWebConfiguration2()\n      \n      &#39; Create the configuration directories mapping.\n      Dim fileMap As WebConfigurationFileMap = CreateFileMap()\n      \n      Try\n         \n         &#39; Get the Configuration object for the mapped\n         &#39; virtual directory.\n            Dim config As System.Configuration.Configuration = _\n            WebConfigurationManager.OpenMappedWebConfiguration( _\n            fileMap, &quot;/config&quot;, &quot;config&quot;)\n         \n         &#39; Define a nique key for the creation of \n         &#39; an appSettings element entry.\n         Dim appStgCnt As Integer = config.AppSettings.Settings.Count\n         Dim asName As String = &quot;AppSetting&quot; + appStgCnt.ToString()\n         \n         &#39; Add a new element to the appSettings.\n            config.AppSettings.Settings.Add(asName, _\n            DateTime.Now.ToLongDateString() + &quot; &quot; + _\n            DateTime.Now.ToLongTimeString())\n         \n         &#39; Save to the configuration file.\n         config.Save(ConfigurationSaveMode.Modified)\n         \n         &#39; Display new appSettings.\n            Console.WriteLine(&quot;Count:  [{0}]&quot;, _\n            config.AppSettings.Settings.Count)\n         Dim key As String\n         For Each key In  config.AppSettings.Settings.AllKeys\n                Console.WriteLine(&quot;[{0}] = [{1}]&quot;, _\n                key, config.AppSettings.Settings(key).Value)\n         Next key\n      \n      Catch err As InvalidOperationException\n         Console.WriteLine(err.ToString())\n      End Try\n      \n      Console.WriteLine()\n   End Sub &#39;OpenMappedWebConfiguration2\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#22\">\n        // Show how to use the OpenMappedWebConfiguration(\n        // WebConfigurationFileMap, string, string).\n        static void OpenMappedWebConfiguration2()\n        {\n\n            // Create the configuration directories mapping.\n            WebConfigurationFileMap fileMap =\n                CreateFileMap();\n\n            try\n            {\n\n                // Get the Configuration object for the mapped\n                // virtual directory.\n                System.Configuration.Configuration config = \n                    WebConfigurationManager.OpenMappedWebConfiguration(\n                    fileMap, &quot;/config&quot;, &quot;config&quot;);\n                \n                // Define a nique key for the creation of \n                // an appSettings element entry.\n                int appStgCnt = config.AppSettings.Settings.Count;\n                string asName = &quot;AppSetting&quot; + appStgCnt.ToString();\n\n                // Add a new element to the appSettings.\n                config.AppSettings.Settings.Add(asName,\n                    DateTime.Now.ToLongDateString() + &quot; &quot; +\n                    DateTime.Now.ToLongTimeString());\n\n                // Save to the configuration file.\n                config.Save(ConfigurationSaveMode.Modified);\n\n                // Display new appSettings.\n                Console.WriteLine(&quot;Count:  [{0}]&quot;, \n                    config.AppSettings.Settings.Count);\n                foreach (string key in config.AppSettings.Settings.AllKeys)\n                {\n                    Console.WriteLine(&quot;[{0}] = [{1}]&quot;, key,\n                        config.AppSettings.Settings[key].Value);\n                }\n\n            }\n            catch (InvalidOperationException err)\n            {\n                Console.WriteLine(err.ToString());\n            }\n\n            Console.WriteLine();\n        }\n</code></pre><p> Refer to <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\" data-linktype=\"relative-path\">OpenMachineConfiguration</a> for an example that shows how to map a virtual directory hierarchy to a physical one.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_System_Web_Configuration_WebConfigurationFileMap_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenMappedWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMappedWebConfiguration(WebConfigurationFileMap,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the specified Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified file mapping, virtual path, site name, and location to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileMap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.configuration.webconfigurationfilemap\" data-linktype=\"relative-path\">WebConfigurationFileMap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.configuration.webconfigurationfilemap\" data-linktype=\"relative-path\">WebConfigurationFileMap</a> object to use in place of a default Web-application configuration-file mapping.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specific resource to which the configuration applies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a resource, your code must have read privileges on all the configuration files from which it inherits settings. To update a configuration file, your code must additionally have write privileges for both the configuration file and the directory in which it exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the OpenMappedWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#23\">   &#39; Show how to use the OpenMappedWebConfiguration(\n   &#39; WebConfigurationFileMap, string, string, string).\n   Shared Sub OpenMappedWebConfiguration3()\n      \n      &#39; Create the configuration directories mapping.\n      Dim fileMap As WebConfigurationFileMap = CreateFileMap()\n      \n      Try\n         \n         &#39; Get the Configuration object for the mapped\n         &#39; virtual directory.\n            Dim config As System.Configuration.Configuration = _\n            WebConfigurationManager.OpenMappedWebConfiguration( _\n            fileMap, &quot;/config&quot;, &quot;config&quot;, &quot;config&quot;)\n         \n         &#39; Define a nique key for the creation of \n         &#39; an appSettings element entry.\n         Dim appStgCnt As Integer = config.AppSettings.Settings.Count\n         Dim asName As String = &quot;AppSetting&quot; + appStgCnt.ToString()\n         \n         &#39; Add a new element to the appSettings.\n            config.AppSettings.Settings.Add(asName, _\n            DateTime.Now.ToLongDateString() + &quot; &quot; + _\n            DateTime.Now.ToLongTimeString())\n         \n         &#39; Save to the configuration file.\n         config.Save(ConfigurationSaveMode.Modified)\n         \n         &#39; Display new appSettings.\n            Console.WriteLine(&quot;Count:  [{0}]&quot;, _\n            config.AppSettings.Settings.Count)\n         Dim key As String\n         For Each key In  config.AppSettings.Settings.AllKeys\n                Console.WriteLine(&quot;[{0}] = [{1}]&quot;, _\n                key, config.AppSettings.Settings(key).Value)\n         Next key\n      \n      Catch err As InvalidOperationException\n         Console.WriteLine(err.ToString())\n      End Try\n      \n      Console.WriteLine()\n   End Sub &#39;OpenMappedWebConfiguration3\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#23\">\n        // Show how to use the OpenMappedWebConfiguration(\n        // WebConfigurationFileMap, string, string, string).\n        static void OpenMappedWebConfiguration3()\n        {\n\n            // Create the configuration directories mapping.\n            WebConfigurationFileMap fileMap =\n                CreateFileMap();\n\n            try\n            {\n\n                // Get the Configuration object for the mapped\n                // virtual directory.\n                System.Configuration.Configuration config =\n                    WebConfigurationManager.OpenMappedWebConfiguration(\n                    fileMap, &quot;/config&quot;, &quot;config&quot;, &quot;config&quot;);\n\n                // Define a nique key for the creation of \n                // an appSettings element entry.\n                int appStgCnt = config.AppSettings.Settings.Count;\n                string asName = &quot;AppSetting&quot; + appStgCnt.ToString();\n\n                // Add a new element to the appSettings.\n                config.AppSettings.Settings.Add(asName,\n                    DateTime.Now.ToLongDateString() + &quot; &quot; +\n                    DateTime.Now.ToLongTimeString());\n\n                // Save to the configuration file.\n                config.Save(ConfigurationSaveMode.Modified);\n\n                // Display new appSettings.\n                Console.WriteLine(&quot;Count:  [{0}]&quot;, \n                    config.AppSettings.Settings.Count);\n                foreach (string key in config.AppSettings.Settings.AllKeys)\n                {\n                    Console.WriteLine(&quot;[{0}] = [{1}]&quot;, key,\n                        config.AppSettings.Settings[key].Value);\n                }\n\n            }\n            catch (InvalidOperationException err)\n            {\n                Console.WriteLine(err.ToString());\n            }\n\n            Console.WriteLine();\n        }\n</code></pre><p> Refer to <a class=\"xref\" href=\"system.web.configuration.webconfigurationmanager#System_Web_Configuration_WebConfigurationManager_OpenMachineConfiguration_\" data-linktype=\"relative-path\">OpenMachineConfiguration</a> for an example that shows how to map a virtual directory hierarchy to a physical one.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWebConfiguration(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenWebConfiguration (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file. If <code>null</code>, the root Web.config file is opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a resource, your code must have read privileges on all the configuration files from which it inherits settings. To update a configuration file, your code must additionally have write privileges for both the configuration file and the directory in which it exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#14\">   &#39; Show how to use OpenWebConfiguration(string).\n   &#39; It gets he appSettings section of a Web application \n   &#39; runnig on the local server. \n   Shared Sub OpenWebConfiguration1()\n      &#39; Get the configuration object for a Web application\n      &#39; running on the local server. \n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenWebConfiguration(&quot;/configTest&quot;)\n      \n      &#39; Get the appSettings.\n        Dim appSettings As KeyValueConfigurationCollection = _\n        config.AppSettings.Settings\n      \n      \n      &#39; Loop through the collection and\n      &#39; display the appSettings key, value pairs.\n      Console.WriteLine(&quot;[appSettings for app at: {0}]&quot;, &quot;/configTest&quot;)\n      Dim key As String\n      For Each key In  appSettings.AllKeys\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            key, appSettings(key).Value)\n      Next key\n      \n      Console.WriteLine()\n   End Sub &#39;OpenWebConfiguration1\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#14\">\n        // Show how to use OpenWebConfiguration(string).\n        // It gets he appSettings section of a Web application \n        // runnig on the local server. \n        static void OpenWebConfiguration1()\n        {\n            // Get the configuration object for a Web application\n            // running on the local server. \n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenWebConfiguration(&quot;/configTest&quot;) \n                as System.Configuration.Configuration; \n\n            // Get the appSettings.\n            KeyValueConfigurationCollection appSettings =\n                 config.AppSettings.Settings;\n\n\n            // Loop through the collection and\n            // display the appSettings key, value pairs.\n            Console.WriteLine(&quot;[appSettings for app at: {0}]&quot;, &quot;/configTest&quot;);\n            foreach (string key in appSettings.AllKeys)\n            {\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                key, appSettings[key].Value);\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWebConfiguration(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path and site name to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenWebConfiguration (string path, string site);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a resource, your code must have read privileges on all the configuration files from which it inherits settings. To update a configuration file, your code must additionally have write privileges for both the configuration file and the directory in which it exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#15\">   &#39; Show how to use OpenWebConfiguration(string, string).\n   &#39; It gets he appSettings section of a Web application \n   &#39; runnig on the local server. \n   Shared Sub OpenWebConfiguration2()\n      &#39; Get the configuration object for a Web application\n      &#39; running on the local server. \n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenWebConfiguration( _\n        &quot;/configTest&quot;, &quot;Default Web Site&quot;)\n      \n      &#39; Get the appSettings.\n        Dim appSettings As KeyValueConfigurationCollection = _\n        config.AppSettings.Settings\n      \n      \n      &#39; Loop through the collection and\n      &#39; display the appSettings key, value pairs.\n      Console.WriteLine(&quot;[appSettings for app at: /configTest&quot;)\n      Console.WriteLine(&quot; and site: Default Web Site]&quot;)\n      \n      Dim key As String\n      For Each key In  appSettings.AllKeys\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            key, appSettings(key).Value)\n      Next key\n      \n      Console.WriteLine()\n   End Sub &#39;OpenWebConfiguration2\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#15\">\n        // Show how to use OpenWebConfiguration(string, string).\n        // It gets he appSettings section of a Web application \n        // runnig on the local server. \n        static void OpenWebConfiguration2()\n        {\n            // Get the configuration object for a Web application\n            // running on the local server. \n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenWebConfiguration(&quot;/configTest&quot;, \n                &quot;Default Web Site&quot;)\n                as System.Configuration.Configuration;\n\n            // Get the appSettings.\n            KeyValueConfigurationCollection appSettings =\n                 config.AppSettings.Settings;\n\n\n            // Loop through the collection and\n            // display the appSettings key, value pairs.\n            Console.WriteLine(\n                &quot;[appSettings for app at: /configTest&quot;);\n            Console.WriteLine(&quot; and site: Default Web Site]&quot;);\n\n            foreach (string key in appSettings.AllKeys)\n            {\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                key, appSettings[key].Value);\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWebConfiguration(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, and location to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specific resource to which the configuration applies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a resource, your code must have read privileges on all the configuration files from which it inherits settings. To update a configuration file, your code must additionally have write privileges for both the configuration file and the directory in which it exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#16\">   &#39; Show how to use OpenWebConfiguration(string, string, string).\n   &#39; It gets he appSettings section of a Web application \n   &#39; runnig on the local server. \n   Shared Sub OpenWebConfiguration3()\n      &#39; Get the configuration object for a Web application\n      &#39; running on the local server. \n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenWebConfiguration( _\n        &quot;/configTest&quot;, &quot;Default Web Site&quot;, Nothing)\n      \n      &#39; Get the appSettings.\n        Dim appSettings As KeyValueConfigurationCollection = _\n        config.AppSettings.Settings\n      \n      &#39; Loop through the collection and\n      &#39; display the appSettings key, value pairs.\n      Console.WriteLine(&quot;[appSettings for app at: /configTest&quot;)\n      Console.WriteLine(&quot; site: Default Web Site&quot;)\n      Console.WriteLine(&quot; and locationSubPath: null]&quot;)\n      \n      Dim key As String\n      For Each key In  appSettings.AllKeys\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            key, appSettings(key).Value)\n      Next key\n      \n      Console.WriteLine()\n   End Sub &#39;OpenWebConfiguration3\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#16\">\n        // Show how to use OpenWebConfiguration(string, string, string).\n        // It gets he appSettings section of a Web application \n        // runnig on the local server. \n        static void OpenWebConfiguration3()\n        {\n            // Get the configuration object for a Web application\n            // running on the local server. \n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenWebConfiguration(\n                &quot;/configTest&quot;, &quot;Default Web Site&quot;, null)\n                as System.Configuration.Configuration;\n\n            // Get the appSettings.\n            KeyValueConfigurationCollection appSettings =\n                 config.AppSettings.Settings;\n\n            // Loop through the collection and\n            // display the appSettings key, value pairs.\n            Console.WriteLine(\n                &quot;[appSettings for app at: /configTest&quot;);\n            Console.WriteLine(&quot; site: Default Web Site&quot;);\n            Console.WriteLine(&quot; and locationSubPath: null]&quot;);\n            \n            foreach (string key in appSettings.AllKeys)\n            {\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                key, appSettings[key].Value);\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWebConfiguration(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, location, and server to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specific resource to which the configuration applies.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>server</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The network name of the server the Web application resides on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The server parameter was invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a remote resource, your code must have administrative privileges on the remote computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#17\">   &#39; Show how to use OpenWebConfiguration(string, string, \n   &#39; string, string).\n   &#39; It gets he appSettings section of a Web application \n   &#39; running on the specified server. \n   &#39; If the server is remote your application must have the\n   &#39; required access rights to the configuration file. \n   Shared Sub OpenWebConfiguration4()\n      &#39; Get the configuration object for a Web application\n      &#39; running on the specified server.\n      &#39; Null for the subPath signifies no subdir. \n      Dim config As System.Configuration.Configuration = WebConfigurationManager.OpenWebConfiguration(&quot;/configTest&quot;, &quot;Default Web Site&quot;, Nothing, &quot;myServer&quot;)\n      \n      &#39; Get the appSettings.\n      Dim appSettings As KeyValueConfigurationCollection = config.AppSettings.Settings\n      \n      \n      &#39; Loop through the collection and\n      &#39; display the appSettings key, value pairs.\n      Console.WriteLine(&quot;[appSettings for Web app on server: myServer]&quot;)\n      Dim key As String\n      For Each key In  appSettings.AllKeys\n         Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, key, appSettings(key).Value)\n      Next key\n      \n      Console.WriteLine()\n   End Sub &#39;OpenWebConfiguration4\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#17\">\n        // Show how to use OpenWebConfiguration(string, string, \n        // string, string).\n        // It gets he appSettings section of a Web application \n        // running on the specified server. \n        // If the server is remote your application must have the\n        // required access rights to the configuration file. \n        static void OpenWebConfiguration4()\n        {\n            // Get the configuration object for a Web application\n            // running on the specified server.\n            // Null for the subPath signifies no subdir. \n            System.Configuration.Configuration config =\n                   WebConfigurationManager.OpenWebConfiguration(\n                    &quot;/configTest&quot;, &quot;Default Web Site&quot;, null, &quot;myServer&quot;)\n                   as System.Configuration.Configuration;\n            \n            // Get the appSettings.\n            KeyValueConfigurationCollection appSettings =\n                 config.AppSettings.Settings;\n\n\n            // Loop through the collection and\n            // display the appSettings key, value pairs.\n            Console.WriteLine(&quot;[appSettings for Web app on server: myServer]&quot;);\n            foreach (string key in appSettings.AllKeys)\n            {\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                key, appSettings[key].Value);\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_System_String_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWebConfiguration(String,String,String,String,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, location, server, and security context to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, IntPtr userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specific resource to which the configuration applies.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>server</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The network name of the server the Web application resides on.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An account token to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>server</code> or <code>userToken</code> parameters were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>A valid configuration file could not be loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to access a configuration file using impersonation.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The account token is usually retrieved from an instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class or through a call to unmanaged code, such as a call to the Win32 API <code>LogonUser</code>. For more information about calls to unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.  </p>\n</div>\n<p> To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a remote resource, your code must have administrative privileges on the remote computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the OpenWebConfiguration method to access configuration information.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#19\">   &#39; Show how to use OpenWebConfiguration(string, string, \n   &#39; string, string, IntPtr).\n   &#39; It gets he appSettings section of a Web application \n   &#39; running on a remote server. \n   &#39; If the serve is remote your application shall have the\n   &#39; requires access rights to the configuration file. \n   Shared Sub OpenWebConfiguration6()\n      \n        Dim userToken As IntPtr = _\n        System.Security.Principal.WindowsIdentity.GetCurrent().Token\n      \n        Dim user As String = _\n        System.Security.Principal.WindowsIdentity.GetCurrent().Name\n      \n      &#39; Get the configuration object for a Web application\n      &#39; running on a remote server.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenWebConfiguration( _\n        &quot;/configTest&quot;, &quot;Default Web Site&quot;, _\n        Nothing, &quot;myServer&quot;, userToken)\n      \n      &#39; Get the appSettings.\n        Dim appSettings As KeyValueConfigurationCollection = _\n        config.AppSettings.Settings\n      \n      &#39; Loop through the collection and\n      &#39; display the appSettings key, value pairs.\n        Console.WriteLine( _\n        &quot;[appSettings for Web app on server: myServer user: {0}]&quot;, user)\n      Dim key As String\n      For Each key In  appSettings.AllKeys\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            key, appSettings(key).Value)\n      Next key\n      \n      Console.WriteLine()\n   End Sub &#39;OpenWebConfiguration6\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#19\">\n        // Show how to use OpenWebConfiguration(string, string, \n        // string, string, IntPtr).\n        // It gets he appSettings section of a Web application \n        // running on a remote server. \n        // If the serve is remote your application shall have the\n        // requires access rights to the configuration file. \n        static void OpenWebConfiguration6()\n        {\n\n            IntPtr userToken = \n                System.Security.Principal.WindowsIdentity.GetCurrent().Token;\n           \n            string user = \n                System.Security.Principal.WindowsIdentity.GetCurrent().Name;\n            \n            // Get the configuration object for a Web application\n            // running on a remote server.\n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenWebConfiguration(\n                &quot;/configTest&quot;, &quot;Default Web Site&quot;, null, \n                &quot;myServer&quot;, userToken) as System.Configuration.Configuration;\n\n            // Get the appSettings.\n            KeyValueConfigurationCollection appSettings =\n                 config.AppSettings.Settings;\n\n            // Loop through the collection and\n            // display the appSettings key, value pairs.\n            Console.WriteLine(\n                &quot;[appSettings for Web app on server: myServer user: {0}]&quot;, user);\n            foreach (string key in appSettings.AllKeys)\n            {\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                key, appSettings[key].Value);\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_System_String_System_String_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Configuration_WebConfigurationManager_OpenWebConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWebConfiguration(String,String,String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens the Web-application configuration file as a <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object using the specified virtual path, site name, location, server, and security context to allow read or write operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, string userName, string password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to the configuration file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the application Web site, as displayed in Internet Information Services (IIS) configuration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>locationSubPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specific resource to which the configuration applies.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>server</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The network name of the server the Web application resides on.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The full user name (Domain\\User) to use when opening the file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the user name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>server</code> or <code>userName</code> and <code>password</code> parameters were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>Could not load a valid configuration file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to access a configuration file using impersonation.  </p>\n<p> To obtain the <a class=\"xref\" href=\"system.configuration.configuration\" data-linktype=\"relative-path\">Configuration</a> object for a remote resource, your code must have administrative privileges on the remote computer.  </p>\n<p> You might need to run the <a href=\"../Topic/ASP.NET%20IIS%20Registration%20Tool%20(Aspnet_regiis.exe).md\" data-linktype=\"relative-path\">ASP.NET IIS Registration Tool (Aspnet_regiis.exe)</a> with the <code>-config+</code> option to enable access to the configuration files on the remote computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access configuration information with the OpenWebConfiguration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Configuration.WebConfigurationManager#18\">   &#39; Show how to use OpenWebConfiguration(string, string, \n   &#39; string, string, string, string).\n   &#39; It gets he appSettings section of a Web application \n   &#39; running on a remote server. \n   &#39; If the server is remote your application must have the\n   &#39; required access rights to the configuration file. \n   Shared Sub OpenWebConfiguration5()\n      &#39; Get the current user.\n        Dim user As String = _\n        System.Security.Principal.WindowsIdentity.GetCurrent().Name\n      \n      &#39; Assign the actual password.\n      Dim password As String = &quot;userPassword&quot;\n      \n      &#39; Get the configuration object for a Web application\n      &#39; running on a remote server.\n        Dim config As System.Configuration.Configuration = _\n        WebConfigurationManager.OpenWebConfiguration( _\n        &quot;/configTest&quot;, &quot;Default Web Site&quot;, _\n        Nothing, &quot;myServer&quot;, user, password)\n      \n      &#39; Get the appSettings.\n        Dim appSettings As KeyValueConfigurationCollection = _\n        config.AppSettings.Settings\n      \n      \n      &#39; Loop through the collection and\n      &#39; display the appSettings key, value pairs.\n        Console.WriteLine( _\n        &quot;[appSettings for Web app on server: myServer user: {0}]&quot;, user)\n      Dim key As String\n      For Each key In  appSettings.AllKeys\n            Console.WriteLine(&quot;Name: {0} Value: {1}&quot;, _\n            key, appSettings(key).Value)\n      Next key\n      \n      Console.WriteLine()\n   End Sub &#39;OpenWebConfiguration5\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Configuration.WebConfigurationManager#18\">\n        // Show how to use OpenWebConfiguration(string, string, \n        // string, string, string, string).\n        // It gets he appSettings section of a Web application \n        // running on a remote server. \n        // If the server is remote your application must have the\n        // required access rights to the configuration file. \n        static void OpenWebConfiguration5()\n        {\n            // Get the current user.\n            string user =\n                System.Security.Principal.WindowsIdentity.GetCurrent().Name;\n            \n            // Assign the actual password.\n            string password = &quot;userPassword&quot;;\n\n            // Get the configuration object for a Web application\n            // running on a remote server.\n            System.Configuration.Configuration config =\n                WebConfigurationManager.OpenWebConfiguration(\n                &quot;/configTest&quot;, &quot;Default Web Site&quot;, null, &quot;myServer&quot;,\n                user, password) as System.Configuration.Configuration;\n\n            // Get the appSettings.\n            KeyValueConfigurationCollection appSettings =\n                 config.AppSettings.Settings;\n\n\n            // Loop through the collection and\n            // display the appSettings key, value pairs.\n            Console.WriteLine(\n                &quot;[appSettings for Web app on server: myServer user: {0}]&quot;, user);\n            foreach (string key in appSettings.AllKeys)\n            {\n                Console.WriteLine(&quot;Name: {0} Value: {1}&quot;,\n                key, appSettings[key].Value);\n            }\n\n            Console.WriteLine();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Configuration.WebConfigurationManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Configuration.WebConfigurationManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.AppSettings\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.ConnectionStrings\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.GetSection\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration\">\r\n<meta name=\"APIName\" content=\"System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7edfb747-374c-b215-80e5-5d1c9d980047\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to configuration files as they apply to Web applications.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Configuration/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Configuration.WebConfigurationManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Configuration.WebConfigurationManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Configuration.WebConfigurationManager.yml","open_to_public_contributors":true,"api_name":["System.Web.Configuration.WebConfigurationManager","System.Web.Configuration.WebConfigurationManager.AppSettings","System.Web.Configuration.WebConfigurationManager.ConnectionStrings","System.Web.Configuration.WebConfigurationManager.GetSection","System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection","System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration","System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration","System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration","System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Configuration.WebConfigurationManager","System::Web::Configuration::WebConfigurationManager","System.Web.Configuration.WebConfigurationManager.AppSettings","System::Web::Configuration::WebConfigurationManager::AppSettings","System.Web.Configuration.WebConfigurationManager.ConnectionStrings","System::Web::Configuration::WebConfigurationManager::ConnectionStrings","System.Web.Configuration.WebConfigurationManager.GetSection","System::Web::Configuration::WebConfigurationManager::GetSection","System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection","System::Web::Configuration::WebConfigurationManager::GetWebApplicationSection","System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration","System::Web::Configuration::WebConfigurationManager::OpenMachineConfiguration","System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration","System::Web::Configuration::WebConfigurationManager::OpenMappedMachineConfiguration","System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration","System::Web::Configuration::WebConfigurationManager::OpenMappedWebConfiguration","System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration","System::Web::Configuration::WebConfigurationManager::OpenWebConfiguration"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7edfb747-374c-b215-80e5-5d1c9d980047","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Configuration/WebConfigurationManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WebConfigurationManager class | Microsoft Docs","_op_ogTitle":"WebConfigurationManager class","description":"Provides access to configuration files as they apply to Web applications.\n","toc_asset_id":"_splitted/System.Web.Configuration/toc.json","toc_rel":"_splitted/System.Web.Configuration/toc.json","source_url":"","ms.assetid":"System.Web.Configuration.WebConfigurationManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.configuration.webconfigurationmanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.configuration.webconfigurationmanager","fileRelativePath":"System.Web.Configuration.WebConfigurationManager.html"},"themesRelativePathToOutputRoot":"_themes/"}