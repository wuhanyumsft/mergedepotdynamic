{"content":"    \r\n    <h1 id=\"System_Windows_Forms_FileDialog\">\r\n      <span class=\"lang-csharp\">FileDialog</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Displays a dialog box from which the user can select a file.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;FileOk&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;FileName&quot;)]\npublic abstract class FileDialog : System.Windows.Forms.CommonDialog</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog\" data-linktype=\"relative-path\">System.Windows.Forms.CommonDialog</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FileDialog</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_HelpRequest\" data-linktype=\"relative-path\">HelpRequest</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_OnHelpRequest_System_EventArgs_\" data-linktype=\"relative-path\">OnHelpRequest(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_OwnerWndProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog\" data-linktype=\"relative-path\">ShowDialog()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_System_Windows_Forms_IWin32Window_\" data-linktype=\"relative-path\">ShowDialog(IWin32Window)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>FileDialog is an abstract class that contains common behavior for the <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> and <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a> classes. It is not intended to be used directly but contains common behavior for those two classes. You cannot create an instance of FileDialog. Although the class is declared public, you cannot inherit from it, as it contains internal abstract methods. To create a dialog box to select or save a file, use <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> or <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a>.  </p>\n<p> FileDialog is a modal dialog box; therefore, when shown, it blocks the rest of the application until the user has chosen a file. When a dialog box is displayed modally, no input (keyboard or mouse click) can occur except to objects on the dialog box. The program must hide or close the dialog box (usually in response to some user action) before input to the calling program can occur.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> When you use classes derived from FileDialog, such as <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> and <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a>, avoid using string literals containing absolute paths. Instead, dynamically obtain the path using one or more of the techniques described in the following table.  </p>\n</div>\n<p> If you want to enable users to select a folder instead of a file, use the <a class=\"xref\" href=\"system.windows.forms.folderbrowserdialog\" data-linktype=\"relative-path\">FolderBrowserDialog</a>.  </p>\n<p> Depending upon the type of application, how data associated with the application is stored, and the reason for accessing the file system, there are many possible ways in which you can create a directory path. The following table shows the techniques for creating paths dynamically.  </p>\n<table>\n<thead>\n<tr>\n<th>Path or program category</th>\n<th>Class and members to use</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Standard Windows paths, such as Program Files, MyDocuments, the Desktop and so on</td>\n<td>The <a class=\"xref\" href=\"system.environment\" data-linktype=\"relative-path\">System.Environment</a> class is the most complete source for these, either through its static methods, such as <a class=\"xref\" href=\"system.environment#System_Environment_SystemDirectory_\" data-linktype=\"relative-path\">SystemDirectory</a>, or through the <a class=\"xref\" href=\"system.environment#System_Environment_GetFolderPath_\" data-linktype=\"relative-path\">GetFolderPath</a> method, using one of the <a class=\"xref\" href=\"system.environment.specialfolder\" data-linktype=\"relative-path\">Environment+SpecialFolder</a> enumerated values.</td>\n</tr>\n<tr>\n<td>Paths related to the current application</td>\n<td>The <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a> class has static members to obtain certain paths, such as <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_StartupPath_\" data-linktype=\"relative-path\">StartupPath</a>, <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_ExecutablePath_\" data-linktype=\"relative-path\">ExecutablePath</a>, <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_LocalUserAppDataPath_\" data-linktype=\"relative-path\">LocalUserAppDataPath</a>, and <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_CommonAppDataPath_\" data-linktype=\"relative-path\">CommonAppDataPath</a>.<br><br> The <a class=\"xref\" href=\"system.io.path#System_IO_Path_GetTempPath_\" data-linktype=\"relative-path\">GetTempPath</a> method of the <a class=\"xref\" href=\"system.io.path\" data-linktype=\"relative-path\">System.IO.Path</a> returns the path of the temporary folder.<br><br> The <a class=\"xref\" href=\"system.io.directory#System_IO_Directory_GetCurrentDirectory_\" data-linktype=\"relative-path\">GetCurrentDirectory</a> method of the <a class=\"xref\" href=\"system.io.directory\" data-linktype=\"relative-path\">System.IO.Directory</a> class returns the application&#39;s current executing directory.<br><br> The <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_RootDirectory_\" data-linktype=\"relative-path\">RootDirectory</a> property of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class represents the specified drive&#39;s root directory.</td>\n</tr>\n<tr>\n<td>Paths stored as application settings</td>\n<td>Access the corresponding applications settings property of the wrapper class derived from <a class=\"xref\" href=\"system.configuration.applicationsettingsbase\" data-linktype=\"relative-path\">ApplicationSettingsBase</a>. For more information, see <a href=\"../Topic/Application%20Settings%20for%20Windows%20Forms.md\" data-linktype=\"relative-path\">Application Settings for Windows Forms</a>.</td>\n</tr>\n<tr>\n<td>Registry storage</td>\n<td>Some applications store directory information in the registry. The <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a> class has the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_CommonAppDataPath_\" data-linktype=\"relative-path\">CommonAppDataPath</a> and <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_LocalUserAppDataPath_\" data-linktype=\"relative-path\">LocalUserAppDataPath</a> properties that resolve to a <a class=\"xref\" href=\"microsoft.win32.registrykey\" data-linktype=\"relative-path\">RegistryKey</a> value.</td>\n</tr>\n<tr>\n<td>ClickOnce applications</td>\n<td>For ClickOnce applications, use <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a> class members such as <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_UserAppDataPath_\" data-linktype=\"relative-path\">UserAppDataPath</a>, which will return a pointer to the ClickOnce data directory. For more information, see <a href=\"../Topic/Accessing%20Local%20and%20Remote%20Data%20in%20ClickOnce%20Applications.md\" data-linktype=\"relative-path\">Accessing Local and Remote Data in ClickOnce Applications</a>.</td>\n</tr>\n<tr>\n<td>International applications</td>\n<td>For international applications, retrieve the relative path portion from a string resource in your application by using the <a class=\"xref\" href=\"system.resources.resourcereader\" data-linktype=\"relative-path\">System.Resources.ResourceReader</a> class. For more information about globalization and localization, see the topic <a href=\"../Topic/Globalizing%20and%20Localizing%20.NET%20Framework%20Applications.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</td>\n</tr>\n</tbody>\n</table>\n<p> Notice that a full path may be built up using one or more of the described techniques. For example, the <a class=\"xref\" href=\"system.environment#System_Environment_GetFolderPath_\" data-linktype=\"relative-path\">GetFolderPath</a> method might be used to obtain the path to the MyDocuments folder, then an application setting may be used to add a relative subdirectory portion.  </p>\n<p> The <a class=\"xref\" href=\"system.io.path\" data-linktype=\"relative-path\">System.IO.Path</a> class contains static members to assist in manipulating absolute and relative path strings, whereas the <a class=\"xref\" href=\"system.io.file\" data-linktype=\"relative-path\">System.IO.File</a> and <a class=\"xref\" href=\"system.io.directory\" data-linktype=\"relative-path\">System.IO.Directory</a> classes have static members that actually manipulate files and directories, respectively.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If the user of your application changes the folder in the FileDialog, then the current working directory for your application is set to the location specified in the FileDialog. To prevent this, set the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_RestoreDirectory_\" data-linktype=\"relative-path\">RestoreDirectory</a> property to <code>true</code>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_EventFileOk\" data-linktype=\"self-bookmark\">EventFileOk</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Owns the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileOk\" data-linktype=\"relative-path\">FileOk</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_AddExtension\" data-linktype=\"self-bookmark\">AddExtension</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_AutoUpgradeEnabled\" data-linktype=\"self-bookmark\">AutoUpgradeEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> instance should automatically upgrade appearance and behavior when running on <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/wiprlhext-md.md&quot; -->Windows Vista<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_CheckFileExists\" data-linktype=\"self-bookmark\">CheckFileExists</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_CheckPathExists\" data-linktype=\"self-bookmark\">CheckPathExists</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_CustomPlaces\" data-linktype=\"self-bookmark\">CustomPlaces</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the custom places collection for this <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_DefaultExt\" data-linktype=\"self-bookmark\">DefaultExt</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default file name extension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_DereferenceLinks\" data-linktype=\"self-bookmark\">DereferenceLinks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_FileName\" data-linktype=\"self-bookmark\">FileName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string containing the file name selected in the file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_FileNames\" data-linktype=\"self-bookmark\">FileNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the file names of all selected files in the dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_Filter\" data-linktype=\"self-bookmark\">Filter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the current file name filter string, which determines the choices that appear in the &quot;Save as file type&quot; or &quot;Files of type&quot; box in the dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_FilterIndex\" data-linktype=\"self-bookmark\">FilterIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the filter currently selected in the file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_InitialDirectory\" data-linktype=\"self-bookmark\">InitialDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the initial directory displayed by the file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_Instance\" data-linktype=\"self-bookmark\">Instance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Win32 instance handle for the application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_Options\" data-linktype=\"self-bookmark\">Options</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets values to initialize the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_RestoreDirectory\" data-linktype=\"self-bookmark\">RestoreDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_ShowHelp\" data-linktype=\"self-bookmark\">ShowHelp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <strong>Help</strong> button is displayed in the file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_SupportMultiDottedExtensions\" data-linktype=\"self-bookmark\">SupportMultiDottedExtensions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_Title\" data-linktype=\"self-bookmark\">Title</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the file dialog box title.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_ValidateNames\" data-linktype=\"self-bookmark\">ValidateNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_HookProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">HookProc(IntPtr,Int32,IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_OnFileOk_System_ComponentModel_CancelEventArgs_\" data-linktype=\"self-bookmark\">OnFileOk(CancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileOk\" data-linktype=\"relative-path\">FileOk</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets all properties to their default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_RunDialog_System_IntPtr_\" data-linktype=\"self-bookmark\">RunDialog(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies a common dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a string version of this object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_FileDialog_FileOk\" data-linktype=\"self-bookmark\">FileOk</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks on the <strong>Open</strong> or <strong>Save</strong> button on a file dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_EventFileOk\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventFileOk</div>        \r\n          </div>\r\n    \r\n            <p>Owns the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileOk\" data-linktype=\"relative-path\">FileOk</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static readonly object EventFileOk;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_AddExtension\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_AddExtension_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddExtension</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box automatically adds an extension to a file name if the user omits the extension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AddExtension { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box adds an extension to a file name if the user omits the extension; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The extension added to a file name depends on the currently selected file filter and the value of the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_CheckFileExists_\" data-linktype=\"relative-path\">CheckFileExists</a> property.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_CheckFileExists_\" data-linktype=\"relative-path\">CheckFileExists</a> property is <code>true</code>, the dialog box adds the first extension from the current file filter that matches an existing file. If no files match the current file filter, the dialog box adds the extension specified in the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_DefaultExt_\" data-linktype=\"relative-path\">DefaultExt</a> property.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_CheckFileExists_\" data-linktype=\"relative-path\">CheckFileExists</a> property is <code>false</code>, the dialog box adds the first valid file name extension from the current file filter. If the current file filter contains no valid file name extensions, the dialog box adds the extension specified in the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_DefaultExt_\" data-linktype=\"relative-path\">DefaultExt</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_AutoUpgradeEnabled\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_AutoUpgradeEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoUpgradeEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> instance should automatically upgrade appearance and behavior when running on <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/wiprlhext-md.md&quot; -->Windows Vista<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoUpgradeEnabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> instance should automatically upgrade appearance and behavior when running on <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/wiprlhext-md.md&quot; -->Windows Vista<!--END INCLUDE -->; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this property is <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> class will have a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/winxp-md.md&quot; -->Windows XP<!--END INCLUDE -->-style appearance and behavior on <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/wiprlhext-md.md&quot; -->Windows Vista<!--END INCLUDE -->.  </p>\n<p> On <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/winxp-md.md&quot; -->Windows XP<!--END INCLUDE -->, this property does not have any effect.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_CheckFileExists\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_CheckFileExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckFileExists</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CheckFileExists { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box displays a warning if the user specifies a file name that does not exist; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default value is <code>true</code> for an inheriting <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> and <code>false</code> for an inheriting <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_CheckPathExists\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_CheckPathExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckPathExists</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a path that does not exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CheckPathExists { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box displays a warning when the user specifies a path that does not exist; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_CustomPlaces\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_CustomPlaces_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomPlaces</div>        \r\n          </div>\r\n    \r\n            <p>Gets the custom places collection for this <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.filedialogcustomplacescollection\" data-linktype=\"relative-path\">FileDialogCustomPlacesCollection</a></div>\r\n                  </div>\r\n                  <p>The custom places collection for this <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>On <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/winxp-md.md&quot; -->Windows XP<!--END INCLUDE -->, this property does not have any effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CustomPlaces collection. To run this example, paste the following code into a Windows Form and call <code>InitializeDialogAndButton</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FileDialogCommonPlaces#1\">    Private openFileDialog1 As OpenFileDialog\n    Private WithEvents button1 As Button\n\n    Private Sub InitializeDialogAndButton() \n        Me.openFileDialog1 = New System.Windows.Forms.OpenFileDialog()\n        Me.button1 = New System.Windows.Forms.Button()\n        Me.button1.Location = New System.Drawing.Point(53, 37)\n        Me.button1.AutoSize = True\n        Me.button1.Text = &quot;Show dialog with custom places.&quot;\n        Me.button1.UseVisualStyleBackColor = True\n\n        Me.Controls.Add(Me.button1)\n    \n    End Sub\n    \n    \n    Private Sub button1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles button1.Click\n\n        &#39; Add Pictures custom place using GUID.\n        openFileDialog1.CustomPlaces.Add(&quot;33E28130-4E1E-4676-835A-98395C3BC3BB&quot;)\n\n        &#39; Add Links custom place using GUID\n        openFileDialog1.CustomPlaces.Add(New FileDialogCustomPlace _\n            (New Guid(&quot;BFB9D5E0-C6A9-404C-B2B2-AE6DB6AF4968&quot;)))\n\n        &#39; Add Windows custom place using file path.\n        openFileDialog1.CustomPlaces.Add(&quot;c:\\Windows&quot;)\n\n        openFileDialog1.ShowDialog()\n\n    End Sub\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FileDialogCommonPlaces#1\">        private OpenFileDialog openFileDialog1;\n        private Button button1;\n        \n        private void InitializeDialogAndButton()\n        {\n            this.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n            this.button1 = new System.Windows.Forms.Button();\n            this.button1.Location = new System.Drawing.Point(53, 37);\n            this.button1.AutoSize = true;\n            this.button1.Text = &quot;Show dialog with custom places.&quot;;\n            this.button1.UseVisualStyleBackColor = true;\n            this.button1.Click += new System.EventHandler(this.button1_Click);\n            this.Controls.Add(this.button1);\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n            // Add Pictures custom place using GUID.\n            openFileDialog1.CustomPlaces.Add(&quot;33E28130-4E1E-4676-835A-98395C3BC3BB&quot;);\n\n            // Add Links custom place using GUID\n            openFileDialog1.CustomPlaces.Add(\n                new FileDialogCustomPlace(\n                new Guid(&quot;BFB9D5E0-C6A9-404C-B2B2-AE6DB6AF4968&quot;)));\n\n            // Add Windows custom place using file path.\n            openFileDialog1.CustomPlaces.Add(@&quot;c:\\Windows&quot;);\n\n            openFileDialog1.ShowDialog();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_DefaultExt\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_DefaultExt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultExt</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default file name extension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DefaultExt { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The default file name extension. The returned string does not include the period. The default value is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the user of your application specifies a file name without an extension, the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> appends an extension to the file name. The extension that is used is determined by the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Filter_\" data-linktype=\"relative-path\">Filter</a> and DefaultExt properties. If a filter is selected in the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> and the filter specifies an extension, then that extension is used. If the filter selected uses a wildcard in place of the extension, then the extension specified in the DefaultExt property is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_SaveFile_\" data-linktype=\"relative-path\">SaveFile</a> and <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_LoadFile_\" data-linktype=\"relative-path\">LoadFile</a> methods with streams. It also demonstrates using the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileName_\" data-linktype=\"relative-path\">FileName</a>, DefaultExt, <a class=\"xref\" href=\"system.windows.forms.savefiledialog#System_Windows_Forms_SaveFileDialog_CreatePrompt_\" data-linktype=\"relative-path\">CreatePrompt</a>, and <a class=\"xref\" href=\"system.windows.forms.savefiledialog#System_Windows_Forms_SaveFileDialog_OverwritePrompt_\" data-linktype=\"relative-path\">OverwritePrompt</a> members.  </p>\n<p> This is a complete example that is ready to run when you copy it to your project.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.RichTextBoxSaveFile#1\">using System;\nusing System.Drawing;\nusing System.IO;\nusing System.Windows.Forms;\n\npublic partial class Form1: Form\n{\n\tinternal RichTextBox RichTextBox1;\n\tinternal Button Button1;\n\tinternal RichTextBox RichTextBox2;\n\tinternal Button Button2;\n\tinternal SaveFileDialog SaveFileDialog1;\n\n\tpublic Form1() : base()\n\t{   \n\t\tthis.RichTextBox1 = new RichTextBox();\n\t\tthis.Button1 = new Button();\n\t\tthis.RichTextBox2 = new RichTextBox();\n\t\tthis.Button2 = new Button();\n\t\tthis.SaveFileDialog1 = new SaveFileDialog();\n\t\tthis.SuspendLayout();\n\t\tthis.RichTextBox1.Location = new Point(24, 64);\n\t\tthis.RichTextBox1.Name = &quot;RichTextBox1&quot;;\n\t\tthis.RichTextBox1.TabIndex = 0;\n\t\tthis.RichTextBox1.Text = &quot;Type something here.&quot;;\n\t\tthis.Button1.Location = new Point(96, 16);\n\t\tthis.Button1.Name = &quot;Button1&quot;;\n\t\tthis.Button1.Size = new Size(96, 24);\n\t\tthis.Button1.TabIndex = 1;\n\t\tthis.Button1.Text = &quot;Save To Stream&quot;;\n\t\tthis.Button1.Click += new EventHandler(Button1_Click);\n\t\tthis.RichTextBox2.Location = new Point(152, 64);\n\t\tthis.RichTextBox2.Name = &quot;RichTextBox2&quot;;\n\t\tthis.RichTextBox2.TabIndex = 3;\n\t\tthis.RichTextBox2.Text = \n            &quot;It will be added to the stream and appear here.&quot;;\n\t\tthis.Button2.Location = new Point(104, 200);\n\t\tthis.Button2.Name = &quot;Button2&quot;;\n\t\tthis.Button2.Size = new Size(88, 32);\n\t\tthis.Button2.TabIndex = 4;\n\t\tthis.Button2.Text = &quot;Save Stream To File&quot;;\n\t\tthis.Button2.Click += new EventHandler(Button2_Click);\n\t\tthis.ClientSize = new Size(292, 266);\n\t\tthis.Controls.Add(this.Button2);\n\t\tthis.Controls.Add(this.RichTextBox2);\n\t\tthis.Controls.Add(this.Button1);\n\t\tthis.Controls.Add(this.RichTextBox1);\n\t\tthis.Name = &quot;Form1&quot;;\n\t\tthis.Text = &quot;Form1&quot;;\n\t\tthis.ResumeLayout(false);\n\t}\n\n\tpublic static void Main()\n\t{\n\t\tApplication.Run(new Form1());\n\t}\n\n\t// Declare a new memory stream.\n\tMemoryStream userInput = new MemoryStream();\n\n\t// Save the content of RichTextBox1 to the memory stream, \n\t// appending a LineFeed character.  \n\tprivate void Button1_Click(Object sender, EventArgs e)\n\t{\n\t\tRichTextBox1.SaveFile(userInput, RichTextBoxStreamType.PlainText);\n\t\tuserInput.WriteByte(13);\n\n\t\t// Display the entire contents of the stream,\n\t\t// by setting its position to 0, to RichTextBox2.\n\t\tuserInput.Position = 0;\n\t\tRichTextBox2.LoadFile(userInput, RichTextBoxStreamType.PlainText);\n\t}\n\n\t// Shows the use of a SaveFileDialog to save a MemoryStream to a file.\n\tprivate void Button2_Click(Object sender, EventArgs e)\n\t{\n\t\t// Set the properties on SaveFileDialog1 so the user is \n\t\t// prompted to create the file if it doesn&#39;t exist \n\t\t// or overwrite the file if it does exist.\n\t\tSaveFileDialog1.CreatePrompt = true;\n\t\tSaveFileDialog1.OverwritePrompt = true;\n\n\t\t// Set the file name to myText.txt, set the type filter\n\t\t// to text files, and set the initial directory to the \n        // MyDocuments folder.\n\t\tSaveFileDialog1.FileName = &quot;myText&quot;;\n        // DefaultExt is only used when &quot;All files&quot; is selected from \n        // the filter box and no extension is specified by the user.\n\t\tSaveFileDialog1.DefaultExt = &quot;txt&quot;;\n        SaveFileDialog1.Filter = \n            &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n        SaveFileDialog1.InitialDirectory = \n            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);\n\n\t\t// Call ShowDialog and check for a return value of DialogResult.OK,\n\t\t// which indicates that the file was saved. \n\t\tDialogResult result = SaveFileDialog1.ShowDialog();\n\t\tStream fileStream;\n\n\t\tif (result == DialogResult.OK)\n\t\t{\n            // Open the file, copy the contents of memoryStream to fileStream,\n            // and close fileStream. Set the memoryStream.Position value to 0 \n            // to copy the entire stream. \n            fileStream = SaveFileDialog1.OpenFile();\n\t\t\tuserInput.Position = 0;\n\t\t\tuserInput.WriteTo(fileStream);\n\t\t\tfileStream.Close();\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.RichTextBoxSaveFile#1\">Imports System\nImports System.Drawing\nImports System.IO\nImports System.Windows.Forms\n\nPartial Public Class Form1\n    Inherits Form\n\n    Friend WithEvents RichTextBox1 As RichTextBox\n    Friend WithEvents Button1 As Button\n    Friend WithEvents RichTextBox2 As RichTextBox\n    Friend WithEvents Button2 As Button\n    Friend WithEvents SaveFileDialog1 As SaveFileDialog\n\n    Public Sub New()\n        MyBase.New()\n        Me.RichTextBox1 = New RichTextBox\n        Me.Button1 = New Button\n        Me.RichTextBox2 = New RichTextBox\n        Me.Button2 = New Button\n        Me.SaveFileDialog1 = New SaveFileDialog\n        Me.SuspendLayout()\n        Me.RichTextBox1.Location = New Point(24, 64)\n        Me.RichTextBox1.Name = &quot;RichTextBox1&quot;\n        Me.RichTextBox1.TabIndex = 0\n        Me.RichTextBox1.Text = &quot;Type something here.&quot;\n        Me.Button1.Location = New Point(96, 16)\n        Me.Button1.Name = &quot;Button1&quot;\n        Me.Button1.Size = New Size(96, 24)\n        Me.Button1.TabIndex = 1\n        Me.Button1.Text = &quot;Save To Stream&quot;\n        Me.RichTextBox2.Location = New Point(152, 64)\n        Me.RichTextBox2.Name = &quot;RichTextBox2&quot;\n        Me.RichTextBox2.TabIndex = 3\n        Me.RichTextBox2.Text = &quot;It will be added to the stream and appear here.&quot;\n        Me.Button2.Location = New Point(104, 200)\n        Me.Button2.Name = &quot;Button2&quot;\n        Me.Button2.Size = New Size(88, 32)\n        Me.Button2.TabIndex = 4\n        Me.Button2.Text = &quot;Save Stream To File&quot;\n        Me.ClientSize = New Size(292, 266)\n        Me.Controls.Add(Me.Button2)\n        Me.Controls.Add(Me.RichTextBox2)\n        Me.Controls.Add(Me.Button1)\n        Me.Controls.Add(Me.RichTextBox1)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;Form1&quot;\n        Me.ResumeLayout(False)\n\n    End Sub\n\n    Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\n    &#39; Declare a new memory stream.\n    Dim userInput As New MemoryStream\n\n    &#39; Save the content of RichTextBox1 to the memory stream, appending\n    &#39;a LineFeed character.  \n    Private Sub Button1_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button1.Click\n        RichTextBox1.SaveFile(userInput, RichTextBoxStreamType.PlainText)\n        userInput.WriteByte(13)\n\n        &#39; Display the entire contents of the stream,\n        &#39; by setting its position to 0, to RichTextBox2.\n        userInput.Position = 0\n        RichTextBox2.LoadFile(userInput, RichTextBoxStreamType.PlainText)\n    End Sub\n\n    &#39; Shows the use of a SaveFileDialog to save a MemoryStream to a file.\n    Private Sub Button2_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button2.Click\n\n        &#39; Set the properties on SaveFileDialog1 so the user is \n        &#39; prompted to create the file if it doesn&#39;t exist \n        &#39; or overwrite the file if it does exist.\n        SaveFileDialog1.CreatePrompt = True\n        SaveFileDialog1.OverwritePrompt = True\n\n        &#39; Set the file name to myText.txt, set the type filter\n        &#39; to text files, and set the initial directory to the \n        &#39; MyDocuments folder.\n        SaveFileDialog1.FileName = &quot;myText&quot;\n        &#39; DefaultExt is only used when &quot;All files&quot; is selected from \n        &#39; the filter box and no extension is specified by the user.\n        SaveFileDialog1.DefaultExt = &quot;txt&quot;\n        SaveFileDialog1.Filter = &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;\n        SaveFileDialog1.InitialDirectory = _\n            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)\n\n        &#39; Call ShowDialog and check for a return value of DialogResult.OK,\n        &#39; which indicates that the file was saved. \n        Dim result As DialogResult = SaveFileDialog1.ShowDialog()\n        Dim fileStream As Stream\n\n        If (result = DialogResult.OK) Then\n            &#39; Open the file, copy the contents of memoryStream to fileStream,\n            &#39; and close fileStream. Set the memoryStream.Position value to 0 to \n            &#39; copy the entire stream. \n            fileStream = SaveFileDialog1.OpenFile()\n            userInput.Position = 0\n            userInput.WriteTo(fileStream)\n            fileStream.Close()\n        End If\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.RichTextBoxSaveFile#1\">using namespace System;\nusing namespace System::Drawing;\nusing namespace System::IO;\nusing namespace System::Windows::Forms;\n\npublic ref class Form1: public Form\n{\npublic private:\n   RichTextBox^ RichTextBox1;\n   Button^ Button1;\n   RichTextBox^ RichTextBox2;\n   Button^ Button2;\n   SaveFileDialog^ SaveFileDialog1;\n\npublic:\n   Form1()\n      : Form()\n   {\n      userInput = gcnew MemoryStream;\n      this-&gt;RichTextBox1 = gcnew RichTextBox;\n      this-&gt;Button1 = gcnew Button;\n      this-&gt;RichTextBox2 = gcnew RichTextBox;\n      this-&gt;Button2 = gcnew Button;\n      this-&gt;SaveFileDialog1 = gcnew SaveFileDialog;\n      this-&gt;SuspendLayout();\n      this-&gt;RichTextBox1-&gt;Location = Point( 24, 64 );\n      this-&gt;RichTextBox1-&gt;Name = &quot;RichTextBox1&quot;;\n      this-&gt;RichTextBox1-&gt;TabIndex = 0;\n      this-&gt;RichTextBox1-&gt;Text = &quot;Type something here.&quot;;\n      this-&gt;Button1-&gt;Location = Point( 96, 16 );\n      this-&gt;Button1-&gt;Name = &quot;Button1&quot;;\n      this-&gt;Button1-&gt;Size = Size( 96, 24 );\n      this-&gt;Button1-&gt;TabIndex = 1;\n      this-&gt;Button1-&gt;Text = &quot;Save To Stream&quot;;\n      this-&gt;Button1-&gt;Click += \n\t\t  gcnew EventHandler( this, &amp;Form1::Button1_Click );\n      this-&gt;RichTextBox2-&gt;Location = Point( 152, 64 );\n      this-&gt;RichTextBox2-&gt;Name = &quot;RichTextBox2&quot;;\n      this-&gt;RichTextBox2-&gt;TabIndex = 3;\n      this-&gt;RichTextBox2-&gt;Text = &quot;It will be added to the stream &quot;\n      &quot;and appear here.&quot;;\n      this-&gt;Button2-&gt;Location = Point( 104, 200 );\n      this-&gt;Button2-&gt;Name = &quot;Button2&quot;;\n      this-&gt;Button2-&gt;Size = Size( 88, 32 );\n      this-&gt;Button2-&gt;TabIndex = 4;\n      this-&gt;Button2-&gt;Text = &quot;Save Stream To File&quot;;\n      this-&gt;Button2-&gt;Click += \n\t\t  gcnew EventHandler( this, &amp;Form1::Button2_Click );\n      this-&gt;ClientSize = Size( 292, 266 );\n      this-&gt;Controls-&gt;Add( this-&gt;Button2 );\n      this-&gt;Controls-&gt;Add( this-&gt;RichTextBox2 );\n      this-&gt;Controls-&gt;Add( this-&gt;Button1 );\n      this-&gt;Controls-&gt;Add( this-&gt;RichTextBox1 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\n   // Declare a new memory stream.\n   MemoryStream^ userInput;\n\nprivate:\n\n   // Save the content of RichTextBox1 to the memory stream, \n   // appending a LineFeed character.  \n   void Button1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      RichTextBox1-&gt;SaveFile( userInput, RichTextBoxStreamType::PlainText );\n      userInput-&gt;WriteByte( 13 );\n      \n      // Display the entire contents of the stream,\n      // by setting its position to 0, to RichTextBox2.\n      userInput-&gt;Position = 0;\n      RichTextBox2-&gt;LoadFile( userInput, RichTextBoxStreamType::PlainText );\n   }\n\n\n   // Shows the use of a SaveFileDialog to save a MemoryStream to a file.\n   void Button2_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Set the properties on SaveFileDialog1 so the user is \n      // prompted to create the file if it doesn&#39;t exist \n      // or overwrite the file if it does exist.\n      SaveFileDialog1-&gt;CreatePrompt = true;\n      SaveFileDialog1-&gt;OverwritePrompt = true;\n      \n      // Set the file name to myText.txt, set the type filter\n      // to text files, and set the initial directory to the\n\t  // MyDocuments folder.\n      SaveFileDialog1-&gt;FileName = &quot;myText&quot;;\n\t  // DefaultExt is only used when &quot;All files&quot; is selected from \n      // the filter box and no extension is specified by the user.\n      SaveFileDialog1-&gt;DefaultExt = &quot;txt&quot;;\n      SaveFileDialog1-&gt;Filter = &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n      SaveFileDialog1-&gt;InitialDirectory = \n\t\t  Environment-&gt;GetFolderPath(Environment::SpecialFolder::MyDocuments);\n      \n      // Call ShowDialog and check for a return value of DialogResult.OK,\n      // which indicates that the file was saved. \n      DialogResult result = SaveFileDialog1-&gt;ShowDialog();\n      Stream^ fileStream;\n      if ( result == DialogResult::OK )\n      {\n         fileStream = SaveFileDialog1-&gt;OpenFile();\n         userInput-&gt;Position = 0;\n         userInput-&gt;WriteTo( fileStream );\n         fileStream-&gt;Close();\n      }\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_DereferenceLinks\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_DereferenceLinks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DereferenceLinks</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box returns the location of the file referenced by the shortcut or whether it returns the location of the shortcut (.lnk).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DereferenceLinks { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box returns the location of the file referenced by the shortcut; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_FileName\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_FileName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string containing the file name selected in the file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FileName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The file name selected in the file dialog box. The default value is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The file name includes both the file path and the extension. If no files are selected, this method returns an empty string (&quot;&quot;).  </p>\n<p> When used from the <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a> class, this property represents the file being saved; when used from the <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> class, it represents the file being opened.  </p>\n<p> This property can only be the name of one selected file. If you want to return an array containing the names of all selected files in a multiple-selection dialog box, use <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileNames_\" data-linktype=\"relative-path\">FileNames</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_SaveFile_\" data-linktype=\"relative-path\">SaveFile</a> and <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_LoadFile_\" data-linktype=\"relative-path\">LoadFile</a> methods with streams. It also demonstrates using the FileName, <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_DefaultExt_\" data-linktype=\"relative-path\">DefaultExt</a>, <a class=\"xref\" href=\"system.windows.forms.savefiledialog#System_Windows_Forms_SaveFileDialog_CreatePrompt_\" data-linktype=\"relative-path\">CreatePrompt</a>, and <a class=\"xref\" href=\"system.windows.forms.savefiledialog#System_Windows_Forms_SaveFileDialog_OverwritePrompt_\" data-linktype=\"relative-path\">OverwritePrompt</a> members.  </p>\n<p> This is a complete example that is ready to run when you copy it to your project.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.RichTextBoxSaveFile#1\">using System;\nusing System.Drawing;\nusing System.IO;\nusing System.Windows.Forms;\n\npublic partial class Form1: Form\n{\n\tinternal RichTextBox RichTextBox1;\n\tinternal Button Button1;\n\tinternal RichTextBox RichTextBox2;\n\tinternal Button Button2;\n\tinternal SaveFileDialog SaveFileDialog1;\n\n\tpublic Form1() : base()\n\t{   \n\t\tthis.RichTextBox1 = new RichTextBox();\n\t\tthis.Button1 = new Button();\n\t\tthis.RichTextBox2 = new RichTextBox();\n\t\tthis.Button2 = new Button();\n\t\tthis.SaveFileDialog1 = new SaveFileDialog();\n\t\tthis.SuspendLayout();\n\t\tthis.RichTextBox1.Location = new Point(24, 64);\n\t\tthis.RichTextBox1.Name = &quot;RichTextBox1&quot;;\n\t\tthis.RichTextBox1.TabIndex = 0;\n\t\tthis.RichTextBox1.Text = &quot;Type something here.&quot;;\n\t\tthis.Button1.Location = new Point(96, 16);\n\t\tthis.Button1.Name = &quot;Button1&quot;;\n\t\tthis.Button1.Size = new Size(96, 24);\n\t\tthis.Button1.TabIndex = 1;\n\t\tthis.Button1.Text = &quot;Save To Stream&quot;;\n\t\tthis.Button1.Click += new EventHandler(Button1_Click);\n\t\tthis.RichTextBox2.Location = new Point(152, 64);\n\t\tthis.RichTextBox2.Name = &quot;RichTextBox2&quot;;\n\t\tthis.RichTextBox2.TabIndex = 3;\n\t\tthis.RichTextBox2.Text = \n            &quot;It will be added to the stream and appear here.&quot;;\n\t\tthis.Button2.Location = new Point(104, 200);\n\t\tthis.Button2.Name = &quot;Button2&quot;;\n\t\tthis.Button2.Size = new Size(88, 32);\n\t\tthis.Button2.TabIndex = 4;\n\t\tthis.Button2.Text = &quot;Save Stream To File&quot;;\n\t\tthis.Button2.Click += new EventHandler(Button2_Click);\n\t\tthis.ClientSize = new Size(292, 266);\n\t\tthis.Controls.Add(this.Button2);\n\t\tthis.Controls.Add(this.RichTextBox2);\n\t\tthis.Controls.Add(this.Button1);\n\t\tthis.Controls.Add(this.RichTextBox1);\n\t\tthis.Name = &quot;Form1&quot;;\n\t\tthis.Text = &quot;Form1&quot;;\n\t\tthis.ResumeLayout(false);\n\t}\n\n\tpublic static void Main()\n\t{\n\t\tApplication.Run(new Form1());\n\t}\n\n\t// Declare a new memory stream.\n\tMemoryStream userInput = new MemoryStream();\n\n\t// Save the content of RichTextBox1 to the memory stream, \n\t// appending a LineFeed character.  \n\tprivate void Button1_Click(Object sender, EventArgs e)\n\t{\n\t\tRichTextBox1.SaveFile(userInput, RichTextBoxStreamType.PlainText);\n\t\tuserInput.WriteByte(13);\n\n\t\t// Display the entire contents of the stream,\n\t\t// by setting its position to 0, to RichTextBox2.\n\t\tuserInput.Position = 0;\n\t\tRichTextBox2.LoadFile(userInput, RichTextBoxStreamType.PlainText);\n\t}\n\n\t// Shows the use of a SaveFileDialog to save a MemoryStream to a file.\n\tprivate void Button2_Click(Object sender, EventArgs e)\n\t{\n\t\t// Set the properties on SaveFileDialog1 so the user is \n\t\t// prompted to create the file if it doesn&#39;t exist \n\t\t// or overwrite the file if it does exist.\n\t\tSaveFileDialog1.CreatePrompt = true;\n\t\tSaveFileDialog1.OverwritePrompt = true;\n\n\t\t// Set the file name to myText.txt, set the type filter\n\t\t// to text files, and set the initial directory to the \n        // MyDocuments folder.\n\t\tSaveFileDialog1.FileName = &quot;myText&quot;;\n        // DefaultExt is only used when &quot;All files&quot; is selected from \n        // the filter box and no extension is specified by the user.\n\t\tSaveFileDialog1.DefaultExt = &quot;txt&quot;;\n        SaveFileDialog1.Filter = \n            &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n        SaveFileDialog1.InitialDirectory = \n            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);\n\n\t\t// Call ShowDialog and check for a return value of DialogResult.OK,\n\t\t// which indicates that the file was saved. \n\t\tDialogResult result = SaveFileDialog1.ShowDialog();\n\t\tStream fileStream;\n\n\t\tif (result == DialogResult.OK)\n\t\t{\n            // Open the file, copy the contents of memoryStream to fileStream,\n            // and close fileStream. Set the memoryStream.Position value to 0 \n            // to copy the entire stream. \n            fileStream = SaveFileDialog1.OpenFile();\n\t\t\tuserInput.Position = 0;\n\t\t\tuserInput.WriteTo(fileStream);\n\t\t\tfileStream.Close();\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.RichTextBoxSaveFile#1\">Imports System\nImports System.Drawing\nImports System.IO\nImports System.Windows.Forms\n\nPartial Public Class Form1\n    Inherits Form\n\n    Friend WithEvents RichTextBox1 As RichTextBox\n    Friend WithEvents Button1 As Button\n    Friend WithEvents RichTextBox2 As RichTextBox\n    Friend WithEvents Button2 As Button\n    Friend WithEvents SaveFileDialog1 As SaveFileDialog\n\n    Public Sub New()\n        MyBase.New()\n        Me.RichTextBox1 = New RichTextBox\n        Me.Button1 = New Button\n        Me.RichTextBox2 = New RichTextBox\n        Me.Button2 = New Button\n        Me.SaveFileDialog1 = New SaveFileDialog\n        Me.SuspendLayout()\n        Me.RichTextBox1.Location = New Point(24, 64)\n        Me.RichTextBox1.Name = &quot;RichTextBox1&quot;\n        Me.RichTextBox1.TabIndex = 0\n        Me.RichTextBox1.Text = &quot;Type something here.&quot;\n        Me.Button1.Location = New Point(96, 16)\n        Me.Button1.Name = &quot;Button1&quot;\n        Me.Button1.Size = New Size(96, 24)\n        Me.Button1.TabIndex = 1\n        Me.Button1.Text = &quot;Save To Stream&quot;\n        Me.RichTextBox2.Location = New Point(152, 64)\n        Me.RichTextBox2.Name = &quot;RichTextBox2&quot;\n        Me.RichTextBox2.TabIndex = 3\n        Me.RichTextBox2.Text = &quot;It will be added to the stream and appear here.&quot;\n        Me.Button2.Location = New Point(104, 200)\n        Me.Button2.Name = &quot;Button2&quot;\n        Me.Button2.Size = New Size(88, 32)\n        Me.Button2.TabIndex = 4\n        Me.Button2.Text = &quot;Save Stream To File&quot;\n        Me.ClientSize = New Size(292, 266)\n        Me.Controls.Add(Me.Button2)\n        Me.Controls.Add(Me.RichTextBox2)\n        Me.Controls.Add(Me.Button1)\n        Me.Controls.Add(Me.RichTextBox1)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;Form1&quot;\n        Me.ResumeLayout(False)\n\n    End Sub\n\n    Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\n    &#39; Declare a new memory stream.\n    Dim userInput As New MemoryStream\n\n    &#39; Save the content of RichTextBox1 to the memory stream, appending\n    &#39;a LineFeed character.  \n    Private Sub Button1_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button1.Click\n        RichTextBox1.SaveFile(userInput, RichTextBoxStreamType.PlainText)\n        userInput.WriteByte(13)\n\n        &#39; Display the entire contents of the stream,\n        &#39; by setting its position to 0, to RichTextBox2.\n        userInput.Position = 0\n        RichTextBox2.LoadFile(userInput, RichTextBoxStreamType.PlainText)\n    End Sub\n\n    &#39; Shows the use of a SaveFileDialog to save a MemoryStream to a file.\n    Private Sub Button2_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Button2.Click\n\n        &#39; Set the properties on SaveFileDialog1 so the user is \n        &#39; prompted to create the file if it doesn&#39;t exist \n        &#39; or overwrite the file if it does exist.\n        SaveFileDialog1.CreatePrompt = True\n        SaveFileDialog1.OverwritePrompt = True\n\n        &#39; Set the file name to myText.txt, set the type filter\n        &#39; to text files, and set the initial directory to the \n        &#39; MyDocuments folder.\n        SaveFileDialog1.FileName = &quot;myText&quot;\n        &#39; DefaultExt is only used when &quot;All files&quot; is selected from \n        &#39; the filter box and no extension is specified by the user.\n        SaveFileDialog1.DefaultExt = &quot;txt&quot;\n        SaveFileDialog1.Filter = &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;\n        SaveFileDialog1.InitialDirectory = _\n            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)\n\n        &#39; Call ShowDialog and check for a return value of DialogResult.OK,\n        &#39; which indicates that the file was saved. \n        Dim result As DialogResult = SaveFileDialog1.ShowDialog()\n        Dim fileStream As Stream\n\n        If (result = DialogResult.OK) Then\n            &#39; Open the file, copy the contents of memoryStream to fileStream,\n            &#39; and close fileStream. Set the memoryStream.Position value to 0 to \n            &#39; copy the entire stream. \n            fileStream = SaveFileDialog1.OpenFile()\n            userInput.Position = 0\n            userInput.WriteTo(fileStream)\n            fileStream.Close()\n        End If\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.RichTextBoxSaveFile#1\">using namespace System;\nusing namespace System::Drawing;\nusing namespace System::IO;\nusing namespace System::Windows::Forms;\n\npublic ref class Form1: public Form\n{\npublic private:\n   RichTextBox^ RichTextBox1;\n   Button^ Button1;\n   RichTextBox^ RichTextBox2;\n   Button^ Button2;\n   SaveFileDialog^ SaveFileDialog1;\n\npublic:\n   Form1()\n      : Form()\n   {\n      userInput = gcnew MemoryStream;\n      this-&gt;RichTextBox1 = gcnew RichTextBox;\n      this-&gt;Button1 = gcnew Button;\n      this-&gt;RichTextBox2 = gcnew RichTextBox;\n      this-&gt;Button2 = gcnew Button;\n      this-&gt;SaveFileDialog1 = gcnew SaveFileDialog;\n      this-&gt;SuspendLayout();\n      this-&gt;RichTextBox1-&gt;Location = Point( 24, 64 );\n      this-&gt;RichTextBox1-&gt;Name = &quot;RichTextBox1&quot;;\n      this-&gt;RichTextBox1-&gt;TabIndex = 0;\n      this-&gt;RichTextBox1-&gt;Text = &quot;Type something here.&quot;;\n      this-&gt;Button1-&gt;Location = Point( 96, 16 );\n      this-&gt;Button1-&gt;Name = &quot;Button1&quot;;\n      this-&gt;Button1-&gt;Size = Size( 96, 24 );\n      this-&gt;Button1-&gt;TabIndex = 1;\n      this-&gt;Button1-&gt;Text = &quot;Save To Stream&quot;;\n      this-&gt;Button1-&gt;Click += \n\t\t  gcnew EventHandler( this, &amp;Form1::Button1_Click );\n      this-&gt;RichTextBox2-&gt;Location = Point( 152, 64 );\n      this-&gt;RichTextBox2-&gt;Name = &quot;RichTextBox2&quot;;\n      this-&gt;RichTextBox2-&gt;TabIndex = 3;\n      this-&gt;RichTextBox2-&gt;Text = &quot;It will be added to the stream &quot;\n      &quot;and appear here.&quot;;\n      this-&gt;Button2-&gt;Location = Point( 104, 200 );\n      this-&gt;Button2-&gt;Name = &quot;Button2&quot;;\n      this-&gt;Button2-&gt;Size = Size( 88, 32 );\n      this-&gt;Button2-&gt;TabIndex = 4;\n      this-&gt;Button2-&gt;Text = &quot;Save Stream To File&quot;;\n      this-&gt;Button2-&gt;Click += \n\t\t  gcnew EventHandler( this, &amp;Form1::Button2_Click );\n      this-&gt;ClientSize = Size( 292, 266 );\n      this-&gt;Controls-&gt;Add( this-&gt;Button2 );\n      this-&gt;Controls-&gt;Add( this-&gt;RichTextBox2 );\n      this-&gt;Controls-&gt;Add( this-&gt;Button1 );\n      this-&gt;Controls-&gt;Add( this-&gt;RichTextBox1 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\n   // Declare a new memory stream.\n   MemoryStream^ userInput;\n\nprivate:\n\n   // Save the content of RichTextBox1 to the memory stream, \n   // appending a LineFeed character.  \n   void Button1_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      RichTextBox1-&gt;SaveFile( userInput, RichTextBoxStreamType::PlainText );\n      userInput-&gt;WriteByte( 13 );\n      \n      // Display the entire contents of the stream,\n      // by setting its position to 0, to RichTextBox2.\n      userInput-&gt;Position = 0;\n      RichTextBox2-&gt;LoadFile( userInput, RichTextBoxStreamType::PlainText );\n   }\n\n\n   // Shows the use of a SaveFileDialog to save a MemoryStream to a file.\n   void Button2_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Set the properties on SaveFileDialog1 so the user is \n      // prompted to create the file if it doesn&#39;t exist \n      // or overwrite the file if it does exist.\n      SaveFileDialog1-&gt;CreatePrompt = true;\n      SaveFileDialog1-&gt;OverwritePrompt = true;\n      \n      // Set the file name to myText.txt, set the type filter\n      // to text files, and set the initial directory to the\n\t  // MyDocuments folder.\n      SaveFileDialog1-&gt;FileName = &quot;myText&quot;;\n\t  // DefaultExt is only used when &quot;All files&quot; is selected from \n      // the filter box and no extension is specified by the user.\n      SaveFileDialog1-&gt;DefaultExt = &quot;txt&quot;;\n      SaveFileDialog1-&gt;Filter = &quot;Text files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n      SaveFileDialog1-&gt;InitialDirectory = \n\t\t  Environment-&gt;GetFolderPath(Environment::SpecialFolder::MyDocuments);\n      \n      // Call ShowDialog and check for a return value of DialogResult.OK,\n      // which indicates that the file was saved. \n      DialogResult result = SaveFileDialog1-&gt;ShowDialog();\n      Stream^ fileStream;\n      if ( result == DialogResult::OK )\n      {\n         fileStream = SaveFileDialog1-&gt;OpenFile();\n         userInput-&gt;Position = 0;\n         userInput-&gt;WriteTo( fileStream );\n         fileStream-&gt;Close();\n      }\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_FileNames\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_FileNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets the file names of all selected files in the dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] FileNames { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, containing the file names of all selected files in the dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each file name includes both the file path and the extension. If no files are selected, this method returns an empty array.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example allows the user to select a number of images and display them in <a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a> controls on a Form. It demonstrates initializing an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a>, setting the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Title_\" data-linktype=\"relative-path\">Title</a> and <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Filter_\" data-linktype=\"relative-path\">Filter</a> properties, and allowing the user to select multiple files by setting the <a class=\"xref\" href=\"system.windows.forms.openfiledialog#System_Windows_Forms_OpenFileDialog_Multiselect_\" data-linktype=\"relative-path\">Multiselect</a> property to true. This code example assumes that your form already has an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> control named <code>openFileDialog1</code>, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>SelectFileButton</code>, and a <a class=\"xref\" href=\"system.windows.forms.flowlayoutpanel\" data-linktype=\"relative-path\">FlowLayoutPanel</a> named <code>flowLayoutPanel1</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.OpenFileDialog.MultiSelect#1\">Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load\n    InitializeOpenFileDialog()\nEnd Sub\n\nPrivate Sub SelectFileButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SelectFileButton.Click\n    Dim dr As DialogResult = Me.OpenFileDialog1.ShowDialog()\n    If (dr = System.Windows.Forms.DialogResult.OK) Then\n        &#39; Read the files\n        Dim file As String\n        For Each file In OpenFileDialog1.FileNames\n            &#39; Create a PictureBox for each file, and add that file to the FlowLayoutPanel.\n            Try\n                Dim pb As New PictureBox()\n                Dim loadedImage As Image = Image.FromFile(file)\n                pb.Height = loadedImage.Height\n                pb.Width = loadedImage.Width\n                pb.Image = loadedImage\n                FlowLayoutPanel1.Controls.Add(pb)\n            Catch SecEx As SecurityException\n                &#39; The user lacks appropriate permissions to read files, discover paths, etc.\n                MessageBox.Show(&quot;Security error. Please contact your administrator for details.<br><br>&quot; &amp; _\n                    &quot;Error message: &quot; &amp; SecEx.Message &amp; &quot;<br><br>&quot; &amp; _\n                    &quot;Details (send to Support):<br><br>&quot; &amp; SecEx.StackTrace)\n            Catch ex As Exception\n                &#39; Could not load the image - probably permissions-related.\n                MessageBox.Show((&quot;Cannot display the image: &quot; &amp; file.Substring(file.LastIndexOf(&quot;\\&quot;c)) &amp; _\n                &quot;. You may not have permission to read the file, or &quot; + &quot;it may be corrupt.&quot; _\n                &amp; ControlChars.Lf &amp; ControlChars.Lf &amp; &quot;Reported error: &quot; &amp; ex.Message))\n            End Try\n        Next file\n    End If\nEnd Sub\n\nPublic Sub InitializeOpenFileDialog()\n    &#39; Set the file dialog to filter for graphics files.\n    Me.OpenFileDialog1.Filter = _\n            &quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|&quot; + _\n            &quot;All files (*.*)|*.*&quot;\n\n    &#39; Allow the user to select multiple images.\n    Me.OpenFileDialog1.Multiselect = True\n    Me.OpenFileDialog1.Title = &quot;My Image Browser&quot;\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.OpenFileDialog.MultiSelect#1\">private void Form1_Load(object sender, EventArgs e)\n{\n    InitializeOpenFileDialog();\n}\n\nprivate void InitializeOpenFileDialog()\n{\n    // Set the file dialog to filter for graphics files.\n    this.openFileDialog1.Filter =\n        &quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|&quot; +\n        &quot;All files (*.*)|*.*&quot;;\n\n    // Allow the user to select multiple images.\n    this.openFileDialog1.Multiselect = true;\n    this.openFileDialog1.Title = &quot;My Image Browser&quot;;\n}\n\nprivate void selectFilesButton_Click(object sender, EventArgs e)\n{\n    DialogResult dr = this.openFileDialog1.ShowDialog();\n    if (dr == System.Windows.Forms.DialogResult.OK)\n    {\n        // Read the files\n        foreach (String file in openFileDialog1.FileNames) \n        {\n            // Create a PictureBox.\n            try\n            {\n                PictureBox pb = new PictureBox();\n                Image loadedImage = Image.FromFile(file);\n                pb.Height = loadedImage.Height;\n                pb.Width = loadedImage.Width;\n                pb.Image = loadedImage;\n                flowLayoutPanel1.Controls.Add(pb);\n            }\n            catch (SecurityException ex)\n            {\n                // The user lacks appropriate permissions to read files, discover paths, etc.\n                MessageBox.Show(&quot;Security error. Please contact your administrator for details.<br><br>&quot; +\n                    &quot;Error message: &quot; + ex.Message + &quot;<br><br>&quot; +\n                    &quot;Details (send to Support):<br><br>&quot; + ex.StackTrace\n                );\n            }\n            catch (Exception ex)\n            {\n                // Could not load the image - probably related to Windows file system permissions.\n                MessageBox.Show(&quot;Cannot display the image: &quot; + file.Substring(file.LastIndexOf(&#39;\\\\&#39;))\n                    + &quot;. You may not have permission to read the file, or &quot; +\n                    &quot;it may be corrupt.<br><br>Reported error: &quot; + ex.Message);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_Filter\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_Filter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Filter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the current file name filter string, which determines the choices that appear in the &quot;Save as file type&quot; or &quot;Files of type&quot; box in the dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Filter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The file filtering options available in the dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Filter</code> format is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For each filtering option, the filter string contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.  </p>\n<p> The following is an example of a filter string:  </p>\n<p> <code>Text files (*.txt)|*.txt|All files (*.*)|*.*</code>  </p>\n<p> You can add several filter patterns to a filter by separating the file types with semicolons, for example:  </p>\n<p> <code>Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*</code>  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FilterIndex_\" data-linktype=\"relative-path\">FilterIndex</a> property to set which filtering option is shown first to the user.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> implementation of <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> and illustrates creating, setting of properties, and showing the dialog box. The example uses the Filter and <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FilterIndex_\" data-linktype=\"relative-path\">FilterIndex</a> properties to provide a list of filters for the user. The example requires a form with a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> placed on it and the <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespace added to it.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic OpenFileDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Stream^ myStream;\n      OpenFileDialog^ openFileDialog1 = gcnew OpenFileDialog;\n\n      openFileDialog1-&gt;InitialDirectory = &quot;c:\\\\&quot;;\n      openFileDialog1-&gt;Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n      openFileDialog1-&gt;FilterIndex = 2;\n      openFileDialog1-&gt;RestoreDirectory = true;\n\n      if ( openFileDialog1-&gt;ShowDialog() == System::Windows::Forms::DialogResult::OK )\n      {\n         if ( (myStream = openFileDialog1-&gt;OpenFile()) != nullptr )\n         {\n            // Insert code to read the stream here.\n            myStream-&gt;Close();\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic OpenFileDialog Example#1\">    private void button1_Click(object sender, System.EventArgs e)\n    {\n        Stream myStream = null;\n        OpenFileDialog openFileDialog1 = new OpenFileDialog();\n \n        openFileDialog1.InitialDirectory = &quot;c:\\\\&quot; ;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot; ;\n        openFileDialog1.FilterIndex = 2 ;\n        openFileDialog1.RestoreDirectory = true ;\n\n        if(openFileDialog1.ShowDialog() == DialogResult.OK)\n        {\n            try\n            {\n                if ((myStream = openFileDialog1.OpenFile()) != null)\n                {\n                    using (myStream)\n                    {\n                        // Insert code to read the stream here.\n                    }\n                }\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show(&quot;Error: Could not read file from disk. Original error: &quot; + ex.Message);\n            }\n        }\n    }\n        \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic OpenFileDialog Example#1\">    Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n        Dim myStream As Stream = Nothing\n        Dim openFileDialog1 As New OpenFileDialog()\n\n        openFileDialog1.InitialDirectory = &quot;c:\\&quot;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;\n        openFileDialog1.FilterIndex = 2\n        openFileDialog1.RestoreDirectory = True\n\n        If openFileDialog1.ShowDialog() = System.Windows.Forms.DialogResult.OK Then\n            Try\n                myStream = openFileDialog1.OpenFile()\n                If (myStream IsNot Nothing) Then\n                    &#39; Insert code to read the stream here.\n                End If\n            Catch Ex As Exception\n                MessageBox.Show(&quot;Cannot read file from disk. Original error: &quot; &amp; Ex.Message)\n            Finally\n                &#39; Check this again, since we need to make sure we didn&#39;t throw an exception on open.\n                If (myStream IsNot Nothing) Then\n                    myStream.Close()\n                End If\n            End Try\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_FilterIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_FilterIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilterIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the filter currently selected in the file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FilterIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value containing the index of the filter currently selected in the file dialog box. The default value is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the FilterIndex property to set which filtering option is shown first to the user. You can also use the value of FilterIndex after showing the file dialog to perform special file operations depending upon the filter chosen.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The index value of the first filter entry is 1.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> implementation of <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Filter_\" data-linktype=\"relative-path\">Filter</a> and FilterIndex properties to provide a list of filters for the user. The example requires a form with a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> placed on it and the <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespace added to it.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic OpenFileDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Stream^ myStream;\n      OpenFileDialog^ openFileDialog1 = gcnew OpenFileDialog;\n\n      openFileDialog1-&gt;InitialDirectory = &quot;c:\\\\&quot;;\n      openFileDialog1-&gt;Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n      openFileDialog1-&gt;FilterIndex = 2;\n      openFileDialog1-&gt;RestoreDirectory = true;\n\n      if ( openFileDialog1-&gt;ShowDialog() == System::Windows::Forms::DialogResult::OK )\n      {\n         if ( (myStream = openFileDialog1-&gt;OpenFile()) != nullptr )\n         {\n            // Insert code to read the stream here.\n            myStream-&gt;Close();\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic OpenFileDialog Example#1\">    private void button1_Click(object sender, System.EventArgs e)\n    {\n        Stream myStream = null;\n        OpenFileDialog openFileDialog1 = new OpenFileDialog();\n \n        openFileDialog1.InitialDirectory = &quot;c:\\\\&quot; ;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot; ;\n        openFileDialog1.FilterIndex = 2 ;\n        openFileDialog1.RestoreDirectory = true ;\n\n        if(openFileDialog1.ShowDialog() == DialogResult.OK)\n        {\n            try\n            {\n                if ((myStream = openFileDialog1.OpenFile()) != null)\n                {\n                    using (myStream)\n                    {\n                        // Insert code to read the stream here.\n                    }\n                }\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show(&quot;Error: Could not read file from disk. Original error: &quot; + ex.Message);\n            }\n        }\n    }\n        \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic OpenFileDialog Example#1\">    Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n        Dim myStream As Stream = Nothing\n        Dim openFileDialog1 As New OpenFileDialog()\n\n        openFileDialog1.InitialDirectory = &quot;c:\\&quot;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;\n        openFileDialog1.FilterIndex = 2\n        openFileDialog1.RestoreDirectory = True\n\n        If openFileDialog1.ShowDialog() = System.Windows.Forms.DialogResult.OK Then\n            Try\n                myStream = openFileDialog1.OpenFile()\n                If (myStream IsNot Nothing) Then\n                    &#39; Insert code to read the stream here.\n                End If\n            Catch Ex As Exception\n                MessageBox.Show(&quot;Cannot read file from disk. Original error: &quot; &amp; Ex.Message)\n            Finally\n                &#39; Check this again, since we need to make sure we didn&#39;t throw an exception on open.\n                If (myStream IsNot Nothing) Then\n                    myStream.Close()\n                End If\n            End Try\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_InitialDirectory\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_InitialDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitialDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the initial directory displayed by the file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string InitialDirectory { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The initial directory displayed by the file dialog box. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitialDirectory property is typically set using one of the following sources:  </p>\n<ul>\n<li><p>A path that was previously used in the program, perhaps retained from the last directory or file operation.  </p>\n</li>\n<li><p>A path read from a persistent source, such as an application setting, a <a class=\"xref\" href=\"microsoft.win32.registry\" data-linktype=\"relative-path\">Registry</a> or a string resource in the application.  </p>\n</li>\n<li><p>Standard Windows system and user paths, such as Program Files, MyDocuments, MyMusic, and so on (which you can obtain using the <a class=\"xref\" href=\"system.environment#System_Environment_GetFolderPath_\" data-linktype=\"relative-path\">GetFolderPath</a> method)  </p>\n</li>\n<li><p>A path related to the current application, such as its startup directory (which you can obtain using properties on the <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a> object).  </p>\n<p>For more information about creating dynamic paths, see the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> class overview.  </p>\n<p>On <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/wiprlhext-md.md&quot; -->Windows Vista<!--END INCLUDE -->, if InitialDirectory is set to a full file name instead of just a directory path, the initial directory will default either to the application path, or to the directory from which the user last selected a file.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> implementation of <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> and illustrates creating, setting of properties, and showing the dialog box. The example uses the InitialDirectory property to set what the initial directory is when the dialog box is displayed to the user. The example requires a form with a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> placed on it and the <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespace added to it.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic OpenFileDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Stream^ myStream;\n      OpenFileDialog^ openFileDialog1 = gcnew OpenFileDialog;\n\n      openFileDialog1-&gt;InitialDirectory = &quot;c:\\\\&quot;;\n      openFileDialog1-&gt;Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n      openFileDialog1-&gt;FilterIndex = 2;\n      openFileDialog1-&gt;RestoreDirectory = true;\n\n      if ( openFileDialog1-&gt;ShowDialog() == System::Windows::Forms::DialogResult::OK )\n      {\n         if ( (myStream = openFileDialog1-&gt;OpenFile()) != nullptr )\n         {\n            // Insert code to read the stream here.\n            myStream-&gt;Close();\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic OpenFileDialog Example#1\">    private void button1_Click(object sender, System.EventArgs e)\n    {\n        Stream myStream = null;\n        OpenFileDialog openFileDialog1 = new OpenFileDialog();\n \n        openFileDialog1.InitialDirectory = &quot;c:\\\\&quot; ;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot; ;\n        openFileDialog1.FilterIndex = 2 ;\n        openFileDialog1.RestoreDirectory = true ;\n\n        if(openFileDialog1.ShowDialog() == DialogResult.OK)\n        {\n            try\n            {\n                if ((myStream = openFileDialog1.OpenFile()) != null)\n                {\n                    using (myStream)\n                    {\n                        // Insert code to read the stream here.\n                    }\n                }\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show(&quot;Error: Could not read file from disk. Original error: &quot; + ex.Message);\n            }\n        }\n    }\n        \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic OpenFileDialog Example#1\">    Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n        Dim myStream As Stream = Nothing\n        Dim openFileDialog1 As New OpenFileDialog()\n\n        openFileDialog1.InitialDirectory = &quot;c:\\&quot;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;\n        openFileDialog1.FilterIndex = 2\n        openFileDialog1.RestoreDirectory = True\n\n        If openFileDialog1.ShowDialog() = System.Windows.Forms.DialogResult.OK Then\n            Try\n                myStream = openFileDialog1.OpenFile()\n                If (myStream IsNot Nothing) Then\n                    &#39; Insert code to read the stream here.\n                End If\n            Catch Ex As Exception\n                MessageBox.Show(&quot;Cannot read file from disk. Original error: &quot; &amp; Ex.Message)\n            Finally\n                &#39; Check this again, since we need to make sure we didn&#39;t throw an exception on open.\n                If (myStream IsNot Nothing) Then\n                    myStream.Close()\n                End If\n            End Try\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_Instance\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_Instance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Instance</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Win32 instance handle for the application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual IntPtr Instance { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>A Win32 instance handle for the application.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_Options\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_Options_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Options</div>        \r\n          </div>\r\n    \r\n            <p>Gets values to initialize the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected int Options { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of internal values that initializes the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Options property corresponds to the flags used to initialize a file dialog box using Win32. Use the properties of the <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> class to get and set the options.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_RestoreDirectory\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_RestoreDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RestoreDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box restores the directory to the previously selected directory before closing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RestoreDirectory { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box restores the current directory to the previously selected directory if the user changed the directory while searching for files; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> implementation of <a class=\"xref\" href=\"system.windows.forms.filedialog\" data-linktype=\"relative-path\">FileDialog</a> and illustrates creating, setting of properties, and showing the dialog box. The example uses the RestoreDirectory property to ensure that the previously selected directory is restored when the dialog box is closed. The example requires a form with a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> placed on it and the <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespace added to it.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic OpenFileDialog Example#1\">private:\n   void button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Stream^ myStream;\n      OpenFileDialog^ openFileDialog1 = gcnew OpenFileDialog;\n\n      openFileDialog1-&gt;InitialDirectory = &quot;c:\\\\&quot;;\n      openFileDialog1-&gt;Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;;\n      openFileDialog1-&gt;FilterIndex = 2;\n      openFileDialog1-&gt;RestoreDirectory = true;\n\n      if ( openFileDialog1-&gt;ShowDialog() == System::Windows::Forms::DialogResult::OK )\n      {\n         if ( (myStream = openFileDialog1-&gt;OpenFile()) != nullptr )\n         {\n            // Insert code to read the stream here.\n            myStream-&gt;Close();\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic OpenFileDialog Example#1\">    private void button1_Click(object sender, System.EventArgs e)\n    {\n        Stream myStream = null;\n        OpenFileDialog openFileDialog1 = new OpenFileDialog();\n \n        openFileDialog1.InitialDirectory = &quot;c:\\\\&quot; ;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot; ;\n        openFileDialog1.FilterIndex = 2 ;\n        openFileDialog1.RestoreDirectory = true ;\n\n        if(openFileDialog1.ShowDialog() == DialogResult.OK)\n        {\n            try\n            {\n                if ((myStream = openFileDialog1.OpenFile()) != null)\n                {\n                    using (myStream)\n                    {\n                        // Insert code to read the stream here.\n                    }\n                }\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show(&quot;Error: Could not read file from disk. Original error: &quot; + ex.Message);\n            }\n        }\n    }\n        \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic OpenFileDialog Example#1\">    Private Sub button1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n        Dim myStream As Stream = Nothing\n        Dim openFileDialog1 As New OpenFileDialog()\n\n        openFileDialog1.InitialDirectory = &quot;c:\\&quot;\n        openFileDialog1.Filter = &quot;txt files (*.txt)|*.txt|All files (*.*)|*.*&quot;\n        openFileDialog1.FilterIndex = 2\n        openFileDialog1.RestoreDirectory = True\n\n        If openFileDialog1.ShowDialog() = System.Windows.Forms.DialogResult.OK Then\n            Try\n                myStream = openFileDialog1.OpenFile()\n                If (myStream IsNot Nothing) Then\n                    &#39; Insert code to read the stream here.\n                End If\n            Catch Ex As Exception\n                MessageBox.Show(&quot;Cannot read file from disk. Original error: &quot; &amp; Ex.Message)\n            Finally\n                &#39; Check this again, since we need to make sure we didn&#39;t throw an exception on open.\n                If (myStream IsNot Nothing) Then\n                    myStream.Close()\n                End If\n            End Try\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_ShowHelp\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_ShowHelp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowHelp</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <strong>Help</strong> button is displayed in the file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowHelp { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box includes a help button; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a> event is raised when the user clicks the <strong>Help</strong> button.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_SupportMultiDottedExtensions\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_SupportMultiDottedExtensions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SupportMultiDottedExtensions</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets whether the dialog box supports displaying and saving files that have multiple file name extensions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SupportMultiDottedExtensions { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box supports multiple file name extensions; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Sometimes users must open and save files that use multiple file name extensions. For example, the application manifest files used by the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/ndptecclick-md.md&quot; -->ClickOnce<!--END INCLUDE --> deployment technology end in the complex file name extension &quot;.exe.manifest&quot;. Setting this property to <code>true</code> enables you to set the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Filter_\" data-linktype=\"relative-path\">Filter</a> property to a multi-dotted extension.  </p>\n<p> If SupportMultiDottedExtensions is <code>false</code>, and you assign a multi-dotted extension to <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Filter_\" data-linktype=\"relative-path\">Filter</a>, derived controls such as <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a> will only use the last extension in the string. For example, &quot;.manifest&quot; will be used instead of &quot;.exe.manifest&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example saves files with the extension &quot;.data.txt&quot;. This code example requires that your application host a <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a> named <code>saveFileDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>button1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"SupportMultiDottedExtensions#1\">using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Text;\nusing System.Windows.Forms;\n\nnamespace TestSaveFileDialog\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n            button1.Click += new EventHandler(button1_Click);\n        }\n        private void button1_Click(object sender, EventArgs e)\n        {\n            saveFileDialog1.Filter = &quot;Data text files|.data.txt&quot;;\n            saveFileDialog1.SupportMultiDottedExtensions = true;\n            saveFileDialog1.FileOk += new CancelEventHandler(saveFileDialog1_FileOk);\n            saveFileDialog1.ShowDialog();\n        }\n\n        void saveFileDialog1_FileOk(object sender, CancelEventArgs e)\n        {\n            try\n            {\n                Stream s = saveFileDialog1.OpenFile();\n                StreamWriter sw = new StreamWriter(s, Encoding.Unicode);\n                sw.WriteLine(&quot;Hello, world!&quot;);\n                sw.Close();\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show(&quot;Error: Could not write file. Please try again later. Error message: &quot; + ex.Message, &quot;Error Writing File&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation); \n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SupportMultiDottedExtensions#1\">Imports System.IO\nImports System.Text\n\nPublic Class Form1\n    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click\n        Me.SaveFileDialog1.SupportMultiDottedExtensions = True\n        Me.SaveFileDialog1.Filter = &quot;Data text files|*.data.txt&quot;\n        Me.SaveFileDialog1.ShowDialog()\n    End Sub\n\n    Private Sub SaveFileDialog1_FileOk(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles SaveFileDialog1.FileOk\n        Try\n            Dim MyFile As StreamWriter = New StreamWriter(Me.SaveFileDialog1.OpenFile(), Encoding.Unicode)\n            MyFile.WriteLine(&quot;Hello, world!&quot;)\n            MyFile.Close()\n        Catch ex As Exception\n            MessageBox.Show(&quot;Error: Could not write file. Please try again later. Error message: &quot; &amp; ex.Message, &quot;Error Writing File&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n        End Try\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_Title\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_Title_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Title</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the file dialog box title.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Title { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The file dialog box title. The default value is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string is placed in the title bar of the dialog box. If the title is an empty string, the system uses a default title, which is either &quot;Save As&quot; or &quot;Open&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates initializing an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a>, setting the Title and <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_Filter_\" data-linktype=\"relative-path\">Filter</a> properties, and allowing the user to select multiple files by setting the <a class=\"xref\" href=\"system.windows.forms.openfiledialog#System_Windows_Forms_OpenFileDialog_Multiselect_\" data-linktype=\"relative-path\">Multiselect</a> property to true. To run this example, paste the following code in a form containing an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> named <code>OpenFileDialog1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>fileButton</code>. Call the <code>InitializeOpenFileDialog</code> method in the form&#39;s constructor or <code>Load</code> method. The example also requires that the <code>Click</code> event of the <code>Button</code> control is connected to the event handler defined in the example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FileDialog#6\">\tprivate void InitializeOpenFileDialog()\n\t{\n\t\tthis.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n\n\t\t// Set the file dialog to filter for graphics files.\n\t\tthis.openFileDialog1.Filter = \n\t\t\t&quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|&quot; + \n\t\t\t&quot;All files (*.*)|*.*&quot;;\n\n\t\t// Allow the user to select multiple images.\n\t\tthis.openFileDialog1.Multiselect = true;\n\t\tthis.openFileDialog1.Title = &quot;My Image Browser&quot;;\n\t\t\n\t}\n\n\tprivate void fileButton_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\topenFileDialog1.ShowDialog();\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FileDialog#6\">   void InitializeOpenFileDialog()\n   {\n      this-&gt;OpenFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      \n      // Set the file dialog to filter for graphics files.\n      this-&gt;OpenFileDialog1-&gt;Filter =\n         &quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|&quot; +\n         &quot;All files (*.*)|*.*&quot;;\n      \n      // Allow the user to select multiple images.\n      this-&gt;OpenFileDialog1-&gt;Multiselect = true;\n      this-&gt;OpenFileDialog1-&gt;Title = &quot;My Image Browser&quot;;\n   }\n\n   void fileButton_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      OpenFileDialog1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FileDialog#6\">    Private Sub InitializeOpenFileDialog()\n        Me.OpenFileDialog1 = New System.Windows.Forms.OpenFileDialog\n\n        &#39; Set the file dialog to filter for graphics files.\n        Me.OpenFileDialog1.Filter = _\n        &quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*&quot;\n\n        &#39; Allow the user to select multiple images.\n        Me.OpenFileDialog1.Multiselect = True\n        Me.OpenFileDialog1.Title = &quot;My Image Browser&quot;\n    End Sub\n\n    Private Sub fileButton_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles FileButton.Click\n        OpenFileDialog1.ShowDialog()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_ValidateNames\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_ValidateNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the dialog box accepts only valid Win32 file names.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ValidateNames { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dialog box accepts only valid Win32 file names; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the edit control contains anything but spaces when the user clicks <strong>OK</strong>, the dialog box returns the file name, whether it is valid or not. No default extension is added to the text.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_HookProc_System_IntPtr_System_Int32_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_HookProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HookProc(IntPtr,Int32,IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Defines the common dialog box hook procedure that is overridden to add specific functionality to the file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hWnd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to the dialog box window.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message received by the dialog box.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>wparam</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Additional information about the message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lparam</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Additional information about the message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>Returns zero if the default dialog box procedure processes the message; returns a nonzero value if the default dialog box procedure ignores the message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A hook procedure allows the user to connect or insert other routines into a routine or application for the purpose of debugging or enhancing functionality.  </p>\n<p> By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_OnFileOk_System_ComponentModel_CancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_OnFileOk_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFileOk(CancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileOk\" data-linktype=\"relative-path\">FileOk</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void OnFileOk (System.ComponentModel.CancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_Reset\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Resets all properties to their default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_RunDialog_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_RunDialog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunDialog(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies a common dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool RunDialog (IntPtr hWndOwner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hWndOwner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that represents the window handle of the owner window for the common dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the file could be opened; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides an implementation of <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_RunDialog_\" data-linktype=\"relative-path\">RunDialog</a>, and is invoked when the user of a file dialog invokes <a class=\"xref\" href=\"system.windows.forms.commondialog#System_Windows_Forms_CommonDialog_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a>.  </p>\n<p> In the derived classes <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> and <a class=\"xref\" href=\"system.windows.forms.savefiledialog\" data-linktype=\"relative-path\">SaveFileDialog</a> an invalid file name <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> can be raised.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_FileDialog_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Provides a string version of this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string version of this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_FileDialog_FileOk\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileOk</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks on the <strong>Open</strong> or <strong>Save</strong> button on a file dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.ComponentModel.CancelEventHandler FileOk;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.filedialog#System_Windows_Forms_FileDialog_FileNames_\" data-linktype=\"relative-path\">FileNames</a> property, handling the FileOk event and using the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_DoEvents_\" data-linktype=\"relative-path\">DoEvents</a> method. When the example runs, a user can select graphics files from an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> object. The selected files are displayed in the form. The <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_DoEvents_\" data-linktype=\"relative-path\">DoEvents</a> method forces a repaint of the form for each graphics file opened. To run this example paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a> named <code>PictureBox1</code>, an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> named <code>OpenFileDialog1</code>, and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>fileButton</code>. Call the <code>InitializePictureBox</code> and <code>InitializeOpenFileDialog</code> methods from the form&#39;s constructor or <code>Load</code> method. When the example is running, display the dialog box by clicking the button.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FileDialog#1\">\tprivate void InitializePictureBox()\n\t{\n\t\tthis.pictureBox1 = new System.Windows.Forms.PictureBox();\n\t\tthis.pictureBox1.BorderStyle = \n\t\t\tSystem.Windows.Forms.BorderStyle.FixedSingle;\n\t\tthis.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;\n\t\tthis.pictureBox1.Location = new System.Drawing.Point(72, 112);\n\t\tthis.pictureBox1.Name = &quot;pictureBox1&quot;;\n\t\tthis.pictureBox1.Size = new System.Drawing.Size(160, 136);\n\t\tthis.pictureBox1.TabIndex = 6;\n\t\tthis.pictureBox1.TabStop = false;\n\t}\n\n\tprivate void InitializeOpenFileDialog()\n\t{\n\t\tthis.openFileDialog1 = new System.Windows.Forms.OpenFileDialog();\n\n\t\t// Set the file dialog to filter for graphics files.\n\t\tthis.openFileDialog1.Filter = \n\t\t\t&quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|&quot; + \n\t\t\t&quot;All files (*.*)|*.*&quot;;\n\n\t\t// Allow the user to select multiple images.\n\t\tthis.openFileDialog1.Multiselect = true;\n\t\tthis.openFileDialog1.Title = &quot;My Image Browser&quot;;\n\t\t\n\t}\n\n\tprivate void fileButton_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\topenFileDialog1.ShowDialog();\n\t}\n\n\n\t// This method handles the FileOK event.  It opens each file \n\t// selected and loads the image from a stream into pictureBox1.\n\tprivate void openFileDialog1_FileOk(object sender, \n\t\tSystem.ComponentModel.CancelEventArgs e)\n\t{\n\n\t\tthis.Activate();\n\t\t string[] files = openFileDialog1.FileNames;\n\n\t\t// Open each file and display the image in pictureBox1.\n\t\t// Call Application.DoEvents to force a repaint after each\n\t\t// file is read.        \n\t\tforeach (string file in files )\n\t\t{\n\t\t\tSystem.IO.FileInfo fileInfo = new System.IO.FileInfo(file);\n\t\t\tSystem.IO.FileStream fileStream = fileInfo.OpenRead();\n\t\t\tpictureBox1.Image = System.Drawing.Image.FromStream(fileStream);\n\t\t\tApplication.DoEvents();\n\t\t\tfileStream.Close();\n\n\t\t\t// Call Sleep so the picture is briefly displayed, \n\t\t\t//which will create a slide-show effect.\n\t\t\tSystem.Threading.Thread.Sleep(2000);\n\t\t}\n\t\tpictureBox1.Image = null;\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FileDialog#1\">   void InitializePictureBox()\n   {\n      this-&gt;PictureBox1 = gcnew System::Windows::Forms::PictureBox;\n      this-&gt;PictureBox1-&gt;BorderStyle =\n         System::Windows::Forms::BorderStyle::FixedSingle;\n      this-&gt;PictureBox1-&gt;SizeMode = PictureBoxSizeMode::StretchImage;\n      this-&gt;PictureBox1-&gt;Location = System::Drawing::Point( 72, 112 );\n      this-&gt;PictureBox1-&gt;Name = &quot;PictureBox1&quot;;\n      this-&gt;PictureBox1-&gt;Size = System::Drawing::Size( 160, 136 );\n      this-&gt;PictureBox1-&gt;TabIndex = 6;\n      this-&gt;PictureBox1-&gt;TabStop = false;\n   }\n\n   void InitializeOpenFileDialog()\n   {\n      this-&gt;OpenFileDialog1 = gcnew System::Windows::Forms::OpenFileDialog;\n      \n      // Set the file dialog to filter for graphics files.\n      this-&gt;OpenFileDialog1-&gt;Filter =\n         &quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|&quot; +\n         &quot;All files (*.*)|*.*&quot;;\n      \n      // Allow the user to select multiple images.\n      this-&gt;OpenFileDialog1-&gt;Multiselect = true;\n      this-&gt;OpenFileDialog1-&gt;Title = &quot;My Image Browser&quot;;\n   }\n\n   void fileButton_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      OpenFileDialog1-&gt;ShowDialog();\n   }\n\n   // This method handles the FileOK event.  It opens each file \n   // selected and loads the image from a stream into PictureBox1.\n   void OpenFileDialog1_FileOk( Object^ sender,\n      System::ComponentModel::CancelEventArgs^ e )\n   {\n      this-&gt;Activate();\n      array&lt;String^&gt;^ files = OpenFileDialog1-&gt;FileNames;\n      \n      // Open each file and display the image in PictureBox1.\n      // Call Application.DoEvents to force a repaint after each\n      // file is read.        \n      for each ( String^ file in files )\n      {\n         System::IO::FileInfo^ fileInfo = gcnew System::IO::FileInfo( file );\n         System::IO::FileStream^ fileStream = fileInfo-&gt;OpenRead();\n         PictureBox1-&gt;Image = System::Drawing::Image::FromStream( fileStream );\n         Application::DoEvents();\n         fileStream-&gt;Close();\n         \n         // Call Sleep so the picture is briefly displayed, \n         //which will create a slide-show effect.\n         System::Threading::Thread::Sleep( 2000 );\n      }\n      PictureBox1-&gt;Image = nullptr;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FileDialog#1\">    Private Sub InitializePictureBox()\n        Me.PictureBox1 = New System.Windows.Forms.PictureBox\n        Me.PictureBox1.BorderStyle = _\n            System.Windows.Forms.BorderStyle.FixedSingle\n        Me.PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage\n        Me.PictureBox1.Location = New System.Drawing.Point(72, 112)\n        Me.PictureBox1.Name = &quot;PictureBox1&quot;\n        Me.PictureBox1.Size = New System.Drawing.Size(160, 136)\n        Me.PictureBox1.TabStop = False\n    End Sub\n\n    Private Sub InitializeOpenFileDialog()\n        Me.OpenFileDialog1 = New System.Windows.Forms.OpenFileDialog\n\n        &#39; Set the file dialog to filter for graphics files.\n        Me.OpenFileDialog1.Filter = _\n        &quot;Images (*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*&quot;\n\n        &#39; Allow the user to select multiple images.\n        Me.OpenFileDialog1.Multiselect = True\n        Me.OpenFileDialog1.Title = &quot;My Image Browser&quot;\n    End Sub\n\n    Private Sub fileButton_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles FileButton.Click\n        OpenFileDialog1.ShowDialog()\n    End Sub\n\n\n    &#39; This method handles the FileOK event.  It opens each file \n    &#39; selected and loads the image from a stream into PictureBox1.\n    Private Sub OpenFileDialog1_FileOk(ByVal sender As Object, _\n    ByVal e As System.ComponentModel.CancelEventArgs) _\n     Handles OpenFileDialog1.FileOk\n\n        Me.Activate()\n        Dim file, files() As String\n        files = OpenFileDialog1.FileNames\n\n        &#39; Open each file and display the image in PictureBox1.\n        &#39; Call Application.DoEvents to force a repaint after each\n        &#39; file is read.        \n        For Each file In files\n            Dim fileInfo As System.IO.FileInfo = New System.IO.FileInfo(file)\n            Dim fileStream As System.IO.FileStream = fileInfo.OpenRead()\n            PictureBox1.Image = System.Drawing.Image.FromStream(fileStream)\n            Application.DoEvents()\n            fileStream.Close()\n\n            &#39; Call Sleep so the picture is briefly displayed, \n            &#39;which will create a slide-show effect.\n            System.Threading.Thread.Sleep(2000)\n        Next\n        PictureBox1.Image = Nothing\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.FileDialog.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.FileDialog.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.AddExtension\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.AutoUpgradeEnabled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.CheckFileExists\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.CheckPathExists\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.CustomPlaces\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.DefaultExt\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.DereferenceLinks\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.EventFileOk\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.FileName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.FileNames\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.FileOk\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.add_FileOk\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.remove_FileOk\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.Filter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.FilterIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.HookProc\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.InitialDirectory\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.Instance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.OnFileOk\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.Options\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.Reset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.RestoreDirectory\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.RunDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.ShowHelp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.Title\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.FileDialog.ValidateNames\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e71a25fc-ded2-d5e1-4493-fea3dba160a9\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\FileDialog.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Displays a dialog box from which the user can select a file.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.FileDialog\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.FileDialog.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.FileDialog.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.FileDialog","System.Windows.Forms.FileDialog.AddExtension","System.Windows.Forms.FileDialog.AutoUpgradeEnabled","System.Windows.Forms.FileDialog.CheckFileExists","System.Windows.Forms.FileDialog.CheckPathExists","System.Windows.Forms.FileDialog.CustomPlaces","System.Windows.Forms.FileDialog.DefaultExt","System.Windows.Forms.FileDialog.DereferenceLinks","System.Windows.Forms.FileDialog.EventFileOk","System.Windows.Forms.FileDialog.FileName","System.Windows.Forms.FileDialog.FileNames","System.Windows.Forms.FileDialog.FileOk","System.Windows.Forms.FileDialog.add_FileOk","System.Windows.Forms.FileDialog.remove_FileOk","System.Windows.Forms.FileDialog.Filter","System.Windows.Forms.FileDialog.FilterIndex","System.Windows.Forms.FileDialog.HookProc","System.Windows.Forms.FileDialog.InitialDirectory","System.Windows.Forms.FileDialog.Instance","System.Windows.Forms.FileDialog.OnFileOk","System.Windows.Forms.FileDialog.Options","System.Windows.Forms.FileDialog.Reset","System.Windows.Forms.FileDialog.RestoreDirectory","System.Windows.Forms.FileDialog.RunDialog","System.Windows.Forms.FileDialog.ShowHelp","System.Windows.Forms.FileDialog.SupportMultiDottedExtensions","System.Windows.Forms.FileDialog.Title","System.Windows.Forms.FileDialog.ToString","System.Windows.Forms.FileDialog.ValidateNames"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.FileDialog","System::Windows::Forms::FileDialog","System.Windows.Forms.FileDialog.AddExtension","System::Windows::Forms::FileDialog::AddExtension","System.Windows.Forms.FileDialog.AutoUpgradeEnabled","System::Windows::Forms::FileDialog::AutoUpgradeEnabled","System.Windows.Forms.FileDialog.CheckFileExists","System::Windows::Forms::FileDialog::CheckFileExists","System.Windows.Forms.FileDialog.CheckPathExists","System::Windows::Forms::FileDialog::CheckPathExists","System.Windows.Forms.FileDialog.CustomPlaces","System::Windows::Forms::FileDialog::CustomPlaces","System.Windows.Forms.FileDialog.DefaultExt","System::Windows::Forms::FileDialog::DefaultExt","System.Windows.Forms.FileDialog.DereferenceLinks","System::Windows::Forms::FileDialog::DereferenceLinks","System.Windows.Forms.FileDialog.EventFileOk","System::Windows::Forms::FileDialog::EventFileOk","System.Windows.Forms.FileDialog.FileName","System::Windows::Forms::FileDialog::FileName","System.Windows.Forms.FileDialog.FileNames","System::Windows::Forms::FileDialog::FileNames","System.Windows.Forms.FileDialog.FileOk","System::Windows::Forms::FileDialog::FileOk","System.Windows.Forms.FileDialog.Filter","System::Windows::Forms::FileDialog::Filter","System.Windows.Forms.FileDialog.FilterIndex","System::Windows::Forms::FileDialog::FilterIndex","System.Windows.Forms.FileDialog.HookProc","System::Windows::Forms::FileDialog::HookProc","System.Windows.Forms.FileDialog.InitialDirectory","System::Windows::Forms::FileDialog::InitialDirectory","System.Windows.Forms.FileDialog.Instance","System::Windows::Forms::FileDialog::Instance","System.Windows.Forms.FileDialog.OnFileOk","System::Windows::Forms::FileDialog::OnFileOk","System.Windows.Forms.FileDialog.Options","System::Windows::Forms::FileDialog::Options","System.Windows.Forms.FileDialog.Reset","System::Windows::Forms::FileDialog::Reset","System.Windows.Forms.FileDialog.RestoreDirectory","System::Windows::Forms::FileDialog::RestoreDirectory","System.Windows.Forms.FileDialog.RunDialog","System::Windows::Forms::FileDialog::RunDialog","System.Windows.Forms.FileDialog.ShowHelp","System::Windows::Forms::FileDialog::ShowHelp","System.Windows.Forms.FileDialog.SupportMultiDottedExtensions","System::Windows::Forms::FileDialog::SupportMultiDottedExtensions","System.Windows.Forms.FileDialog.Title","System::Windows::Forms::FileDialog::Title","System.Windows.Forms.FileDialog.ToString","System::Windows::Forms::FileDialog::ToString","System.Windows.Forms.FileDialog.ValidateNames","System::Windows::Forms::FileDialog::ValidateNames"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e71a25fc-ded2-d5e1-4493-fea3dba160a9","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\FileDialog.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/FileDialog.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FileDialog class | Microsoft Docs","_op_ogTitle":"FileDialog class","description":"Displays a dialog box from which the user can select a file.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.FileDialog","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.filedialog","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.filedialog","fileRelativePath":"System.Windows.Forms.FileDialog.html"},"themesRelativePathToOutputRoot":"_themes/"}