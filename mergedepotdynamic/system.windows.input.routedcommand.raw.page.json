{"content":"    \r\n    <h1 id=\"System_Windows_Input_RoutedCommand\">\r\n      <span class=\"lang-csharp\">RoutedCommand</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a command that implements <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> and is routed through the element tree.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(&quot;System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null&quot;)]\n[System.Windows.Markup.ValueSerializer(&quot;System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null&quot;)]\npublic class RoutedCommand : System.Windows.Input.ICommand</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RoutedCommand</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_Execute_\" data-linktype=\"relative-path\">Execute</a> and <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> methods on a RoutedCommand do not contain the application logic for the command as is the case with a typical <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a>, but rather, these methods raise events that traverse the element tree looking for an object with a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a>.  The event handlers attached to the <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> contain the command logic.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_Execute_\" data-linktype=\"relative-path\">Execute</a> method raises the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events.  The <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> method raises the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events.  </p>\n<p><a name=\"xamlAttributeUsage_RoutedCommand\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<p> &lt;<em>object</em> <em>property</em>=&quot;<em>predefinedCommandName</em>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object</em> <em>property</em>=&quot;<em>predefinedClassName</em>.<em>predefinedCommandName</em>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object</em> <em>property</em>=&quot;{ <em>customClassName</em>.<em>customCommandName</em>}&quot;/&gt;  </p>\n<p><a name=\"xamlValues_RoutedCommand\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>predefinedClassName</em><br> One of the predefined command classes.  </p>\n<p> <em>predefinedCommandName</em><br> One of the predefined commands.  </p>\n<p> <em>customClassName</em><br> A custom class which contains the custom command. Custom classes generally require an <code>xlmns</code> prefix mapping; see <a href=\"../Topic/XAML%20Namespaces%20and%20Namespace%20Mapping%20for%20WPF%20XAML.md\" data-linktype=\"relative-path\">XAML Namespaces and Namespace Mapping for WPF XAML</a>.  </p>\n<p> <em>customCommandName</em><br> A custom command.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand__ctor\" data-linktype=\"self-bookmark\">RoutedCommand()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand__ctor_System_String_System_Type_\" data-linktype=\"self-bookmark\">RoutedCommand(String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> class with the specified name and owner type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand__ctor_System_String_System_Type_System_Windows_Input_InputGestureCollection_\" data-linktype=\"self-bookmark\">RoutedCommand(String,Type,InputGestureCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> class with the specified name, owner type, and collection of gestures.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_InputGestures\" data-linktype=\"self-bookmark\">InputGestures</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a> objects that are associated with this command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_OwnerType\" data-linktype=\"self-bookmark\">OwnerType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type that is registered with the command.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_CanExecute_System_Object_System_Windows_IInputElement_\" data-linktype=\"self-bookmark\">CanExecute(Object,IInputElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether this <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> can execute in its current state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_Execute_System_Object_System_Windows_IInputElement_\" data-linktype=\"self-bookmark\">Execute(Object,IInputElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> on the current command target.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_CanExecuteChanged\" data-linktype=\"self-bookmark\">CanExecuteChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when changes to the command source are detected by the command manager. These changes often affect whether the command should execute on the current command target.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_System_Windows_Input_ICommand_CanExecute_System_Object_\" data-linktype=\"self-bookmark\">ICommand.CanExecute(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this members, see <span class=\"xref\">stem.Windows.Input.ICommand.CanExecute*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_RoutedCommand_System_Windows_Input_ICommand_Execute_System_Object_\" data-linktype=\"self-bookmark\">ICommand.Execute(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this members, see <span class=\"xref\">stem.Windows.Input.ICommand.Execute*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand__ctor\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RoutedCommand()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RoutedCommand ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand__ctor_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RoutedCommand(String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> class with the specified name and owner type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RoutedCommand (string name, Type ownerType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Declared name for serialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownerType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type which is registering the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>ownerType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand__ctor_System_String_System_Type_System_Windows_Input_InputGestureCollection_\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RoutedCommand(String,Type,InputGestureCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> class with the specified name, owner type, and collection of gestures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RoutedCommand (string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Declared name for serialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownerType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type that is registering the command.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inputGestures</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.inputgesturecollection\" data-linktype=\"relative-path\">InputGestureCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Default input gestures associated with this command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>the length of <code>name</code> is zero  </p>\n<p> - or -  </p>\n<p> <code>ownerType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_InputGestures\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_InputGestures_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InputGestures</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a> objects that are associated with this command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Input.InputGestureCollection InputGestures { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.inputgesturecollection\" data-linktype=\"relative-path\">InputGestureCollection</a></div>\r\n                  </div>\r\n                  <p>The input gestures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to add a new <a class=\"xref\" href=\"system.windows.input.mousegesture\" data-linktype=\"relative-path\">MouseGesture</a> to a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"commandlibrarysnippets#MouseBindingAddedCommand\">MouseGesture PasteCmdMouseGesture = new MouseGesture(\n    MouseAction.MiddleClick, ModifierKeys.Alt);\n\nApplicationCommands.Paste.InputGestures.Add(PasteCmdMouseGesture);\n</code></pre><pre><code class=\"lang-vb\" name=\"commandlibrarysnippets#MouseBindingAddedCommand\">Dim PasteCmdMouseGesture As New MouseGesture(MouseAction.MiddleClick, ModifierKeys.Alt)\n\nApplicationCommands.Paste.InputGestures.Add(PasteCmdMouseGesture)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_Name\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property can be used when referencing a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> in XAML.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_OwnerType\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_OwnerType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwnerType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type that is registered with the command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type OwnerType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type of the command owner.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_CanExecute_System_Object_System_Windows_IInputElement_\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_CanExecute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanExecute(Object,IInputElement)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether this <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> can execute in its current state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanExecute (object parameter, System.Windows.IInputElement target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user defined data type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iinputelement\" data-linktype=\"relative-path\">IInputElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The command target.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the command can execute on the current command target; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>target</code> is not a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The actual logic that determines if a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> can execute on the current command target is not contained in the CanExecute methods, rather CanExecute raises the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and the &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events which tunnel and bubble through element tree looking for a object with a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a>.  If a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> for that <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> is found, then the <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventhandler\" data-linktype=\"relative-path\">CanExecuteRoutedEventHandler</a> attached to <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> is called.  These handlers supply the programming logic for determining if the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> can execute or not.  </p>\n<p> The &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; events are raised on the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a>.  If the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> is not set on the <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>, the &lt;xref:System.Windows.Input.CommandManager.PreviewCanExecute&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events are raised on the element with keyboard focus.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is a <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_CanExecuteChanged\" data-linktype=\"relative-path\">CanExecuteChanged</a> event handler from a custom implementation of <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>.  </p>\n<p> <code>this.Command</code> in this example is the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_Command_\" data-linktype=\"relative-path\">Command</a> property on the <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>.  If the command is not <code>null</code>, the command is cast to a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>.  If the command is a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, then the CanExecute method is called passing the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> and the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>.  If command is not a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, it is cast to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> and the <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> method is called passing the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>.  </p>\n<p> If the CanExecute method returns <code>true</code>, then the control is enabled; otherwise, the control is disable.  </p>\n<pre><code class=\"lang-cs\" name=\"ImplementICommandSource#ImplementICommandCanExecuteChanged\">private void CanExecuteChanged(object sender, EventArgs e)\n{\n\n    if (this.Command != null)\n    {\n        RoutedCommand command = this.Command as RoutedCommand;\n\n        // If a RoutedCommand.\n        if (command != null)\n        {\n            if (command.CanExecute(CommandParameter, CommandTarget))\n            {\n                this.IsEnabled = true;\n            }\n            else\n            {\n                this.IsEnabled = false;\n            }\n        }\n        // If a not RoutedCommand.\n        else\n        {\n            if (Command.CanExecute(CommandParameter))\n            {\n                this.IsEnabled = true;\n            }\n            else\n            {\n                this.IsEnabled = false;\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ImplementICommandSource#ImplementICommandCanExecuteChanged\">Private Sub CanExecuteChanged(ByVal sender As Object, ByVal e As EventArgs)\n\n    If Me.Command IsNot Nothing Then\n        Dim command As RoutedCommand = TryCast(Me.Command, RoutedCommand)\n\n        &#39; If a RoutedCommand.\n        If command IsNot Nothing Then\n            If command.CanExecute(CommandParameter, CommandTarget) Then\n                Me.IsEnabled = True\n            Else\n                Me.IsEnabled = False\n            End If\n            &#39; If a not RoutedCommand.\n        Else\n            If Me.Command.CanExecute(CommandParameter) Then\n                Me.IsEnabled = True\n            Else\n                Me.IsEnabled = False\n            End If\n        End If\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_Execute_System_Object_System_Windows_IInputElement_\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_Execute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Execute(Object,IInputElement)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> on the current command target.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Execute (object parameter, System.Windows.IInputElement target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>User defined parameter to be passed to the handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iinputelement\" data-linktype=\"relative-path\">IInputElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Element at which to begin looking for command handlers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>target</code> is not a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The actual logic that executes the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> is not contained in the Execute methods.  Execute raises the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events, which tunnel and bubble through the element tree looking for an object with a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a>.  If a <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> for that <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> is found, then the <a class=\"xref\" href=\"system.windows.input.executedroutedeventhandler\" data-linktype=\"relative-path\">ExecutedRoutedEventHandler</a> attached to <a class=\"xref\" href=\"system.windows.input.commandbinding\" data-linktype=\"relative-path\">CommandBinding</a> is called.  These handlers supply the programming logic that performs the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>.  </p>\n<p> The &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events are raised on the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a>.  If the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> is not set on the <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>, the &lt;xref:System.Windows.Input.CommandManager.PreviewExecuted&gt; and &lt;xref:System.Windows.Input.CommandManager.Executed&gt; events are raised on the element with keyboard focus.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is from a custom implementation of <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a> sample.  </p>\n<p> <code>this.Command</code> in this example is the Command property on the <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>.  If the command is not null, the command is cast to a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>.  If it is a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, then the Execute method is called passing the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> and the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>.  If the command is not a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, it is cast to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> and the <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_Execute_\" data-linktype=\"relative-path\">Execute</a> method is called passing the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"ImplementICommandSource#ImplementICommandExecute\">// If Command is defined, moving the slider will invoke the command;\n// Otherwise, the slider will behave normally.\nprotected override void OnValueChanged(double oldValue, double newValue)\n{\n    base.OnValueChanged(oldValue, newValue);\n\n    if (this.Command != null)\n    {\n        RoutedCommand command = Command as RoutedCommand;\n\n        if (command != null)\n        {\n            command.Execute(CommandParameter, CommandTarget);\n        }\n        else\n        {\n            ((ICommand)Command).Execute(CommandParameter);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ImplementICommandSource#ImplementICommandExecute\">&#39; If Command is defined, moving the slider will invoke the command;\n&#39; Otherwise, the slider will behave normally.\nProtected Overrides Sub OnValueChanged(ByVal oldValue As Double, ByVal newValue As Double)\n    MyBase.OnValueChanged(oldValue, newValue)\n\n    If Me.Command IsNot Nothing Then\n        Dim command As RoutedCommand = TryCast(Me.Command, RoutedCommand)\n\n        If command IsNot Nothing Then\n            command.Execute(CommandParameter, CommandTarget)\n        Else\n            CType(Me.Command, ICommand).Execute(CommandParameter)\n        End If\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_CanExecuteChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanExecuteChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when changes to the command source are detected by the command manager. These changes often affect whether the command should execute on the current command target.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CanExecuteChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> listens for the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event, which is raised by the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a>. The <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event is raised whenever conditions are met that may change the whether the command should execute, such as a change in keyboard focus.  When the command receives the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event, it raises the CanExecuteChanged event.  Generally, the command source will listen for this event and query the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> by way of the <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> method.  Most command sources will disable themselves if the command cannot be executed, as part of their command binding.  An example of this is when a <a class=\"xref\" href=\"system.windows.controls.menuitem\" data-linktype=\"relative-path\">MenuItem</a> grays itself out when the command cannot be executed.  </p>\n<p> In some situations, the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> is unaware of a change in conditions that alters the ability of a command to execute.  In these cases, you can force the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a> to raises the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RequerySuggested\" data-linktype=\"relative-path\">RequerySuggested</a> event by calling the <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_InvalidateRequerySuggested_\" data-linktype=\"relative-path\">InvalidateRequerySuggested</a> method, this will in turn cause the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> to raise the CanExecuteChanged event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is a <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_CanExecuteChanged\" data-linktype=\"relative-path\">CanExecuteChanged</a> event handler from a custom implementation of <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>.  </p>\n<p> <code>this.Command</code> in this example is the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_Command_\" data-linktype=\"relative-path\">Command</a> property on the <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a>.  If the command is not <code>null</code>, the command is cast to a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>.  If the command is a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, then the <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> method is called passing the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> and the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>.  If command is not a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, it is cast to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> and the <a class=\"xref\" href=\"system.windows.input.icommand#System_Windows_Input_ICommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> method is called passing the <a class=\"xref\" href=\"system.windows.input.icommandsource#System_Windows_Input_ICommandSource_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_CanExecute_\" data-linktype=\"relative-path\">CanExecute</a> method returns <code>true</code>, then the control is enabled; otherwise, the control is disabled.  </p>\n<pre><code class=\"lang-cs\" name=\"ImplementICommandSource#ImplementICommandCanExecuteChanged\">private void CanExecuteChanged(object sender, EventArgs e)\n{\n\n    if (this.Command != null)\n    {\n        RoutedCommand command = this.Command as RoutedCommand;\n\n        // If a RoutedCommand.\n        if (command != null)\n        {\n            if (command.CanExecute(CommandParameter, CommandTarget))\n            {\n                this.IsEnabled = true;\n            }\n            else\n            {\n                this.IsEnabled = false;\n            }\n        }\n        // If a not RoutedCommand.\n        else\n        {\n            if (Command.CanExecute(CommandParameter))\n            {\n                this.IsEnabled = true;\n            }\n            else\n            {\n                this.IsEnabled = false;\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ImplementICommandSource#ImplementICommandCanExecuteChanged\">Private Sub CanExecuteChanged(ByVal sender As Object, ByVal e As EventArgs)\n\n    If Me.Command IsNot Nothing Then\n        Dim command As RoutedCommand = TryCast(Me.Command, RoutedCommand)\n\n        &#39; If a RoutedCommand.\n        If command IsNot Nothing Then\n            If command.CanExecute(CommandParameter, CommandTarget) Then\n                Me.IsEnabled = True\n            Else\n                Me.IsEnabled = False\n            End If\n            &#39; If a not RoutedCommand.\n        Else\n            If Me.Command.CanExecute(CommandParameter) Then\n                Me.IsEnabled = True\n            Else\n                Me.IsEnabled = False\n            End If\n        End If\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_System_Windows_Input_ICommand_CanExecute_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_System_Windows_Input_ICommand_CanExecute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICommand.CanExecute(Object)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this members, see <span class=\"xref\">stem.Windows.Input.ICommand.CanExecute*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool ICommand.CanExecute (object parameter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Data used by the command.  If the command does not require data to be passed, this object can be set to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this command can be executed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> instance is cast to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_RoutedCommand_System_Windows_Input_ICommand_Execute_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Input_RoutedCommand_System_Windows_Input_ICommand_Execute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICommand.Execute(Object)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this members, see <span class=\"xref\">stem.Windows.Input.ICommand.Execute*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICommand.Execute (object parameter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Data used by the command.  If the command does not require data to be passed, this object can be set to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> instance is cast to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>See Also  </p>\n <a class=\"xref\" href=\"system.windows.input.routedcommand#System_Windows_Input_RoutedCommand_Execute_\" data-linktype=\"relative-path\">Execute</a>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.RoutedCommand.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.RoutedCommand.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.CanExecute\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.CanExecuteChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.add_CanExecuteChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.remove_CanExecuteChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.Execute\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.InputGestures\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.Name\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.OwnerType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.ICommand.CanExecute\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.RoutedCommand.ICommand.Execute\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"925d7d1f-9b65-3588-a90e-a64c5fe9a091\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a command that implements  and is routed through the element tree.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.RoutedCommand\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.RoutedCommand.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.RoutedCommand.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.RoutedCommand","System.Windows.Input.RoutedCommand..ctor","System.Windows.Input.RoutedCommand.CanExecute","System.Windows.Input.RoutedCommand.CanExecuteChanged","System.Windows.Input.RoutedCommand.add_CanExecuteChanged","System.Windows.Input.RoutedCommand.remove_CanExecuteChanged","System.Windows.Input.RoutedCommand.Execute","System.Windows.Input.RoutedCommand.InputGestures","System.Windows.Input.RoutedCommand.Name","System.Windows.Input.RoutedCommand.OwnerType","System.Windows.Input.RoutedCommand.ICommand.CanExecute","System.Windows.Input.RoutedCommand.ICommand.Execute"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.RoutedCommand","System::Windows::Input::RoutedCommand","System.Windows.Input.RoutedCommand.#ctor","System::Windows::Input::RoutedCommand::#ctor","System.Windows.Input.RoutedCommand.CanExecute","System::Windows::Input::RoutedCommand::CanExecute","System.Windows.Input.RoutedCommand.CanExecuteChanged","System::Windows::Input::RoutedCommand::CanExecuteChanged","System.Windows.Input.RoutedCommand.Execute","System::Windows::Input::RoutedCommand::Execute","System.Windows.Input.RoutedCommand.InputGestures","System::Windows::Input::RoutedCommand::InputGestures","System.Windows.Input.RoutedCommand.Name","System::Windows::Input::RoutedCommand::Name","System.Windows.Input.RoutedCommand.OwnerType","System::Windows::Input::RoutedCommand::OwnerType","System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute","System::Windows::Input::RoutedCommand::System#Windows#Input#ICommand#CanExecute","System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute","System::Windows::Input::RoutedCommand::System#Windows#Input#ICommand#Execute"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"925d7d1f-9b65-3588-a90e-a64c5fe9a091","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/RoutedCommand.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RoutedCommand class | Microsoft Docs","_op_ogTitle":"RoutedCommand class","description":"Defines a command that implements  and is routed through the element tree.\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.RoutedCommand","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.routedcommand","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.routedcommand","fileRelativePath":"System.Windows.Input.RoutedCommand.html"},"themesRelativePathToOutputRoot":"_themes/"}