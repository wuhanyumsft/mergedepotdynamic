{"content":"    \r\n    <h1 id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation\">\r\n      <span class=\"lang-csharp\">TransformPattern+TransformPatternInformation</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to the property values of a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> object using its <span class=\"xref\">stem.Windows.Automation.TransformPattern.Current*</span> or <span class=\"xref\">stem.Windows.Automation.TransformPattern.Cached*</span> accessors.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct TransformPattern.TransformPatternInformation</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TransformPattern+TransformPatternInformation</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_TransformPatternInformation_CanMove\" data-linktype=\"self-bookmark\">CanMove</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element can be moved.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_TransformPatternInformation_CanResize\" data-linktype=\"self-bookmark\">CanResize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element can be resized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_TransformPatternInformation_CanRotate\" data-linktype=\"self-bookmark\">CanRotate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element can be rotated.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation_CanMove\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation_CanMove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanMove</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element can be moved.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanMove { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element can be moved; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> and subsequently used to move the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Calls the TransformPattern.Move() method for an associated \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;transformPattern&quot;&gt;\n/// The TransformPattern control pattern obtained from\n/// an automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;x&quot;&gt;\n/// The number of screen pixels to move the automation element \n/// horizontally.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;y&quot;&gt;\n/// The number of screen pixels to move the automation element \n/// vertically.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void MoveElement(\n    TransformPattern transformPattern, double x, double y)\n{\n    try\n    {\n        if (transformPattern.Current.CanMove)\n        {\n            transformPattern.Move(x, y);\n        }\n    }\n    catch (InvalidOperationException)\n    {\n        // object is not able to perform the requested action\n        return;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Calls the TransformPattern.Move() method for an associated \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;transformPattern&quot;&gt;\n&#39;&#39;&#39; The TransformPattern control pattern obtained from\n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;x&quot;&gt;\n&#39;&#39;&#39; The number of screen pixels to move the automation element \n&#39;&#39;&#39; horizontally.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;y&quot;&gt;\n&#39;&#39;&#39; The number of screen pixels to move the automation element \n&#39;&#39;&#39; vertically.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub MoveElement( _\nByVal transformPattern As TransformPattern, _\nByVal x As Double, ByVal y As Double)\n    Try\n        If transformPattern.Current.CanMove Then\n            transformPattern.Move(x, y)\n        End If\n    Catch exc As InvalidOperationException\n        &#39; object is not able to perform the requested action\n        Return\n    End Try\n\nEnd Sub &#39;MoveElement    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation_CanResize\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation_CanResize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanResize</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element can be resized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanResize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element can be resized; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> and subsequently used to resize the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#104\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Calls the TransformPattern.Resize() method for an associated \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;transformPattern&quot;&gt;\n/// The TransformPattern control pattern obtained from\n/// an automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;width&quot;&gt;\n/// The requested width of the automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;height&quot;&gt;\n/// The requested height of the automation element.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void ResizeElement(\n    TransformPattern transformPattern, double width, double height)\n{\n    try\n    {\n        if (transformPattern.Current.CanResize)\n        {\n            transformPattern.Resize(width, height);\n        }\n    }\n    catch (InvalidOperationException)\n    {\n        // object is not able to perform the requested action\n        return;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#104\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Calls the TransformPattern.Resize() method for an associated \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;transformPattern&quot;&gt;\n&#39;&#39;&#39; The TransformPattern control pattern obtained from\n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;width&quot;&gt;\n&#39;&#39;&#39; The requested width of the automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;height&quot;&gt;\n&#39;&#39;&#39; The requested height of the automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub ResizeElement( _\nByVal transformPattern As TransformPattern, _\nByVal width As Double, ByVal height As Double)\n    Try\n        If transformPattern.Current.CanResize Then\n            transformPattern.Resize(width, height)\n        End If\n    Catch\n        &#39; object is not able to perform the requested action\n        Return\n    End Try\n\nEnd Sub &#39;ResizeElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation_CanRotate\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_TransformPatternInformation_CanRotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRotate</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element can be rotated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanRotate { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element can be rotated; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> and subsequently used to rotate the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Calls the TransformPattern.Rotate() method for an associated \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;transformPattern&quot;&gt;\n/// The TransformPattern control pattern obtained from\n/// an automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;degrees&quot;&gt;\n/// The amount of degrees to rotate the automation element.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void RotateElement(\n    TransformPattern transformPattern, double degrees)\n{\n    try\n    {\n        if (transformPattern.Current.CanRotate)\n        {\n            transformPattern.Rotate(degrees);\n        }\n    }\n    catch (InvalidOperationException)\n    {\n        // object is not able to perform the requested action\n        return;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Calls the TransformPattern.Rotate() method for an associated \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;transformPattern&quot;&gt;\n&#39;&#39;&#39; The TransformPattern control pattern obtained from\n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;degrees&quot;&gt;\n&#39;&#39;&#39; The amount of degrees to rotate the automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub RotateElement( _\nByVal transformPattern As TransformPattern, ByVal degrees As Double)\n    Try\n        If transformPattern.Current.CanRotate Then\n            transformPattern.Rotate(degrees)\n        End If\n    Catch\n        &#39; object is not able to perform the requested action\n        Return\n    End Try\n\nEnd Sub &#39;RotateElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.TransformPattern.TransformPatternInformation.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.TransformPattern.TransformPatternInformation.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern+TransformPatternInformation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern+TransformPatternInformation.CanMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern+TransformPatternInformation.CanResize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern+TransformPatternInformation.CanRotate\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"1da704d0-eef0-7953-a471-005def7845e0\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Automation\\TransformPattern+TransformPatternInformation.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the property values of a  object using its  or  accessors.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.TransformPattern.TransformPatternInformation\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.TransformPattern.TransformPatternInformation.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.TransformPattern.TransformPatternInformation.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.TransformPattern+TransformPatternInformation","System.Windows.Automation.TransformPattern+TransformPatternInformation.CanMove","System.Windows.Automation.TransformPattern+TransformPatternInformation.CanResize","System.Windows.Automation.TransformPattern+TransformPatternInformation.CanRotate"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.TransformPattern.TransformPatternInformation","System::Windows::Automation::TransformPattern::TransformPatternInformation","System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove","System::Windows::Automation::TransformPattern::TransformPatternInformation::CanMove","System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize","System::Windows::Automation::TransformPattern::TransformPatternInformation::CanResize","System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate","System::Windows::Automation::TransformPattern::TransformPatternInformation::CanRotate"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"1da704d0-eef0-7953-a471-005def7845e0","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Automation\\TransformPattern+TransformPatternInformation.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/TransformPattern+TransformPatternInformation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TransformPattern+TransformPatternInformation struct | Microsoft Docs","_op_ogTitle":"TransformPattern+TransformPatternInformation struct","description":"Provides access to the property values of a  object using its  or  accessors.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.TransformPattern.TransformPatternInformation","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.transformpattern.transformpatterninformation","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.transformpattern.transformpatterninformation","fileRelativePath":"System.Windows.Automation.TransformPattern.TransformPatternInformation.html"},"themesRelativePathToOutputRoot":"_themes/"}