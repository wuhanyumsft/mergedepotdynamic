{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ICustomMarshaler</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides custom wrappers for handling method calls.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface ICustomMarshaler</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A marshaler provides a bridge between the functionality of old and new interfaces. Custom marshaling provides the following benefits:  </p>\n<ul>\n<li><p>It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.  </p>\n</li>\n<li><p>It enables client applications built to work with a new interface to work with servers that implement an old interface.  </p>\n<p>If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler. By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.  </p>\n<p>For example, suppose that you are developing a managed interface called <code>INew</code>. When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler. Now suppose that a well-known COM interface called <code>IOld</code> already provides the same functionality as the <code>INew</code> interface. By designing a custom marshaler, you can provide an unmanaged implementation of <code>IOld</code> that simply delegates the calls to the managed implementation of the <code>INew</code> interface. Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.  </p>\n</div>\n<h2 id=\"defining-the-marshaling-type\">Defining the Marshaling Type</h2>\n<p> Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled. These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.  </p>\n<p> A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface. The following example shows a typical interface.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.ICustomMarshaler#1\">public interface class INew\n{\n    void NewMethod();\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.ICustomMarshaler#1\">public interface INew\n{\n    void NewMethod();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.ICustomMarshaler#1\">Public Interface INew\n    Sub NewMethod()\nEnd Interface\n</code></pre><p> You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler. You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.  </p>\n<pre><code> [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  \nlibrary OldLib {  \n     [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]  \n     interface IOld : IUnknown  \n         HRESULT OldMethod();  \n}  \n</code></pre><p> The MIDL compiler produces several output files. If the interface is defined in Old.idl, the output file Old_i.c defines a <code>const</code> variable with the interface identifier (IID) of the interface, as the following example demonstrates.  </p>\n<pre><code>const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};  \n</code></pre><p> The Old.h file is also produced by MIDL. It contains a C++ definition of the interface that can be included in your C++ source code.  </p>\n<h2 id=\"implementing-the-icustommarshaler-interface\">Implementing the ICustomMarshaler Interface</h2>\n<p> Your custom marshaler must implement the ICustomMarshaler interface to provide the appropriate wrappers to the runtime.  </p>\n<p> The following C# code displays the base interface that must be implemented by all custom marshalers.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.ICustomMarshaler#2\">public interface class ICustomMarshaler\n{\n     Object^ MarshalNativeToManaged( IntPtr^ pNativeData );\n     IntPtr^ MarshalManagedToNative( Object^ ManagedObj );\n     void CleanUpNativeData( IntPtr^ pNativeData );\n     void CleanUpManagedData( Object^ ManagedObj );\n     int GetNativeDataSize();\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.ICustomMarshaler#2\">public interface ICustomMarshaler\n{\n     Object MarshalNativeToManaged( IntPtr pNativeData );\n     IntPtr MarshalManagedToNative( Object ManagedObj );\n     void CleanUpNativeData( IntPtr pNativeData );\n     void CleanUpManagedData( Object ManagedObj );\n     int GetNativeDataSize();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.ICustomMarshaler#2\">Public Interface ICustomMarshaler\n     Function MarshalNativeToManaged( pNativeData As IntPtr ) As Object\n     Function MarshalManagedToNative( ManagedObj As Object ) As IntPtr\n     Sub CleanUpNativeData( pNativeData As IntPtr )\n     Sub CleanUpManagedData( ManagedObj As Object )\n     Function GetNativeDataSize() As Integer\nEnd Interface\n</code></pre><p> The ICustomMarshaler interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.  </p>\n<table>\n<thead>\n<tr>\n<th>Type of operation</th>\n<th>ICustomMarshaler method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Conversion (from native to managed code)</td>\n<td><a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalNativeToManaged_\" data-linktype=\"relative-path\">MarshalNativeToManaged</a></td>\n<td>Marshals a pointer to native data into a managed object. This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument. The marshaler should return an instance of the custom RCW for that type.</td>\n</tr>\n<tr>\n<td>Conversion (from managed to native code)</td>\n<td><a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalManagedToNative_\" data-linktype=\"relative-path\">MarshalManagedToNative</a></td>\n<td>Marshals a managed object into a pointer to native data. This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument. The marshaler should return an instance of the custom CCW for that type.</td>\n</tr>\n<tr>\n<td>Cleanup (of native code)</td>\n<td><a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_CleanUpNativeData_\" data-linktype=\"relative-path\">CleanUpNativeData</a></td>\n<td>Enables the marshaler to clean up the native data (the CCW) that is returned by the <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalManagedToNative_\" data-linktype=\"relative-path\">MarshalManagedToNative</a> method.</td>\n</tr>\n<tr>\n<td>Cleanup (of managed code)</td>\n<td><a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_CleanUpManagedData_\" data-linktype=\"relative-path\">CleanUpManagedData</a></td>\n<td>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalNativeToManaged_\" data-linktype=\"relative-path\">MarshalNativeToManaged</a> method.</td>\n</tr>\n<tr>\n<td>Information (about native code)</td>\n<td><a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_GetNativeDataSize_\" data-linktype=\"relative-path\">GetNativeDataSize</a></td>\n<td>Returns the size of the unmanaged data to be marshaled.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"conversion\">Conversion</h3>\n <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalNativeToManaged_\" data-linktype=\"relative-path\">MarshalNativeToManaged</a>  \n\n<p> Marshals a pointer to native data into a managed object. This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument. The marshaler should return an instance of the custom RCW for that type.  </p>\n <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalManagedToNative_\" data-linktype=\"relative-path\">MarshalManagedToNative</a>  \n\n<p> Marshals a managed object into a pointer to native data. This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument. The marshaler should return an instance of the custom CCW for that type.  </p>\n<h3 id=\"cleanup\">Cleanup</h3>\n <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_CleanUpNativeData_\" data-linktype=\"relative-path\">CleanUpNativeData</a>  \n\n<p> Enables the marshaler to clean up the native data (the CCW) that is returned by the <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalManagedToNative_\" data-linktype=\"relative-path\">MarshalManagedToNative</a> method.  </p>\n <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_CleanUpManagedData_\" data-linktype=\"relative-path\">CleanUpManagedData</a>  \n\n<p> Enables the marshaler to clean up the managed data (the RCW) that is returned by the <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalNativeToManaged_\" data-linktype=\"relative-path\">MarshalNativeToManaged</a> method.  </p>\n<h3 id=\"size-information\">Size Information</h3>\n <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_GetNativeDataSize_\" data-linktype=\"relative-path\">GetNativeDataSize</a>  \n\n<p> Returns the size of the unmanaged data to be marshaled.  </p>\n<h2 id=\"implementing-the-getinstance-method\">Implementing the GetInstance Method</h2>\n<p> In addition to implementing the ICustomMarshaler interface, custom marshalers must implement a <code>static</code> method called <code>GetInstance</code> that accepts a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> as a parameter and has a return type of ICustomMarshaler. This <code>static</code> method is called by the common language runtime&#39;s COM interop layer to instantiate an instance of the custom marshaler. The string that is passed to <code>GetInstance</code> is a cookie that the method can use to customize the returned custom marshaler.  </p>\n<pre><code>static ICustomMarshaler *GetInstance(String *pstrCookie);  \n</code></pre><h2 id=\"applying-marshalasattribute\">Applying MarshalAsAttribute</h2>\n<p> To use a custom marshaler, you must apply the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute\" data-linktype=\"relative-path\">MarshalAsAttribute</a> attribute to the parameter or field that is being marshaled.  </p>\n<p> You must also pass the <a class=\"xref\" href=\"system.runtime.interopservices.unmanagedtype\" data-linktype=\"relative-path\">System.Runtime.InteropServices.UnmanagedType</a> enumeration value to the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute\" data-linktype=\"relative-path\">MarshalAsAttribute</a>constructor. In addition, you must specify the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalType\" data-linktype=\"relative-path\">MarshalType</a> field with one of the following named parameters:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalType\" data-linktype=\"relative-path\">MarshalType</a> (required): The assembly-qualified name of the custom marshaler. The name should include the namespace and class of the custom marshaler. If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalTypeRef\" data-linktype=\"relative-path\">MarshalTypeRef</a> field instead of the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalType\" data-linktype=\"relative-path\">MarshalType</a> field. <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalTypeRef\" data-linktype=\"relative-path\">MarshalTypeRef</a> takes a type that is easier to specify.  </p>\n</div>\n</li>\n<li><p><a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalCookie\" data-linktype=\"relative-path\">MarshalCookie</a> (optional): A cookie that is passed to the custom marshaler. You can use the cookie to provide additional information to the marshaler. For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper. The cookie is passed to the <code>GetInstance</code> method of the marshaler.  </p>\n<p>The <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute\" data-linktype=\"relative-path\">MarshalAsAttribute</a> attribute identifies the custom marshaler so it can activate the appropriate wrapper. The common language runtime&#39;s interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.  </p>\n<p>The runtime then calls the <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalNativeToManaged_\" data-linktype=\"relative-path\">MarshalNativeToManaged</a> and <a class=\"xref\" href=\"system.runtime.interopservices.icustommarshaler#System_Runtime_InteropServices_ICustomMarshaler_MarshalManagedToNative_\" data-linktype=\"relative-path\">MarshalManagedToNative</a> methods on the custom marshaler to activate the correct wrapper to handle the call.  </p>\n</li>\n</ul>\n<h2 id=\"using-a-custom-marshaler\">Using a Custom Marshaler</h2>\n<p> When the custom marshaler is complete, you can use it as a custom wrapper for a particular type. The following example shows the definition of the <code>IUserData</code> managed interface:  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.ICustomMarshaler#3\">public interface class IUserData\n{\n    void DoSomeStuff(INew^ pINew);\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.ICustomMarshaler#3\">interface IUserData\n{\n    void DoSomeStuff(INew pINew);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.ICustomMarshaler#3\">Public Interface IUserData\n    Sub DoSomeStuff(pINew As INew)\nEnd Interface\n</code></pre><p> In the following example, the <code>IUserData</code> interface uses the <code>NewOldMarshaler</code> custom marshaler to enable unmanaged client applications to pass an <code>IOld</code> interface to the <code>DoSomeStuff</code> method. The managed description of the <code>DoSomeStuff</code> method takes an <code>INew</code> interface, as shown in the previous example, whereas the unmanaged version of <code>DoSomeStuff</code> takes an <code>IOld</code> interface pointer, as shown in the following example.  </p>\n<pre><code>[uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  \nlibrary UserLib {  \n     [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]  \n     interface IUserData : IUnknown  \n         HRESULT DoSomeStuff(IUnknown* pIOld);  \n}  \n</code></pre><p> The type library that is generated by exporting the managed definition of <code>IUserData</code> yields the unmanaged definition shown in this example instead of the standard definition. The <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute\" data-linktype=\"relative-path\">MarshalAsAttribute</a> attribute applied to the <code>INew</code> argument in the managed definition of the <code>DoSomeStuff</code> method indicates that the argument uses a custom marshaler, as the following example shows.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.ICustomMarshaler#4\">using namespace System::Runtime::InteropServices;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.ICustomMarshaler#4\">using System.Runtime.InteropServices;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.ICustomMarshaler#4\">Imports System.Runtime.InteropServices\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.ICustomMarshaler#5\">public interface class IUserData\n{\n    void DoSomeStuff(\n        [MarshalAs(UnmanagedType::CustomMarshaler,\n             MarshalType=&quot;MyCompany.NewOldMarshaler&quot;)]\n        INew^ pINew\n    );\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.ICustomMarshaler#5\">interface IUserData\n{\n    void DoSomeStuff(\n        [MarshalAs(UnmanagedType.CustomMarshaler,\n             MarshalType=&quot;MyCompany.NewOldMarshaler&quot;)]\n        INew pINew\n    );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.ICustomMarshaler#5\">Public Interface IUserData\n    Sub DoSomeStuff( _\n        &lt;MarshalAs(UnmanagedType.CustomMarshaler, _\n        MarshalType := &quot;MyCompany.NewOldMarshaler&quot;)&gt; pINew As INew)\nEnd Interface\n</code></pre><p> In the previous examples, the first parameter provided to the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute\" data-linktype=\"relative-path\">MarshalAsAttribute</a> attribute is the <a class=\"xref\" href=\"system.runtime.interopservices.unmanagedtype\" data-linktype=\"relative-path\">System.Runtime.InteropServices.UnmanagedType</a> enumeration value <code>UnmanagedType.CustomMarshaler</code>.  </p>\n<p> The second parameter is the <a class=\"xref\" href=\"system.runtime.interopservices.marshalasattribute#System_Runtime_InteropServices_MarshalAsAttribute_MarshalType\" data-linktype=\"relative-path\">MarshalType</a> field, which provides the assembly-qualified name of the custom marshaler. This name consists of the namespace and class of the custom marshaler (<code>MarshalType=&quot;MyCompany.NewOldMarshaler&quot;</code>).</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_InteropServices_ICustomMarshaler_CleanUpManagedData_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CleanUpManagedData(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs necessary cleanup of the managed data when it is no longer needed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CleanUpManagedData (object ManagedObj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ManagedObj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The managed object to be destroyed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_InteropServices_ICustomMarshaler_CleanUpNativeData_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CleanUpNativeData(IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs necessary cleanup of the unmanaged data when it is no longer needed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CleanUpNativeData (IntPtr pNativeData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pNativeData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A pointer to the unmanaged data to be destroyed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_InteropServices_ICustomMarshaler_GetNativeDataSize\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetNativeDataSize()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the size of the native data to be marshaled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int GetNativeDataSize ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The size, in bytes, of the native data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_InteropServices_ICustomMarshaler_MarshalManagedToNative_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MarshalManagedToNative(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the managed data to unmanaged data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IntPtr MarshalManagedToNative (object ManagedObj);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ManagedObj</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The managed object to be converted.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A pointer to the COM view of the managed object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Runtime_InteropServices_ICustomMarshaler_MarshalNativeToManaged_System_IntPtr_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MarshalNativeToManaged(IntPtr)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the unmanaged data to managed data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object MarshalNativeToManaged (IntPtr pNativeData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pNativeData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A pointer to the unmanaged data to be wrapped.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents the managed view of the COM data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.InteropServices.ICustomMarshaler.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.InteropServices.ICustomMarshaler.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.ICustomMarshaler\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9fdded65-c958-969b-bd1b-079e26724cf8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides custom wrappers for handling method calls.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.InteropServices/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.InteropServices.ICustomMarshaler\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.InteropServices.ICustomMarshaler.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.InteropServices.ICustomMarshaler.yml","open_to_public_contributors":true,"api_name":["System.Runtime.InteropServices.ICustomMarshaler","System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData","System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData","System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize","System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative","System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.InteropServices.ICustomMarshaler","System::Runtime::InteropServices::ICustomMarshaler","System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData","System::Runtime::InteropServices::ICustomMarshaler::CleanUpManagedData","System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData","System::Runtime::InteropServices::ICustomMarshaler::CleanUpNativeData","System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize","System::Runtime::InteropServices::ICustomMarshaler::GetNativeDataSize","System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative","System::Runtime::InteropServices::ICustomMarshaler::MarshalManagedToNative","System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged","System::Runtime::InteropServices::ICustomMarshaler::MarshalNativeToManaged"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9fdded65-c958-969b-bd1b-079e26724cf8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.InteropServices/ICustomMarshaler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ICustomMarshaler interface | Microsoft Docs","_op_ogTitle":"ICustomMarshaler interface","description":"Provides custom wrappers for handling method calls.\n","toc_asset_id":"_splitted/System.Runtime.InteropServices/toc.json","toc_rel":"_splitted/System.Runtime.InteropServices/toc.json","source_url":"","ms.assetid":"System.Runtime.InteropServices.ICustomMarshaler","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.interopservices.icustommarshaler","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.interopservices.icustommarshaler","fileRelativePath":"System.Runtime.InteropServices.ICustomMarshaler.html"},"themesRelativePathToOutputRoot":"_themes/"}