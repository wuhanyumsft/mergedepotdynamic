{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">Interaction</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The <code>Interaction</code> module contains procedures used to interact with objects, applications, and systems.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[Microsoft.VisualBasic.CompilerServices.StandardModule]\npublic sealed class Interaction</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">Interaction</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_AppActivate_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppActivate(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Activates an application that is already running.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void AppActivate (int ProcessId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ProcessId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>Integer</code> specifying the Win32 process ID number assigned to this process. You can use the ID returned by the <span class=\"xref\">crosoft.VisualBasic.Interaction.Shell*</span>, provided it is not zero.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You use <code>AppActivate</code> to bring an application&#39;s active window into focus. You might not have a handle or a reference to the active window, or even know which window is active at a given moment. In such a case, you cannot use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method.  </p>\n<p> The <code>AppActivate</code> function changes the focus to the named application or window but does not affect whether it is maximized or minimized. Focus moves away from the activated application window when the user takes some action to change the focus or close the window. You can use the <code>Shell</code> function to start an application and set the window style.  </p>\n<p> If you use the <code>Title</code> parameter, <code>AppActivate</code> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar. It first looks through the top-level windows and then through the child windows. If it cannot find a match, it throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> You can use <code>AppActivate</code> only with processes that own windows. Most console applications do not own windows, which means that they do not appear in the list of processes that <code>AppActivate</code> searches. When running from a console application, the system creates a separate process to run the application and returns the output to the console process. Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application&#39;s process ID.  </p>\n<p> At run time, the <code>AppActivate</code> function activates any running application with a title that matches <code>Title</code> or with a process ID that matches <code>ProcessId</code>. If there is no exact match, it activates any application whose title string ends with <code>Title</code>. If there is more than one application named <code>Title</code>, the <code>AppActivate</code> function arbitrarily chooses one to activate.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>AppActivate</code> function requires <code>UIPermission</code> at the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> level, which may affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> .</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_AppActivate_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AppActivate(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Activates an application that is already running.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void AppActivate (string Title);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Title</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>String</code> expression specifying the title in the title bar of the application you want to activate. You can use the title assigned to the application when it was launched.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You use <code>AppActivate</code> to bring an application&#39;s active window into focus. You might not have a handle or a reference to the active window, or even know which window is active at a given moment. In such a case, you cannot use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> method.  </p>\n<p> The <code>AppActivate</code> function changes the focus to the named application or window but does not affect whether it is maximized or minimized. Focus moves away from the activated application window when the user takes some action to change the focus or close the window. You can use the <code>Shell</code> function to start an application and set the window style.  </p>\n<p> If you use the <code>Title</code> parameter, <code>AppActivate</code> uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar. It first looks through the top-level windows and then through the child windows. If it cannot find a match, it throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n<p> You can use <code>AppActivate</code> only with processes that own windows. Most console applications do not own windows, which means that they do not appear in the list of processes that <code>AppActivate</code> searches. When running from a console application, the system creates a separate process to run the application and returns the output to the console process. Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application&#39;s process ID.  </p>\n<p> At run time, the <code>AppActivate</code> function activates any running application with a title that matches <code>Title</code> or with a process ID that matches <code>ProcessId</code>. If there is no exact match, it activates any application whose title string ends with <code>Title</code>. If there is more than one application named <code>Title</code>, the <code>AppActivate</code> function arbitrarily chooses one to activate.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>AppActivate</code> function requires <code>UIPermission</code> at the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> level, which may affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> .</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Beep\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Beep()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sounds a tone through the computer&#39;s speaker.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void Beep ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>Beep</code> function requires <code>UIPermission</code> at the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> level, which may affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_CallByName_System_Object_System_String_Microsoft_VisualBasic_CallType_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CallByName(Object,String,CallType,Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Executes a method on an object, or sets or returns a property on an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static object CallByName (object ObjectRef, string ProcName, Microsoft.VisualBasic.CallType UseCallType, object[] Args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ObjectRef</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Object</code>. A pointer to the object exposing the property or method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ProcName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code>. A string expression containing the name of the property or method on the object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>UseCallType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.calltype\" data-linktype=\"relative-path\">CallType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. An enumeration member of type <a class=\"xref\" href=\"microsoft.visualbasic.calltype\" data-linktype=\"relative-path\">CallType</a> representing the type of procedure being called. The value of <code>CallType</code> can be <code>Method</code>, <code>Get</code>, or <code>Set</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>ParamArray</code>. A parameter array containing the arguments to be passed to the property or method being called.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Executes a method on an object, or sets or returns a property on an object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Invalid <code>UseCallType</code> value; must be <code>Method</code>, <code>Get</code>, or <code>Set</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>CallByName</code> function is used at runtime to get a property, set a property, or invoke a method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Choose_System_Double_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Choose(Double,Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Selects and returns a value from a list of arguments.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static object Choose (double Index, object[] Choice);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Double</code>. Numeric expression that results in a value between 1 and the number of elements passed in the <code>Choice</code> argument.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Choice</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Object</code> parameter array. You can supply either a single variable or an expression that evaluates to the <code>Object</code> data type, to a list of <code>Object</code> variables or expressions separated by commas, or to a single-dimensional array of <code>Object</code> elements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Selects and returns a value from a list of arguments.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Choose</code> function returns a member of the list passed in <code>Choice()</code>, based on the value of <code>Index</code>. The first member of the list is selected when <code>Index</code> is 1. The last member of the list is selected when <code>Index</code> is <code>UBound</code>(<code>Choice()</code>). If <code>Index</code> is outside these limits, <code>Choose</code> returns <code>Nothing</code>.  </p>\n<p> If <code>Index</code> is not a whole number, it is rounded to the nearest whole number before being evaluated.  </p>\n<p> You can use <code>Choose</code> to look up a value in a list of possibilities.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The expressions in the argument list can include function calls. As part of preparing the argument list for the call to <code>Choose</code>, the Visual Basic compiler calls every function in every expression. This means that you cannot rely on a particular function not being called if a different expression is selected by <code>Index</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Command\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Command()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic. The <code>My</code> feature provides greater productivity and performance than the <code>Command</code>function. For more information, see <span class=\"xref\">crosoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string Command ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.  </p>\n<p> The <code>My</code> feature provides greater productivity and performance than the <code>Command</code>function. For more information, see <span class=\"xref\">crosoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.  </p>\n<p> For applications developed with Visual Basic and compiled to an .exe file, the <code>Command</code> function returns any arguments that appear after the name of the application on the command line, in this form: <code>MyApp(cmdlineargs)</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_CreateObject_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateObject(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates and returns a reference to a COM object. <code>CreateObject</code> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static object CreateObject (string ProgId, string ServerName = &quot;&quot;);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ProgId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code>. The program ID of the object to create.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ServerName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>String</code>. The name of the network server where the object will be created. If <code>ServerName</code> is an empty string (&quot;&quot;), the local computer is used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Creates and returns a reference to a COM object. <code>CreateObject</code> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Server is unavailable</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No object of the specified type exists</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To create an instance of a COM component, assign the object returned by <code>CreateObject</code> to an object variable:  </p>\n<pre><code class=\"lang-vb#\">Sub CreateADODB()  \n   Dim adoApp As Object  \n   adoApp = CreateObject(&quot;ADODB.Connection&quot;)  \nEnd Sub  \n</code></pre><p> The type of object variable you use to store the returned object can affect your application&#39;s performance. Declaring an object variable with the <code>As Object</code> clause creates a variable that can contain a reference to any type of object. However, access to the object through that variable is <em>late-bound</em>, that is, the binding occurs when your program runs. There are many reasons you should avoid late binding, including slower application performance.  </p>\n<p> You can create an object variable that results in early binding—that is, binding when the program is compiled. To do so, add a reference to the type library for your object from the <strong>COM</strong> tab of the <strong>Add Reference</strong> dialog box on the <strong>Project</strong> menu. Then declare the object variable of the specific type of your object. In most cases, it is more efficient to use the <code>Dim</code> statement and a primary interop assembly to create objects than it is to use the <code>CreateObject</code> function.  </p>\n<h2 id=\"interacting-with-unmanaged-code\">Interacting with Unmanaged Code</h2>\n<p> Another issue is that COM objects use unmanaged code — code without the benefit of the common language runtime. There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM. When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it. If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library. For more information, see <a href=\"../Topic/COM%20Interoperability%20in%20.NET%20Framework%20Applications%20(Visual%20Basic).md\" data-linktype=\"relative-path\">COM Interoperability in .NET Framework Applications</a>.  </p>\n<p> You should generally use strongly bound objects and primary interop assemblies whenever possible. The examples below use the <code>CreateObject</code> function with Microsoft Office objects for demonstration purposes only. However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.  </p>\n<h2 id=\"creating-an-object-on-a-remote-computer\">Creating an Object on a Remote Computer</h2>\n<p> You can create an object on a remote networked computer by passing the name of the computer to the <code>ServerName</code> argument of the <code>CreateObject</code> function. That name is the same as the Machine Name portion of a share name: for a share named &quot;\\\\MyServer\\Public,&quot; <code>ServerName</code> is &quot;MyServer.&quot;  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer. You may need to add a registry key for your application.  </p>\n</div>\n<p> The following code returns the version number of an instance of Excel running on a remote computer named <code>MyServer</code>:  </p>\n<pre><code class=\"lang-vb#\">Sub CreateRemoteExcelObj()  \n    Dim xlApp As Object  \n    &#39; Replace string &quot;\\\\MyServer&quot; with name of the remote computer.  \n    xlApp = CreateObject(&quot;Excel.Application&quot;, &quot;\\\\MyServer&quot;)  \n    MsgBox(xlApp.Version)  \nEnd Sub  \n</code></pre><p> If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Use <code>CreateObject</code> when there is no current instance of the object. If an instance of the object is already running, a new instance is started, and an object of the specified type is created. To use the current instance, or to start the application and have it load a file, use the <code>GetObject</code> function. If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times <code>CreateObject</code> is executed.  </p>\n</div>\n<h2 id=\"creating-framework-objects\">Creating Framework Objects</h2>\n<p> You can use the <code>CreateObject</code> function only to create a COM object. While there is no exact equivalent mechanism for creating a .NET Framework object, the <a class=\"xref\" href=\"system.activator\" data-linktype=\"relative-path\">Activator</a> in the <a class=\"xref\" href=\"system\" data-linktype=\"relative-path\">System</a> namespace contains methods to create local or remote objects. In particular, the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method or the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstanceFrom_\" data-linktype=\"relative-path\">CreateInstanceFrom</a> method might be useful.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <code>CreateObject</code> function requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_DeleteSetting_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeleteSetting(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Deletes a section or key setting from an application&#39;s entry in the Windows registry. The <code>My</code> feature gives you greater productivity and performance in registry operations than the <code>DeleteSetting</code>function. For more information, see <span class=\"xref\">crosoft.VisualBasic.Devices.ServerComputer.Registry*</span> .</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DeleteSetting (string AppName, string Section = null, string Key = null);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>AppName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the application or project to which the section or key setting applies.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Section</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the section from which the key setting is being deleted. If only <code>AppName</code> and <code>Section</code> are provided, the specified section is deleted along with all related key settings.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>String</code> expression containing the name of the key setting being deleted.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>User is not logged in.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If all arguments are provided, the specified setting is deleted. A run-time error occurs if you attempt to use <code>DeleteSetting</code> on a nonexistent section or key setting.  </p>\n<p> <code>DeleteSetting</code> requires that a user be logged on since it operates under the <code>HKEY_LOCAL_USER</code> registry key, which is not active until a user logs on interactively.  </p>\n<p> Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <code>HKEY_LOCAL_MACHINE\\Software\\</code> or the <code>HKEY_USER\\DEFAULT\\Software</code> registry keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Environ_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Environ(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the string associated with an operating-system environment variable.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string Environ (int Expression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the string associated with an operating-system environment variable.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>Expression</code> is missing.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If <code>Expression</code> contains a string, the <a class=\"xref\" href=\"microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_Environ_\" data-linktype=\"relative-path\">Environ</a> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable. If the string in <code>Expression</code> cannot be found in the environment-string table, a zero-length string (&quot;&quot;) is returned.  </p>\n<p> If <code>Expression</code> contains an integer, the string occupying that numeric position in the environment-string table is returned. In this case, <a class=\"xref\" href=\"microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_Environ_\" data-linktype=\"relative-path\">Environ</a> returns all of the text, including the name of the environment variable. If there is no environment string in the specified position, <a class=\"xref\" href=\"microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_Environ_\" data-linktype=\"relative-path\">Environ</a> returns a zero-length string.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_Environ_\" data-linktype=\"relative-path\">Environ</a> function requires environment permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Environ_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Environ(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the string associated with an operating-system environment variable.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string Environ (string Expression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the string associated with an operating-system environment variable.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>Expression</code> is missing.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If <code>Expression</code> contains a string, the Environ function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable. If the string in <code>Expression</code> cannot be found in the environment-string table, a zero-length string (&quot;&quot;) is returned.  </p>\n<p> If <code>Expression</code> contains an integer, the string occupying that numeric position in the environment-string table is returned. In this case, Environ returns all of the text, including the name of the environment variable. If there is no environment string in the specified position, Environ returns a zero-length string.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The Environ function requires environment permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_GetAllSettings_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAllSettings(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a list of key settings and their respective values (originally created with <code>SaveSetting</code>) from an application&#39;s entry in the Windows registry. Using the <code>My</code> feature gives you greater productivity and performance in registry operations than <code>GetAllSettings</code>. For more information, see <span class=\"xref\">crosoft.VisualBasic.Devices.ServerComputer.Registry*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string[,] GetAllSettings (string AppName, string Section);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>AppName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the application or project whose key settings are requested.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Section</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the section whose key settings are requested. <code>GetAllSettings</code> returns an object that contains a two-dimensional array of strings. The strings contain all the key settings in the specified section, plus their corresponding values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a list of key settings and their respective values (originally created with <code>SaveSetting</code>) from an application&#39;s entry in the Windows registry.  </p>\n<p> Using the <code>My</code> feature gives you greater productivity and performance in registry operations than <code>GetAllSettings</code>. For more information, see <span class=\"xref\">crosoft.VisualBasic.Devices.ServerComputer.Registry*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>User is not logged in.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><code>GetAllSettings</code> returns an uninitialized <code>Object</code> if either <code>AppName</code> or <code>Section</code> does not exist.  </p>\n<p> Because it operates under the <code>HKEY_LOCAL_USER</code> registry key, which is not active until a user logs on interactively, <code>GetAllSettings</code> requires that a user be logged on.  </p>\n<p> Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <code>HKEY_LOCAL_MACHINE\\Software\\</code> or the <code>HKEY_USER\\DEFAULT\\Software</code> registry keys.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_GetObject_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetObject(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a reference to an object provided by a COM component.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static object GetObject (string PathName = null, string Class = null);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>PathName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>String</code>. The full path and name of the file containing the object to retrieve. If <code>PathName</code> is omitted, <code>Class</code> is required.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Class</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required if <code>PathName</code> is not supplied. <code>String</code>. A string representing the class of the object. The <code>Class</code> argument has the following syntax and parts:  </p>\n<p> <code>appname</code><code>.</code><code>objecttype</code>  </p>\n<p> [1|1] Parameter  </p>\n<p> [1|2] Description  </p>\n<p> [2|1] <code>appname</code>  </p>\n<p> [2|2] Required. <code>String</code>. The name of the application providing the object.  </p>\n<p> [3|1] <code>objecttype</code>  </p>\n<p> [3|2] Required. <code>String</code>. The type or class of object to create.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a reference to an object provided by a COM component.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No object of the specified class type exists.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>No object with the specified path and file name exists.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <code>GetObject</code> function to load an instance of a COM component from a file. The following example illustrates this.  </p>\n<pre><code class=\"lang-vb#\">Dim CADObject As Object  \nCADObject = GetObject(&quot;C:\\CAD\\schema.cad&quot;)  \n</code></pre><p> When this code runs, the application associated with the specified <code>PathName</code> is started and the object in the specified file is activated.  </p>\n<h2 id=\"default-cases\">Default Cases</h2>\n<p> If <code>PathName</code> is a zero-length string (<code>&quot;&quot;</code>), <code>GetObject</code> returns a new object instance of the specified class type. If the <code>PathName</code> argument is omitted, <code>GetObject</code> returns a currently active object of the class type specified in <code>Class</code>. If no object of the specified type exists, an error occurs.  </p>\n<h2 id=\"accessing-a-subobject\">Accessing a Subobject</h2>\n<p> Some applications allow you to activate a subobject associated with a file. To do this, add an exclamation point (<code>!</code>) to the end of the file name and follow it with a string that identifies the part of the file you want to activate. For information on how to create this string, see the documentation for the application that created the object.  </p>\n<p> For example, in a drawing application you might have multiple layers to a drawing stored in a file. You could use the following code to activate a layer within a drawing called <code>schema.cad</code>.  </p>\n<pre><code class=\"lang-vb#\">layerObject = GetObject(&quot;C:\\CAD\\schema.cad!Layer3&quot;)  \n</code></pre><h2 id=\"specifying-a-class\">Specifying a Class</h2>\n<p> If you do not specify the object&#39;s <code>Class</code>, Automation determines the application to start and the object to activate, based on the file name you provide. Some files, however, can support more than one class of object. For example, a drawing might support three different types of objects: an <code>Application</code> object, a <code>Drawing</code> object, and a <code>Toolbar</code> object, all of which are part of the same file. To specify which object in a file you want to activate, use the optional <code>Class</code> argument. The following example illustrates this.  </p>\n<pre><code class=\"lang-vb#\">Dim drawObj As Object  \ndrawObj = GetObject(&quot;C:\\Drawings\\sample.drw&quot;, &quot;Figment.Drawing&quot;)  \n</code></pre><p> In the preceding example, <code>Figment</code> is the name of a drawing application and <code>Drawing</code> is one of the object types it supports.  </p>\n<h2 id=\"using-the-object\">Using the Object</h2>\n<p> Once an object is activated, you refer to it in code using the object variable you declared. In the preceding example, you access properties and methods of the new object using the object variable <code>drawObj</code>. The following example illustrates this.  </p>\n<pre><code class=\"lang-vb#\">drawObj.Line(9, 90)  \ndrawObj.InsertText(9, 100, &quot;Hello, world.&quot;)  \ndrawObj.SaveAs(&quot;C:\\Drawings\\sample.drw&quot;)  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> Use the <code>GetObject</code> function when there is a current instance of the object or if you want to create the object with a file loaded. If there is no current instance, and you do not want the object started with a file loaded, use the <a class=\"xref\" href=\"microsoft.visualbasic.interaction#Microsoft_VisualBasic_Interaction_CreateObject_\" data-linktype=\"relative-path\">CreateObject</a> function.  </p>\n<p> If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times <code>CreateObject</code> is called. With a single-instance object, <code>GetObject</code> always returns the same instance when called with the zero-length string (<code>&quot;&quot;</code>) syntax, and it causes an error if the <code>PathName</code> argument is omitted. You cannot use <code>GetObject</code> to obtain a reference to a class created with Visual Basic.  </p>\n</div>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <code>GetObject</code> function requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_GetSetting_System_String_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSetting(String,String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a key setting value from an application&#39;s entry in the Windows registry. The <code>My</code> feature gives you greater productivity and performance in registry operations than <code>GetAllSettings</code>. For more information, see <span class=\"xref\">crosoft.VisualBasic.Devices.ServerComputer.Registry*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string GetSetting (string AppName, string Section, string Key, string Default = &quot;&quot;);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>AppName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the application or project whose key setting is requested.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Section</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the section in which the key setting is found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the key setting to return.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Default</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. Expression containing the value to return if no value is set in the <code>Key</code> setting. If omitted, <code>Default</code> is assumed to be a zero-length string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a key setting value from an application&#39;s entry in the Windows registry.  </p>\n<p> The <code>My</code> feature gives you greater productivity and performance in registry operations than <code>GetAllSettings</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>One or more arguments are not <code>String</code> expressions, or user is not logged in.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If any of the items named in the <code>GetSetting</code> arguments do not exist, <code>GetSetting</code> returns a value of <code>Default</code>.  </p>\n<p> Because it operates under the <code>HKEY_LOCAL_USER</code> registry key, which is not active until a user logs on interactively, <code>GetSetting</code> requires that a user be logged on.  </p>\n<p> Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <code>HKEY_LOCAL_MACHINE\\Software\\</code> or the <code>HKEY_USER\\DEFAULT\\Software</code> registry keys.  </p>\n<p> <code>GetSetting</code> requires <code>Read</code><a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> .</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_IIf_System_Boolean_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IIf(Boolean,Object,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns one of two objects, depending on the evaluation of an expression.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static object IIf (bool Expression, object TruePart, object FalsePart);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Boolean</code>. The expression you want to evaluate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>TruePart</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Object</code>. Returned if <code>Expression</code> evaluates to <code>True</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>FalsePart</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Object</code>. Returned if <code>Expression</code> evaluates to <code>False</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns one of two objects, depending on the evaluation of an expression.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>IIf</code> function provides a counterpart for the ternary <a href=\"../Topic/Conditional%20Operator:%20?%20:.md\" data-linktype=\"relative-path\">Conditional Operator: ? :</a> in Visual C++.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_InputBox_System_String_System_String_System_String_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputBox(String,String,String,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string InputBox (string Prompt, string Title = &quot;&quot;, string DefaultResponse = &quot;&quot;, int XPos = -1, int YPos = -1);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Prompt</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required <code>String</code> expression displayed as the message in the dialog box. The maximum length of <code>Prompt</code> is approximately 1024 characters, depending on the width of the characters used. If <code>Prompt</code> consists of more than one line, you can separate the lines using a carriage return character (<code>Chr(</code>13<code>)</code>), a line feed character (<code>Chr(</code>10<code>)</code>), or a carriage return/line feed combination (<code>Chr(</code>13<code>)</code> &amp; <code>Chr(</code>10<code>)</code>) between each line.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Title</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>String</code> expression displayed in the title bar of the dialog box. If you omit <code>Title</code>, the application name is placed in the title bar.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>DefaultResponse</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>String</code> expression displayed in the text box as the default response if no other input is provided. If you omit <code>DefaultResponse</code>, the displayed text box is empty.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>XPos</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen. If you omit <code>XPos</code>, the dialog box is centered horizontally.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>YPos</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen. If you omit <code>YPos</code>, the dialog box is positioned vertically approximately one-third of the way down the screen.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the user clicks <strong>Cancel</strong>, a zero-length string is returned.  </p>\n<p> To specify more than the first argument, you must use the <code>InputBox</code> function in an expression. If you omit any positional arguments, you must retain the corresponding comma delimiter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>InputBox</code> function requires <code>UIPermission</code> at the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> level, which may affect its execution in partial-trust situations. For more information, see  and <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> .</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_MsgBox_System_Object_Microsoft_VisualBasic_MsgBoxStyle_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MsgBox(Object,MsgBoxStyle,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static Microsoft.VisualBasic.MsgBoxResult MsgBox (object Prompt, Microsoft.VisualBasic.MsgBoxStyle Buttons = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, object Title = null);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Prompt</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression displayed as the message in the dialog box. The maximum length of <code>Prompt</code> is approximately 1024 characters, depending on the width of the characters used. If <code>Prompt</code> consists of more than one line, you can separate the lines using a carriage return character (<code>Chr(</code>13<code>)</code>), a line feed character (<code>Chr(</code>10<code>)</code>), or a carriage return/linefeed character combination (<code>Chr(</code>13<code>)</code> &amp; <code>Chr(</code>10<code>)</code>) between each line.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Buttons</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.msgboxstyle\" data-linktype=\"relative-path\">MsgBoxStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box. If you omit <code>Buttons</code>, the default value is zero.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Title</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>String</code> expression displayed in the title bar of the dialog box. If you omit <code>Title</code>, the application name is placed in the title bar.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.msgboxresult\" data-linktype=\"relative-path\">MsgBoxResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<table><tbody><tr><td> Constant<br>\n </td><td> Value<br>\n </td></tr><tr><td>\n          <code>OK</code>\n        </td><td> 1<br>\n </td></tr><tr><td>\n          <code>Cancel</code>\n        </td><td> 2<br>\n </td></tr><tr><td>\n          <code>Abort</code>\n        </td><td> 3<br>\n </td></tr><tr><td>\n          <code>Retry</code>\n        </td><td> 4<br>\n </td></tr><tr><td>\n          <code>Ignore</code>\n        </td><td> 5<br>\n </td></tr><tr><td>\n          <code>Yes</code>\n        </td><td> 6<br>\n </td></tr><tr><td>\n          <code>No</code>\n        </td><td> 7<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>Prompt</code> is not a <code>String</code> expression, or <code>Title</code> is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Process is not running in User Interactive mode.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>One or more parameters not a member of <code>MsgBoxResult</code> or <code>MsgBoxStyle</code> enumeration.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you omit any positional arguments, you must retain the corresponding comma delimiter.  </p>\n<p> If the dialog box displays a <strong>Cancel</strong> button, pressing the ESC key has the same effect as clicking <strong>Cancel</strong>  </p>\n<p> If the dialog box contains a <strong>Help</strong> button, context-sensitive Help is provided for the dialog box. However, no value is returned until one of the other buttons is chosen. In Windows Form applications, choosing the <strong>Help</strong> button executes the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a> event for the form.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>MsgBox</code> function requires <code>UIPermission</code> at the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> level, which may affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a>.  </p>\n</div>\n<p> The <code>MsgBoxStyle</code> enumeration values are listed in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Member</td>\n<td>Value</td>\n<td>Description</td>\n</tr>\n<tr>\n<td><code>OKOnly</code></td>\n<td>0</td>\n<td>Displays OK button only.</td>\n</tr>\n<tr>\n<td><code>OKCancel</code></td>\n<td>1</td>\n<td>Displays OK and Cancel buttons.</td>\n</tr>\n<tr>\n<td><code>AbortRetryIgnore</code></td>\n<td>2</td>\n<td>Displays Abort, Retry, and Ignore buttons.</td>\n</tr>\n<tr>\n<td><code>YesNoCancel</code></td>\n<td>3</td>\n<td>Displays Yes, No, and Cancel buttons.</td>\n</tr>\n<tr>\n<td><code>YesNo</code></td>\n<td>4</td>\n<td>Displays Yes and No buttons.</td>\n</tr>\n<tr>\n<td><code>RetryCancel</code></td>\n<td>5</td>\n<td>Displays Retry and Cancel buttons.</td>\n</tr>\n<tr>\n<td><code>Critical</code></td>\n<td>16</td>\n<td>Displays Critical Message icon.</td>\n</tr>\n<tr>\n<td><code>Question</code></td>\n<td>32</td>\n<td>Displays Warning Query icon.</td>\n</tr>\n<tr>\n<td><code>Exclamation</code></td>\n<td>48</td>\n<td>Displays Warning Message icon.</td>\n</tr>\n<tr>\n<td><code>Information</code></td>\n<td>64</td>\n<td>Displays Information Message icon.</td>\n</tr>\n<tr>\n<td><code>DefaultButton1</code></td>\n<td>0</td>\n<td>First button is default.</td>\n</tr>\n<tr>\n<td><code>DefaultButton2</code></td>\n<td>256</td>\n<td>Second button is default.</td>\n</tr>\n<tr>\n<td><code>DefaultButton3</code></td>\n<td>512</td>\n<td>Third button is default.</td>\n</tr>\n<tr>\n<td><code>ApplicationModal</code></td>\n<td>0</td>\n<td>Application is modal. The user must respond to the message box before continuing work in the current application.</td>\n</tr>\n<tr>\n<td><code>SystemModal</code></td>\n<td>4096</td>\n<td>System is modal. All applications are suspended until the user responds to the message box.</td>\n</tr>\n<tr>\n<td><code>MsgBoxSetForeground</code></td>\n<td>65536</td>\n<td>Specifies the message box window as the foreground window.</td>\n</tr>\n<tr>\n<td><code>MsgBoxRight</code></td>\n<td>524288</td>\n<td>Text is right-aligned.</td>\n</tr>\n<tr>\n<td><code>MsgBoxRtlReading</code></td>\n<td>1048576</td>\n<td>Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.</td>\n</tr>\n</tbody>\n</table>\n<p> The first group of values (0–5) describes the number and type of buttons displayed in the dialog box. The second group (16, 32, 48, 64) describes the icon style. The third group (0, 256, 512) determines which button is the default. The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text. When adding numbers to create a final value for the <code>Buttons</code> argument, use only one number from each group.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Partition_System_Int64_System_Int64_System_Int64_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Partition(Int64,Int64,Int64,Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a string representing the calculated range that contains a number.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string Partition (long Number, long Start, long Stop, long Interval);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Number</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Long</code>. Whole number that you want to locate within one of the calculated ranges.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Start</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Long</code>. Whole number that indicates the start of the set of calculated ranges. <code>Start</code> cannot be less than 0.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Stop</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Long</code>. Whole number that indicates the end of the set of calculated ranges. <code>Stop</code> cannot be less than or equal to <code>Start</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Interval</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Long</code>. Whole number that indicates the size of each range calculated between <code>Start</code> and <code>Stop</code>. <code>Interval</code> cannot be less than 1.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a string representing the calculated range that contains a number.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>Start</code> &lt; 0, <code>Stop</code> &lt;= <code>Start</code>, or <code>Interval</code> &lt; 1.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Partition</code> function calculates a set of numeric ranges, each containing the number of values specified by <code>Interval</code>. The first range begins at <code>Start</code>, and the last range ends at <code>Stop</code>. The <code>Partition</code> function then identifies which range contains <code>Number</code> and returns a string describing that range. The range is represented in the string as &quot;<em>lowervalue</em>:<em>uppervalue</em>&quot;, where the low end of the range (<em>lowervalue</em>) is separated from the high end (<em>uppervalue</em>) by a colon (:).  </p>\n<p> If necessary, the <code>Partition</code> function inserts leading spaces before <em>lowervalue</em> and <em>uppervalue</em> so that they both have the same number of characters as the string representation of the value (<code>Stop</code> + 1). This ensures that if you use the output of the <code>Partition</code> function with several values of <code>Number</code>, the resulting text will be handled properly during any subsequent sort operation.  </p>\n<p> The following table shows some sample strings for ranges calculated using three sets of <code>Start</code>, <code>Stop</code>, and <code>Interval</code>. The &quot;First range&quot; and &quot;Last range&quot; columns show the lowest and highest ranges possible given the values of <code>Start</code> and <code>Stop</code>. The &quot;Before first range&quot; and &quot;After last range&quot; columns show the strings returned for values of <code>Number</code> less than <code>Start</code> and greater than <code>Stop</code>, respectively.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Start</code></td>\n<td><code>Stop</code></td>\n<td><code>Interval</code></td>\n<td>Before first range</td>\n<td>First range</td>\n<td>Last range</td>\n<td>After last range</td>\n</tr>\n<tr>\n<td>0</td>\n<td>99</td>\n<td>5</td>\n<td>&quot;   : -1&quot;</td>\n<td>&quot;  0:  4&quot;</td>\n<td>&quot; 95: 99&quot;</td>\n<td>&quot;100:   &quot;</td>\n</tr>\n<tr>\n<td>20</td>\n<td>199</td>\n<td>10</td>\n<td>&quot;   : 19&quot;</td>\n<td>&quot; 20: 29&quot;</td>\n<td>&quot;190:199&quot;</td>\n<td>&quot;200:   &quot;</td>\n</tr>\n<tr>\n<td>100</td>\n<td>1010</td>\n<td>20</td>\n<td>&quot;    : 99&quot;</td>\n<td>&quot; 100: 119&quot;</td>\n<td>&quot;1000:1010&quot;</td>\n<td>&quot;1011:    &quot;</td>\n</tr>\n</tbody>\n</table>\n<p> In the preceding table, the third line shows the result when <code>Start</code> and <code>Stop</code> define a set of numbers that cannot be evenly divided by <code>Interval</code>. The last range ends at <code>Stop</code>, making it only 11 numbers long, even though <code>Interval</code> is 20.  </p>\n<p> If <code>Interval</code> is 1, the range is &quot;<code>Number</code>:<code>Number</code>&quot;, regardless of the <code>Start</code> and <code>Stop</code> arguments. For example, if <code>Number</code> is 267, <code>Stop</code> is 1000, and <code>Interval</code> is 1, <code>Partition</code> returns &quot; 267: 267&quot;.  </p>\n<p> <code>Partition</code> can be useful when constructing database queries. You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_SaveSetting_System_String_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SaveSetting(String,String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Saves or creates an application entry in the Windows registry. The <code>My</code> feature gives you greater productivity and performance in registry operations than <code>SaveSetting</code>. For more information, see <span class=\"xref\">crosoft.VisualBasic.Devices.ServerComputer.Registry*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void SaveSetting (string AppName, string Section, string Key, string Setting);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>AppName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the application or project to which the setting applies.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Section</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the section in which the key setting is being saved.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code> expression containing the name of the key setting being saved.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Setting</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. Expression containing the value to which <code>Key</code> is being set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Key registry could not be created, or user is not logged in.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>SaveSetting</code> function adds the key to <code>HKEY_CURRENT_USER\\Software\\VB and VBA Program Settings</code>.  </p>\n<p> If the key setting cannot be saved for any reason, an error occurs.  </p>\n<p> <code>SaveSetting</code> requires that a user be logged on since it operates under the <code>HKEY_LOCAL_USER</code> registry key, which is not active until a user logs on interactively.  </p>\n<p> Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the <code>HKEY_LOCAL_MACHINE\\Software\\</code> or the <code>HKEY_USER\\DEFAULT\\Software</code> registry keys.  </p>\n<p> <code>SaveSetting</code> requires <code>Write</code> and <code>Create</code><a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> .</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Shell_System_String_Microsoft_VisualBasic_AppWinStyle_System_Boolean_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Shell(String,AppWinStyle,Boolean,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Runs an executable program and returns an integer containing the program&#39;s process ID if it is still running.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int Shell (string PathName, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>PathName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>String</code>. Name of the program to execute, together with any required arguments and command-line switches. <code>PathName</code> can also include the drive and the directory path or folder.  </p>\n<p> If you do not know the path to the program, you can use the <span class=\"xref\">crosoft.VisualBasic.FileIO.FileSystem.GetFiles*</span> to locate it. For example, you can call <code>My.Computer.FileSystem.GetFiles(&quot;C:\\&quot;, True, &quot;testFile.txt&quot;)</code>, which returns the full path of every file named <code>testFile.txt</code> anywhere on drive C:\\.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Style</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.appwinstyle\" data-linktype=\"relative-path\">AppWinStyle</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>AppWinStyle</code>. A value chosen from the <a class=\"xref\" href=\"microsoft.visualbasic.appwinstyle\" data-linktype=\"relative-path\">AppWinStyle</a> specifying the style of the window in which the program is to run. If <code>Style</code> is omitted, <code>Shell</code> uses <code>AppWinStyle.MinimizedFocus</code>, which starts the program minimized and with focus.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Wait</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>Boolean</code>. A value indicating whether the <code>Shell</code> function should wait for completion of the program. If <code>Wait</code> is omitted, <code>Shell</code> uses <code>False</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>Timeout</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Optional. <code>Integer</code>. The number of milliseconds to wait for completion if <code>Wait</code> is <code>True</code>. If <code>Timeout</code> is omitted, <code>Shell</code> uses -1, which means there is no timeout and <code>Shell</code> does not return until the program finishes. Therefore, if you omit <code>Timeout</code> or set it to -1, it is possible that <code>Shell</code> might never return control to your program.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Runs an executable program and returns an integer containing the program&#39;s process ID if it is still running.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>Style</code> is not within range 0 through 9, inclusive.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>Shell</code> cannot find the <code>PathName</code> file.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullreferenceexception\" data-linktype=\"relative-path\">NullReferenceException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>PathName</code> is <code>Nothing</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The return value of the <code>Shell</code> function depends on whether the program named in <code>PathName</code> is still executing when <code>Shell</code> returns. If you set <code>Wait</code> to <code>True</code> and the program finishes before the timeout expires, <code>Shell</code> returns zero. If the timeout expires, or if you omit <code>Wait</code> or set it to <code>False</code>, <code>Shell</code> returns the process ID of the program. The process ID is a unique number that identifies the running program.  </p>\n<h2 id=\"failure-to-start\">Failure to Start</h2>\n<p> If the <code>Shell</code> function cannot start the named program, a <a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a> error occurs. This can happen, for example, when you attempt to run a 16-bit program, such as <code>command.com</code>, from an application using <a class=\"xref\" href=\"system.windows.forms\" data-linktype=\"relative-path\">System.Windows.Forms</a>. For a workaround, you can run a 32-bit program that calls the desired 16-bit program. In the case of <code>command.com</code>, you can run <code>cmd.exe</code> as an alternative.  </p>\n<h2 id=\"waiting-for-completion\">Waiting for Completion</h2>\n<p> By default, the <code>Shell</code> function runs the program asynchronously. This means that a program started with the <code>Shell</code> function might not finish executing before the statements following the <code>Shell</code> function are executed. If you want to wait for the program to finish before you continue, set <code>Wait</code> to <code>True</code>.  </p>\n<h2 id=\"determining-the-exit-code\">Determining the Exit Code</h2>\n<p> A process can return an <em>exit code</em> when it terminates. However, you cannot use <code>Shell</code> to retrieve this exit code, because <code>Shell</code> returns zero if it waits for termination, and also because the process runs in a different object from <code>Shell</code>.  </p>\n<p> To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination. The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.  </p>\n<pre><code class=\"lang-vb#\">Dim procID As Integer  \nDim newProc As Diagnostics.Process  \nnewProc = Diagnostics.Process.Start(&quot;C:\\WINDOWS\\NOTEPAD.EXE&quot;)  \nprocID = newProc.Id  \nnewProc.WaitForExit()  \nDim procEC As Integer = -1  \nIf newProc.HasExited Then  \n    procEC = newProc.ExitCode  \nEnd If  \nMsgBox(&quot;Process with ID &quot; &amp; CStr(ProcID) &amp; _  \n    &quot; terminated with exit code &quot; &amp; CStr(procEC))  \n</code></pre><h2 id=\"protecting-the-file-specification\">Protecting the File Specification</h2>\n<p> You should always enclose the entire path and file specification in quotation marks, as the following example shows.  </p>\n<pre><code class=\"lang-vb#\">ID = Shell(&quot;&quot;&quot;C:\\Program Files\\display.exe&quot;&quot; -a -q&quot;, , True, 100000)  \n</code></pre><p> Each pair of adjacent double quotation marks (<code>&quot; &quot;</code>) within the string literal is interpreted as one double quotation character in the string. Therefore, the preceding example presents the following string to the <code>Shell</code> function:  </p>\n<pre><code>&quot;C:\\Program Files\\display.exe&quot; -a -q  \n</code></pre><p> If you did not have the path enclosed in quotation marks, Windows would look for a file called <code>Program.exe</code> in the C:\\ directory, instead of <code>display.exe</code> in the C:\\Program Files directory.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces. In the preceding example, the path node <code>\\Program Files</code> includes a space. If the specification were not inside quotation marks and a program named <code>Program.exe</code> had been installed in C:\\, for example by illicit tampering, Windows would execute it instead of <code>display.exe</code>.  </p>\n</div>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <code>Shell</code> function requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_VisualBasic_Interaction_Switch_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Switch(Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Evaluates a list of expressions and returns an <code>Object</code> value corresponding to the first expression in the list that is <code>True</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static object Switch (object[] VarExpr);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>VarExpr</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Required. <code>Object</code> parameter array. Must have an even number of elements. You can supply a list of <code>Object</code> variables or expressions separated by commas, or a single-dimensional array of <code>Object</code> elements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Evaluates a list of expressions and returns an <code>Object</code> value corresponding to the first expression in the list that is <code>True</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Number of arguments is odd.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The argument supplied to <code>VarExpr</code> consists of paired expressions and values. The <code>Switch</code> function evaluates the odd-numbered expressions from lowest to highest index in <code>VarExpr</code>, and returns the even-numbered value associated with the first expression that evaluates to <code>True</code>. For example, if <code>VarExpr(0)</code> is <code>True</code>, <code>Switch</code> returns <code>VarExpr(1)</code>, and if <code>VarExpr(0)</code> is <code>False</code> but <code>VarExpr(2)</code> is <code>True</code>, <code>Switch</code> returns <code>VarExpr(3)</code>, and so on.  </p>\n<p> If you do not supply the <code>VarExpr</code> argument, <code>Switch</code> returns <code>Nothing</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The expressions in the argument list can include function calls. As part of preparing the argument list for the call to <code>Switch</code>, the Visual Basic compiler calls every function in every expression. This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is <code>True</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Interaction.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Interaction.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.AppActivate\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Beep\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.CallByName\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Choose\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Command\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.CreateObject\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.DeleteSetting\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Environ\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.GetAllSettings\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.GetObject\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.GetSetting\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.IIf\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.InputBox\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.MsgBox\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Partition\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.SaveSetting\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Shell\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Interaction.Switch\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualBasic.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ea45245e-14ad-ebb5-4573-d69464b9ca38\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The Interaction module contains procedures used to interact with objects, applications, and systems.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualBasic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualBasic.Interaction\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Interaction.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Interaction.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualBasic.Interaction","Microsoft.VisualBasic.Interaction.AppActivate","Microsoft.VisualBasic.Interaction.Beep","Microsoft.VisualBasic.Interaction.CallByName","Microsoft.VisualBasic.Interaction.Choose","Microsoft.VisualBasic.Interaction.Command","Microsoft.VisualBasic.Interaction.CreateObject","Microsoft.VisualBasic.Interaction.DeleteSetting","Microsoft.VisualBasic.Interaction.Environ","Microsoft.VisualBasic.Interaction.GetAllSettings","Microsoft.VisualBasic.Interaction.GetObject","Microsoft.VisualBasic.Interaction.GetSetting","Microsoft.VisualBasic.Interaction.IIf","Microsoft.VisualBasic.Interaction.InputBox","Microsoft.VisualBasic.Interaction.MsgBox","Microsoft.VisualBasic.Interaction.Partition","Microsoft.VisualBasic.Interaction.SaveSetting","Microsoft.VisualBasic.Interaction.Shell","Microsoft.VisualBasic.Interaction.Switch"],"api_location":["Microsoft.VisualBasic.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualBasic.Interaction","Microsoft::VisualBasic::Interaction","Microsoft.VisualBasic.Interaction.AppActivate","Microsoft::VisualBasic::Interaction::AppActivate","Microsoft.VisualBasic.Interaction.Beep","Microsoft::VisualBasic::Interaction::Beep","Microsoft.VisualBasic.Interaction.CallByName","Microsoft::VisualBasic::Interaction::CallByName","Microsoft.VisualBasic.Interaction.Choose","Microsoft::VisualBasic::Interaction::Choose","Microsoft.VisualBasic.Interaction.Command","Microsoft::VisualBasic::Interaction::Command","Microsoft.VisualBasic.Interaction.CreateObject","Microsoft::VisualBasic::Interaction::CreateObject","Microsoft.VisualBasic.Interaction.DeleteSetting","Microsoft::VisualBasic::Interaction::DeleteSetting","Microsoft.VisualBasic.Interaction.Environ","Microsoft::VisualBasic::Interaction::Environ","Microsoft.VisualBasic.Interaction.GetAllSettings","Microsoft::VisualBasic::Interaction::GetAllSettings","Microsoft.VisualBasic.Interaction.GetObject","Microsoft::VisualBasic::Interaction::GetObject","Microsoft.VisualBasic.Interaction.GetSetting","Microsoft::VisualBasic::Interaction::GetSetting","Microsoft.VisualBasic.Interaction.IIf","Microsoft::VisualBasic::Interaction::IIf","Microsoft.VisualBasic.Interaction.InputBox","Microsoft::VisualBasic::Interaction::InputBox","Microsoft.VisualBasic.Interaction.MsgBox","Microsoft::VisualBasic::Interaction::MsgBox","Microsoft.VisualBasic.Interaction.Partition","Microsoft::VisualBasic::Interaction::Partition","Microsoft.VisualBasic.Interaction.SaveSetting","Microsoft::VisualBasic::Interaction::SaveSetting","Microsoft.VisualBasic.Interaction.Shell","Microsoft::VisualBasic::Interaction::Shell","Microsoft.VisualBasic.Interaction.Switch","Microsoft::VisualBasic::Interaction::Switch"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ea45245e-14ad-ebb5-4573-d69464b9ca38","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualBasic/Interaction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Interaction class | Microsoft Docs","_op_ogTitle":"Interaction class","description":"The Interaction module contains procedures used to interact with objects, applications, and systems.\n","toc_asset_id":"_splitted/Microsoft.VisualBasic/toc.json","toc_rel":"_splitted/Microsoft.VisualBasic/toc.json","source_url":"","ms.assetid":"Microsoft.VisualBasic.Interaction","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.interaction","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.interaction","fileRelativePath":"Microsoft.VisualBasic.Interaction.html"},"themesRelativePathToOutputRoot":"_themes/"}