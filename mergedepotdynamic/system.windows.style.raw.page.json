{"content":"    \r\n    <h1 id=\"System_Windows_Style\">\r\n      <span class=\"lang-csharp\">Style</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Enables the sharing of properties, resources, and event handlers between instances of a type.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]\n[System.Windows.Markup.ContentProperty(&quot;Setters&quot;)]\n[System.Windows.Markup.DictionaryKeyProperty(&quot;TargetType&quot;)]\npublic class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">System.Windows.Threading.DispatcherObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Style</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You can set a Style on any element that derives from <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> or <a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a>. A style is most commonly declared as a resource inside the <a class=\"xref\" href=\"system.windows.application#System_Windows_Application_Resources_\" data-linktype=\"relative-path\">Resources</a> section. Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied. If, for instance, you declare the style in the root element of your application definition XAML file, the style can be used anywhere in your application. If you are creating a navigation application and declare the style in one of the application&#39;s XAML files, the style can be used only in that XAML file. For more information on scoping rules for resources, see <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.  </p>\n<p> The style declaration consists of a Style object that contains a collection of one or more <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a> objects. Each <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a> consists of a <a class=\"xref\" href=\"system.windows.setter#System_Windows_Setter_Property_\" data-linktype=\"relative-path\">Property</a> and a <a class=\"xref\" href=\"system.windows.setter#System_Windows_Setter_Value_\" data-linktype=\"relative-path\">Value</a>. The property is the name of the property of the element the style is to apply to. After the style is declared as a resource, it can then be referenced just like any other resource.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If there is more than one setter in the setter collection with the same <a class=\"xref\" href=\"system.windows.setter#System_Windows_Setter_Property_\" data-linktype=\"relative-path\">Property</a> property value, the setter that is declared last is used. Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.  </p>\n</div>\n<p> The Windows Presentation Foundation (WPF) styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic. The styling and templating model includes a suite of features that enable you to customize your UI. This suite of features includes the Style class as well as the following:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a>  \n</li>\n<li><p><a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> and <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.controls.controltemplate\" data-linktype=\"relative-path\">ControlTemplate</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.datatemplate\" data-linktype=\"relative-path\">DataTemplate</a>  \n\n<p>For more information, see <a href=\"../Topic/Styling%20and%20Templating.md\" data-linktype=\"relative-path\">Styling and Templating</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style__ctor\" data-linktype=\"self-bookmark\">Style()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style__ctor_System_Type_\" data-linktype=\"self-bookmark\">Style(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> class to use on the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style__ctor_System_Type_System_Windows_Style_\" data-linktype=\"self-bookmark\">Style(Type,Style)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> class to use on the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and based on the specified <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_BasedOn\" data-linktype=\"self-bookmark\">BasedOn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a defined style that is the basis of the current style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_IsSealed\" data-linktype=\"self-bookmark\">IsSealed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the style is read-only and cannot be changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_Resources\" data-linktype=\"self-bookmark\">Resources</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the collection of resources that can be used within the scope of this style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_Setters\" data-linktype=\"self-bookmark\">Setters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a> and <a class=\"xref\" href=\"system.windows.eventsetter\" data-linktype=\"relative-path\">EventSetter</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_TargetType\" data-linktype=\"self-bookmark\">TargetType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the type for which this style is intended.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_Triggers\" data-linktype=\"self-bookmark\">Triggers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.windows.triggerbase\" data-linktype=\"relative-path\">TriggerBase</a> objects that apply property values based on specified conditions.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_RegisterName_System_String_System_Object_\" data-linktype=\"self-bookmark\">RegisterName(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a new name-object pair in the current namescope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_Seal\" data-linktype=\"self-bookmark\">Seal()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Locks this style and all factories and triggers so they cannot be changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_UnregisterName_System_String_\" data-linktype=\"self-bookmark\">UnregisterName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a name-object mapping from the namescope.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_System_Windows_Markup_IAddChild_AddChild_System_Object_\" data-linktype=\"self-bookmark\">IAddChild.AddChild(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a child object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_System_Windows_Markup_IAddChild_AddText_System_String_\" data-linktype=\"self-bookmark\">IAddChild.AddText(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the text content of a node to the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_System_Windows_Markup_INameScope_FindName_System_String_\" data-linktype=\"self-bookmark\">INameScope.FindName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an object that has the provided identifying name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Style_System_Windows_Markup_IQueryAmbient_IsAmbientPropertyAvailable_System_String_\" data-linktype=\"self-bookmark\">IQueryAmbient.IsAmbientPropertyAvailable(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Queries whether a specified ambient property is available in the current scope.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style__ctor\">\r\n    \r\n            <a id=\"System_Windows_Style__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Style()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Style ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor call requires delayed validation of <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_TargetType_\" data-linktype=\"relative-path\">TargetType</a> and <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_BasedOn_\" data-linktype=\"relative-path\">BasedOn</a> style type. If this is used outside the context of the parser, behavior is undefined.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style__ctor_System_Type_\">\r\n    \r\n            <a id=\"System_Windows_Style__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Style(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> class to use on the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Style (Type targetType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to which the style will apply.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style__ctor_System_Type_System_Windows_Style_\">\r\n    \r\n            <a id=\"System_Windows_Style__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Style(Type,Style)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> class to use on the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and based on the specified <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Style (Type targetType, System.Windows.Style basedOn);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to which the style will apply.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>basedOn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The style to base this style on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_BasedOn\">\r\n    \r\n            <a id=\"System_Windows_Style_BasedOn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BasedOn</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a defined style that is the basis of the current style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Style BasedOn { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </div>\r\n                  <p>A defined style that is the basis of the current style. The default value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each style only supports one BasedOn value.  </p>\n<p><a name=\"xamlAttributeUsage_BasedOn\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object BasedOn=&quot;myStyle&quot; .../&gt;  \n</code></pre><p><a name=\"xamlValues_BasedOn\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>myStyle</em><br> An existing style. Typically, you use the <a href=\"../Topic/Markup%20Extensions%20and%20WPF%20XAML.md\" data-linktype=\"relative-path\">Markup Extensions and WPF XAML</a> to refer to an existing style.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>There are several ways that styles in WPF can be extended or inherited. Styles can be based on other styles through this property. When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style. In the following example, <code>Style2</code> inherits the <a class=\"xref\" href=\"system.windows.controls.control#System_Windows_Controls_Control_Background_\" data-linktype=\"relative-path\">Background</a>value of <code>Yellow</code>, and adds a <a class=\"xref\" href=\"system.windows.controls.control#System_Windows_Controls_Control_Foreground_\" data-linktype=\"relative-path\">Foreground</a>value of <code>Blue</code>.  </p>\n<pre><code class=\"lang-xml\" name=\"StyleOvw01#ExtendingStyle\">\n&lt;Style x:Key=&quot;Style1&quot;&gt;\n  &lt;Setter Property=&quot;Control.Background&quot; Value=&quot;Yellow&quot;/&gt;\n&lt;/Style&gt;\n\n&lt;Style x:Key=&quot;Style2&quot; BasedOn=&quot;{StaticResource Style1}&quot;&gt;\n  &lt;Setter Property=&quot;Control.Foreground&quot; Value=&quot;Blue&quot;/&gt;\n&lt;/Style&gt;\n</code></pre><pre><code class=\"lang-xml\" name=\"StyleOvw01#ExtendingStyle\">This snippet ID extendingstyle is used in multiple files: /CS/Page1.xaml, /XAML/Page1.xaml. Rename the duplicate ID to make it unique, and update the reference to the snippet ID in the topic(s).\n</code></pre><p> Similarly, styles can be based on the style of an existing WPF element, as in the following example where the new style is based on the style of a <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> element.  </p>\n<pre><code class=\"lang-xml\" name=\"PhotoStoreDemoStyled#2\">  &lt;Style\nx:Key=&quot;TitleText&quot;\nBasedOn=&quot;{StaticResource {x:Type TextBlock}}&quot;\nTargetType=&quot;{x:Type TextBlock}&quot;&gt;\n    &lt;Setter Property=&quot;FontSize&quot; Value=&quot;32pt&quot; /&gt;\n    &lt;Setter Property=&quot;Foreground&quot;&gt;\n      &lt;Setter.Value&gt;\n        &lt;LinearGradientBrush StartPoint=&quot;0.5,0&quot; EndPoint=&quot;0.5,1&quot;&gt;\n          &lt;LinearGradientBrush.GradientStops&gt;\n            &lt;GradientStop Offset=&quot;0.0&quot; Color=&quot;#90C117&quot; /&gt;\n            &lt;GradientStop Offset=&quot;1.0&quot; Color=&quot;#5C9417&quot; /&gt;\n          &lt;/LinearGradientBrush.GradientStops&gt;\n        &lt;/LinearGradientBrush&gt;\n      &lt;/Setter.Value&gt;\n    &lt;/Setter&gt;\n    &lt;Setter Property=&quot;RenderTransform&quot;&gt;\n      &lt;Setter.Value&gt;\n        &lt;TranslateTransform X=&quot;0&quot; Y=&quot;10&quot;/&gt;\n      &lt;/Setter.Value&gt;\n    &lt;/Setter&gt;\n  &lt;/Style&gt;\n</code></pre><pre><code class=\"lang-xml\" name=\"PhotoStoreDemoStyled#2\">This snippet ID 2 is used in multiple files: /CS/window1.xaml, /xaml/window1.xaml. Rename the duplicate ID to make it unique, and update the reference to the snippet ID in the topic(s).\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If you create a style with a <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_TargetType_\" data-linktype=\"relative-path\">TargetType</a> property and base it on another style that also defines a <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_TargetType_\" data-linktype=\"relative-path\">TargetType</a> property, the target type of the derived style must be the same as or be derived from the type of the base style.  </p>\n</div>\n<p> Styles defined for specific types can also be based on other styles, as in the following example.  </p>\n<pre><code class=\"lang-xml\" name=\"StyleOvw01#ExtendingStyleTargetType\">&lt;Style TargetType=&quot;{x:Type Button}&quot; BasedOn=&quot;{StaticResource Style1}&quot;&gt;\n  &lt;Setter Property=&quot;Foreground&quot; Value=&quot;Green&quot;/&gt;\n&lt;/Style&gt;\n</code></pre><pre><code class=\"lang-xml\" name=\"StyleOvw01#ExtendingStyleTargetType\">This snippet ID extendingstyletargettype is used in multiple files: /CS/Page1.xaml, /XAML/Page1.xaml. Rename the duplicate ID to make it unique, and update the reference to the snippet ID in the topic(s).\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_IsSealed\">\r\n    \r\n            <a id=\"System_Windows_Style_IsSealed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSealed</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the style is read-only and cannot be changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSealed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the style is sealed; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A style is sealed when another style is based on it or when it is applied for the first time.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_Resources\">\r\n    \r\n            <a id=\"System_Windows_Style_Resources_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resources</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the collection of resources that can be used within the scope of this style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.ResourceDictionary Resources { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a></div>\r\n                  </div>\r\n                  <p>The resources that can be used within the scope of this style.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a name=\"xamlPropertyElementUsage_Resources\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.Resources&gt;  \n    oneOrMoreResourceElements  \n  &lt;/object.Resources&gt;  \n&lt;/object&gt;  \n- or -   \n&lt;object&gt;  \n  &lt;object.Resources&gt;  \n    &lt;ResourceDictionary Source=&quot;externalDictionarySource&quot;/&gt;  \n  &lt;/object.Resources&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_Resources\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>oneOrMoreResourceElements</em><br> One or more resource elements. To be referenced later in either <a href=\"../Topic/StaticResource%20Markup%20Extension.md\" data-linktype=\"relative-path\">StaticResource Markup Extension</a> or <a href=\"../Topic/DynamicResource%20Markup%20Extension.md\" data-linktype=\"relative-path\">DynamicResource Markup Extension</a> syntax in XAML, a resource element must have an <code>x:Key</code> attribute.  </p>\n<p> &lt;ResourceDictionary Source=&quot; <em>externalDictionarySource</em>&quot;/&gt;<br> An external dictionary source. For details, see <a href=\"../Topic/Merged%20Resource%20Dictionaries.md\" data-linktype=\"relative-path\">Merged Resource Dictionaries</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_Setters\">\r\n    \r\n            <a id=\"System_Windows_Style_Setters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Setters</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a> and <a class=\"xref\" href=\"system.windows.eventsetter\" data-linktype=\"relative-path\">EventSetter</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.SetterBaseCollection Setters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.setterbasecollection\" data-linktype=\"relative-path\">SetterBaseCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a> and <a class=\"xref\" href=\"system.windows.eventsetter\" data-linktype=\"relative-path\">EventSetter</a> objects. The default is an empty collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Setters property of a <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> object can consist only of objects assignable to <a class=\"xref\" href=\"system.windows.setterbase\" data-linktype=\"relative-path\">SetterBase</a>. Adding a <a class=\"xref\" href=\"system.windows.setterbase\" data-linktype=\"relative-path\">SetterBase</a> child to a <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> object implicitly adds it to the <a class=\"xref\" href=\"system.windows.setterbasecollection\" data-linktype=\"relative-path\">SetterBaseCollection</a> for the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> object.  </p>\n<p> An explicit property element usage  for Setters is also relatively common. This is a markup style decision that can sometimes help distinguish Setters from <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_Resources_\" data-linktype=\"relative-path\">Resources</a> and <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_Triggers_\" data-linktype=\"relative-path\">Triggers</a> items in a complex style. For example:  </p>\n<pre><code>&lt;Style&gt;  \n  &lt;Style.Setters&gt;  \n    &lt;!--one or more SetterBase derived object elements here--&gt;  \n  &lt;/Style.Setters&gt;  \n&lt;/Style&gt;  \n</code></pre><p><a name=\"xamlPropertyElementUsage_Setters\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  oneOrMoreSetters  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_Setters\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>oneOrMoreSetters</em><br> One or more <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a> or <a class=\"xref\" href=\"system.windows.eventsetter\" data-linktype=\"relative-path\">EventSetter</a> objects.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this property.  </p>\n<pre><code class=\"lang-vb\" name=\"listboxitemstyle#1\">Dim style As Style = New Style()\nstyle.Setters.Add(New Setter(ListBoxItem.HorizontalContentAlignmentProperty, _\n     HorizontalAlignment.Stretch))\nDim lb As ListBox = New ListBox()\nlb.ItemContainerStyle = style\nDim lbi1 As ListBoxItem = New ListBoxItem()\nDim btn As Button = New Button()\nbtn.Content = &quot;Button as styled list box item.&quot;\nlbi1.Content = (btn)\nlb.Items.Add(lbi1)\n</code></pre><pre><code class=\"lang-cs\" name=\"listboxitemstyle#1\">Style style = new Style(typeof(ListBoxItem));\nstyle.Setters.Add(new Setter(ListBoxItem.HorizontalContentAlignmentProperty,\n     HorizontalAlignment.Stretch));\nListBox lb = new ListBox();\nlb.ItemContainerStyle = style;\nListBoxItem lbi1 = new ListBoxItem();\nButton btn = new Button();\nbtn.Content = &quot;Button as styled list box item.&quot;;\nlbi1.Content = (btn);\nlb.Items.Add(lbi1);\n</code></pre><p> Adding a <a class=\"xref\" href=\"system.windows.setterbase\" data-linktype=\"relative-path\">SetterBase</a> child to a <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> object implicitly adds it to the <a class=\"xref\" href=\"system.windows.setterbasecollection\" data-linktype=\"relative-path\">SetterBaseCollection</a> for the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> object. The following <a class=\"xref\" href=\"system.windows.eventsetter\" data-linktype=\"relative-path\">EventSetter</a> is implicitly added to the <a class=\"xref\" href=\"system.windows.setterbasecollection\" data-linktype=\"relative-path\">SetterBaseCollection</a> of the style:  </p>\n<pre><code class=\"lang-xml\" name=\"eventovwsupport#XAML2\">&lt;StackPanel\n  xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n  xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n  x:Class=&quot;SDKSample.EventOvw2&quot;\n  Name=&quot;dpanel2&quot;\n  Initialized=&quot;PrimeHandledToo&quot;\n&gt;\n  &lt;StackPanel.Resources&gt;\n    &lt;Style TargetType=&quot;{x:Type Button}&quot;&gt;\n      &lt;EventSetter Event=&quot;Click&quot; Handler=&quot;b1SetColor&quot;/&gt;\n    &lt;/Style&gt;\n  &lt;/StackPanel.Resources&gt;\n  &lt;Button&gt;Click me&lt;/Button&gt;\n  &lt;Button Name=&quot;ThisButton&quot; Click=&quot;HandleThis&quot;&gt;\n    Raise event, handle it, use handled=true handler to get it anyway.\n  &lt;/Button&gt;\n&lt;/StackPanel&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_TargetType\">\r\n    \r\n            <a id=\"System_Windows_Style_TargetType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TargetType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the type for which this style is intended.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type TargetType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The target type for this style.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can set a style on any element that derives from <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> or <a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a>. Therefore, your target type can be any of those elements. However, if you create a style with a TargetType property and base it on another style that also defines a TargetType property, the target type of the derived style must be the same as or be derived from the target type of the base style.  </p>\n<p> If you do not specify a TargetType, then you must specify an <code>x:Key</code> for your <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> and also qualify the properties in your style with a class name.  </p>\n<p><a name=\"xamlAttributeUsage_TargetType\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object  TargetType=&quot;{x:Type typeName}&quot;/&gt;  \n-or-  \n&lt;object  TargetType=&quot;typeName&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_TargetType\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <code>{x:Type ...}</code><br> An <a href=\"../Topic/x:Type%20Markup%20Extension.md\" data-linktype=\"relative-path\">x:Type Markup Extension</a> markup extension usage.  </p>\n<p> <em>typeName</em><br> The type name of the class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a style that will be applied to all instances of the <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> element.  </p>\n<pre><code class=\"lang-xml\" name=\"PhotoStoreDemoStyled#1\">&lt;Style TargetType=&quot;{x:Type TextBlock}&quot;&gt;\n  &lt;Setter Property=&quot;FontFamily&quot; Value=&quot;Segoe Black&quot; /&gt;\n  &lt;Setter Property=&quot;HorizontalAlignment&quot; Value=&quot;Center&quot; /&gt;\n  &lt;Setter Property=&quot;FontSize&quot; Value=&quot;12pt&quot; /&gt;\n  &lt;Setter Property=&quot;Foreground&quot; Value=&quot;#777777&quot; /&gt;\n&lt;/Style&gt;\n</code></pre><pre><code class=\"lang-xml\" name=\"PhotoStoreDemoStyled#1\">This snippet ID 1 is used in multiple files: /CS/window1.xaml, /xaml/window1.xaml. Rename the duplicate ID to make it unique, and update the reference to the snippet ID in the topic(s).\n</code></pre><p> Setting the TargetType property to the <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> type without setting an <code>x:Key</code> implicitly sets the <code>x:Key</code> to <code>{x:Type TextBlock}</code>. This also means that if you give the above <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> an <code>x:Key</code> value of anything other than <code>{x:Type TextBlock}</code>, the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> would not be applied to all <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> elements automatically. Instead, you need to apply the style to the <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> elements explicitly.  </p>\n<p> Many WPF controls consist of a combination of other WPF controls, so creating a style that applies to all controls of a type can have broad impact. For instance, if you create a style that targets the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> controls in a <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a>, the style is applied to all <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> controls in the canvas, even if the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> is part of another control, such as a <a class=\"xref\" href=\"system.windows.controls.combobox\" data-linktype=\"relative-path\">ComboBox</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_Triggers\">\r\n    \r\n            <a id=\"System_Windows_Style_Triggers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Triggers</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.windows.triggerbase\" data-linktype=\"relative-path\">TriggerBase</a> objects that apply property values based on specified conditions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.TriggerCollection Triggers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.triggercollection\" data-linktype=\"relative-path\">TriggerCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.windows.triggerbase\" data-linktype=\"relative-path\">TriggerBase</a> objects. The default is an empty collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WPF styling and templating model enables you to specify triggers within your <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>. Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes <code>true</code>, or when an event occurs) are satisfied.  </p>\n<p><a name=\"xamlPropertyElementUsage_Triggers\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.Triggers&gt;  \n    oneOrMoreTriggers  \n  &lt;/object.Triggers&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_Triggers\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>oneOrMoreTriggers</em><br> Zero or more object elements that are classes deriving from <a class=\"xref\" href=\"system.windows.triggerbase\" data-linktype=\"relative-path\">TriggerBase</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a named <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> available to <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> controls. The <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> defines a <a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a> element that changes the <a class=\"xref\" href=\"system.windows.controls.control#System_Windows_Controls_Control_Foreground_\" data-linktype=\"relative-path\">Foreground</a> property of a button when the <a class=\"xref\" href=\"system.windows.controls.primitives.buttonbase#System_Windows_Controls_Primitives_ButtonBase_IsPressed_\" data-linktype=\"relative-path\">IsPressed</a> property is <code>true</code>.  </p>\n<pre><code class=\"lang-xml\" name=\"BtnStyles#2\">&lt;Style x:Key=&quot;Triggers&quot; TargetType=&quot;Button&quot;&gt;\n    &lt;Style.Triggers&gt;\n    &lt;Trigger Property=&quot;IsPressed&quot; Value=&quot;true&quot;&gt;\n        &lt;Setter Property = &quot;Foreground&quot; Value=&quot;Green&quot;/&gt;\n    &lt;/Trigger&gt;\n    &lt;/Style.Triggers&gt;\n&lt;/Style&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_GetHashCode\">\r\n    \r\n            <a id=\"System_Windows_Style_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code for this <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_RegisterName_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Style_RegisterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterName(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a new name-object pair in the current namescope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RegisterName (string name, object scopedElement);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to register.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scopedElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to map to the specified <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_Seal\">\r\n    \r\n            <a id=\"System_Windows_Style_Seal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Seal()</div>        \r\n          </div>\r\n    \r\n            <p>Locks this style and all factories and triggers so they cannot be changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Seal ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_UnregisterName_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Style_UnregisterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnregisterName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a name-object mapping from the namescope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UnregisterName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the mapping to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_System_Windows_Markup_IAddChild_AddChild_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Style_System_Windows_Markup_IAddChild_AddChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAddChild.AddChild(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a child object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAddChild.AddChild (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The child object to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> instance is cast to an <a class=\"xref\" href=\"system.windows.markup.iaddchild\" data-linktype=\"relative-path\">IAddChild</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_System_Windows_Markup_IAddChild_AddText_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Style_System_Windows_Markup_IAddChild_AddText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAddChild.AddText(String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the text content of a node to the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAddChild.AddText (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to add to the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> instance is cast to an <a class=\"xref\" href=\"system.windows.markup.iaddchild\" data-linktype=\"relative-path\">IAddChild</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_System_Windows_Markup_INameScope_FindName_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Style_System_Windows_Markup_INameScope_FindName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">INameScope.FindName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an object that has the provided identifying name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object INameScope.FindName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name identifier for the object being requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The object, if found. Returns <code>null</code> if no object of that name was found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> instance is cast to an <a class=\"xref\" href=\"system.windows.markup.inamescope\" data-linktype=\"relative-path\">INameScope</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Style_System_Windows_Markup_IQueryAmbient_IsAmbientPropertyAvailable_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Style_System_Windows_Markup_IQueryAmbient_IsAmbientPropertyAvailable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryAmbient.IsAmbientPropertyAvailable(String)</div>        \r\n          </div>\r\n    \r\n            <p>Queries whether a specified ambient property is available in the current scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the requested ambient property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the requested ambient property is available; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Style.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Style.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.BasedOn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.IsSealed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.RegisterName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.Resources\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.Seal\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.Setters\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.IAddChild.AddChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.IAddChild.AddText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.INameScope.FindName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.IQueryAmbient.IsAmbientPropertyAvailable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.TargetType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.Triggers\">\r\n<meta name=\"APIName\" content=\"System.Windows.Style.UnregisterName\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f72e07d1-206f-76ab-d7b6-1b0d69198617\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enables the sharing of properties, resources, and event handlers between instances of a type.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Style\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Style.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Style.yml","open_to_public_contributors":true,"api_name":["System.Windows.Style","System.Windows.Style..ctor","System.Windows.Style.BasedOn","System.Windows.Style.GetHashCode","System.Windows.Style.IsSealed","System.Windows.Style.RegisterName","System.Windows.Style.Resources","System.Windows.Style.Seal","System.Windows.Style.Setters","System.Windows.Style.IAddChild.AddChild","System.Windows.Style.IAddChild.AddText","System.Windows.Style.INameScope.FindName","System.Windows.Style.IQueryAmbient.IsAmbientPropertyAvailable","System.Windows.Style.TargetType","System.Windows.Style.Triggers","System.Windows.Style.UnregisterName"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Style","System::Windows::Style","System.Windows.Style.#ctor","System::Windows::Style::#ctor","System.Windows.Style.BasedOn","System::Windows::Style::BasedOn","System.Windows.Style.GetHashCode","System::Windows::Style::GetHashCode","System.Windows.Style.IsSealed","System::Windows::Style::IsSealed","System.Windows.Style.RegisterName","System::Windows::Style::RegisterName","System.Windows.Style.Resources","System::Windows::Style::Resources","System.Windows.Style.Seal","System::Windows::Style::Seal","System.Windows.Style.Setters","System::Windows::Style::Setters","System.Windows.Style.System#Windows#Markup#IAddChild#AddChild","System::Windows::Style::System#Windows#Markup#IAddChild#AddChild","System.Windows.Style.System#Windows#Markup#IAddChild#AddText","System::Windows::Style::System#Windows#Markup#IAddChild#AddText","System.Windows.Style.System#Windows#Markup#INameScope#FindName","System::Windows::Style::System#Windows#Markup#INameScope#FindName","System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable","System::Windows::Style::System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable","System.Windows.Style.TargetType","System::Windows::Style::TargetType","System.Windows.Style.Triggers","System::Windows::Style::Triggers","System.Windows.Style.UnregisterName","System::Windows::Style::UnregisterName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f72e07d1-206f-76ab-d7b6-1b0d69198617","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows/Style.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Style class | Microsoft Docs","_op_ogTitle":"Style class","description":"Enables the sharing of properties, resources, and event handlers between instances of a type.\n","toc_asset_id":"_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.Style","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.style","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.style","fileRelativePath":"System.Windows.Style.html"},"themesRelativePathToOutputRoot":"_themes/"}