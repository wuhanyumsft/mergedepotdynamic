{"content":"    \r\n    <h1 id=\"System_Drawing_CharacterRange\">\r\n      <span class=\"lang-csharp\">CharacterRange</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies a range of character positions within a string.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct CharacterRange</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CharacterRange</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange__ctor_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">CharacterRange(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> structure, specifying a range of character positions within a string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange_First\" data-linktype=\"self-bookmark\">First</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the position in the string of the first character of this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange_Length\" data-linktype=\"self-bookmark\">Length</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of positions in this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether this object is equivalent to the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange_op_Equality_System_Drawing_CharacterRange_System_Drawing_CharacterRange_\" data-linktype=\"self-bookmark\">op_Equality(CharacterRange,CharacterRange)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects. Gets a value indicating whether the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_CharacterRange_op_Inequality_System_Drawing_CharacterRange_System_Drawing_CharacterRange_\" data-linktype=\"self-bookmark\">op_Inequality(CharacterRange,CharacterRange)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects. Gets a value indicating whether the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> or <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange__ctor_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CharacterRange(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> structure, specifying a range of character positions within a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CharacterRange (int First, int Length);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>First</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position of the first character in the range. For example, if <code>First</code> is set to 0, the first position of the range is position 0 in the string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Length</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of positions in the range.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> and use it to highlight part of a string. This example is designed to be used with Windows Forms. Paste the example into a form and call the <code>HighlightACharacterRange</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.CharacterRangeExample#1\">    private void HighlightACharacterRange(PaintEventArgs e)\n    {\n\n        // Declare the string to draw.\n        string message = &quot;This is the string to highlight a word in.&quot;;\n\n        // Declare the word to highlight.\n        string searchWord = &quot;string&quot;;\n\n        // Create a CharacterRange array with the searchWord \n        // location and length.\n        CharacterRange[] ranges = \n            new CharacterRange[]{new CharacterRange\n            (message.IndexOf(searchWord), searchWord.Length)};\n\n        // Construct a StringFormat object.\n        StringFormat stringFormat1 = new StringFormat();\n\n        // Set the ranges on the StringFormat object.\n        stringFormat1.SetMeasurableCharacterRanges(ranges);\n\n        // Declare the font to write the message in.\n        Font largeFont = new Font(FontFamily.GenericSansSerif, 16.0F,\n            GraphicsUnit.Pixel);\n\n        // Construct a new Rectangle.\n        Rectangle displayRectangle = new Rectangle(20, 20, 200, 100);\n\n        // Convert the Rectangle to a RectangleF.\n        RectangleF displayRectangleF = (RectangleF)displayRectangle;\n\n        // Get the Region to highlight by calling the \n        // MeasureCharacterRanges method.\n        Region[] charRegion = e.Graphics.MeasureCharacterRanges(message, \n            largeFont, displayRectangleF, stringFormat1);\n\n        // Draw the message string on the form.\n        e.Graphics.DrawString(message, largeFont, Brushes.Blue, \n            displayRectangleF);\n\n        // Fill in the region using a semi-transparent color.\n        e.Graphics.FillRegion(new SolidBrush(Color.FromArgb(50, Color.Fuchsia)), \n            charRegion[0]);\n\n        largeFont.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.CharacterRangeExample#1\">   void HighlightACharacterRange( PaintEventArgs^ e )\n   {\n      // Declare the string to draw.\n      String^ message = &quot;This is the string to highlight a word in.&quot;;\n\n      // Declare the word to highlight.\n      String^ searchWord = &quot;string&quot;;\n\n      // Create a CharacterRange array with the searchWord \n      // location and length.\n      array&lt;CharacterRange&gt;^ temp = {CharacterRange( message-&gt;IndexOf( searchWord ), searchWord-&gt;Length )};\n      array&lt;CharacterRange&gt;^ranges = temp;\n\n      // Construct a StringFormat object.\n      StringFormat^ stringFormat1 = gcnew StringFormat;\n\n      // Set the ranges on the StringFormat object.\n      stringFormat1-&gt;SetMeasurableCharacterRanges( ranges );\n\n      // Declare the font to write the message in.\n      System::Drawing::Font^ largeFont = gcnew System::Drawing::Font( FontFamily::GenericSansSerif,16.0F,GraphicsUnit::Pixel );\n\n      // Construct a new Rectangle.\n      Rectangle displayRectangle = Rectangle(20,20,200,100);\n\n      // Convert the Rectangle to a RectangleF.\n      RectangleF displayRectangleF = displayRectangle;\n\n      // Get the Region to highlight by calling the \n      // MeasureCharacterRanges method.\n      array&lt;System::Drawing::Region^&gt;^charRegion = e-&gt;Graphics-&gt;MeasureCharacterRanges( message, largeFont, displayRectangleF, stringFormat1 );\n\n      // Draw the message string on the form.\n      e-&gt;Graphics-&gt;DrawString( message, largeFont, Brushes::Blue, displayRectangleF );\n\n      // Fill in the region using a semi-transparent color.\n      e-&gt;Graphics-&gt;FillRegion( gcnew SolidBrush( Color::FromArgb( 50, Color::Fuchsia ) ), charRegion[ 0 ] );\n      delete largeFont;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.CharacterRangeExample#1\">    Private Sub HighlightACharacterRange(ByVal e As PaintEventArgs)\n\n        &#39; Declare the string to draw.\n        Dim message As String = _\n            &quot;This is the string to highlight a word in.&quot;\n\n        &#39; Declare the word to highlight.\n        Dim searchWord As String = &quot;string&quot;\n\n        &#39; Create a CharacterRange array with the searchWord \n        &#39; location and length.\n        Dim ranges() As CharacterRange = _\n            New CharacterRange() _\n                {New CharacterRange(message.IndexOf(searchWord), _\n                searchWord.Length)}\n\n        &#39; Construct a StringFormat object.\n        Dim stringFormat1 As New StringFormat\n\n        &#39; Set the ranges on the StringFormat object.\n        stringFormat1.SetMeasurableCharacterRanges(ranges)\n\n        &#39; Declare the font to write the message in.\n        Dim largeFont As Font = New Font(FontFamily.GenericSansSerif, _\n            16.0F, GraphicsUnit.Pixel)\n\n        &#39; Construct a new Rectangle.\n        Dim displayRectangle As New Rectangle(20, 20, 200, 100)\n\n        &#39; Convert the Rectangle to a RectangleF.\n        Dim displayRectangleF As RectangleF = _\n            RectangleF.op_Implicit(displayRectangle)\n\n        &#39; Get the Region to highlight by calling the \n        &#39; MeasureCharacterRanges method.\n        Dim charRegion() As Region = _\n            e.Graphics.MeasureCharacterRanges(message, _\n            largeFont, displayRectangleF, stringFormat1)\n\n        &#39; Draw the message string on the form.\n        e.Graphics.DrawString(message, largeFont, Brushes.Blue, _\n            displayRectangleF)\n\n        &#39; Fill in the region using a semi-transparent color.\n        e.Graphics.FillRegion(New SolidBrush(Color.FromArgb(50, _\n            Color.Fuchsia)), charRegion(0))\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange_First\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange_First_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">First</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the position in the string of the first character of this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int First { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The first position of this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange_Length\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange_Length_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Length</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of positions in this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Length { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of positions in this <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether this object is equivalent to the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare to for equality.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to indicate the specified object is an instance with the same <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> value as this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also use <a class=\"xref\" href=\"system.drawing.characterrange#System_Drawing_CharacterRange_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a> to test for equality.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Equals method. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>CharacterRangeEquality2</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#2\">    Private Sub CharacterRangeEquality2() \n        \n        &#39; Declare the string to draw.\n        Dim message As String = &quot;Strings or strings; that is the question.&quot;\n        \n        &#39; Compare the ranges for equality. The should not be equal.\n        Dim range1 As New CharacterRange(message.IndexOf(&quot;Strings&quot;), _\n            &quot;Strings&quot;.Length)\n        Dim range2 As New CharacterRange(message.IndexOf(&quot;strings&quot;), _\n            &quot;strings&quot;.Length)\n        \n        If range1.Equals(range2) Then\n            MessageBox.Show(&quot;The ranges are equal.&quot;)\n        Else\n            MessageBox.Show(&quot;The ranges are not equal.&quot;)\n        End If\n     \n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#2\">        private void CharacterRangeEquality2()\n        {\n\n            // Declare the string to draw.\n            string message = &quot;Strings or strings; that is the question.&quot;;\n\n            // Compare the ranges for equality. The should not be equal.\n            CharacterRange range1 =\n                new CharacterRange(message.IndexOf(&quot;Strings&quot;), &quot;Strings&quot;.Length);\n            CharacterRange range2 =\n                new CharacterRange(message.IndexOf(&quot;strings&quot;), &quot;strings&quot;.Length);\n\n            if (range1.Equals(range2))\n                MessageBox.Show(&quot;The ranges are equal.&quot;);\n            else\n                MessageBox.Show(&quot;The ranges are not equal.&quot;);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange_GetHashCode\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer that is the hash code for this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange_op_Equality_System_Drawing_CharacterRange_System_Drawing_CharacterRange_\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(CharacterRange,CharacterRange)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects. Gets a value indicating whether the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cr1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for equality.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cr2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for equality.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to indicate the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects have the same <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> and <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also test for equality using the <a class=\"xref\" href=\"system.drawing.characterrange#System_Drawing_CharacterRange_Equals_\" data-linktype=\"relative-path\">Equals</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Equality operator. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>CharacterRangeEquality1</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#1\">    Private Sub CharacterRangeEquality1() \n        \n        &#39; Declare the string to draw.\n        Dim message As String = &quot;Strings or strings; that is the question.&quot;\n        \n        &#39; Compare the ranges for equality. The should not be equal.\n        Dim range1 As New CharacterRange(message.IndexOf(&quot;Strings&quot;), _\n            &quot;Strings&quot;.Length)\n        Dim range2 As New CharacterRange(message.IndexOf(&quot;strings&quot;), _\n            &quot;strings&quot;.Length)\n        \n        If range1 = range2 Then\n            MessageBox.Show(&quot;The ranges are equal.&quot;)\n        Else\n            MessageBox.Show(&quot;The ranges are not equal.&quot;)\n        End If\n     \n    End Sub\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#1\">        private void CharacterRangeEquality1()\n        {\n\n            // Declare the string to draw.\n            string message = &quot;Strings or strings; that is the question.&quot;;\n\n            // Compare the ranges for equality. The should not be equal.\n            CharacterRange range1 = \n                new CharacterRange(message.IndexOf(&quot;Strings&quot;), &quot;Strings&quot;.Length);\n            CharacterRange range2 = \n                new CharacterRange(message.IndexOf(&quot;strings&quot;), &quot;strings&quot;.Length);\n\n            if (range1 == range2)\n                MessageBox.Show(&quot;The ranges are equal.&quot;);\n            else\n                MessageBox.Show(&quot;The ranges are not equal.&quot;);\n    \n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_CharacterRange_op_Inequality_System_Drawing_CharacterRange_System_Drawing_CharacterRange_\">\r\n    \r\n            <a id=\"System_Drawing_CharacterRange_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(CharacterRange,CharacterRange)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects. Gets a value indicating whether the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> or <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cr1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for inequality.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cr2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> to compare for inequality.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to indicate the either the <span class=\"xref\">stem.Drawing.CharacterRange.First*</span> or <span class=\"xref\">stem.Drawing.CharacterRange.Length*</span> values of the two <a class=\"xref\" href=\"system.drawing.characterrange\" data-linktype=\"relative-path\">CharacterRange</a> objects differ; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Inequality method returns the opposite of the <a class=\"xref\" href=\"system.drawing.characterrange#System_Drawing_CharacterRange_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Inequality method. To run this example, paste it into a Windows Form. Handle the form’s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>CharacterRangeInequality</code> method from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.MiscWhidbeySnippets#3\">    Private Sub CharacterRangeInequality() \n        \n        &#39; Declare the string to draw.\n        Dim message As String = &quot;Strings or strings; that is the question.&quot;\n        \n        &#39; Compare the ranges for equality. The should not be equal.\n        Dim range1 As New CharacterRange(message.IndexOf(&quot;Strings&quot;), &quot;Strings&quot;.Length)\n        Dim range2 As New CharacterRange(message.IndexOf(&quot;string&quot;), &quot;strings&quot;.Length)\n        \n        If range1 &lt;&gt; range2 Then\n            MessageBox.Show(&quot;The ranges are not equal.&quot;)\n        Else\n            MessageBox.Show(&quot;The ranges are equal.&quot;)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.MiscWhidbeySnippets#3\">        private void CharacterRangeInequality()\n        {\n\n            // Declare the string to draw.\n            string message = &quot;Strings or strings; that is the question.&quot;;\n\n            // Compare the ranges for equality. The should not be equal.\n            CharacterRange range1 =\n                new CharacterRange(message.IndexOf(&quot;Strings&quot;), &quot;Strings&quot;.Length);\n            CharacterRange range2 =\n                new CharacterRange(message.IndexOf(&quot;string&quot;), &quot;strings&quot;.Length);\n\n            if (range1 != range2)\n                MessageBox.Show(&quot;The ranges are not equal.&quot;);\n            else\n                MessageBox.Show(&quot;The ranges are equal.&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.CharacterRange.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.CharacterRange.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.Equals\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.First\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.Length\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Drawing.CharacterRange.op_op_Inequality\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5f329b98-84ef-2407-77b0-783b7d95ae3d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies a range of character positions within a string.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.CharacterRange\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.CharacterRange.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.CharacterRange.yml","open_to_public_contributors":true,"api_name":["System.Drawing.CharacterRange","System.Drawing.CharacterRange..ctor","System.Drawing.CharacterRange.Equals","System.Drawing.CharacterRange.First","System.Drawing.CharacterRange.GetHashCode","System.Drawing.CharacterRange.Length","System.Drawing.CharacterRange.op_Equality","System.Drawing.CharacterRange.op_op_Equality","System.Drawing.CharacterRange.op_Inequality","System.Drawing.CharacterRange.op_op_Inequality"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.CharacterRange","System::Drawing::CharacterRange","System.Drawing.CharacterRange.#ctor","System::Drawing::CharacterRange::#ctor","System.Drawing.CharacterRange.Equals","System::Drawing::CharacterRange::Equals","System.Drawing.CharacterRange.First","System::Drawing::CharacterRange::First","System.Drawing.CharacterRange.GetHashCode","System::Drawing::CharacterRange::GetHashCode","System.Drawing.CharacterRange.Length","System::Drawing::CharacterRange::Length","System.Drawing.CharacterRange.op_Equality","System::Drawing::CharacterRange::op_Equality","System.Drawing.CharacterRange.op_Inequality","System::Drawing::CharacterRange::op_Inequality"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5f329b98-84ef-2407-77b0-783b7d95ae3d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing/CharacterRange.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CharacterRange struct | Microsoft Docs","_op_ogTitle":"CharacterRange struct","description":"Specifies a range of character positions within a string.\n","toc_asset_id":"_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.CharacterRange","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.characterrange","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.characterrange","fileRelativePath":"System.Drawing.CharacterRange.html"},"themesRelativePathToOutputRoot":"_themes/"}