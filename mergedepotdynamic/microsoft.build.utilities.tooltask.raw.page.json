{"content":"    \r\n    <h1 id=\"Microsoft_Build_Utilities_ToolTask\">\r\n      <span class=\"lang-csharp\">ToolTask</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>When overridden in a derived form, provides functionality for a task that wraps a command line tool.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task\" data-linktype=\"relative-path\">Microsoft.Build.Utilities.Task</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ToolTask</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_BuildEngine\" data-linktype=\"relative-path\">BuildEngine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_BuildEngine2\" data-linktype=\"relative-path\">BuildEngine2</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_BuildEngine3\" data-linktype=\"relative-path\">BuildEngine3</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_BuildEngine4\" data-linktype=\"relative-path\">BuildEngine4</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_HelpKeywordPrefix\" data-linktype=\"relative-path\">HelpKeywordPrefix</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_HostObject\" data-linktype=\"relative-path\">HostObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_Log\" data-linktype=\"relative-path\">Log</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.build.utilities.task#Microsoft_Build_Utilities_Task_TaskResources\" data-linktype=\"relative-path\">TaskResources</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This abstract class provides default implementations for the methods and properties of a task that wraps a command line tool.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask__ctor\" data-linktype=\"self-bookmark\">ToolTask()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask__ctor_System_Resources_ResourceManager_\" data-linktype=\"self-bookmark\">ToolTask(ResourceManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> class with the specified <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask__ctor_System_Resources_ResourceManager_System_String_\" data-linktype=\"self-bookmark\">ToolTask(ResourceManager,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> class with the specified <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> and Help keyword prefix.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_EchoOff\" data-linktype=\"self-bookmark\">EchoOff</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that command line echoing is turned off.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_EnvironmentOverride\" data-linktype=\"self-bookmark\">EnvironmentOverride</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a set of environment variable name-value pairs. Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_EnvironmentVariables\" data-linktype=\"self-bookmark\">EnvironmentVariables</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ExitCode\" data-linktype=\"self-bookmark\">ExitCode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the returned exit code of the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_HasLoggedErrors\" data-linktype=\"self-bookmark\">HasLoggedErrors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Whether this ToolTask has logged any errors</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_LogStandardErrorAsError\" data-linktype=\"self-bookmark\">LogStandardErrorAsError</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Should ALL messages received on the standard error stream be logged as errors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ResponseFileEncoding\" data-linktype=\"self-bookmark\">ResponseFileEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the response file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardErrorEncoding\" data-linktype=\"self-bookmark\">StandardErrorEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the standard error stream of the task.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardErrorImportance\" data-linktype=\"self-bookmark\">StandardErrorImportance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Task Parameter: Importance with which to log text from the standard error stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardErrorImportanceToUse\" data-linktype=\"self-bookmark\">StandardErrorImportanceToUse</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the actual importance at which standard error messages will be logged.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardErrorLoggingImportance\" data-linktype=\"self-bookmark\">StandardErrorLoggingImportance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> with which to log errors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardOutputEncoding\" data-linktype=\"self-bookmark\">StandardOutputEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the standard output stream of the task.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardOutputImportance\" data-linktype=\"self-bookmark\">StandardOutputImportance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Task Parameter: Importance with which to log text from the standard out stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardOutputImportanceToUse\" data-linktype=\"self-bookmark\">StandardOutputImportanceToUse</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the actual importance at which standard out messages will be logged.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_StandardOutputLoggingImportance\" data-linktype=\"self-bookmark\">StandardOutputLoggingImportance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> with which to log errors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_TaskProcessTerminationTimeout\" data-linktype=\"self-bookmark\">TaskProcessTerminationTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A timeout to wait for a task to terminate before killing it. In milliseconds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_Timeout\" data-linktype=\"self-bookmark\">Timeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time after which the task executable is terminated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ToolCanceled\" data-linktype=\"self-bookmark\">ToolCanceled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Used to signal when a tool has been cancelled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ToolExe\" data-linktype=\"self-bookmark\">ToolExe</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Projects may set this to override a task&#39;s ToolName. Tasks may override this to prevent that.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ToolName\" data-linktype=\"self-bookmark\">ToolName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the executable file to run.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ToolPath\" data-linktype=\"self-bookmark\">ToolPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the path of the executable file to run.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_UseCommandProcessor\" data-linktype=\"self-bookmark\">UseCommandProcessor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_YieldDuringToolExecution\" data-linktype=\"self-bookmark\">YieldDuringToolExecution</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates if the task will yield the node during tool execution.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_CallHostObjectToExecute\" data-linktype=\"self-bookmark\">CallHostObjectToExecute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calls the host object to perform the work of the task.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_Cancel\" data-linktype=\"self-bookmark\">Cancel()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_DeleteTempFile_System_String_\" data-linktype=\"self-bookmark\">DeleteTempFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the specified temporary file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_Execute\" data-linktype=\"self-bookmark\">Execute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs the exectuable file with the specified task parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ExecuteTool_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">ExecuteTool(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a temporoary response (.rsp) file and runs the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_GenerateCommandLineCommands\" data-linktype=\"self-bookmark\">GenerateCommandLineCommands()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string value containing the command line arguments to pass directly to the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_GenerateFullPathToTool\" data-linktype=\"self-bookmark\">GenerateFullPathToTool()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the fully qualified path to the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_GenerateResponseFileCommands\" data-linktype=\"self-bookmark\">GenerateResponseFileCommands()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_GetProcessStartInfo_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">GetProcessStartInfo(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the information required to spawn the process executing the tool.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_GetResponseFileSwitch_System_String_\" data-linktype=\"self-bookmark\">GetResponseFileSwitch(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_GetWorkingDirectory\" data-linktype=\"self-bookmark\">GetWorkingDirectory()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the directory in which to run the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_HandleTaskExecutionErrors\" data-linktype=\"self-bookmark\">HandleTaskExecutionErrors()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Handles execution errors raised by the executable file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_InitializeHostObject\" data-linktype=\"self-bookmark\">InitializeHostObject()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the host object of the task.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_LogEventsFromTextOutput_System_String_Microsoft_Build_Framework_MessageImportance_\" data-linktype=\"self-bookmark\">LogEventsFromTextOutput(String,MessageImportance)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Parses a single line of text to identify any errors or warnings in canonical format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_LogPathToTool_System_String_System_String_\" data-linktype=\"self-bookmark\">LogPathToTool(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Logs the tool name and path to all registered loggers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_LogToolCommand_System_String_\" data-linktype=\"self-bookmark\">LogToolCommand(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Logs the starting point of the run to all registered loggers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ResponseFileEscape_System_String_\" data-linktype=\"self-bookmark\">ResponseFileEscape(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Overridable method to escape the content of the response file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_SkipTaskExecution\" data-linktype=\"self-bookmark\">SkipTaskExecution()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether task execution should be skipped.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_Utilities_ToolTask_ValidateParameters\" data-linktype=\"self-bookmark\">ValidateParameters()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether all task paratmeters are valid.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask__ctor\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolTask()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected ToolTask ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask__ctor_System_Resources_ResourceManager_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolTask(ResourceManager)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> class with the specified <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected ToolTask (System.Resources.ResourceManager taskResources);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>taskResources</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> for task resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask__ctor_System_Resources_ResourceManager_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolTask(ResourceManager,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> class with the specified <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> and Help keyword prefix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>taskResources</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> for task resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>helpKeywordPrefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Help keyword to use for messages raised by the task.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_EchoOff\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_EchoOff_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EchoOff</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that command line echoing is turned off.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EchoOff { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>True when command line echo is off.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>MSBuild turns off command line echoing by passing /Q on the cmd.exe command line.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_EnvironmentOverride\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_EnvironmentOverride_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnvironmentOverride</div>        \r\n          </div>\r\n    \r\n            <p>Gets a set of environment variable name-value pairs. Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.stringdictionary\" data-linktype=\"relative-path\">StringDictionary</a></div>\r\n                  </div>\r\n                  <p>Returns a set of environment variables. Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable. The default implementation of EnvironmentOverride returns null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExecuteTool method passes these environment variables to the StartInfo of the process in which the tool executes. Any environment variables not included in the EnvironmentOverride dictionary are inherited from the process in which the ExecuteTool method executes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code>using System;  \nusing Microsoft.Build.Utilities;  \nusing System.Collections.Specialized;  \n\n/// &lt;summary&gt;  \n/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  \n/// to the Path environment variable of the process being executed  \n/// &lt;/summary&gt;  \nabstract class CustomToolTask : ToolTask  \n{  \n      protected override StringDictionary EnvironmentOverride  \n      {  \n            get  \n            {  \n                  string newPath = Environment.GetEnvironmentVariable(&quot;Path&quot;, EnvironmentVariableTarget.Process) + @&quot;;C:\\MyDirectory&quot;;  \n                  StringDictionary result = new StringDictionary();  \n                  result.Add(&quot;Path&quot;, newPath);  \n                  return result;  \n            }  \n      }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_EnvironmentVariables\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_EnvironmentVariables_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnvironmentVariables</div>        \r\n          </div>\r\n    \r\n            <p>Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] EnvironmentVariables { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Using this instead of EnvironmentOverride as that takes a StringDictionary, which cannot be set from an MSBuild project.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ExitCode\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ExitCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExitCode</div>        \r\n          </div>\r\n    \r\n            <p>Gets the returned exit code of the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ExitCode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_HasLoggedErrors\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_HasLoggedErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasLoggedErrors</div>        \r\n          </div>\r\n    \r\n            <p>Whether this ToolTask has logged any errors</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool HasLoggedErrors { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_LogStandardErrorAsError\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_LogStandardErrorAsError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogStandardErrorAsError</div>        \r\n          </div>\r\n    \r\n            <p>Should ALL messages received on the standard error stream be logged as errors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool LogStandardErrorAsError { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ResponseFileEncoding\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ResponseFileEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResponseFileEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the response file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Text.Encoding ResponseFileEncoding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the response file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The encoding is <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8_\" data-linktype=\"relative-path\">UTF8</a> by default.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorEncoding\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardErrorEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the standard error stream of the task.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Text.Encoding StandardErrorEncoding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the response file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Console-based output uses the current system OEM code page by default. Note that we should not use Console.OutputEncoding here since processes we run don&#39;t really have much to do with our console window (and also Console.OutputEncoding doesn&#39;t return the OEM code page if the running application that hosts MSBuild is not a console application).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorImportance\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorImportance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardErrorImportance</div>        \r\n          </div>\r\n    \r\n            <p>Task Parameter: Importance with which to log text from the standard error stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StandardErrorImportance { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorImportanceToUse\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorImportanceToUse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardErrorImportanceToUse</div>        \r\n          </div>\r\n    \r\n            <p>Gets the actual importance at which standard error messages will be logged.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a></div>\r\n                  </div>\r\n                  <p>Returns the actual importance at which standard error messages will be logged.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorLoggingImportance\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardErrorLoggingImportance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardErrorLoggingImportance</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> with which to log errors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> with which to log errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputEncoding\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardOutputEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the standard output stream of the task.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Text.Encoding StandardOutputEncoding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> of the response file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Console-based output uses the current system OEM code page by default. Note that we should not use Console.OutputEncoding here since processes we run don&#39;t really have much to do with our console window (and also Console.OutputEncoding doesn&#39;t return the OEM code page if the running application that hosts MSBuild is not a console application).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputImportance\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputImportance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardOutputImportance</div>        \r\n          </div>\r\n    \r\n            <p>Task Parameter: Importance with which to log text from the standard out stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StandardOutputImportance { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputImportanceToUse\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputImportanceToUse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardOutputImportanceToUse</div>        \r\n          </div>\r\n    \r\n            <p>Gets the actual importance at which standard out messages will be logged.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a></div>\r\n                  </div>\r\n                  <p>Returns the actual importance at which standard out messages will be logged.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputLoggingImportance\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_StandardOutputLoggingImportance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardOutputLoggingImportance</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> with which to log errors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> with which to log errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_TaskProcessTerminationTimeout\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_TaskProcessTerminationTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TaskProcessTerminationTimeout</div>        \r\n          </div>\r\n    \r\n            <p>A timeout to wait for a task to terminate before killing it. In milliseconds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected int TaskProcessTerminationTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_Timeout\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_Timeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time after which the task executable is terminated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int Timeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The time-out length, in milliseconds.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ToolCanceled\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ToolCanceled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolCanceled</div>        \r\n          </div>\r\n    \r\n            <p>Used to signal when a tool has been cancelled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Threading.ManualResetEvent ToolCanceled { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.manualresetevent\" data-linktype=\"relative-path\">ManualResetEvent</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ToolExe\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ToolExe_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolExe</div>        \r\n          </div>\r\n    \r\n            <p>Projects may set this to override a task&#39;s ToolName. Tasks may override this to prevent that.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ToolExe { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ToolName\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ToolName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the executable file to run.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract string ToolName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the executable file to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> that runs <a href=\"../Topic/Ilasm.exe%20(IL%20Assembler).md\" data-linktype=\"relative-path\">Ilasm.exe (IL Assembler)</a>. The <a class=\"xref\" href=\"microsoft.build.utilities.commandlinebuilder\" data-linktype=\"relative-path\">CommandLineBuilder</a>, <a class=\"xref\" href=\"microsoft.build.utilities.toollocationhelper\" data-linktype=\"relative-path\">ToolLocationHelper</a>, and <a class=\"xref\" href=\"microsoft.build.utilities.tasklogginghelper\" data-linktype=\"relative-path\">TaskLoggingHelper</a> classes are used to generate the information needed to run the task.  </p>\n<pre><code class=\"lang-cs\" name=\"msbuild_ToolTask#1\">using System;\nusing System.Collections;\nusing System.Text;\nusing Microsoft.Build.Utilities;\nusing Microsoft.Build.Framework;\n\nnamespace MSBuildTasks\n{\n    /// &lt;summary&gt;\n    /// A very simple and incomplete ToolTask to wrap the ILASM.EXE tool.\n    /// &lt;/summary&gt;\n    public class ILAsm : ToolTask\n    {\n        #region Member Data\n        /// &lt;summary&gt;\n        /// Gets the collection of parameters used by the task class.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;Parameter bag.&lt;/value&gt;\n        protected internal Hashtable Bag\n        {\n            get\n            {\n                return bag;\n            }\n        }\n\n        private Hashtable bag = new Hashtable();\n        #endregion\n\n        #region ILAsm Task Properties\n        /// &lt;summary&gt;\n        /// The Source file that is to be compled (.il)\n        /// &lt;/summary&gt;\n        public ITaskItem Source\n        {\n            get { return Bag[&quot;Source&quot;] as ITaskItem; }\n            set { Bag[&quot;Source&quot;] = value; }\n        }\n        /// &lt;summary&gt;\n        /// Either EXE or DLL indicating the assembly type to be generated\n        /// &lt;/summary&gt;\n        public string TargetType\n        {\n            get { return Bag[&quot;TargetType&quot;] as string; }\n            set { Bag[&quot;TargetType&quot;] = value; }\n        }\n        #endregion\n\n        #region ToolTask Members\n        protected override string ToolName\n        {\n            get { return &quot;ILAsm.exe&quot;; }\n        }\n\n        /// &lt;summary&gt;\n        /// Use ToolLocationHelper to find ILASM.EXE in the Framework directory\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected override string GenerateFullPathToTool()\n        {\n            // Ask ToolLocationHelper to find ILASM.EXE - it will look in the latest framework directory available\n            return ToolLocationHelper.GetPathToDotNetFrameworkFile(ToolName, TargetDotNetFrameworkVersion.VersionLatest);\n        }\n        #endregion\n\n        #region ILAsm Task Members\n        /// &lt;summary&gt;\n        /// Construct the command line from the task properties by using the CommandLineBuilder\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected override string GenerateCommandLineCommands()\n        {\n            CommandLineBuilder builder = new CommandLineBuilder();\n\n            // We don&#39;t need the tool&#39;s logo information shown\n            builder.AppendSwitch(&quot;/nologo&quot;);\n\n            string targetType = Bag[&quot;TargetType&quot;] as string;\n            // Be explicit with our switches\n            if (targetType != null)\n            {\n                if (String.Compare(targetType, &quot;DLL&quot;, true) == 0)\n                {\n                    builder.AppendSwitch(&quot;/DLL&quot;);\n                }\n                else if (String.Compare(targetType, &quot;EXE&quot;, true) == 0)\n                {\n                    builder.AppendSwitch(&quot;/EXE&quot;);\n                }\n                else\n                {\n                    Log.LogWarning(&quot;Invalid TargetType (valid values are DLL and EXE) specified: {0}&quot;, targetType);\n                }\n            }\n\n            // Add the filename that we want the tool to process\n            builder.AppendFileNameIfNotNull(Bag[&quot;Source&quot;] as ITaskItem);\n\n            // Log a High importance message stating the file that we are assembling\n            Log.LogMessage(MessageImportance.High, &quot;Assembling {0}&quot;, Bag[&quot;Source&quot;]);\n\n            // We have all of our switches added, return the commandline as a string\n            return builder.ToString();\n        }\n        #endregion\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"msbuild_ToolTask#1\">Imports System\nImports System.Collections\nImports System.Text\nImports Microsoft.Build.Utilities\nImports Microsoft.Build.Framework\n\nNamespace MSBuildTasks\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; A very simple and incomplete ToolTask to wrap the ILASM.EXE tool.\n    &#39;&#39;&#39; &lt;/summary&gt;\n    Public Class ILAsm\n        Inherits ToolTask\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Parameter bag.\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Friend ReadOnly Property Bag() As Hashtable\n            Get\n                Return propertyBag\n            End Get\n        End Property\n\n        Private propertyBag As New Hashtable()\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; The Source file that is to be compled (.il)\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Public Property [Source]() As ITaskItem\n            Get\n                Return Bag(&quot;Source&quot;)\n            End Get\n            Set(ByVal value As ITaskItem)\n                Bag(&quot;Source&quot;) = value\n            End Set\n        End Property\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Either EXE or DLL indicating the assembly type to be generated\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Public Property TargetType() As String\n            Get\n                Return Bag(&quot;TargetType&quot;)\n            End Get\n            Set(ByVal value As String)\n                Bag(&quot;TargetType&quot;) = value\n            End Set\n        End Property &#39;\n\n        Protected Overrides ReadOnly Property ToolName() As String\n            Get\n                Return &quot;ILAsm.exe&quot;\n            End Get\n        End Property\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Use ToolLocationHelper to find ILASM.EXE in the Framework directory\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Overrides Function GenerateFullPathToTool() As String\n            &#39; Ask ToolLocationHelper to find ILASM.EXE - it will look in the latest framework directory available\n            Return ToolLocationHelper.GetPathToDotNetFrameworkFile(ToolName, TargetDotNetFrameworkVersion.VersionLatest)\n        End Function\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Construct the command line from the task properties by using the CommandLineBuilder\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Overrides Function GenerateCommandLineCommands() As String\n            Dim builder As New CommandLineBuilder()\n\n            &#39; We don&#39;t need the tool&#39;s logo information shown\n            builder.AppendSwitch(&quot;/nologo&quot;)\n\n            Dim targetType As String = Bag(&quot;TargetType&quot;)\n            &#39; Be explicit with our switches\n            If Not (targetType Is Nothing) Then\n                If [String].Compare(targetType, &quot;DLL&quot;, True) = 0 Then\n                    builder.AppendSwitch(&quot;/DLL&quot;)\n                ElseIf [String].Compare(targetType, &quot;EXE&quot;, True) = 0 Then\n                    builder.AppendSwitch(&quot;/EXE&quot;)\n                Else\n                    Log.LogWarning(&quot;Invalid TargetType (valid values are DLL and EXE) specified: {0}&quot;, targetType)\n                End If\n            End If\n            &#39; Add the filename that we want the tool to process\n            builder.AppendFileNameIfNotNull(Bag(&quot;Source&quot;))\n\n            &#39; Log a High importance message stating the file that we are assembling\n            Log.LogMessage(MessageImportance.High, &quot;Assembling {0}&quot;, Bag(&quot;Source&quot;))\n\n            &#39; We have all of our switches added, return the commandline as a string\n            Return builder.ToString()\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ToolPath\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ToolPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the path of the executable file to run.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToolPath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The path of the file to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_UseCommandProcessor\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_UseCommandProcessor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseCommandProcessor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UseCommandProcessor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>If true, the tool task will create a batch file for the command-line and execute that using the command-processor. If false the tool task will execute the command directly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_YieldDuringToolExecution\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_YieldDuringToolExecution_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">YieldDuringToolExecution</div>        \r\n          </div>\r\n    \r\n            <p>Indicates if the task will yield the node during tool execution.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool YieldDuringToolExecution { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>True when the task will yield the node during tool execution.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_CallHostObjectToExecute\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_CallHostObjectToExecute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CallHostObjectToExecute()</div>        \r\n          </div>\r\n    \r\n            <p>Calls the host object to perform the work of the task.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool CallHostObjectToExecute ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the method was successfule; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_Cancel\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_Cancel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cancel()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Cancel ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_DeleteTempFile_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_DeleteTempFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteTempFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the specified temporary file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void DeleteTempFile (string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the temporary file to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the delete operation fails for any reason (such as if a file is locked by antivirus software), then this method logs a warning rather than throwing an exception, which would cause the build to fail.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_Execute\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_Execute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Execute()</div>        \r\n          </div>\r\n    \r\n            <p>Runs the exectuable file with the specified task parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Execute ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the task runs successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ExecuteTool_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ExecuteTool_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteTool(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a temporoary response (.rsp) file and runs the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathToTool</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the executable file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>responseFileCommands</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The command line arguments to place in the .rsp file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandLineCommands</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The command line arguments to pass directly to the executable file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_GenerateCommandLineCommands\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_GenerateCommandLineCommands_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateCommandLineCommands()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string value containing the command line arguments to pass directly to the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GenerateCommandLineCommands ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string value containing the command line arguments to pass directly to the executable file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called after <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_ValidateParameters_\" data-linktype=\"relative-path\">ValidateParameters</a> and <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_SkipTaskExecution_\" data-linktype=\"relative-path\">SkipTaskExecution</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> that runs <a href=\"../Topic/Ilasm.exe%20(IL%20Assembler).md\" data-linktype=\"relative-path\">Ilasm.exe (IL Assembler)</a>. The <a class=\"xref\" href=\"microsoft.build.utilities.commandlinebuilder\" data-linktype=\"relative-path\">CommandLineBuilder</a>, <a class=\"xref\" href=\"microsoft.build.utilities.toollocationhelper\" data-linktype=\"relative-path\">ToolLocationHelper</a>, and <a class=\"xref\" href=\"microsoft.build.utilities.tasklogginghelper\" data-linktype=\"relative-path\">TaskLoggingHelper</a> classes are used to generate the information needed to run the task.  </p>\n<pre><code class=\"lang-cs\" name=\"msbuild_ToolTask#1\">using System;\nusing System.Collections;\nusing System.Text;\nusing Microsoft.Build.Utilities;\nusing Microsoft.Build.Framework;\n\nnamespace MSBuildTasks\n{\n    /// &lt;summary&gt;\n    /// A very simple and incomplete ToolTask to wrap the ILASM.EXE tool.\n    /// &lt;/summary&gt;\n    public class ILAsm : ToolTask\n    {\n        #region Member Data\n        /// &lt;summary&gt;\n        /// Gets the collection of parameters used by the task class.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;Parameter bag.&lt;/value&gt;\n        protected internal Hashtable Bag\n        {\n            get\n            {\n                return bag;\n            }\n        }\n\n        private Hashtable bag = new Hashtable();\n        #endregion\n\n        #region ILAsm Task Properties\n        /// &lt;summary&gt;\n        /// The Source file that is to be compled (.il)\n        /// &lt;/summary&gt;\n        public ITaskItem Source\n        {\n            get { return Bag[&quot;Source&quot;] as ITaskItem; }\n            set { Bag[&quot;Source&quot;] = value; }\n        }\n        /// &lt;summary&gt;\n        /// Either EXE or DLL indicating the assembly type to be generated\n        /// &lt;/summary&gt;\n        public string TargetType\n        {\n            get { return Bag[&quot;TargetType&quot;] as string; }\n            set { Bag[&quot;TargetType&quot;] = value; }\n        }\n        #endregion\n\n        #region ToolTask Members\n        protected override string ToolName\n        {\n            get { return &quot;ILAsm.exe&quot;; }\n        }\n\n        /// &lt;summary&gt;\n        /// Use ToolLocationHelper to find ILASM.EXE in the Framework directory\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected override string GenerateFullPathToTool()\n        {\n            // Ask ToolLocationHelper to find ILASM.EXE - it will look in the latest framework directory available\n            return ToolLocationHelper.GetPathToDotNetFrameworkFile(ToolName, TargetDotNetFrameworkVersion.VersionLatest);\n        }\n        #endregion\n\n        #region ILAsm Task Members\n        /// &lt;summary&gt;\n        /// Construct the command line from the task properties by using the CommandLineBuilder\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected override string GenerateCommandLineCommands()\n        {\n            CommandLineBuilder builder = new CommandLineBuilder();\n\n            // We don&#39;t need the tool&#39;s logo information shown\n            builder.AppendSwitch(&quot;/nologo&quot;);\n\n            string targetType = Bag[&quot;TargetType&quot;] as string;\n            // Be explicit with our switches\n            if (targetType != null)\n            {\n                if (String.Compare(targetType, &quot;DLL&quot;, true) == 0)\n                {\n                    builder.AppendSwitch(&quot;/DLL&quot;);\n                }\n                else if (String.Compare(targetType, &quot;EXE&quot;, true) == 0)\n                {\n                    builder.AppendSwitch(&quot;/EXE&quot;);\n                }\n                else\n                {\n                    Log.LogWarning(&quot;Invalid TargetType (valid values are DLL and EXE) specified: {0}&quot;, targetType);\n                }\n            }\n\n            // Add the filename that we want the tool to process\n            builder.AppendFileNameIfNotNull(Bag[&quot;Source&quot;] as ITaskItem);\n\n            // Log a High importance message stating the file that we are assembling\n            Log.LogMessage(MessageImportance.High, &quot;Assembling {0}&quot;, Bag[&quot;Source&quot;]);\n\n            // We have all of our switches added, return the commandline as a string\n            return builder.ToString();\n        }\n        #endregion\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"msbuild_ToolTask#1\">Imports System\nImports System.Collections\nImports System.Text\nImports Microsoft.Build.Utilities\nImports Microsoft.Build.Framework\n\nNamespace MSBuildTasks\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; A very simple and incomplete ToolTask to wrap the ILASM.EXE tool.\n    &#39;&#39;&#39; &lt;/summary&gt;\n    Public Class ILAsm\n        Inherits ToolTask\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Parameter bag.\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Friend ReadOnly Property Bag() As Hashtable\n            Get\n                Return propertyBag\n            End Get\n        End Property\n\n        Private propertyBag As New Hashtable()\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; The Source file that is to be compled (.il)\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Public Property [Source]() As ITaskItem\n            Get\n                Return Bag(&quot;Source&quot;)\n            End Get\n            Set(ByVal value As ITaskItem)\n                Bag(&quot;Source&quot;) = value\n            End Set\n        End Property\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Either EXE or DLL indicating the assembly type to be generated\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Public Property TargetType() As String\n            Get\n                Return Bag(&quot;TargetType&quot;)\n            End Get\n            Set(ByVal value As String)\n                Bag(&quot;TargetType&quot;) = value\n            End Set\n        End Property &#39;\n\n        Protected Overrides ReadOnly Property ToolName() As String\n            Get\n                Return &quot;ILAsm.exe&quot;\n            End Get\n        End Property\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Use ToolLocationHelper to find ILASM.EXE in the Framework directory\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Overrides Function GenerateFullPathToTool() As String\n            &#39; Ask ToolLocationHelper to find ILASM.EXE - it will look in the latest framework directory available\n            Return ToolLocationHelper.GetPathToDotNetFrameworkFile(ToolName, TargetDotNetFrameworkVersion.VersionLatest)\n        End Function\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Construct the command line from the task properties by using the CommandLineBuilder\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Overrides Function GenerateCommandLineCommands() As String\n            Dim builder As New CommandLineBuilder()\n\n            &#39; We don&#39;t need the tool&#39;s logo information shown\n            builder.AppendSwitch(&quot;/nologo&quot;)\n\n            Dim targetType As String = Bag(&quot;TargetType&quot;)\n            &#39; Be explicit with our switches\n            If Not (targetType Is Nothing) Then\n                If [String].Compare(targetType, &quot;DLL&quot;, True) = 0 Then\n                    builder.AppendSwitch(&quot;/DLL&quot;)\n                ElseIf [String].Compare(targetType, &quot;EXE&quot;, True) = 0 Then\n                    builder.AppendSwitch(&quot;/EXE&quot;)\n                Else\n                    Log.LogWarning(&quot;Invalid TargetType (valid values are DLL and EXE) specified: {0}&quot;, targetType)\n                End If\n            End If\n            &#39; Add the filename that we want the tool to process\n            builder.AppendFileNameIfNotNull(Bag(&quot;Source&quot;))\n\n            &#39; Log a High importance message stating the file that we are assembling\n            Log.LogMessage(MessageImportance.High, &quot;Assembling {0}&quot;, Bag(&quot;Source&quot;))\n\n            &#39; We have all of our switches added, return the commandline as a string\n            Return builder.ToString()\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_GenerateFullPathToTool\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_GenerateFullPathToTool_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateFullPathToTool()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the fully qualified path to the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract string GenerateFullPathToTool ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The fully qualified path to the executable file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the value of the <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_ToolName_\" data-linktype=\"relative-path\">ToolName</a> property if the tool is located in the system path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.utilities.tooltask\" data-linktype=\"relative-path\">ToolTask</a> that runs <a href=\"../Topic/Ilasm.exe%20(IL%20Assembler).md\" data-linktype=\"relative-path\">Ilasm.exe (IL Assembler)</a>. The <a class=\"xref\" href=\"microsoft.build.utilities.commandlinebuilder\" data-linktype=\"relative-path\">CommandLineBuilder</a>, <a class=\"xref\" href=\"microsoft.build.utilities.toollocationhelper\" data-linktype=\"relative-path\">ToolLocationHelper</a>, and <a class=\"xref\" href=\"microsoft.build.utilities.tasklogginghelper\" data-linktype=\"relative-path\">TaskLoggingHelper</a> classes are used to generate the information needed to run the task.  </p>\n<pre><code class=\"lang-cs\" name=\"msbuild_ToolTask#1\">using System;\nusing System.Collections;\nusing System.Text;\nusing Microsoft.Build.Utilities;\nusing Microsoft.Build.Framework;\n\nnamespace MSBuildTasks\n{\n    /// &lt;summary&gt;\n    /// A very simple and incomplete ToolTask to wrap the ILASM.EXE tool.\n    /// &lt;/summary&gt;\n    public class ILAsm : ToolTask\n    {\n        #region Member Data\n        /// &lt;summary&gt;\n        /// Gets the collection of parameters used by the task class.\n        /// &lt;/summary&gt;\n        /// &lt;value&gt;Parameter bag.&lt;/value&gt;\n        protected internal Hashtable Bag\n        {\n            get\n            {\n                return bag;\n            }\n        }\n\n        private Hashtable bag = new Hashtable();\n        #endregion\n\n        #region ILAsm Task Properties\n        /// &lt;summary&gt;\n        /// The Source file that is to be compled (.il)\n        /// &lt;/summary&gt;\n        public ITaskItem Source\n        {\n            get { return Bag[&quot;Source&quot;] as ITaskItem; }\n            set { Bag[&quot;Source&quot;] = value; }\n        }\n        /// &lt;summary&gt;\n        /// Either EXE or DLL indicating the assembly type to be generated\n        /// &lt;/summary&gt;\n        public string TargetType\n        {\n            get { return Bag[&quot;TargetType&quot;] as string; }\n            set { Bag[&quot;TargetType&quot;] = value; }\n        }\n        #endregion\n\n        #region ToolTask Members\n        protected override string ToolName\n        {\n            get { return &quot;ILAsm.exe&quot;; }\n        }\n\n        /// &lt;summary&gt;\n        /// Use ToolLocationHelper to find ILASM.EXE in the Framework directory\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected override string GenerateFullPathToTool()\n        {\n            // Ask ToolLocationHelper to find ILASM.EXE - it will look in the latest framework directory available\n            return ToolLocationHelper.GetPathToDotNetFrameworkFile(ToolName, TargetDotNetFrameworkVersion.VersionLatest);\n        }\n        #endregion\n\n        #region ILAsm Task Members\n        /// &lt;summary&gt;\n        /// Construct the command line from the task properties by using the CommandLineBuilder\n        /// &lt;/summary&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected override string GenerateCommandLineCommands()\n        {\n            CommandLineBuilder builder = new CommandLineBuilder();\n\n            // We don&#39;t need the tool&#39;s logo information shown\n            builder.AppendSwitch(&quot;/nologo&quot;);\n\n            string targetType = Bag[&quot;TargetType&quot;] as string;\n            // Be explicit with our switches\n            if (targetType != null)\n            {\n                if (String.Compare(targetType, &quot;DLL&quot;, true) == 0)\n                {\n                    builder.AppendSwitch(&quot;/DLL&quot;);\n                }\n                else if (String.Compare(targetType, &quot;EXE&quot;, true) == 0)\n                {\n                    builder.AppendSwitch(&quot;/EXE&quot;);\n                }\n                else\n                {\n                    Log.LogWarning(&quot;Invalid TargetType (valid values are DLL and EXE) specified: {0}&quot;, targetType);\n                }\n            }\n\n            // Add the filename that we want the tool to process\n            builder.AppendFileNameIfNotNull(Bag[&quot;Source&quot;] as ITaskItem);\n\n            // Log a High importance message stating the file that we are assembling\n            Log.LogMessage(MessageImportance.High, &quot;Assembling {0}&quot;, Bag[&quot;Source&quot;]);\n\n            // We have all of our switches added, return the commandline as a string\n            return builder.ToString();\n        }\n        #endregion\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"msbuild_ToolTask#1\">Imports System\nImports System.Collections\nImports System.Text\nImports Microsoft.Build.Utilities\nImports Microsoft.Build.Framework\n\nNamespace MSBuildTasks\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; A very simple and incomplete ToolTask to wrap the ILASM.EXE tool.\n    &#39;&#39;&#39; &lt;/summary&gt;\n    Public Class ILAsm\n        Inherits ToolTask\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Parameter bag.\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Friend ReadOnly Property Bag() As Hashtable\n            Get\n                Return propertyBag\n            End Get\n        End Property\n\n        Private propertyBag As New Hashtable()\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; The Source file that is to be compled (.il)\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Public Property [Source]() As ITaskItem\n            Get\n                Return Bag(&quot;Source&quot;)\n            End Get\n            Set(ByVal value As ITaskItem)\n                Bag(&quot;Source&quot;) = value\n            End Set\n        End Property\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Either EXE or DLL indicating the assembly type to be generated\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Public Property TargetType() As String\n            Get\n                Return Bag(&quot;TargetType&quot;)\n            End Get\n            Set(ByVal value As String)\n                Bag(&quot;TargetType&quot;) = value\n            End Set\n        End Property &#39;\n\n        Protected Overrides ReadOnly Property ToolName() As String\n            Get\n                Return &quot;ILAsm.exe&quot;\n            End Get\n        End Property\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Use ToolLocationHelper to find ILASM.EXE in the Framework directory\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Overrides Function GenerateFullPathToTool() As String\n            &#39; Ask ToolLocationHelper to find ILASM.EXE - it will look in the latest framework directory available\n            Return ToolLocationHelper.GetPathToDotNetFrameworkFile(ToolName, TargetDotNetFrameworkVersion.VersionLatest)\n        End Function\n\n        &#39;&#39;&#39; &lt;summary&gt;\n        &#39;&#39;&#39; Construct the command line from the task properties by using the CommandLineBuilder\n        &#39;&#39;&#39; &lt;/summary&gt;\n        Protected Overrides Function GenerateCommandLineCommands() As String\n            Dim builder As New CommandLineBuilder()\n\n            &#39; We don&#39;t need the tool&#39;s logo information shown\n            builder.AppendSwitch(&quot;/nologo&quot;)\n\n            Dim targetType As String = Bag(&quot;TargetType&quot;)\n            &#39; Be explicit with our switches\n            If Not (targetType Is Nothing) Then\n                If [String].Compare(targetType, &quot;DLL&quot;, True) = 0 Then\n                    builder.AppendSwitch(&quot;/DLL&quot;)\n                ElseIf [String].Compare(targetType, &quot;EXE&quot;, True) = 0 Then\n                    builder.AppendSwitch(&quot;/EXE&quot;)\n                Else\n                    Log.LogWarning(&quot;Invalid TargetType (valid values are DLL and EXE) specified: {0}&quot;, targetType)\n                End If\n            End If\n            &#39; Add the filename that we want the tool to process\n            builder.AppendFileNameIfNotNull(Bag(&quot;Source&quot;))\n\n            &#39; Log a High importance message stating the file that we are assembling\n            Log.LogMessage(MessageImportance.High, &quot;Assembling {0}&quot;, Bag(&quot;Source&quot;))\n\n            &#39; We have all of our switches added, return the commandline as a string\n            Return builder.ToString()\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_GenerateResponseFileCommands\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_GenerateResponseFileCommands_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateResponseFileCommands()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GenerateResponseFileCommands ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called after <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_ValidateParameters_\" data-linktype=\"relative-path\">ValidateParameters</a> and <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_SkipTaskExecution_\" data-linktype=\"relative-path\">SkipTaskExecution</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_GetProcessStartInfo_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_GetProcessStartInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProcessStartInfo(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the information required to spawn the process executing the tool.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathToTool</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the tool.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandLineCommands</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The command line commands.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>responseFileSwitch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The response file switch.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.processstartinfo\" data-linktype=\"relative-path\">ProcessStartInfo</a></div>\r\n                  </div>\r\n                  <p>The information required to start the process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_GetResponseFileSwitch_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_GetResponseFileSwitch_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetResponseFileSwitch(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetResponseFileSwitch (string responseFilePath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>responseFilePath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The full path to the temporary .rsp file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The command line switch used by the executable file to specifiy a response (.rsp) file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is only called if <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_GenerateResponseFileCommands_\" data-linktype=\"relative-path\">GenerateResponseFileCommands</a> returns a non-empty string value.  </p>\n<p> This method is called after <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_ValidateParameters_\" data-linktype=\"relative-path\">ValidateParameters</a>, <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_SkipTaskExecution_\" data-linktype=\"relative-path\">SkipTaskExecution</a> and <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_GenerateResponseFileCommands_\" data-linktype=\"relative-path\">GenerateResponseFileCommands</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_GetWorkingDirectory\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_GetWorkingDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetWorkingDirectory()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the directory in which to run the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetWorkingDirectory ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The directory in which to run the executable file, or a null reference (<code>Nothing</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vbprvb-md.md&quot; -->Visual Basic<!--END INCLUDE -->) if the executable file should be run in the current directory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is a method rather than a property so that derived classes (like Exec) can choose to expose a public WorkingDirectory property, and it would be confusing to have two properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_HandleTaskExecutionErrors\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_HandleTaskExecutionErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HandleTaskExecutionErrors()</div>        \r\n          </div>\r\n    \r\n            <p>Handles execution errors raised by the executable file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool HandleTaskExecutionErrors ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the method runs successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called only if the executable file returns a non-zero exit code.  </p>\n<p> The return value of this method is used as the return value of the task.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_InitializeHostObject\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_InitializeHostObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeHostObject()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the host object of the task.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.utilities.hostobjectinitializationstatus\" data-linktype=\"relative-path\">HostObjectInitializationStatus</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"microsoft.build.utilities.hostobjectinitializationstatus\" data-linktype=\"relative-path\">HostObjectInitializationStatus</a> of the host object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_LogEventsFromTextOutput_System_String_Microsoft_Build_Framework_MessageImportance_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_LogEventsFromTextOutput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogEventsFromTextOutput(String,MessageImportance)</div>        \r\n          </div>\r\n    \r\n            <p>Parses a single line of text to identify any errors or warnings in canonical format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleLine</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A single line of text for the method to parse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>messageImportance</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value of <a class=\"xref\" href=\"microsoft.build.framework.messageimportance\" data-linktype=\"relative-path\">MessageImportance</a> that indicates the importance level with which to log the message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_LogPathToTool_System_String_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_LogPathToTool_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogPathToTool(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Logs the tool name and path to all registered loggers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void LogPathToTool (string toolName, string pathToTool);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>toolName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The executable file name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathToTool</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the executable file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_LogToolCommand_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_LogToolCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogToolCommand(String)</div>        \r\n          </div>\r\n    \r\n            <p>Logs the starting point of the run to all registered loggers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void LogToolCommand (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A descriptive message to provide loggers, usually the command line and switches.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ResponseFileEscape_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ResponseFileEscape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResponseFileEscape(String)</div>        \r\n          </div>\r\n    \r\n            <p>Overridable method to escape the content of the response file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string ResponseFileEscape (string responseString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>responseString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The response string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the response string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_SkipTaskExecution\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_SkipTaskExecution_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SkipTaskExecution()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether task execution should be skipped.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool SkipTaskExecution ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to skip task execution; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called after <a class=\"xref\" href=\"microsoft.build.utilities.tooltask#Microsoft_Build_Utilities_ToolTask_ValidateParameters_\" data-linktype=\"relative-path\">ValidateParameters</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_Utilities_ToolTask_ValidateParameters\">\r\n    \r\n            <a id=\"Microsoft_Build_Utilities_ToolTask_ValidateParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateParameters()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether all task paratmeters are valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ValidateParameters ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if all task parameters are valid; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Build.Utilities.ToolTask.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Build.Utilities.ToolTask.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask..ctor\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.Cancel\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.DeleteTempFile\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.EchoOff\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.EnvironmentOverride\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.EnvironmentVariables\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.Execute\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ExecuteTool\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ExitCode\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.HasLoggedErrors\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.InitializeHostObject\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.LogPathToTool\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.LogToolCommand\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ResponseFileEscape\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.SkipTaskExecution\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardErrorImportance\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardOutputImportance\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.Timeout\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ToolCanceled\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ToolExe\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ToolName\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ToolPath\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.UseCommandProcessor\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.ValidateParameters\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution\">\r\n<meta name=\"APILocation\" content=\"Microsoft.Build.Utilities.dll\">\r\n<meta name=\"APILocation\" content=\"Microsoft.Build.Utilities.v3.5.dll\">\r\n<meta name=\"APILocation\" content=\"Microsoft.Build.Utilities.v4.0.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0c9a36d7-2f93-5038-de55-f5ec7a82c718\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\Microsoft.Build.Utilities\\ToolTask.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"When overridden in a derived form, provides functionality for a task that wraps a command line tool.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.Build.Utilities/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Build.Utilities.ToolTask\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Build.Utilities.ToolTask.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Build.Utilities.ToolTask.yml","open_to_public_contributors":true,"api_name":["Microsoft.Build.Utilities.ToolTask","Microsoft.Build.Utilities.ToolTask..ctor","Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute","Microsoft.Build.Utilities.ToolTask.Cancel","Microsoft.Build.Utilities.ToolTask.DeleteTempFile","Microsoft.Build.Utilities.ToolTask.EchoOff","Microsoft.Build.Utilities.ToolTask.EnvironmentOverride","Microsoft.Build.Utilities.ToolTask.EnvironmentVariables","Microsoft.Build.Utilities.ToolTask.Execute","Microsoft.Build.Utilities.ToolTask.ExecuteTool","Microsoft.Build.Utilities.ToolTask.ExitCode","Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands","Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool","Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands","Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo","Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch","Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory","Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors","Microsoft.Build.Utilities.ToolTask.HasLoggedErrors","Microsoft.Build.Utilities.ToolTask.InitializeHostObject","Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput","Microsoft.Build.Utilities.ToolTask.LogPathToTool","Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError","Microsoft.Build.Utilities.ToolTask.LogToolCommand","Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding","Microsoft.Build.Utilities.ToolTask.ResponseFileEscape","Microsoft.Build.Utilities.ToolTask.SkipTaskExecution","Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding","Microsoft.Build.Utilities.ToolTask.StandardErrorImportance","Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse","Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance","Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding","Microsoft.Build.Utilities.ToolTask.StandardOutputImportance","Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse","Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance","Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout","Microsoft.Build.Utilities.ToolTask.Timeout","Microsoft.Build.Utilities.ToolTask.ToolCanceled","Microsoft.Build.Utilities.ToolTask.ToolExe","Microsoft.Build.Utilities.ToolTask.ToolName","Microsoft.Build.Utilities.ToolTask.ToolPath","Microsoft.Build.Utilities.ToolTask.UseCommandProcessor","Microsoft.Build.Utilities.ToolTask.ValidateParameters","Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution"],"api_location":["Microsoft.Build.Utilities.dll","Microsoft.Build.Utilities.v3.5.dll","Microsoft.Build.Utilities.v4.0.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Build.Utilities.ToolTask","Microsoft::Build::Utilities::ToolTask","Microsoft.Build.Utilities.ToolTask.#ctor","Microsoft::Build::Utilities::ToolTask::#ctor","Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute","Microsoft::Build::Utilities::ToolTask::CallHostObjectToExecute","Microsoft.Build.Utilities.ToolTask.Cancel","Microsoft::Build::Utilities::ToolTask::Cancel","Microsoft.Build.Utilities.ToolTask.DeleteTempFile","Microsoft::Build::Utilities::ToolTask::DeleteTempFile","Microsoft.Build.Utilities.ToolTask.EchoOff","Microsoft::Build::Utilities::ToolTask::EchoOff","Microsoft.Build.Utilities.ToolTask.EnvironmentOverride","Microsoft::Build::Utilities::ToolTask::EnvironmentOverride","Microsoft.Build.Utilities.ToolTask.EnvironmentVariables","Microsoft::Build::Utilities::ToolTask::EnvironmentVariables","Microsoft.Build.Utilities.ToolTask.Execute","Microsoft::Build::Utilities::ToolTask::Execute","Microsoft.Build.Utilities.ToolTask.ExecuteTool","Microsoft::Build::Utilities::ToolTask::ExecuteTool","Microsoft.Build.Utilities.ToolTask.ExitCode","Microsoft::Build::Utilities::ToolTask::ExitCode","Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands","Microsoft::Build::Utilities::ToolTask::GenerateCommandLineCommands","Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool","Microsoft::Build::Utilities::ToolTask::GenerateFullPathToTool","Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands","Microsoft::Build::Utilities::ToolTask::GenerateResponseFileCommands","Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo","Microsoft::Build::Utilities::ToolTask::GetProcessStartInfo","Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch","Microsoft::Build::Utilities::ToolTask::GetResponseFileSwitch","Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory","Microsoft::Build::Utilities::ToolTask::GetWorkingDirectory","Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors","Microsoft::Build::Utilities::ToolTask::HandleTaskExecutionErrors","Microsoft.Build.Utilities.ToolTask.HasLoggedErrors","Microsoft::Build::Utilities::ToolTask::HasLoggedErrors","Microsoft.Build.Utilities.ToolTask.InitializeHostObject","Microsoft::Build::Utilities::ToolTask::InitializeHostObject","Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput","Microsoft::Build::Utilities::ToolTask::LogEventsFromTextOutput","Microsoft.Build.Utilities.ToolTask.LogPathToTool","Microsoft::Build::Utilities::ToolTask::LogPathToTool","Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError","Microsoft::Build::Utilities::ToolTask::LogStandardErrorAsError","Microsoft.Build.Utilities.ToolTask.LogToolCommand","Microsoft::Build::Utilities::ToolTask::LogToolCommand","Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding","Microsoft::Build::Utilities::ToolTask::ResponseFileEncoding","Microsoft.Build.Utilities.ToolTask.ResponseFileEscape","Microsoft::Build::Utilities::ToolTask::ResponseFileEscape","Microsoft.Build.Utilities.ToolTask.SkipTaskExecution","Microsoft::Build::Utilities::ToolTask::SkipTaskExecution","Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding","Microsoft::Build::Utilities::ToolTask::StandardErrorEncoding","Microsoft.Build.Utilities.ToolTask.StandardErrorImportance","Microsoft::Build::Utilities::ToolTask::StandardErrorImportance","Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse","Microsoft::Build::Utilities::ToolTask::StandardErrorImportanceToUse","Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance","Microsoft::Build::Utilities::ToolTask::StandardErrorLoggingImportance","Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding","Microsoft::Build::Utilities::ToolTask::StandardOutputEncoding","Microsoft.Build.Utilities.ToolTask.StandardOutputImportance","Microsoft::Build::Utilities::ToolTask::StandardOutputImportance","Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse","Microsoft::Build::Utilities::ToolTask::StandardOutputImportanceToUse","Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance","Microsoft::Build::Utilities::ToolTask::StandardOutputLoggingImportance","Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout","Microsoft::Build::Utilities::ToolTask::TaskProcessTerminationTimeout","Microsoft.Build.Utilities.ToolTask.Timeout","Microsoft::Build::Utilities::ToolTask::Timeout","Microsoft.Build.Utilities.ToolTask.ToolCanceled","Microsoft::Build::Utilities::ToolTask::ToolCanceled","Microsoft.Build.Utilities.ToolTask.ToolExe","Microsoft::Build::Utilities::ToolTask::ToolExe","Microsoft.Build.Utilities.ToolTask.ToolName","Microsoft::Build::Utilities::ToolTask::ToolName","Microsoft.Build.Utilities.ToolTask.ToolPath","Microsoft::Build::Utilities::ToolTask::ToolPath","Microsoft.Build.Utilities.ToolTask.UseCommandProcessor","Microsoft::Build::Utilities::ToolTask::UseCommandProcessor","Microsoft.Build.Utilities.ToolTask.ValidateParameters","Microsoft::Build::Utilities::ToolTask::ValidateParameters","Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution","Microsoft::Build::Utilities::ToolTask::YieldDuringToolExecution"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0c9a36d7-2f93-5038-de55-f5ec7a82c718","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\Microsoft.Build.Utilities\\ToolTask.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.Build.Utilities/ToolTask.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ToolTask class | Microsoft Docs","_op_ogTitle":"ToolTask class","description":"When overridden in a derived form, provides functionality for a task that wraps a command line tool.\n","toc_asset_id":"_splitted/Microsoft.Build.Utilities/toc.json","toc_rel":"_splitted/Microsoft.Build.Utilities/toc.json","source_url":"","ms.assetid":"Microsoft.Build.Utilities.ToolTask","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.build.utilities.tooltask","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.build.utilities.tooltask","fileRelativePath":"Microsoft.Build.Utilities.ToolTask.html"},"themesRelativePathToOutputRoot":"_themes/"}