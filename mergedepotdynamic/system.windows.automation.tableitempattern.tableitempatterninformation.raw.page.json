{"content":"    \r\n    <h1 id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation\">\r\n      <span class=\"lang-csharp\">TableItemPattern+TableItemPatternInformation</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to the property values of a <a class=\"xref\" href=\"system.windows.automation.tableitempattern\" data-linktype=\"relative-path\">TableItemPattern</a> object using its <span class=\"xref\">stem.Windows.Automation.TableItemPattern.Current*</span> or <span class=\"xref\">stem.Windows.Automation.TableItemPattern.Cached*</span> accessors.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct TableItemPattern.TableItemPatternInformation</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TableItemPattern+TableItemPatternInformation</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_Column\" data-linktype=\"self-bookmark\">Column</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ordinal number of the column containing the table cell or item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_ColumnSpan\" data-linktype=\"self-bookmark\">ColumnSpan</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of columns spanned by a table cell or item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_ContainingGrid\" data-linktype=\"self-bookmark\">ContainingGrid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a UI Automation element that supports the GridPattern control pattern and represents the table cell or item container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_Row\" data-linktype=\"self-bookmark\">Row</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ordinal number of the row containing the table cell or item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_RowSpan\" data-linktype=\"self-bookmark\">RowSpan</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of rows spanned by a table cell or item.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_GetColumnHeaderItems\" data-linktype=\"self-bookmark\">GetColumnHeaderItems()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves all the column headers associated with a table item or cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TableItemPattern_TableItemPatternInformation_GetRowHeaderItems\" data-linktype=\"self-bookmark\">GetRowHeaderItems()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves all the row headers associated with a table item or cell.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_Column\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_Column_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Column</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ordinal number of the column containing the table cell or item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Column { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A zero-based ordinal number representing the column containing the table cell or item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_AutomationFocusChangedEvent\" data-linktype=\"relative-path\">AutomationFocusChangedEvent</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_ColumnSpan\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_ColumnSpan_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnSpan</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of columns spanned by a table cell or item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnSpan { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of columns spanned. The default value is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_AutomationFocusChangedEvent\" data-linktype=\"relative-path\">AutomationFocusChangedEvent</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_ContainingGrid\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_ContainingGrid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContainingGrid</div>        \r\n          </div>\r\n    \r\n            <p>Gets a UI Automation element that supports the GridPattern control pattern and represents the table cell or item container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.AutomationElement ContainingGrid { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </div>\r\n                  <p>A UI Automation element that supports the GridPattern control pattern and represents the table cell or item container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_Row\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_Row_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Row</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ordinal number of the row containing the table cell or item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Row { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A zero-based ordinal number representing the column containing the table cell or item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_AutomationFocusChangedEvent\" data-linktype=\"relative-path\">AutomationFocusChangedEvent</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_RowSpan\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_RowSpan_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowSpan</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of rows spanned by a table cell or item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowSpan { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of columns spanned. The default value is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_AutomationFocusChangedEvent\" data-linktype=\"relative-path\">AutomationFocusChangedEvent</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_GetColumnHeaderItems\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_GetColumnHeaderItems_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetColumnHeaderItems()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves all the column headers associated with a table item or cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.AutomationElement[] GetColumnHeaderItems ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>[]</div>\r\n                  </div>\r\n                  <p>A collection of column header elements. The default is an empty array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_GetRowHeaderItems\">\r\n    \r\n            <a id=\"System_Windows_Automation_TableItemPattern_TableItemPatternInformation_GetRowHeaderItems_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRowHeaderItems()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves all the row headers associated with a table item or cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.AutomationElement[] GetRowHeaderItems ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>[]</div>\r\n                  </div>\r\n                  <p>A collection of row header elements. The default is an empty array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> listener is declared to track the traversal of table items within a table container. Item properties are recorded upon each focus changed event.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up table item event listeners.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// The event listener is essentially a focus change listener.\n/// Since this is a global desktop listener, a filter would be required \n/// to ignore focus change events outside the table.\n/// &lt;/remarks&gt;\n///--------------------------------------------------------------------\nprivate void SetTableItemEventListeners()\n{\n    AutomationFocusChangedEventHandler tableItemFocusChangedListener =\n        new AutomationFocusChangedEventHandler(OnTableItemFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(\n        tableItemFocusChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up table item event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; The event listener is essentially a focus change listener.\n&#39;&#39;&#39; Since this is a global desktop listener, a filter would be required \n&#39;&#39;&#39; to ignore focus change events outside the table.\n&#39;&#39;&#39; &lt;/remarks&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetTableItemEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim tableItemFocusChangedListener As AutomationFocusChangedEventHandler = _\n    AddressOf OnTableItemFocusChange\n    Automation.AddAutomationFocusChangedEventHandler( _\n    tableItemFocusChangedListener)\n\nEnd Sub &#39;SetTableItemEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATableItemPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for table item focus change.\n/// Can be used to track traversal of individual table items \n/// within a table.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnTableItemFocusChange(\n    object src, AutomationFocusChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    // Get a TableItemPattern from the source of the event.\n    TableItemPattern tableItemPattern =\n        GetTableItemPattern(sourceElement);\n\n    if (tableItemPattern == null)\n    {\n        return;\n    }\n\n    // Get a TablePattern from the container of the current element.\n    TablePattern tablePattern =\n        GetTablePattern(tableItemPattern.Current.ContainingGrid);\n\n    if (tablePattern == null)\n    {\n        return;\n    }\n\n    AutomationElement tableItem = null;\n    try\n    {\n        tableItem = tablePattern.GetItem(\n        tableItemPattern.Current.Row,\n        tableItemPattern.Current.Column);\n    }\n    catch (ArgumentOutOfRangeException)\n    {\n        // If the requested row coordinate is larger than the RowCount \n        // or the column coordinate is larger than the ColumnCount.\n        // -- OR --\n        // If either of the requested row or column coordinates \n        // is less than zero.\n        // TO DO: error handling.\n    }\n\n    // Further event processing can be done at this point.\n    // For the purposes of this sample we can just record item properties.\n    string controlType = \n        tableItem.Current.ControlType.LocalizedControlType;\n    AutomationElement[] columnHeaders = \n        tableItemPattern.Current.GetColumnHeaderItems();\n    AutomationElement[] rowHeaders = \n        tableItemPattern.Current.GetRowHeaderItems();\n    int itemRow = tableItemPattern.Current.Row;\n    int itemColumn = tableItemPattern.Current.Column;\n    int itemRowSpan = tableItemPattern.Current.RowSpan;\n    int itemColumnSpan = tableItemPattern.Current.ColumnSpan;\n}\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles the application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATableItemPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for table item focus change.\n&#39;&#39;&#39; Can be used to track traversal of individual table items \n&#39;&#39;&#39; within a table.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnTableItemFocusChange( _\nByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    &#39; Get a TableItemPattern from the source of the event.\n    Dim tableItemPattern As TableItemPattern = _\n    GetTableItemPattern(sourceElement)\n\n    If tableItemPattern Is Nothing Then\n        Return\n    End If\n\n    &#39; Get a TablePattern from the container of the current element.\n    Dim tablePattern As TablePattern = _\n    GetTablePattern(tableItemPattern.Current.ContainingGrid)\n\n    If tablePattern Is Nothing Then\n        Return\n    End If\n\n    Dim tableItem As AutomationElement = Nothing\n    Try\n        tableItem = tablePattern.GetItem( _\n        tableItemPattern.Current.Row, tableItemPattern.Current.Column)\n\n    Catch exc As ArgumentOutOfRangeException\n        &#39; If the requested row coordinate is larger than the RowCount \n        &#39; or the column coordinate is larger than the ColumnCount.\n        &#39; -- OR --\n        &#39; If either of the requested row or column coordinates \n        &#39; is less than zero.\n        &#39; TO DO: error handling.\n    End Try\n\n    &#39; Further event processing can be done at this point.\n    &#39; For the purposes of this sample we can just record item properties.\n    Dim controlType As String = _\n        tableItem.Current.ControlType.LocalizedControlType\n    Dim columnHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetColumnHeaderItems()\n    Dim rowHeaders As AutomationElement() = _\n    tableItemPattern.Current.GetRowHeaderItems()\n    Dim itemRow As Integer = tableItemPattern.Current.Row\n    Dim itemColumn As Integer = tableItemPattern.Current.Column\n    Dim itemRowSpan As Integer = tableItemPattern.Current.RowSpan\n    Dim itemColumnSpan As Integer = tableItemPattern.Current.ColumnSpan\n\nEnd Sub &#39;OnTableItemFocusChange\n\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles the application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit(ByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\n\nEnd Sub &#39;OnExit\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.TableItemPattern.TableItemPatternInformation.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.TableItemPattern.TableItemPatternInformation.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.Column\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.ColumnSpan\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.ContainingGrid\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.GetColumnHeaderItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.GetRowHeaderItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.Row\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TableItemPattern+TableItemPatternInformation.RowSpan\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4c4940d9-a137-282d-b9bd-e3e5cc21591d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the property values of a  object using its  or  accessors.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.TableItemPattern.TableItemPatternInformation\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.TableItemPattern.TableItemPatternInformation.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.TableItemPattern.TableItemPatternInformation.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.TableItemPattern+TableItemPatternInformation","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.Column","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.ColumnSpan","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.ContainingGrid","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.GetColumnHeaderItems","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.GetRowHeaderItems","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.Row","System.Windows.Automation.TableItemPattern+TableItemPatternInformation.RowSpan"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.TableItemPattern.TableItemPatternInformation","System::Windows::Automation::TableItemPattern::TableItemPatternInformation","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Column","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::Column","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ColumnSpan","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::ColumnSpan","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ContainingGrid","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::ContainingGrid","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetColumnHeaderItems","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::GetColumnHeaderItems","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetRowHeaderItems","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::GetRowHeaderItems","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Row","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::Row","System.Windows.Automation.TableItemPattern.TableItemPatternInformation.RowSpan","System::Windows::Automation::TableItemPattern::TableItemPatternInformation::RowSpan"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4c4940d9-a137-282d-b9bd-e3e5cc21591d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/TableItemPattern+TableItemPatternInformation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TableItemPattern+TableItemPatternInformation struct | Microsoft Docs","_op_ogTitle":"TableItemPattern+TableItemPatternInformation struct","description":"Provides access to the property values of a  object using its  or  accessors.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.TableItemPattern.TableItemPatternInformation","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.tableitempattern.tableitempatterninformation","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.tableitempattern.tableitempatterninformation","fileRelativePath":"System.Windows.Automation.TableItemPattern.TableItemPatternInformation.html"},"themesRelativePathToOutputRoot":"_themes/"}