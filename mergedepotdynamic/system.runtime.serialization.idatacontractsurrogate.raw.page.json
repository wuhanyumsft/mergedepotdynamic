{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_IDataContractSurrogate\">\r\n      <span class=\"lang-csharp\">IDataContractSurrogate</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the methods needed to substitute one type for another by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> during serialization, deserialization, and export and import of XML schema documents (XSD).</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IDataContractSurrogate</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use the IDataContractSurrogate when using the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations. For a sample application, see <a href=\"../Topic/DataContract%20Surrogate.md\" data-linktype=\"relative-path\">DataContract Surrogate</a>. For more information about data contracts, see <a href=\"../Topic/Using%20Data%20Contracts.md\" data-linktype=\"relative-path\">Using Data Contracts</a>.  </p>\n<p> At run time, you can find the specific <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> for any operation in a service by using the <a class=\"xref\" href=\"system.servicemodel.description.operationdescription\" data-linktype=\"relative-path\">OperationDescription</a> to find the <a class=\"xref\" href=\"system.servicemodel.description.datacontractserializeroperationbehavior\" data-linktype=\"relative-path\">DataContractSerializerOperationBehavior</a> instance. For more information about implementing the interface to create a surrogate, see <a href=\"../Topic/Data%20Contract%20Surrogates.md\" data-linktype=\"relative-path\">Data Contract Surrogates</a>.  </p>\n<p> You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the <a class=\"xref\" href=\"system.runtime.serialization.xsddatacontractexporter\" data-linktype=\"relative-path\">XsdDataContractExporter</a> and <a class=\"xref\" href=\"system.runtime.serialization.xsddatacontractimporter\" data-linktype=\"relative-path\">XsdDataContractImporter</a> classes. You can do so by assigning the IDataContractSurrogate to the <a class=\"xref\" href=\"system.runtime.serialization.exportoptions#System_Runtime_Serialization_ExportOptions_DataContractSurrogate_\" data-linktype=\"relative-path\">DataContractSurrogate</a> property of the <a class=\"xref\" href=\"system.runtime.serialization.exportoptions\" data-linktype=\"relative-path\">ExportOptions</a> class, or to the <a class=\"xref\" href=\"system.runtime.serialization.importoptions#System_Runtime_Serialization_ImportOptions_DataContractSurrogate_\" data-linktype=\"relative-path\">DataContractSurrogate</a> property of the <a class=\"xref\" href=\"system.runtime.serialization.importoptions\" data-linktype=\"relative-path\">ImportOptions</a> class.  For more information, see <a href=\"../Topic/Schema%20Import%20and%20Export.md\" data-linktype=\"relative-path\">Schema Import and Export</a>.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"self-bookmark\">GetCustomDataToExport(MemberInfo,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>During schema export operations, inserts annotations into the schema for non-null return values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_System_Type_System_Type_\" data-linktype=\"self-bookmark\">GetCustomDataToExport(Type,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>During schema export operations, inserts annotations into the schema for non-null return values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetDataContractType_System_Type_\" data-linktype=\"self-bookmark\">GetDataContractType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetDeserializedObject_System_Object_System_Type_\" data-linktype=\"self-bookmark\">GetDeserializedObject(Object,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>During deserialization, returns an object that is a substitute for the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetKnownCustomDataTypes_System_Collections_ObjectModel_Collection_System_Type__\" data-linktype=\"self-bookmark\">GetKnownCustomDataTypes(Collection&lt;Type&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the collection of known types to use for serialization and deserialization of the custom data objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetObjectToSerialize_System_Object_System_Type_\" data-linktype=\"self-bookmark\">GetObjectToSerialize(Object,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>During serialization, returns an object that substitutes the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_GetReferencedTypeOnImport_System_String_System_String_System_Object_\" data-linktype=\"self-bookmark\">GetReferencedTypeOnImport(String,String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>During schema import, returns the type referenced by the schema.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDataContractSurrogate_ProcessImportedType_System_CodeDom_CodeTypeDeclaration_System_CodeDom_CodeCompileUnit_\" data-linktype=\"self-bookmark\">ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the type that has been generated from the imported schema.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_System_Reflection_MemberInfo_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCustomDataToExport(MemberInfo,Type)</div>        \r\n          </div>\r\n    \r\n            <p>During schema export operations, inserts annotations into the schema for non-null return values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>memberInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that describes the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataContractType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An object that represents the annotation to be inserted into the XML schema definition.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_System_Type_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCustomDataToExport(Type,Type)</div>        \r\n          </div>\r\n    \r\n            <p>During schema export operations, inserts annotations into the schema for non-null return values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetCustomDataToExport (Type clrType, Type dataContractType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clrType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type to be replaced.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataContractType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data contract type to be annotated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An object that represents the annotation to be inserted into the XML schema definition.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetDataContractType_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetDataContractType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDataContractType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type GetDataContractType (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to substitute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to substitute for the <code>type</code> value. This type must be serializable by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>. For example, it must be marked with the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> attribute or other mechanisms that the serializer recognizes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the GetDataContractType method.  </p>\n<pre><code class=\"lang-vb\" name=\"IDataContractSurrogate#1\">    Public Function GetDataContractType(ByVal type As Type) As Type _\n       Implements IDataContractSurrogate.GetDataContractType\n        Console.WriteLine(&quot;GetDataContractType invoked&quot;)\n        Console.WriteLine(vbTab &amp; &quot;type name: {0}&quot;, type.Name)\n        &#39; &quot;Person&quot; will be serialized as &quot;PersonSurrogated&quot;\n        &#39; This method is called during serialization,\n        &#39; deserialization, and schema export.\n        If GetType(Person).IsAssignableFrom(type) Then\n            Console.WriteLine(vbTab &amp; &quot;returning PersonSurrogated&quot;)\n            Return GetType(PersonSurrogated)\n        End If\n        Return type\n\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"IDataContractSurrogate#1\">    public Type GetDataContractType(Type type) \n{\n        Console.WriteLine(&quot;GetDataContractType invoked&quot;);\n        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; type name: {0}&quot;, type.Name);\n        // &quot;Person&quot; will be serialized as &quot;PersonSurrogated&quot;\n        // This method is called during serialization,\n        // deserialization, and schema export.\n        if (typeof(Person).IsAssignableFrom(type)) \n{\nConsole.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; returning PersonSurrogated&quot;);\n            return typeof(PersonSurrogated);\n        }\n        return type;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetDeserializedObject_System_Object_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetDeserializedObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDeserializedObject(Object,Type)</div>        \r\n          </div>\r\n    \r\n            <p>During deserialization, returns an object that is a substitute for the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetDeserializedObject (object obj, Type targetType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The deserialized object to be substituted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that the substituted object should be assigned to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The substituted deserialized object. This object must be of a type that is serializable by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>. For example, it must be marked with the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> attribute or other mechanisms that the serializer recognizes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a simple implementation, use an if…then…else control structure to test whether the <code>obj</code> value is of the surrogated type. If so, transform it as necessary and return the substituted object. The substituted object can be a new instance or the same <code>obj</code> instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the GetDeserializedObject method.  </p>\n<pre><code class=\"lang-vb\" name=\"IDataContractSurrogate#3\">    Public Function GetDeserializedObject(ByVal obj As Object, _\n        ByVal targetType As Type) As Object Implements _\n        IDataContractSurrogate.GetDeserializedObject\n        Console.WriteLine(&quot;GetDeserializedObject invoked&quot;)\n        &#39; This method is called on deserialization.\n        &#39; If PersonSurrogated is being deserialized...\n        If TypeOf obj Is PersonSurrogated Then\n            Console.WriteLine(vbTab &amp; &quot;returning PersonSurrogated&quot;)\n            &#39;... use the XmlSerializer to do the actual deserialization.\n            Dim ps As PersonSurrogated = CType(obj, PersonSurrogated)\n            Dim xs As New XmlSerializer(GetType(Person))\n            Return CType(xs.Deserialize(New StringReader(ps.xmlData)), Person)\n        End If\n        Return obj\n\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"IDataContractSurrogate#3\">    public object GetDeserializedObject(Object obj , Type targetType) \n    {\n        Console.WriteLine(&quot;GetDeserializedObject invoked&quot;);\n        // This method is called on deserialization.\n        // If PersonSurrogated is being deserialized...\n        if (obj is PersonSurrogated)\n            {\n                //... use the XmlSerializer to do the actual deserialization.\n                PersonSurrogated ps = (PersonSurrogated)obj;\n                XmlSerializer xs = new XmlSerializer(typeof(Person));\n                return (Person)xs.Deserialize(new StringReader(ps.xmlData));\n            }\n            return obj;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetKnownCustomDataTypes_System_Collections_ObjectModel_Collection_System_Type__\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetKnownCustomDataTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetKnownCustomDataTypes(Collection&lt;Type&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the collection of known types to use for serialization and deserialization of the custom data objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection&lt;Type&gt; customDataTypes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>customDataTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <span class=\"xref\">stem.Collections.ObjectModel.Collection`1</span> of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to add known types to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is required during schema export or schema import only if annotations are inserted into the schema using the <a class=\"xref\" href=\"system.runtime.serialization.idatacontractsurrogate#System_Runtime_Serialization_IDataContractSurrogate_GetCustomDataToExport_\" data-linktype=\"relative-path\">GetCustomDataToExport</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetObjectToSerialize_System_Object_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetObjectToSerialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectToSerialize(Object,Type)</div>        \r\n          </div>\r\n    \r\n            <p>During serialization, returns an object that substitutes the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetObjectToSerialize (object obj, Type targetType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to substitute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that the substituted object should be assigned to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The substituted object that will be serialized. The object must be serializable by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>. For example, it must be marked with the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> attribute or other mechanisms that the serializer recognizes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method must not return <code>null</code> because on deserialization the data will be cast to type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the GetObjectToSerialize method.  </p>\n<pre><code class=\"lang-vb\" name=\"IDataContractSurrogate#2\">    Public Function GetObjectToSerialize(ByVal obj As Object, _\n        ByVal targetType As Type) As Object _\n        Implements IDataContractSurrogate.GetObjectToSerialize\n        Console.WriteLine(&quot;GetObjectToSerialize Invoked&quot;)\n        Console.WriteLine(vbTab &amp; &quot;type name: {0}&quot;, obj.ToString)\n        Console.WriteLine(vbTab &amp; &quot;target type: {0}&quot;, targetType.Name)\n        &#39; This method is called on serialization.\n        &#39; If Person is not being serialized...\n        If TypeOf obj Is Person Then\n            Console.WriteLine(vbTab &amp; &quot;returning PersonSurrogated&quot;)\n            &#39; ... use the XmlSerializer to perform the actual serialization.\n            Dim ps As New PersonSurrogated()\n            Dim xs As New XmlSerializer(GetType(Person))\n            Dim sw As New StringWriter()\n            xs.Serialize(sw, CType(obj, Person))\n            ps.xmlData = sw.ToString()\n            Return ps\n        End If\n        Return obj\n\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"IDataContractSurrogate#2\">public object GetObjectToSerialize(object obj, Type targetType)\n{ \n        Console.WriteLine(&quot;GetObjectToSerialize Invoked&quot;);\n        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; type name: {0}&quot;, obj.ToString());\n        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; target type: {0}&quot;, targetType.Name);\n        // This method is called on serialization.\n        // If Person is not being serialized...\n        if (obj is Person )\n        {\n            Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; returning PersonSurrogated&quot;);\n            // ... use the XmlSerializer to perform the actual serialization.\n            PersonSurrogated  ps = new PersonSurrogated();\n            XmlSerializer xs = new XmlSerializer(typeof(Person));\n            StringWriter sw = new StringWriter();\n            xs.Serialize(sw, (Person)obj );\n            ps.xmlData = sw.ToString();\n            return ps;\n        }\n        return obj;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_GetReferencedTypeOnImport_System_String_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_GetReferencedTypeOnImport_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetReferencedTypeOnImport(String,String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>During schema import, returns the type referenced by the schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the type in schema.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace of the type in schema.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>customData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to use for the referenced type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Null</code> should be returned if a CLR type does not exist for representing the schema type. This will cause a new type to be generated during schema import.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the GetReferencedTypeOnImport method.  </p>\n<pre><code class=\"lang-vb\" name=\"IDataContractSurrogate#4\">    Public Function GetReferencedTypeOnImport(ByVal typeName As String, _\n        ByVal typeNamespace As String, ByVal customData As Object) As Type _\n        Implements IDataContractSurrogate.GetReferencedTypeOnImport\n        Console.WriteLine(&quot;GetReferencedTypeOnImport invoked&quot;)\n        &#39; This method is called on schema import.\n        &#39; If a PersonSurrogated data contract is \n        &#39; in the specified namespace, do not create a new type for it \n        &#39; because there is already an existing type, &quot;Person&quot;.\n        Console.WriteLine(vbTab &amp; &quot;Type Name: {0}&quot;, typeName)\n\n        &#39;If typeNamespace.Equals(&quot;http://schemas.datacontract.org/2004/07/DCSurrogateSample&quot;) Then\n        If typeName.Equals(&quot;PersonSurrogated&quot;) Then\n            Console.WriteLine(&quot;Returning Person&quot;)\n            Return GetType(Person)\n        End If\n        &#39;End If\n        Return Nothing\n\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"IDataContractSurrogate#4\">    public Type GetReferencedTypeOnImport(string typeName,\n        string typeNamespace, object customData)\n    {\n        Console.WriteLine(&quot;GetReferencedTypeOnImport invoked&quot;);\n        // This method is called on schema import.\n        // If a PersonSurrogated data contract is \n        // in the specified namespace, do not create a new type for it \n        // because there is already an existing type, &quot;Person&quot;.\n        Console.WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; Type Name: {0}&quot;, typeName);\n        \n        if (typeName.Equals(&quot;PersonSurrogated&quot;) )\n        {\n            Console.WriteLine(&quot;Returning Person&quot;);\n            return typeof(Person);\n        }        \n        return null;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDataContractSurrogate_ProcessImportedType_System_CodeDom_CodeTypeDeclaration_System_CodeDom_CodeCompileUnit_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDataContractSurrogate_ProcessImportedType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the type that has been generated from the imported schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeDeclaration</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> to process that represents the type declaration generated during schema import.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compileUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> that contains the other code generated during schema import.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> that contains the processed type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The input <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> or other information in the <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> can be modified by the user in this method. If <code>null</code> is returned, it will cause the type to not be generated. If a new <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> is returned, it will replace the original type generated.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.IDataContractSurrogate.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.IDataContractSurrogate.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Serialization.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5c132c4b-9b3a-6e80-20d5-1b9fec488503\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the methods needed to substitute one type for another by the  during serialization, deserialization, and export and import of XML schema documents (XSD).\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.IDataContractSurrogate\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.IDataContractSurrogate.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.IDataContractSurrogate.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.IDataContractSurrogate","System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport","System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType","System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject","System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes","System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize","System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport","System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType"],"api_location":["System.Runtime.Serialization.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.IDataContractSurrogate","System::Runtime::Serialization::IDataContractSurrogate","System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport","System::Runtime::Serialization::IDataContractSurrogate::GetCustomDataToExport","System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType","System::Runtime::Serialization::IDataContractSurrogate::GetDataContractType","System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject","System::Runtime::Serialization::IDataContractSurrogate::GetDeserializedObject","System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes","System::Runtime::Serialization::IDataContractSurrogate::GetKnownCustomDataTypes","System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize","System::Runtime::Serialization::IDataContractSurrogate::GetObjectToSerialize","System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport","System::Runtime::Serialization::IDataContractSurrogate::GetReferencedTypeOnImport","System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType","System::Runtime::Serialization::IDataContractSurrogate::ProcessImportedType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5c132c4b-9b3a-6e80-20d5-1b9fec488503","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/IDataContractSurrogate.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDataContractSurrogate interface | Microsoft Docs","_op_ogTitle":"IDataContractSurrogate interface","description":"Provides the methods needed to substitute one type for another by the  during serialization, deserialization, and export and import of XML schema documents (XSD).\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.IDataContractSurrogate","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.idatacontractsurrogate","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.idatacontractsurrogate","fileRelativePath":"System.Runtime.Serialization.IDataContractSurrogate.html"},"themesRelativePathToOutputRoot":"_themes/"}