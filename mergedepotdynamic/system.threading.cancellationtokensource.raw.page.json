{"content":"    \r\n    <h1 id=\"System_Threading_CancellationTokenSource\">\r\n      <span class=\"lang-csharp\">CancellationTokenSource</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Signals to a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> that it should be canceled.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(false)]\npublic class CancellationTokenSource : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CancellationTokenSource</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Starting with the .NET Framework 4, the .NET Framework uses a unified model for cooperative cancellation of asynchronous or long-running synchronous operations that involves two objects:  </p>\n<ul>\n<li><p>A CancellationTokenSource object, which provides a cancellation token through its <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Token_\" data-linktype=\"relative-path\">Token</a> property and sends a cancellation message by calling its <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Cancel_\" data-linktype=\"relative-path\">Cancel</a> or <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_CancelAfter_\" data-linktype=\"relative-path\">CancelAfter</a> method.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> object, which indicates whether cancellation is requested.  </p>\n<p>The general pattern for implementing the cooperative cancellation model is:  </p>\n</li>\n<li><p>Instantiate a CancellationTokenSource object, which manages and sends cancellation notification to the individual cancellation tokens.  </p>\n</li>\n<li><p>Pass the token returned by the <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Token_\" data-linktype=\"relative-path\">Token</a> property to each task or thread that listens for cancellation.  </p>\n</li>\n<li><p>Call the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> method from operations that receive the cancellation token. Provide a mechanism for each task or thread to respond to a cancellation request. Whether you choose to cancel an operation, and exactly how you do it, depends on your application logic.  </p>\n</li>\n<li><p>Call the <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Cancel_\" data-linktype=\"relative-path\">Cancel</a> method to provide notification of cancellation. This sets the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> property on every copy of the cancellation token to <code>true</code>.  </p>\n</li>\n<li><p>Call the <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method when you are finished with the CancellationTokenSource object.  </p>\n<p>For more information, see <a href=\"../Topic/Cancellation%20in%20Managed%20Threads.md\" data-linktype=\"relative-path\">Cancellation in Managed Threads</a>.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using an instance of the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource__ctor\" data-linktype=\"self-bookmark\">CancellationTokenSource()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource__ctor_System_Int32_\" data-linktype=\"self-bookmark\">CancellationTokenSource(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class that will be canceled after the specified delay in milliseconds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource__ctor_System_TimeSpan_\" data-linktype=\"self-bookmark\">CancellationTokenSource(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class that will be canceled after the specified time span.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_IsCancellationRequested\" data-linktype=\"self-bookmark\">IsCancellationRequested</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether cancellation has been requested for this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_Token\" data-linktype=\"self-bookmark\">Token</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> associated with this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_Cancel\" data-linktype=\"self-bookmark\">Cancel()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Communicates a request for cancellation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_Cancel_System_Boolean_\" data-linktype=\"self-bookmark\">Cancel(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_CancelAfter_System_Int32_\" data-linktype=\"self-bookmark\">CancelAfter(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Schedules a cancel operation on this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> after the specified number of milliseconds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_CancelAfter_System_TimeSpan_\" data-linktype=\"self-bookmark\">CancelAfter(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Schedules a cancel operation on this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> after the specified time span.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_CreateLinkedTokenSource_System_Threading_CancellationToken___\" data-linktype=\"self-bookmark\">CreateLinkedTokenSource(CancellationToken[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that will be in the canceled state when any of the source tokens in the specified array are in the canceled state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_CreateLinkedTokenSource_System_Threading_CancellationToken_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">CreateLinkedTokenSource(CancellationToken,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that will be in the canceled state when any of the source tokens are in the canceled state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationTokenSource_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource__ctor\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancellationTokenSource()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CancellationTokenSource ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource__ctor_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancellationTokenSource(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class that will be canceled after the specified delay in milliseconds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CancellationTokenSource (int millisecondsDelay);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecondsDelay</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time interval in milliseconds to wait before canceling this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>millisecondsDelay</code> is less than -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The countdown for the <code>millisecondsDelay</code> starts during the call to the constructor.  When the <code>millisecondsDelay</code> expires, the constructed <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> is canceled (if it has not been canceled already).  </p>\n<p> Subsequent calls to <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_CancelAfter_\" data-linktype=\"relative-path\">CancelAfter</a> will reset the <code>millisecondsDelay</code> for the constructed <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>, if it has not been canceled already.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource__ctor_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancellationTokenSource(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class that will be canceled after the specified time span.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CancellationTokenSource (TimeSpan delay);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>delay</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time interval to wait before canceling this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>delay</code>\n    <code>.</code>\n    <span class=\"xref\">stem.TimeSpan.TotalMilliseconds*</span> is less than -1 or greater than <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The countdown for the delay starts during the call to the constructor. When the delay expires, the constructed <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> is canceled, if it has not been canceled already.  </p>\n<p> Subsequent calls to <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_CancelAfter_\" data-linktype=\"relative-path\">CancelAfter</a> will reset the delay for the constructed <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>, if it has not been canceled already.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_IsCancellationRequested\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_IsCancellationRequested_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsCancellationRequested</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether cancellation has been requested for this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsCancellationRequested { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if cancellation has been requested for this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates whether cancellation has been requested for this token source, such as due to a call to its <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Cancel_\" data-linktype=\"relative-path\">Cancel</a> method.  </p>\n<p> If this property returns <code>true</code>, it only guarantees that cancellation has been requested. It does not guarantee that every handler registered with the corresponding token has finished executing, nor that cancellation requests have finished propagating to all registered handlers. Additional synchronization may be required, particularly in situations where related objects are being canceled concurrently.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_Token\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_Token_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Token</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> associated with this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationToken Token { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> associated with this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The token source has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_Cancel\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_Cancel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cancel()</div>        \r\n          </div>\r\n    \r\n            <p>Communicates a request for cancellation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Cancel ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.aggregateexception\" data-linktype=\"relative-path\">AggregateException</a></div>\r\n                  </div>\r\n                  <p>An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> will be notified of the cancellation and will transition to a state where <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> returns true.  </p>\n<p> Any callbacks or cancelable operations registered with the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> will be executed.  </p>\n<p> Cancelable operations and callbacks registered with the token should not throw exceptions.  </p>\n<p> However, this overload of Cancel will aggregate any exceptions thrown into an <a class=\"xref\" href=\"system.aggregateexception\" data-linktype=\"relative-path\">AggregateException</a>, such that one callback throwing an exception will not prevent other registered callbacks from being executed.  </p>\n<p> The <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> that was captured when each callback was registered will be reestablished when the callback is invoked.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses a random number generator to emulate a data collection application that reads 10 integral values from eleven different instruments. A value of zero indicates that the measurement has failed for one instrument, in which case the operation should be cancelled and no overall mean should be computed.  </p>\n<p> To handle the possible cancellation of the operation, the example instantiates a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> object that generates a cancellation token which is passed to a <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> object. The <a class=\"xref\" href=\"system.threading.tasks.taskfactory\" data-linktype=\"relative-path\">TaskFactory</a> object in turn passes the cancellation token to each of the tasks responsible for collecting readings for a particular instrument. The [TaskFactory.ContinueWhenAll&lt;TAntecedentResult, TResult&gt;(Task&lt;TAntecedentResult&gt;[], Func<><tantecedentresult>&lt;xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=fullName&gt; method is called to ensure that the mean is computed only after all readings have been gathered successfully. If a task has not because it has been cancelled, the call to the <a class=\"xref\" href=\"system.threading.tasks.taskfactory#System_Threading_Tasks_TaskFactory_ContinueWhenAll_\" data-linktype=\"relative-path\">ContinueWhenAll</a> method throws an exception.  <p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.CancellationTokenSource.Class#1\">using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define the cancellation token.\n      CancellationTokenSource source = new CancellationTokenSource();\n      CancellationToken token = source.Token;\n\n      Random rnd = new Random();\n      Object lockObj = new Object();\n      \n      List&lt;Task&lt;int[]&gt;&gt; tasks = new List&lt;Task&lt;int[]&gt;&gt;();\n      TaskFactory factory = new TaskFactory(token);\n      for (int taskCtr = 0; taskCtr &lt;= 10; taskCtr++) {\n         int iteration = taskCtr + 1;\n         tasks.Add(factory.StartNew( () =&gt; {\n                                       int value;\n                                       int[] values = new int[10];\n                                       for (int ctr = 1; ctr &lt;= 10; ctr++) {\n                                          lock (lockObj) {\n                                             value = rnd.Next(0,101);\n                                          }\n                                          if (value == 0) { \n                                             source.Cancel();\n                                             Console.WriteLine(&quot;Cancelling at task {0}&quot;, iteration);\n                                             break;\n                                          }   \n                                          values[ctr-1] = value; \n                                       }\n                                       return values;\n                                    }, token));   \n         \n      }\n      try {\n         Task&lt;double&gt; fTask = factory.ContinueWhenAll(tasks.ToArray(), \n                                                      (results) =&gt; {\n                                                         Console.WriteLine(&quot;Calculating overall mean...&quot;);\n                                                         long sum = 0;\n                                                         int n = 0; \n                                                         foreach (var t in results) {\n                                                            foreach (var r in t.Result) {\n                                                                  sum += r;\n                                                                  n++;\n                                                               }\n                                                         }\n                                                         return sum/(double) n;\n                                                      } , token);\n         Console.WriteLine(&quot;The mean is {0}.&quot;, fTask.Result);\n      }   \n      catch (AggregateException ae) {\n         foreach (Exception e in ae.InnerExceptions) {\n            if (e is TaskCanceledException)\n               Console.WriteLine(&quot;Unable to compute mean: {0}&quot;, \n                                 ((TaskCanceledException) e).Message);\n            else\n               Console.WriteLine(&quot;Exception: &quot; + e.GetType().Name);\n         }\n      }\n      finally {\n         source.Dispose();\n      }\n   }\n}\n// Repeated execution of the example produces output like the following:\n//       Cancelling at task 5\n//       Unable to compute mean: A task was canceled.\n//       \n//       Cancelling at task 10\n//       Unable to compute mean: A task was canceled.\n//       \n//       Calculating overall mean...\n//       The mean is 5.29545454545455.\n//       \n//       Cancelling at task 4\n//       Unable to compute mean: A task was canceled.\n//       \n//       Cancelling at task 5\n//       Unable to compute mean: A task was canceled.\n//       \n//       Cancelling at task 6\n//       Unable to compute mean: A task was canceled.\n//       \n//       Calculating overall mean...\n//       The mean is 4.97363636363636.\n//       \n//       Cancelling at task 4\n//       Unable to compute mean: A task was canceled.\n//       \n//       Cancelling at task 5\n//       Unable to compute mean: A task was canceled.\n//       \n//       Cancelling at task 4\n//       Unable to compute mean: A task was canceled.\n//       \n//       Calculating overall mean...\n//       The mean is 4.86545454545455.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.CancellationTokenSource.Class#1\">Imports System.Collections.Generic\nImports System.Threading\nImports System.Threading.Tasks\n\nModule Example\n   Public Sub Main()\n      &#39; Define the cancellation token.\n      Dim source As New CancellationTokenSource()\n      Dim token As CancellationToken = source.Token\n\n      Dim lockObj As New Object()\n      Dim rnd As New Random\n\n      Dim tasks As New List(Of Task(Of Integer()))\n      Dim factory As New TaskFactory(token)\n      For taskCtr As Integer = 0 To 10\n         Dim iteration As Integer = taskCtr + 1\n         tasks.Add(factory.StartNew(Function()\n                                       Dim value, values(9) As Integer\n                                       For ctr As Integer = 1 To 10\n                                          SyncLock lockObj\n                                             value = rnd.Next(0,101)\n                                          End SyncLock\n                                          If value = 0 Then \n                                             source.Cancel\n                                             Console.WriteLine(&quot;Cancelling at task {0}&quot;, iteration)\n                                             Exit For\n                                          End If   \n                                          values(ctr-1) = value \n                                       Next\n                                       Return values\n                                    End Function, token))   \n         \n      Next\n      Try\n         Dim fTask As Task(Of Double) = factory.ContinueWhenAll(tasks.ToArray(), \n                                                         Function(results)\n                                                            Console.WriteLine(&quot;Calculating overall mean...&quot;)\n                                                            Dim sum As Long\n                                                            Dim n As Integer \n                                                            For Each t In results\n                                                               For Each r In t.Result\n                                                                  sum += r\n                                                                  n+= 1\n                                                               Next\n                                                            Next\n                                                            Return sum/n\n                                                         End Function, token)\n         Console.WriteLine(&quot;The mean is {0}.&quot;, fTask.Result)\n      Catch ae As AggregateException\n         For Each e In ae.InnerExceptions\n            If TypeOf e Is TaskCanceledException\n               Console.WriteLine(&quot;Unable to compute mean: {0}&quot;, \n                                 CType(e, TaskCanceledException).Message)\n            Else\n               Console.WriteLine(&quot;Exception: &quot; + e.GetType().Name)\n            End If   \n         Next\n      Finally\n         source.Dispose()\n      End Try                                                          \n   End Sub\nEnd Module\n&#39; Repeated execution of the example produces output like the following:\n&#39;       Cancelling at task 5\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Cancelling at task 10\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Calculating overall mean...\n&#39;       The mean is 5.29545454545455.\n&#39;       \n&#39;       Cancelling at task 4\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Cancelling at task 5\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Cancelling at task 6\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Calculating overall mean...\n&#39;       The mean is 4.97363636363636.\n&#39;       \n&#39;       Cancelling at task 4\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Cancelling at task 5\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Cancelling at task 4\n&#39;       Unable to compute mean: A task was canceled.\n&#39;       \n&#39;       Calculating overall mean...\n&#39;       The mean is 4.86545454545455.\n</code></pre></tantecedentresult>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_Cancel_System_Boolean_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_Cancel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cancel(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Cancel (bool throwOnFirstException);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>throwOnFirstException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if exceptions should immediately propagate; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.aggregateexception\" data-linktype=\"relative-path\">AggregateException</a></div>\r\n                  </div>\r\n                  <p>An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> will be notified of the cancellation and will transition to a state where <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> returns <code>true</code>.  </p>\n<p> Any callbacks or cancelable operations registered with the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> will be executed.  </p>\n<p> Cancelable operations and callbacks registered with the token should not throw exceptions.  </p>\n<p> If <code>throwOnFirstException</code> is <code>true</code>, an exception will immediately propagate out of the call to Cancel, preventing the remaining callbacks and cancelable operations from being processed.  </p>\n<p> If <code>throwOnFirstException</code> is <code>false</code>, this overload will aggregate any exceptions thrown into an <a class=\"xref\" href=\"system.aggregateexception\" data-linktype=\"relative-path\">AggregateException</a>, such that one callback throwing an exception will not prevent other registered callbacks from being executed.  </p>\n<p> The <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> that was captured when each callback was registered will be reestablished when the callback is invoked.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_CancelAfter_System_Int32_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_CancelAfter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelAfter(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Schedules a cancel operation on this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> after the specified number of milliseconds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CancelAfter (int millisecondsDelay);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecondsDelay</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time span to wait before canceling this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception thrown when this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception thrown when <code>millisecondsDelay</code> is less than -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The countdown for the <code>millisecondsDelay</code> starts during this call. When the <code>millisecondsDelay</code> expires, this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> is canceled, if it has not been canceled already.  </p>\n<p> Subsequent calls to CancelAfter will reset the <code>millisecondsDelay</code> for this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>, if it has not been canceled already.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_CancelAfter_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_CancelAfter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelAfter(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Schedules a cancel operation on this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> after the specified time span.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CancelAfter (TimeSpan delay);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>delay</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time span to wait before canceling this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The exception thrown when this <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The exception that is thrown when <code>delay</code> is less than -1 or greater than Int32.MaxValue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_CreateLinkedTokenSource_System_Threading_CancellationToken___\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_CreateLinkedTokenSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateLinkedTokenSource(CancellationToken[])</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that will be in the canceled state when any of the source tokens in the specified array are in the canceled state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.CancellationTokenSource CreateLinkedTokenSource (System.Threading.CancellationToken[] tokens);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tokens</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array that contains the cancellation token instances to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that is linked to the source tokens.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> associated with one of the source tokens has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>tokens</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>tokens</code> is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_CreateLinkedTokenSource_System_Threading_CancellationToken_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_CreateLinkedTokenSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateLinkedTokenSource(CancellationToken,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that will be in the canceled state when any of the source tokens are in the canceled state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.CancellationTokenSource CreateLinkedTokenSource (System.Threading.CancellationToken token1, System.Threading.CancellationToken token2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first cancellation token to observe.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>token2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second cancellation token to observe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> that is linked to the source tokens.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> associated with one of the source tokens has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_Dispose\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationTokenSource_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Threading_CancellationTokenSource_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.CancellationTokenSource.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.CancellationTokenSource.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource.Cancel\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource.CancelAfter\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource.CreateLinkedTokenSource\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource.IsCancellationRequested\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationTokenSource.Token\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"26eccd8c-a2ce-c2c7-25d3-dbd69f82da0e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Signals to a  that it should be canceled.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.CancellationTokenSource\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.CancellationTokenSource.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.CancellationTokenSource.yml","open_to_public_contributors":true,"api_name":["System.Threading.CancellationTokenSource","System.Threading.CancellationTokenSource..ctor","System.Threading.CancellationTokenSource.Cancel","System.Threading.CancellationTokenSource.CancelAfter","System.Threading.CancellationTokenSource.CreateLinkedTokenSource","System.Threading.CancellationTokenSource.Dispose","System.Threading.CancellationTokenSource.IsCancellationRequested","System.Threading.CancellationTokenSource.Token"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.CancellationTokenSource","System::Threading::CancellationTokenSource","System.Threading.CancellationTokenSource.#ctor","System::Threading::CancellationTokenSource::#ctor","System.Threading.CancellationTokenSource.Cancel","System::Threading::CancellationTokenSource::Cancel","System.Threading.CancellationTokenSource.CancelAfter","System::Threading::CancellationTokenSource::CancelAfter","System.Threading.CancellationTokenSource.CreateLinkedTokenSource","System::Threading::CancellationTokenSource::CreateLinkedTokenSource","System.Threading.CancellationTokenSource.Dispose","System::Threading::CancellationTokenSource::Dispose","System.Threading.CancellationTokenSource.IsCancellationRequested","System::Threading::CancellationTokenSource::IsCancellationRequested","System.Threading.CancellationTokenSource.Token","System::Threading::CancellationTokenSource::Token"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"26eccd8c-a2ce-c2c7-25d3-dbd69f82da0e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/CancellationTokenSource.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CancellationTokenSource class | Microsoft Docs","_op_ogTitle":"CancellationTokenSource class","description":"Signals to a  that it should be canceled.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.CancellationTokenSource","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.cancellationtokensource","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.cancellationtokensource","fileRelativePath":"System.Threading.CancellationTokenSource.html"},"themesRelativePathToOutputRoot":"_themes/"}