{"content":"    \r\n    <h1 id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader\">\r\n      <span class=\"lang-csharp\">WorkflowDesignerLoader</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*&quot;)]\npublic abstract class WorkflowDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.designerloader\" data-linktype=\"relative-path\">DesignerLoader</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader\" data-linktype=\"relative-path\">System.ComponentModel.Design.Serialization.BasicDesignerLoader</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WorkflowDesignerLoader</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_BeginLoad_System_ComponentModel_Design_Serialization_IDesignerLoaderHost_\" data-linktype=\"relative-path\">BeginLoad(IDesignerLoaderHost)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_EnableComponentNotification_System_Boolean_\" data-linktype=\"relative-path\">EnableComponentNotification(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_IsReloadNeeded\" data-linktype=\"relative-path\">IsReloadNeeded()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost\" data-linktype=\"relative-path\">LoaderHost</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_Loading\" data-linktype=\"relative-path\">Loading</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_Modified\" data-linktype=\"relative-path\">Modified</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_OnBeginLoad\" data-linktype=\"relative-path\">OnBeginLoad()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_OnBeginUnload\" data-linktype=\"relative-path\">OnBeginUnload()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_OnModifying\" data-linktype=\"relative-path\">OnModifying()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_PropertyProvider\" data-linktype=\"relative-path\">PropertyProvider</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_Reload_System_ComponentModel_Design_Serialization_BasicDesignerLoader_ReloadOptions_\" data-linktype=\"relative-path\">Reload(BasicDesignerLoader+ReloadOptions)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_ReloadPending\" data-linktype=\"relative-path\">ReloadPending</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_ReportFlushErrors_System_Collections_ICollection_\" data-linktype=\"relative-path\">ReportFlushErrors(ICollection)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_SetBaseComponentClassName_System_String_\" data-linktype=\"relative-path\">SetBaseComponentClassName(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_System_ComponentModel_Design_Serialization_IDesignerLoaderService_AddLoadDependency\" data-linktype=\"relative-path\">IDesignerLoaderService.AddLoadDependency()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_System_ComponentModel_Design_Serialization_IDesignerLoaderService_DependentLoadComplete_System_Boolean_System_Collections_ICollection_\" data-linktype=\"relative-path\">IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_System_ComponentModel_Design_Serialization_IDesignerLoaderService_Reload\" data-linktype=\"relative-path\">IDesignerLoaderService.Reload()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/deprecatedcontent-md.md&quot; -->This material discusses types and namespaces that are obsolete. For more information, see <a href=\"http://aka.ms/wfdeprecatedtypes\" data-linktype=\"external\">Deprecated Types in Windows Workflow Foundation 4.5</a>.<!--END INCLUDE -->  </p>\n</div>\n<p> Designer loader classes are used to load the designer and save any changes to the state of the designer when the user so instructs. The WorkflowDesignerLoader class can be implemented to support custom loading of a workflow designer and workflow designer components. A workflow designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Flush_\" data-linktype=\"relative-path\">Flush</a> method is called.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader__ctor\" data-linktype=\"self-bookmark\">WorkflowDesignerLoader()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, initializes a new instance of the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_FileName\" data-linktype=\"self-bookmark\">FileName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the file name of the designer to load.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_InDebugMode\" data-linktype=\"self-bookmark\">InDebugMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the workflow should be loaded in debug mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_TargetFrameworkTypeDescriptionProvider\" data-linktype=\"self-bookmark\">TargetFrameworkTypeDescriptionProvider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a> metadata of the target <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_AddActivityToDesigner_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">AddActivityToDesigner(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an activity to the designer host after it has been added to the parent activities collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes pending changes to the location that the designer was loaded from.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_ForceReload\" data-linktype=\"self-bookmark\">ForceReload()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, causes <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> to reload the designer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_GetFileReader_System_String_\" data-linktype=\"self-bookmark\">GetFileReader(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, retrieves an object that <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> uses to read from the specified file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_GetFileWriter_System_String_\" data-linktype=\"self-bookmark\">GetFileWriter(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets an object that the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> uses to write to the specified file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Initialize\" data-linktype=\"self-bookmark\">Initialize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> with any services required by the designer loader host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayout_System_Xml_XmlReader_System_Collections_IList__\" data-linktype=\"self-bookmark\">LoadDesignerLayout(XmlReader,IList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the serialized layout to the root designer in the current designer host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayoutFromResource_System_Type_System_String_System_Collections_IList__\" data-linktype=\"self-bookmark\">LoadDesignerLayoutFromResource(Type,String,IList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the specified resource and calls the <span class=\"xref\">stem.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*</span> method that applies the serialized layout to the root designer in the current designer host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_OnEndLoad_System_Boolean_System_Collections_ICollection_\" data-linktype=\"self-bookmark\">OnEndLoad(Boolean,ICollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when loading of the designer is completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformFlush_System_ComponentModel_Design_Serialization_IDesignerSerializationManager_\" data-linktype=\"self-bookmark\">PerformFlush(IDesignerSerializationManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes cached changes to the location that the designer was loaded from.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformLoad_System_ComponentModel_Design_Serialization_IDesignerSerializationManager_\" data-linktype=\"self-bookmark\">PerformLoad(IDesignerSerializationManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the designer from a design document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_RemoveActivityFromDesigner_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">RemoveActivityFromDesigner(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes an activity from the designer host after it has been added to the parent activities collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_SaveDesignerLayout_System_Xml_XmlWriter_System_Workflow_ComponentModel_Design_ActivityDesigner_System_Collections_IList__\" data-linktype=\"self-bookmark\">SaveDesignerLayout(XmlWriter,ActivityDesigner,IList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the designer layout.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader__ctor\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WorkflowDesignerLoader()</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, initializes a new instance of the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WorkflowDesignerLoader ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a new instance of a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> object. In this case, the <code>WorkflowLoader</code> class is derived from <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a>. When the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> is created, a <a class=\"xref\" href=\"system.componentmodel.design.designsurface\" data-linktype=\"relative-path\">DesignSurface</a> is also created and associated with the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> using the <code>BeginLoad</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#47\">private ICollection LoadWorkflow(Type workflowType)\n{\n    WorkflowLoader loader = new WorkflowLoader();\n    loader.WorkflowType = workflowType;\n\n    return LoadWorkflow(loader);\n}\n\nprivate ICollection LoadWorkflow(WorkflowLoader loader)\n{\n    SuspendLayout();\n\n    DesignSurface designSurface = new DesignSurface();\n    designSurface.BeginLoad(loader);\n    if (designSurface.LoadErrors.Count &gt; 0)\n        return designSurface.LoadErrors;\n\n    IDesignerHost designerHost = designSurface.GetService(typeof(IDesignerHost)) as IDesignerHost;\n    if (designerHost != null &amp;&amp; designerHost.RootComponent != null)\n    {\n        IRootDesigner rootDesigner = designerHost.GetDesigner(designerHost.RootComponent) as IRootDesigner;\n        if (rootDesigner != null)\n        {\n            UnloadWorkflow();\n\n            this.designSurface = designSurface;\n            this.loader = loader;\n            this.workflowView = rootDesigner.GetView(ViewTechnology.Default) as WorkflowView;\n            this.splitContainer1.Panel1.Controls.Add(this.workflowView);\n            this.workflowView.Dock = DockStyle.Fill;\n            this.workflowView.TabIndex = 1;\n            this.workflowView.TabStop = true;\n            this.workflowView.HScrollBar.TabStop = false;\n            this.workflowView.VScrollBar.TabStop = false;\n            this.workflowView.ShadowDepth = 0;\n            this.workflowView.EnableFitToScreen = true;\n            this.workflowView.Focus();\n\n            ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n            IComponentChangeService changeService = GetService(typeof(IComponentChangeService)) as IComponentChangeService;\n\n            if (selectionService != null)\n            {\n                selectionService.SelectionChanged += new EventHandler(OnSelectionChanged);\n            }\n\n            if (changeService != null)\n            {\n                changeService.ComponentAdded += new ComponentEventHandler(changeService_ComponentAdded);\n                changeService.ComponentChanged += new ComponentChangedEventHandler(changeService_ComponentChanged);\n                changeService.ComponentRemoved += new ComponentEventHandler(changeService_ComponentRemoved);\n                changeService.ComponentRename += new ComponentRenameEventHandler(changeService_ComponentRename);\n            }\n        }\n    }\n\n    ResumeLayout(true);\n\n    if (btnAutoSynch.Checked == true)\n    {\n        this.xomlView.Text = GetCurrentXoml();\n    }\n\n    return null;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#47\">Private Function LoadWorkflow(ByVal workflowType As Type) As ICollection\n    Dim loader As New WorkflowLoader()\n    loader.WorkflowType = workflowType\n    Return LoadWorkflow(loader)\nEnd Function\n\nPrivate Function LoadWorkflow(ByVal loader As WorkflowLoader) As ICollection\n\n    SuspendLayout()\n\n    Dim designSurface As New DesignSurface()\n    designSurface.BeginLoad(loader)\n    If designSurface.LoadErrors.Count &gt; 0 Then\n        Return designSurface.LoadErrors\n    End If\n\n    Dim designerHost As IDesignerHost = CType(designSurface.GetService(GetType(IDesignerHost)), IDesignerHost)\n    If designerHost IsNot Nothing And designerHost.RootComponent IsNot Nothing Then\n\n        Dim rootDesigner As IRootDesigner = CType(designerHost.GetDesigner(designerHost.RootComponent), IRootDesigner)\n        If rootDesigner IsNot Nothing Then\n            UnloadWorkflow()\n\n            Me.designSurface = designSurface\n            Me.loader = loader\n            Me.workflowView = CType(rootDesigner.GetView(ViewTechnology.Default), WorkflowView)\n            Me.splitContainer1.Panel1.Controls.Add(Me.workflowView)\n            Me.workflowView.Dock = DockStyle.Fill\n            Me.workflowView.TabIndex = 1\n            Me.workflowView.TabStop = True\n            Me.workflowView.HScrollBar.TabStop = False\n            Me.workflowView.VScrollBar.TabStop = False\n            Me.workflowView.ShadowDepth = 0\n            Me.workflowView.EnableFitToScreen = True\n            Me.workflowView.Focus()\n\n            Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n            Dim changeService As IComponentChangeService = CType(GetService(GetType(IComponentChangeService)), IComponentChangeService)\n\n            If selectionService IsNot Nothing Then\n                AddHandler selectionService.SelectionChanged, AddressOf OnSelectionChanged\n            End If\n\n            If changeService IsNot Nothing Then\n\n                AddHandler changeService.ComponentAdded, AddressOf changeService_ComponentAdded\n                AddHandler changeService.ComponentChanged, AddressOf changeService_ComponentChanged\n                AddHandler changeService.ComponentRemoved, AddressOf changeService_ComponentRemoved\n                AddHandler changeService.ComponentRename, AddressOf changeService_ComponentRename\n            End If\n        End If\n    End If\n\n    ResumeLayout(True)\n\n    If btnAutoSynch.Checked = True Then\n        Me.xomlView.Text = GetCurrentXoml()\n    End If\n\n    Return Nothing\nEnd Function\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_FileName\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_FileName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileName</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the file name of the designer to load.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string FileName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the file name of the designer to load.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to override the FileName property to return the path of the currently loaded workflow file used by the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#32\">public override string FileName\n{\n    // return path of workflow file\n    get\n    {\n        return this.xomlFile;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#32\">Public Overrides ReadOnly Property FileName() As String\n    &#39; return path of workflow file\n    Get\n        Return Me.XomlFile\n    End Get\nEnd Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_InDebugMode\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_InDebugMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InDebugMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the workflow should be loaded in debug mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool InDebugMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the workflow should be loaded in debug mode; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following method determines whether the workflow designer is locked by the debugger if the InDebugMode property of the current <code>WorkflowDesignerLoader</code> returns <code>true</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#54\">public bool IsDesignerLocked\n{\n    get\n    {\n        WorkflowDesignerLoader loader = GetService(typeof(WorkflowDesignerLoader)) as WorkflowDesignerLoader;\n        if (loader != null &amp;&amp; loader.InDebugMode)\n            return true;\n\n        return false;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#54\">Public ReadOnly Property IsDesignerLocked() As Boolean\n    Get\n        Dim loader As WorkflowDesignerLoader = CType(GetService(GetType(WorkflowDesignerLoader)), WorkflowDesignerLoader)\n        If loader IsNot Nothing And loader.InDebugMode Then\n            Return True\n        End If\n\n        Return False\n    End Get\nEnd Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_TargetFrameworkTypeDescriptionProvider\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_TargetFrameworkTypeDescriptionProvider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TargetFrameworkTypeDescriptionProvider</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a> metadata of the target <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.typedescriptionprovider\" data-linktype=\"relative-path\">TypeDescriptionProvider</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a> metadata of the target <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_AddActivityToDesigner_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_AddActivityToDesigner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddActivityToDesigner(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an activity to the designer host after it has been added to the parent activities collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddActivityToDesigner (System.Workflow.ComponentModel.Activity activity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to add a <a class=\"xref\" href=\"system.workflow.activities.codeactivity\" data-linktype=\"relative-path\">CodeActivity</a> to the designer. Before the activity is added to the designer using the AddActivityToDesigner method, it is first added to the Activities collection of the root activity within the workflow.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#55\">public void AddCodeActivityToDesigner()\n{\n    WorkflowDesignerLoader loader = GetService(typeof(WorkflowDesignerLoader)) as WorkflowDesignerLoader;\n    if (loader == null)\n        return;\n\n    IDesignerHost designerHost = (IDesignerHost)GetService(typeof(IDesignerHost));\n    CompositeActivity rootActivity = designerHost.RootComponent as CompositeActivity;\n\n    CodeActivity codeActivity = new CodeActivity();\n    rootActivity.Activities.Add(codeActivity);\n    loader.AddActivityToDesigner(codeActivity);\n    return;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#55\">Public Sub AddCodeActivityToDesigner()\n\n    Dim loader As WorkflowDesignerLoader = CType(GetService(GetType(WorkflowDesignerLoader)), WorkflowDesignerLoader)\n    If loader Is Nothing Then Return\n    Dim designerHost As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n    Dim rootActivity As CompositeActivity = CType(designerHost.RootComponent, CompositeActivity)\n    Dim codeActivity As New CodeActivity()\n    rootActivity.Activities.Add(codeActivity)\n    loader.AddActivityToDesigner(codeActivity)\n    Return\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Dispose\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Dispose releases all services used by the designer host, but it does not write pending changes to the designer loader. If you want to save any pending changes prior to releasing all resources, call <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Flush_\" data-linktype=\"relative-path\">Flush</a> before you call Dispose.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the Dispose method. In this implementation, various services that have been added to the LoaderHost object are removed in preparation for closing the application. This example is from the Tracking Profile Designer SDK sample. For more information, see <a href=\"http://msdn.microsoft.com/en-us/a280199c-3000-4148-ac63-cb5aaeac07c8\" data-linktype=\"external\">Tracking Profile Designer Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#121\">public override void Dispose()\n{\n    try\n    {\n        IDesignerLoaderHost host = LoaderHost;\n        if (host != null)\n        {\n            host.RemoveService(typeof(IIdentifierCreationService));\n            host.RemoveService(typeof(IMenuCommandService));\n            host.RemoveService(typeof(IToolboxService));\n            host.RemoveService(typeof(ITypeProvider), true);\n            host.RemoveService(typeof(IWorkflowCompilerOptionsService));\n            host.RemoveService(typeof(IEventBindingService));\n        }\n    }\n    finally\n    {\n        base.Dispose();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#121\">Public Overrides Sub Dispose()\n    Try\n        Dim host As IDesignerLoaderHost = LoaderHost\n        If host IsNot Nothing Then\n            host.RemoveService(GetType(IIdentifierCreationService))\n            host.RemoveService(GetType(IMenuCommandService))\n            host.RemoveService(GetType(IToolboxService))\n            host.RemoveService(GetType(ITypeProvider), True)\n            host.RemoveService(GetType(IWorkflowCompilerOptionsService))\n            host.RemoveService(GetType(IEventBindingService))\n        End If\n    Finally\n        MyBase.Dispose()\n    End Try\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Flush\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Writes pending changes to the location that the designer was loaded from.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the Flush method to serialize a workflow using the <a class=\"xref\" href=\"system.workflow.componentmodel.serialization.workflowmarkupserializer\" data-linktype=\"relative-path\">WorkflowMarkupSerializer</a>. In this example, the overridden Flush delegates to the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformFlush_\" data-linktype=\"relative-path\">PerformFlush</a> method defined in the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> derived class.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#35\">public override void Flush()\n{\n    this.PerformFlush(null);\n}\n\nprotected override void PerformFlush(IDesignerSerializationManager manager)\n{\n    IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\n\n    if (host != null &amp;&amp; host.RootComponent != null)\n    {\n        Activity service = host.RootComponent as Activity;\n\n        if (service != null)\n        {\n            using (XmlWriter writer = XmlWriter.Create(this.xomlFile))\n            {\n                WorkflowMarkupSerializer xomlSerializer = new WorkflowMarkupSerializer();\n                if (manager == null)\n                {\n                    xomlSerializer.Serialize(writer, service);\n                }\n                else\n                {\n                    xomlSerializer.Serialize(manager, writer, service);\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#35\">Public Overrides Sub Flush()\n    Me.PerformFlush(Nothing)\nEnd Sub\n\nProtected Overrides Sub PerformFlush(ByVal manager As IDesignerSerializationManager)\n    Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n\n    If host IsNot Nothing And host.RootComponent IsNot Nothing Then\n        Dim service As Activity = CType(host.RootComponent, Activity)\n\n        If service IsNot Nothing Then\n            Using writer As XmlWriter = XmlWriter.Create(Me.XomlFile)\n                Dim xomlSerializer As New WorkflowMarkupSerializer()\n                If manager IsNot Nothing Then\n                    xomlSerializer.Serialize(writer, service)\n                Else\n                    xomlSerializer.Serialize(manager, writer, service)\n                End If\n            End Using\n        End If\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_ForceReload\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_ForceReload_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForceReload()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, causes <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> to reload the designer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void ForceReload ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_GetFileReader_System_String_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_GetFileReader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFileReader(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, retrieves an object that <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> uses to read from the specified file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.IO.TextReader GetFileReader (string filePath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filePath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a path to the file to read from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> to read the specified file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create and return a <code>TextReader</code> object when the GetFileReader overloaded method is called.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#33\">public override TextReader GetFileReader(string filePath)\n{\n    return new StreamReader(new FileStream(filePath, FileMode.OpenOrCreate));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#33\">Public Overrides Function GetFileReader(ByVal filePath As String) As TextReader\n    Return New StreamReader(New FileStream(filePath, FileMode.OpenOrCreate))\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_GetFileWriter_System_String_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_GetFileWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFileWriter(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets an object that the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> uses to write to the specified file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.IO.TextWriter GetFileWriter (string filePath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filePath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains the path to the file to write to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to write to the file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following example shows how to create and return a <code>TextWriter</code> object when the GetFileWriter overloaded method is called.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#34\">public override TextWriter GetFileWriter(string filePath)\n{\n    return new StreamWriter(new FileStream(filePath, FileMode.OpenOrCreate));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#34\">Public Overrides Function GetFileWriter(ByVal filePath As String) As TextWriter\n    Return New StreamWriter(New FileStream(filePath, FileMode.OpenOrCreate))\nEnd Function\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Initialize\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> with any services required by the designer loader host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Initialize ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to override the Initialize method in a derived class to add the services needed for the designer. The services can vary based on the level of service support required by your application.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayout_System_Xml_XmlReader_System_Collections_IList__\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadDesignerLayout(XmlReader,IList)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the serialized layout to the root designer in the current designer host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void LoadDesignerLayout (System.Xml.XmlReader layoutReader, out System.Collections.IList layoutLoadErrors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that is created for the serialized layout.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutLoadErrors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>List of errors that occurred during the deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to load the layout for a specific workflow definition using the LoadDesignerLayout method. An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is created using the file name of a designer layout file that was created using <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_SaveDesignerLayout_\" data-linktype=\"relative-path\">SaveDesignerLayout</a>. When the layout has finished loading, any errors that might have occurred are displayed to the user.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#39\">public void LoadLayout()\n{\n    using (XmlReader reader = XmlReader.Create(&quot;wfInstanceId.designer.xml&quot;))\n    {\n        IList layoutLoadErrors = new ArrayList() as IList;\n        this.LoadDesignerLayout(reader, out layoutLoadErrors);\n\n        if (layoutLoadErrors.Count &gt; 0)\n        {\n            System.Text.StringBuilder sb = new System.Text.StringBuilder(&quot;Errors:\\r<br>&quot;);\n            foreach (WorkflowMarkupSerializationException error in layoutLoadErrors)\n            {\n                sb.Append(error.Message + &quot;\\r<br>&quot;);\n            }\n            MessageBox.Show(sb.ToString(), &quot;Error&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#39\">Public Sub LoadLayout()\n    Using reader As XmlReader = XmlReader.Create(&quot;wfInstanceId.designer.xml&quot;)\n\n        Dim layoutLoadErrors As IList = CType(New ArrayList(), IList)\n        Me.LoadDesignerLayout(reader, layoutLoadErrors)\n\n        If layoutLoadErrors.Count &gt; 0 Then\n            Dim sb As New System.Text.StringBuilder(&quot;Errors:\\r<br>&quot;)\n            For Each errorMessage As WorkflowMarkupSerializationException In layoutLoadErrors\n                sb.Append(errorMessage.Message + &quot;\\r<br>&quot;)\n            Next\n            MessageBox.Show(sb.ToString(), &quot;Error&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error)\n\n        End If\n    End Using\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayoutFromResource_System_Type_System_String_System_Collections_IList__\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayoutFromResource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadDesignerLayoutFromResource(Type,String,IList)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the specified resource and calls the <span class=\"xref\">stem.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*</span> method that applies the serialized layout to the root designer in the current designer host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void LoadDesignerLayoutFromResource (Type type, string manifestResourceName, out System.Collections.IList errors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that the resource is associated with.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>manifestResourceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Name of the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Errors encountered during the call to <span class=\"xref\">stem.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_OnEndLoad_System_Boolean_System_Collections_ICollection_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_OnEndLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEndLoad(Boolean,ICollection)</div>        \r\n          </div>\r\n    \r\n            <p>Called when loading of the designer is completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>successful</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if load operation is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Contains the load errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the OnEndLoad method to display errors that might have occurred during the loading of a workflow.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#36\">protected override void OnEndLoad(bool successful, ICollection errors)\n{\n    base.OnEndLoad(successful, errors);\n\n    if (!successful &amp;&amp; errors != null)\n    {\n        System.Text.StringBuilder sb = new System.Text.StringBuilder(&quot;Errors\\r<br>&quot;);\n        foreach (string error in errors)\n        {\n            sb.Append(error + &quot;\\r<br>&quot;);\n        }\n\n        MessageBox.Show(sb.ToString(), &quot;Error&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#36\">Protected Overrides Sub OnEndLoad(ByVal successful As Boolean, ByVal errors As ICollection)\n    MyBase.OnEndLoad(successful, errors)\n\n    If Not successful And errors IsNot Nothing Then\n        Dim sb As New System.Text.StringBuilder(&quot;Errors\\r<br>&quot;)\n        For Each errorMessage As String In errors\n            sb.Append(errorMessage + &quot;\\r<br>&quot;)\n        Next\n\n        MessageBox.Show(sb.ToString(), &quot;Error&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error)\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformFlush_System_ComponentModel_Design_Serialization_IDesignerSerializationManager_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformFlush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformFlush(IDesignerSerializationManager)</div>        \r\n          </div>\r\n    \r\n            <p>Writes cached changes to the location that the designer was loaded from.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationManager</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerserializationmanager\" data-linktype=\"relative-path\">IDesignerSerializationManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Class that implements the <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerserializationmanager\" data-linktype=\"relative-path\">IDesignerSerializationManager</a> interface, which manages design-time serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the PerformFlush method to serialize the workflow using the <a class=\"xref\" href=\"system.workflow.componentmodel.serialization.workflowmarkupserializer\" data-linktype=\"relative-path\">WorkflowMarkupSerializer</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#35\">public override void Flush()\n{\n    this.PerformFlush(null);\n}\n\nprotected override void PerformFlush(IDesignerSerializationManager manager)\n{\n    IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\n\n    if (host != null &amp;&amp; host.RootComponent != null)\n    {\n        Activity service = host.RootComponent as Activity;\n\n        if (service != null)\n        {\n            using (XmlWriter writer = XmlWriter.Create(this.xomlFile))\n            {\n                WorkflowMarkupSerializer xomlSerializer = new WorkflowMarkupSerializer();\n                if (manager == null)\n                {\n                    xomlSerializer.Serialize(writer, service);\n                }\n                else\n                {\n                    xomlSerializer.Serialize(manager, writer, service);\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#35\">Public Overrides Sub Flush()\n    Me.PerformFlush(Nothing)\nEnd Sub\n\nProtected Overrides Sub PerformFlush(ByVal manager As IDesignerSerializationManager)\n    Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n\n    If host IsNot Nothing And host.RootComponent IsNot Nothing Then\n        Dim service As Activity = CType(host.RootComponent, Activity)\n\n        If service IsNot Nothing Then\n            Using writer As XmlWriter = XmlWriter.Create(Me.XomlFile)\n                Dim xomlSerializer As New WorkflowMarkupSerializer()\n                If manager IsNot Nothing Then\n                    xomlSerializer.Serialize(writer, service)\n                Else\n                    xomlSerializer.Serialize(manager, writer, service)\n                End If\n            End Using\n        End If\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformLoad_System_ComponentModel_Design_Serialization_IDesignerSerializationManager_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_PerformLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformLoad(IDesignerSerializationManager)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the designer from a design document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationManager</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerserializationmanager\" data-linktype=\"relative-path\">IDesignerSerializationManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Class that implements the <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerserializationmanager\" data-linktype=\"relative-path\">IDesignerSerializationManager</a> interface, which manages design-time serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to override the <code>PerformLoad</code> method to deserialize a workflow and load it in the designer using the <code>AddObjectGraphToDesignerHost</code> helper method.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#37\">protected override void PerformLoad(IDesignerSerializationManager serializationManager)\n{\n    IDesignerHost designerHost = (IDesignerHost)GetService(typeof(IDesignerHost));\n    Activity rootActivity = null;\n\n    // If a WorkflowType already exists, create an instance instead of reading from file\n    if (WorkflowType != null)\n    {\n        rootActivity = (Activity)Activator.CreateInstance(WorkflowType);\n    }\n    else\n    {\n        // Create a text reader out of the doc data\n        TextReader reader = new StringReader(this.xoml);\n        try\n        {\n            using (XmlReader xmlReader = XmlReader.Create(reader))\n            {\n                WorkflowMarkupSerializer xomlSerializer = new WorkflowMarkupSerializer();\n                rootActivity = xomlSerializer.Deserialize(xmlReader) as Activity;\n            }\n        }\n        finally\n        {\n            reader.Close();\n        }\n    }\n\n    if (rootActivity != null &amp;&amp; designerHost != null)\n    {\n        AddObjectGraphToDesignerHost(designerHost, rootActivity);\n    }\n}\n\nprivate static void AddObjectGraphToDesignerHost(IDesignerHost designerHost, Activity activity)\n{\n    Guid Definitions_Class = new Guid(&quot;3FA84B23-B15B-4161-8EB8-37A54EFEEFC7&quot;);\n\n    if (designerHost == null)\n        throw new ArgumentNullException(&quot;designerHost&quot;);\n    if (activity == null)\n        throw new ArgumentNullException(&quot;activity&quot;);\n\n    string rootSiteName = activity.QualifiedName;\n    if (activity.Parent == null)\n    {\n        string fullClassName = activity.UserData[Definitions_Class] as string;\n        if (fullClassName == null)\n            fullClassName = activity.GetType().FullName;\n        rootSiteName = (fullClassName.LastIndexOf(&#39;.&#39;) != -1) ? fullClassName.Substring(fullClassName.LastIndexOf(&#39;.&#39;) + 1) : fullClassName;\n        designerHost.Container.Add(activity, rootSiteName);\n    }\n    else\n    {\n        designerHost.Container.Add(activity, activity.QualifiedName);\n    }\n\n    if (activity is CompositeActivity)\n    {\n        foreach (Activity activity2 in GetNestedActivities(activity as CompositeActivity))\n            designerHost.Container.Add(activity2, activity2.QualifiedName);\n    }\n}\n\nprivate static Activity[] GetNestedActivities(CompositeActivity compositeActivity)\n{\n    if (compositeActivity == null)\n        throw new ArgumentNullException(&quot;compositeActivity&quot;);\n\n    IList&lt;Activity&gt; childActivities = null;\n    ArrayList nestedActivities = new ArrayList();\n    Queue compositeActivities = new Queue();\n    compositeActivities.Enqueue(compositeActivity);\n    while (compositeActivities.Count &gt; 0)\n    {\n        CompositeActivity compositeActivity2 = (CompositeActivity)compositeActivities.Dequeue();\n        childActivities = compositeActivity2.Activities;\n\n        foreach (Activity activity in childActivities)\n        {\n            nestedActivities.Add(activity);\n            if (activity is CompositeActivity)\n                compositeActivities.Enqueue(activity);\n        }\n    }\n    return (Activity[])nestedActivities.ToArray(typeof(Activity));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#37\">Protected Overrides Sub PerformLoad(ByVal serializationManager As IDesignerSerializationManager)\n    Dim designerHost As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n    Dim rootActivity As Activity = Nothing\n\n    &#39; If a WorkflowType already exists, create an instance instead of reading from file\n    If WorkflowType IsNot Nothing Then\n        rootActivity = CType(Activator.CreateInstance(WorkflowType), Activity)\n    Else\n        &#39; Create a text reader out of the doc data\n        Dim reader As TextReader = New StringReader(Me.Xoml)\n        Try\n            Using xmlReader As XmlReader = xmlReader.Create(reader)\n                Dim xomlSerializer As New WorkflowMarkupSerializer()\n                rootActivity = CType(xomlSerializer.Deserialize(xmlReader), Activity)\n            End Using\n        Finally\n            reader.Close()\n        End Try\n    End If\n\n    If rootActivity IsNot Nothing And designerHost IsNot Nothing Then\n        AddObjectGraphToDesignerHost(designerHost, rootActivity)\n    End If\nEnd Sub\n\nPrivate Shared Sub AddObjectGraphToDesignerHost(ByVal designerHost As IDesignerHost, ByVal activity As Activity)\n    Dim Definitions_Class As New Guid(&quot;3FA84B23-B15B-4161-8EB8-37A54EFEEFC7&quot;)\n\n    If designerHost IsNot Nothing Then\n        Throw New ArgumentNullException(&quot;designerHost&quot;)\n    End If\n    If activity IsNot Nothing Then\n        Throw New ArgumentNullException(&quot;activity&quot;)\n    End If\n\n    Dim rootSiteName As String = activity.QualifiedName\n    If activity.Parent Is Nothing Then\n        Dim fullClassName As String = CType(activity.UserData(Definitions_Class), String)\n        If fullClassName Is Nothing Then\n            fullClassName = activity.GetType().FullName\n        End If\n        rootSiteName = IIf(Not fullClassName.LastIndexOf(&quot;.&quot;) = -1, fullClassName.Substring(fullClassName.LastIndexOf(&quot;.&quot;) + 1), fullClassName)\n        designerHost.Container.Add(activity, rootSiteName)\n    Else\n        designerHost.Container.Add(activity, activity.QualifiedName)\n    End If\n\n    If TypeOf activity Is CompositeActivity Then\n        For Each activity2 As Activity In GetNestedActivities(CType(activity, CompositeActivity))\n            designerHost.Container.Add(activity2, activity2.QualifiedName)\n        Next\n    End If\nEnd Sub\n\nPrivate Shared Function GetNestedActivities(ByVal compositeActivity As CompositeActivity) As Activity()\n    If compositeActivity Is Nothing Then\n        Throw New ArgumentNullException(&quot;compositeActivity&quot;)\n    End If\n\n    Dim childActivities As IList(Of Activity) = Nothing\n    Dim nestedActivities As New ArrayList()\n    Dim compositeActivities As New Queue()\n    compositeActivities.Enqueue(compositeActivity)\n    While compositeActivities.Count &gt; 0\n        Dim compositeActivity2 As CompositeActivity = CType(compositeActivities.Dequeue(), CompositeActivity)\n        childActivities = compositeActivity2.Activities\n\n        For Each activity As Activity In childActivities\n            nestedActivities.Add(activity)\n            If (activity Is compositeActivity) Then\n                compositeActivities.Enqueue(activity)\n            End If\n        Next\n    End While\n    Return CType(nestedActivities.ToArray(GetType(Activity)), Activity())\n\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_RemoveActivityFromDesigner_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_RemoveActivityFromDesigner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveActivityFromDesigner(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Removes an activity from the designer host after it has been added to the parent activities collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveActivityFromDesigner (System.Workflow.ComponentModel.Activity activity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Activity to be removed from the designer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to remove an activity from the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a>. Before the last child activity in the workflow is removed from the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a>, it is first removed from the workflow <a class=\"xref\" href=\"system.workflow.componentmodel.compositeactivity#System_Workflow_ComponentModel_CompositeActivity_Activities_\" data-linktype=\"relative-path\">Activities</a> collection.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#40\">public void RemoveLastChildActivity()\n{\n    IDesignerHost designerHost = (IDesignerHost)GetService(typeof(IDesignerHost));\n    CompositeActivity rootActivity = designerHost.RootComponent as CompositeActivity;\n\n    if (rootActivity.Activities.Count &gt; 0)\n    {\n        Activity activityToRemove = rootActivity.Activities[rootActivity.Activities.Count - 1];\n        rootActivity.Activities.Remove(activityToRemove);\n        this.RemoveActivityFromDesigner(activityToRemove);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#40\">Public Sub RemoveLastChildActivity()\n    Dim designerHost As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n    Dim rootActivity As CompositeActivity = CType(designerHost.RootComponent, CompositeActivity)\n\n    If rootActivity.Activities.Count &gt; 0 Then\n        Dim activityToRemove As Activity = rootActivity.Activities(rootActivity.Activities.Count - 1)\n        rootActivity.Activities.Remove(activityToRemove)\n        Me.RemoveActivityFromDesigner(activityToRemove)\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_SaveDesignerLayout_System_Xml_XmlWriter_System_Workflow_ComponentModel_Design_ActivityDesigner_System_Collections_IList__\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_SaveDesignerLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveDesignerLayout(XmlWriter,ActivityDesigner,IList)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the designer layout.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void SaveDesignerLayout (System.Xml.XmlWriter layoutWriter, System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, out System.Collections.IList layoutSaveErrors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>XmlWriter</code> that is used to serialize the layout into.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootDesigner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.design.activitydesigner\" data-linktype=\"relative-path\">ActivityDesigner</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Root activity from which you get the layout information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutSaveErrors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Errors encountered during serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to save the design layout information of a workflow using the SaveDesignerLayout method. After the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object is created, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.activitydesigner\" data-linktype=\"relative-path\">ActivityDesigner</a> for the <code>RootComponent</code> of the workflow is retrieved and passed to the SaveDesignerLayout method. To load the layout file that is generated by this method, see <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader#System_Workflow_ComponentModel_Design_WorkflowDesignerLoader_LoadDesignerLayout_\" data-linktype=\"relative-path\">LoadDesignerLayout</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#38\">public void SaveLayout()\n{\n    using (XmlWriter writer = XmlWriter.Create(&quot;wfInstanceId.designer.xml&quot;))\n    {\n        IList layoutSaveErrors = new ArrayList() as IList;\n        IDesignerHost host = (IDesignerHost)GetService(typeof(IDesignerHost));\n        ActivityDesigner rootDesigner = host.GetDesigner(host.RootComponent) as ActivityDesigner;\n        this.SaveDesignerLayout(writer, rootDesigner, out layoutSaveErrors);\n\n        if (layoutSaveErrors.Count &gt; 0)\n        {\n            System.Text.StringBuilder sb = new System.Text.StringBuilder(&quot;Errors:\\r<br>&quot;);\n            foreach (WorkflowMarkupSerializationException error in layoutSaveErrors)\n            {\n                sb.Append(error.Message + &quot;\\r<br>&quot;);\n            }\n            MessageBox.Show(sb.ToString(), &quot;Error&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#38\">Public Sub SaveLayout()\n    Using writer As XmlWriter = XmlWriter.Create(&quot;wfInstanceId.designer.xml&quot;)\n        Dim layoutSaveErrors As IList = CType(New ArrayList(), IList)\n\n        Dim host As IDesignerHost = CType(GetService(GetType(IDesignerHost)), IDesignerHost)\n        Dim rootDesigner As ActivityDesigner = CType(host.GetDesigner(host.RootComponent), ActivityDesigner)\n        Me.SaveDesignerLayout(writer, rootDesigner, layoutSaveErrors)\n\n        If layoutSaveErrors.Count &gt; 0 Then\n            Dim sb As New System.Text.StringBuilder(&quot;Errors:\\r<br>&quot;)\n            For Each errorMessage As WorkflowMarkupSerializationException In layoutSaveErrors\n                sb.Append(errorMessage.Message + &quot;\\r<br>&quot;)\n            Next\n            MessageBox.Show(sb.ToString(), &quot;Error&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error)\n        End If\n    End Using\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.yml\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader..ctor\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider\">\r\n<meta name=\"APILocation\" content=\"System.Workflow.ComponentModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"352ee05d-c24e-543b-9107-c4e44011ad4b\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Workflow.ComponentModel.Design\\WorkflowDesignerLoader.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides common designer loader functionality that can be used to implement custom workflow designer loaders.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Workflow.ComponentModel.Design/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.yml","open_to_public_contributors":true,"api_name":["System.Workflow.ComponentModel.Design.WorkflowDesignerLoader","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader..ctor","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider"],"api_location":["System.Workflow.ComponentModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Workflow.ComponentModel.Design.WorkflowDesignerLoader","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::#ctor","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::AddActivityToDesigner","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::Dispose","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::FileName","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::Flush","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::ForceReload","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::GetFileReader","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::GetFileWriter","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::InDebugMode","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::Initialize","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::LoadDesignerLayout","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::LoadDesignerLayoutFromResource","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::OnEndLoad","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::PerformFlush","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::PerformLoad","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::RemoveActivityFromDesigner","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::SaveDesignerLayout","System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider","System::Workflow::ComponentModel::Design::WorkflowDesignerLoader::TargetFrameworkTypeDescriptionProvider"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"352ee05d-c24e-543b-9107-c4e44011ad4b","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Workflow.ComponentModel.Design\\WorkflowDesignerLoader.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Workflow.ComponentModel.Design/WorkflowDesignerLoader.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WorkflowDesignerLoader class | Microsoft Docs","_op_ogTitle":"WorkflowDesignerLoader class","description":"Provides common designer loader functionality that can be used to implement custom workflow designer loaders.\n","toc_asset_id":"_splitted/System.Workflow.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.Workflow.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.componentmodel.design.workflowdesignerloader","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.componentmodel.design.workflowdesignerloader","fileRelativePath":"System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.html"},"themesRelativePathToOutputRoot":"_themes/"}