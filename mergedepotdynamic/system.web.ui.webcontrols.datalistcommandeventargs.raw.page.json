{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_DataListCommandEventArgs\">\r\n      <span class=\"lang-csharp\">DataListCommandEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_CancelCommand\" data-linktype=\"relative-path\">CancelCommand</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_DeleteCommand\" data-linktype=\"relative-path\">DeleteCommand</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_EditCommand\" data-linktype=\"relative-path\">EditCommand</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_UpdateCommand\" data-linktype=\"relative-path\">UpdateCommand</a> events of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DataListCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">System.Web.UI.WebControls.CommandEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataListCommandEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs#System_Web_UI_WebControls_CommandEventArgs_CommandArgument\" data-linktype=\"relative-path\">CommandArgument</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs#System_Web_UI_WebControls_CommandEventArgs_CommandName\" data-linktype=\"relative-path\">CommandName</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_CancelCommand\" data-linktype=\"relative-path\">CancelCommand</a> event is raised when the <code>Cancel</code> button for an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is clicked.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_DeleteCommand\" data-linktype=\"relative-path\">DeleteCommand</a> event is raised when the <code>Delete</code> button for an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is clicked.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_EditCommand\" data-linktype=\"relative-path\">EditCommand</a> event is raised when the <code>Edit</code> button for an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is clicked.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a> event is raised when any button for an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is clicked. This allows you to programmatically test for when a specific command button is clicked and take appropriate action. This event is commonly used to handle custom command buttons for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist#System_Web_UI_WebControls_DataList_UpdateCommand\" data-linktype=\"relative-path\">UpdateCommand</a> event is raised when the <code>Update</code> button for an item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control is clicked.  </p>\n<p> For a list of initial property values for an instance of DataListCommandEventArgs, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalistcommandeventargs#System_Web_UI_WebControls_DataListCommandEventArgs__ctor_\" data-linktype=\"relative-path\">DataListCommandEventArgs</a> constructor.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataListCommandEventArgs__ctor_System_Web_UI_WebControls_DataListItem_System_Object_System_Web_UI_WebControls_CommandEventArgs_\" data-linktype=\"self-bookmark\">DataListCommandEventArgs(DataListItem,Object,CommandEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalistcommandeventargs\" data-linktype=\"relative-path\">DataListCommandEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataListCommandEventArgs_CommandSource\" data-linktype=\"self-bookmark\">CommandSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the source of the command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataListCommandEventArgs_Item\" data-linktype=\"self-bookmark\">Item</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the item containing the command source in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataListCommandEventArgs__ctor_System_Web_UI_WebControls_DataListItem_System_Object_System_Web_UI_WebControls_CommandEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataListCommandEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataListCommandEventArgs(DataListItem,Object,CommandEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalistcommandeventargs\" data-linktype=\"relative-path\">DataListCommandEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataListCommandEventArgs (System.Web.UI.WebControls.DataListItem item, object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datalistitem\" data-linktype=\"relative-path\">DataListItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The selected item from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the command.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>originalArgs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">System.Web.UI.WebControls.CommandEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> that contains the original event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create and initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalistcommandeventargs\" data-linktype=\"relative-path\">DataListCommandEventArgs</a> class.  </p>\n<p> When an instance of <a class=\"xref\" href=\"system.web.ui.webcontrols.datalistcommandeventargs\" data-linktype=\"relative-path\">DataListCommandEventArgs</a> is created by a call to this constructor, the following properties are initialized to the specified values.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Item</td>\n<td>The value of the <code>item</code> parameter.</td>\n</tr>\n<tr>\n<td>CommandSource</td>\n<td>The value of the <code>commandSource</code> parameter.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataListCommandEventArgs_CommandSource\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataListCommandEventArgs_CommandSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets the source of the command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object CommandSource { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The source of the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CommandSource property to determine the command source that raised the event. This property is commonly used to determine which command raises the event. You can then take appropriate action, based on the command.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CommandSource property to determine the command selected by the user. It then performs the appropriate action based, on the command.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic DataListCommandEventArgs.Item Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;DataListCommandEventArgs Example&lt;/title&gt;\n&lt;script language=&quot;c#&quot; runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n         \n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Create a DataTable.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;DateTimeValue&quot;, typeof(DateTime)));\n \n         // Create sample data.\n         for (int i = 1; i &lt;= 9; i++) \n         {\n            dr = dt.NewRow();\n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = DateTime.Now.ToShortTimeString();\n            dt.Rows.Add(dr);\n         }\n          \n \n         // Return a DataView to the DataTable.\n         DataView dv = new DataView(dt);\n         return dv;\n         \n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n         \n         if (!IsPostBack)\n            BindList();\n \n      }\n \n      void BindList() \n      {\n\n         DataList1.DataSource = CreateDataSource();\n         DataList1.DataBind();\n\n      }\n     \n      void DataList_ItemCommand(object sender, DataListCommandEventArgs e) \n      {          \n         if (((LinkButton)e.CommandSource).CommandName == &quot;select&quot;)\n            DataList1.SelectedIndex = e.Item.ItemIndex;\n         \n         BindList();\n      }\n \n   &lt;/script&gt;\n \n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataListCommandEventArgs Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;DataList1&quot;                                                \n                    GridLines=&quot;Both&quot;                                                       \n                    OnItemCommand=&quot;DataList_ItemCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n         &lt;HeaderTemplate&gt;\n            Items\n         &lt;/HeaderTemplate&gt;\n\n         &lt;ItemTemplate&gt;\n            &lt;asp:LinkButton id=&quot;button1&quot;\n                            Text=&quot;Show details&quot; \n                            CommandName=&quot;select&quot; \n                            runat=&quot;server&quot;/&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n         &lt;/ItemTemplate&gt;\n\n         &lt;SelectedItemTemplate&gt;\n            Item:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n            &lt;br /&gt;\n            Order Date:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;DateTimeValue&quot;, &quot;{0:d}&quot;) %&gt;\n            &lt;br /&gt;\n            Quantity:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;IntegerValue&quot;, &quot;{0:N1}&quot;) %&gt;\n            &lt;br /&gt;\n         &lt;/SelectedItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n\n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataListCommandEventArgs.Item Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;DataListCommandEventArgs Example&lt;/title&gt;\n&lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n    Function CreateDataSource() As ICollection\n        \n        Dim dt As New DataTable()\n        Dim dr As DataRow\n        \n        &#39; Create a DataTable.\n        dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n        dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n        dt.Columns.Add(New DataColumn(&quot;DateTimeValue&quot;, GetType(DateTime)))\n        \n        &#39; Create sample data.\n        Dim i As Integer\n        For i = 1 To 9\n            dr = dt.NewRow()\n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = DateTime.Now.ToShortTimeString()\n            dt.Rows.Add(dr)\n        Next i\n        \n        \n        &#39; Return a DataView to the DataTable.\n        Dim dv As New DataView(dt)\n        Return dv\n    End Function &#39;CreateDataSource\n     \n\n    Sub Page_Load(sender As Object, e As EventArgs)\n        \n        If Not IsPostBack Then\n            BindList()\n        End If \n    End Sub &#39;Page_Load\n\n\n    Sub BindList()\n        \n        DataList1.DataSource = CreateDataSource()\n        DataList1.DataBind()\n    End Sub &#39;BindList\n     \n\n    Sub DataList_ItemCommand(sender As Object, e As DataListCommandEventArgs)\n        If CType(e.CommandSource, LinkButton).CommandName = &quot;select&quot; Then\n            DataList1.SelectedIndex = e.Item.ItemIndex\n        End If \n        BindList()\n    End Sub &#39;DataList_ItemCommand\n     \n   &lt;/script&gt;\n \n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataListCommandEventArgs Example&lt;/h3&gt;\n \n      &lt;asp:DataList id=&quot;DataList1&quot;                                                \n                    GridLines=&quot;Both&quot;                                                       \n                    OnItemCommand=&quot;DataList_ItemCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n         &lt;HeaderTemplate&gt;\n            Items\n         &lt;/HeaderTemplate&gt;\n\n         &lt;ItemTemplate&gt;\n            &lt;asp:LinkButton id=&quot;button1&quot;\n                            Text=&quot;Show details&quot; \n                            CommandName=&quot;select&quot; \n                            runat=&quot;server&quot;/&gt;\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n         &lt;/ItemTemplate&gt;\n\n         &lt;SelectedItemTemplate&gt;\n            Item:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;StringValue&quot;) %&gt;\n            &lt;br /&gt;\n            Order Date:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;DateTimeValue&quot;, &quot;{0:d}&quot;) %&gt;\n            &lt;br /&gt;\n            Quantity:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;IntegerValue&quot;, &quot;{0:N1}&quot;) %&gt;\n            &lt;br /&gt;\n         &lt;/SelectedItemTemplate&gt;\n \n      &lt;/asp:DataList&gt;\n\n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataListCommandEventArgs_Item\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataListCommandEventArgs_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item</div>        \r\n          </div>\r\n    \r\n            <p>Gets the item containing the command source in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.DataListItem Item { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datalistitem\" data-linktype=\"relative-path\">DataListItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datalistitem\" data-linktype=\"relative-path\">DataListItem</a> object that represents the selected item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Item property to access information about the selected item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Item property to display information about the selected item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DataListEdit#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;DataList Edit Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n      // The Cart and CartView objects temporarily store the data source\n      // for the DataList control while the page is being processed.\n      DataTable Cart = new DataTable();\n      DataView CartView;   \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // With a database, use an select query to retrieve the data. \n         // Because the data source in this example is an in-memory\n         // DataTable, retrieve the data from session state if it exists;\n         // otherwise, create the data source.\n         GetSource();\n\n         // The DataList control maintains state between posts to the server;\n         // it only needs to be bound to a data source the first time the\n         // page is loaded or when the data source is updated.\n         if (!IsPostBack)\n         {\n\n            BindList();\n\n         }\n                   \n      }\n\n      void BindList() \n      {\n\n         // Set the data source and bind to the DataList control.\n         ItemsList.DataSource = CartView;\n         ItemsList.DataBind();\n\n      }\n\n      void GetSource()\n      {\n\n         // For this example, the data source is a DataTable that \n         // is stored in session state. If the data source does not exist,\n         // create it; otherwise, load the data.\n         if (Session[&quot;ShoppingCart&quot;] == null) \n         {     \n\n            // Create the sample data.\n            DataRow dr;  \n \n            // Define the columns of the table.\n            Cart.Columns.Add(new DataColumn(&quot;Qty&quot;, typeof(Int32)));\n            Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(String)));\n            Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(Double)));\n\n            // Store the table in session state to persist its values \n            // between posts to the server.\n            Session[&quot;ShoppingCart&quot;] = Cart;\n             \n            // Populate the DataTable with sample data.\n            for (int i = 1; i &lt;= 9; i++) \n            {\n               dr = Cart.NewRow();\n               if (i % 2 != 0)\n               {\n                  dr[0] = 2;\n               }\n               else\n               {\n                  dr[0] = 1;\n               }\n               dr[1] = &quot;Item &quot; + i.ToString();\n               dr[2] = (1.23 * (i + 1));\n               Cart.Rows.Add(dr);\n            }\n\n         } \n\n         else\n         {\n\n            // Retrieve the sample data from session state.\n            Cart = (DataTable)Session[&quot;ShoppingCart&quot;];\n\n         }         \n \n         // Create a DataView and specify the field to sort by.\n         CartView = new DataView(Cart);\n         CartView.Sort=&quot;Item&quot;;\n\n         return;\n\n      }\n\n      void Edit_Command(Object sender, DataListCommandEventArgs e) \n      {\n\n         // Set the EditItemIndex property to the index of the item clicked\n         // in the DataList control to enable editing for that item. Be sure\n         // to rebind the DataList to the data source to refresh the control.\n         ItemsList.EditItemIndex = e.Item.ItemIndex;\n         BindList();\n\n      }\n\n      void Cancel_Command(Object sender, DataListCommandEventArgs e) \n      {\n\n         // Set the EditItemIndex property to -1 to exit editing mode. Be sure\n         // to rebind the DataList to the data source to refresh the control.\n         ItemsList.EditItemIndex = -1;\n         BindList();\n\n      }\n\n      void Delete_Command(Object sender, DataListCommandEventArgs e) \n      { \n\n         // Retrieve the name of the item to remove.\n         String item = ((Label)e.Item.FindControl(&quot;ItemLabel&quot;)).Text;\n\n         // Filter the CartView for the selected item and remove it from\n         // the data source.\n         CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n         if (CartView.Count &gt; 0) \n         {\n            CartView.Delete(0);\n         }\n         CartView.RowFilter = &quot;&quot;;\n\n         // Set the EditItemIndex property to -1 to exit editing mode. Be sure\n         // to rebind the DataList to the data source to refresh the control.\n         ItemsList.EditItemIndex = -1;\n         BindList();\n\n      }\n\n      void Update_Command(Object sender, DataListCommandEventArgs e) \n      {\n\n         // Retrieve the updated values from the selected item.\n         String item = ((Label)e.Item.FindControl(&quot;ItemLabel&quot;)).Text;\n         String qty = ((TextBox)e.Item.FindControl(&quot;QtyTextBox&quot;)).Text;\n         String price = ((TextBox)e.Item.FindControl(&quot;PriceTextBox&quot;)).Text;\n\n         // With a database, use an update command to update the data.\n         // Because the data source in this example is an in-memory \n         // DataTable, delete the old row and replace it with a new one.\n\n         // Filter the CartView for the selected item and remove it from\n         // the data source.\n         CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n         if (CartView.Count &gt; 0)\n         {\n            CartView.Delete(0);\n         }\n         CartView.RowFilter = &quot;&quot;;\n\n         // ***************************************************************\n         // Insert data validation code here. Make sure to validate the\n         // values entered by the user before converting to the appropriate\n         // data types and updating the data source.\n         // ***************************************************************\n\n         // Add a new entry to replace the previous item.\n         DataRow dr = Cart.NewRow();\n         dr[0] = qty;\n         dr[1] = item;\n         // If necessary, remove the &#39;$&#39; character from the price before\n         // converting the price to a Double.\n         if(price[0] == &#39;$&#39;)\n         {\n            dr[2] = Convert.ToDouble(price.Substring(1));\n         }\n         else\n         {\n            dr[2] = Convert.ToDouble(price);\n         }\n         Cart.Rows.Add(dr);\n\n         // Set the EditItemIndex property to -1 to exit editing mode. \n         // Be sure to rebind the DataList to the data source to refresh\n         // the control.\n         ItemsList.EditItemIndex = -1;\n         BindList();\n\n      }\n\n   &lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList Edit Example&lt;/h3&gt;\n\n      Click &lt;b&gt;Edit&lt;/b&gt; to edit the values of the item.\n\n      &lt;br /&gt;&lt;br /&gt;\n       \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           GridLines=&quot;Both&quot;\n           RepeatColumns=&quot;3&quot;\n           RepeatDirection=&quot;Horizontal&quot;\n           CellPadding=&quot;3&quot;\n           CellSpacing=&quot;0&quot;\n           OnEditCommand=&quot;Edit_Command&quot;\n           OnUpdateCommand=&quot;Update_Command&quot;\n           OnDeleteCommand=&quot;Delete_Command&quot;\n           OnCancelCommand=&quot;Cancel_Command&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;EditItemStyle BackColor=&quot;yellow&quot;&gt;\n         &lt;/EditItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            Items\n\n         &lt;/HeaderTemplate&gt;\n         \n         &lt;ItemTemplate&gt;\n\n            Item:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;Item&quot;) %&gt; \n\n            &lt;br /&gt;\n\n            Quantity:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;Qty&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;Price&quot;, &quot;{0:c}&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            &lt;asp:LinkButton id=&quot;EditButton&quot; \n                 Text=&quot;Edit&quot; \n                 CommandName=&quot;Edit&quot;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n              \n         &lt;EditItemTemplate&gt;\n\n            Item:\n            &lt;asp:Label id=&quot;ItemLabel&quot; \n                 Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;Item&quot;) %&gt;&#39; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;br /&gt;\n\n            Quantity:\n            &lt;asp:TextBox id=&quot;QtyTextBox&quot; \n                 Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;Qty&quot;) %&gt;&#39; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;br /&gt;\n\n            Price:\n            &lt;asp:TextBox id=&quot;PriceTextBox&quot; \n                 Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;Price&quot;, &quot;{0:c}&quot;) %&gt;&#39; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;br /&gt;\n\n            &lt;asp:LinkButton id=&quot;UpdateButton&quot; \n                 Text=&quot;Update&quot; \n                 CommandName=&quot;Update&quot; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;asp:LinkButton id=&quot;DeleteButton&quot; \n                 Text=&quot;Delete&quot; \n                 CommandName=&quot;Delete&quot; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;asp:LinkButton id=&quot;CancelButton&quot; \n                 Text=&quot;Cancel&quot; \n                 CommandName=&quot;Cancel&quot; \n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/EditItemTemplate&gt;\n\n      &lt;/asp:DataList&gt;\n\n   &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataListEdit#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;DataList Edit Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n      &#39; The Cart and CartView objects temporarily store the data source\n      &#39; for the DataList control while the page is being processed.\n      Dim Cart As DataTable = New DataTable()\n      Dim CartView As DataView\n \n      Sub Page_Load(sende As Object, e As EventArgs) \n \n         &#39; With a database, use an select query to retrieve the data.\n         &#39; Because the data source in this example is an in-memory\n         &#39; DataTable, retrieve the data from session state if it exists;\n         &#39; otherwise, create the data source.\n         GetSource()\n\n         &#39; The DataGrid control maintains state between posts to the server;\n         &#39; it only needs to be bound to a data source the first time the\n         &#39; page is loaded or when the data source is updated.\n         If Not IsPostBack Then\n\n            BindList()\n\n         End If\n                   \n      End Sub\n\n      Sub BindList() \n\n         &#39; Set the data source and bind to the DataList control.\n         ItemsList.DataSource = CartView\n         ItemsList.DataBind()\n\n      End Sub\n\n      Sub GetSource()\n\n         &#39; For this example, the data source is a DataTable that\n         &#39; is stored in session state. If the data source does not exist,\n         &#39; create it; otherwise, load the data.\n         If Session(&quot;ShoppingCart&quot;) Is Nothing Then \n\n            &#39; Create the sample data.\n            Dim dr As DataRow  \n \n            &#39; Define the columns of the table.\n            Cart.Columns.Add(new DataColumn(&quot;Qty&quot;, GetType(Int32)))\n            Cart.Columns.Add(new DataColumn(&quot;Item&quot;, GetType(String)))\n            Cart.Columns.Add(new DataColumn(&quot;Price&quot;, GetType(Double)))\n\n            &#39; Store the table in session state to persist its values\n            &#39; between posts to the server.\n            Session(&quot;ShoppingCart&quot;) = Cart\n             \n            &#39; Populate the DataTable with sample data.\n            Dim i As Integer\n\n            For i = 1 To 9 \n            \n               dr = Cart.NewRow()\n               If (i Mod 2) &lt;&gt; 0 Then\n\n                  dr(0) = 2\n               \n               Else\n               \n                  dr(0) = 1\n               \n               End If\n\n               dr(1) = &quot;Item &quot; &amp; i.ToString()\n               dr(2) = (1.23 * (i + 1))\n               Cart.Rows.Add(dr)\n            \n            Next i\n\n         Else\n\n            &#39; Retrieve the sample data from session state.\n            Cart = CType(Session(&quot;ShoppingCart&quot;), DataTable)\n\n         End If         \n \n         &#39; Create a DataView and specify the field to sort by.\n         CartView = New DataView(Cart)\n         CartView.Sort=&quot;Item&quot;\n\n         Return\n\n      End Sub\n\n      Sub Edit_Command(sender As Object, e As DataListCommandEventArgs) \n\n         &#39; Set the EditItemIndex property to the index of the item clicked\n         &#39; in the DataList control to enable editing for that item. Be sure\n         &#39; to rebind the DataList to the data source to refresh the control.\n         ItemsList.EditItemIndex = e.Item.ItemIndex\n         BindList()\n\n      End Sub\n\n      Sub Cancel_Command(sender As Object, e As DataListCommandEventArgs) \n\n         &#39; Set the EditItemIndex property to -1 to exit editing mode. Be sure\n         &#39; to rebind the DataList to the data source to refresh the control.\n         ItemsList.EditItemIndex = -1\n         BindList()\n\n      End Sub\n\n      Sub Delete_Command(sender As Object, e As DataListCommandEventArgs) \n\n         &#39; Retrieve the name of the item to remove.\n         Dim item As String = (CType(e.Item.FindControl(&quot;ItemLabel&quot;), Label)).Text\n\n         &#39; Filter the CartView for the selected item and remove it from\n         &#39; the data source.\n         CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n         If CartView.Count &gt; 0 Then \n       \n            CartView.Delete(0)\n         \n         End If\n         CartView.RowFilter = &quot;&quot;\n\n         &#39; Set the EditItemIndex property to -1 to exit editing mode. Be sure \n         &#39; to rebind the DataList to the data source to refresh the control.\n         ItemsList.EditItemIndex = -1\n         BindList()\n\n      End Sub\n\n      Sub Update_Command(sender As Object, e As DataListCommandEventArgs) \n\n         &#39; Retrieve the updated values from the selected item.\n         Dim item As String = _\n             (CType(e.Item.FindControl(&quot;ItemLabel&quot;), Label)).Text\n         Dim qty As String = _\n             (CType(e.Item.FindControl(&quot;QtyTextBox&quot;), TextBox)).Text\n         Dim price As String = _\n             (CType(e.Item.FindControl(&quot;PriceTextBox&quot;), TextBox)).Text\n\n         &#39; With a database, use an update command to update the data.\n         &#39; Because the data source in this example is an in-memory \n         &#39; DataTable, delete the old row and replace it with a new one.\n\n         &#39; Filter the CartView for the selected item and remove it from \n         &#39; the data source.\n         CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n         If CartView.Count &gt; 0 Then \n       \n            CartView.Delete(0)\n         \n         End If\n         CartView.RowFilter = &quot;&quot;\n\n         &#39; ***************************************************************\n         &#39; Insert data validation code here. Make sure to validate the\n         &#39; values entered by the user before converting to the appropriate\n         &#39; data types and updating the data source.\n         &#39; ***************************************************************\n\n         &#39; Add a new entry to replace the previous item.\n         Dim dr As DataRow = Cart.NewRow()\n         dr(0) = qty\n         dr(1) = item\n         &#39; If necessary, remove the &#39;$&#39; character from the price before \n         &#39; converting the price to a Double.\n         If price.Chars(0) = &quot;$&quot; Then\n\n            dr(2) = Convert.ToDouble(price.Substring(1))\n\n         Else\n\n            dr(2) = Convert.ToDouble(price)\n         \n         End If\n\n         Cart.Rows.Add(dr)\n\n         &#39; Set the EditItemIndex property to -1 to exit editing mode. \n         &#39; Be sure to rebind the DataList to the data source to refresh \n         &#39; the control.\n         ItemsList.EditItemIndex = -1\n         BindList()\n\n      End Sub\n\n   &lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;DataList Edit Example&lt;/h3&gt;\n\n      Click &lt;b&gt;Edit&lt;/b&gt; to edit the values of the item.\n\n      &lt;br /&gt;&lt;br /&gt;\n       \n      &lt;asp:DataList id=&quot;ItemsList&quot;\n           GridLines=&quot;Both&quot;\n           RepeatColumns=&quot;3&quot;\n           RepeatDirection=&quot;Horizontal&quot;\n           CellPadding=&quot;3&quot;\n           CellSpacing=&quot;0&quot;\n           OnEditCommand=&quot;Edit_Command&quot;\n           OnUpdateCommand=&quot;Update_Command&quot;\n           OnDeleteCommand=&quot;Delete_Command&quot;\n           OnCancelCommand=&quot;Cancel_Command&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;Gainsboro&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n         &lt;EditItemStyle BackColor=&quot;yellow&quot;&gt;\n         &lt;/EditItemStyle&gt;\n\n         &lt;HeaderTemplate&gt;\n\n            Items\n\n         &lt;/HeaderTemplate&gt;\n         \n         &lt;ItemTemplate&gt;\n\n            Item:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;Item&quot;) %&gt; \n\n            &lt;br /&gt;\n\n            Quantity:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;Qty&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            Price:\n            &lt;%# DataBinder.Eval(Container.DataItem, &quot;Price&quot;, &quot;{0:c}&quot;) %&gt;\n\n            &lt;br /&gt;\n\n            &lt;asp:LinkButton id=&quot;EditButton&quot; \n                 Text=&quot;Edit&quot; \n                 CommandName=&quot;Edit&quot;\n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/ItemTemplate&gt;\n              \n         &lt;EditItemTemplate&gt;\n\n            Item:\n            &lt;asp:Label id=&quot;ItemLabel&quot; \n                 Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;Item&quot;) %&gt;&#39; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;br /&gt;\n\n            Quantity:\n            &lt;asp:TextBox id=&quot;QtyTextBox&quot; \n                 Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;Qty&quot;) %&gt;&#39; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;br /&gt;\n\n            Price:\n            &lt;asp:TextBox id=&quot;PriceTextBox&quot; \n                 Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;Price&quot;, &quot;{0:c}&quot;) %&gt;&#39; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;br /&gt;\n\n            &lt;asp:LinkButton id=&quot;UpdateButton&quot; \n                 Text=&quot;Update&quot; \n                 CommandName=&quot;Update&quot; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;asp:LinkButton id=&quot;DeleteButton&quot; \n                 Text=&quot;Delete&quot; \n                 CommandName=&quot;Delete&quot; \n                 runat=&quot;server&quot;/&gt;\n\n            &lt;asp:LinkButton id=&quot;CancelButton&quot; \n                 Text=&quot;Cancel&quot; \n                 CommandName=&quot;Cancel&quot; \n                 runat=&quot;server&quot;/&gt;\n\n         &lt;/EditItemTemplate&gt;\n\n      &lt;/asp:DataList&gt;\n\n   &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DataListCommandEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DataListCommandEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListCommandEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListCommandEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListCommandEventArgs.CommandSource\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataListCommandEventArgs.Item\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"83104b35-bdd6-e03d-95f6-e136d3dcaf69\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\DataListCommandEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the , , , , and  events of the  control. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataListCommandEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DataListCommandEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DataListCommandEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.DataListCommandEventArgs","System.Web.UI.WebControls.DataListCommandEventArgs..ctor","System.Web.UI.WebControls.DataListCommandEventArgs.CommandSource","System.Web.UI.WebControls.DataListCommandEventArgs.Item"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataListCommandEventArgs","System::Web::UI::WebControls::DataListCommandEventArgs","System.Web.UI.WebControls.DataListCommandEventArgs.#ctor","System::Web::UI::WebControls::DataListCommandEventArgs::#ctor","System.Web.UI.WebControls.DataListCommandEventArgs.CommandSource","System::Web::UI::WebControls::DataListCommandEventArgs::CommandSource","System.Web.UI.WebControls.DataListCommandEventArgs.Item","System::Web::UI::WebControls::DataListCommandEventArgs::Item"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"83104b35-bdd6-e03d-95f6-e136d3dcaf69","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\DataListCommandEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/DataListCommandEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataListCommandEventArgs class | Microsoft Docs","_op_ogTitle":"DataListCommandEventArgs class","description":"Provides data for the , , , , and  events of the  control. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataListCommandEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.datalistcommandeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.datalistcommandeventargs","fileRelativePath":"System.Web.UI.WebControls.DataListCommandEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}