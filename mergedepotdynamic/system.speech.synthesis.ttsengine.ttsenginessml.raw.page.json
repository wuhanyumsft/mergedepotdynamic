{"content":"    \r\n    <h1 id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml\">\r\n      <span class=\"lang-csharp\">TtsEngineSsml</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Abstract base class to be implemented by all text to speech synthesis engines.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class TtsEngineSsml</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TtsEngineSsml</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class TtsEngineSsml.  </p>\n<p> A properly registered implementation of TtsEngineSsml can then be used as a <code>Synthesizer``Voice</code> by <a class=\"xref\" href=\"system.speech.synthesis\" data-linktype=\"relative-path\">System.Speech.Synthesis</a> name space based applications.  </p>\n<p> Objects inheriting from TtsEngineSsml must override the following members: <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml__ctor_\" data-linktype=\"relative-path\">TtsEngineSsml</a>, <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_AddLexicon_\" data-linktype=\"relative-path\">AddLexicon</a>, <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_RemoveLexicon_\" data-linktype=\"relative-path\">RemoveLexicon</a>, <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_GetOutputFormat_\" data-linktype=\"relative-path\">GetOutputFormat</a> and <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_\" data-linktype=\"relative-path\">Speak</a>.  </p>\n<p> The most important member of the TtsEngineSsml class to be implemented is the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_\" data-linktype=\"relative-path\">Speak</a> method.  </p>\n<p> The <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_\" data-linktype=\"relative-path\">Speak</a> method is called by the infrastructures text parser receiving:  </p>\n<ol>\n<li><p>A reference to the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a> interface, which provides access to system services such as even queuing and writing audio output.  </p>\n</li>\n<li><p>An array of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> instance produced from Speech Synthesis Markup Language (SSML) input. In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.fragmentstate\" data-linktype=\"relative-path\">FragmentState</a> instance associated with each incoming <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> object.  </p>\n<p>A speech synthesizer application can optionally make requests for a specified output format by implementing <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_GetOutputFormat_\" data-linktype=\"relative-path\">GetOutputFormat</a> to be called by the platform when it tries to provide the correct audio output.  </p>\n<p>An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_AddLexicon_\" data-linktype=\"relative-path\">AddLexicon</a> and <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_RemoveLexicon_\" data-linktype=\"relative-path\">RemoveLexicon</a>.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_TtsEngine_TtsEngineSsml__ctor_System_String_\" data-linktype=\"self-bookmark\">TtsEngineSsml(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Constructs a new instance of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> based on an appropriate Voice Token registry key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_AddLexicon_System_Uri_System_String_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_\" data-linktype=\"self-bookmark\">AddLexicon(Uri,String,ITtsEngineSite)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a lexicon to the <code>Synthesizer``Voice</code> implemented by the current <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_GetOutputFormat_System_Speech_Synthesis_TtsEngine_SpeakOutputFormat_System_IntPtr_\" data-linktype=\"self-bookmark\">GetOutputFormat(SpeakOutputFormat,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_RemoveLexicon_System_Uri_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_\" data-linktype=\"self-bookmark\">RemoveLexicon(Uri,ITtsEngineSite)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a lexicon currently loaded by the <code>Synthesizer``Voice</code> implemented by the current <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_System_Speech_Synthesis_TtsEngine_TextFragment___System_IntPtr_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_\" data-linktype=\"self-bookmark\">Speak(TextFragment[],IntPtr,ITtsEngineSite)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Renders specified <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> array in the specified output format.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TtsEngineSsml(String)</div>        \r\n          </div>\r\n    \r\n            <p>Constructs a new instance of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> based on an appropriate Voice Token registry key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected TtsEngineSsml (string registryKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>registryKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Full name of the registry key for the Voice Token associated with the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> implementation. engine.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calls to this constructor are typically generated by <a class=\"xref\" href=\"system.speech.synthesis\" data-linktype=\"relative-path\">System.Speech.Synthesis</a> based applications selecting a <code>Synthesizer``Voice</code> to be used by an instance of <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>.  </p>\n<p> A <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> must be register under HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_AddLexicon_System_Uri_System_String_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_AddLexicon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLexicon(Uri,String,ITtsEngineSite)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a lexicon to the <code>Synthesizer``Voice</code> implemented by the current <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A valid instance of <code>System.Uri</code> indicating the location of the lexicon information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mediaType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing the media type of the lexicon. Media types are case insensitive.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to an <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a> interface used to interact with the platform infrastructure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.  </p>\n<p> This method is typically called by the platform infrastructure in response to a <a class=\"xref\" href=\"system.speech.synthesis\" data-linktype=\"relative-path\">System.Speech.Synthesis</a> based applications calling AddLexicon and using the <code>Synthesizer``Voice</code> implemented by the current <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> instance.  </p>\n<p> The value of <code>mediaType</code> is typically a MIME specification, as the SSML specification uses MIME for media specifications.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The implementation of AddLexicon uses the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a> interface passed in to load a lexicon from a resource. It then stores a <code>System.IO.Stream</code> to the lexicon in a <code>System.Collections.Generic.Dictionary</code> instance, indexed by the lexicon URI.  </p>\n<pre><code>public static Dictionary&lt;Uri, Stream&gt; _aLexicons = new Dictionary&lt;Uri, Stream&gt;();  \n\n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \n    Stream stream = site.LoadResource(uri, mediaType);  \n    _aLexicons.Add(uri, stream);  \n}  \n\n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \n     Stream stream;  \n     if (_aLexicons.TryGetValue(uri, out stream)) {  \n         stream.Close();  \n         _aLexicons.Remove(uri);  \n     }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_GetOutputFormat_System_Speech_Synthesis_TtsEngine_SpeakOutputFormat_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_GetOutputFormat_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOutputFormat(SpeakOutputFormat,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>speakOutputFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.ttsengine.speakoutputformat\" data-linktype=\"relative-path\">SpeakOutputFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Valid member of the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.speakoutputformat\" data-linktype=\"relative-path\">SpeakOutputFormat</a> enumeration indicating the type of requested audio output format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetWaveFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to a <code>struct</code> containing detail setting for the audio format type requested by the <code>speakOutputFormat</code> argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>Returns a valid <code>IntPtr</code> instance referring to a <code>struct</code> containing detailed information about the output format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The structure used as <code>targetWaveFormat</code> and returned by the method should compatible with the <code>WAVEFORMATEX</code> available under SAPI, and the returned value should be allocated using <code>CoTaskMemAlloc</code>.  </p>\n<p> The <code>struct</code> must provide functionality equivalent to:  </p>\n<pre><code>internal struct WaveFormat  \n{  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.  </p>\n<pre><code>public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  \n    WaveFormat waveFormat = new WaveFormat();  \n    WaveFormat rq=new WaveFormat();  \n    Marshal.PtrToStructure(targetWaveFormat,rq);  \n\n    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min &lt; rq.AvgBytesPerSec &amp;&amp; rq.AvgBytesPerSec &lt; AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  \n    waveFormat.BitsPerSample = BitsPerSampleMin &lt; rq.AvgBytesPerSec &amp;&amp; rq.BitsPerSample &lt; BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  \n    waveFormat.BlockAlign = 2;  \n    waveFormat.Channels = 1;  \n    waveFormat.FormatTag = 1;  \n    waveFormat.SamplesPerSec = 16000;  \n    waveFormat.Size = 0;  \n\n    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  \n    Marshal.StructureToPtr(waveFormat, wfx, false);  \n\n    //Console.WriteLine (&quot;GetOutputFormat called&quot;);  \n    return wfx;  \n}  \ninternal struct WaveFormat {  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_RemoveLexicon_System_Uri_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_RemoveLexicon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveLexicon(Uri,ITtsEngineSite)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a lexicon currently loaded by the <code>Synthesizer``Voice</code> implemented by the current <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A valid instance of <code>System.Uri</code> indicating the location of the lexicon information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to an <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.  </p>\n<p> This method is typically called in response to a <a class=\"xref\" href=\"system.speech.synthesis\" data-linktype=\"relative-path\">System.Speech.Synthesis</a> based applications calling <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_RemoveLexicon_\" data-linktype=\"relative-path\">RemoveLexicon</a> and using the <code>Synthesizer``Voice</code> implemented by the current <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a> instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The implementation of RemoveLexicon uses the lexicon URI to query an instance <code>System.Collections.Generic.Dictionary</code> for the <code>System.IO.Stream</code>, closes the stream and removes the uri referring to the lexicon.  </p>\n<pre><code>public static Dictionary&lt;Uri, Stream&gt; _aLexicons = new Dictionary&lt;Uri, Stream&gt;();  \n\n public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  \n    Stream stream = site.LoadResource(uri, mediaType);  \n    _aLexicons.Add(uri, stream);  \n}  \n\n public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  \n     Stream stream;  \n     if (_aLexicons.TryGetValue(uri, out stream)) {  \n         stream.Close();  \n         _aLexicons.Remove(uri);  \n     }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_System_Speech_Synthesis_TtsEngine_TextFragment___System_IntPtr_System_Speech_Synthesis_TtsEngine_ITtsEngineSite_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_TtsEngine_TtsEngineSsml_Speak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Speak(TextFragment[],IntPtr,ITtsEngineSite)</div>        \r\n          </div>\r\n    \r\n            <p>Renders specified <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> array in the specified output format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fragment</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> instances containing the text to be rendered into speech.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>waveHeader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <code>IntPtr</code> pointing to a structure containing audio output format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>site</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to an <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The structure used as <code>waveHeader</code> and returned by the method should compatible with the <code>WAVEFORMATEX</code> available under SAPI.  </p>\n<p> The <code>struct</code> must provide functionality equivalent to:  </p>\n<pre><code>internal struct WaveFormat  \n{  \n    public Int16 FormatTag;  \n    public Int16 Channels;  \n    public int SamplesPerSec;  \n    public int AvgBytesPerSec;  \n    public Int16 BlockAlign;  \n    public Int16 BitsPerSample;  \n    public Int16 Size;  \n}\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The example below is part of a custom speech synthesis implementation inheriting from <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsenginessml\" data-linktype=\"relative-path\">TtsEngineSsml</a>, and using the use of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a>, <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.speecheventinfo\" data-linktype=\"relative-path\">SpeechEventInfo</a>, <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.fragmentstate\" data-linktype=\"relative-path\">FragmentState</a>, and <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttseventid\" data-linktype=\"relative-path\">TtsEventId</a>  </p>\n<p> The implementation of Speak  </p>\n<ol>\n<li><p>Receives an array of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> instances and creates a new array of <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> instances to be passed to the <code>Speak</code> method on an underlying synthesis engine.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsengineaction\" data-linktype=\"relative-path\">TtsEngineAction</a> enumeration value by found from the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.fragmentstate#System_Speech_Synthesis_TtsEngine_FragmentState_Action_\" data-linktype=\"relative-path\">Action</a> property on the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.fragmentstate\" data-linktype=\"relative-path\">FragmentState</a> returned by the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment#System_Speech_Synthesis_TtsEngine_TextFragment_State_\" data-linktype=\"relative-path\">State</a> property of each <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> instance is <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttsengineaction\" data-linktype=\"relative-path\">TtsEngineAction</a>, the implementation  </p>\n<ul>\n<li><p>Translates Americanism to Britishisms in the text to be spoken.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite#System_Speech_Synthesis_TtsEngine_ITtsEngineSite_EventInterest_\" data-linktype=\"relative-path\">EventInterest</a> property on the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ittsenginesite\" data-linktype=\"relative-path\">ITtsEngineSite</a> interfaces provided to the implementation support the <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.ttseventid\" data-linktype=\"relative-path\">TtsEventId</a> event type, a <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.speecheventinfo\" data-linktype=\"relative-path\">SpeechEventInfo</a> instance is used to create an event to drive a synthesizer progress meter is created.  </p>\n</li>\n</ul>\n</li>\n<li><p>A speech rendering engine is then called with the modified <a class=\"xref\" href=\"system.speech.synthesis.ttsengine.textfragment\" data-linktype=\"relative-path\">TextFragment</a> array.  </p>\n</li>\n</ol>\n<pre><code>private const int WordBoundaryFlag = 1 &lt;&lt; (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { &#39; &#39;, &#39;&nbsp;&nbsp;&nbsp;&nbsp;&#39;, &#39;\\r&#39;, &#39;<br>&#39; };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n\n  for (int i=0;i&lt;frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest &amp; WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n\n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n        offset += s.Length;  \n        if (s.Trim().Length &gt; 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n    _baseSynthesize.Speak(newFrags, wfx, site);  \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Synthesis.TtsEngine.TtsEngineSsml.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Synthesis.TtsEngine.TtsEngineSsml.yml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml..ctor\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak\">\r\n<meta name=\"APILocation\" content=\"System.Speech.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4ea9354a-f799-117c-6ad3-5a8074830278\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Speech.Synthesis.TtsEngine\\TtsEngineSsml.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Abstract base class to be implemented by all text to speech synthesis engines.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Speech.Synthesis.TtsEngine/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Speech.Synthesis.TtsEngine.TtsEngineSsml\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Synthesis.TtsEngine.TtsEngineSsml.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Synthesis.TtsEngine.TtsEngineSsml.yml","open_to_public_contributors":true,"api_name":["System.Speech.Synthesis.TtsEngine.TtsEngineSsml","System.Speech.Synthesis.TtsEngine.TtsEngineSsml..ctor","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak"],"api_location":["System.Speech.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Speech.Synthesis.TtsEngine.TtsEngineSsml","System::Speech::Synthesis::TtsEngine::TtsEngineSsml","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor","System::Speech::Synthesis::TtsEngine::TtsEngineSsml::#ctor","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon","System::Speech::Synthesis::TtsEngine::TtsEngineSsml::AddLexicon","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat","System::Speech::Synthesis::TtsEngine::TtsEngineSsml::GetOutputFormat","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon","System::Speech::Synthesis::TtsEngine::TtsEngineSsml::RemoveLexicon","System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak","System::Speech::Synthesis::TtsEngine::TtsEngineSsml::Speak"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4ea9354a-f799-117c-6ad3-5a8074830278","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Speech.Synthesis.TtsEngine\\TtsEngineSsml.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Speech.Synthesis.TtsEngine/TtsEngineSsml.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TtsEngineSsml class | Microsoft Docs","_op_ogTitle":"TtsEngineSsml class","description":"Abstract base class to be implemented by all text to speech synthesis engines.\n","toc_asset_id":"_splitted/System.Speech.Synthesis.TtsEngine/toc.json","toc_rel":"_splitted/System.Speech.Synthesis.TtsEngine/toc.json","source_url":"","ms.assetid":"System.Speech.Synthesis.TtsEngine.TtsEngineSsml","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.synthesis.ttsengine.ttsenginessml","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.synthesis.ttsengine.ttsenginessml","fileRelativePath":"System.Speech.Synthesis.TtsEngine.TtsEngineSsml.html"},"themesRelativePathToOutputRoot":"_themes/"}