{"content":"    \r\n    <h1 id=\"System_Windows_Threading_Dispatcher\">\r\n      <span class=\"lang-csharp\">Dispatcher</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides services for managing the queue of work items for a thread.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Dispatcher</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Dispatcher</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The Dispatcher maintains a prioritized queue of work items for a specific thread.  </p>\n<p> When a Dispatcher is created on a thread, it becomes the only Dispatcher that can be associated with the thread, even if the Dispatcher is shut down.  </p>\n<p> If you attempt to get the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_CurrentDispatcher_\" data-linktype=\"relative-path\">CurrentDispatcher</a> for the current thread and a Dispatcher is not associated with the thread, a Dispatcher will be created. A Dispatcher is also created when you create a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>. If you create a Dispatcher on a background thread, be sure to shut down the dispatcher before exiting the thread.  </p>\n<p> If a Dispatcher is shut down, it cannot be restarted.  </p>\n<p> In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> can only be accessed by the Dispatcher it is associated with.  For example, a background thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that is associated with the Dispatcher on the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-ui-md.md&quot; -->UI<!--END INCLUDE --> thread.  In order for the background thread to access the <a class=\"xref\" href=\"system.windows.controls.contentcontrol#System_Windows_Controls_ContentControl_Content_\" data-linktype=\"relative-path\">Content</a> property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the Dispatcher associated with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-ui-md.md&quot; -->UI<!--END INCLUDE --> thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the queue of the Dispatcher at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> If <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is called on a Dispatcher that has shut down, the status property of the returned <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> is set to <a class=\"xref\" href=\"system.windows.threading.dispatcheroperationstatus\" data-linktype=\"relative-path\">DispatcherOperationStatus</a>.  </p>\n<p> All of the methods on Dispatcher, with the exception of <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_DisableProcessing_\" data-linktype=\"relative-path\">DisableProcessing</a>, are free-threaded.  </p>\n<p> Objects that derive from <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> have thread affinity.  </p>\n<p> Objects that derive from <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> are free-threaded when they are frozen.  For more information, see <a href=\"../Topic/Freezable%20Objects%20Overview.md\" data-linktype=\"relative-path\">Freezable Objects Overview</a>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_CurrentDispatcher\" data-linktype=\"self-bookmark\">CurrentDispatcher</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> for the thread currently executing and creates a new <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> if one is not already associated with the thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_HasShutdownFinished\" data-linktype=\"self-bookmark\">HasShutdownFinished</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> has finished shutting down.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_HasShutdownStarted\" data-linktype=\"self-bookmark\">HasShutdownStarted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is shutting down.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Hooks\" data-linktype=\"self-bookmark\">Hooks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of hooks that provide additional event information about the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Thread\" data-linktype=\"self-bookmark\">Thread</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the thread this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_BeginInvoke_System_Delegate_System_Object___\" data-linktype=\"self-bookmark\">BeginInvoke(Delegate,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate asynchronously with the specified arguments on the thread that the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> was created on.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_BeginInvoke_System_Windows_Threading_DispatcherPriority_System_Delegate_\" data-linktype=\"self-bookmark\">BeginInvoke(DispatcherPriority,Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_BeginInvoke_System_Delegate_System_Windows_Threading_DispatcherPriority_System_Object___\" data-linktype=\"self-bookmark\">BeginInvoke(Delegate,DispatcherPriority,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> was created on.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_BeginInvoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_\" data-linktype=\"self-bookmark\">BeginInvoke(DispatcherPriority,Delegate,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_BeginInvoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_System_Object___\" data-linktype=\"self-bookmark\">BeginInvoke(DispatcherPriority,Delegate,Object,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_BeginInvokeShutdown_System_Windows_Threading_DispatcherPriority_\" data-linktype=\"self-bookmark\">BeginInvokeShutdown(DispatcherPriority)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initiates shutdown of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> asynchronously.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_CheckAccess\" data-linktype=\"self-bookmark\">CheckAccess()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the calling thread is the thread associated with this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_DisableProcessing\" data-linktype=\"self-bookmark\">DisableProcessing()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disables processing of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> queue.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_ExitAllFrames\" data-linktype=\"self-bookmark\">ExitAllFrames()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Requests that all frames exit, including nested frames.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_FromThread_System_Threading_Thread_\" data-linktype=\"self-bookmark\">FromThread(Thread)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> for the specified thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Action_\" data-linktype=\"self-bookmark\">Invoke(Action)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Action_System_Windows_Threading_DispatcherPriority_\" data-linktype=\"self-bookmark\">Invoke(Action,DispatcherPriority)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_Object___\" data-linktype=\"self-bookmark\">Invoke(Delegate,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_Delegate_\" data-linktype=\"self-bookmark\">Invoke(DispatcherPriority,Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate synchronously at the specified priority on the thread on which the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Action_System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">Invoke(Action,DispatcherPriority,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_TimeSpan_System_Object___\" data-linktype=\"self-bookmark\">Invoke(Delegate,TimeSpan,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_Windows_Threading_DispatcherPriority_System_Object___\" data-linktype=\"self-bookmark\">Invoke(Delegate,DispatcherPriority,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_\" data-linktype=\"self-bookmark\">Invoke(DispatcherPriority,Delegate,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_TimeSpan_System_Delegate_\" data-linktype=\"self-bookmark\">Invoke(DispatcherPriority,TimeSpan,Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> was created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Action_System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_System_TimeSpan_\" data-linktype=\"self-bookmark\">Invoke(Action,DispatcherPriority,CancellationToken,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_TimeSpan_System_Windows_Threading_DispatcherPriority_System_Object___\" data-linktype=\"self-bookmark\">Invoke(Delegate,TimeSpan,DispatcherPriority,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_System_Object___\" data-linktype=\"self-bookmark\">Invoke(DispatcherPriority,Delegate,Object,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_TimeSpan_System_Delegate_System_Object_\" data-linktype=\"self-bookmark\">Invoke(DispatcherPriority,TimeSpan,Delegate,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_TimeSpan_System_Delegate_System_Object_System_Object___\" data-linktype=\"self-bookmark\">Invoke(DispatcherPriority,TimeSpan,Delegate,Object,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__\" data-linktype=\"self-bookmark\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__System_Windows_Threading_DispatcherPriority_\" data-linktype=\"self-bookmark\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_System_TimeSpan_\" data-linktype=\"self-bookmark\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority,CancellationToken,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeAsync_System_Action_\" data-linktype=\"self-bookmark\">InvokeAsync(Action)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> asynchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeAsync_System_Action_System_Windows_Threading_DispatcherPriority_\" data-linktype=\"self-bookmark\">InvokeAsync(Action,DispatcherPriority)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeAsync_System_Action_System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">InvokeAsync(Action,DispatcherPriority,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeAsync__1_System_Func___0__\" data-linktype=\"self-bookmark\">InvokeAsync&lt;TResult&gt;(Func&lt;TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> asynchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeAsync__1_System_Func___0__System_Windows_Threading_DispatcherPriority_\" data-linktype=\"self-bookmark\">InvokeAsync&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeAsync__1_System_Func___0__System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">InvokeAsync&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_InvokeShutdown\" data-linktype=\"self-bookmark\">InvokeShutdown()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initiates the shutdown process of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> synchronously.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_PushFrame_System_Windows_Threading_DispatcherFrame_\" data-linktype=\"self-bookmark\">PushFrame(DispatcherFrame)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enters an execute loop.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Run\" data-linktype=\"self-bookmark\">Run()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Pushes the main execution frame on the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_ValidatePriority_System_Windows_Threading_DispatcherPriority_System_String_\" data-linktype=\"self-bookmark\">ValidatePriority(DispatcherPriority,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> is a valid priority.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_VerifyAccess\" data-linktype=\"self-bookmark\">VerifyAccess()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Yield\" data-linktype=\"self-bookmark\">Yield()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_Yield_System_Windows_Threading_DispatcherPriority_\" data-linktype=\"self-bookmark\">Yield(DispatcherPriority)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_ShutdownFinished\" data-linktype=\"self-bookmark\">ShutdownFinished</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> finishes shutting down.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_ShutdownStarted\" data-linktype=\"self-bookmark\">ShutdownStarted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> begins to shut down.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_UnhandledException\" data-linktype=\"self-bookmark\">UnhandledException</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <span class=\"xref\">stem.Windows.Threading.Dispatcher.Invoke*</span> or <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Threading_Dispatcher_UnhandledExceptionFilter\" data-linktype=\"self-bookmark\">UnhandledExceptionFilter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <span class=\"xref\">stem.Windows.Threading.Dispatcher.Invoke*</span> or <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> when in the filter stage.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_CurrentDispatcher\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_CurrentDispatcher_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentDispatcher</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> for the thread currently executing and creates a new <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> if one is not already associated with the thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a></div>\r\n                  </div>\r\n                  <p>The dispatcher associated with the current thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is not associated with the current thread, a new <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> will be created.  This is not the case with the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_FromThread_\" data-linktype=\"relative-path\">FromThread</a> method.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_FromThread_\" data-linktype=\"relative-path\">FromThread</a> will return <code>null</code> if there is not a dispatcher associated with the specified thread.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_HasShutdownFinished\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_HasShutdownFinished_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasShutdownFinished</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> has finished shutting down.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasShutdownFinished { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dispatcher has finished shutting down; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> starts to shut down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownStarted\" data-linktype=\"relative-path\">ShutdownStarted</a> event is raised and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownStarted_\" data-linktype=\"relative-path\">HasShutdownStarted</a> is set to <code>true</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> does not shutdown completely until the event queue unwinds.  </p>\n<p> When the Dispatcher finishes shutting down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownFinished\" data-linktype=\"relative-path\">ShutdownFinished</a> event is raised and the HasShutdownFinished property is set to <code>true</code>.  </p>\n<p> Once the shutdown process begins, all pending work items in the queue are aborted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_HasShutdownStarted\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_HasShutdownStarted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasShutdownStarted</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is shutting down.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasShutdownStarted { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> has started shutting down; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> starts to shut down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownStarted\" data-linktype=\"relative-path\">ShutdownStarted</a> event is raised and HasShutdownStarted is set to <code>true</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> does not shut down completely until the event queue unwinds.  </p>\n<p> When the Dispatcher finishes shutting down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownFinished\" data-linktype=\"relative-path\">ShutdownFinished</a> event is raised and the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownFinished_\" data-linktype=\"relative-path\">HasShutdownFinished</a> property is set to <code>true</code>.  </p>\n<p> Once the shutdown process begins, all pending work items in the queue are aborted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Hooks\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Hooks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Hooks</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of hooks that provide additional event information about the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherHooks Hooks { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherhooks\" data-linktype=\"relative-path\">DispatcherHooks</a></div>\r\n                  </div>\r\n                  <p>The hooks associated with this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.threading.dispatcherhooks\" data-linktype=\"relative-path\">DispatcherHooks</a> class provides additional event information about the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>, such as when the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is inactive or when an operation has competed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Thread\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Thread_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Thread</div>        \r\n          </div>\r\n    \r\n            <p>Gets the thread this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Thread Thread { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a></div>\r\n                  </div>\r\n                  <p>The thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_BeginInvoke_System_Delegate_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(Delegate,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate asynchronously with the specified arguments on the thread that the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> was created on.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to a method that takes parameters specified in <code>args</code>, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object returned by <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> can be used in several ways to interact with the specified delegate, such as:  </p>\n<ul>\n<li><p>Changing the <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> of the delegate as it is pending execution in the event queue.  </p>\n</li>\n<li><p>Removing the delegate from the event queue.  </p>\n</li>\n<li><p>Waiting for the delegate to return.  </p>\n</li>\n<li><p>Obtaining the value that the delegate returns after it is executed.  </p>\n<p><a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous; therefore, control returns immediately to the calling object after it is called.  </p>\n<p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object. For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread. In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread. This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous. The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p>If <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is called on a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> that has shut down, the status property of the returned <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> is set to <a class=\"xref\" href=\"system.windows.threading.dispatcheroperationstatus\" data-linktype=\"relative-path\">DispatcherOperationStatus</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_BeginInvoke_System_Windows_Threading_DispatcherPriority_System_Delegate_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(DispatcherPriority,Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to a method that takes no arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If multiple BeginInvoke calls are made at the same <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>, they will be executed in the order the calls were made.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> returns a <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object that can be used to interact with the delegate when the delegate is in the event queue.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object returned by <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> can be used in several ways to interact with the specified delegate, such as:  </p>\n<ul>\n<li><p>Changing the <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> of the delegate as it is pending execution in the event queue.  </p>\n</li>\n<li><p>Removing the delegate from the event queue.  </p>\n</li>\n<li><p>Waiting for the delegate to return.  </p>\n</li>\n<li><p>Obtaining the value that the delegate returns after it is executed.  </p>\n<p><a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous; therefore, control returns immediately to the calling object after it is called.  </p>\n<p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p>If <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is called on a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> that has shut down, the status property of the returned <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> is set to <a class=\"xref\" href=\"system.windows.threading.dispatcheroperationstatus\" data-linktype=\"relative-path\">DispatcherOperationStatus</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to place an operation onto a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  For the full source code of this example, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=160038\" data-linktype=\"external\">Single-Threaded Application with Long-Running Calculation Sample</a>.  </p>\n<p> First, a delegate is created that accepts no arguments.  </p>\n<pre><code class=\"lang-vb\" name=\"ThreadingPrimeNumber#ThreadingPrimeNumberInit\">        Public Delegate Sub NextPrimeDelegate()\n</code></pre><pre><code class=\"lang-cs\" name=\"ThreadingPrimeNumber#ThreadingPrimeNumberInit\">        public delegate void NextPrimeDelegate();\n</code></pre><p> Next, BeginInvoke is called.  Because every <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> has a property that returns the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> it is associated with, the desired <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is obtained by querying the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>, in this case a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> named <code>startStopButton</code>.   The call to BeginInvoke takes two parameters: the priority, which is set to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">System.Windows.Threading.DispatcherPriority</a>, and the callback, which is passed in through an instance of the delegate <code>NextPrimeDelegate</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"ThreadingPrimeNumber#ThreadingPrimeNumberBeingInvoke\">                startStopButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal, New NextPrimeDelegate(AddressOf CheckNextNumber))\n</code></pre><pre><code class=\"lang-cs\" name=\"ThreadingPrimeNumber#ThreadingPrimeNumberBeingInvoke\">                startStopButton.Dispatcher.BeginInvoke(\n                    DispatcherPriority.Normal,\n                    new NextPrimeDelegate(CheckNextNumber));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_BeginInvoke_System_Delegate_System_Windows_Threading_DispatcherPriority_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(Delegate,DispatcherPriority,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> was created on.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to a method that takes parameters specified in <code>args</code>, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object returned by <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> can be used in several ways to interact with the specified delegate, such as:  </p>\n<ul>\n<li><p>Changing the <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> of the delegate as it is pending execution in the event queue.  </p>\n</li>\n<li><p>Removing the delegate from the event queue.  </p>\n</li>\n<li><p>Waiting for the delegate to return.  </p>\n</li>\n<li><p>Obtaining the value that the delegate returns after it is executed.  </p>\n<p><a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous; therefore, control returns immediately to the calling object after it is called.  </p>\n<p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object. For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread. In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread. This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous. The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p>If <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is called on a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> that has shut down, the status property of the returned <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> is set to <a class=\"xref\" href=\"system.windows.threading.dispatcheroperationstatus\" data-linktype=\"relative-path\">DispatcherOperationStatus</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_BeginInvoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(DispatcherPriority,Delegate,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes one argument, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to pass as an argument to the specified method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Arg</code> can be <code>null</code> if no arguments are needed.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> returns a <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object that can be used to interact with the delegate when the delegate is in the event queue.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object returned by <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> can be used in several ways to interact with the specified delegate, such as:  </p>\n<ul>\n<li><p>Changing the <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> of the delegate as it is pending execution in the event queue.  </p>\n</li>\n<li><p>Removing the delegate from the event queue.  </p>\n</li>\n<li><p>Waiting for the delegate to return.  </p>\n</li>\n<li><p>Obtaining the value that the delegate returns after it is executed.  </p>\n<p><a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous; therefore, control returns immediately to the calling object after it is called.  </p>\n<p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p>If multiple <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> calls are made at the same <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>, they will be executed in the order the calls were made.  </p>\n<p>If <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is called on a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> that has shut down, the status property of the returned <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> is set to <a class=\"xref\" href=\"system.windows.threading.dispatcheroperationstatus\" data-linktype=\"relative-path\">DispatcherOperationStatus</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to place an operation onto a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  </p>\n<p> First, a delegate is created that accepts one argument, in this case a string.  </p>\n<pre><code class=\"lang-vb\" name=\"ThreadingWeatherForecast#ThreadingWeatherDelegates\">Private Delegate Sub OneArgDelegate(ByVal arg As String)\n</code></pre><pre><code class=\"lang-cs\" name=\"ThreadingWeatherForecast#ThreadingWeatherDelegates\">private delegate void OneArgDelegate(String arg);\n</code></pre><p> Next, BeginInvoke is called.  Because every <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> has a property that returns the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> it is associated with, the desired <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is obtained by querying the <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>, in this case a <a class=\"xref\" href=\"system.windows.controls.grid\" data-linktype=\"relative-path\">Grid</a> named <code>tomorrowsWeather</code>. The call to BeginInvoke takes three parameters: the priority, which is set to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">System.Windows.Threading.DispatcherPriority</a>; the callback, which is passed in through an instance of the delegate <code>OneArgDelegate</code>; and a string named <code>weather</code>, which is the argument for the callback.  </p>\n<pre><code class=\"lang-vb\" name=\"threadingweatherforecast#ThreadingWeatherDispatcherOneArge\">&#39; Schedule the update function in the UI thread.\ntomorrowsWeather.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority.Normal, New OneArgDelegate(AddressOf UpdateUserInterface), weather)\n</code></pre><pre><code class=\"lang-cs\" name=\"threadingweatherforecast#ThreadingWeatherDispatcherOneArge\">// Schedule the update function in the UI thread.\ntomorrowsWeather.Dispatcher.BeginInvoke(\n    System.Windows.Threading.DispatcherPriority.Normal,\n    new OneArgDelegate(UpdateUserInterface), \n    weather);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_BeginInvoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(DispatcherPriority,Delegate,Object,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes multiple arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to pass as an argument to the specified method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the specified method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> is called, that can be used to interact with the delegate as it is pending execution in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> is not a valid priority.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>arg</code> parameter can be <code>null</code> if no arguments are needed.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> returns a <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object that can be used to interact with the delegate when the delegate is in the event queue.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> object returned by <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> can be used in several ways to interact with the specified delegate, such as:  </p>\n<ul>\n<li><p>Changing the <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> of the delegate as it is pending execution in the event queue.  </p>\n</li>\n<li><p>Removing the delegate from the event queue.  </p>\n</li>\n<li><p>Waiting for the delegate to return.  </p>\n</li>\n<li><p>Obtaining the value that the delegate returns after it is executed.  </p>\n<p><a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous; therefore, control returns immediately to the calling object after it is called.  </p>\n<p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p>If multiple <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> calls are made at the same <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>, they will be executed in the order the calls were made.  </p>\n<p>If <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is called on a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> that has shut down, the status property of the returned <a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a> is set to <a class=\"xref\" href=\"system.windows.threading.dispatcheroperationstatus\" data-linktype=\"relative-path\">DispatcherOperationStatus</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_BeginInvokeShutdown_System_Windows_Threading_DispatcherPriority_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_BeginInvokeShutdown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvokeShutdown(DispatcherPriority)</div>        \r\n          </div>\r\n    \r\n            <p>Initiates shutdown of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> asynchronously.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority at which to begin shutting down the dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>BeginInvokeShutdown demands unrestricted UI Permissions.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> starts to shut down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownStarted\" data-linktype=\"relative-path\">ShutdownStarted</a> event is raised and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownStarted_\" data-linktype=\"relative-path\">HasShutdownStarted</a> is set to <code>true</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> does not shut down completely until the event queue unwinds.  </p>\n<p> When the Dispatcher finishes shutting down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownFinished\" data-linktype=\"relative-path\">ShutdownFinished</a> event is raised and the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownFinished_\" data-linktype=\"relative-path\">HasShutdownFinished</a> property is set to <code>true</code>.  </p>\n<p> Once the shutdown process begins, all pending work items in the queue are aborted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_CheckAccess\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_CheckAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckAccess()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the calling thread is the thread associated with this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CheckAccess ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the calling thread is the thread associated with this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> that a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> is created on may access the object.  Use <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> to access the object from a different thread.  </p>\n<p> CheckAccess can be called from any thread.  </p>\n<p> The difference between CheckAccess and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_VerifyAccess_\" data-linktype=\"relative-path\">VerifyAccess</a> is CheckAccess returns a Boolean indicating whether the calling thread has access to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_VerifyAccess_\" data-linktype=\"relative-path\">VerifyAccess</a> throws an exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses CheckAccess to determine whether a thread has access to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  The CheckAccess method on the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is called to verify access to the thread.  If the calling thread has access to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is updated by accessing the members of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>; otherwise, a delegate, which accepts a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> as an argument, is placed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> will delegate the work of updating the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DispatcherAccessSample#DispatcherAccessCheckAccess\">// Uses the Dispatcher.CheckAccess method to determine if \n// the calling thread has access to the thread the UI object is on.\nprivate void TryToUpdateButtonCheckAccess(object uiObject)\n{\n    Button theButton = uiObject as Button;\n\n    if (theButton != null)\n    {\n        // Checking if this thread has access to the object.\n        if (theButton.Dispatcher.CheckAccess())\n        {\n            // This thread has access so it can update the UI thread.\n            UpdateButtonUI(theButton);\n        }\n        else\n        {\n            // This thread does not have access to the UI thread.\n            // Place the update method on the Dispatcher of the UI thread.\n            theButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal,\n                new UpdateUIDelegate(UpdateButtonUI), theButton);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DispatcherAccessSample#DispatcherAccessCheckAccess\">&#39; Uses the Dispatcher.CheckAccess method to determine if \n&#39; the calling thread has access to the thread the UI object is on.\nPrivate Sub TryToUpdateButtonCheckAccess(ByVal uiObject As Object)\n\tDim theButton As Button = TryCast(uiObject, Button)\n\n\tIf theButton IsNot Nothing Then\n\t\t&#39; Checking if this thread has access to the object.\n\t\tIf theButton.Dispatcher.CheckAccess() Then\n\t\t\t&#39; This thread has access so it can update the UI thread.\n\t\t\tUpdateButtonUI(theButton)\n\t\tElse\n\t\t\t&#39; This thread does not have access to the UI thread.\n\t\t\t&#39; Place the update method on the Dispatcher of the UI thread.\n\t\t\ttheButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal, New UpdateUIDelegate(AddressOf UpdateButtonUI), theButton)\n\t\tEnd If\n\tEnd If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_DisableProcessing\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_DisableProcessing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisableProcessing()</div>        \r\n          </div>\r\n    \r\n            <p>Disables processing of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> queue.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled\" data-linktype=\"relative-path\">DispatcherProcessingDisabled</a></div>\r\n                  </div>\r\n                  <p>A structure used to re-enable dispatcher processing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.  </p>\n<p> The effects of disabling processing are as follows:  </p>\n<ul>\n<li><p><!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clrsharpinitcap-md.md&quot; -->CLR<!--END INCLUDE --> locks will not pump messages internally.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a> objects are not allowed to be pushed.  </p>\n</li>\n<li><p>Message processing is not permitted.  </p>\n<p>The <a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled\" data-linktype=\"relative-path\">DispatcherProcessingDisabled</a> structure that DisableProcessing returns when it is called can be used to re-enable dispatcher processing.  Calling <a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled#System_Windows_Threading_DispatcherProcessingDisabled_Dispose_\" data-linktype=\"relative-path\">Dispose</a> on the <a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled\" data-linktype=\"relative-path\">DispatcherProcessingDisabled</a> structure re-enables processing.  </p>\n<p>DisableProcessing can only be called on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to disable dispatcher processing and re-enable dispatcher processing.  DisableProcessing is called in a <strong>using</strong> statement.  DisableProcessing returns a <a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled\" data-linktype=\"relative-path\">DispatcherProcessingDisabled</a> structure that is used as the object to be disposed when the <strong>using</strong> block finishes.  When <a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled#System_Windows_Threading_DispatcherProcessingDisabled_Dispose_\" data-linktype=\"relative-path\">Dispose</a> is called on the <a class=\"xref\" href=\"system.windows.threading.dispatcherprocessingdisabled\" data-linktype=\"relative-path\">DispatcherProcessingDisabled</a> structure, dispatcher processing is re-enabled.  </p>\n<pre><code class=\"lang-vb\" name=\"DispatcherSnippets#DispatcherDisableProcessing\">&#39; The Dispose() method is called at the end of the using statement.\n&#39; Calling Dispose on the DispatcherProcessingDisabled structure, \n&#39; which is returned from the call to DisableProcessing, will\n&#39; re-enable Dispatcher processing.\nUsing Dispatcher.DisableProcessing()\n\t&#39; Do work while the dispatcher processing is disabled.\n\tThread.Sleep(2000)\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DispatcherSnippets#DispatcherDisableProcessing\">// The Dispose() method is called at the end of the using statement.\n// Calling Dispose on the DispatcherProcessingDisabled structure, \n// which is returned from the call to DisableProcessing, will\n// re-enalbe Dispatcher processing.\nusing (Dispatcher.DisableProcessing())\n{\n    // Do work while the dispatcher processing is disabled.\n    Thread.Sleep(2000);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_ExitAllFrames\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_ExitAllFrames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExitAllFrames()</div>        \r\n          </div>\r\n    \r\n            <p>Requests that all frames exit, including nested frames.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void ExitAllFrames ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_FromThread_System_Threading_Thread_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_FromThread_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromThread(Thread)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> for the specified thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>thread</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The thread to obtain the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a></div>\r\n                  </div>\r\n                  <p>The dispatcher for <code>thread</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a dispatcher is not available for the specified thread, <code>null</code> will be returned.  </p>\n<p> FromThread does not create a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> on a thread that does not have a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.   A new <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is created on a thread that does not already have a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> when attempting to get the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> by using the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_CurrentDispatcher_\" data-linktype=\"relative-path\">CurrentDispatcher</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Action_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Action)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invoke (Action callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Action_System_Windows_Threading_DispatcherPriority_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Action,DispatcherPriority)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Delegate,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (Delegate method, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes parameters specified in <code>args</code>, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object. For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread. In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread. This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous. The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_Delegate_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(DispatcherPriority,Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate synchronously at the specified priority on the thread on which the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes no arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is equal to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid priority.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example places a delegate onto a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> using Invoke.  </p>\n<pre><code class=\"lang-vb\" name=\"invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke\">&#39; Places the delegate onto the UI Thread&#39;s Dispatcher\nPrivate Sub timer_Elapsed(ByVal sender As Object, ByVal e As ElapsedEventArgs)\n\t&#39; Place delegate on the Dispatcher.\n\tMe.Dispatcher.Invoke(DispatcherPriority.Normal, New TimerDispatcherDelegate(AddressOf TimerWorkItem))\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke\">// Places the delegate onto the UI Thread&#39;s Dispatcher\nprivate void timer_Elapsed(object sender, ElapsedEventArgs e)\n{\n    // Place delegate on the Dispatcher.\n    this.Dispatcher.Invoke(DispatcherPriority.Normal,\n        new TimerDispatcherDelegate(TimerWorkItem));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Action_System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Action,DispatcherPriority,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates whether to cancel the action.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_TimeSpan_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Delegate,TimeSpan,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (Delegate method, TimeSpan timeout, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes parameters specified in <code>args</code>, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum amount of time to wait for the operation to complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object. For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread. In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread. This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous. The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_Windows_Threading_DispatcherPriority_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Delegate,DispatcherPriority,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes parameters specified in <code>args</code>, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object. For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread. In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread. This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous. The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(DispatcherPriority,Delegate,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes one argument, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to pass as an argument to the given method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is equal to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid priority.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Arg</code> can be <code>null</code> if an argument is not needed  </p>\n<p> In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_TimeSpan_System_Delegate_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(DispatcherPriority,TimeSpan,Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum time to wait for the operation to finish.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to a method that takes no arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Action_System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Action,DispatcherPriority,CancellationToken,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates whether to cancel the action.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The minimum amount of time to wait for the operation to start.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Delegate_System_TimeSpan_System_Windows_Threading_DispatcherPriority_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Delegate,TimeSpan,DispatcherPriority,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes parameters specified in <code>args</code>, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum amount of time to wait for the operation to complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object. For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread. In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread. This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>. <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous. The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_Delegate_System_Object_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(DispatcherPriority,Delegate,Object,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes multiple arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to pass as an argument to the given method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the given method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is equal to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid priority.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Arg</code> can be <code>null</code> if an argument is not needed  </p>\n<p> In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_TimeSpan_System_Delegate_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(DispatcherPriority,TimeSpan,Delegate,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum time to wait for the operation to finish.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes multiple arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to pass as an argument to the given method. This can be <code>null</code> if no arguments are needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is equal to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid priority.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Arg</code> can be <code>null</code> if an argument is not needed  </p>\n<p> In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke_System_Windows_Threading_DispatcherPriority_System_TimeSpan_System_Delegate_System_Object_System_Object___\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(DispatcherPriority,TimeSpan,Delegate,Object,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority, relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue, the specified method is invoked.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum time to wait for the operation to finish.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to a method that takes multiple arguments, which is pushed onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> event queue.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to pass as an argument to the specified method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects to pass as arguments to the specified method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The return value from the delegate being invoked or <code>null</code> if the delegate has no return value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is equal to <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>method</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>Arg</code> can be <code>null</code> if an argument is not needed.  </p>\n<p> In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->, only the thread that created a <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a> may access that object.  For example, a background thread that is spun off from the main UI thread cannot update the contents of a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> that was created on the UI thread.  In order for the background thread to access the Content property of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>, the background thread must delegate the work to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> associated with the UI thread.  This is accomplished by using either <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a>.  <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is synchronous and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is asynchronous.  The operation is added to the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> at the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by <code>callback</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__System_Windows_Threading_DispatcherPriority_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by <code>callback</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates whether to cancel the operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by <code>callback</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Invoke__1_System_Func___0__System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Invoke_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority,CancellationToken,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates whether to cancel the operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The minimum amount of time to wait for the operation to start.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by <code>callback</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeAsync_System_Action_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync(Action)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> asynchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after InvokeAsync is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeAsync_System_Action_System_Windows_Threading_DispatcherPriority_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync(Action,DispatcherPriority)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after InvokeAsync is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeAsync_System_Action_System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync(Action,DispatcherPriority,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a> asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates whether to cancel the action.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation\" data-linktype=\"relative-path\">DispatcherOperation</a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after InvokeAsync is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeAsync__1_System_Func___0__\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync&lt;TResult&gt;(Func&lt;TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> asynchronously on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation-1\" data-linktype=\"relative-path\">DispatcherOperation<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after InvokeAsync(TResult) is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeAsync__1_System_Func___0__System_Windows_Threading_DispatcherPriority_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> asynchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation-1\" data-linktype=\"relative-path\">DispatcherOperation<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after InvokeAsync(TResult) is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeAsync__1_System_Func___0__System_Windows_Threading_DispatcherPriority_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeAsync_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync&lt;TResult&gt;(Func&lt;TResult&gt;,DispatcherPriority,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the specified <span class=\"xref\">stem.Func`1</span> synchronously at the specified priority on the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func<tresult></tresult></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke through the dispatcher.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates whether to cancel the operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcheroperation-1\" data-linktype=\"relative-path\">DispatcherOperation<tresult></tresult></a></div>\r\n                  </div>\r\n                  <p>An object, which is returned immediately after InvokeAsync(TResult) is called, that can be used to interact with the delegate as it is pending execution in the event queue.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_InvokeShutdown\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_InvokeShutdown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeShutdown()</div>        \r\n          </div>\r\n    \r\n            <p>Initiates the shutdown process of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> synchronously.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InvokeShutdown ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>InvokeShutdown demands unrestricted UI Permissions.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> starts to shut down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownStarted\" data-linktype=\"relative-path\">ShutdownStarted</a> event is raised and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownStarted_\" data-linktype=\"relative-path\">HasShutdownStarted</a> is set to <code>true</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> does not shut down completely until the event queue unwinds.  </p>\n<p> When the Dispatcher finishes shutting down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownFinished\" data-linktype=\"relative-path\">ShutdownFinished</a> event is raised and the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownFinished_\" data-linktype=\"relative-path\">HasShutdownFinished</a> property is set to <code>true</code>.  </p>\n<p> Once the shutdown process begins, all pending work items in the queue are aborted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_PushFrame_System_Windows_Threading_DispatcherFrame_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_PushFrame_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushFrame(DispatcherFrame)</div>        \r\n          </div>\r\n    \r\n            <p>Enters an execute loop.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>frame</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The frame for the dispatcher to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>frame</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Threading.Dispatcher.HasShutdownFinished*</span> is <code>true</code>  </p>\n<p> -or-  </p>\n<p> <code>frame</code> is running on a different <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  </p>\n<p> -or-  </p>\n<p> Dispatcher processing has been disabled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a> represents a loop that processes pending work items.  </p>\n<p> The Dispatcher processes the work item queue in a loop.  The loop is referred to as a frame.  The initial loop is typically initiated by the application by calling <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Run_\" data-linktype=\"relative-path\">Run</a>.  </p>\n<p> PushFrame enters a loop represented by the parameter <code>frame</code>.  At each iteration of the loop, the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> will check the <a class=\"xref\" href=\"system.windows.threading.dispatcherframe#System_Windows_Threading_DispatcherFrame_Continue_\" data-linktype=\"relative-path\">Continue</a> property on the <a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a> class to determine whether the loop should continue or if it should stop.  </p>\n<p> <a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a> allows for the <a class=\"xref\" href=\"system.windows.threading.dispatcherframe#System_Windows_Threading_DispatcherFrame_Continue_\" data-linktype=\"relative-path\">Continue</a> property to be set explicitly and it respects the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownStarted_\" data-linktype=\"relative-path\">HasShutdownStarted</a> property on the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  This means when the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> starts to shut down, frames that use the default <a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a> implementation will exit, which enables all nested frames to exit.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use a <a class=\"xref\" href=\"system.windows.threading.dispatcherframe\" data-linktype=\"relative-path\">DispatcherFrame</a> to achieve similar results as the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winforms-md.md&quot; -->Windows Forms<!--END INCLUDE --> <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_DoEvents_\" data-linktype=\"relative-path\">DoEvents</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"dispatchersnippets#DispatcherDispatcherFrameDoEvents\">&lt;SecurityPermissionAttribute(SecurityAction.Demand, Flags := SecurityPermissionFlag.UnmanagedCode)&gt;\nPublic Sub DoEvents()\n\tDim frame As New DispatcherFrame()\n\tDispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Background, New DispatcherOperationCallback(AddressOf ExitFrame), frame)\n\tDispatcher.PushFrame(frame)\nEnd Sub\n\nPublic Function ExitFrame(ByVal f As Object) As Object\n\tCType(f, DispatcherFrame).Continue = False\n\n\tReturn Nothing\nEnd Function\n</code></pre><pre><code class=\"lang-cs\" name=\"dispatchersnippets#DispatcherDispatcherFrameDoEvents\">[SecurityPermissionAttribute(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]\npublic void DoEvents()\n{\n    DispatcherFrame frame = new DispatcherFrame();\n    Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Background,\n        new DispatcherOperationCallback(ExitFrame), frame);\n    Dispatcher.PushFrame(frame);\n}\n\npublic object ExitFrame(object f)\n{\n    ((DispatcherFrame)f).Continue = false;\n   \n    return null;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Run\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Run_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Run()</div>        \r\n          </div>\r\n    \r\n            <p>Pushes the main execution frame on the event queue of the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Run ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> processes the event queue in a loop.  The loop is referred to as a frame.  The initial loop is typically initiated by the application by calling Run.  </p>\n<p> The main execution frame will continue until the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is shutdown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_ValidatePriority_System_Windows_Threading_DispatcherPriority_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_ValidatePriority_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidatePriority(DispatcherPriority,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a> is a valid priority.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority to check.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that will be returned by the exception that occurs if the priority is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>priority</code> is not a valid <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_VerifyAccess\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_VerifyAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyAccess()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the calling thread has access to this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void VerifyAccess ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The calling thread does not have access to this <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the thread the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is created on may access the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  </p>\n<p> This method is public; therefore, any thread can check to see whether it has access to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  </p>\n<p> The difference between <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_CheckAccess_\" data-linktype=\"relative-path\">CheckAccess</a> and VerifyAccess is <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_CheckAccess_\" data-linktype=\"relative-path\">CheckAccess</a> returns a Boolean if the calling thread does not have access to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> and VerifyAccess throws an exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses VerifyAccess to determine whether a thread has access to the thread that a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> was created on.  The method takes an object as an argument, which is cast to a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  The VerifyAccess method on the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is called to verify access to the thread.  </p>\n<p> If the calling thread has access to the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>, the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> is updated by just accessing the members of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<p> If the calling thread does not have access, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown.  This example catches the exception and pushes a delegate, which accepts a <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a> as an argument, onto the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> of the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  This <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> will do the work of updating the <a class=\"xref\" href=\"system.windows.controls.button\" data-linktype=\"relative-path\">Button</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DispatcherAccessSample#DispatcherAccessVerifyAccess\">// Uses the Dispatcher.VerifyAccess method to determine if \n// the calling thread has access to the thread the UI object is on.\nprivate void TryToUpdateButtonVerifyAccess(object uiObject)\n{\n    Button theButton = uiObject as Button;\n\n    if (theButton != null)\n    {\n        try\n        {   \n            // Check if this thread has access to this object.\n            theButton.Dispatcher.VerifyAccess();\n\n            // The thread has access to the object, so update the UI.\n            UpdateButtonUI(theButton);\n        }\n\n        // Cannot access objects on the thread.\n        catch (InvalidOperationException e)\n        {\n            // Exception Error Message.\n            MessageBox.Show(&quot;Exception ToString: <br><br>&quot; + e.ToString(), \n                &quot;Execption Caught! Thrown During AccessVerify().&quot;);\n\n            MessageBox.Show(&quot;Pushing job onto UI Thread Dispatcher&quot;);\n\n            // Placing job onto the Dispatcher of the UI Thread.\n            theButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal,\n                new UpdateUIDelegate(UpdateButtonUI), theButton);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DispatcherAccessSample#DispatcherAccessVerifyAccess\">&#39; Uses the Dispatcher.VerifyAccess method to determine if \n&#39; the calling thread has access to the thread the UI object is on.\nPrivate Sub TryToUpdateButtonVerifyAccess(ByVal uiObject As Object)\n\tDim theButton As Button = TryCast(uiObject, Button)\n\n\tIf theButton IsNot Nothing Then\n\t\tTry\n                  &#39; Check if this thread has access to this object.\n                  theButton.Dispatcher.VerifyAccess()\n\n                  &#39; The thread has access to the object, so update the UI.\n                  UpdateButtonUI(theButton)\n\n                  &#39; Cannot access objects on the thread.\n              Catch e As InvalidOperationException\n                  &#39; Exception Error Message.\n                  MessageBox.Show(&quot;Exception ToString: &quot; &amp; vbLf &amp; vbLf &amp; e.ToString(), &quot;Execption Caught! Thrown During AccessVerify().&quot;)\n\n                  MessageBox.Show(&quot;Pushing job onto UI Thread Dispatcher&quot;)\n\n                  &#39; Placing job onto the Dispatcher of the UI Thread.\n                  theButton.Dispatcher.BeginInvoke(DispatcherPriority.Normal, New UpdateUIDelegate(AddressOf UpdateButtonUI), theButton)\n              End Try\n\tEnd If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Yield\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Yield_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Yield()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriorityawaitable\" data-linktype=\"relative-path\">DispatcherPriorityAwaitable</a></div>\r\n                  </div>\r\n                  <p>An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events. Use the <code>await</code>, or <code>Await</code> in Visual Basic, operator on the return value to return control to the current dispatcher. Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread. For example, you can use this method in a long-running loop that updates a control.  </p>\n<p> This method is equivalent to calling the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Yield_System_Windows_Threading_DispatcherPriority_\" data-linktype=\"relative-path\">Yield(DispatcherPriority)</a> method and passing in <a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">System.Windows.Threading.DispatcherPriority</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_Yield_System_Windows_Threading_DispatcherPriority_\">\r\n    \r\n            <a id=\"System_Windows_Threading_Dispatcher_Yield_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Yield(DispatcherPriority)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>priority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriority\" data-linktype=\"relative-path\">DispatcherPriority</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The priority at which to schedule the continuation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherpriorityawaitable\" data-linktype=\"relative-path\">DispatcherPriorityAwaitable</a></div>\r\n                  </div>\r\n                  <p>An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events. Use the <code>await</code>, or <code>Await</code> in Visual Basic, operator on the return value to return control to the current dispatcher. Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread. For example, you can use this method in a long-running loop that updates a control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_ShutdownFinished\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShutdownFinished</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> finishes shutting down.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ShutdownFinished;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the shutdown process of a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is started, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownStarted\" data-linktype=\"relative-path\">ShutdownStarted</a> event is raised and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownStarted_\" data-linktype=\"relative-path\">HasShutdownStarted</a> is set to <code>true</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> does not shutdown completely until the event queue unwinds.  </p>\n<p> When the Dispatcher finishes shutting down, the ShutdownFinished event is raised and the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownFinished_\" data-linktype=\"relative-path\">HasShutdownFinished</a> property is set to <code>true</code>.  </p>\n<p> Once the shutdown process begins, all pending work items in the queue are aborted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_ShutdownStarted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShutdownStarted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> begins to shut down.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ShutdownStarted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the shutdown process of a <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> is started, the ShutdownStarted event is raised and <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownStarted_\" data-linktype=\"relative-path\">HasShutdownStarted</a> is set to <code>true</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a> does not shutdown completely until the event queue unwinds.  </p>\n<p> When the Dispatcher finishes shutting down, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_ShutdownFinished\" data-linktype=\"relative-path\">ShutdownFinished</a> event is raised and the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_HasShutdownFinished_\" data-linktype=\"relative-path\">HasShutdownFinished</a> property is set to <code>true</code>.  </p>\n<p> Once the shutdown process begins, all pending work items in the queue are aborted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_UnhandledException\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnhandledException</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <span class=\"xref\">stem.Windows.Threading.Dispatcher.Invoke*</span> or <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when an exception that was thrown during execution of a delegate by way of <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> is uncaught.  </p>\n<p> A handler can mark the exception as handled, which will prevent the internal exception handler from being called.  </p>\n<p> Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur. It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_UnhandledExceptionFilter\" data-linktype=\"relative-path\">UnhandledExceptionFilter</a> event provides a means to not raise the UnhandledException event.  The <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_UnhandledExceptionFilter\" data-linktype=\"relative-path\">UnhandledExceptionFilter</a> event is raised first, and If <a class=\"xref\" href=\"system.windows.threading.dispatcherunhandledexceptionfiltereventargs#System_Windows_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch_\" data-linktype=\"relative-path\">RequestCatch</a> on the <a class=\"xref\" href=\"system.windows.threading.dispatcherunhandledexceptionfiltereventargs\" data-linktype=\"relative-path\">DispatcherUnhandledExceptionFilterEventArgs</a> is set to <code>false</code>, the UnhandledException event will not be raised.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Threading_Dispatcher_UnhandledExceptionFilter\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnhandledExceptionFilter</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <span class=\"xref\">stem.Windows.Threading.Dispatcher.Invoke*</span> or <span class=\"xref\">stem.Windows.Threading.Dispatcher.BeginInvoke*</span> when in the filter stage.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_Invoke_\" data-linktype=\"relative-path\">Invoke</a> or <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> and is uncaught.  </p>\n<p> The call stack is not unwound at this point (first-chance exception).  </p>\n<p> Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.  It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.  </p>\n<p> The UnhandledExceptionFilter event provides a means to not raise the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event.  The UnhandledExceptionFilter event is raised first, and If <a class=\"xref\" href=\"system.windows.threading.dispatcherunhandledexceptionfiltereventargs#System_Windows_Threading_DispatcherUnhandledExceptionFilterEventArgs_RequestCatch_\" data-linktype=\"relative-path\">RequestCatch</a> on the <a class=\"xref\" href=\"system.windows.threading.dispatcherunhandledexceptionfiltereventargs\" data-linktype=\"relative-path\">DispatcherUnhandledExceptionFilterEventArgs</a> is set to <code>false</code>, the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event will not be raised.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Threading.Dispatcher.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Threading.Dispatcher.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.BeginInvokeShutdown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.CheckAccess\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.CurrentDispatcher\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.DisableProcessing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.ExitAllFrames\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.FromThread\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.HasShutdownFinished\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.HasShutdownStarted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.Hooks\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.Invoke&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.InvokeAsync\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.InvokeAsync&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.InvokeShutdown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.PushFrame\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.Run\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.ShutdownFinished\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.add_ShutdownFinished\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.remove_ShutdownFinished\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.ShutdownStarted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.add_ShutdownStarted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.remove_ShutdownStarted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.Thread\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.UnhandledException\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.add_UnhandledException\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.remove_UnhandledException\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.UnhandledExceptionFilter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.add_UnhandledExceptionFilter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.remove_UnhandledExceptionFilter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.ValidatePriority\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.VerifyAccess\">\r\n<meta name=\"APIName\" content=\"System.Windows.Threading.Dispatcher.Yield\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3b8131f9-fb22-04ef-48c3-d6d948a1eee9\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Threading\\Dispatcher.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides services for managing the queue of work items for a thread.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Threading.Dispatcher\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Threading.Dispatcher.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Threading.Dispatcher.yml","open_to_public_contributors":true,"api_name":["System.Windows.Threading.Dispatcher","System.Windows.Threading.Dispatcher.BeginInvoke","System.Windows.Threading.Dispatcher.BeginInvokeShutdown","System.Windows.Threading.Dispatcher.CheckAccess","System.Windows.Threading.Dispatcher.CurrentDispatcher","System.Windows.Threading.Dispatcher.DisableProcessing","System.Windows.Threading.Dispatcher.ExitAllFrames","System.Windows.Threading.Dispatcher.FromThread","System.Windows.Threading.Dispatcher.HasShutdownFinished","System.Windows.Threading.Dispatcher.HasShutdownStarted","System.Windows.Threading.Dispatcher.Hooks","System.Windows.Threading.Dispatcher.Invoke","System.Windows.Threading.Dispatcher.Invoke<TResult>","System.Windows.Threading.Dispatcher.InvokeAsync","System.Windows.Threading.Dispatcher.InvokeAsync<TResult>","System.Windows.Threading.Dispatcher.InvokeShutdown","System.Windows.Threading.Dispatcher.PushFrame","System.Windows.Threading.Dispatcher.Run","System.Windows.Threading.Dispatcher.ShutdownFinished","System.Windows.Threading.Dispatcher.add_ShutdownFinished","System.Windows.Threading.Dispatcher.remove_ShutdownFinished","System.Windows.Threading.Dispatcher.ShutdownStarted","System.Windows.Threading.Dispatcher.add_ShutdownStarted","System.Windows.Threading.Dispatcher.remove_ShutdownStarted","System.Windows.Threading.Dispatcher.Thread","System.Windows.Threading.Dispatcher.UnhandledException","System.Windows.Threading.Dispatcher.add_UnhandledException","System.Windows.Threading.Dispatcher.remove_UnhandledException","System.Windows.Threading.Dispatcher.UnhandledExceptionFilter","System.Windows.Threading.Dispatcher.add_UnhandledExceptionFilter","System.Windows.Threading.Dispatcher.remove_UnhandledExceptionFilter","System.Windows.Threading.Dispatcher.ValidatePriority","System.Windows.Threading.Dispatcher.VerifyAccess","System.Windows.Threading.Dispatcher.Yield"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Threading.Dispatcher","System::Windows::Threading::Dispatcher","System.Windows.Threading.Dispatcher.BeginInvoke","System::Windows::Threading::Dispatcher::BeginInvoke","System.Windows.Threading.Dispatcher.BeginInvokeShutdown","System::Windows::Threading::Dispatcher::BeginInvokeShutdown","System.Windows.Threading.Dispatcher.CheckAccess","System::Windows::Threading::Dispatcher::CheckAccess","System.Windows.Threading.Dispatcher.CurrentDispatcher","System::Windows::Threading::Dispatcher::CurrentDispatcher","System.Windows.Threading.Dispatcher.DisableProcessing","System::Windows::Threading::Dispatcher::DisableProcessing","System.Windows.Threading.Dispatcher.ExitAllFrames","System::Windows::Threading::Dispatcher::ExitAllFrames","System.Windows.Threading.Dispatcher.FromThread","System::Windows::Threading::Dispatcher::FromThread","System.Windows.Threading.Dispatcher.HasShutdownFinished","System::Windows::Threading::Dispatcher::HasShutdownFinished","System.Windows.Threading.Dispatcher.HasShutdownStarted","System::Windows::Threading::Dispatcher::HasShutdownStarted","System.Windows.Threading.Dispatcher.Hooks","System::Windows::Threading::Dispatcher::Hooks","System.Windows.Threading.Dispatcher.Invoke","System::Windows::Threading::Dispatcher::Invoke","System.Windows.Threading.Dispatcher.Invoke``1","System::Windows::Threading::Dispatcher::Invoke``1","System.Windows.Threading.Dispatcher.InvokeAsync","System::Windows::Threading::Dispatcher::InvokeAsync","System.Windows.Threading.Dispatcher.InvokeAsync``1","System::Windows::Threading::Dispatcher::InvokeAsync``1","System.Windows.Threading.Dispatcher.InvokeShutdown","System::Windows::Threading::Dispatcher::InvokeShutdown","System.Windows.Threading.Dispatcher.PushFrame","System::Windows::Threading::Dispatcher::PushFrame","System.Windows.Threading.Dispatcher.Run","System::Windows::Threading::Dispatcher::Run","System.Windows.Threading.Dispatcher.ShutdownFinished","System::Windows::Threading::Dispatcher::ShutdownFinished","System.Windows.Threading.Dispatcher.ShutdownStarted","System::Windows::Threading::Dispatcher::ShutdownStarted","System.Windows.Threading.Dispatcher.Thread","System::Windows::Threading::Dispatcher::Thread","System.Windows.Threading.Dispatcher.UnhandledException","System::Windows::Threading::Dispatcher::UnhandledException","System.Windows.Threading.Dispatcher.UnhandledExceptionFilter","System::Windows::Threading::Dispatcher::UnhandledExceptionFilter","System.Windows.Threading.Dispatcher.ValidatePriority","System::Windows::Threading::Dispatcher::ValidatePriority","System.Windows.Threading.Dispatcher.VerifyAccess","System::Windows::Threading::Dispatcher::VerifyAccess","System.Windows.Threading.Dispatcher.Yield","System::Windows::Threading::Dispatcher::Yield"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3b8131f9-fb22-04ef-48c3-d6d948a1eee9","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Threading\\Dispatcher.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Threading/Dispatcher.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Dispatcher class | Microsoft Docs","_op_ogTitle":"Dispatcher class","description":"Provides services for managing the queue of work items for a thread.\n","toc_asset_id":"_splitted/System.Windows.Threading/toc.json","toc_rel":"_splitted/System.Windows.Threading/toc.json","source_url":"","ms.assetid":"System.Windows.Threading.Dispatcher","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.threading.dispatcher","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.threading.dispatcher","fileRelativePath":"System.Windows.Threading.Dispatcher.html"},"themesRelativePathToOutputRoot":"_themes/"}