{"content":"    \r\n    <h1 id=\"System_Collections_Specialized_OrderedDictionary\">\r\n      <span class=\"lang-csharp\">OrderedDictionary</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of key/value pairs that are accessible by the key or index.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class OrderedDictionary : System.Collections.IDictionary, System.Collections.Specialized.IOrderedDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">OrderedDictionary</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Each element is a key/value pair stored in a <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> object. A key cannot be <code>null</code>, but a value can be.  </p>\n<p> The elements of an OrderedDictionary are not sorted by the key, unlike the elements of a <a class=\"xref\" href=\"system.collections.generic.sorteddictionary-2\" data-linktype=\"relative-path\">SortedDictionary&lt;TKey,TValue&gt;</a> class. You can access elements either by the key or by the index.  </p>\n<p> The <code>foreach</code> statement of the C# language (<code>For Each</code> in Visual Basic) returns objects that are of the type of each element in the collection. Since each element of the OrderedDictionary collection is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a>. The following code shows C#, Visual Basic and C++ syntax.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#06\">        for each (DictionaryEntry de in myOrderedDictionary)\n        {\n            //...\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#06\">        foreach (DictionaryEntry de in myOrderedDictionary)\n        {\n            //...\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#06\">        For Each de As DictionaryEntry In myOrderedDictionary\n            &#39;...\n        Next de\n</code></pre><p> The <code>foreach</code> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary__ctor\" data-linktype=\"self-bookmark\">OrderedDictionary()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary__ctor_System_Collections_IEqualityComparer_\" data-linktype=\"self-bookmark\">OrderedDictionary(IEqualityComparer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class using the specified comparer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary__ctor_System_Int32_\" data-linktype=\"self-bookmark\">OrderedDictionary(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class using the specified initial capacity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary__ctor_System_Int32_System_Collections_IEqualityComparer_\" data-linktype=\"self-bookmark\">OrderedDictionary(Int32,IEqualityComparer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class using the specified initial capacity and comparer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">OrderedDictionary(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class that is serializable using the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of key/values pairs contained in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Item_System_Object_\" data-linktype=\"self-bookmark\">Item(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value with the specified key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Keys\" data-linktype=\"self-bookmark\">Keys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object containing the keys in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Values\" data-linktype=\"self-bookmark\">Values</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object containing the values in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Add_System_Object_System_Object_\" data-linktype=\"self-bookmark\">Add(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an entry with the specified key and value into the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection with the lowest available index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_AsReadOnly\" data-linktype=\"self-bookmark\">AsReadOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a read-only copy of the current <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all elements from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Contains_System_Object_\" data-linktype=\"self-bookmark\">Contains(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection contains a specific key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> elements to a one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> object at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that iterates through the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and returns the data needed to serialize the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Insert_System_Int32_System_Object_System_Object_\" data-linktype=\"self-bookmark\">Insert(Int32,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts a new entry into the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection with the specified key and value at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_Remove_System_Object_\" data-linktype=\"self-bookmark\">Remove(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the entry with the specified key from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the entry at the specified index from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_System_Collections_ICollection_IsSynchronized\" data-linktype=\"self-bookmark\">ICollection.IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> object is synchronized (thread-safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_System_Collections_ICollection_SyncRoot\" data-linktype=\"self-bookmark\">ICollection.SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_System_Collections_IDictionary_IsFixedSize\" data-linktype=\"self-bookmark\">IDictionary.IsFixedSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> has a fixed size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that iterates through the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_OrderedDictionary_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">IDeserializationCallback.OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary__ctor\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OrderedDictionary()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OrderedDictionary ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The comparer determines whether two keys are equal. Every key in a <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection must be unique. The default comparer is the key&#39;s implementation of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the creation and population of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary^ myOrderedDictionary = gcnew OrderedDictionary();\n        myOrderedDictionary-&gt;Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary-&gt;Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection^ keyCollection = myOrderedDictionary-&gt;Keys;\n        ICollection^ valueCollection = myOrderedDictionary-&gt;Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary-&gt;Count);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary myOrderedDictionary = new OrderedDictionary();\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection keyCollection = myOrderedDictionary.Keys;\n        ICollection valueCollection = myOrderedDictionary.Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary.Count);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        &#39; Creates and initializes a OrderedDictionary.\n        Dim myOrderedDictionary As New OrderedDictionary()\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;)\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;)\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;)\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;)\n\n        Dim keyCollection As ICollection = myOrderedDictionary.Keys\n        Dim valueCollection As ICollection = myOrderedDictionary.Values\n\n        &#39; Display the contents Imports the key and value collections\n        DisplayContents( _\n            keyCollection, valueCollection, myOrderedDictionary.Count)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary__ctor_System_Collections_IEqualityComparer_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OrderedDictionary(IEqualityComparer)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class using the specified comparer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OrderedDictionary (System.Collections.IEqualityComparer comparer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.iequalitycomparer\" data-linktype=\"relative-path\">IEqualityComparer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> to use to determine whether two keys are equal.  </p>\n<p> -or-  </p>\n<p> <code>null</code> to use the default comparer, which is each key&#39;s implementation of <span class=\"xref\">stem.Object.Equals*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The comparer determines whether two keys are equal. Every key in a <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection must be unique. The default comparer is the key&#39;s implementation of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a>.  </p>\n<p> The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary__ctor_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OrderedDictionary(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class using the specified initial capacity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OrderedDictionary (int capacity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>capacity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The initial number of elements that the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection can contain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The comparer determines whether two keys are equal. Every key in a <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection must be unique. The default comparer is the key&#39;s implementation of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary__ctor_System_Int32_System_Collections_IEqualityComparer_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OrderedDictionary(Int32,IEqualityComparer)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class using the specified initial capacity and comparer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OrderedDictionary (int capacity, System.Collections.IEqualityComparer comparer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>capacity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The initial number of elements that the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection can contain.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.iequalitycomparer\" data-linktype=\"relative-path\">IEqualityComparer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> to use to determine whether two keys are equal.  </p>\n<p> -or-  </p>\n<p> <code>null</code> to use the default comparer, which is each key&#39;s implementation of <span class=\"xref\">stem.Object.Equals*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The comparer determines whether two keys are equal. Every key in a <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection must be unique. The default comparer is the key&#39;s implementation of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a>.  </p>\n<p> The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OrderedDictionary(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> class that is serializable using the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected OrderedDictionary (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object containing the information required to serialize the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object containing the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The comparer determines whether two keys are equal. Every key in a <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection must be unique. The default comparer is the key&#39;s implementation of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Count\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of key/values pairs contained in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of key/value pairs contained in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the Count property is used to remove the last item in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_IsReadOnly\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  </p>\n<p> A collection that is read-only is simply a collection with a wrapper that prevents modification of the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the IsReadOnly property is used to determine whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> can be modified. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object this[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the value to get or set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The value of the item at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The property is being set and the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>index</code> is equal to or greater than <span class=\"xref\">stem.Collections.Specialized.OrderedDictionary.Count*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property allows you to access a specific element in the collection by using the following syntax: <code>myCollection[index]</code>.  </p>\n<p> The C# language uses the  keyword to define the indexers instead of implementing the Item property. Visual Basic implements <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Item_\" data-linktype=\"relative-path\">Item</a> as a default property, which provides the same indexing functionality.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Item_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value with the specified key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object this[object key] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the value to get or set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The value associated with the specified key. If the specified key is not found, attempting to get it returns <code>null</code>, and attempting to set it creates a new element using the specified key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The property is being set and the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property allows you to access a specific element in the collection by using the following syntax: <code>myCollection[key]</code>.  </p>\n<p> You can also use the Item property to add new elements by setting the value of a key that does not exist in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection (for example, <code>myCollection[&quot;myNonexistentKey&quot;] = myValue</code>). However, if the specified key already exists in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>, setting the Item property overwrites the old value. In contrast, the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Add_\" data-linktype=\"relative-path\">Add</a> method does not modify existing elements.  </p>\n<p> A key cannot be <code>null</code>, but a value can be. To distinguish between <code>null</code> that is returned because the specified key is not found and <code>null</code> that is returned because the value of the specified key is <code>null</code>, use the <a class=\"xref\" href=\"system.collections.hashtable#System_Collections_Hashtable_Contains_\" data-linktype=\"relative-path\">Contains</a> method to determine if the key exists in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the Item property is used to modify the dictionary entry with the key <code>&quot;testKey2&quot;</code>. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Keys\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Keys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Keys</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object containing the keys in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ICollection Keys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object containing the keys in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object is not a static copy; instead, the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> refers back to the keys in the original <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. Therefore, changes to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> continue to be reflected in the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the creation and population of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection, and then prints the contents to the console. In this example, the Keys and <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Values_\" data-linktype=\"relative-path\">Values</a> properties are passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary^ myOrderedDictionary = gcnew OrderedDictionary();\n        myOrderedDictionary-&gt;Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary-&gt;Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection^ keyCollection = myOrderedDictionary-&gt;Keys;\n        ICollection^ valueCollection = myOrderedDictionary-&gt;Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary-&gt;Count);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary myOrderedDictionary = new OrderedDictionary();\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection keyCollection = myOrderedDictionary.Keys;\n        ICollection valueCollection = myOrderedDictionary.Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary.Count);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        &#39; Creates and initializes a OrderedDictionary.\n        Dim myOrderedDictionary As New OrderedDictionary()\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;)\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;)\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;)\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;)\n\n        Dim keyCollection As ICollection = myOrderedDictionary.Keys\n        Dim valueCollection As ICollection = myOrderedDictionary.Values\n\n        &#39; Display the contents Imports the key and value collections\n        DisplayContents( _\n            keyCollection, valueCollection, myOrderedDictionary.Count)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#04\">    // Displays the contents of the OrderedDictionary from its keys and values\n    static void DisplayContents(\n        ICollection^ keyCollection, ICollection^ valueCollection, int dictionarySize)\n    {\n        array&lt;String^&gt;^ myKeys = gcnew array&lt;String^&gt;(dictionarySize);\n        array&lt;String^&gt;^ myValues = gcnew array&lt;String^&gt;(dictionarySize);\n        keyCollection-&gt;CopyTo(myKeys, 0);\n        valueCollection-&gt;CopyTo(myValues, 0);\n\n        // Displays the contents of the OrderedDictionary\n        Console::WriteLine(&quot;   INDEX KEY                       VALUE&quot;);\n        for (int i = 0; i &lt; dictionarySize; i++)\n        {\n            Console::WriteLine(&quot;   {0,-5} {1,-25} {2}&quot;,\n                i, myKeys[i], myValues[i]);\n        }\n        Console::WriteLine();\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#04\">    // Displays the contents of the OrderedDictionary from its keys and values\n    public static void DisplayContents(\n        ICollection keyCollection, ICollection valueCollection, int dictionarySize)\n    {\n        String[] myKeys = new String[dictionarySize];\n        String[] myValues = new String[dictionarySize];\n        keyCollection.CopyTo(myKeys, 0);\n        valueCollection.CopyTo(myValues, 0);\n\n        // Displays the contents of the OrderedDictionary\n        Console.WriteLine(&quot;   INDEX KEY                       VALUE&quot;);\n        for (int i = 0; i &lt; dictionarySize; i++)\n        {\n            Console.WriteLine(&quot;   {0,-5} {1,-25} {2}&quot;,\n                i, myKeys[i], myValues[i]);\n        }\n        Console.WriteLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#04\">    &#39; Displays the contents of the OrderedDictionary from its keys and values\n    Public Shared Sub DisplayContents( _\n        ByVal keyCollection As ICollection, _\n        ByVal valueCollection As ICollection, ByVal dictionarySize As Integer)\n\n        Dim myKeys(dictionarySize) As [String]\n        Dim myValues(dictionarySize) As [String]\n        keyCollection.CopyTo(myKeys, 0)\n        valueCollection.CopyTo(myValues, 0)\n\n        &#39; Displays the contents of the OrderedDictionary\n        Console.WriteLine(&quot;   INDEX KEY                       VALUE&quot;)\n        Dim i As Integer\n        For i = 0 To dictionarySize - 1\n            Console.WriteLine(&quot;   {0,-5} {1,-25} {2}&quot;, _\n                 i, myKeys(i), myValues(i))\n        Next i\n        Console.WriteLine()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Values\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Values_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Values</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object containing the values in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ICollection Values { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object containing the values in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> object is not a static copy; instead, the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> refers back to the values in the original <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. Therefore, changes to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> continue to be reflected in the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the creation and population of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection, and then prints the contents to the console. In this example, the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Keys_\" data-linktype=\"relative-path\">Keys</a> and Values properties are passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary^ myOrderedDictionary = gcnew OrderedDictionary();\n        myOrderedDictionary-&gt;Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary-&gt;Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection^ keyCollection = myOrderedDictionary-&gt;Keys;\n        ICollection^ valueCollection = myOrderedDictionary-&gt;Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary-&gt;Count);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary myOrderedDictionary = new OrderedDictionary();\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection keyCollection = myOrderedDictionary.Keys;\n        ICollection valueCollection = myOrderedDictionary.Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary.Count);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        &#39; Creates and initializes a OrderedDictionary.\n        Dim myOrderedDictionary As New OrderedDictionary()\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;)\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;)\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;)\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;)\n\n        Dim keyCollection As ICollection = myOrderedDictionary.Keys\n        Dim valueCollection As ICollection = myOrderedDictionary.Values\n\n        &#39; Display the contents Imports the key and value collections\n        DisplayContents( _\n            keyCollection, valueCollection, myOrderedDictionary.Count)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#04\">    // Displays the contents of the OrderedDictionary from its keys and values\n    static void DisplayContents(\n        ICollection^ keyCollection, ICollection^ valueCollection, int dictionarySize)\n    {\n        array&lt;String^&gt;^ myKeys = gcnew array&lt;String^&gt;(dictionarySize);\n        array&lt;String^&gt;^ myValues = gcnew array&lt;String^&gt;(dictionarySize);\n        keyCollection-&gt;CopyTo(myKeys, 0);\n        valueCollection-&gt;CopyTo(myValues, 0);\n\n        // Displays the contents of the OrderedDictionary\n        Console::WriteLine(&quot;   INDEX KEY                       VALUE&quot;);\n        for (int i = 0; i &lt; dictionarySize; i++)\n        {\n            Console::WriteLine(&quot;   {0,-5} {1,-25} {2}&quot;,\n                i, myKeys[i], myValues[i]);\n        }\n        Console::WriteLine();\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#04\">    // Displays the contents of the OrderedDictionary from its keys and values\n    public static void DisplayContents(\n        ICollection keyCollection, ICollection valueCollection, int dictionarySize)\n    {\n        String[] myKeys = new String[dictionarySize];\n        String[] myValues = new String[dictionarySize];\n        keyCollection.CopyTo(myKeys, 0);\n        valueCollection.CopyTo(myValues, 0);\n\n        // Displays the contents of the OrderedDictionary\n        Console.WriteLine(&quot;   INDEX KEY                       VALUE&quot;);\n        for (int i = 0; i &lt; dictionarySize; i++)\n        {\n            Console.WriteLine(&quot;   {0,-5} {1,-25} {2}&quot;,\n                i, myKeys[i], myValues[i]);\n        }\n        Console.WriteLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#04\">    &#39; Displays the contents of the OrderedDictionary from its keys and values\n    Public Shared Sub DisplayContents( _\n        ByVal keyCollection As ICollection, _\n        ByVal valueCollection As ICollection, ByVal dictionarySize As Integer)\n\n        Dim myKeys(dictionarySize) As [String]\n        Dim myValues(dictionarySize) As [String]\n        keyCollection.CopyTo(myKeys, 0)\n        valueCollection.CopyTo(myValues, 0)\n\n        &#39; Displays the contents of the OrderedDictionary\n        Console.WriteLine(&quot;   INDEX KEY                       VALUE&quot;)\n        Dim i As Integer\n        For i = 0 To dictionarySize - 1\n            Console.WriteLine(&quot;   {0,-5} {1,-25} {2}&quot;, _\n                 i, myKeys(i), myValues(i))\n        Next i\n        Console.WriteLine()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Add_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an entry with the specified key and value into the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection with the lowest available index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Add (object key, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the entry to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the entry to add. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A key cannot be <code>null</code>, but a value can be.  </p>\n<p> You can also use the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Item_\" data-linktype=\"relative-path\">Item</a> property to add new elements by setting the value of a key that does not exist in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection; however, if the specified key already exists in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>, setting the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Item_\" data-linktype=\"relative-path\">Item</a> property overwrites the old value. In contrast, the Add method does not modify existing elements.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the creation and population of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary^ myOrderedDictionary = gcnew OrderedDictionary();\n        myOrderedDictionary-&gt;Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary-&gt;Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary-&gt;Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection^ keyCollection = myOrderedDictionary-&gt;Keys;\n        ICollection^ valueCollection = myOrderedDictionary-&gt;Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary-&gt;Count);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        // Creates and initializes a OrderedDictionary.\n        OrderedDictionary myOrderedDictionary = new OrderedDictionary();\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;);\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;);\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;);\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;);\n\n        ICollection keyCollection = myOrderedDictionary.Keys;\n        ICollection valueCollection = myOrderedDictionary.Values;\n\n        // Display the contents using the key and value collections\n        DisplayContents(keyCollection, valueCollection, myOrderedDictionary.Count);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#01\">        &#39; Creates and initializes a OrderedDictionary.\n        Dim myOrderedDictionary As New OrderedDictionary()\n        myOrderedDictionary.Add(&quot;testKey1&quot;, &quot;testValue1&quot;)\n        myOrderedDictionary.Add(&quot;testKey2&quot;, &quot;testValue2&quot;)\n        myOrderedDictionary.Add(&quot;keyToDelete&quot;, &quot;valueToDelete&quot;)\n        myOrderedDictionary.Add(&quot;testKey3&quot;, &quot;testValue3&quot;)\n\n        Dim keyCollection As ICollection = myOrderedDictionary.Keys\n        Dim valueCollection As ICollection = myOrderedDictionary.Values\n\n        &#39; Display the contents Imports the key and value collections\n        DisplayContents( _\n            keyCollection, valueCollection, myOrderedDictionary.Count)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_AsReadOnly\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_AsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsReadOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a read-only copy of the current <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.OrderedDictionary AsReadOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>A read-only copy of the current <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AsReadOnly method creates a read-only wrapper around the current <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. Changes made to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection are reflected in the read-only copy.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Clear\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all elements from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After calling the Clear method, the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Count_\" data-linktype=\"relative-path\">Count</a> property is set to zero and references to other objects from elements of the collection are also released. The capacity is not changed as a result of calling this method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the Clear method is used to empty the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>, and then the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> is repopulated. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#03\">        // Clear the OrderedDictionary and add new values\n        myOrderedDictionary-&gt;Clear();\n        myOrderedDictionary-&gt;Add(&quot;newKey1&quot;, &quot;newValue1&quot;);\n        myOrderedDictionary-&gt;Add(&quot;newKey2&quot;, &quot;newValue2&quot;);\n        myOrderedDictionary-&gt;Add(&quot;newKey3&quot;, &quot;newValue3&quot;);\n\n        // Display the contents of the &quot;new&quot; Dictionary using an enumerator\n        IDictionaryEnumerator^ myEnumerator =\n            myOrderedDictionary-&gt;GetEnumerator();\n\n        Console::WriteLine(\n            &quot;{0}Displaying the entries of a \\&quot;new\\&quot; OrderedDictionary.&quot;,\n            Environment::NewLine);\n\n        DisplayEnumerator(myEnumerator);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#03\">        // Clear the OrderedDictionary and add new values\n        myOrderedDictionary.Clear();\n        myOrderedDictionary.Add(&quot;newKey1&quot;, &quot;newValue1&quot;);\n        myOrderedDictionary.Add(&quot;newKey2&quot;, &quot;newValue2&quot;);\n        myOrderedDictionary.Add(&quot;newKey3&quot;, &quot;newValue3&quot;);\n\n        // Display the contents of the &quot;new&quot; Dictionary using an enumerator\n        IDictionaryEnumerator myEnumerator =\n            myOrderedDictionary.GetEnumerator();\n\n        Console.WriteLine(\n            &quot;{0}Displaying the entries of a \\&quot;new\\&quot; OrderedDictionary.&quot;,\n            Environment.NewLine);\n\n        DisplayEnumerator(myEnumerator);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#03\">        &#39; Clear the OrderedDictionary and add new values\n        myOrderedDictionary.Clear()\n        myOrderedDictionary.Add(&quot;newKey1&quot;, &quot;newValue1&quot;)\n        myOrderedDictionary.Add(&quot;newKey2&quot;, &quot;newValue2&quot;)\n        myOrderedDictionary.Add(&quot;newKey3&quot;, &quot;newValue3&quot;)\n\n        &#39; Display the contents of the &quot;new&quot; Dictionary Imports an enumerator\n        Dim myEnumerator As IDictionaryEnumerator = _\n            myOrderedDictionary.GetEnumerator()\n\n        Console.WriteLine( _\n            &quot;{0}Displaying the entries of a &#39;new&#39; OrderedDictionary.&quot;, _\n            Environment.NewLine)\n\n        DisplayEnumerator(myEnumerator)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Contains_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection contains a specific key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (object key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key to locate in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection contains an element with the specified key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Using the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Item_\" data-linktype=\"relative-path\">Item</a> property can return a null value if the key does not exist or if the key is <code>null</code>. Use the Contains method to determine if a specific key exists in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.  </p>\n<p> Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> and <a class=\"xref\" href=\"system.icomparable#System_IComparable_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> methods on <code>item</code> to determine whether <code>item</code> exists. In the earlier versions of the .NET Framework, this determination was made by using the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> and <a class=\"xref\" href=\"system.icomparable#System_IComparable_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> methods of the <code>item</code> parameter on the objects in the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the Contains method is used to determine if an entry exists before attempting to remove it. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> elements to a one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> object at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> object that is the destination of the <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> objects copied from <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CopyTo method is not guaranteed to preserve the order of the elements in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that iterates through the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object for the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>[Visual Basic, C#]  </p>\n<p> The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual Basic) hides the complexity of the enumerators.  Therefore, using <code>foreach</code> is recommended instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the GetEnumerator method to display the contents of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection to the console. In this example, the GetEnumerator method is used to obtain an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that is passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#03\">        // Clear the OrderedDictionary and add new values\n        myOrderedDictionary-&gt;Clear();\n        myOrderedDictionary-&gt;Add(&quot;newKey1&quot;, &quot;newValue1&quot;);\n        myOrderedDictionary-&gt;Add(&quot;newKey2&quot;, &quot;newValue2&quot;);\n        myOrderedDictionary-&gt;Add(&quot;newKey3&quot;, &quot;newValue3&quot;);\n\n        // Display the contents of the &quot;new&quot; Dictionary using an enumerator\n        IDictionaryEnumerator^ myEnumerator =\n            myOrderedDictionary-&gt;GetEnumerator();\n\n        Console::WriteLine(\n            &quot;{0}Displaying the entries of a \\&quot;new\\&quot; OrderedDictionary.&quot;,\n            Environment::NewLine);\n\n        DisplayEnumerator(myEnumerator);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#03\">        // Clear the OrderedDictionary and add new values\n        myOrderedDictionary.Clear();\n        myOrderedDictionary.Add(&quot;newKey1&quot;, &quot;newValue1&quot;);\n        myOrderedDictionary.Add(&quot;newKey2&quot;, &quot;newValue2&quot;);\n        myOrderedDictionary.Add(&quot;newKey3&quot;, &quot;newValue3&quot;);\n\n        // Display the contents of the &quot;new&quot; Dictionary using an enumerator\n        IDictionaryEnumerator myEnumerator =\n            myOrderedDictionary.GetEnumerator();\n\n        Console.WriteLine(\n            &quot;{0}Displaying the entries of a \\&quot;new\\&quot; OrderedDictionary.&quot;,\n            Environment.NewLine);\n\n        DisplayEnumerator(myEnumerator);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#03\">        &#39; Clear the OrderedDictionary and add new values\n        myOrderedDictionary.Clear()\n        myOrderedDictionary.Add(&quot;newKey1&quot;, &quot;newValue1&quot;)\n        myOrderedDictionary.Add(&quot;newKey2&quot;, &quot;newValue2&quot;)\n        myOrderedDictionary.Add(&quot;newKey3&quot;, &quot;newValue3&quot;)\n\n        &#39; Display the contents of the &quot;new&quot; Dictionary Imports an enumerator\n        Dim myEnumerator As IDictionaryEnumerator = _\n            myOrderedDictionary.GetEnumerator()\n\n        Console.WriteLine( _\n            &quot;{0}Displaying the entries of a &#39;new&#39; OrderedDictionary.&quot;, _\n            Environment.NewLine)\n\n        DisplayEnumerator(myEnumerator)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#05\">    // Displays the contents of the OrderedDictionary using its enumerator\n    static void DisplayEnumerator(IDictionaryEnumerator^ myEnumerator)\n    {\n        Console::WriteLine(&quot;   KEY                       VALUE&quot;);\n        while (myEnumerator-&gt;MoveNext())\n        {\n            Console::WriteLine(&quot;   {0,-25} {1}&quot;,\n                myEnumerator-&gt;Key, myEnumerator-&gt;Value);\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#05\">    // Displays the contents of the OrderedDictionary using its enumerator\n    public static void DisplayEnumerator(IDictionaryEnumerator myEnumerator)\n    {\n        Console.WriteLine(&quot;   KEY                       VALUE&quot;);\n        while (myEnumerator.MoveNext())\n        {\n            Console.WriteLine(&quot;   {0,-25} {1}&quot;,\n                myEnumerator.Key, myEnumerator.Value);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#05\">    &#39; Displays the contents of the OrderedDictionary using its enumerator\n    Public Shared Sub DisplayEnumerator( _\n        ByVal myEnumerator As IDictionaryEnumerator)\n\n        Console.WriteLine(&quot;   KEY                       VALUE&quot;)\n        While myEnumerator.MoveNext()\n            Console.WriteLine(&quot;   {0,-25} {1}&quot;, _\n                myEnumerator.Key, myEnumerator.Value)\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and returns the data needed to serialize the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object containing the information required to serialize the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object containing the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>info</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Insert_System_Int32_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Insert(Int32,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts a new entry into the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection with the specified key and value at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Insert (int index, object key, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which the element should be inserted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the entry to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the entry to add. The value can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is out of range.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This collection is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>index</code> parameter is equal to the number of entries in the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection, the <code>key</code> and <code>value</code> parameters are appended to the end of the collection.  </p>\n<p> Entries that follow the insertion point move down to accommodate the new entry and the indexes of the moved entries are also updated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the Insert method is used to add a new entry to the beginning of the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>, moving the rest of the entries down. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the deserialization event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object associated with the current <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be overridden.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_Remove_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the entry with the specified key from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Remove (object key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the entry to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>key</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection does not contain an entry with the specified key, the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> remains unchanged and no exception is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the Remove method is used to remove the entry with the key <code>&quot;keyToDelete&quot;</code> from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the entry at the specified index from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the entry to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.  </p>\n<p> - or -  </p>\n<p> <code>index</code> is equal to or greater than <span class=\"xref\">stem.Collections.Specialized.OrderedDictionary.Count*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The entries that follow the removed entry move up to occupy the vacated spot and the indexes of the entries that move are also updated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the modification of an <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection. In this example, the RemoveAt method is used with the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary#System_Collections_Specialized_OrderedDictionary_Count_\" data-linktype=\"relative-path\">Count</a> property to remove the last entry from the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>. This code is part of a larger code example that can be viewed at <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary-&gt;IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary-&gt;Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary-&gt;RemoveAt(myOrderedDictionary-&gt;Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary-&gt;Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary-&gt;Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        // Modifying the OrderedDictionary\n        if (!myOrderedDictionary.IsReadOnly)\n        {\n            // Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;);\n\n            // Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary[&quot;testKey2&quot;] = &quot;modifiedValue&quot;;\n\n            // Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1);\n\n            // Remove the &quot;keyToDelete&quot; entry, if it exists\n            if (myOrderedDictionary.Contains(&quot;keyToDelete&quot;))\n            {\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.OrderedDictionary1#02\">        &#39; Modifying the OrderedDictionary\n        If Not myOrderedDictionary.IsReadOnly Then\n\n            &#39; Insert a new key to the beginning of the OrderedDictionary\n            myOrderedDictionary.Insert(0, &quot;insertedKey1&quot;, &quot;insertedValue1&quot;)\n\n            &#39; Modify the value of the entry with the key &quot;testKey2&quot;\n            myOrderedDictionary(&quot;testKey2&quot;) = &quot;modifiedValue&quot;\n\n            &#39; Remove the last entry from the OrderedDictionary: &quot;testKey3&quot;\n            myOrderedDictionary.RemoveAt(myOrderedDictionary.Count - 1)\n\n            &#39; Remove the &quot;keyToDelete&quot; entry, if it exists\n            If (myOrderedDictionary.Contains(&quot;keyToDelete&quot;)) Then\n                myOrderedDictionary.Remove(&quot;keyToDelete&quot;)\n            End If\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_ICollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_ICollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> object is synchronized (thread-safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_ICollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_ICollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_IDictionary_IsFixedSize\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_IDictionary_IsFixedSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDictionary.IsFixedSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> has a fixed size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.IDictionary.IsFixedSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> has a fixed size; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object that iterates through the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionaryenumerator\" data-linktype=\"relative-path\">IDictionaryEnumerator</a> object for the <a class=\"xref\" href=\"system.collections.specialized.ordereddictionary\" data-linktype=\"relative-path\">OrderedDictionary</a> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_OrderedDictionary_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Specialized_OrderedDictionary_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDeserializationCallback.OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDeserializationCallback.OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the deserialization event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Specialized.OrderedDictionary.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Specialized.OrderedDictionary.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Add\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.AsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Clear\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Contains\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Count\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Insert\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Item\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Keys\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Remove\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.ICollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.IDictionary.IsFixedSize\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.OrderedDictionary.Values\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"05eadeca-cee6-f10d-7362-ae86d7a6a827\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of key/value pairs that are accessible by the key or index.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Specialized/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Specialized.OrderedDictionary\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Specialized.OrderedDictionary.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Specialized.OrderedDictionary.yml","open_to_public_contributors":true,"api_name":["System.Collections.Specialized.OrderedDictionary","System.Collections.Specialized.OrderedDictionary..ctor","System.Collections.Specialized.OrderedDictionary.Add","System.Collections.Specialized.OrderedDictionary.AsReadOnly","System.Collections.Specialized.OrderedDictionary.Clear","System.Collections.Specialized.OrderedDictionary.Contains","System.Collections.Specialized.OrderedDictionary.CopyTo","System.Collections.Specialized.OrderedDictionary.Count","System.Collections.Specialized.OrderedDictionary.GetEnumerator","System.Collections.Specialized.OrderedDictionary.GetObjectData","System.Collections.Specialized.OrderedDictionary.Insert","System.Collections.Specialized.OrderedDictionary.IsReadOnly","System.Collections.Specialized.OrderedDictionary.Item","System.Collections.Specialized.OrderedDictionary.Keys","System.Collections.Specialized.OrderedDictionary.OnDeserialization","System.Collections.Specialized.OrderedDictionary.Remove","System.Collections.Specialized.OrderedDictionary.RemoveAt","System.Collections.Specialized.OrderedDictionary.ICollection.IsSynchronized","System.Collections.Specialized.OrderedDictionary.ICollection.SyncRoot","System.Collections.Specialized.OrderedDictionary.IDictionary.IsFixedSize","System.Collections.Specialized.OrderedDictionary.IEnumerable.GetEnumerator","System.Collections.Specialized.OrderedDictionary.IDeserializationCallback.OnDeserialization","System.Collections.Specialized.OrderedDictionary.Values"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Specialized.OrderedDictionary","System::Collections::Specialized::OrderedDictionary","System.Collections.Specialized.OrderedDictionary.#ctor","System::Collections::Specialized::OrderedDictionary::#ctor","System.Collections.Specialized.OrderedDictionary.Add","System::Collections::Specialized::OrderedDictionary::Add","System.Collections.Specialized.OrderedDictionary.AsReadOnly","System::Collections::Specialized::OrderedDictionary::AsReadOnly","System.Collections.Specialized.OrderedDictionary.Clear","System::Collections::Specialized::OrderedDictionary::Clear","System.Collections.Specialized.OrderedDictionary.Contains","System::Collections::Specialized::OrderedDictionary::Contains","System.Collections.Specialized.OrderedDictionary.CopyTo","System::Collections::Specialized::OrderedDictionary::CopyTo","System.Collections.Specialized.OrderedDictionary.Count","System::Collections::Specialized::OrderedDictionary::Count","System.Collections.Specialized.OrderedDictionary.GetEnumerator","System::Collections::Specialized::OrderedDictionary::GetEnumerator","System.Collections.Specialized.OrderedDictionary.GetObjectData","System::Collections::Specialized::OrderedDictionary::GetObjectData","System.Collections.Specialized.OrderedDictionary.Insert","System::Collections::Specialized::OrderedDictionary::Insert","System.Collections.Specialized.OrderedDictionary.IsReadOnly","System::Collections::Specialized::OrderedDictionary::IsReadOnly","System.Collections.Specialized.OrderedDictionary.Item","System::Collections::Specialized::OrderedDictionary::Item","System.Collections.Specialized.OrderedDictionary.Keys","System::Collections::Specialized::OrderedDictionary::Keys","System.Collections.Specialized.OrderedDictionary.OnDeserialization","System::Collections::Specialized::OrderedDictionary::OnDeserialization","System.Collections.Specialized.OrderedDictionary.Remove","System::Collections::Specialized::OrderedDictionary::Remove","System.Collections.Specialized.OrderedDictionary.RemoveAt","System::Collections::Specialized::OrderedDictionary::RemoveAt","System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized","System::Collections::Specialized::OrderedDictionary::System#Collections#ICollection#IsSynchronized","System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot","System::Collections::Specialized::OrderedDictionary::System#Collections#ICollection#SyncRoot","System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize","System::Collections::Specialized::OrderedDictionary::System#Collections#IDictionary#IsFixedSize","System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator","System::Collections::Specialized::OrderedDictionary::System#Collections#IEnumerable#GetEnumerator","System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System::Collections::Specialized::OrderedDictionary::System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System.Collections.Specialized.OrderedDictionary.Values","System::Collections::Specialized::OrderedDictionary::Values"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"05eadeca-cee6-f10d-7362-ae86d7a6a827","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Specialized/OrderedDictionary.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OrderedDictionary class | Microsoft Docs","_op_ogTitle":"OrderedDictionary class","description":"Represents a collection of key/value pairs that are accessible by the key or index.\n","toc_asset_id":"_splitted/System.Collections.Specialized/toc.json","toc_rel":"_splitted/System.Collections.Specialized/toc.json","source_url":"","ms.assetid":"System.Collections.Specialized.OrderedDictionary","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.specialized.ordereddictionary","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.specialized.ordereddictionary","fileRelativePath":"System.Collections.Specialized.OrderedDictionary.html"},"themesRelativePathToOutputRoot":"_themes/"}