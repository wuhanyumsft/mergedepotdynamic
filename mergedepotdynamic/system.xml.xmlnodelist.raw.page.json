{"content":"    \r\n    <h1 id=\"System_Xml_XmlNodeList\">\r\n      <span class=\"lang-csharp\">XmlNodeList</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an ordered collection of nodes.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class XmlNodeList : IDisposable, System.Collections.IEnumerable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlNodeList</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Changes to the children of the node object that the XmlNodeList collection was created from are immediately reflected in the nodes returned by the <code>XmlNodeList</code> properties and methods. <code>XmlNodeList</code> supports iteration and indexed access.  </p>\n<p> <code>XmlNodeList</code> is returned by the following properties and methods.  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ChildNodes_\" data-linktype=\"relative-path\">ChildNodes</a> - Returns an <code>XmlNodeList</code> containing all the children of the node.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_\" data-linktype=\"relative-path\">SelectNodes</a> - Returns an <code>XmlNodeList</code> containing a collection of nodes matching the XPath query.  </p>\n</li>\n<li><p><code>GetElementsByTagName</code> - Returns an <code>XmlNodeList</code> containing a list of all descendant elements that match the specified name. This method is available in both the <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> and <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> classes.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList__ctor\" data-linktype=\"self-bookmark\">XmlNodeList()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of nodes in the <code>XmlNodeList</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList_ItemOf_System_Int32_\" data-linktype=\"self-bookmark\">ItemOf(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a node at the given index.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an enumerator that iterates through the collection of nodes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a node at the given index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList_PrivateDisposeNodeList\" data-linktype=\"self-bookmark\">PrivateDisposeNodeList()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disposes resources in the node list privately.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNodeList_System_IDisposable_Dispose\" data-linktype=\"self-bookmark\">IDisposable.Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList__ctor\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlNodeList()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected XmlNodeList ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList_Count\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of nodes in the <code>XmlNodeList</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of nodes in the <code>XmlNodeList</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object and uses the <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_GetElementsByTagName_\" data-linktype=\"relative-path\">GetElementsByTagName</a> method and the resulting <code>XmlNodeList</code> to display all the book titles.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;2books.xml&quot; );\n   \n   // Get and display all the book titles.\n   XmlElement^ root = doc-&gt;DocumentElement;\n   XmlNodeList^ elemList = root-&gt;GetElementsByTagName( &quot;title&quot; );\n   for ( int i = 0; i &lt; elemList-&gt;Count; i++ )\n   {\n      Console::WriteLine( elemList[ i ]-&gt;InnerXml );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.Load(&quot;2books.xml&quot;)\n                         \n     &#39; Get and display all the book titles.\n     Dim root as XmlElement = doc.DocumentElement\n     Dim elemList as XmlNodeList = root.GetElementsByTagName(&quot;title&quot;)\n     Dim i as integer\n     for i=0  to elemList.Count-1\n        Console.WriteLine(elemList.ItemOf(i).InnerXml)\n     next\n    \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.Load(&quot;2books.xml&quot;);\n                         \n     // Get and display all the book titles.\n     XmlElement root = doc.DocumentElement;\n     XmlNodeList elemList = root.GetElementsByTagName(&quot;title&quot;);\n     for (int i=0; i &lt; elemList.Count; i++)\n     {   \n        Console.WriteLine(elemList[i].InnerXml);\n     } \n    \n  }\n}\n</code></pre><p> The example uses the file <code>2books.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#2\">&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList_ItemOf_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList_ItemOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemOf(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a node at the given index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode this[int i] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index into the list of nodes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object and uses the <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_GetElementsByTagName_\" data-linktype=\"relative-path\">GetElementsByTagName</a> method and the resulting <code>XmlNodeList</code> to display all the book titles.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;2books.xml&quot; );\n   \n   // Get and display all the book titles.\n   XmlElement^ root = doc-&gt;DocumentElement;\n   XmlNodeList^ elemList = root-&gt;GetElementsByTagName( &quot;title&quot; );\n   for ( int i = 0; i &lt; elemList-&gt;Count; i++ )\n   {\n      Console::WriteLine( elemList[ i ]-&gt;InnerXml );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.Load(&quot;2books.xml&quot;)\n                         \n     &#39; Get and display all the book titles.\n     Dim root as XmlElement = doc.DocumentElement\n     Dim elemList as XmlNodeList = root.GetElementsByTagName(&quot;title&quot;)\n     Dim i as integer\n     for i=0  to elemList.Count-1\n        Console.WriteLine(elemList.ItemOf(i).InnerXml)\n     next\n    \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.Load(&quot;2books.xml&quot;);\n                         \n     // Get and display all the book titles.\n     XmlElement root = doc.DocumentElement;\n     XmlNodeList elemList = root.GetElementsByTagName(&quot;title&quot;);\n     for (int i=0; i &lt; elemList.Count; i++)\n     {   \n        Console.WriteLine(elemList[i].InnerXml);\n     } \n    \n  }\n}\n</code></pre><p> The example uses the file <code>2books.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlElement.GetElementsByTagName Example#2\">&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList_GetEnumerator\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Gets an enumerator that iterates through the collection of nodes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator used to iterate through the collection of nodes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Provides a simple &quot;foreach&quot; style iteration over the collection of nodes in the <code>XmlNodeList</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays all the book titles.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNodeList.GetEnumerator Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Collections;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;2books.xml&quot; );\n   \n   //Get and display all the book titles.\n   XmlElement^ root = doc-&gt;DocumentElement;\n   XmlNodeList^ elemList = root-&gt;GetElementsByTagName( &quot;title&quot; );\n   IEnumerator^ ienum = elemList-&gt;GetEnumerator();\n   while ( ienum-&gt;MoveNext() )\n   {\n      XmlNode^ title = dynamic_cast&lt;XmlNode^&gt;(ienum-&gt;Current);\n      Console::WriteLine( title-&gt;InnerText );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNodeList.GetEnumerator Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Collections\n\npublic class Sample\n\n  public shared sub Main()\n\n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(&quot;2books.xml&quot;)\n                         \n     &#39;Get and display all the book titles.\n     Dim root as XmlElement = doc.DocumentElement\n     Dim elemList as XmlNodeList = root.GetElementsByTagName(&quot;title&quot;)\n     Dim ienum as IEnumerator = elemList.GetEnumerator()          \n     while (ienum.MoveNext())\n        Dim title as XmlNode\n        title = CType(ienum.Current, XmlNode)\n        Console.WriteLine(title.InnerText)\n     end while    \n    \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlNodeList.GetEnumerator Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Collections;\n\npublic class Sample {\n\n  public static void Main() {\n  \n     XmlDocument doc = new XmlDocument();\n     doc.Load(&quot;2books.xml&quot;);\n                         \n     //Get and display all the book titles.\n     XmlElement root = doc.DocumentElement;\n     XmlNodeList elemList = root.GetElementsByTagName(&quot;title&quot;);\n     IEnumerator ienum = elemList.GetEnumerator();          \n     while (ienum.MoveNext()) {   \n       XmlNode title = (XmlNode) ienum.Current;\n       Console.WriteLine(title.InnerText);\n     }    \n    \n  }\n}\n</code></pre><p> The example uses the file <code>2books.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlNodeList.GetEnumerator Example#2\">&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a node at the given index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Xml.XmlNode Item (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index into the list of nodes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> with the specified index in the collection. If <code>index</code> is greater than or equal to the number of nodes in the list, this returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example gets and displays the second node in the <code>XmlNodeList</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNodeList.Item Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;items&gt;&quot;\n   &quot;  &lt;item&gt;First item&lt;/item&gt;&quot;\n   &quot;  &lt;item&gt;Second item&lt;/item&gt;&quot;\n   &quot;&lt;/items&gt;&quot; );\n   \n   //Get and display the last item node.\n   XmlElement^ root = doc-&gt;DocumentElement;\n   XmlNodeList^ nodeList = root-&gt;GetElementsByTagName( &quot;item&quot; );\n   Console::WriteLine( nodeList-&gt;Item( 1 )-&gt;InnerXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNodeList.Item Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;items&gt;&quot; &amp; _\n                &quot;  &lt;item&gt;First item&lt;/item&gt;&quot; &amp; _\n                &quot;  &lt;item&gt;Second item&lt;/item&gt;&quot; &amp; _\n                &quot;&lt;/items&gt;&quot;)\n                         \n     &#39;Get and display the last item node.\n     Dim root as XmlElement = doc.DocumentElement\n     Dim nodeList as XmlNodeList = root.GetElementsByTagName(&quot;item&quot;)\n     Console.WriteLine(nodeList.Item(1).InnerXml)\n    \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlNodeList.Item Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n  \n     XmlDocument doc = new XmlDocument();\n     doc.LoadXml(&quot;&lt;items&gt;&quot; +\n                 &quot;  &lt;item&gt;First item&lt;/item&gt;&quot; +\n                 &quot;  &lt;item&gt;Second item&lt;/item&gt;&quot; +\n                 &quot;&lt;/items&gt;&quot;);\n                         \n     //Get and display the last item node.\n     XmlElement root = doc.DocumentElement;\n     XmlNodeList nodeList = root.GetElementsByTagName(&quot;item&quot;);\n     Console.WriteLine(nodeList.Item(1).InnerXml);     \n    \n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList_PrivateDisposeNodeList\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList_PrivateDisposeNodeList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrivateDisposeNodeList()</div>        \r\n          </div>\r\n    \r\n            <p>Disposes resources in the node list privately.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PrivateDisposeNodeList ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNodeList_System_IDisposable_Dispose\">\r\n    \r\n            <a id=\"System_Xml_XmlNodeList_System_IDisposable_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDisposable.Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDisposable.Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlNodeList.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlNodeList.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList.Count\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList.Item\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList.ItemOf\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList.PrivateDisposeNodeList\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNodeList.IDisposable.Dispose\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b443ef31-164a-7f26-f824-0ded06784e5a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an ordered collection of nodes.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlNodeList\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlNodeList.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlNodeList.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlNodeList","System.Xml.XmlNodeList..ctor","System.Xml.XmlNodeList.Count","System.Xml.XmlNodeList.GetEnumerator","System.Xml.XmlNodeList.Item","System.Xml.XmlNodeList.ItemOf","System.Xml.XmlNodeList.PrivateDisposeNodeList","System.Xml.XmlNodeList.IDisposable.Dispose"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlNodeList","System::Xml::XmlNodeList","System.Xml.XmlNodeList.#ctor","System::Xml::XmlNodeList::#ctor","System.Xml.XmlNodeList.Count","System::Xml::XmlNodeList::Count","System.Xml.XmlNodeList.GetEnumerator","System::Xml::XmlNodeList::GetEnumerator","System.Xml.XmlNodeList.Item","System::Xml::XmlNodeList::Item","System.Xml.XmlNodeList.ItemOf","System::Xml::XmlNodeList::ItemOf","System.Xml.XmlNodeList.PrivateDisposeNodeList","System::Xml::XmlNodeList::PrivateDisposeNodeList","System.Xml.XmlNodeList.System#IDisposable#Dispose","System::Xml::XmlNodeList::System#IDisposable#Dispose"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b443ef31-164a-7f26-f824-0ded06784e5a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlNodeList.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlNodeList class | Microsoft Docs","_op_ogTitle":"XmlNodeList class","description":"Represents an ordered collection of nodes.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlNodeList","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlnodelist","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlnodelist","fileRelativePath":"System.Xml.XmlNodeList.html"},"themesRelativePathToOutputRoot":"_themes/"}