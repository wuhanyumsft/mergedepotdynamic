{"content":"    \r\n    <h1 id=\"System_Windows_Input_AccessKeyManager\">\r\n      <span class=\"lang-csharp\">AccessKeyManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Maintains the registration of all access keys and the handling of interop keyboard commands between <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winforms-md.md&quot; -->Windows Forms<!--END INCLUDE -->, <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-win32-md.md&quot; -->Win32<!--END INCLUDE -->, and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE -->.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class AccessKeyManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AccessKeyManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An AccessKeyManager object is created on demand with one per <a class=\"xref\" href=\"system.windows.threading.dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>.  </p>\n<p> The AccessKeyManager is attached as an event handler for <a class=\"xref\" href=\"system.windows.input.inputmanager#System_Windows_Input_InputManager_PostProcessInput\" data-linktype=\"relative-path\">PostProcessInput</a> and exposes methods to <a class=\"xref\" href=\"system.windows.input.accesskeymanager#System_Windows_Input_AccessKeyManager_Register_\" data-linktype=\"relative-path\">Register</a> and <a class=\"xref\" href=\"system.windows.input.accesskeymanager#System_Windows_Input_AccessKeyManager_Unregister_\" data-linktype=\"relative-path\">Unregister</a> access keys.  </p>\n<p> When the registered access key is pressed, the AccessKeyManager calls the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnAccessKey_\" data-linktype=\"relative-path\">OnAccessKey</a> method on the target element.  </p>\n<p> An element can be associated with any number of access keys.</p>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_AccessKeyPressedEvent\" data-linktype=\"self-bookmark\">AccessKeyPressedEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.AccessKeyManager.AccessKeyPressed</span> routed event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_AddAccessKeyPressedHandler_System_Windows_DependencyObject_System_Windows_Input_AccessKeyPressedEventHandler_\" data-linktype=\"self-bookmark\">AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a handler for the <span class=\"xref\">stem.Windows.Input.AccessKeyManager.AccessKeyPressed</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_IsKeyRegistered_System_Object_System_String_\" data-linktype=\"self-bookmark\">IsKeyRegistered(Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified key is registered as an access keys in the specified scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_ProcessKey_System_Object_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">ProcessKey(Object,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the specified access keys as if a <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event for the key was passed to the <a class=\"xref\" href=\"system.windows.input.accesskeymanager\" data-linktype=\"relative-path\">AccessKeyManager</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_Register_System_String_System_Windows_IInputElement_\" data-linktype=\"self-bookmark\">Register(String,IInputElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates the specified access keys with the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_RemoveAccessKeyPressedHandler_System_Windows_DependencyObject_System_Windows_Input_AccessKeyPressedEventHandler_\" data-linktype=\"self-bookmark\">RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified <span class=\"xref\">stem.Windows.Input.AccessKeyManager.AccessKeyPressed</span> event handler from the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_AccessKeyManager_Unregister_System_String_System_Windows_IInputElement_\" data-linktype=\"self-bookmark\">Unregister(String,IInputElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disassociates the specified access keys from the specified element.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_AccessKeyPressedEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccessKeyPressedEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Input.AccessKeyManager.AccessKeyPressed</span> routed event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_AddAccessKeyPressedHandler_System_Windows_DependencyObject_System_Windows_Input_AccessKeyPressedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_AccessKeyManager_AddAccessKeyPressedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a handler for the <span class=\"xref\">stem.Windows.Input.AccessKeyManager.AccessKeyPressed</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a> that listens to this event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.accesskeypressedeventhandler\" data-linktype=\"relative-path\">AccessKeyPressedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event handler to be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_IsKeyRegistered_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Input_AccessKeyManager_IsKeyRegistered_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsKeyRegistered(Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified key is registered as an access keys in the specified scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsKeyRegistered (object scope, string key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The presentation source to query for <code>key</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key to query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key is registered; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_ProcessKey_System_Object_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Input_AccessKeyManager_ProcessKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessKey(Object,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the specified access keys as if a <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event for the key was passed to the <a class=\"xref\" href=\"system.windows.input.accesskeymanager\" data-linktype=\"relative-path\">AccessKeyManager</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool ProcessKey (object scope, string key, bool isMultiple);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The scope for the access key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The access key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isMultiple</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates if <code>key</code> has multiple matches.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there are more keys that match; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_Register_System_String_System_Windows_IInputElement_\">\r\n    \r\n            <a id=\"System_Windows_Input_AccessKeyManager_Register_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Register(String,IInputElement)</div>        \r\n          </div>\r\n    \r\n            <p>Associates the specified access keys with the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Register (string key, System.Windows.IInputElement element);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The access key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iinputelement\" data-linktype=\"relative-path\">IInputElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element to associate <code>key</code> with.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the access keys is pressed, the  <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnAccessKey_\" data-linktype=\"relative-path\">OnAccessKey</a> method of <code>element</code> is called.  </p>\n<p> An element can be associated with any number of access keys.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_RemoveAccessKeyPressedHandler_System_Windows_DependencyObject_System_Windows_Input_AccessKeyPressedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Input_AccessKeyManager_RemoveAccessKeyPressedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified <span class=\"xref\">stem.Windows.Input.AccessKeyManager.AccessKeyPressed</span> event handler from the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a> that listens to this event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.accesskeypressedeventhandler\" data-linktype=\"relative-path\">AccessKeyPressedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event handler to be removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_AccessKeyManager_Unregister_System_String_System_Windows_IInputElement_\">\r\n    \r\n            <a id=\"System_Windows_Input_AccessKeyManager_Unregister_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unregister(String,IInputElement)</div>        \r\n          </div>\r\n    \r\n            <p>Disassociates the specified access keys from the specified element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Unregister (string key, System.Windows.IInputElement element);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The access key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iinputelement\" data-linktype=\"relative-path\">IInputElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The element from which to disassociate <code>key</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.AccessKeyManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.AccessKeyManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.IsKeyRegistered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.ProcessKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.Register\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.AccessKeyManager.Unregister\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d816e033-c744-844d-3b11-8a8e552f24bd\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Input\\AccessKeyManager.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.AccessKeyManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.AccessKeyManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.AccessKeyManager.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.AccessKeyManager","System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent","System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler","System.Windows.Input.AccessKeyManager.IsKeyRegistered","System.Windows.Input.AccessKeyManager.ProcessKey","System.Windows.Input.AccessKeyManager.Register","System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler","System.Windows.Input.AccessKeyManager.Unregister"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.AccessKeyManager","System::Windows::Input::AccessKeyManager","System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent","System::Windows::Input::AccessKeyManager::AccessKeyPressedEvent","System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler","System::Windows::Input::AccessKeyManager::AddAccessKeyPressedHandler","System.Windows.Input.AccessKeyManager.IsKeyRegistered","System::Windows::Input::AccessKeyManager::IsKeyRegistered","System.Windows.Input.AccessKeyManager.ProcessKey","System::Windows::Input::AccessKeyManager::ProcessKey","System.Windows.Input.AccessKeyManager.Register","System::Windows::Input::AccessKeyManager::Register","System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler","System::Windows::Input::AccessKeyManager::RemoveAccessKeyPressedHandler","System.Windows.Input.AccessKeyManager.Unregister","System::Windows::Input::AccessKeyManager::Unregister"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d816e033-c744-844d-3b11-8a8e552f24bd","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Input\\AccessKeyManager.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/AccessKeyManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AccessKeyManager class | Microsoft Docs","_op_ogTitle":"AccessKeyManager class","description":"Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.AccessKeyManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.accesskeymanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.accesskeymanager","fileRelativePath":"System.Windows.Input.AccessKeyManager.html"},"themesRelativePathToOutputRoot":"_themes/"}