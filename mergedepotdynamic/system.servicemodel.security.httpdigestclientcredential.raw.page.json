{"content":"    \r\n    <h1 id=\"System_ServiceModel_Security_HttpDigestClientCredential\">\r\n      <span class=\"lang-csharp\">HttpDigestClientCredential</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Used for digest authentication of HTTP clients.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class HttpDigestClientCredential</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpDigestClientCredential</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Digest authentication verifies that both parties to a communication know a shared secret (a password). Authentication is done without sending the password in the clear. Digest authentication is based on a challenge-response paradigm. The Digest scheme challenges using a nonce (&quot;number used once&quot;) value. The response must contain a checksum of the user name, the password, the nonce value, the HTTP method, and the requested URI.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Security_HttpDigestClientCredential_AllowedImpersonationLevel\" data-linktype=\"self-bookmark\">AllowedImpersonationLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the level of impersonation that the client allows with the client credential provided.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Security_HttpDigestClientCredential_ClientCredential\" data-linktype=\"self-bookmark\">ClientCredential</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the network credential to be used for digest-based authentication.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Security_HttpDigestClientCredential_AllowedImpersonationLevel\">\r\n    \r\n            <a id=\"System_ServiceModel_Security_HttpDigestClientCredential_AllowedImpersonationLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowedImpersonationLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the level of impersonation that the client allows with the client credential provided.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a> that the client grants the server as part of HTTP digest authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Allowable values include:  </p>\n<p> <a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a>,  </p>\n<p> <a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a>, and  </p>\n<p> <a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a>.  </p>\n<p> Due to the limitations of Digest authentication, when the client is using non-default credentials, only <code>Impersonation</code> and <code>Delegation</code> levels are allowed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set this property.  </p>\n<pre><code class=\"lang-vb\" name=\"S_UE_HttpDigestClientCredential#1\">            &#39; Create a service host.\n            Dim ea As New EndpointAddress(&quot;http://localhost/Calculator&quot;)\n            Dim b As New WSHttpBinding(SecurityMode.Transport)\n            b.Security.Transport.ClientCredentialType = _\n            HttpClientCredentialType.Digest\n\n            &#39; Create a client. The code is not shown here. See the WCF samples\n            &#39; for an example of the CalculatorClient code.\n            Dim cc As New CalculatorClient(b, ea)\n            &#39; Get a reference to the Windows client credential object.\n            Dim digestCred As HttpDigestClientCredential = cc.ClientCredentials.HttpDigest\n            Console.WriteLine(&quot;AllowedImpersonationLevel: {0}&quot;, _\n                             digestCred.AllowedImpersonationLevel)\n            Console.WriteLine(&quot;Domain: {0}&quot;, digestCred.ClientCredential.Domain)\n\n            Console.ReadLine()\n            &#39; Change the AllowedImpersonationLevel.\n            digestCred.AllowedImpersonationLevel = _\n            System.Security.Principal.TokenImpersonationLevel.Impersonation\n\n            Console.WriteLine(&quot;Changed AllowedImpersonationLevel: {0}&quot;, _\n            digestCred.AllowedImpersonationLevel)\n            Console.ReadLine()\n            &#39; Open the calculator and use it.\n            &#39; cc.Open()\n            &#39; Console.WriteLine(cc.Add(11, 11))\n            &#39; Close the client.\n            &#39; cc.Close()\n</code></pre><pre><code class=\"lang-cs\" name=\"S_UE_HttpDigestClientCredential#1\">            // Create a service host.\n            EndpointAddress ea = new EndpointAddress(&quot;http://localhost/Calculator&quot;);\n            WSHttpBinding b = new WSHttpBinding(SecurityMode.Transport);\n            b.Security.Transport.ClientCredentialType = HttpClientCredentialType.Digest;\n            \n            // Create a client. The code is not shown here. See the WCF samples\n            // for an example of the CalculatorClient code.\n\n            CalculatorClient cc = new CalculatorClient(b, ea);\n            // Get a reference to the Windows client credential object.\n            HttpDigestClientCredential digestCred = cc.ClientCredentials.HttpDigest;\n            Console.WriteLine(&quot;AllowedImpersonationLevel: {0}&quot;,\n                digestCred.AllowedImpersonationLevel);\n            Console.WriteLine(&quot;Domain: {0}&quot;, digestCred.ClientCredential.Domain);\n\n            Console.ReadLine();\n            // Change the AllowedImpersonationLevel.\n            digestCred.AllowedImpersonationLevel = \n                System.Security.Principal.TokenImpersonationLevel.Impersonation;\n\n            Console.WriteLine(&quot;Changed AllowedImpersonationLevel: {0}&quot;,\n                digestCred.AllowedImpersonationLevel);\n            Console.ReadLine();\n            // Open the calculator and use it.\n            //cc.Open();\n            //Console.WriteLine(cc.Add(11, 11));\n\n            //// Close the client.\n            //cc.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Security_HttpDigestClientCredential_ClientCredential\">\r\n    \r\n            <a id=\"System_ServiceModel_Security_HttpDigestClientCredential_ClientCredential_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientCredential</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the network credential to be used for digest-based authentication.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkCredential ClientCredential { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> to be used for digest-based authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If not specified, the default thread credential will be used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code examples show how to authenticate the client as a different principal.  </p>\n<p> This is how to change the properties of the instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class that is returned by this property.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_HttpDigestClientCredential#2\">        private void Snippet2()\n        {\n            using (CalculatorClient client = new CalculatorClient())\n            {\n                client.ClientCredentials.HttpDigest.ClientCredential.UserName = &quot;test&quot;;\n                client.ClientCredentials.HttpDigest.ClientCredential.Password = &quot;password&quot;;\n            }\n        }\n</code></pre><p> And here is how to create a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class and assign it to this property.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UE_HttpDigestClientCredential#3\">        private void Snippet3()\n        {\n            using (CalculatorClient client = new CalculatorClient())\n            {\n                client.ClientCredentials.HttpDigest.ClientCredential = new NetworkCredential(&quot;test user&quot;, &quot;password&quot;);\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Security.HttpDigestClientCredential.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Security.HttpDigestClientCredential.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.HttpDigestClientCredential\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b0dec125-18dd-5f84-dd8c-7b3061cdbb66\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.ServiceModel.Security\\HttpDigestClientCredential.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Used for digest authentication of HTTP clients.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Security/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Security.HttpDigestClientCredential\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Security.HttpDigestClientCredential.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Security.HttpDigestClientCredential.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Security.HttpDigestClientCredential","System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel","System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Security.HttpDigestClientCredential","System::ServiceModel::Security::HttpDigestClientCredential","System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel","System::ServiceModel::Security::HttpDigestClientCredential::AllowedImpersonationLevel","System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential","System::ServiceModel::Security::HttpDigestClientCredential::ClientCredential"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b0dec125-18dd-5f84-dd8c-7b3061cdbb66","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.ServiceModel.Security\\HttpDigestClientCredential.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Security/HttpDigestClientCredential.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpDigestClientCredential class | Microsoft Docs","_op_ogTitle":"HttpDigestClientCredential class","description":"Used for digest authentication of HTTP clients.\n","toc_asset_id":"_splitted/System.ServiceModel.Security/toc.json","toc_rel":"_splitted/System.ServiceModel.Security/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Security.HttpDigestClientCredential","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.security.httpdigestclientcredential","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.security.httpdigestclientcredential","fileRelativePath":"System.ServiceModel.Security.HttpDigestClientCredential.html"},"themesRelativePathToOutputRoot":"_themes/"}