{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_CngKey\">\r\n      <span class=\"lang-csharp\">CngKey</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the core functionality for keys that are used with Cryptography Next Generation (CNG) objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class CngKey : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CngKey</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class wraps NCrypt keys, not BCrypt keys. NCrypt is a subset of CNG that provides key storage functionality. BCrypt is a subset that provides base cryptographic services such as random number generation, hash functions, signatures, and encryption keys.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Algorithm\" data-linktype=\"self-bookmark\">Algorithm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the algorithm that is used by the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_AlgorithmGroup\" data-linktype=\"self-bookmark\">AlgorithmGroup</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the algorithm group that is used by the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_ExportPolicy\" data-linktype=\"self-bookmark\">ExportPolicy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the export policy that is used by the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Handle\" data-linktype=\"self-bookmark\">Handle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a safe handle that represents a native key (NCRYPT_KEY_HANDLE).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_IsEphemeral\" data-linktype=\"self-bookmark\">IsEphemeral</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the persistence state of the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_IsMachineKey\" data-linktype=\"self-bookmark\">IsMachineKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the scope (machine or user) of the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_KeyName\" data-linktype=\"self-bookmark\">KeyName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_KeySize\" data-linktype=\"self-bookmark\">KeySize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the key size in bits.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_KeyUsage\" data-linktype=\"self-bookmark\">KeyUsage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cryptographic operations specified by the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_ParentWindowHandle\" data-linktype=\"self-bookmark\">ParentWindowHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the window handle (HWND) that should be used for user interface (UI) prompts caused by accessing the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Provider\" data-linktype=\"self-bookmark\">Provider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the key storage provider (KSP) that manages the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_ProviderHandle\" data-linktype=\"self-bookmark\">ProviderHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a native handle (an NCRYPT_PROV_HANDLE) to the key storage provider (KSP).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_UIPolicy\" data-linktype=\"self-bookmark\">UIPolicy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets parameters that control the user interface (UI) for accessing the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_UniqueName\" data-linktype=\"self-bookmark\">UniqueName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the unique name for the key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Create_System_Security_Cryptography_CngAlgorithm_\" data-linktype=\"self-bookmark\">Create(CngAlgorithm)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that can be used with the specified algorithm.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Create_System_Security_Cryptography_CngAlgorithm_System_String_\" data-linktype=\"self-bookmark\">Create(CngAlgorithm,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a named <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that provides the specified algorithm.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Create_System_Security_Cryptography_CngAlgorithm_System_String_System_Security_Cryptography_CngKeyCreationParameters_\" data-linktype=\"self-bookmark\">Create(CngAlgorithm,String,CngKeyCreationParameters)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a named <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that provides the specified algorithm, using the supplied key creation parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Delete\" data-linktype=\"self-bookmark\">Delete()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the key that is associated with the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Exists_System_String_\" data-linktype=\"self-bookmark\">Exists(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks to see whether a named key exists in the default key storage provider (KSP).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Exists_System_String_System_Security_Cryptography_CngProvider_\" data-linktype=\"self-bookmark\">Exists(String,CngProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks to see whether a named key exists in the specified key storage provider (KSP).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Exists_System_String_System_Security_Cryptography_CngProvider_System_Security_Cryptography_CngKeyOpenOptions_\" data-linktype=\"self-bookmark\">Exists(String,CngProvider,CngKeyOpenOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks to see whether a named key exists in the specified key storage provider (KSP), according to the specified options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Export_System_Security_Cryptography_CngKeyBlobFormat_\" data-linktype=\"self-bookmark\">Export(CngKeyBlobFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Exports the key material into a BLOB, in the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_GetProperty_System_String_System_Security_Cryptography_CngPropertyOptions_\" data-linktype=\"self-bookmark\">GetProperty(String,CngPropertyOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a property, given a name and a set of property options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_HasProperty_System_String_System_Security_Cryptography_CngPropertyOptions_\" data-linktype=\"self-bookmark\">HasProperty(String,CngPropertyOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks to see whether the specified property exists on the key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Import_System_Byte___System_Security_Cryptography_CngKeyBlobFormat_\" data-linktype=\"self-bookmark\">Import(Byte[],CngKeyBlobFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new key by importing the specified key material into the default key storage provider (KSP) and using the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Import_System_Byte___System_Security_Cryptography_CngKeyBlobFormat_System_Security_Cryptography_CngProvider_\" data-linktype=\"self-bookmark\">Import(Byte[],CngKeyBlobFormat,CngProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new key by importing the specified key material into the specified key storage provider (KSP), using the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Open_System_String_\" data-linktype=\"self-bookmark\">Open(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that represents an existing named key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Open_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle_System_Security_Cryptography_CngKeyHandleOpenOptions_\" data-linktype=\"self-bookmark\">Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object by using a handle to an existing key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Open_System_String_System_Security_Cryptography_CngProvider_\" data-linktype=\"self-bookmark\">Open(String,CngProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that represents an existing named key, using the specified key storage provider (KSP).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_Open_System_String_System_Security_Cryptography_CngProvider_System_Security_Cryptography_CngKeyOpenOptions_\" data-linktype=\"self-bookmark\">Open(String,CngProvider,CngKeyOpenOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that represents an existing named key, using the specified key storage provider (KSP) and key open options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_CngKey_SetProperty_System_Security_Cryptography_CngProperty_\" data-linktype=\"self-bookmark\">SetProperty(CngProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets a named property on the key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Algorithm\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Algorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Algorithm</div>        \r\n          </div>\r\n    \r\n            <p>Gets the algorithm that is used by the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngAlgorithm Algorithm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngalgorithm\" data-linktype=\"relative-path\">CngAlgorithm</a></div>\r\n                  </div>\r\n                  <p>An object that specifies the name of an encryption algorithm.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_AlgorithmGroup\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_AlgorithmGroup_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlgorithmGroup</div>        \r\n          </div>\r\n    \r\n            <p>Gets the algorithm group that is used by the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngalgorithmgroup\" data-linktype=\"relative-path\">CngAlgorithmGroup</a></div>\r\n                  </div>\r\n                  <p>An object that specifies the name of an encryption algorithm group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_ExportPolicy\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_ExportPolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExportPolicy</div>        \r\n          </div>\r\n    \r\n            <p>Gets the export policy that is used by the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngExportPolicies ExportPolicy { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngexportpolicies\" data-linktype=\"relative-path\">CngExportPolicies</a></div>\r\n                  </div>\r\n                  <p>An object that specifies the export policy for the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The export policy controls the export frequency and format for the key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Handle\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Handle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Handle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a safe handle that represents a native key (NCRYPT_KEY_HANDLE).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safencryptkeyhandle\" data-linktype=\"relative-path\">SafeNCryptKeyHandle</a></div>\r\n                  </div>\r\n                  <p>A safe handle that represents the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned handle is a duplicate of the handle in the current <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object. It will persist even if the current <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> is disposed, and must be disposed of separately.  </p>\n<p> You can release the current object and the handle in any order without any adverse effects.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_IsEphemeral\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_IsEphemeral_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEphemeral</div>        \r\n          </div>\r\n    \r\n            <p>Gets the persistence state of the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEphemeral { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key is ephemeral; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property determines whether the key is ephemeral (that is, the key exists only for the lifetime of the handle), or persisted (that is, the key exists independently of the handle).  </p>\n<p> The return value depends on the method that is used to obtain the key:  </p>\n<ul>\n<li><p>If the key was not opened by the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_Open_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle_System_Security_Cryptography_CngKeyHandleOpenOptions_\" data-linktype=\"relative-path\">Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)</a> method overload, the common language runtime (CLR) is managing the key and can determine whether it is ephemeral.  </p>\n</li>\n<li><p>If the key was opened by the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_Open_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle_System_Security_Cryptography_CngKeyHandleOpenOptions_\" data-linktype=\"relative-path\">Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)</a> method overload, the CLR cannot determine whether it is ephemeral. Therefore, the key is assumed to be persisted. However, if this method is used to open a handle to a key that is created by the CLR, the CLR will be able to determine whether it is ephemeral.  </p>\n<p>This property does not have a public setter; it is read-only.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_IsMachineKey\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_IsMachineKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsMachineKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets the scope (machine or user) of the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsMachineKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key is available on a machine-wide basis; <code>false</code> if the key is only for the current user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_KeyName\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_KeyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string KeyName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the key. If the key is ephemeral, the value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_KeySize\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_KeySize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeySize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the key size in bits.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int KeySize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The key size in bits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_KeyUsage\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_KeyUsage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyUsage</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cryptographic operations specified by the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngKeyUsages KeyUsage { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyusages\" data-linktype=\"relative-path\">CngKeyUsages</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of the enumeration values that specify the usages allowed for the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_ParentWindowHandle\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_ParentWindowHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParentWindowHandle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the window handle (HWND) that should be used for user interface (UI) prompts caused by accessing the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr ParentWindowHandle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>The parent window handle for the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The parent window handle for the key is used in UI prompts, such as smart card PIN prompts. This value is not persisted with persisted keys.  </p>\n<p> We recommend that you always set this property for keys that display a user interface. Do not use the default value of <code>null</code> for such keys.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Provider\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Provider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Provider</div>        \r\n          </div>\r\n    \r\n            <p>Gets the key storage provider (KSP) that manages the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngProvider Provider { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a></div>\r\n                  </div>\r\n                  <p>The KSP that manages the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_ProviderHandle\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_ProviderHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProviderHandle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a native handle (an NCRYPT_PROV_HANDLE) to the key storage provider (KSP).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safencryptproviderhandle\" data-linktype=\"relative-path\">SafeNCryptProviderHandle</a></div>\r\n                  </div>\r\n                  <p>A handle to the KSP.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned handle is a duplicate of the handle in the current <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object. It will persist even if the current <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> is disposed, and must be disposed of separately.  </p>\n<p> You can release the current object and the handle in any order without any adverse effects.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_UIPolicy\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_UIPolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UIPolicy</div>        \r\n          </div>\r\n    \r\n            <p>Gets parameters that control the user interface (UI) for accessing the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngUIPolicy UIPolicy { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cnguipolicy\" data-linktype=\"relative-path\">CngUIPolicy</a></div>\r\n                  </div>\r\n                  <p>An object that contains configuration parameters for displaying the UI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The key UI policy is used with UI prompts such as smart card PIN prompts. This policy also controls password dialog boxes for protected keys.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_UniqueName\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_UniqueName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UniqueName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the unique name for the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UniqueName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An alternate name for the key. If the key is ephemeral, the value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gets an alternate name that can be used when accessing the key. You can use this property if the original key name does not uniquely identify the persisted key. The <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a> property will return the file name of the key as this property. The name returned by the <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSmartCardKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSmartCardKeyStorageProvider</a> is implementation-dependent.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Create_System_Security_Cryptography_CngAlgorithm_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(CngAlgorithm)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that can be used with the specified algorithm.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>algorithm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngalgorithm\" data-linktype=\"relative-path\">CngAlgorithm</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The algorithm that the key will be used with.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>An ephemeral key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>algorithm</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload creates a key without a name, which means that the key is ephemeral (that is, it will not be persisted). It also creates a default <a class=\"xref\" href=\"system.security.cryptography.cngkeycreationparameters\" data-linktype=\"relative-path\">CngKeyCreationParameters</a> object that specifies a default <a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a> and other advanced parameters for the key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Create_System_Security_Cryptography_CngAlgorithm_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(CngAlgorithm,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a named <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that provides the specified algorithm.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>algorithm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngalgorithm\" data-linktype=\"relative-path\">CngAlgorithm</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The algorithm that the key will be used with.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key name. If a name is not provided, the key will not be persisted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>A persisted or ephemeral key that provides the specified algorithm.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>algorithm</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>keyName</code> is provided, this overload creates a persisted key. If <code>keyName</code> is not provided, the key will be ephemeral. This overload also creates a default <a class=\"xref\" href=\"system.security.cryptography.cngkeycreationparameters\" data-linktype=\"relative-path\">CngKeyCreationParameters</a> object that specifies a default <a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a> and other advanced parameters for the key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Create_System_Security_Cryptography_CngAlgorithm_System_String_System_Security_Cryptography_CngKeyCreationParameters_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(CngAlgorithm,String,CngKeyCreationParameters)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a named <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that provides the specified algorithm, using the supplied key creation parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName, System.Security.Cryptography.CngKeyCreationParameters creationParameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>algorithm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngalgorithm\" data-linktype=\"relative-path\">CngAlgorithm</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The algorithm that the key will be used with.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key name. If a name is not provided, the key will not be persisted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>creationParameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeycreationparameters\" data-linktype=\"relative-path\">CngKeyCreationParameters</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that specifies advanced parameters for the method, including the <a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>A persisted or ephemeral key that provides the specified algorithm.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>algorithm</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>keyName</code> is provided, this overload creates a persisted key. If <code>keyName</code> is not provided, the key will be ephemeral.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Delete\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Delete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Delete()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the key that is associated with the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Delete ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An attempt was made to access a deleted key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <ul>\n<li><p>When you call the Delete method on an ephemeral key, it closes the handle to the key.  </p>\n<p>When you call the Delete method on a named key, the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object can no longer be used after the named key is deleted.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Dispose\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Exists_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Exists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exists(String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks to see whether a named key exists in the default key storage provider (KSP).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Exists (string keyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the named key exists in the default KSP; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default KSP is <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Exists_System_String_System_Security_Cryptography_CngProvider_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Exists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exists(String,CngProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Checks to see whether a named key exists in the specified key storage provider (KSP).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The KSP to check for the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the named key exists in the specified provider; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyName</code> or <code>provider</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this overload to check for the existence of a key in a KSP other than the default KSP, which is <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Exists_System_String_System_Security_Cryptography_CngProvider_System_Security_Cryptography_CngKeyOpenOptions_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Exists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exists(String,CngProvider,CngKeyOpenOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Checks to see whether a named key exists in the specified key storage provider (KSP), according to the specified options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The KSP to search for the key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyopenoptions\" data-linktype=\"relative-path\">CngKeyOpenOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify options for opening a key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the named key exists in the specified provider; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyName</code> or <code>provider</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this overload to check for the existence of a key in a KSP other than the default <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a>, and to specify key open options.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Export_System_Security_Cryptography_CngKeyBlobFormat_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Export_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Export(CngKeyBlobFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Exports the key material into a BLOB, in the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] Export (System.Security.Cryptography.CngKeyBlobFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyblobformat\" data-linktype=\"relative-path\">CngKeyBlobFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that specifies the format of the key BLOB.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A BLOB that contains the key material in the specified format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>format</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors. Typically, the <span class=\"xref\">stem.Security.Cryptography.CngKey.ExportPolicy*</span> does not allow the key to be exported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Cryptography Next Generation (CNG) allows export in any format that the underlying key storage provider (KSP) supports. For example, on Windows Vista,the default KSP (which is <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a>) only allows export of private keys in the <a class=\"xref\" href=\"system.security.cryptography.cngkeyblobformat#System_Security_Cryptography_CngKeyBlobFormat_Pkcs8PrivateBlob_\" data-linktype=\"relative-path\">Pkcs8PrivateBlob</a>, <a class=\"xref\" href=\"system.security.cryptography.cngkeyblobformat#System_Security_Cryptography_CngKeyBlobFormat_EccPrivateBlob_\" data-linktype=\"relative-path\">EccPrivateBlob</a>, and <a class=\"xref\" href=\"system.security.cryptography.cngkeyblobformat#System_Security_Cryptography_CngKeyBlobFormat_OpaqueTransportBlob_\" data-linktype=\"relative-path\">OpaqueTransportBlob</a> formats. This restriction is controlled by the underlying KSP. If you use a different KSP, other formats may apply.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_GetProperty_System_String_System_Security_Cryptography_CngPropertyOptions_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_GetProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperty(String,CngPropertyOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a property, given a name and a set of property options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.CngProperty GetProperty (string name, System.Security.Cryptography.CngPropertyOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the desired property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngpropertyoptions\" data-linktype=\"relative-path\">CngPropertyOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify options for the named property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngproperty\" data-linktype=\"relative-path\">CngProperty</a></div>\r\n                  </div>\r\n                  <p>An object that contains the raw value of the specified property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The purpose of this method is to return the value of an arbitrary property of the key. The typical way to retrieve properties is by using the property accessors provided by the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> class. <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> provides wrappers for several, but not all, properties. The GetProperty method is primarily used to access the value of a property that is not wrapped.  </p>\n<p> This method is useful in the following cases:  </p>\n<ul>\n<li><p>A new version of the operating system supports a new Cryptography Next Generation (CNG) key property that does not have a wrapper.  </p>\n</li>\n<li><p>You add a custom property to the key.  </p>\n<p>The <code>options</code> parameter is specifically used to indicate the following:  </p>\n</li>\n<li><p>Whether the property is built-in, or custom.  </p>\n</li>\n<li><p>Whether the property should be persisted with the key.  </p>\n<p>These options must match the value that the property was set with, or the property will not be found.  </p>\n<p><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> is thrown if the property cannot be found. You should call the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_HasProperty_\" data-linktype=\"relative-path\">HasProperty</a> method first to avoid the exception instead of wrapping the method call in a <code>try/catch</code> block.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_HasProperty_System_String_System_Security_Cryptography_CngPropertyOptions_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_HasProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasProperty(String,CngPropertyOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Checks to see whether the specified property exists on the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasProperty (string name, System.Security.Cryptography.CngPropertyOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property name to check.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngpropertyoptions\" data-linktype=\"relative-path\">CngPropertyOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify options for the named property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified property is found; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>options</code> parameter is specifically used to indicate the following:  </p>\n<ul>\n<li><p>Whether the property is built-in, or custom.  </p>\n</li>\n<li><p>Whether the property should be persisted with the key.  </p>\n<p>These options must match the value that the property was set with, or the property will not be found.  </p>\n<p>This method operates correctly even if the property is set to <code>false</code> or zero.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Import_System_Byte___System_Security_Cryptography_CngKeyBlobFormat_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(Byte[],CngKeyBlobFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new key by importing the specified key material into the default key storage provider (KSP) and using the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyBlob</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array that contains the key information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyblobformat\" data-linktype=\"relative-path\">CngKeyBlobFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that specifies the format of the <code>keyBlob</code> array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>A new key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyBlob</code> or <code>format</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default KSP is <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Import_System_Byte___System_Security_Cryptography_CngKeyBlobFormat_System_Security_Cryptography_CngProvider_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(Byte[],CngKeyBlobFormat,CngProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new key by importing the specified key material into the specified key storage provider (KSP), using the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format, System.Security.Cryptography.CngProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyBlob</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array that contains the key information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyblobformat\" data-linktype=\"relative-path\">CngKeyBlobFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that specifies the format of the <code>keyBlob</code> array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The KSP.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>A new key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyBlob</code>, <code>format</code>, or <code>provider</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Open_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that represents an existing named key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Open (string keyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>An existing key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload uses the following defaults:  </p>\n<ul>\n<li><p>Key storage provider (KSP): <a class=\"xref\" href=\"system.security.cryptography.cngprovider#System_Security_Cryptography_CngProvider_MicrosoftSoftwareKeyStorageProvider_\" data-linktype=\"relative-path\">MicrosoftSoftwareKeyStorageProvider</a>. Use the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_Open_System_String_System_Security_Cryptography_CngProvider_\" data-linktype=\"relative-path\">Open(String,CngProvider)</a> overload if you want to specify another KSP.  </p>\n</li>\n<li><p>Key open options: <a class=\"xref\" href=\"system.security.cryptography.cngkeyopenoptions\" data-linktype=\"relative-path\">System.Security.Cryptography.CngKeyOpenOptions</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Open_Microsoft_Win32_SafeHandles_SafeNCryptKeyHandle_System_Security_Cryptography_CngKeyHandleOpenOptions_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object by using a handle to an existing key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Open (Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle keyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions keyHandleOpenOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safencryptkeyhandle\" data-linktype=\"relative-path\">SafeNCryptKeyHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to an existing key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyHandleOpenOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyhandleopenoptions\" data-linktype=\"relative-path\">CngKeyHandleOpenOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that indicates whether <code>keyHandle</code> represents an ephemeral key or a named key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>An existing key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyHandle</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>keyHandle</code> is invalid or malformed, or it is already closed. This exception is also thrown if the key is an ephemeral key that is created by the common language runtime (CLR), but the <a class=\"xref\" href=\"system.security.cryptography.cngkeyhandleopenoptions\" data-linktype=\"relative-path\">CngKeyHandleOpenOptions</a> value is not specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload enables advanced users to use the CNG classes even if they rely on platform invoke or the managed interop capability of C++. For example, if you have a native library that returns the key as an NCRYPT_KEY_HANDLE, this overload lets you create a managed wrapper around the key and use the CNG classes to manipulate it.  </p>\n<p> When you open a key by using its handle, you cannot determine the key&#39;s ephemeral state and must specify it yourself. Several properties of the <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> class rely on this value to be correct. Therefore, make sure that you pass the correct flag value to the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_Open_\" data-linktype=\"relative-path\">Open</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Open_System_String_System_Security_Cryptography_CngProvider_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String,CngProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that represents an existing named key, using the specified key storage provider (KSP).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The KSP that contains the key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>An existing key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyName</code> or <code>provider</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_Open_System_String_\" data-linktype=\"relative-path\">Open(String)</a> method overload, this overload lets you specify the provider. In addition, a default <a class=\"xref\" href=\"system.security.cryptography.cngkeyopenoptions\" data-linktype=\"relative-path\">CngKeyOpenOptions</a> value of <a class=\"xref\" href=\"system.security.cryptography.cngkeyopenoptions\" data-linktype=\"relative-path\">CngKeyOpenOptions</a> is created and bound to the key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_Open_System_String_System_Security_Cryptography_CngProvider_System_Security_Cryptography_CngKeyOpenOptions_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open(String,CngProvider,CngKeyOpenOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an instance of an <a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a> object that represents an existing named key, using the specified key storage provider (KSP) and key open options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngprovider\" data-linktype=\"relative-path\">CngProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The KSP that contains the key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>openOptions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkeyopenoptions\" data-linktype=\"relative-path\">CngKeyOpenOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngkey\" data-linktype=\"relative-path\">CngKey</a></div>\r\n                  </div>\r\n                  <p>An existing key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyName</code> or <code>provider</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Cryptography Next Generation (CNG) is not supported on this system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>All other errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_Open_System_String_\" data-linktype=\"relative-path\">Open(String)</a> method overload, this overload lets you specify both the provider and the key open options.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_CngKey_SetProperty_System_Security_Cryptography_CngProperty_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_CngKey_SetProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetProperty(CngProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Sets a named property on the key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetProperty (System.Security.Cryptography.CngProperty property);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>property</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cngproperty\" data-linktype=\"relative-path\">CngProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key property to set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to add a new custom property to an existing key by using a <a class=\"xref\" href=\"system.security.cryptography.cngproperty\" data-linktype=\"relative-path\">CngProperty</a> object. The options set on the <a class=\"xref\" href=\"system.security.cryptography.cngproperty\" data-linktype=\"relative-path\">CngProperty</a> object must exactly match the options in the <a class=\"xref\" href=\"system.security.cryptography.cngkey#System_Security_Cryptography_CngKey_GetProperty_\" data-linktype=\"relative-path\">GetProperty</a> call. Otherwise, the property will not be found.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Security.Cryptography.CngKey.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.CngKey.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Algorithm\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.AlgorithmGroup\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Create\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Delete\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Exists\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Export\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.ExportPolicy\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.GetProperty\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Handle\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.HasProperty\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Import\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.IsEphemeral\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.IsMachineKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.KeyName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.KeySize\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.KeyUsage\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Open\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.ParentWindowHandle\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.Provider\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.ProviderHandle\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.SetProperty\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.UIPolicy\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.CngKey.UniqueName\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"202bcbe0-201e-ae86-48a7-57dca35237ed\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the core functionality for keys that are used with Cryptography Next Generation (CNG) objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.CngKey\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Security.Cryptography.CngKey.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.CngKey.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.CngKey","System.Security.Cryptography.CngKey.Algorithm","System.Security.Cryptography.CngKey.AlgorithmGroup","System.Security.Cryptography.CngKey.Create","System.Security.Cryptography.CngKey.Delete","System.Security.Cryptography.CngKey.Dispose","System.Security.Cryptography.CngKey.Exists","System.Security.Cryptography.CngKey.Export","System.Security.Cryptography.CngKey.ExportPolicy","System.Security.Cryptography.CngKey.GetProperty","System.Security.Cryptography.CngKey.Handle","System.Security.Cryptography.CngKey.HasProperty","System.Security.Cryptography.CngKey.Import","System.Security.Cryptography.CngKey.IsEphemeral","System.Security.Cryptography.CngKey.IsMachineKey","System.Security.Cryptography.CngKey.KeyName","System.Security.Cryptography.CngKey.KeySize","System.Security.Cryptography.CngKey.KeyUsage","System.Security.Cryptography.CngKey.Open","System.Security.Cryptography.CngKey.ParentWindowHandle","System.Security.Cryptography.CngKey.Provider","System.Security.Cryptography.CngKey.ProviderHandle","System.Security.Cryptography.CngKey.SetProperty","System.Security.Cryptography.CngKey.UIPolicy","System.Security.Cryptography.CngKey.UniqueName"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.CngKey","System::Security::Cryptography::CngKey","System.Security.Cryptography.CngKey.Algorithm","System::Security::Cryptography::CngKey::Algorithm","System.Security.Cryptography.CngKey.AlgorithmGroup","System::Security::Cryptography::CngKey::AlgorithmGroup","System.Security.Cryptography.CngKey.Create","System::Security::Cryptography::CngKey::Create","System.Security.Cryptography.CngKey.Delete","System::Security::Cryptography::CngKey::Delete","System.Security.Cryptography.CngKey.Dispose","System::Security::Cryptography::CngKey::Dispose","System.Security.Cryptography.CngKey.Exists","System::Security::Cryptography::CngKey::Exists","System.Security.Cryptography.CngKey.Export","System::Security::Cryptography::CngKey::Export","System.Security.Cryptography.CngKey.ExportPolicy","System::Security::Cryptography::CngKey::ExportPolicy","System.Security.Cryptography.CngKey.GetProperty","System::Security::Cryptography::CngKey::GetProperty","System.Security.Cryptography.CngKey.Handle","System::Security::Cryptography::CngKey::Handle","System.Security.Cryptography.CngKey.HasProperty","System::Security::Cryptography::CngKey::HasProperty","System.Security.Cryptography.CngKey.Import","System::Security::Cryptography::CngKey::Import","System.Security.Cryptography.CngKey.IsEphemeral","System::Security::Cryptography::CngKey::IsEphemeral","System.Security.Cryptography.CngKey.IsMachineKey","System::Security::Cryptography::CngKey::IsMachineKey","System.Security.Cryptography.CngKey.KeyName","System::Security::Cryptography::CngKey::KeyName","System.Security.Cryptography.CngKey.KeySize","System::Security::Cryptography::CngKey::KeySize","System.Security.Cryptography.CngKey.KeyUsage","System::Security::Cryptography::CngKey::KeyUsage","System.Security.Cryptography.CngKey.Open","System::Security::Cryptography::CngKey::Open","System.Security.Cryptography.CngKey.ParentWindowHandle","System::Security::Cryptography::CngKey::ParentWindowHandle","System.Security.Cryptography.CngKey.Provider","System::Security::Cryptography::CngKey::Provider","System.Security.Cryptography.CngKey.ProviderHandle","System::Security::Cryptography::CngKey::ProviderHandle","System.Security.Cryptography.CngKey.SetProperty","System::Security::Cryptography::CngKey::SetProperty","System.Security.Cryptography.CngKey.UIPolicy","System::Security::Cryptography::CngKey::UIPolicy","System.Security.Cryptography.CngKey.UniqueName","System::Security::Cryptography::CngKey::UniqueName"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"202bcbe0-201e-ae86-48a7-57dca35237ed","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/CngKey.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CngKey class | Microsoft Docs","_op_ogTitle":"CngKey class","description":"Defines the core functionality for keys that are used with Cryptography Next Generation (CNG) objects.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.CngKey","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.cngkey","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.cngkey","fileRelativePath":"System.Security.Cryptography.CngKey.html"},"themesRelativePathToOutputRoot":"_themes/"}