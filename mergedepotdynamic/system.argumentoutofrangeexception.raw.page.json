{"content":"    \r\n    <h1 id=\"System_ArgumentOutOfRangeException\">\r\n      <span class=\"lang-csharp\">ArgumentOutOfRangeException</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class ArgumentOutOfRangeException : ArgumentException</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">System.ArgumentException</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ArgumentOutOfRangeException</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName\" data-linktype=\"relative-path\">ParamName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An              ArgumentOutOfRangeException exception is thrown when a method is invoked and at least one of the arguments passed to the method is not <code>null</code> and contains an invalid value that is not a member of the set of values expected for the argument. The <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a> property identifies the invalid argument, and the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_ActualValue_\" data-linktype=\"relative-path\">ActualValue</a> property, if a value is present, identifies the invalid value.  </p>\n<p> Typically, an ArgumentOutOfRangeException results from developer error. Instead of handling the exception in a <code>try</code>/<code>catch</code> block, you should eliminate the cause of the exception or, if the argument is returned by a method call or input by the user before being passed to the method that throws the exception, you should validate arguments before passing them to the method.  </p>\n<p> ArgumentOutOfRangeException is used extensively by:  </p>\n<ul>\n<li><p>Classes in the <a class=\"xref\" href=\"system.collections\" data-linktype=\"relative-path\">System.Collections</a> and <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespaces.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> class.  </p>\n</li>\n<li><p>String manipulation methods in the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> class.  </p>\n<p>The conditions in which an ArgumentOutOfRangeException exception             is thrown include the following:  </p>\n<p>You are retrieving the member of a collection by its index number, and the index number is invalid.<br>This is the most common cause of an ArgumentOutOfRangeException exception.   Typically, the index number is invalid for one of three reasons:  </p>\n</li>\n<li><p>The collection has no members, and your code assumes that it does. The following example attempts to retrieve the first element of a collection that has no elements:  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#4\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var list = new List&lt;String&gt;();\n      Console.WriteLine(&quot;Number of items: {0}&quot;, list.Count);\n      try {\n         Console.WriteLine(&quot;The first item: &#39;{0}&#39;&quot;, list[0]);\n      }\n      catch (ArgumentOutOfRangeException e) {\n         Console.WriteLine(e.Message);\n      }\n   }\n}\n// The example displays the following output:\n//   Number of items: 0\n//   Index was out of range. Must be non-negative and less than the size of the collection.\n//   Parameter name: index\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#4\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim list As New List(Of String)\n      Console.WriteLine(&quot;Number of items: {0}&quot;, list.Count)\n      Try\n         Console.WriteLine(&quot;The first item: &#39;{0}&#39;&quot;, list(0))\n      Catch e As ArgumentOutOfRangeException\n         Console.WriteLine(e.Message)\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;   Number of items: 0\n&#39;   Index was out of range. Must be non-negative and less than the size of the collection.\n&#39;   Parameter name: index\n</code></pre><p> To prevent the exception, check whether the collection&#39;s <code>Count</code> property is greater than zero before attempting to retrieve any members, as the following code fragment does.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#5\">      if (list.Count &gt; 0)\n         Console.WriteLine(&quot;The first item: &#39;{0}&#39;&quot;, list[0]);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#5\">      If list.Count &gt; 0 Then\n         Console.WriteLine(&quot;The first item: &#39;{0}&#39;&quot;, list(0))\n      End If\n</code></pre><p> In some cases, this may occur because you are attempting to add a member to a collection by using an index that does not exist, rather than by calling the method, such as <code>Add</code>, that exists for this purpose.  The following example attempts to add an element to a collection by using a non-existent index rather than calling the <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_Add_\" data-linktype=\"relative-path\">Add</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#13\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var numbers = new List&lt;int&gt;();\n      numbers.AddRange( new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20 } );\n      \n      var squares = new List&lt;int&gt;();\n      for (int ctr = 0; ctr &lt; numbers.Count; ctr++)\n         squares[ctr] = (int) Math.Pow(numbers[ctr], 2); \n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\n//    Parameter name: index\n//       at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#13\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim numbers As New List(Of Integer)\n      numbers.AddRange( { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20 } )\n      \n      Dim squares As New List(Of Integer)\n      For ctr As Integer = 0 To numbers.Count - 1\n         squares(ctr) = CInt(numbers(ctr) ^ 2) \n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\n&#39;    Parameter name: index\n&#39;       at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\n&#39;       at Example.Main()\n</code></pre><p> The following code fragment corrects this error:  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#14\">      var squares = new List&lt;int&gt;();\n      for (int ctr = 0; ctr &lt; numbers.Count; ctr++)\n         squares.Add((int) Math.Pow(numbers[ctr], 2)); \n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#14\">      Dim squares As New List(Of Integer)\n      For ctr As Integer = 0 To numbers.Count - 1\n         squares.Add(CInt(numbers(ctr) ^ 2)) \n      Next\n</code></pre></li>\n<li><p>You&#39;re attempting to retrieve an item whose index is negative. This usually occurs because you&#39;ve searched a collection for the index of a particular element and have erroneously assumed that the search is successful. In the following example, the call to the <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_FindIndex_System_Predicate__0__\" data-linktype=\"relative-path\">System.Collections.Generic.List&lt;T&gt;.FindIndex(Predicate&lt;T&gt;)</a> method fails  to find a string equal to &quot;Z&quot; and so returns -1. However, this is an invalid index value.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#6\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var list = new List&lt;String&gt;(); \n      list.AddRange( new String[] { &quot;A&quot;, &quot;B&quot;, &quot;C&quot; } );\n      // Get the index of the element whose value is &quot;Z&quot;.\n      int index = list.FindIndex((new StringSearcher(&quot;Z&quot;)).FindEquals);\n      try {\n         Console.WriteLine(&quot;Index {0} contains &#39;{1}&#39;&quot;, index, list[index]); \n      }\n      catch (ArgumentOutOfRangeException e) {\n         Console.WriteLine(e.Message);\n      }\n   }\n}\n\ninternal class StringSearcher\n{\n   String value;\n   \n   public StringSearcher(String value)\n   {\n      this.value = value;\n   }\n   \n   public bool FindEquals(String s) \n   {\n      return s.Equals(value, StringComparison.InvariantCulture); \n   }\n}\n// The example displays the following output:\n//   Index was out of range. Must be non-negative and less than the size of the collection.\n//   Parameter name: index\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#6\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim list As New List(Of String) \n      list.AddRange( { &quot;A&quot;, &quot;B&quot;, &quot;C&quot; } )\n      &#39; Get the index of the element whose value is &quot;Z&quot;.\n      Dim index As Integer = list.FindIndex(AddressOf (New StringSearcher(&quot;Z&quot;)).FindEquals)\n      Try\n         Console.WriteLine(&quot;Index {0} contains &#39;{1}&#39;&quot;, index, list(index)) \n      Catch e As ArgumentOutOfRangeException\n         Console.WriteLine(e.Message)\n      End Try\n   End Sub\nEnd Module\n\nFriend Class StringSearcher\n   Dim value As String\n   \n   Public Sub New(value As String)\n      Me.value = value\n   End Sub\n   \n   Public Function FindEquals(s As String) As Boolean\n      Return s.Equals(value, StringComparison.InvariantCulture) \n   End Function\nEnd Class\n&#39; The example displays the following output:\n&#39;   Index was out of range. Must be non-negative and less than the size of the collection.\n&#39;   Parameter name: index\n</code></pre><p> To prevent the exception, check that the search is successful by making sure that the returned index is greater than or equal to zero before attempting to retrieve the item from the collection, as the following code fragment does.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#7\">      // Get the index of the element whose value is &quot;Z&quot;.\n      int index = list.FindIndex((new StringSearcher(&quot;Z&quot;)).FindEquals);\n      if (index &gt;= 0)\n         Console.WriteLine(&quot;&#39;Z&#39; is found at index {0}&quot;, list[index]); \n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#7\">      &#39; Get the index of the element whose value is &quot;Z&quot;.\n      Dim index As Integer = list.FindIndex(AddressOf (New StringSearcher(&quot;Z&quot;)).FindEquals)\n      If index &gt;= 0 Then\n         Console.WriteLine(&quot;Index {0} contains &#39;{1}&#39;&quot;, index, list(index)) \n      End If\n</code></pre></li>\n<li><p>You&#39;re attempting to retrieve an element whose index is equal to the value of the collection&#39;s <code>Count</code> property, as the following example illustrates.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#8\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var list = new List&lt;String&gt;(); \n      list.AddRange( new String[] { &quot;A&quot;, &quot;B&quot;, &quot;C&quot; } );\n      try {\n         // Display the elements in the list by index.\n         for (int ctr = 0; ctr &lt;= list.Count; ctr++) \n            Console.WriteLine(&quot;Index {0}: {1}&quot;, ctr, list[ctr]);\n      } \n      catch (ArgumentOutOfRangeException e) {\n         Console.WriteLine(e.Message);\n      }\n   }\n}\n// The example displays the following output:\n//   Index 0: A\n//   Index 1: B\n//   Index 2: C\n//   Index was out of range. Must be non-negative and less than the size of the collection.\n//   Parameter name: index\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#8\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim list As New List(Of String) \n      list.AddRange( { &quot;A&quot;, &quot;B&quot;, &quot;C&quot; } )\n      Try\n         &#39; Display the elements in the list by index.\n         For ctr As Integer = 0 To list.Count \n            Console.WriteLine(&quot;Index {0}: {1}&quot;, ctr, list(ctr)) \n         Next   \n      Catch e As ArgumentOutOfRangeException\n         Console.WriteLine(e.Message)\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;   Index 0: A\n&#39;   Index 1: B\n&#39;   Index 2: C\n&#39;   Index was out of range. Must be non-negative and less than the size of the collection.\n&#39;   Parameter name: index\n</code></pre><p> Because collections in the .NET Framework use zero-based indexing, the first element of the collection is at index 0, and the last element is at index <code>Count</code> - 1. You can eliminate the error by ensuring that you access the last element at index  <code>Count</code> - 1, as the following code does.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#9\">      // Display the elements in the list by index.\n      for (int ctr = 0; ctr &lt; list.Count; ctr++) \n         Console.WriteLine(&quot;Index {0}: {1}&quot;, ctr, list[ctr]);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#9\">      &#39; Display the elements in the list by index.\n      For ctr As Integer = 0 To list.Count - 1 \n         Console.WriteLine(&quot;Index {0}: {1}&quot;, ctr, list(ctr)) \n      Next   \n</code></pre><p>You are attempting to perform a string operation by calling a string manipulation method, and the starting index does not exist in the string.<br>Overloads of methods such as such as <a class=\"xref\" href=\"system.string#System_String_Compare_\" data-linktype=\"relative-path\">Compare</a>, <a class=\"xref\" href=\"system.string#System_String_CompareOrdinal_\" data-linktype=\"relative-path\">CompareOrdinal</a>, <a class=\"xref\" href=\"system.string#System_String_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a>, <a class=\"xref\" href=\"system.string#System_String_IndexOfAny_\" data-linktype=\"relative-path\">IndexOfAny</a>, <a class=\"xref\" href=\"system.string#System_String_Insert_\" data-linktype=\"relative-path\">Insert</a>, <a class=\"xref\" href=\"system.string#System_String_LastIndexOf_\" data-linktype=\"relative-path\">LastIndexOf</a>, <a class=\"xref\" href=\"system.string#System_String_LastIndexOfAny_\" data-linktype=\"relative-path\">LastIndexOfAny</a>, <a class=\"xref\" href=\"system.string#System_String_Remove_\" data-linktype=\"relative-path\">Remove</a>,  or <a class=\"xref\" href=\"system.string#System_String_Substring_\" data-linktype=\"relative-path\">Substring</a> that allow you to specify the starting index of the operation require that the index be a valid position within the string. Valid indexes range from 0 to <a class=\"xref\" href=\"system.string#System_String_Length_\" data-linktype=\"relative-path\">Length</a> - 1.  </p>\n<p>There are four common causes of this ArgumentOutOfRangeException exception:  </p>\n</li>\n<li><p>You are working with an empty string., or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>. Because its <a class=\"xref\" href=\"system.string#System_String_Length_\" data-linktype=\"relative-path\">Length</a> property returns 0, any attempt to manipulate it by index throws an ArgumentOutOfRangeException exception. The following example, defines a <code>GetFirstCharacter</code> method that returns the first character of a string. If the string is empty, as the final string passed to the method is, the method throws an ArgumentOutOfRangeException exception.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#15\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n       String[] words = { &quot;the&quot;, &quot;today&quot;, &quot;tomorrow&quot;, &quot; &quot;, &quot;&quot; };\n       foreach (var word in words)\n          Console.WriteLine(&quot;First character of &#39;{0}&#39;: &#39;{1}&#39;&quot;, \n                            word, GetFirstCharacter(word));\n   }\n   \n   private static char GetFirstCharacter(String s)\n   {\n      return s[0];\n   }\n}\n// The example displays the following output:\n//    First character of //the//: //t//\n//    First character of //today//: //t//\n//    First character of //tomorrow//: //t//\n//    First character of // //: // //\n//    \n//    Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#15\">Module Example\n   Public Sub Main()\n       Dim words() As String = { &quot;the&quot;, &quot;today&quot;, &quot;tomorrow&quot;, &quot; &quot;, &quot;&quot; }\n       For Each word In words\n          Console.WriteLine(&quot;First character of &#39;{0}&#39;: &#39;{1}&#39;&quot;, \n                            word, GetFirstCharacter(word))\n       Next                     \n   End Sub\n   \n   Private Function GetFirstCharacter(s As String) As Char\n      Return s(0)\n   End Function\nEnd Module\n&#39; The example displays the following output:\n&#39;    First character of &#39;the&#39;: &#39;t&#39;\n&#39;    First character of &#39;today&#39;: &#39;t&#39;\n&#39;    First character of &#39;tomorrow&#39;: &#39;t&#39;\n&#39;    First character of &#39; &#39;: &#39; &#39;\n&#39;    \n&#39;    Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n&#39;       at Example.Main()\n</code></pre><p> You can eliminate the exception by testing whether the string&#39;s <a class=\"xref\" href=\"system.string#System_String_Length_\" data-linktype=\"relative-path\">Length</a> is greater than zero or by calling the <a class=\"xref\" href=\"system.string#System_String_IsNullOrEmpty_\" data-linktype=\"relative-path\">IsNullOrEmpty</a> method to ensure that the string is not <code>null</code> or empty. The following code fragment does the latter. In this case, if the string is <code>null</code> or empty, the <code>GetFirstCharacter</code> method returns U+0000.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#16\">   static char GetFirstCharacter(String s)\n   {\n      if (String.IsNullOrEmpty(s)) \n         return &#39;\\u0000&#39;;\n      else   \n         return s[0];\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#16\">   Function GetFirstCharacter(s As String) As Char\n      If String.IsNullOrEmpty(s) Then \n         Return ChrW(0)\n      Else   \n         Return s(0)\n      End If   \n   End Function\n</code></pre></li>\n<li><p>You&#39;re manipulating a string based on the position of a substring within that string, and you&#39;ve failed to determine whether the substring was actually found.  </p>\n<p> The following example extracts the second word of a two-word phrase. It throws  an ArgumentOutOfRangeException exception if the phrase consists of only one word, and therefore does not contain an embedded space character.  This occurs because the call to the <a class=\"xref\" href=\"system.string#System_String_IndexOf_System_String_\" data-linktype=\"relative-path\">System.String.IndexOf(String)</a> method returns -1 to indicate that the search failed, and this invalid value is then passed to the  <a class=\"xref\" href=\"system.string#System_String_Substring_System_Int32_\" data-linktype=\"relative-path\">System.String.Substring(Int32)</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#17\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String[] phrases = { &quot;ocean blue&quot;, &quot;concerned citizen&quot;, \n                           &quot;runOnPhrase&quot; };\n      foreach (var phrase in phrases)\n         Console.WriteLine(&quot;Second word is {0}&quot;, GetSecondWord(phrase));\n   }\n  \n   static String GetSecondWord(String s)\n   {\n      int pos = s.IndexOf(&quot; &quot;);\n      return s.Substring(pos).Trim();\n   }\n}\n// The example displays the following output:\n//    Second word is blue\n//    Second word is citizen\n//    \n//    Unhandled Exception: System.ArgumentOutOfRangeException: StartIndex cannot be less than zero.\n//    Parameter name: startIndex\n//       at System.String.Substring(Int32 startIndex, Int32 length)\n//       at Example.GetSecondWord(String s)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#17\">Module Example\n   Public Sub Main()\n      Dim phrases() As String = { &quot;ocean blue&quot;, &quot;concerned citizen&quot;, \n                                  &quot;runOnPhrase&quot; }\n      For Each phrase In phrases\n         Console.WriteLine(&quot;Second word is {0}&quot;, GetSecondWord(phrase))\n      Next                            \n  End Sub\n  \n  Function GetSecondWord(s As String) As String\n     Dim pos As Integer = s.IndexOf(&quot; &quot;)\n     Return s.Substring(pos).Trim()\n  End Function\nEnd Module\n&#39; The example displays the following output:\n&#39;       Second word is blue\n&#39;       Second word is citizen\n&#39;       \n&#39;       Unhandled Exception: System.ArgumentOutOfRangeException: StartIndex cannot be less than zero.\n&#39;       Parameter name: startIndex\n&#39;          at System.String.Substring(Int32 startIndex, Int32 length)\n&#39;          at Example.GetSecondWord(String s)\n&#39;          at Example.Main()\n</code></pre><p> To eliminate the exception, validate the value returned by the string search method before calling the string manipulation method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#18\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String[] phrases = { &quot;ocean blue&quot;, &quot;concerned citizen&quot;, \n                           &quot;runOnPhrase&quot; };\n      foreach (var phrase in phrases) {\n         String word = GetSecondWord(phrase);\n         if (! String.IsNullOrEmpty(word))\n            Console.WriteLine(&quot;Second word is {0}&quot;, word);\n      }   \n   }\n  \n   static String GetSecondWord(String s)\n   {\n      int pos = s.IndexOf(&quot; &quot;);\n      if (pos &gt;= 0)\n         return s.Substring(pos).Trim();\n      else\n         return String.Empty;   \n   }\n}\n// The example displays the following output:\n//       Second word is blue\n//       Second word is citizen\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#18\">Module Example\n   Public Sub Main()\n      Dim phrases() As String = { &quot;ocean blue&quot;, &quot;concerned citizen&quot;, \n                                  &quot;runOnPhrase&quot; }\n      For Each phrase In phrases\n         Dim word As String = GetSecondWord(phrase)\n         If Not String.IsNullOrEmpty(word) Then _\n            Console.WriteLine(&quot;Second word is {0}&quot;, word)\n      Next                            \n   End Sub\n  \n   Function GetSecondWord(s As String) As String\n      Dim pos As Integer = s.IndexOf(&quot; &quot;)\n      If pos &gt;= 0\n          Return s.Substring(pos).Trim()\n      Else\n         Return String.Empty\n      End If\n  End Function\nEnd Module\n&#39; The example displays the following output:\n&#39;       Second word is blue\n&#39;       Second word is citizen\n</code></pre></li>\n<li><p>You&#39;ve attempted to extract a substring that is outside the range of the current string.<br>The methods that extract substrings all require that you specify the starting position of the substring and, for substrings that do not continue to the end of the string, the number of characters in the substring. Note that this is not the <em>index</em> of the last character in the substring.  </p>\n<p>An ArgumentOutOfRangeException exception is typically thrown in this case because you&#39;ve incorrectly calculated the number of characters in the substring.  If you are using a search method like <a class=\"xref\" href=\"system.string#System_String_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a> to identify the starting and ending positions of a substring:  </p>\n</li>\n<li><p>If the character in the ending position returned by <a class=\"xref\" href=\"system.string#System_String_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a> is to be included in the substring, the ending position of the substring is given by the formula  </p>\n<pre><code>endIndex - startIndex + 1  \n</code></pre></li>\n<li><p>If the character in the ending position returned by <a class=\"xref\" href=\"system.string#System_String_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a> is to be excluded from the substring, the ending position of the substring is given by the formula  </p>\n<pre><code>endIndex - startIndex   \n</code></pre><p>The following example defines a <code>FindWords</code> method that uses the [String.IndexOfAny(Char&lt;xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=fullName&gt; method to identify space characters and punctuation marks in a string and returns an array that contains the words found in the string.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#19\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String sentence = &quot;This is a simple, short sentence.&quot;;\n      Console.WriteLine(&quot;Words in &#39;{0}&#39;:&quot;, sentence);\n      foreach (var word in FindWords(sentence))\n         Console.WriteLine(&quot;   &#39;{0}&#39;&quot;, word);\n   }\n   \n   static String[] FindWords(String s)\n   {\n      int start = 0, end = 0;\n      Char[] delimiters = { &#39; &#39;, &#39;.&#39;, &#39;,&#39;, &#39;;&#39;, &#39;:&#39;, &#39;(&#39;, &#39;)&#39; };\n      var words = new List&lt;String&gt;();\n\n      while (end &gt;= 0) {\n         end = s.IndexOfAny(delimiters, start);\n         if (end &gt;= 0) {\n            if (end - start &gt; 0)\n               words.Add(s.Substring(start, end - start)); \n\n            start = end++;\n         }\n         else {\n            if (start &lt; s.Length - 1)\n               words.Add(s.Substring(start));\n         }\n      }    \n      return words.ToArray();                         \n   }\n}\n// The example displays the following output:\n//       Words in &#39;This is a simple, short sentence.&#39;:\n//          &#39;This&#39;\n//          &#39;is&#39;\n//          &#39;a&#39;\n//          &#39;simple&#39;\n//          &#39;short&#39;\n//          &#39;sentence&#39;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#19\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim sentence As String = &quot;This is a simple, short sentence.&quot;\n      Console.WriteLine(&quot;Words in &#39;{0}&#39;:&quot;, sentence)\n      For Each word In FindWords(sentence)\n         Console.WriteLine(&quot;   &#39;{0}&#39;&quot;, word)\n      Next\n   End Sub\n   \n   Function FindWords(s As String) As String()\n      Dim start, ending As Integer\n      Dim delimiters() As Char = { &quot; &quot;c, &quot;.&quot;c, &quot;,&quot;c, &quot;;&quot;c, &quot;:&quot;c,\n                                   &quot;(&quot;c, &quot;)&quot;c }\n      Dim words As New List(Of String)()\n\n      Do While ending &gt;= 0\n         ending = s.IndexOfAny(delimiters, start)\n         If ending &gt;= 0\n            If ending - start &gt; 0 Then\n               words.Add(s.Substring(start, ending - start)) \n            End If\n            start = ending + 1\n         Else\n            If start &lt; s.Length - 1 Then\n               words.Add(s.Substring(start))\n            End If      \n         End If\n      Loop    \n      Return words.ToArray()                         \n   End Function\nEnd Module\n&#39; The example displays the following output:\n&#39;       Words in &#39;This is a simple, short sentence.&#39;:\n&#39;          &#39;This&#39;\n&#39;          &#39;is&#39;\n&#39;          &#39;a&#39;\n&#39;          &#39;simple&#39;\n&#39;          &#39;short&#39;\n&#39;          &#39;sentence&#39;\n</code></pre><p>You have passed a negative number to a method with an argument that requires only positive numbers and zero, or you have passed either a negative number or zero to a method with an argument that requires only positive numbers.<br>For example, the <a class=\"xref\" href=\"system.array#System_Array_CreateInstance_System_Type_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">System.Array.CreateInstance(Type,Int32,Int32,Int32)</a> method requires that you specify the number of elements in each dimension of a two-dimensional array; valid values for each dimension can range from 0 to <a class=\"xref\" href=\"system.int32#System_Int32_MaxValue\" data-linktype=\"relative-path\">System.Int32.MaxValue</a>. But because the dimension argument in the following example has a negative value, the method throws an ArgumentOutOfRangeException exception.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      int dimension1 = 10;\n      int dimension2 = -1;\n      try {\n         Array arr = Array.CreateInstance(typeof(String), \n                                          dimension1, dimension2);\n      }\n      catch (ArgumentOutOfRangeException e) {\n         if (e.ActualValue != null)\n            Console.WriteLine(&quot;{0} is an invalid value for {1}: &quot;, e.ActualValue, e.ParamName);\n         Console.WriteLine(e.Message);\n      }\n   }\n}\n// The example displays the following output:\n//     Non-negative number required.\n//     Parameter name: length2\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#1\">Module Example\n   Public Sub Main()\n      Dim dimension1 As Integer = 10\n      Dim dimension2 As Integer = -1\n      Try\n         Dim arr AS Array = Array.CreateInstance(GetType(String), \n                                                 dimension1, dimension2)\n      Catch e As ArgumentOutOfRangeException\n         If e.ActualValue IsNot Nothing Then\n            Console.WriteLine(&quot;{0} is an invalid value for {1}: &quot;, \n                              e.ActualValue, e.ParamName)\n         End If                     \n         Console.WriteLine(e.Message)\n      End Try\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;     Non-negative number required.\n&#39;     Parameter name: length2\n</code></pre><p>To correct the error, ensure that the value of the invalid argument is non-negative. You can do this by providing a valid value, as the following code fragment does.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#2\">      int dimension1 = 10;\n      int dimension2 = 10;\n      Array arr = Array.CreateInstance(typeof(String), \n                                       dimension1, dimension2);   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#2\">      Dim dimension1 As Integer = 10\n      Dim dimension2 As Integer = 10\n      Dim arr As Array = Array.CreateInstance(GetType(String), \n                                              dimension1, dimension2)   \n</code></pre><p>You can also validate the input and, if it is invalid, take some action. The following code fragment displays an error message instead of calling the method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#3\">      if (dimension1 &lt; 0 || dimension2 &lt; 0) {\n         Console.WriteLine(&quot;Unable to create the array.&quot;);\n         Console.WriteLine(&quot;Specify non-negative values for the two dimensions.&quot;);\n      }   \n      else {\n         arr = Array.CreateInstance(typeof(String), \n                                    dimension1, dimension2);   \n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#3\">      If dimension1 &lt; 0 OrElse dimension2 &lt; 0 Then\n         Console.WriteLine(&quot;Unable to create the array.&quot;)\n         Console.WriteLine(&quot;Specify non-negative values for the two dimensions.&quot;)\n      Else\n         arr = Array.CreateInstance(GetType(String), \n                                    dimension1, dimension2)   \n      End If\n</code></pre><p>A race condition exists in an app that is multithreaded or has tasks that  execute asynchronously and that updates an array or collection.<br>The following example uses a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> object to populate a collection of <code>Continent</code> objects. It throws an  ArgumentOutOfRangeException exception if the example attempts to display the seven items in the collection before the collection is fully populated.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#11\">using System;\nusing System.Collections.Generic;\nusing System.Threading;\n\npublic class Continent\n{\n   public String Name { get; set; }\n   public int Population { get; set; }\n   public Decimal Area { get; set; }   \n}\n\npublic class Example\n{\n   static List&lt;Continent&gt; continents = new List&lt;Continent&gt;();\n   static String msg; \n   \n   public static void Main()\n   {\n      String[] names = { &quot;Africa&quot;, &quot;Antarctica&quot;, &quot;Asia&quot;, \n                         &quot;Australia&quot;, &quot;Europe&quot;, &quot;North America&quot;,\n                         &quot;South America&quot; };\n      // Populate the list.\n      foreach (var name in names) {\n         var th = new Thread(PopulateContinents);\n         th.Start(name);\n      }              \n      Console.WriteLine(msg);\n      Console.WriteLine();\n\n      // Display the list.\n      for (int ctr = 0; ctr &lt; names.Length; ctr++) {\n         var continent = continents[ctr];\n         Console.WriteLine(&quot;{0}: Area: {1}, Population {2}&quot;, \n                           continent.Name, continent.Population,\n                           continent.Area);\n      }\n   }\n   \n   private static void PopulateContinents(Object obj)\n   {\n      String name = obj.ToString();\n      msg += String.Format(&quot;Adding &#39;{0}&#39; to the list.\\n&quot;, name);\n      var continent = new Continent();\n      continent.Name = name;\n      // Sleep to simulate retrieving remaining data.\n      Thread.Sleep(50);\n      continents.Add(continent);\n   }\n}\n// The example displays output like the following:\n//    Adding //Africa// to the list.\n//    Adding //Antarctica// to the list.\n//    Adding //Asia// to the list.\n//    Adding //Australia// to the list.\n//    Adding //Europe// to the list.\n//    Adding //North America// to the list.\n//    Adding //South America// to the list.\n//    \n//    \n//    \n//    Unhandled Exception: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\n//    Parameter name: index\n//       at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#11\">Imports System.Collections.Generic\nImports System.Threading\n\nPublic Class Continent\n   Public Property Name As String\n   Public Property Population As Integer\n   Public Property Area As Decimal  \nEnd Class\n\nModule Example\n   Dim continents As New List(Of Continent)\n   Dim msg As String \n      \n   Public Sub Main()\n      Dim names() As String = { &quot;Africa&quot;, &quot;Antarctica&quot;, &quot;Asia&quot;, \n                                     &quot;Australia&quot;, &quot;Europe&quot;, &quot;North America&quot;,\n                                     &quot;South America&quot; }\n      &#39; Populate the list.\n      For Each name In names\n         Dim th As New Thread(AddressOf PopulateContinents)\n         th.Start(name)\n      Next              \n      Console.WriteLine(msg)\n      Console.WriteLine()\n\n      &#39; Display the list.\n      For ctr As Integer = 0 To names.Length - 1\n         Dim continent = continents(ctr)\n         Console.WriteLine(&quot;{0}: Area: {1}, Population {2}&quot;, \n                           continent.Name, continent.Population,\n                           continent.Area)\n      Next\n   End Sub\n   \n   Private Sub PopulateContinents(obj As Object)\n      Dim name As String = obj.ToString()\n      msg += String.Format(&quot;Adding &#39;{0}&#39; to the list.{1}&quot;, name, vbCrLf)\n      Dim continent As New Continent()\n      continent.Name = name\n      &#39; Sleep to simulate retrieving remaining data.\n      Thread.Sleep(50)\n      continents.Add(continent)\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;    Adding &#39;Africa&#39; to the list.\n&#39;    Adding &#39;Antarctica&#39; to the list.\n&#39;    Adding &#39;Asia&#39; to the list.\n&#39;    Adding &#39;Australia&#39; to the list.\n&#39;    Adding &#39;Europe&#39; to the list.\n&#39;    Adding &#39;North America&#39; to the list.\n&#39;    Adding &#39;South America&#39; to the list.\n&#39;    \n&#39;    \n&#39;    \n&#39;    Unhandled Exception: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\n&#39;    Parameter name: index\n&#39;       at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\n&#39;       at Example.Main()\n</code></pre><p>In this case, two resources are accessed from multiple threads:  </p>\n</li>\n<li><p>The <code>continents</code> collection. Its <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_Add_\" data-linktype=\"relative-path\">Add</a> method is called from multiple threads. In addition, the main or primary thread assumes the collection is fully populated with seven elements when it iterates its members.  </p>\n</li>\n<li><p>The <code>msg</code> string, which is concatenated from multiple threads.  </p>\n<p>To correct the error, ensure that shared state is accessed in a thread-safe way, as follows.  </p>\n</li>\n<li><p>if your app uses an array or collection object, consider using a thread-safe collection class, such as the types in the <a class=\"xref\" href=\"system.collections.concurrent\" data-linktype=\"relative-path\">System.Collections.Concurrent</a> namespace or the <a href=\"../Topic/System.Collections.Immutable.md\" data-linktype=\"relative-path\">System.Collections.Immutable</a> out-of-band release.  </p>\n</li>\n<li><p>Ensure that shared state (that is, resources that can be accessed by multiple threads) is accessed in a thread-safe way, so that only one thread at a time has exclusive access to the resources. A large number of classes, such as <a class=\"xref\" href=\"system.threading.countdownevent\" data-linktype=\"relative-path\">CountdownEvent</a>, <a class=\"xref\" href=\"system.threading.interlocked\" data-linktype=\"relative-path\">Interlocked</a>, <a class=\"xref\" href=\"system.threading.monitor\" data-linktype=\"relative-path\">Monitor</a>, and <a class=\"xref\" href=\"system.threading.mutex\" data-linktype=\"relative-path\">Mutex</a>, are available to synchronize access to resources. For more information, see <a href=\"../Topic/Managed%20Threading.md\" data-linktype=\"relative-path\">Threading</a>. In addition, language support is available through the <a href=\"../Topic/lock%20Statement%20(C%23%20Reference).md\" data-linktype=\"relative-path\">lock</a> statement in C# and the <a href=\"../Topic/SyncLock%20Statement.md\" data-linktype=\"relative-path\">SyncLock</a> construct in Visual Basic.  </p>\n<p>The following example addresses the ArgumentOutOfRangeException exception and the other issues from the previous example. It replaces the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> object with a   <a class=\"xref\" href=\"system.collections.concurrent.concurrentbag-1\" data-linktype=\"relative-path\">ConcurrentBag&lt;T&gt;</a> object to ensure that access to the collection is thread-safe, uses a <a class=\"xref\" href=\"system.threading.countdownevent\" data-linktype=\"relative-path\">CountdownEvent</a> object to ensure that the application thread continues only after other threads have executed, and uses a lock to ensure that only one thread can  access the <code>msg</code> variable at a time.  </p>\n<pre><code class=\"lang-cs\" name=\"System.ArgumentOutOfRangeException#12\">using System;\nusing System.Collections.Concurrent;\nusing System.Threading;\n\npublic class Continent\n{\n   public String Name { get; set; }\n   public int Population { get; set; }\n   public Decimal Area { get; set; }   \n}\n\npublic class Example\n{\n   static ConcurrentBag&lt;Continent&gt; continents = new ConcurrentBag&lt;Continent&gt;();\n   static CountdownEvent gate;\n   static String msg = String.Empty;\n\n   public static void Main()\n   {\n      String[] names = { &quot;Africa&quot;, &quot;Antarctica&quot;, &quot;Asia&quot;, \n                         &quot;Australia&quot;, &quot;Europe&quot;, &quot;North America&quot;,\n                         &quot;South America&quot; };\n      gate = new CountdownEvent(names.Length);\n      \n      // Populate the list.\n      foreach (var name in names) {\n         var th = new Thread(PopulateContinents);\n         th.Start(name);\n      }              \n\n      // Display the list.\n      gate.Wait();\n      Console.WriteLine(msg);\n      Console.WriteLine();\n\n      var arr = continents.ToArray();\n      for (int ctr = 0; ctr &lt; names.Length; ctr++) {\n         var continent = arr[ctr];\n         Console.WriteLine(&quot;{0}: Area: {1}, Population {2}&quot;, \n                           continent.Name, continent.Population,\n                           continent.Area);\n      }\n   }\n   \n   private static void PopulateContinents(Object obj)\n   {\n      String name = obj.ToString();\n      lock(msg) { \n         msg += String.Format(&quot;Adding &#39;{0}&#39; to the list.\\n&quot;, name);\n      }\n      var continent = new Continent();\n      continent.Name = name;\n      // Sleep to simulate retrieving remaining data.\n      Thread.Sleep(25);\n      continents.Add(continent);\n      gate.Signal();\n   }\n}\n// The example displays output like the following:\n//       Adding &#39;Africa&#39; to the list.\n//       Adding &#39;Antarctica&#39; to the list.\n//       Adding &#39;Asia&#39; to the list.\n//       Adding &#39;Australia&#39; to the list.\n//       Adding &#39;Europe&#39; to the list.\n//       Adding &#39;North America&#39; to the list.\n//       Adding &#39;South America&#39; to the list.\n//       \n//       \n//       Africa: Area: 0, Population 0\n//       Antarctica: Area: 0, Population 0\n//       Asia: Area: 0, Population 0\n//       Australia: Area: 0, Population 0\n//       Europe: Area: 0, Population 0\n//       North America: Area: 0, Population 0\n//       South America: Area: 0, Population 0\n</code></pre><pre><code class=\"lang-vb\" name=\"System.ArgumentOutOfRangeException#12\">Imports System.Collections.Concurrent\nImports System.Threading\n\nPublic Class Continent\n   Public Property Name As String\n   Public Property Population As Integer\n   Public Property Area As Decimal  \nEnd Class\n\nModule Example\n   Dim continents As New ConcurrentBag(Of Continent)\n   Dim gate As CountdownEvent\n   Dim msg As String = String.Empty\n      \n   Public Sub Main()\n      Dim names() As String = { &quot;Africa&quot;, &quot;Antarctica&quot;, &quot;Asia&quot;, \n                                &quot;Australia&quot;, &quot;Europe&quot;, &quot;North America&quot;,\n                                &quot;South America&quot; }\n      gate = new CountdownEvent(names.Length)\n      \n      &#39; Populate the list.\n      For Each name In names\n         Dim th As New Thread(AddressOf PopulateContinents)\n         th.Start(name)\n      Next              \n\n      &#39; Display the list.\n      gate.Wait()\n      Console.WriteLine(msg)\n      Console.WriteLine()\n\n      For ctr As Integer = 0 To names.Length - 1\n         Dim continent = continents(ctr)\n         Console.WriteLine(&quot;{0}: Area: {1}, Population {2}&quot;, \n                           continent.Name, continent.Population,\n                           continent.Area)\n      Next\n   End Sub\n   \n   Private Sub PopulateContinents(obj As Object)\n      Dim name As String = obj.ToString()\n      SyncLock msg \n         msg += String.Format(&quot;Adding &#39;{0}&#39; to the list.{1}&quot;, name, vbCrLf)\n      End SyncLock\n      Dim continent As New Continent()\n      continent.Name = name\n      &#39; Sleep to simulate retrieving remaining data.\n      Thread.Sleep(25)\n      continents.Add(continent)\n      gate.Signal()\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;    Adding &#39;Africa&#39; to the list.\n&#39;    Adding &#39;Antarctica&#39; to the list.\n&#39;    Adding &#39;Asia&#39; to the list.\n&#39;    Adding &#39;Australia&#39; to the list.\n&#39;    Adding &#39;Europe&#39; to the list.\n&#39;    Adding &#39;North America&#39; to the list.\n&#39;    Adding &#39;South America&#39; to the list.\n&#39;    \n&#39;    \n&#39;    Africa: Area: 0, Population 0\n&#39;    Antarctica: Area: 0, Population 0\n&#39;    Asia: Area: 0, Population 0\n&#39;    Australia: Area: 0, Population 0\n&#39;    Europe: Area: 0, Population 0\n&#39;    North America: Area: 0, Population 0\n&#39;    South America: Area: 0, Population 0\n</code></pre><p>ArgumentOutOfRangeException uses the HRESULT COR_E_ARGUMENTOUTOFRANGE, which has the value 0x80131502.  </p>\n<p>For a list of initial property values for an instance of ArgumentOutOfRangeException, see the ArgumentOutOfRangeException constructors.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException__ctor\" data-linktype=\"self-bookmark\">ArgumentOutOfRangeException()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException__ctor_System_String_\" data-linktype=\"self-bookmark\">ArgumentOutOfRangeException(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with the name of the parameter that causes this exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ArgumentOutOfRangeException(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with serialized data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException__ctor_System_String_System_Exception_\" data-linktype=\"self-bookmark\">ArgumentOutOfRangeException(String,Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with a specified error message and the exception that is the cause of this exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">ArgumentOutOfRangeException(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with the name of the parameter that causes this exception and a specified error message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException__ctor_System_String_System_Object_System_String_\" data-linktype=\"self-bookmark\">ArgumentOutOfRangeException(String,Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with the parameter name, the value of the argument, and a specified error message.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException_ActualValue\" data-linktype=\"self-bookmark\">ActualValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the argument value that causes this exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException_Message\" data-linktype=\"self-bookmark\">Message</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the error message and the string representation of the invalid argument value, or only the error message if the argument value is null.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ArgumentOutOfRangeException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the invalid argument value and additional exception information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException__ctor\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArgumentOutOfRangeException()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ArgumentOutOfRangeException ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_Message_\" data-linktype=\"relative-path\">Message</a> property of the new instance to a system-supplied message that describes the error, such as &quot;Nonnegative number required.&quot; This message takes into account the current system culture.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>A null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException__ctor_System_String_\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArgumentOutOfRangeException(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with the name of the parameter that causes this exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ArgumentOutOfRangeException (string paramName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>paramName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the parameter that causes this exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_Message_\" data-linktype=\"relative-path\">Message</a> property of the new instance to a system-supplied message that describes the error, such as &quot;Nonnegative number required.&quot; This message takes into account the current system culture.  </p>\n<p> This constructor initializes the <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a> property of the new instance using the <code>paramName</code> parameter. The content of <code>paramName</code> is intended to be understood by humans.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>A null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The empty string (&quot;&quot;).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a></td>\n<td>The parameter name string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArgumentOutOfRangeException(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with serialized data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that holds the serialized object data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that describes the source or destination of the serialized data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see <a href=\"../Topic/XML%20and%20SOAP%20Serialization.md\" data-linktype=\"relative-path\">XML and SOAP Serialization</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException__ctor_System_String_System_Exception_\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArgumentOutOfRangeException(String,Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with a specified error message and the exception that is the cause of this exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ArgumentOutOfRangeException (string message, Exception innerException);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The error message that explains the reason for this exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The exception that is the cause of the current exception, or a null reference (<code>Nothing</code> in Visual Basic) if no inner exception is specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArgumentOutOfRangeException(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with the name of the parameter that causes this exception and a specified error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ArgumentOutOfRangeException (string paramName, string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>paramName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the parameter that caused the exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message that describes the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a> property of the new instance using the value of the <code>message</code> parameter. The content of the <code>message</code> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  </p>\n<p> This constructor initializes the <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a> property of the new instance using the <code>paramName</code> parameter. The content of <code>paramName</code> is intended to be understood by humans.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td><code>null</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a></td>\n<td>The parameter name string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException__ctor_System_String_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArgumentOutOfRangeException(String,Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> class with the parameter name, the value of the argument, and a specified error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ArgumentOutOfRangeException (string paramName, object actualValue, string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>paramName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the parameter that caused the exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>actualValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the argument that causes this exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message that describes the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a> property of the new instance using the <code>paramName</code> parameter, the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_ActualValue_\" data-linktype=\"relative-path\">ActualValue</a> property using the <code>actualValue</code> parameter, and the <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_Message_\" data-linktype=\"relative-path\">Message</a> property using the <code>message</code> parameter. The content of the <code>paramName</code> and <code>message</code> parameters is intended to be understood by humans. The caller of this constructor is required to ensure that these strings have been localized for the current system culture.  </p>\n<p> The <code>actualValue</code> parameter is not used within the .NET Framework class library. However, the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_ActualValue_\" data-linktype=\"relative-path\">ActualValue</a> property is provided so that applications can use the available argument value.  </p>\n<p> The <code>actualValue</code> parameter contains an invalid value that is passed to the method and causes this exception to be thrown. This value is stored in the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_ActualValue_\" data-linktype=\"relative-path\">ActualValue</a> property and its string representation is appended to the message string held in the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a> property.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_ActualValue_\" data-linktype=\"relative-path\">ActualValue</a></td>\n<td>The argument value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>The null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_ParamName_\" data-linktype=\"relative-path\">ParamName</a></td>\n<td>The parameter name string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException_ActualValue\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException_ActualValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActualValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the argument value that causes this exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object ActualValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <code>Object</code> that contains the value of the parameter that caused the current <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to retrieve the invalid argument.  </p>\n<p> The <code>ActualValue</code> property returns the same value that was passed to the constructor, or <code>null</code> if no value was supplied.  </p>\n<p> The ActualValue property is assigned a value at the time of object construction. If the ActualValue property value is not <code>null</code>, a string representation of the value is appended to the message string held by the <a class=\"xref\" href=\"system.argumentoutofrangeexception#System_ArgumentOutOfRangeException_Message_\" data-linktype=\"relative-path\">Message</a> property.  </p>\n<p> The ActualValue property is not used within the .NET Framework class library. It carries a null value in all the <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> objects thrown by the .NET Framework class library. The ActualValue property is provided so that applications can use the available argument value.  </p>\n<p> This property is read-only and should be overridden only to customize the content or format of the value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException_Message\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException_Message_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Message</div>        \r\n          </div>\r\n    \r\n            <p>Gets the error message and the string representation of the invalid argument value, or only the error message if the argument value is null.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Message { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text message for this exception. The value of this property takes one of two forms, as follows.  </p>\n <table><thead><tr><th> Condition<br>\n </th><th> Value<br>\n </th></tr></thead><tbody><tr><td> The <code>actualValue</code> is <code>null</code>.<br>\n </td><td> The <code>message</code> string passed to the constructor.<br>\n </td></tr><tr><td> The <code>actualValue</code> is not <code>null</code>.<br>\n </td><td> The <code>message</code> string appended with the string representation of the invalid argument value.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property overrides <a class=\"xref\" href=\"system.argumentexception#System_ArgumentException_Message_\" data-linktype=\"relative-path\">Message</a>.  </p>\n<p> The error message should describe the expected values of the parameter that causes this exception. The error message should be localized.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ArgumentOutOfRangeException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_ArgumentOutOfRangeException_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the invalid argument value and additional exception information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that holds the serialized object data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that describes the source or destination of the serialized data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>info</code> object is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetObjectData sets a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with all the exception object data targeted for serialization. During deserialization, the exception object is reconstituted from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> transmitted over the stream.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ArgumentOutOfRangeException.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ArgumentOutOfRangeException.yml\">\r\n<meta name=\"APIName\" content=\"System.ArgumentOutOfRangeException\">\r\n<meta name=\"APIName\" content=\"System.ArgumentOutOfRangeException..ctor\">\r\n<meta name=\"APIName\" content=\"System.ArgumentOutOfRangeException.ActualValue\">\r\n<meta name=\"APIName\" content=\"System.ArgumentOutOfRangeException.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.ArgumentOutOfRangeException.Message\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a14289b1-6321-5b7c-1a4a-7fb8d13897f5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ArgumentOutOfRangeException\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ArgumentOutOfRangeException.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ArgumentOutOfRangeException.yml","open_to_public_contributors":true,"api_name":["System.ArgumentOutOfRangeException","System.ArgumentOutOfRangeException..ctor","System.ArgumentOutOfRangeException.ActualValue","System.ArgumentOutOfRangeException.GetObjectData","System.ArgumentOutOfRangeException.Message"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ArgumentOutOfRangeException","System::ArgumentOutOfRangeException","System.ArgumentOutOfRangeException.#ctor","System::ArgumentOutOfRangeException::#ctor","System.ArgumentOutOfRangeException.ActualValue","System::ArgumentOutOfRangeException::ActualValue","System.ArgumentOutOfRangeException.GetObjectData","System::ArgumentOutOfRangeException::GetObjectData","System.ArgumentOutOfRangeException.Message","System::ArgumentOutOfRangeException::Message"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a14289b1-6321-5b7c-1a4a-7fb8d13897f5","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/ArgumentOutOfRangeException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ArgumentOutOfRangeException class | Microsoft Docs","_op_ogTitle":"ArgumentOutOfRangeException class","description":"The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.ArgumentOutOfRangeException","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.argumentoutofrangeexception","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.argumentoutofrangeexception","fileRelativePath":"System.ArgumentOutOfRangeException.html"},"themesRelativePathToOutputRoot":"_themes/"}