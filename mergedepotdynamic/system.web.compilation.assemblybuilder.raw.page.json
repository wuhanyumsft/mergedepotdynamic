{"content":"    \r\n    <h1 id=\"System_Web_Compilation_AssemblyBuilder\">\r\n      <span class=\"lang-csharp\">AssemblyBuilder</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class AssemblyBuilder</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AssemblyBuilder</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Instances of the AssemblyBuilder class are used with <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> class methods to build one or more files into a compiled assembly.  </p>\n<p> The <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> class defines build functionality for individual files, and the AssemblyBuilder class combines the source code contributed by each <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> instance into a single assembly. The ASP.NET build environment passes an AssemblyBuilder object to the <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> methods when building an assembly from one or more files, so that each <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> instance can contribute source code for its file to the overall assembly.  </p>\n<p> The ASP.NET build environment determines the language and compiler required by files within the project, based on the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_CodeCompilerType_\" data-linktype=\"relative-path\">CodeCompilerType</a> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.  </p>\n<p> The <a class=\"xref\" href=\"system.web.compilation.assemblybuilder#System_Web_Compilation_AssemblyBuilder_CodeDomProvider_\" data-linktype=\"relative-path\">CodeDomProvider</a> property indicates the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation.  </p>\n<p> A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> object contributes source code in the form of a CodeDOM graph using the <a class=\"xref\" href=\"system.web.compilation.assemblybuilder#System_Web_Compilation_AssemblyBuilder_AddCodeCompileUnit_\" data-linktype=\"relative-path\">AddCodeCompileUnit</a> method. A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> object contributes source code stored in a physical file using the <a class=\"xref\" href=\"system.web.compilation.assemblybuilder#System_Web_Compilation_AssemblyBuilder_CreateCodeFile_\" data-linktype=\"relative-path\">CreateCodeFile</a> method.  </p>\n<p> After each <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> object contributes source code using the appropriate AssemblyBuilder methods, the ASP.NET build environment uses the AssemblyBuilder class to compile the collected source code into an assembly.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_CodeDomProvider\" data-linktype=\"self-bookmark\">CodeDomProvider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the compiler used to build source code into an assembly.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_AddAssemblyReference_System_Reflection_Assembly_\" data-linktype=\"self-bookmark\">AddAssemblyReference(Assembly)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an assembly that is referenced by source code generated for a file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_AddCodeCompileUnit_System_Web_Compilation_BuildProvider_System_CodeDom_CodeCompileUnit_\" data-linktype=\"self-bookmark\">AddCodeCompileUnit(BuildProvider,CodeCompileUnit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds source code for the assembly in the form of a CodeDOM graph.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_CreateCodeFile_System_Web_Compilation_BuildProvider_\" data-linktype=\"self-bookmark\">CreateCodeFile(BuildProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_CreateEmbeddedResource_System_Web_Compilation_BuildProvider_System_String_\" data-linktype=\"self-bookmark\">CreateEmbeddedResource(BuildProvider,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows a build provider to create a resource file to include in the assembly compilation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_GenerateTypeFactory_System_String_\" data-linktype=\"self-bookmark\">GenerateTypeFactory(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts a fast object factory template for a type into the compiled assembly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_AssemblyBuilder_GetTempFilePhysicalPath_System_String_\" data-linktype=\"self-bookmark\">GetTempFilePhysicalPath(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates a temporary file path.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_CodeDomProvider\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_CodeDomProvider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeDomProvider</div>        \r\n          </div>\r\n    \r\n            <p>Gets the compiler used to build source code into an assembly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a></div>\r\n                  </div>\r\n                  <p>A read-only <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a> implementation used for compiling source code contributed by each build provider into an assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CodeDomProvider property indicates the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">System.CodeDom.Compiler.CodeDomProvider</a> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation.  </p>\n<p> The ASP.NET build environment determines the language and compiler required by files within the project, based on the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_CodeCompilerType_\" data-linktype=\"relative-path\">CodeCompilerType</a> property. The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_AddAssemblyReference_System_Reflection_Assembly_\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_AddAssemblyReference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAssemblyReference(Assembly)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an assembly that is referenced by source code generated for a file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddAssemblyReference (System.Reflection.Assembly a);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An assembly referenced by a code compile unit or source file included in the assembly compilation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation uses the AddAssemblyReference method when generating source code that references types within the input assembly.  </p>\n<p> The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_ReferencedAssemblies_\" data-linktype=\"relative-path\">ReferencedAssemblies</a> property. If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the AddAssemblyReference method. The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.  </p>\n<p> Typically, a <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> object adds source code to the <a class=\"xref\" href=\"system.web.compilation.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a> object in the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_GenerateCode_\" data-linktype=\"relative-path\">GenerateCode</a> method. If a build provider generates source code that uses an external type, the build provider adds the type&#39;s assembly using the AddAssemblyReference method.  </p>\n<p> Use the AddAssemblyReference method to add a referenced assembly required in source code generated by a <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> instance for a specific file type. Use the <a href=\"http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9\" data-linktype=\"external\">assemblies Element for compilation (ASP.NET Settings Schema)</a> configuration element to configure an assembly for reference across multiple file types in a project.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_AddCodeCompileUnit_System_Web_Compilation_BuildProvider_System_CodeDom_CodeCompileUnit_\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_AddCodeCompileUnit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCodeCompileUnit(BuildProvider,CodeCompileUnit)</div>        \r\n          </div>\r\n    \r\n            <p>Adds source code for the assembly in the form of a CodeDOM graph.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buildProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The build provider generating <code>compileUnit</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compileUnit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The code compile unit to include in the assembly compilation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation calls the AddCodeCompileUnit method when generating a CodeDOM graph for a virtual path. Source code added with AddCodeCompileUnit is included in the assembly compilation.  </p>\n<p> Typically, a build provider&#39;s <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_GenerateCode_\" data-linktype=\"relative-path\">GenerateCode</a> method implementation reads the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_VirtualPath_\" data-linktype=\"relative-path\">VirtualPath</a> property, parses the contents, and then adds the generated source code to the specified <a class=\"xref\" href=\"system.web.compilation.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a> object. The build provider uses the AddCodeCompileUnit method to add source code as a CodeDOM graph to the assembly. Alternately, the build provider can use the <a class=\"xref\" href=\"system.web.compilation.assemblybuilder#System_Web_Compilation_AssemblyBuilder_CreateCodeFile_\" data-linktype=\"relative-path\">CreateCodeFile</a> method to add source code as a physical file to the assembly.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_CreateCodeFile_System_Web_Compilation_BuildProvider_\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_CreateCodeFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCodeFile(BuildProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buildProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The build provider generating the code source file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </div>\r\n                  <p>An open <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> that can be used to write source code to a temporary file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation calls the CreateCodeFile method when generating a source file for a virtual path. Source code added with CreateCodeFile is included in the assembly compilation.  </p>\n<p> Typically, a build provider <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_GenerateCode_\" data-linktype=\"relative-path\">GenerateCode</a> method implementation reads the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_VirtualPath_\" data-linktype=\"relative-path\">VirtualPath</a> property, parses the contents, and then adds the generated source code to the specified <a class=\"xref\" href=\"system.web.compilation.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a> object. The build provider uses the CreateCodeFile method to add source code as a physical file to the assembly. Alternately, the build provider can use the <a class=\"xref\" href=\"system.web.compilation.assemblybuilder#System_Web_Compilation_AssemblyBuilder_AddCodeCompileUnit_\" data-linktype=\"relative-path\">AddCodeCompileUnit</a> method to add source code as a CodeDOM graph to the assembly.  </p>\n<p> After calling CreateCodeFile, the build provider writes the source file contents using the returned <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object. After writing the source file, the <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> object must use the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Close_\" data-linktype=\"relative-path\">Close</a> method to close the <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object and free associated system resources.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates a simple build provider implementation, inheriting from the abstract <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> base class. The build provider overrides the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_CodeCompilerType_\" data-linktype=\"relative-path\">CodeCompilerType</a>, <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_GetGeneratedType_\" data-linktype=\"relative-path\">GetGeneratedType</a>, and <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_GenerateCode_\" data-linktype=\"relative-path\">GenerateCode</a> members of the base class.  </p>\n<p> In the <a class=\"xref\" href=\"system.web.compilation.buildprovider#System_Web_Compilation_BuildProvider_GenerateCode_\" data-linktype=\"relative-path\">GenerateCode</a> method implementation, the build provider adds the generated code for the assembly compilation using the CreateCodeFile method. The example does not include the implementation of the <code>SampleClassGenerator</code> class. For more information, see <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Compilation_SampleBuildProvider#2\">using System;\nusing System.Collections;\nusing System.IO;\nusing System.Text;\nusing System.Web;\nusing System.Web.Compilation;\nusing System.CodeDom.Compiler;\nusing System.CodeDom;\nusing System.Security;\nusing System.Security.Permissions;\n\n// Define a simple build provider implementation.\n[PermissionSet(SecurityAction.Demand, Unrestricted = true)]\npublic class SampleBuildProvider : BuildProvider\n{\n    // Define an internal member for the compiler type.\n    protected CompilerType _compilerType = null;\n\n    public SampleBuildProvider()\n    {\n\t\t// Set the compiler to use Visual Basic.\n\t\t_compilerType = GetDefaultCompilerTypeForLanguage(&quot;C#&quot;);\n\t}\n\n    // Return the internal CompilerType member \n    // defined in this implementation.\n    public override CompilerType CodeCompilerType\n    {\n        get { return _compilerType; }\n    }\n\n    // Define a method that returns details for the \n    // code compiler for this build provider.\n    public string GetCompilerTypeDetails()\n    {\n        StringBuilder details = new StringBuilder(&quot;&quot;);\n\n        if (_compilerType != null)\n        {\n            // Format a string that contains the code compiler\n            // implementation, and various compiler details.\n\n            details.AppendFormat(&quot;CodeDomProvider type: {0}; <br>&quot;,\n                _compilerType.CodeDomProviderType.ToString());\n            details.AppendFormat(&quot;Compiler debug build = {0}; <br>&quot;,\n                _compilerType.CompilerParameters.IncludeDebugInformation.ToString());\n            details.AppendFormat(&quot;Compiler warning level = {0}; <br>&quot;,\n                _compilerType.CompilerParameters.WarningLevel.ToString());\n\n            if (_compilerType.CompilerParameters.CompilerOptions != null)\n            {\n                details.AppendFormat(&quot;Compiler options: {0}; <br>&quot;,\n                    _compilerType.CompilerParameters.CompilerOptions.ToString());\n            }\n        }\n        return details.ToString();\n    }\n\n\n    // Define the build provider implementation of the GenerateCode method.\n    public override void GenerateCode(AssemblyBuilder assemBuilder)\n    {\n        // Generate a code compile unit, and add it to\n        // the assembly builder.\n\n        TextWriter tw = assemBuilder.CreateCodeFile(this);\n        if (tw != null)\n        {\n            try\n            {\n                // Generate the code compile unit from the virtual path.\n                CodeCompileUnit compileUnit = SampleClassGenerator.BuildCompileUnitFromPath(VirtualPath);\n\n                // Generate the source for the code compile unit, \n                // and write it to a file specified by the assembly builder.\n                CodeDomProvider provider = assemBuilder.CodeDomProvider;\n                provider.CreateGenerator().GenerateCodeFromCompileUnit(compileUnit, tw, null);\n            }\n            finally\n            {\n                tw.Close();\n            }\n        }\n    }\n\n    public override System.Type GetGeneratedType(CompilerResults results)\n    {\n        string typeName = SampleClassGenerator.TypeName;\n\n        return results.CompiledAssembly.GetType(typeName);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Compilation_SampleBuildProvider#2\">Imports Microsoft.VisualBasic\nImports System\nImports System.Collections\nImports System.IO\nImports System.Text\nImports System.Web\nImports System.Web.Compilation\nImports System.CodeDom.Compiler\nImports System.CodeDom\nImports System.Security\nImports System.Security.Permissions\n\n&lt;PermissionSet(SecurityAction.Demand, Unrestricted := true)&gt; _\nPublic Class SampleBuildProvider\n    Inherits BuildProvider\n\n    Protected _compilerType As CompilerType = Nothing\n\n    Public Sub New()\n        _compilerType = GetDefaultCompilerType()\n    End Sub\n\n    &#39; Return the internal CompilerType member \n    &#39; defined in this implementation.\n    Public Overrides ReadOnly Property CodeCompilerType() As CompilerType\n        Get\n            CodeCompilerType = _compilerType\n        End Get\n    End Property\n\n    &#39; Define a method that returns details for the \n    &#39; code compiler for this build provider.\n    Public Function GetCompilerTypeDetails() As String\n        Dim details As StringBuilder = New StringBuilder(&quot;&quot;)\n\n        If Not _compilerType Is Nothing Then\n            &#39; Format a string that contains the code compiler\n            &#39; implementation, and various compiler details.\n\n            details.AppendFormat(&quot;CodeDomProvider type: {0}; &quot;, _\n                _compilerType.CodeDomProviderType.ToString())\n            details.AppendFormat(&quot;Compiler debug build = {0}; &quot;, _\n                _compilerType.CompilerParameters.IncludeDebugInformation.ToString())\n            details.AppendFormat(&quot;Compiler warning level = {0}; &quot;, _\n                _compilerType.CompilerParameters.WarningLevel.ToString())\n\n            If Not _compilerType.CompilerParameters.CompilerOptions Is Nothing Then\n                details.AppendFormat(&quot;Compiler options: {0}; &quot;, _\n                    _compilerType.CompilerParameters.CompilerOptions.ToString())\n            End If\n        End If\n        Return details.ToString()\n    End Function\n\n    &#39; Define the build provider implementation of the GenerateCode method.\n    Public Overrides Sub GenerateCode(ByVal assemBuilder As AssemblyBuilder)\n        &#39; Generate a code compile unit, and add it to\n        &#39; the assembly builder.\n\n        Dim tw As TextWriter = assemBuilder.CreateCodeFile(Me)\n        If Not tw Is Nothing Then\n            Try\n                &#39; Generate the code compile unit from the virtual path.\n                Dim compileUnit As CodeCompileUnit = _\n                        SampleClassGenerator.BuildCompileUnitFromPath(VirtualPath)\n\n                &#39; Generate the source for the code compile unit, \n                &#39; and write it to a file specified by the assembly builder.\n                Dim provider As CodeDomProvider = assemBuilder.CodeDomProvider\n                provider.CreateGenerator().GenerateCodeFromCompileUnit(compileUnit, tw, Nothing)\n            Finally\n                tw.Close()\n            End Try\n\n        End If\n    End Sub\n\n    Public Overrides Function GetGeneratedType(ByVal results As CompilerResults) As System.Type\n        Dim typeName As String = SampleClassGenerator.TypeName\n\n        Return results.CompiledAssembly.GetType(typeName)\n    End Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_CreateEmbeddedResource_System_Web_Compilation_BuildProvider_System_String_\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_CreateEmbeddedResource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateEmbeddedResource(BuildProvider,String)</div>        \r\n          </div>\r\n    \r\n            <p>Allows a build provider to create a resource file to include in the assembly compilation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buildProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The build provider generating the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the resource file to be created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>An open <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that can be used to write resources, which are included in the assembly compilation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is not a valid file name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After calling the CreateEmbeddedResource method, a <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> object writes the resource file contents using the returned <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object. For example, the build provider can write the resources using a <a class=\"xref\" href=\"system.resources.resourcewriter\" data-linktype=\"relative-path\">ResourceWriter</a> object. After writing the resource file, the build provider must use the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> method to close the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object and free associated system resources.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_GenerateTypeFactory_System_String_\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_GenerateTypeFactory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateTypeFactory(String)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts a fast object factory template for a type into the compiled assembly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GenerateTypeFactory (string typeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the type to generate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation calls the GenerateTypeFactory method to optimize performance for frequent creations of type instances.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_AssemblyBuilder_GetTempFilePhysicalPath_System_String_\">\r\n    \r\n            <a id=\"System_Web_Compilation_AssemblyBuilder_GetTempFilePhysicalPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTempFilePhysicalPath(String)</div>        \r\n          </div>\r\n    \r\n            <p>Generates a temporary file path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetTempFilePhysicalPath (string extension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>extension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file extension to use for the temporary file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A path to a temporary file, with the specified file extension.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.web.compilation.buildprovider\" data-linktype=\"relative-path\">BuildProvider</a> implementation calls the GetTempFilePhysicalPath method to get a temporary file path that is deleted automatically after the assembly is compiled.  </p>\n<p> The GetTempFilePhysicalPath method generates a unique temporary file path, but does not create the file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Compilation.AssemblyBuilder.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Compilation.AssemblyBuilder.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.AddAssemblyReference\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.CodeDomProvider\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.CreateCodeFile\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d422db2e-3eae-a51a-45e7-1032fa09ded6\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Compilation\\AssemblyBuilder.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Compilation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Compilation.AssemblyBuilder\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Compilation.AssemblyBuilder.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Compilation.AssemblyBuilder.yml","open_to_public_contributors":true,"api_name":["System.Web.Compilation.AssemblyBuilder","System.Web.Compilation.AssemblyBuilder.AddAssemblyReference","System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit","System.Web.Compilation.AssemblyBuilder.CodeDomProvider","System.Web.Compilation.AssemblyBuilder.CreateCodeFile","System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource","System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory","System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Compilation.AssemblyBuilder","System::Web::Compilation::AssemblyBuilder","System.Web.Compilation.AssemblyBuilder.AddAssemblyReference","System::Web::Compilation::AssemblyBuilder::AddAssemblyReference","System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit","System::Web::Compilation::AssemblyBuilder::AddCodeCompileUnit","System.Web.Compilation.AssemblyBuilder.CodeDomProvider","System::Web::Compilation::AssemblyBuilder::CodeDomProvider","System.Web.Compilation.AssemblyBuilder.CreateCodeFile","System::Web::Compilation::AssemblyBuilder::CreateCodeFile","System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource","System::Web::Compilation::AssemblyBuilder::CreateEmbeddedResource","System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory","System::Web::Compilation::AssemblyBuilder::GenerateTypeFactory","System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath","System::Web::Compilation::AssemblyBuilder::GetTempFilePhysicalPath"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d422db2e-3eae-a51a-45e7-1032fa09ded6","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Compilation\\AssemblyBuilder.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Compilation/AssemblyBuilder.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AssemblyBuilder class | Microsoft Docs","_op_ogTitle":"AssemblyBuilder class","description":"Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.\n","toc_asset_id":"_splitted/System.Web.Compilation/toc.json","toc_rel":"_splitted/System.Web.Compilation/toc.json","source_url":"","ms.assetid":"System.Web.Compilation.AssemblyBuilder","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.compilation.assemblybuilder","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.compilation.assemblybuilder","fileRelativePath":"System.Web.Compilation.AssemblyBuilder.html"},"themesRelativePathToOutputRoot":"_themes/"}