{"content":"    \r\n    <h1 id=\"System_Management_ConnectionOptions\">\r\n      <span class=\"lang-csharp\">ConnectionOptions</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies all settings required to make a WMI connection.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ConnectionOptions : System.Management.ManagementOptions</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions\" data-linktype=\"relative-path\">System.Management.ManagementOptions</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ConnectionOptions</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_Timeout\" data-linktype=\"relative-path\">Timeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions__ctor\" data-linktype=\"self-bookmark\">ConnectionOptions()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> class for the connection operation, using default values. This is the default constructor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions__ctor_System_String_System_String_System_Security_SecureString_System_String_System_Management_ImpersonationLevel_System_Management_AuthenticationLevel_System_Boolean_System_Management_ManagementNamedValueCollection_System_TimeSpan_\" data-linktype=\"self-bookmark\">ConnectionOptions(String,String,SecureString,String,ImpersonationLevel,AuthenticationLevel,Boolean,ManagementNamedValueCollection,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new ConnectionOption.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions__ctor_System_String_System_String_System_String_System_String_System_Management_ImpersonationLevel_System_Management_AuthenticationLevel_System_Boolean_System_Management_ManagementNamedValueCollection_System_TimeSpan_\" data-linktype=\"self-bookmark\">ConnectionOptions(String,String,String,String,ImpersonationLevel,AuthenticationLevel,Boolean,ManagementNamedValueCollection,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> class to be used for a WMI connection, using the specified values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Authentication\" data-linktype=\"self-bookmark\">Authentication</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the COM authentication level to be used for operations in this connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Authority\" data-linktype=\"self-bookmark\">Authority</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the authority to be used to authenticate the specified user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_EnablePrivileges\" data-linktype=\"self-bookmark\">EnablePrivileges</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether user privileges need to be enabled for the connection operation. This property should only be used when the operation performed requires a certain user privilege to be enabled (for example, a machine restart).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Impersonation\" data-linktype=\"self-bookmark\">Impersonation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the COM impersonation level to be used for operations in this connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Locale\" data-linktype=\"self-bookmark\">Locale</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the locale to be used for the connection operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Password\" data-linktype=\"self-bookmark\">Password</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the password for the specified user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_SecurePassword\" data-linktype=\"self-bookmark\">SecurePassword</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the password for the specified user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Username\" data-linktype=\"self-bookmark\">Username</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user name to be used for the connection operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ConnectionOptions_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a copy of the object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions__ctor\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionOptions()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> class for the connection operation, using default values. This is the default constructor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ConnectionOptions ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with default connection options.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions()#1\">Imports System\nImports System.Management\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n    ByVal args() As String) As Integer\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions()#1\">using System;\nusing System.Management;\npublic class RemoteConnect \n{\n    public static void Main() \n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        // This example uses the default values. \n          \n        ConnectionOptions options = \n            new ConnectionOptions();\n                 \n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope = \n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher = \n            new ManagementObjectSearcher(scope,query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach ( ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, \n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, \n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,  \n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, \n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions__ctor_System_String_System_String_System_Security_SecureString_System_String_System_Management_ImpersonationLevel_System_Management_AuthenticationLevel_System_Boolean_System_Management_ManagementNamedValueCollection_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionOptions(String,String,SecureString,String,ImpersonationLevel,AuthenticationLevel,Boolean,ManagementNamedValueCollection,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new ConnectionOption.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ConnectionOptions (string locale, string username, System.Security.SecureString password, string authority, System.Management.ImpersonationLevel impersonation, System.Management.AuthenticationLevel authentication, bool enablePrivileges, System.Management.ManagementNamedValueCollection context, TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>locale</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale to be used for the connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>username</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The authority to be used to authenticate the specified user.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>impersonation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">ImpersonationLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The COM impersonation level to be used for the connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authentication</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The COM authentication level to be used for the connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enablePrivileges</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>true to enable special user privileges; otherwise, false. This parameter should only be used when performing an operation that requires special Windows NT user privileges.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementnamedvaluecollection\" data-linktype=\"relative-path\">ManagementNamedValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A provider-specific, named value pairs object to be passed through to the provider.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions__ctor_System_String_System_String_System_String_System_String_System_Management_ImpersonationLevel_System_Management_AuthenticationLevel_System_Boolean_System_Management_ManagementNamedValueCollection_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionOptions(String,String,String,String,ImpersonationLevel,AuthenticationLevel,Boolean,ManagementNamedValueCollection,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> class to be used for a WMI connection, using the specified values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ConnectionOptions (string locale, string username, string password, string authority, System.Management.ImpersonationLevel impersonation, System.Management.AuthenticationLevel authentication, bool enablePrivileges, System.Management.ManagementNamedValueCollection context, TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>locale</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale to be used for the connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>username</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authority</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The authority to be used to authenticate the specified user.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>impersonation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">ImpersonationLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The COM impersonation level to be used for the connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authentication</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The COM authentication level to be used for the connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enablePrivileges</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to enable special user privileges; otherwise, <code>false</code>. This parameter should only be used when performing an operation that requires special Windows NT user privileges.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementnamedvaluecollection\" data-linktype=\"relative-path\">ManagementNamedValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A provider-specific, named value pairs object to be passed through to the provider.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with the desired connection options.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions(9)#1\">using System;\nusing System.Management;\nusing System.Security;\n\npublic class RemoteConnect\n{\n    public static void Main()\n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        SecureString pw = GetPassword();\n        ConnectionOptions options =\n            new ConnectionOptions(&quot;MS_409&quot;, &quot;userName&quot;, pw,\n            &quot;ntlmdomain:DOMAIN&quot;,\n            System.Management.ImpersonationLevel.Impersonate,\n            System.Management.AuthenticationLevel.Default, true,\n            null, System.TimeSpan.MaxValue);\n        pw.Dispose();\n\n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope =\n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher =\n            new ManagementObjectSearcher(scope, query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach (ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;,\n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;,\n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,\n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;,\n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n\n    /// &lt;summary&gt;\n    /// Read a password from the console into a SecureString\n    /// &lt;/summary&gt;\n    /// &lt;returns&gt;Password stored in a secure string&lt;/returns&gt;\n    public static SecureString GetPassword()\n    {\n        SecureString password = new SecureString();\n        Console.WriteLine(&quot;Enter password: &quot;);\n\n        // get the first character of the password\n        ConsoleKeyInfo nextKey = Console.ReadKey(true);\n\n        while (nextKey.Key != ConsoleKey.Enter)\n        {\n            if (nextKey.Key == ConsoleKey.Backspace)\n            {\n                if (password.Length &gt; 0)\n                {\n                    password.RemoveAt(password.Length - 1);\n\n                    // erase the last * as well\n                    Console.Write(nextKey.KeyChar);\n                    Console.Write(&quot; &quot;);\n                    Console.Write(nextKey.KeyChar);\n                }\n            }\n            else\n            {\n                password.AppendChar(nextKey.KeyChar);\n                Console.Write(&quot;*&quot;);\n            }\n\n            nextKey = Console.ReadKey(true);\n        }\n\n        Console.WriteLine();\n\n        // lock the password down\n        password.MakeReadOnly();\n        return password;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions(9)#1\">Imports System\nImports System.Management\nImports System.Security\n\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n    ByVal args() As String) As Integer\n\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using.\n\n        Dim pw As SecureString\n        pw = GetPassword()\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions(&quot;MS_409&quot;, &quot;userName&quot;, pw, _\n             &quot;ntlmdomain:DOMAIN&quot;, _\n             System.Management.ImpersonationLevel.Impersonate, _\n             System.Management.AuthenticationLevel.Default, True, _\n             Nothing, System.TimeSpan.MaxValue)\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\n\n\n    &#39; Read a password from the console into a SecureString\n    Public Shared Function GetPassword() As SecureString\n\n        Dim password As New SecureString()\n        Console.WriteLine(&quot;Enter password: &quot;)\n\n        &#39; get the first character of the password\n        Dim nextKey As ConsoleKeyInfo\n        nextKey = Console.ReadKey(True)\n\n        While nextKey.Key &lt;&gt; ConsoleKey.Enter\n\n            If nextKey.Key = ConsoleKey.Backspace Then\n                If password.Length &gt; 0 Then\n                    password.RemoveAt(password.Length - 1)\n\n                    &#39; erase the last * as well\n                    Console.Write(nextKey.KeyChar)\n                    Console.Write(&quot; &quot;)\n                    Console.Write(nextKey.KeyChar)\n                End If\n            Else\n                password.AppendChar(nextKey.KeyChar)\n                Console.Write(&quot;*&quot;)\n            End If\n\n            nextKey = Console.ReadKey(True)\n        End While\n\n        Console.WriteLine()\n\n        &#39; lock the password down\n        password.MakeReadOnly()\n        Return password\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Authentication\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Authentication_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Authentication</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the COM authentication level to be used for operations in this connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Management.AuthenticationLevel Authentication { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a></div>\r\n                  </div>\r\n                  <p>Returns an <a class=\"xref\" href=\"system.management.authenticationlevel\" data-linktype=\"relative-path\">AuthenticationLevel</a> enumeration value indicating the COM authentication level used for a connection to the local or a remote computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>On Windows 2000 and below, the WMI service will request Connect level authentication, while on Windows XP and higher it will request Packet level authentication. If the client requires a specific authentication setting, this property can be used to control the authentication level on this particular connection. For example, the property can be set to <a class=\"xref\" href=\"system.management.authenticationlevel\" data-linktype=\"relative-path\">System.Management.AuthenticationLevel</a> if the client requires all communication to be encrypted.  </p>\n<h2 id=\"property-value\">Property Value</h2>\n<p> The COM authentication level to be used for operations in this connection. The default value is <a class=\"xref\" href=\"system.management.authenticationlevel\" data-linktype=\"relative-path\">System.Management.AuthenticationLevel</a>, which indicates that the client will use the authentication level requested by the server, according to the standard DCOM negotiation process.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with the desired connection options.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions_Authentication#1\">using System;\nusing System.Management;\npublic class RemoteConnect \n{\n    public static void Main() \n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        // This example uses the default values.  \n        ConnectionOptions options = \n            new ConnectionOptions();\n        options.Authentication = \n            System.Management.AuthenticationLevel.PacketPrivacy;\n                 \n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope = \n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher = \n            new ManagementObjectSearcher(scope,query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach ( ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, \n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, \n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,  \n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, \n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions_Authentication#1\">Imports System\nImports System.Management\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n    ByVal args() As String) As Integer\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions\n        options.Authentication = 6\n        &#39; System.Management.AuthenticationLevel.PacketPrivacy = 6\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Authority\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Authority_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Authority</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the authority to be used to authenticate the specified user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Authority { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that defines the authority used to authenticate the specified user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The property must be passed as follows: If it begins with the string &quot;Kerberos:&quot;, Kerberos authentication will be used and this property should contain a Kerberos principal name. For example,  </p>\n<pre><code>Kerberos:&lt;principal name&gt;\n</code></pre><p> If the property value begins with the string &quot;NTLMDOMAIN:&quot;, NTLM authentication will be used and the property should contain a NTLM domain name. For example,  </p>\n<pre><code>NTLMDOMAIN:&lt;domain name&gt;\n</code></pre><p> If the property is null, NTLM authentication will be used and the NTLM domain of the current user will be used.  </p>\n<h2 id=\"property-value\">Property Value</h2>\n<p> If not <code>null</code>, this property can contain the name of the Windows NT/Windows 2000 domain in which to obtain the user to authenticate.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with the desired connection options.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions_Authority#1\">using System;\nusing System.Management;\npublic class RemoteConnect \n{\n    public static void Main() \n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        // This example uses the default values.  \n        ConnectionOptions options = \n            new ConnectionOptions();\n        options.Authority = &quot;ntlmdomain:DOMAIN&quot;;\n                 \n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope = \n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher = \n            new ManagementObjectSearcher(scope,query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach ( ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, \n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, \n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,  \n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, \n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions_Authority#1\">Imports System\nImports System.Management\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n    ByVal args() As String) As Integer\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions\n        options.Authority = &quot;ntlmdomain:DOMAIN&quot;\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_EnablePrivileges\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_EnablePrivileges_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnablePrivileges</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether user privileges need to be enabled for the connection operation. This property should only be used when the operation performed requires a certain user privilege to be enabled (for example, a machine restart).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EnablePrivileges { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether user privileges need to be enabled for the connection operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> <code>true</code> if user privileges need to be enabled for the connection operation; otherwise, <code>false</code>. The default value is <code>false</code>.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Impersonation\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Impersonation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Impersonation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the COM impersonation level to be used for operations in this connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Management.ImpersonationLevel Impersonation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">ImpersonationLevel</a></div>\r\n                  </div>\r\n                  <p>Returns an <a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">ImpersonationLevel</a> enumeration value indicating the impersonation level used to connect to WMI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">System.Management.ImpersonationLevel</a> setting is advantageous when the provider is a trusted application or service. It eliminates the need for the provider to perform client identity and access checks for the requested operations. However, if for some reason the provider cannot be trusted, allowing it to impersonate the client may constitute a security threat. In such cases, we recommend that this property be set by the client to a lower value, such as <a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">System.Management.ImpersonationLevel</a>. Note that this may cause failure of the provider to perform the requested operations, for lack of sufficient permissions or inability to perform access checks.  </p>\n<h2 id=\"property-value\">Property Value</h2>\n<p> The COM impersonation level to be used for operations in this connection. The default value is <a class=\"xref\" href=\"system.management.impersonationlevel\" data-linktype=\"relative-path\">System.Management.ImpersonationLevel</a>, which indicates that the WMI provider can impersonate the client when performing the requested operations in this connection.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with the desired connection options.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions_Impersonation#1\">using System;\nusing System.Management;\npublic class RemoteConnect \n{\n    public static void Main() \n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        // This example uses the default values.  \n        ConnectionOptions options = \n            new ConnectionOptions();\n        options.Impersonation = \n            System.Management.ImpersonationLevel.Impersonate;\n                 \n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope = \n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher = \n            new ManagementObjectSearcher(scope,query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach ( ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, \n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, \n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,  \n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, \n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions_Impersonation#1\">Imports System\nImports System.Management\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n    ByVal args() As String) As Integer\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions\n        options.Impersonation = 3\n        &#39; System.Management.ImpersonationLevel.Impersonate = 3\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Locale\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Locale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Locale</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the locale to be used for the connection operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Locale { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value used for the locale in a connection to WMI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For Microsoft locale identifiers, the format of the string is &quot;MS_<em>xxx</em>&quot;, where <em>xxx</em> is a string in hexadecimal form that indicates the Locale Identification (LCID); for example, American English would appear as &quot;MS_409&quot;.  </p>\n<h2 id=\"property-value\">Property Value</h2>\n<p> The default value is DEFAULTLOCALE.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with the desired connection options.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions_Locale#1\">using System;\nusing System.Management;\npublic class RemoteConnect \n{\n    public static void Main() \n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        // This example uses the default values.  \n        ConnectionOptions options = \n            new ConnectionOptions();\n        options.Locale = &quot;MS_409&quot;; \n                 \n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope = \n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher = \n            new ManagementObjectSearcher(scope,query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach ( ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, \n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, \n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,  \n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, \n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions_Locale#1\">Imports System\nImports System.Management\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n        ByVal args() As String) As Integer\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions\n        options.Locale = &quot;MS_409&quot;\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Password\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Password_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Password</div>        \r\n          </div>\r\n    \r\n            <p>Sets the password for the specified user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Password { set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value used for the password in a connection to WMI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A blank string (&quot;&quot;) specifies a valid zero-length password.  </p>\n<p> Hard-coding a password is a security threat.  Use security precautions such as encrypting a password, or prompting the user for a password when you set the Password property.  </p>\n<h2 id=\"property-value\">Property Value</h2>\n<p> The default value is <code>null</code>. If the user name is also <code>null</code>, the credentials used will be those of the currently logged-on user.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_SecurePassword\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_SecurePassword_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SecurePassword</div>        \r\n          </div>\r\n    \r\n            <p>Sets the password for the specified user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.SecureString SecurePassword { set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </div>\r\n                  <p>Returns a SecureString value used for the password in a connection to WMI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Username\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Username_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Username</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user name to be used for the connection operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Username { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value used as the user name in a connection to WMI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the user name is from a domain other than the current domain, the string may contain the domain name and user name, separated by a backslash: string &#39;username&#39; = &quot;EnterDomainHere\\\\EnterUsernameHere&quot;. The <code>strUser</code> parameter cannot be an empty string.  </p>\n<h2 id=\"property-value\">Property Value</h2>\n<p> <code>null</code> if the connection will use the currently logged-on user; otherwise, a string representing the user name. The default value is <code>null</code>.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example connects to a remote computer and displays information about the operating system on the remote computer. A <a class=\"xref\" href=\"system.management.connectionoptions\" data-linktype=\"relative-path\">ConnectionOptions</a> is created to connect to the remote computer with the desired connection options.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ConnectionOptions_UserName#1\">using System;\nusing System.Management;\npublic class RemoteConnect \n{\n    public static void Main() \n    {\n        // Build an options object for the remote connection\n        // if you plan to connect to the remote\n        // computer with a different user name\n        // and password than the one you are currently using.\n        // This example uses the default values.  \n        ConnectionOptions options = \n            new ConnectionOptions();\n        options.Username = &quot;UserName&quot;; \n                 \n        // Make a connection to a remote computer.\n        // Replace the &quot;FullComputerName&quot; section of the\n        // string &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot; with\n        // the full computer name or IP address of the\n        // remote computer.\n        ManagementScope scope = \n            new ManagementScope(\n            &quot;\\\\\\\\FullComputerName\\\\root\\\\cimv2&quot;, options);\n        scope.Connect();\n\n        //Query system for Operating System information\n        ObjectQuery query = new ObjectQuery(\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;);\n        ManagementObjectSearcher searcher = \n            new ManagementObjectSearcher(scope,query);\n\n        ManagementObjectCollection queryCollection = searcher.Get();\n        foreach ( ManagementObject m in queryCollection)\n        {\n            // Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, \n                m[&quot;csname&quot;]);\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, \n                m[&quot;WindowsDirectory&quot;]);\n            Console.WriteLine(&quot;Operating System: {0}&quot;,  \n                m[&quot;Caption&quot;]);\n            Console.WriteLine(&quot;Version: {0}&quot;, m[&quot;Version&quot;]);\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, \n                m[&quot;Manufacturer&quot;]);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ConnectionOptions_UserName#1\">Imports System\nImports System.Management\nPublic Class RemoteConnect\n\n    Public Overloads Shared Function Main( _\n    ByVal args() As String) As Integer\n\n        &#39; Build an options object for the remote connection\n        &#39; if you plan to connect to the remote\n        &#39; computer with a different user name\n        &#39; and password than the one you are currently using\n        Dim options As ConnectionOptions\n        options = New ConnectionOptions\n        options.Username = &quot;UserName&quot;\n\n        &#39; Make a connection to a remote computer.\n        &#39; Replace the &quot;FullComputerName&quot; section of the\n        &#39; string &quot;\\\\FullComputerName\\root\\cimv2&quot; with\n        &#39; the full computer name or IP address of the\n        &#39; remote computer.\n        Dim scope As ManagementScope\n        scope = New ManagementScope( _\n            &quot;\\\\FullComputerName\\root\\cimv2&quot;, options)\n        scope.Connect()\n\n        &#39; Query system for Operating System information\n        Dim query As ObjectQuery\n        query = New ObjectQuery( _\n            &quot;SELECT * FROM Win32_OperatingSystem&quot;)\n        Dim searcher As ManagementObjectSearcher\n        searcher = _\n            New ManagementObjectSearcher(scope, query)\n\n        Dim queryCollection As ManagementObjectCollection\n        queryCollection = searcher.Get()\n\n        Dim m As ManagementObject\n        For Each m In queryCollection\n            &#39; Display the remote computer information\n            Console.WriteLine(&quot;Computer Name : {0}&quot;, _\n                m(&quot;csname&quot;))\n            Console.WriteLine(&quot;Windows Directory : {0}&quot;, _\n                m(&quot;WindowsDirectory&quot;))\n            Console.WriteLine(&quot;Operating System: {0}&quot;, _\n                m(&quot;Caption&quot;))\n            Console.WriteLine(&quot;Version: {0}&quot;, m(&quot;Version&quot;))\n            Console.WriteLine(&quot;Manufacturer : {0}&quot;, _\n                m(&quot;Manufacturer&quot;))\n        Next\n\n        Return 0\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ConnectionOptions_Clone\">\r\n    \r\n            <a id=\"System_Management_ConnectionOptions_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a copy of the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The cloned object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.ConnectionOptions.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.ConnectionOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions..ctor\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Authentication\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Authority\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Clone\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.EnablePrivileges\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Impersonation\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Locale\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Password\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.SecurePassword\">\r\n<meta name=\"APIName\" content=\"System.Management.ConnectionOptions.Username\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3d600b49-49d4-62a2-bff7-66ef8e9a9787\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Management\\ConnectionOptions.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies all settings required to make a WMI connection.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Management/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.ConnectionOptions\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.ConnectionOptions.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.ConnectionOptions.yml","open_to_public_contributors":true,"api_name":["System.Management.ConnectionOptions","System.Management.ConnectionOptions..ctor","System.Management.ConnectionOptions.Authentication","System.Management.ConnectionOptions.Authority","System.Management.ConnectionOptions.Clone","System.Management.ConnectionOptions.EnablePrivileges","System.Management.ConnectionOptions.Impersonation","System.Management.ConnectionOptions.Locale","System.Management.ConnectionOptions.Password","System.Management.ConnectionOptions.SecurePassword","System.Management.ConnectionOptions.Username"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.ConnectionOptions","System::Management::ConnectionOptions","System.Management.ConnectionOptions.#ctor","System::Management::ConnectionOptions::#ctor","System.Management.ConnectionOptions.Authentication","System::Management::ConnectionOptions::Authentication","System.Management.ConnectionOptions.Authority","System::Management::ConnectionOptions::Authority","System.Management.ConnectionOptions.Clone","System::Management::ConnectionOptions::Clone","System.Management.ConnectionOptions.EnablePrivileges","System::Management::ConnectionOptions::EnablePrivileges","System.Management.ConnectionOptions.Impersonation","System::Management::ConnectionOptions::Impersonation","System.Management.ConnectionOptions.Locale","System::Management::ConnectionOptions::Locale","System.Management.ConnectionOptions.Password","System::Management::ConnectionOptions::Password","System.Management.ConnectionOptions.SecurePassword","System::Management::ConnectionOptions::SecurePassword","System.Management.ConnectionOptions.Username","System::Management::ConnectionOptions::Username"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3d600b49-49d4-62a2-bff7-66ef8e9a9787","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Management\\ConnectionOptions.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Management/ConnectionOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConnectionOptions class | Microsoft Docs","_op_ogTitle":"ConnectionOptions class","description":"Specifies all settings required to make a WMI connection.\n","toc_asset_id":"_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.ConnectionOptions","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.connectionoptions","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.connectionoptions","fileRelativePath":"System.Management.ConnectionOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}