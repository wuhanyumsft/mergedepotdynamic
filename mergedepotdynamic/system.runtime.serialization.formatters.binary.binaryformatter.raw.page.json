{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter\">\r\n      <span class=\"lang-csharp\">BinaryFormatter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Serializes and deserializes an object, or an entire graph of connected objects, in binary format.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class BinaryFormatter : System.Runtime.Remoting.Messaging.IRemotingFormatter</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">BinaryFormatter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.runtime.serialization.formatters.soap.soapformatter\" data-linktype=\"relative-path\">SoapFormatter</a> and BinaryFormatter classes implement the <a class=\"xref\" href=\"system.runtime.remoting.messaging.iremotingformatter\" data-linktype=\"relative-path\">IRemotingFormatter</a> interface to support remote procedure calls (RPCs), and the <a class=\"xref\" href=\"system.runtime.serialization.iformatter\" data-linktype=\"relative-path\">IFormatter</a> interface (inherited by the <a class=\"xref\" href=\"system.runtime.remoting.messaging.iremotingformatter\" data-linktype=\"relative-path\">IRemotingFormatter</a>) to support serialization of a graph of objects. The <a class=\"xref\" href=\"system.runtime.serialization.formatters.soap.soapformatter\" data-linktype=\"relative-path\">SoapFormatter</a> class also supports RPCs with <a class=\"xref\" href=\"system.runtime.serialization.formatters.isoapmessage\" data-linktype=\"relative-path\">ISoapMessage</a> objects, without using the <a class=\"xref\" href=\"system.runtime.remoting.messaging.iremotingformatter\" data-linktype=\"relative-path\">IRemotingFormatter</a> functionality.  </p>\n<p> During RPCs, the <a class=\"xref\" href=\"system.runtime.remoting.messaging.iremotingformatter\" data-linktype=\"relative-path\">IRemotingFormatter</a> interface allows the specification of two separate object graphs: the graph of objects to serialize, and an additional graph that contains an array of header objects that convey information about the remote function call (for example, transaction ID or a method signature).  </p>\n<p> RPCs that use the BinaryFormatter separate into two distinct parts: method calls, which are sent to the server with the remote object that contains the method called, and method responses, which are sent from the server to the client with the status and response information from the called method.  </p>\n<p> During serialization of a method call the first object of the object graph must support the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a> interface. To deserialize a method call, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method with the <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> parameter. The remoting infrastructure uses the <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> delegate to produce an object that supports the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface. When the BinaryFormatter invokes the <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> delegate, it returns the URI of the remote object with the method that is being called. The first object in the graph returned supports the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a> interface.  </p>\n<p> The serialization procedure for a method response is identical to that of a method call, except the first object of the object graph must support the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage\" data-linktype=\"relative-path\">IMethodReturnMessage</a> interface. To deserialize a method response, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_\" data-linktype=\"relative-path\">DeserializeMethodResponse</a> method. To save time, details about the caller object are not sent to the remote object during the method call. These details are instead obtained from the original method call, which is passed to the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_\" data-linktype=\"relative-path\">DeserializeMethodResponse</a> method in the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a> parameter. The first object in the graph returned by the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_\" data-linktype=\"relative-path\">DeserializeMethodResponse</a> method supports the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodreturnmessage\" data-linktype=\"relative-path\">IMethodReturnMessage</a> interface.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Using binary serialization to deserialize untrusted data can lead to security risks. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<h2 id=\"unpaired-surrogates\">Unpaired Surrogates</h2>\n<p> Any unpaired surrogate characters are lost in binary serialization. For example, the following string contains a high surrogate Unicode character <code>(\\ud800</code>) in between the two <code>Test</code> words:  </p>\n<p> <code>Test\\ud800Test</code>  </p>\n<p> Before serialization, the byte array of the string is as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>Byte Array Value</th>\n<th>Character</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>84</td>\n<td>T</td>\n</tr>\n<tr>\n<td>101</td>\n<td>e</td>\n</tr>\n<tr>\n<td>115</td>\n<td>s</td>\n</tr>\n<tr>\n<td>116</td>\n<td>t</td>\n</tr>\n<tr>\n<td>55296</td>\n<td>\\ud800</td>\n</tr>\n<tr>\n<td>84</td>\n<td>T</td>\n</tr>\n<tr>\n<td>101</td>\n<td>e</td>\n</tr>\n<tr>\n<td>115</td>\n<td>s</td>\n</tr>\n<tr>\n<td>116</td>\n<td>t</td>\n</tr>\n</tbody>\n</table>\n<p> After deserialization, the high surrogate Unicode character is lost:  </p>\n<table>\n<thead>\n<tr>\n<th>Byte Array Value</th>\n<th>Character</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>84</td>\n<td>T</td>\n</tr>\n<tr>\n<td>101</td>\n<td>e</td>\n</tr>\n<tr>\n<td>115</td>\n<td>s</td>\n</tr>\n<tr>\n<td>116</td>\n<td>t</td>\n</tr>\n<tr>\n<td>84</td>\n<td>T</td>\n</tr>\n<tr>\n<td>101</td>\n<td>e</td>\n</tr>\n<tr>\n<td>115</td>\n<td>s</td>\n</tr>\n<tr>\n<td>116</td>\n<td>t</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter__ctor\" data-linktype=\"self-bookmark\">BinaryFormatter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> class with default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter__ctor_System_Runtime_Serialization_ISurrogateSelector_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">BinaryFormatter(ISurrogateSelector,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> class with a given surrogate selector and streaming context.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_AssemblyFormat\" data-linktype=\"self-bookmark\">AssemblyFormat</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Binder\" data-linktype=\"self-bookmark\">Binder</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an object of type <a class=\"xref\" href=\"system.runtime.serialization.serializationbinder\" data-linktype=\"relative-path\">SerializationBinder</a> that controls the binding of a serialized object to a type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Context\" data-linktype=\"self-bookmark\">Context</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> for this formatter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_FilterLevel\" data-linktype=\"self-bookmark\">FilterLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> of automatic deserialization the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> performs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_SurrogateSelector\" data-linktype=\"self-bookmark\">SurrogateSelector</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a> that controls type substitution during serialization and deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_TypeFormat\" data-linktype=\"self-bookmark\">TypeFormat</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the format in which type descriptions are laid out in the serialized stream.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_System_IO_Stream_\" data-linktype=\"self-bookmark\">Deserialize(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the specified stream into an object graph.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_\" data-linktype=\"self-bookmark\">Deserialize(Stream,HeaderHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the specified stream into an object graph. The provided <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> handles any headers in that stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_System_Runtime_Remoting_Messaging_IMethodCallMessage_\" data-linktype=\"self-bookmark\">DeserializeMethodResponse(Stream,HeaderHandler,IMethodCallMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes a response to a remote method call from the provided <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Serialize_System_IO_Stream_System_Object_\" data-linktype=\"self-bookmark\">Serialize(Stream,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the object, or graph of objects with the specified top (root), to the given stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Serialize_System_IO_Stream_System_Object_System_Runtime_Remoting_Messaging_Header___\" data-linktype=\"self-bookmark\">Serialize(Stream,Object,Header[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the object, or graph of objects with the specified top (root), to the given stream attaching the provided headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_UnsafeDeserialize_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_\" data-linktype=\"self-bookmark\">UnsafeDeserialize(Stream,HeaderHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the specified stream into an object graph. The provided <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> handles any headers in that stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_UnsafeDeserializeMethodResponse_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_System_Runtime_Remoting_Messaging_IMethodCallMessage_\" data-linktype=\"self-bookmark\">UnsafeDeserializeMethodResponse(Stream,HeaderHandler,IMethodCallMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes a response to a remote method call from the provided <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter__ctor\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BinaryFormatter()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> class with default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BinaryFormatter ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor sets the properties of the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> object as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>Property Type</th>\n<th>Condition</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_SurrogateSelector_\" data-linktype=\"relative-path\">SurrogateSelector</a></td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Context_\" data-linktype=\"relative-path\">Context</a></td>\n<td>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> with a value that indicates that serialized data can be transmitted to or received from any of the other contexts. (<a class=\"xref\" href=\"system.runtime.serialization.streamingcontextstates\" data-linktype=\"relative-path\">System.Runtime.Serialization.StreamingContextStates</a>)</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"BinaryFormatterClass Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\nref class App\n{\npublic:\n   static void Serialize()\n   {\n      \n      // Create a hashtable of values that will eventually be serialized.\n      Hashtable^ addresses = gcnew Hashtable;\n      addresses-&gt;Add( &quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot; );\n      addresses-&gt;Add( &quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot; );\n      addresses-&gt;Add( &quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot; );\n      \n      // To serialize the hashtable (and its keys/values),  \n      // you must first open a stream for writing. \n      // In this case we will use a file stream.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n      \n      // Construct a BinaryFormatter and use it to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n      try\n      {\n         formatter-&gt;Serialize( fs, addresses );\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n   }\n\n   static void Deserialize()\n   {\n      \n      // Declare the hashtable reference.\n      Hashtable^ addresses = nullptr;\n      \n      // Open the file containing the data that we want to deserialize.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Open );\n      try\n      {\n         BinaryFormatter^ formatter = gcnew BinaryFormatter;\n         \n         // Deserialize the hashtable from the file and \n         // assign the reference to our local variable.\n         addresses = dynamic_cast&lt;Hashtable^&gt;(formatter-&gt;Deserialize( fs ));\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to deserialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n      \n      // To prove that the table deserialized correctly, display the keys/values.\n      IEnumerator^ myEnum = addresses-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         DictionaryEntry ^ de = safe_cast&lt;DictionaryEntry ^&gt;(myEnum-&gt;Current);\n         Console::WriteLine( &quot; {0} lives at {1}.&quot;, de-&gt;Key, de-&gt;Value );\n      }\n   }\n\n};\n\n\n[STAThread]\nint main()\n{\n   App::Serialize();\n   App::Deserialize();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BinaryFormatterClass Example#1\">Imports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\n\n\nModule App\n\n    Sub Main()\n        Serialize()\n        Deserialize()\n    End Sub\n\n    Sub Serialize()\n\n        &#39; Create a hashtable of values that will eventually be serialized.\n        Dim addresses As New Hashtable\n        addresses.Add(&quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot;)\n        addresses.Add(&quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot;)\n        addresses.Add(&quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot;)\n\n        &#39; To serialize the hashtable (and its key/value pairs),  \n        &#39; you must first open a stream for writing. \n        &#39; In this case, use a file stream.\n        Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n        &#39; Construct a BinaryFormatter and use it to serialize the data to the stream.\n        Dim formatter As New BinaryFormatter\n        Try\n            formatter.Serialize(fs, addresses)\n        Catch e As SerializationException\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; &amp; e.Message)\n            Throw\n        Finally\n            fs.Close()\n        End Try\n    End Sub\n\n\n\n    Sub Deserialize()\n        &#39; Declare the hashtable reference.\n        Dim addresses As Hashtable = Nothing\n\n        &#39; Open the file containing the data that you want to deserialize.\n        Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Open)\n        Try\n            Dim formatter As New BinaryFormatter\n\n            &#39; Deserialize the hashtable from the file and \n            &#39; assign the reference to the local variable.\n            addresses = DirectCast(formatter.Deserialize(fs), Hashtable)\n        Catch e As SerializationException\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; &amp; e.Message)\n            Throw\n        Finally\n            fs.Close()\n        End Try\n\n        &#39; To prove that the table deserialized correctly, \n        &#39; display the key/value pairs.\n        Dim de As DictionaryEntry\n        For Each de In addresses\n            Console.WriteLine(&quot;{0} lives at {1}.&quot;, de.Key, de.Value)\n        Next\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"BinaryFormatterClass Example#1\">using System;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\n\npublic class App \n{\n    [STAThread]\n    static void Main() \n    {\n        Serialize();\n        Deserialize();\n    }\n\n    static void Serialize() \n    {\n        // Create a hashtable of values that will eventually be serialized.\n        Hashtable addresses = new Hashtable();\n        addresses.Add(&quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot;);\n        addresses.Add(&quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot;);\n        addresses.Add(&quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot;);\n\n        // To serialize the hashtable and its key/value pairs,  \n        // you must first open a stream for writing. \n        // In this case, use a file stream.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        // Construct a BinaryFormatter and use it to serialize the data to the stream.\n        BinaryFormatter formatter = new BinaryFormatter();\n        try \n        {\n            formatter.Serialize(fs, addresses);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n\n   \n    static void Deserialize() \n    {\n        // Declare the hashtable reference.\n        Hashtable addresses  = null;\n\n        // Open the file containing the data that you want to deserialize.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Open);\n        try \n        {\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Deserialize the hashtable from the file and \n            // assign the reference to the local variable.\n            addresses = (Hashtable) formatter.Deserialize(fs);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n\n        // To prove that the table deserialized correctly, \n        // display the key/value pairs.\n        foreach (DictionaryEntry de in addresses) \n        {\n            Console.WriteLine(&quot;{0} lives at {1}.&quot;, de.Key, de.Value);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter__ctor_System_Runtime_Serialization_ISurrogateSelector_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BinaryFormatter(ISurrogateSelector,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> class with a given surrogate selector and streaming context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BinaryFormatter (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>selector</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a> to use. Can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source and destination for the serialized data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Initializes a new <code>BinaryFormatter</code> for serialization or deserialization of objects from the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.  </p>\n<p> The serialization or deserialization process uses the specified <a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a> to search for surrogates that are registered for the object types you want to deserialize. Surrogates are helpers that serialize and deserialize objects of specific classes. The default <a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a> cannot handle the serialization of objects that derive from the <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a> for remoting purposes. In a remoting situation the specified <a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a> replaces the object derived from <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a> with a <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> object that is serialized by the specified surrogate selector. Therefore, if you want to use remote objects, set the <code>selector</code> parameter to an instance of <a class=\"xref\" href=\"system.runtime.remoting.messaging.remotingsurrogateselector\" data-linktype=\"relative-path\">RemotingSurrogateSelector</a>. If you do not need surrogates, set the <code>selector</code> parameter to be <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_AssemblyFormat\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_AssemblyFormat_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssemblyFormat</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.formatters.formatterassemblystyle\" data-linktype=\"relative-path\">FormatterAssemblyStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.runtime.serialization.formatters.formatterassemblystyle\" data-linktype=\"relative-path\">FormatterAssemblyStyle</a> values that specifies the deserializer behavior.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Binder\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Binder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Binder</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an object of type <a class=\"xref\" href=\"system.runtime.serialization.serializationbinder\" data-linktype=\"relative-path\">SerializationBinder</a> that controls the binding of a serialized object to a type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.SerializationBinder Binder { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationbinder\" data-linktype=\"relative-path\">SerializationBinder</a></div>\r\n                  </div>\r\n                  <p>The serialization binder to use with this formatter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"SerializationBinder Example#1\">Imports System\nImports System.IO\nImports System.Runtime.Serialization\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Reflection\nImports System.Security.Permissions\n\nClass App\n   &lt;STAThread()&gt; Shared Sub Main()\n      Serialize()\n      Deserialize()\n   End Sub\n\n\n   Shared Sub Serialize()\n      &#39; To serialize the objects, you must first open a stream for writing. \n      &#39; Use a file stream here.\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n      Try\n         &#39; Construct a BinaryFormatter and use it \n         &#39; to serialize the data to the stream.\n         Dim formatter As New BinaryFormatter\n\n         &#39; Construct a Version1Type object and serialize it.\n         Dim obj As New Version1Type\n         obj.x = 123\n         formatter.Serialize(fs, obj)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to serialize. Reason: &quot; &amp; e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n   End Sub\n\n\n   Shared Sub Deserialize()\n      &#39; Declare the Version2Type reference.\n      Dim obj As Version2Type = Nothing\n\n      &#39; Open the file containing the data that you want to deserialize.\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Open)\n      Try\n         &#39; Construct a BinaryFormatter and use it \n         &#39; to deserialize the data from the stream.\n         Dim formatter As New BinaryFormatter\n\n         &#39; Construct an instance of the \n         &#39; Version1ToVersion2TypeSerialiationBinder type.\n         &#39; This Binder type can deserialize a Version1Type  \n         &#39; object to a Version2Type object.\n         formatter.Binder = New Version1ToVersion2DeserializationBinder\n\n         obj = DirectCast(formatter.Deserialize(fs), Version2Type)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; &amp; e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n\n      &#39; To prove that a Version2Type object was deserialized, \n      &#39; display the object&#39;s type and fields to the console.\n      Console.WriteLine(&quot;Type of object deserialized: {0}&quot;, obj.GetType())\n      Console.WriteLine(&quot;x = {0}, name = {1}&quot;, obj.x, obj.name)\n   End Sub\nEnd Class\n\n\n&lt;Serializable()&gt; Class Version1Type\n   Public x As Int32\nEnd Class\n\n\n&lt;Serializable()&gt; Class Version2Type\n   Implements ISerializable\n   Public x As Int32\n   Public name As String\n\n   &#39; The security attribute demands that code that calls  \n   &#39; this method have permission to perform serialization.\n   &lt;SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter:=True)&gt; _\n   Private Sub GetObjectData(ByVal info As SerializationInfo, _\n         ByVal context As StreamingContext) Implements ISerializable.GetObjectData\n      info.AddValue(&quot;x&quot;, x)\n      info.AddValue(&quot;name&quot;, name)\n   End Sub\n\n   &#39; The security attribute demands that code that calls  \n   &#39; this method have permission to perform serialization.\n   &lt;SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter:=True)&gt; _\n   Private Sub New(ByVal info As SerializationInfo, _\n         ByVal context As StreamingContext)\n      x = info.GetInt32(&quot;x&quot;)\n      Try\n         name = info.GetString(&quot;name&quot;)\n      Catch e As SerializationException\n         &#39; The &quot;name&quot; field was not serialized because \n         &#39; Version1Type did not contain this field.\n         &#39; Set this field to a reasonable default value.\n         name = &quot;Reasonable default value&quot;\n      End Try\n   End Sub\nEnd Class\n\n\nNotInheritable Class Version1ToVersion2DeserializationBinder\n   Inherits SerializationBinder\n   Public Overrides Function BindToType(ByVal assemblyName As String, _\n         ByVal typeName As String) As Type\n\n      Dim typeToDeserialize As Type = Nothing\n\n      &#39; For each assemblyName/typeName that you want to deserialize\n      &#39; to a different type, set typeToDeserialize to the desired type.\n      Dim assemVer1 As String = [Assembly].GetExecutingAssembly().FullName\n      Dim typeVer1 As String = GetType(Version1Type).FullName\n\n      If assemblyName = assemVer1 And typeName = typeVer1 Then\n         &#39; To use a type from a different assembly version, \n         &#39; change the version number.\n         &#39; To do this, uncomment the following code.\n         &#39; assemblyName = assemblyName.Replace(&quot;1.0.0.0&quot;, &quot;2.0.0.0&quot;)\n\n         &#39; To use a different type from the same assembly, \n         &#39; change the type name.\n         typeName = typeName.Replace(&quot;Version1Type&quot;, &quot;Version2Type&quot;)\n      End If\n\n      &#39; The following code returns the type.\n      typeToDeserialize = Type.GetType(String.Format(&quot;{0}, {1}&quot;, typeName, _\n                                       assemblyName))\n\n      Return typeToDeserialize\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SerializationBinder Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Runtime::Serialization;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Reflection;\nusing namespace System::Security::Permissions;\nref class Version1ToVersion2DeserializationBinder;\n\n[Serializable]\nref class Version1Type\n{\npublic:\n   Int32 x;\n};\n\n\n[Serializable]\nref class Version2Type: public ISerializable\n{\npublic:\n   Int32 x;\n   String^ name;\n\n   // The security attribute demands that code that calls  \n   // this method have permission to perform serialization.\n\n   [SecurityPermissionAttribute(SecurityAction::Demand,SerializationFormatter=true)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context )\n   {\n      info-&gt;AddValue( &quot;x&quot;, x );\n      info-&gt;AddValue( &quot;name&quot;, name );\n   }\n\n\nprivate:\n\n   // The security attribute demands that code that calls  \n   // this method have permission to perform serialization.\n\n   [SecurityPermissionAttribute(SecurityAction::Demand,SerializationFormatter=true)]\n   Version2Type( SerializationInfo^ info, StreamingContext context )\n   {\n      x = info-&gt;GetInt32( &quot;x&quot; );\n      try\n      {\n         name = info-&gt;GetString( &quot;name&quot; );\n      }\n      catch ( SerializationException^ ) \n      {\n         // The &#39;name&#39; field was not serialized because Version1Type \n         // did not contain this field.\n         // We will set this field to a reasonable default value.\n         name =  &quot;Reasonable default value&quot;;\n      }\n   }\n};\n\nref class Version1ToVersion2DeserializationBinder sealed: public SerializationBinder\n{\npublic:\n   virtual Type^ BindToType( String^ assemblyName, String^ typeName ) override\n   {\n      Type^ typeToDeserialize = nullptr;\n\n      // For each assemblyName/typeName that you want to deserialize to\n      // a different type, set typeToDeserialize to the desired type.\n      String^ assemVer1 = Assembly::GetExecutingAssembly()-&gt;FullName;\n      String^ typeVer1 =  &quot;Version1Type&quot;;\n      if ( assemblyName-&gt;Equals( assemVer1 ) &amp;&amp; typeName-&gt;Equals( typeVer1 ) )\n      {\n         // To use a type from a different assembly version, \n         // change the version number using the following line of code.\n         // assemblyName = assemblyName.Replace(&quot;1.0.0.0&quot;, &quot;2.0.0.0&quot;);\n         // To use a different type from the same assembly, \n         // change the type name.\n         typeName =  &quot;Version2Type&quot;;\n      }\n\n      // The following line of code returns the type.\n      typeToDeserialize = Type::GetType( String::Format(  &quot;{0}, {1}&quot;, typeName, assemblyName ) );\n      return typeToDeserialize;\n   }\n};\n\nref class App\n{\npublic:\n   static void Serialize()\n   {\n      // To serialize the objects, you must first open a stream for writing. \n      // We will use a file stream here.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n      try\n      {\n         // Construct a BinaryFormatter and use it \n         // to serialize the data to the stream.\n         BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n         // Construct a Version1Type Object and serialize it.\n         Version1Type^ obj = gcnew Version1Type;\n         obj-&gt;x = 123;\n         formatter-&gt;Serialize( fs, obj );\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n   }\n\n   static void Deserialize()\n   {\n      // Declare the Version2Type reference.\n      Version2Type^ obj = nullptr;\n\n      // Open the file containing the data that we want to deserialize.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Open );\n      try\n      {\n         // Construct a BinaryFormatter and use it \n         // to deserialize the data from the stream.\n         BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n         // Construct an instance of our \n         // Version1ToVersion2TypeSerialiationBinder type.\n         // This Binder type knows how to deserialize a Version1Type  \n         // Object* to a Version2Type Object.\n         formatter-&gt;Binder = gcnew Version1ToVersion2DeserializationBinder;\n         obj = dynamic_cast&lt;Version2Type^&gt;(formatter-&gt;Deserialize( fs ));\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to deserialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n      // To prove that a Version2Type Object* was deserialized, \n      // display the Object&#39;s type and fields to the console.\n      Console::WriteLine( &quot;Type of Object deserialized: {0}&quot;, obj-&gt;GetType() );\n      Console::WriteLine( &quot;x = {0}, name = {1}&quot;, obj-&gt;x, obj-&gt;name );\n   }\n};\n\n[STAThread]\nint main()\n{\n   App::Serialize();\n   App::Deserialize();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"SerializationBinder Example#1\">using System;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Reflection;\nusing System.Security.Permissions;\n\n\nclass App \n{\n    [STAThread]\n    static void Main() \n    {\n        Serialize();\n        Deserialize();\n    }\n\n    static void Serialize() \n    {\n        // To serialize the objects, you must first open a stream for writing. \n        // Use a file stream here.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        try \n        {\n            // Construct a BinaryFormatter and use it \n            // to serialize the data to the stream.\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Construct a Version1Type object and serialize it.\n            Version1Type obj = new Version1Type();\n            obj.x = 123;\n            formatter.Serialize(fs, obj);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n\n   \n    static void Deserialize() \n    {\n        // Declare the Version2Type reference.\n        Version2Type obj = null;\n\n        // Open the file containing the data that you want to deserialize.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Open);\n        try \n        {\n            // Construct a BinaryFormatter and use it \n            // to deserialize the data from the stream.\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Construct an instance of our the\n            // Version1ToVersion2TypeSerialiationBinder type.\n            // This Binder type can deserialize a Version1Type  \n            // object to a Version2Type object.\n            formatter.Binder = new Version1ToVersion2DeserializationBinder();\n\n            obj = (Version2Type) formatter.Deserialize(fs);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n\n        // To prove that a Version2Type object was deserialized, \n        // display the object&#39;s type and fields to the console.\n        Console.WriteLine(&quot;Type of object deserialized: &quot; + obj.GetType());\n        Console.WriteLine(&quot;x = {0}, name = {1}&quot;, obj.x, obj.name);\n    }\n}\n\n\n[Serializable]\nclass Version1Type \n{\n    public Int32 x;\n}\n\n\n[Serializable]\nclass Version2Type : ISerializable \n{\n    public Int32 x;\n    public String name;\n   \n    // The security attribute demands that code that calls\n    // this method have permission to perform serialization.\n    [SecurityPermissionAttribute(SecurityAction.Demand,SerializationFormatter=true)]\n    void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) \n    {\n        info.AddValue(&quot;x&quot;, x);\n        info.AddValue(&quot;name&quot;, name);\n    }\n\n    // The security attribute demands that code that calls  \n    // this method have permission to perform serialization.\n    [SecurityPermissionAttribute(SecurityAction.Demand,SerializationFormatter=true)]\n    private Version2Type(SerializationInfo info, StreamingContext context) \n    {\n        x = info.GetInt32(&quot;x&quot;);\n        try \n        {\n            name = info.GetString(&quot;name&quot;);\n        }\n        catch (SerializationException) \n        {\n            // The &quot;name&quot; field was not serialized because Version1Type \n            // did not contain this field.\n            // Set this field to a reasonable default value.\n            name = &quot;Reasonable default value&quot;;\n        }\n    }\n}\n\n\nsealed class Version1ToVersion2DeserializationBinder : SerializationBinder \n{\n    public override Type BindToType(string assemblyName, string typeName) \n    {\n        Type typeToDeserialize = null;\n\n        // For each assemblyName/typeName that you want to deserialize to\n        // a different type, set typeToDeserialize to the desired type.\n        String assemVer1 = Assembly.GetExecutingAssembly().FullName;\n        String typeVer1 = &quot;Version1Type&quot;;\n\n        if (assemblyName == assemVer1 &amp;&amp; typeName == typeVer1) \n        {\n            // To use a type from a different assembly version, \n            // change the version number.\n            // To do this, uncomment the following line of code.\n            // assemblyName = assemblyName.Replace(&quot;1.0.0.0&quot;, &quot;2.0.0.0&quot;);\n\n            // To use a different type from the same assembly, \n            // change the type name.\n            typeName = &quot;Version2Type&quot;;\n        }\n\n        // The following line of code returns the type.\n        typeToDeserialize = Type.GetType(String.Format(&quot;{0}, {1}&quot;, \n            typeName, assemblyName));\n\n        return typeToDeserialize;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Context\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Context_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Context</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> for this formatter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.StreamingContext Context { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </div>\r\n                  <p>The streaming context to use with this formatter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> provides an enumeration that describes the source and the destination for a given serialized stream, as well as a way for serialization to retain that context and an additional caller-defined context.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_FilterLevel\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_FilterLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilterLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> of automatic deserialization the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> performs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> that represents the current automatic deserialization level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Supported values are <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> and <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> (the default). For details about deserialization levels, see <a href=\"http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b\" data-linktype=\"external\">&#91;&lt;topic://cpconAutomaticDeserializationInNETRemoting&gt;&#93;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_SurrogateSelector\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_SurrogateSelector_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SurrogateSelector</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a> that controls type substitution during serialization and deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a></div>\r\n                  </div>\r\n                  <p>The surrogate selector to use with this formatter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The surrogate selector is used by <a class=\"xref\" href=\"system.runtime.remoting\" data-linktype=\"relative-path\">System.Runtime.Remoting</a> to generate <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> instances for objects that derive from <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_TypeFormat\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_TypeFormat_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeFormat</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the format in which type descriptions are laid out in the serialized stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.formatters.formattertypestyle\" data-linktype=\"relative-path\">FormatterTypeStyle</a></div>\r\n                  </div>\r\n                  <p>The style of type layouts to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the specified stream into an object graph.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.IO.Stream serializationStream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream from which to deserialize the object graph.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The top (root) of the object graph.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> supports seeking, but its length is 0.  </p>\n<p> -or-  </p>\n<p> The target type is a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>, but the value is out of range of the <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For successful deserialization, the current position in the stream must be at the beginning of the object graph.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"BinaryFormatterClass Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\nref class App\n{\npublic:\n   static void Serialize()\n   {\n      \n      // Create a hashtable of values that will eventually be serialized.\n      Hashtable^ addresses = gcnew Hashtable;\n      addresses-&gt;Add( &quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot; );\n      addresses-&gt;Add( &quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot; );\n      addresses-&gt;Add( &quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot; );\n      \n      // To serialize the hashtable (and its keys/values),  \n      // you must first open a stream for writing. \n      // In this case we will use a file stream.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n      \n      // Construct a BinaryFormatter and use it to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n      try\n      {\n         formatter-&gt;Serialize( fs, addresses );\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n   }\n\n   static void Deserialize()\n   {\n      \n      // Declare the hashtable reference.\n      Hashtable^ addresses = nullptr;\n      \n      // Open the file containing the data that we want to deserialize.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Open );\n      try\n      {\n         BinaryFormatter^ formatter = gcnew BinaryFormatter;\n         \n         // Deserialize the hashtable from the file and \n         // assign the reference to our local variable.\n         addresses = dynamic_cast&lt;Hashtable^&gt;(formatter-&gt;Deserialize( fs ));\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to deserialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n      \n      // To prove that the table deserialized correctly, display the keys/values.\n      IEnumerator^ myEnum = addresses-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         DictionaryEntry ^ de = safe_cast&lt;DictionaryEntry ^&gt;(myEnum-&gt;Current);\n         Console::WriteLine( &quot; {0} lives at {1}.&quot;, de-&gt;Key, de-&gt;Value );\n      }\n   }\n\n};\n\n\n[STAThread]\nint main()\n{\n   App::Serialize();\n   App::Deserialize();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BinaryFormatterClass Example#1\">Imports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\n\n\nModule App\n\n    Sub Main()\n        Serialize()\n        Deserialize()\n    End Sub\n\n    Sub Serialize()\n\n        &#39; Create a hashtable of values that will eventually be serialized.\n        Dim addresses As New Hashtable\n        addresses.Add(&quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot;)\n        addresses.Add(&quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot;)\n        addresses.Add(&quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot;)\n\n        &#39; To serialize the hashtable (and its key/value pairs),  \n        &#39; you must first open a stream for writing. \n        &#39; In this case, use a file stream.\n        Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n        &#39; Construct a BinaryFormatter and use it to serialize the data to the stream.\n        Dim formatter As New BinaryFormatter\n        Try\n            formatter.Serialize(fs, addresses)\n        Catch e As SerializationException\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; &amp; e.Message)\n            Throw\n        Finally\n            fs.Close()\n        End Try\n    End Sub\n\n\n\n    Sub Deserialize()\n        &#39; Declare the hashtable reference.\n        Dim addresses As Hashtable = Nothing\n\n        &#39; Open the file containing the data that you want to deserialize.\n        Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Open)\n        Try\n            Dim formatter As New BinaryFormatter\n\n            &#39; Deserialize the hashtable from the file and \n            &#39; assign the reference to the local variable.\n            addresses = DirectCast(formatter.Deserialize(fs), Hashtable)\n        Catch e As SerializationException\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; &amp; e.Message)\n            Throw\n        Finally\n            fs.Close()\n        End Try\n\n        &#39; To prove that the table deserialized correctly, \n        &#39; display the key/value pairs.\n        Dim de As DictionaryEntry\n        For Each de In addresses\n            Console.WriteLine(&quot;{0} lives at {1}.&quot;, de.Key, de.Value)\n        Next\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"BinaryFormatterClass Example#1\">using System;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\n\npublic class App \n{\n    [STAThread]\n    static void Main() \n    {\n        Serialize();\n        Deserialize();\n    }\n\n    static void Serialize() \n    {\n        // Create a hashtable of values that will eventually be serialized.\n        Hashtable addresses = new Hashtable();\n        addresses.Add(&quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot;);\n        addresses.Add(&quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot;);\n        addresses.Add(&quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot;);\n\n        // To serialize the hashtable and its key/value pairs,  \n        // you must first open a stream for writing. \n        // In this case, use a file stream.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        // Construct a BinaryFormatter and use it to serialize the data to the stream.\n        BinaryFormatter formatter = new BinaryFormatter();\n        try \n        {\n            formatter.Serialize(fs, addresses);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n\n   \n    static void Deserialize() \n    {\n        // Declare the hashtable reference.\n        Hashtable addresses  = null;\n\n        // Open the file containing the data that you want to deserialize.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Open);\n        try \n        {\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Deserialize the hashtable from the file and \n            // assign the reference to the local variable.\n            addresses = (Hashtable) formatter.Deserialize(fs);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n\n        // To prove that the table deserialized correctly, \n        // display the key/value pairs.\n        foreach (DictionaryEntry de in addresses) \n        {\n            Console.WriteLine(&quot;{0} lives at {1}.&quot;, de.Key, de.Value);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(Stream,HeaderHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the specified stream into an object graph. The provided <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> handles any headers in that stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream from which to deserialize the object graph.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> that handles any headers in the <code>serializationStream</code>. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized object or the top object (root) of the object graph.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> supports seeking, but its length is 0.  </p>\n<p> -or-  </p>\n<p> The target type is a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>, but the value is out of range of the <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Headers are used only for specific remoting applications.  </p>\n<p> In order for deserialization to succeed the current position in the stream must be at the beginning of the object graph.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_System_Runtime_Remoting_Messaging_IMethodCallMessage_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeserializeMethodResponse(Stream,HeaderHandler,IMethodCallMessage)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes a response to a remote method call from the provided <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object DeserializeMethodResponse (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Remoting.Messaging.IMethodCallMessage methodCallMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream from which to deserialize the object graph.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> that handles any headers in the <code>serializationStream</code>. Can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodCallMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a> that contains details about where the call came from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized response to the remote method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> supports seeking, but its length is 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Details about the caller object are not sent to the remote object during the method call. Instead, these details are obtained from the original method call that is passed to the current method in the <code>methodCallMessage</code> parameter.  </p>\n<p> In order for deserialization to succeed the current position in the stream must be at the beginning of the object graph.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Serialize_System_IO_Stream_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(Stream,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the object, or graph of objects with the specified top (root), to the given stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.IO.Stream serializationStream, object graph);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to which the graph is to be serialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graph</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object at the root of the graph to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>graph</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An error has occurred during serialization, such as if an object in the <code>graph</code> parameter is not marked as serializable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"BinaryFormatterClass Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\nref class App\n{\npublic:\n   static void Serialize()\n   {\n      \n      // Create a hashtable of values that will eventually be serialized.\n      Hashtable^ addresses = gcnew Hashtable;\n      addresses-&gt;Add( &quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot; );\n      addresses-&gt;Add( &quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot; );\n      addresses-&gt;Add( &quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot; );\n      \n      // To serialize the hashtable (and its keys/values),  \n      // you must first open a stream for writing. \n      // In this case we will use a file stream.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n      \n      // Construct a BinaryFormatter and use it to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n      try\n      {\n         formatter-&gt;Serialize( fs, addresses );\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n   }\n\n   static void Deserialize()\n   {\n      \n      // Declare the hashtable reference.\n      Hashtable^ addresses = nullptr;\n      \n      // Open the file containing the data that we want to deserialize.\n      FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Open );\n      try\n      {\n         BinaryFormatter^ formatter = gcnew BinaryFormatter;\n         \n         // Deserialize the hashtable from the file and \n         // assign the reference to our local variable.\n         addresses = dynamic_cast&lt;Hashtable^&gt;(formatter-&gt;Deserialize( fs ));\n      }\n      catch ( SerializationException^ e ) \n      {\n         Console::WriteLine( &quot;Failed to deserialize. Reason: {0}&quot;, e-&gt;Message );\n         throw;\n      }\n      finally\n      {\n         fs-&gt;Close();\n      }\n\n      \n      // To prove that the table deserialized correctly, display the keys/values.\n      IEnumerator^ myEnum = addresses-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         DictionaryEntry ^ de = safe_cast&lt;DictionaryEntry ^&gt;(myEnum-&gt;Current);\n         Console::WriteLine( &quot; {0} lives at {1}.&quot;, de-&gt;Key, de-&gt;Value );\n      }\n   }\n\n};\n\n\n[STAThread]\nint main()\n{\n   App::Serialize();\n   App::Deserialize();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BinaryFormatterClass Example#1\">Imports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\n\n\nModule App\n\n    Sub Main()\n        Serialize()\n        Deserialize()\n    End Sub\n\n    Sub Serialize()\n\n        &#39; Create a hashtable of values that will eventually be serialized.\n        Dim addresses As New Hashtable\n        addresses.Add(&quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot;)\n        addresses.Add(&quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot;)\n        addresses.Add(&quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot;)\n\n        &#39; To serialize the hashtable (and its key/value pairs),  \n        &#39; you must first open a stream for writing. \n        &#39; In this case, use a file stream.\n        Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n        &#39; Construct a BinaryFormatter and use it to serialize the data to the stream.\n        Dim formatter As New BinaryFormatter\n        Try\n            formatter.Serialize(fs, addresses)\n        Catch e As SerializationException\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; &amp; e.Message)\n            Throw\n        Finally\n            fs.Close()\n        End Try\n    End Sub\n\n\n\n    Sub Deserialize()\n        &#39; Declare the hashtable reference.\n        Dim addresses As Hashtable = Nothing\n\n        &#39; Open the file containing the data that you want to deserialize.\n        Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Open)\n        Try\n            Dim formatter As New BinaryFormatter\n\n            &#39; Deserialize the hashtable from the file and \n            &#39; assign the reference to the local variable.\n            addresses = DirectCast(formatter.Deserialize(fs), Hashtable)\n        Catch e As SerializationException\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; &amp; e.Message)\n            Throw\n        Finally\n            fs.Close()\n        End Try\n\n        &#39; To prove that the table deserialized correctly, \n        &#39; display the key/value pairs.\n        Dim de As DictionaryEntry\n        For Each de In addresses\n            Console.WriteLine(&quot;{0} lives at {1}.&quot;, de.Key, de.Value)\n        Next\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"BinaryFormatterClass Example#1\">using System;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\n\npublic class App \n{\n    [STAThread]\n    static void Main() \n    {\n        Serialize();\n        Deserialize();\n    }\n\n    static void Serialize() \n    {\n        // Create a hashtable of values that will eventually be serialized.\n        Hashtable addresses = new Hashtable();\n        addresses.Add(&quot;Jeff&quot;, &quot;123 Main Street, Redmond, WA 98052&quot;);\n        addresses.Add(&quot;Fred&quot;, &quot;987 Pine Road, Phila., PA 19116&quot;);\n        addresses.Add(&quot;Mary&quot;, &quot;PO Box 112233, Palo Alto, CA 94301&quot;);\n\n        // To serialize the hashtable and its key/value pairs,  \n        // you must first open a stream for writing. \n        // In this case, use a file stream.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        // Construct a BinaryFormatter and use it to serialize the data to the stream.\n        BinaryFormatter formatter = new BinaryFormatter();\n        try \n        {\n            formatter.Serialize(fs, addresses);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n\n   \n    static void Deserialize() \n    {\n        // Declare the hashtable reference.\n        Hashtable addresses  = null;\n\n        // Open the file containing the data that you want to deserialize.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Open);\n        try \n        {\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Deserialize the hashtable from the file and \n            // assign the reference to the local variable.\n            addresses = (Hashtable) formatter.Deserialize(fs);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n\n        // To prove that the table deserialized correctly, \n        // display the key/value pairs.\n        foreach (DictionaryEntry de in addresses) \n        {\n            Console.WriteLine(&quot;{0} lives at {1}.&quot;, de.Key, de.Value);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Serialize_System_IO_Stream_System_Object_System_Runtime_Remoting_Messaging_Header___\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(Stream,Object,Header[])</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the object, or graph of objects with the specified top (root), to the given stream attaching the provided headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.IO.Stream serializationStream, object graph, System.Runtime.Remoting.Messaging.Header[] headers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to which the object is to be serialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graph</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object at the root of the graph to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>headers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.header\" data-linktype=\"relative-path\">Header</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Remoting headers to include in the serialization. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An error has occurred during serialization, such as if an object in the <code>graph</code> parameter is not marked as serializable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The serialization process includes the information supplied in the <code>headers</code> parameter at the front of the serialized stream.  </p>\n<p> Headers are used only for specific remoting applications.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_UnsafeDeserialize_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_UnsafeDeserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnsafeDeserialize(Stream,HeaderHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the specified stream into an object graph. The provided <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> handles any headers in that stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object UnsafeDeserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream from which to deserialize the object graph.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> that handles any headers in the <code>serializationStream</code>. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized object or the top object (root) of the object graph.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> supports seeking, but its length is 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Headers are used only for specific remoting applications.  </p>\n<p> This method uses <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityAction</a> to prevent it from being called from untrusted code; only the immediate caller is required to have <a class=\"xref\" href=\"system.security.permissions.securitypermissionattribute#System_Security_Permissions_SecurityPermissionAttribute_SerializationFormatter_\" data-linktype=\"relative-path\">SerializationFormatter</a> permission. Do not use this method if your code can be called from partially trusted code. In partially trusted scenarios, use <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> instead. In full trust scenarios, UnsafeDeserialize provides better performance than <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a>.  </p>\n<p> For successful deserialization, the current position in the stream must be at the beginning of the object graph.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_UnsafeDeserializeMethodResponse_System_IO_Stream_System_Runtime_Remoting_Messaging_HeaderHandler_System_Runtime_Remoting_Messaging_IMethodCallMessage_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_UnsafeDeserializeMethodResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnsafeDeserializeMethodResponse(Stream,HeaderHandler,IMethodCallMessage)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes a response to a remote method call from the provided <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object UnsafeDeserializeMethodResponse (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Remoting.Messaging.IMethodCallMessage methodCallMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream from which to deserialize the object graph.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.messaging.headerhandler\" data-linktype=\"relative-path\">HeaderHandler</a> that handles any headers in the <code>serializationStream</code>. Can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodCallMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a> that contains details about where the call came from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized response to the remote method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationStream</code> supports seeking, but its length is 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Details about the caller object are not sent to the remote object during the method call. Instead, these details are obtained from the original method call that is passed to the current method in the <code>methodCallMessage</code> parameter.  </p>\n<p> This method uses <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityAction</a> to prevent it from being called from untrusted code; only the immediate caller is required to have <a class=\"xref\" href=\"system.security.permissions.securitypermissionattribute#System_Security_Permissions_SecurityPermissionAttribute_SerializationFormatter_\" data-linktype=\"relative-path\">SerializationFormatter</a> permission. Do not use this method if your code can be called from partially trusted code. In partially trusted scenarios, use <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_\" data-linktype=\"relative-path\">DeserializeMethodResponse</a> instead. In full trust scenarios, UnsafeDeserializeMethodResponse provides better performance than <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_DeserializeMethodResponse_\" data-linktype=\"relative-path\">DeserializeMethodResponse</a>.  </p>\n<p> For successful deserialization, the current position in the stream must be at the beginning of the object graph.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserialize\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserializeMethodResponse\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b2d9a57e-790d-3376-5f40-6641f45f030f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Serializes and deserializes an object, or an entire graph of connected objects, in binary format.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization.Formatters.Binary/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.Formatters.Binary.BinaryFormatter","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter..ctor","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserialize","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserializeMethodResponse"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.Formatters.Binary.BinaryFormatter","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::#ctor","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::AssemblyFormat","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::Binder","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::Context","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::Deserialize","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::DeserializeMethodResponse","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::FilterLevel","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::Serialize","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::SurrogateSelector","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::TypeFormat","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserialize","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::UnsafeDeserialize","System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserializeMethodResponse","System::Runtime::Serialization::Formatters::Binary::BinaryFormatter::UnsafeDeserializeMethodResponse"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b2d9a57e-790d-3376-5f40-6641f45f030f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization.Formatters.Binary/BinaryFormatter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BinaryFormatter class | Microsoft Docs","_op_ogTitle":"BinaryFormatter class","description":"Serializes and deserializes an object, or an entire graph of connected objects, in binary format.\n","toc_asset_id":"_splitted/System.Runtime.Serialization.Formatters.Binary/toc.json","toc_rel":"_splitted/System.Runtime.Serialization.Formatters.Binary/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.formatters.binary.binaryformatter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.formatters.binary.binaryformatter","fileRelativePath":"System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.html"},"themesRelativePathToOutputRoot":"_themes/"}