{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EventLogInstaller</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Allows you to install and configure an event log that your application reads from or writes to when running.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class EventLogInstaller : System.Configuration.Install.ComponentInstaller</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.componentinstaller\" data-linktype=\"relative-path\">System.Configuration.Install.ComponentInstaller</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">EventLogInstaller</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterInstall\" data-linktype=\"relative-path\">AfterInstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterRollback\" data-linktype=\"relative-path\">AfterRollback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_AfterUninstall\" data-linktype=\"relative-path\">AfterUninstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeInstall\" data-linktype=\"relative-path\">BeforeInstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeRollback\" data-linktype=\"relative-path\">BeforeRollback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_BeforeUninstall\" data-linktype=\"relative-path\">BeforeUninstall</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_System_Collections_IDictionary_\" data-linktype=\"relative-path\">Commit(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Committed\" data-linktype=\"relative-path\">Committed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Committing\" data-linktype=\"relative-path\">Committing</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context\" data-linktype=\"relative-path\">Context</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_HelpText\" data-linktype=\"relative-path\">HelpText</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers\" data-linktype=\"relative-path\">Installers</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterInstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterInstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterRollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterRollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnAfterUninstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnAfterUninstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeInstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeInstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeRollback_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeRollback(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnBeforeUninstall_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnBeforeUninstall(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnCommitted_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnCommitted(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_OnCommitting_System_Collections_IDictionary_\" data-linktype=\"relative-path\">OnCommitting(IDictionary)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent\" data-linktype=\"relative-path\">Parent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The EventLogInstaller is used by the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a> when installing an event log. The EventLogInstaller class can install event logs only on the local computer.  </p>\n<p> Use the EventLogInstaller class when your application writes to an event log; it is not necessary to use an event log installer for your application to read from an event log. Applications and services should write to the Application log or a custom log. Device drivers should write to the System log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Security log is read-only.  </p>\n</div>\n<p> The installer creates the event source that you specify in the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property and registers it for the event log specified in <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Log_\" data-linktype=\"relative-path\">Log</a> property. This behavior is similar to calling <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> on the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component.  </p>\n<p> Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> methods to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configurations. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an EventLogInstaller, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  </p>\n<p> To install an event log, create a project installer class that inherits from <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a>, and set the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> for the class to <code>true</code>. Within your project, create an EventLogInstaller for each event log that your application will write to and add the instance to your project installer class.  </p>\n<p> When the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a> is called, it looks at the <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a>. If it is <code>true</code>, the tool installs all the items in the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection that are associated with your project installer. If <a class=\"xref\" href=\"system.componentmodel.runinstallerattribute\" data-linktype=\"relative-path\">RunInstallerAttribute</a> is <code>false</code>, the tool ignores the project installer.  </p>\n<p> You modify other properties of an EventLogInstaller either before or after adding the instance to the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Installers_\" data-linktype=\"relative-path\">Installers</a> collection of your project installer, but before the installer tool runs. You must set the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property if your application will be writing to the event log.  </p>\n<p> Use EventLogInstaller to register a new source for a new or existing event log; do not use EventLogInstaller to change an existing source. The EventLogInstaller class does not modify the configuration properties of an existing source to match the specified installation properties. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method throws an exception if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property matches a source name that is registered for a different event log on the computer. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method does not register the source if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property matches a source name that is already registered for the same event log specified in the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Log_\" data-linktype=\"relative-path\">Log</a> property.  </p>\n<p> You can register the event source with localized resource files for your event category and message strings. Your application can write event log entries using resource identifiers, rather than specifying the actual string. The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings. You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_CategoryCount_\" data-linktype=\"relative-path\">CategoryCount</a>, <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_CategoryResourceFile_\" data-linktype=\"relative-path\">CategoryResourceFile</a>, <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_MessageResourceFile_\" data-linktype=\"relative-path\">MessageResourceFile</a>, and <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_ParameterResourceFile_\" data-linktype=\"relative-path\">ParameterResourceFile</a> properties to configure the source to write localized entries to the event log. If your application writes strings values directly to the event log, you do not need to set these properties.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Create a different source without resource files and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<p> Typically, you do not call the methods of the EventLogInstaller class from within your code; they are generally called only by Installutil.exe. The tool automatically calls the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method during the installation process. It backs out failures, if necessary, by calling the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Rollback_\" data-linktype=\"relative-path\">Rollback</a> method for the object that generated the exception.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EventLogInstaller()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventLogInstaller ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_CategoryCount\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CategoryCount</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the number of categories in the category resource file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CategoryCount { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of categories in the category resource file. The default value is zero.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the CategoryCount and <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_CategoryResourceFile_\" data-linktype=\"relative-path\">CategoryResourceFile</a> properties to write events with localized category strings. The Event Viewer displays the category for an event entry, if you supply a category when you write the event. Event log categories are application-defined strings that help filter events, or provide information on an event. For example, your application can define separate categories for different components or different operations.  </p>\n<p> Event categories are optional; if your application does not use categories, do not set the CategoryCount and <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_CategoryResourceFile_\" data-linktype=\"relative-path\">CategoryResourceFile</a> properties.  </p>\n<p> For details about defining event messages and building event resource files, see the &quot;Message Compiler&quot; topic in the Platform SDK documentation at <a href=\"http://msdn.microsoft.com/\" data-linktype=\"external\">http://msdn.microsoft.com</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_CategoryResourceFile\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CategoryResourceFile</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the path of the resource file that contains category strings for the source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string CategoryResourceFile { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path of the category resource file. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_CategoryCount_\" data-linktype=\"relative-path\">CategoryCount</a> and CategoryResourceFile properties to write events with localized category strings. The Event Viewer displays the category for an event entry if you supply a category when you write the event. Event log categories are application-defined strings that help filter events, or provide information about an event. For example, your application might have separate categories for different components or different operations.  </p>\n<p> Event categories are optional; if your application does not use categories, do not set the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_CategoryCount_\" data-linktype=\"relative-path\">CategoryCount</a> and CategoryResourceFile properties.  </p>\n<p> For details about defining event messages and building event resource files, see the &quot;Message Compiler&quot; topic in the Platform SDK documentation at <a href=\"http://msdn.microsoft.com/\" data-linktype=\"external\">http://msdn.microsoft.com</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_Log\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Log</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the log to set the source to.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Log { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log. This can be Application, System, or a custom log name. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use the Log property to associate the source you specify in the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property with either an existing log or a new log on the local computer. The <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a> uses this information to map the source to the log in the computer&#39;s registry. Applications and services should write to the Application log or a custom log. Device drivers should write to the System log.  </p>\n<p> To write entries to an event log, you must create a source and register it with an event log. An event source can only write to one log at a time. The installer uses the value of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property to register your application with the event log as a valid source of entries. If you do not specify a log name before the installer runs, the installer registers your source to the Application log. If you specify a new source and an existing log, the installer creates a new event source and associates it with the log you specify. If you specify both a new source and a new log, the installer associates the new source with the new log in the registry, but the log is not created until the first entry is written to it.  </p>\n<p> The operating system stores event logs as files. When you use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the Log property with the &quot;.evt&quot; file name extension.  </p>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to register a new source for a new or existing event log; do not use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to change an existing source. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> class does not modify the configuration properties of an existing source to match the specified installation properties. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method throws an exception if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property matches a source name that is registered for a different event log on the computer. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method does not register the source if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property matches a source name that is already registered for the same event log specified in the Log property.  </p>\n<p> For more detailed information about the behaviors of event logs and sources, see the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class documentation for the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_MessageResourceFile\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MessageResourceFile</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the path of the resource file that contains message formatting strings for the source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string MessageResourceFile { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path of the message resource file. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the MessageResourceFile property to configure an event log source to write localized event messages. Event messages are application-defined strings that describe the event to the user.  </p>\n<p> Your application can write event log entries using resource identifiers. A resource identifier indexes a message located in the MessageResourceFile. The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.  </p>\n<p> The event source must be configured either for writing localized entries or for writing direct strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write localized entries for a source configured with a message resource file.  </p>\n<p> If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the MessageResourceFile property.  </p>\n<p> If the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property is not the local computer identifier (&quot;.&quot;), the .NET Framework assumes that the resource file is on a remote computer. If the MessageResourceFile property value contains a drive letter, the resource file is assumed to be on the \\\\<machinename\\>\\<drive\\>$ share (for example, \\\\server\\c$). If the value contains the string %systemroot%, the resource file is assumed to be on the \\\\<machinename\\>\\admin$ share (for example, \\\\server\\admin$).  <p>\n<p> For details about defining event messages and building event resource files, see the &quot;Message Compiler&quot; topic in the Platform SDK documentation at <a href=\"http://msdn.microsoft.com/\" data-linktype=\"external\">http://msdn.microsoft.com</a>.</p>\n</machinename\\></drive\\></machinename\\>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_ParameterResourceFile\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParameterResourceFile</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the path of the resource file that contains message parameter strings for the source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ParameterResourceFile { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path of the message parameter resource file. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ParameterResourceFile property to configure an event log source to write localized event messages with inserted parameter strings. Each localized event message specified in the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_MessageResourceFile_\" data-linktype=\"relative-path\">MessageResourceFile</a> property can contain placeholders for insertion strings. These placeholders are used to specify the position and resource identifier for a language-independent string within the event message. The Event Viewer replaces the placeholders with the corresponding strings from the ParameterResourceFile and formats the event log message for the localized event entry.  </p>\n<p> For example, the following section of a message text file defines a string with a parameter placeholder:  </p>\n<pre><code>\nMessageId = 1501  \nSeverity = Success  \nFacility = Application  \nSymbolicName = COMPONENT_STARTING  \nLanguage=English  \nComponent %%6050 is starting.  \n.  \n</code></pre><p> Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:  </p>\n<pre><code>MessageId = 6050  \nSeverity = Success  \nFacility = Application  \nSymbolicName = COMPONENT_NAME_MSGID  \nLanguage=English  \nTRIGGER.EXE  \n.  \n</code></pre><p> The event source must be configured either for writing localized entries or for writing direct strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write localized entries for a source configured with a message resource file.  </p>\n<p> If your application writes event message strings directly to the event log, or if your <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_MessageResourceFile_\" data-linktype=\"relative-path\">MessageResourceFile</a> does not contain messages with parameter insertion placeholders, do not set the ParameterResourceFile property.  </p>\n<p> For details about defining event messages and building event resource files, see the &quot;Message Compiler&quot; topic in the Platform SDK documentation at <a href=\"http://msdn.microsoft.com/\" data-linktype=\"external\">http://msdn.microsoft.com</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_Source\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Source</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the source name to register with the log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Source { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name to register with the event log as a source of entries. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The event source indicates what logs the event. It is often the name of the application, or the name of a component within a large application.  </p>\n<p> The installer uses the value of the Source property to register your application with the event log as a valid source of entries. A new source name cannot match an existing source name or an existing event log name. Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  </p>\n<p> Applications and services should write to the Application log or a custom log. Device drivers should write to the System log. If you do not specify a log name before the installer runs, the installer registers your source to the Application log. If you specify the name of a log that does not exist, the system registers the Source to that log, but the log is not created until the first entry is written to it.  </p>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to register a new source for a new or existing event log; do not use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to change an existing source. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> class does not modify the configuration properties of an existing source to match the specified installation properties. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method throws an exception if the Source property matches a source name that is registered for a different event log on the computer. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method does not register the source if the Source property matches a source name that is already registered for the same event log specified in the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Log_\" data-linktype=\"relative-path\">Log</a> property.  </p>\n<p> For more detailed information about the behaviors of event logs and sources, see the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class documentation for the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> properties.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_UninstallAction\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UninstallAction</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a> should remove the event log or leave it in its installed state at uninstall time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Configuration.Install.UninstallAction UninstallAction { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.uninstallaction\" data-linktype=\"relative-path\">UninstallAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.configuration.install.uninstallaction\" data-linktype=\"relative-path\">UninstallAction</a> values that indicates what state to leave the event log in when the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> is uninstalled. The default is <code>Remove</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>UninstallAction contains an invalid value. The only valid values for this property are <code>Remove</code> and <code>NoAction</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you install an event log, you can optionally connect it to an existing log. If you do so, you must decide whether the log should return to its pre-installation state, or remain in its current, post-installation state. If you elect to return the event log to its pre-installation state, changes to the event log entries at installation are not restored. You can reset only the event log properties that are associated with the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to their pre-installation values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_CopyFromComponent_System_ComponentModel_IComponent_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CopyFromComponent(IComponent)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies the property values of an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component that are required at installation time for an event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void CopyFromComponent (System.ComponentModel.IComponent component);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>component</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> to use as a template for the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified component is not an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.EventLog.Log*</span> or <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the specified component is either <code>null</code> or empty.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The component specified by the <code>component</code> parameter must be an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>; otherwise, an exception is thrown.  </p>\n<p> Typically, you do not call the methods of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> from within your code; they are generally called only by the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a>. CopyFromComponent is used by Installutil.exe to set the property values for the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to the values of an existing <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.  </p>\n<p> If the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> that is passed in is an empty string (&quot;&quot;), you must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property to a valid value before the installer executes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_Install_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Install(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the installation and writes event log information to the registry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Install (System.Collections.IDictionary stateSaver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stateSaver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> used to save information needed to perform a rollback or uninstall operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The platform the installer is trying to use is not Windows NT 4.0 or later.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The name specified in the <span class=\"xref\">stem.Diagnostics.EventLogInstaller.Source*</span> property is already registered for a different event log.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Install method writes event log information to the registry, and associates the event log with a log that is specified by the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Log_\" data-linktype=\"relative-path\">Log</a> property. If the log does not already exist (and a source is specified), Install creates a log and associates the new source with it.  </p>\n<p> Typically, you do not call the methods of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> from within your code; they are generally called only by the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a>. The tool automatically calls the Install method during the installation process to write registry information that is associated with the event log being installed. Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously-installed components are rolled back to their pre-installation states. This is accomplished by calling each component&#39;s <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Rollback_\" data-linktype=\"relative-path\">Rollback</a> method.  </p>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to register a new source for a new or existing event log; do not use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> to change an existing source. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> class does not modify the configuration properties of an existing source to match the specified installation properties. The Install method throws an exception if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property matches a source name that is registered for a different event log on the computer. The Install method skips registering the source if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> property matches a source name that is already registered for the same event log specified in the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Log_\" data-linktype=\"relative-path\">Log</a> property.  </p>\n<p> An application&#39;s install routine uses the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a> property to automatically maintain information about the components that have already been installed. This state information, which is passed to Install as the <code>stateSaver</code> parameter, is continuously updated as the tool installs each <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>. Usually, it is not necessary for your code to explicitly modify this state information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_IsEquivalentInstaller_System_Configuration_Install_ComponentInstaller_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsEquivalentInstaller(ComponentInstaller)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether an installer and another specified installer refer to the same source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>otherInstaller</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.componentinstaller\" data-linktype=\"relative-path\">System.Configuration.Install.ComponentInstaller</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The installer to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if this installer and the installer specified by the <code>otherInstaller</code> parameter would install or uninstall the same source; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Typically, you do not call the methods of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> from within your code; they are generally called only by the Installer tool (Installutil.exe).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_Rollback_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Rollback(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Restores the computer to the state it was in before the installation by rolling back the event log information that the installation procedure wrote to the registry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Rollback (System.Collections.IDictionary savedState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>savedState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that contains the pre-installation state of the computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Rollback method undoes the effects of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method. Rollback is called if the installation of any component in the installation project fails. The <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Install_\" data-linktype=\"relative-path\">Install</a> method creates or sets the properties for an event log and event source. Rollback either deletes the event log and source or resets the properties of a pre-existing source to its pre-installation values.  </p>\n<p> Typically, you do not call the methods of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> from within your code; they are generally called only by the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a>. The tool calls the Rollback method, when this or another component has failed to install, to undo any changes that the installation process has already made.  </p>\n<p> An application&#39;s install routine uses the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a> property to automatically maintain information about the components that have already been installed. This state information, which is passed to Rollback as the <code>savedState</code> parameter, is continuously updated as the tool rolls back each <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>. Usually, it is not necessary for your code to explicitly modify this state information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLogInstaller_Uninstall_System_Collections_IDictionary_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Uninstall(IDictionary)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes an installation by removing event log information from the registry.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override void Uninstall (System.Collections.IDictionary savedState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>savedState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that contains the pre-installation state of the computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_UninstallAction_\" data-linktype=\"relative-path\">UninstallAction</a> property value is <code>Remove</code>, the Uninstall method deletes the source and the associated log that the installer created if the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventloginstaller#System_Diagnostics_EventLogInstaller_Source_\" data-linktype=\"relative-path\">Source</a> properties specified the creation of a new event log and source.  </p>\n<p> Typically, you do not call the methods of the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> from within your code; they are generally called only by the <a href=\"../Topic/Installutil.exe%20(Installer%20Tool).md\" data-linktype=\"relative-path\">Installutil.exe (Installer Tool)</a> in uninstall mode. The tool automatically calls the Uninstall method to restore the parts of the system that were affected by the installation to their pre-installation states. This includes deleting registry information that is associated with the event log being uninstalled.  </p>\n<p> An application&#39;s uninstall routine uses the project installer&#39;s <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Context_\" data-linktype=\"relative-path\">Context</a> property to automatically maintain information about the components that have already been uninstalled. This state information, which is passed to Uninstall as the <code>savedState</code> parameter, is continuously updated as the tool uninstalls each <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>. Usually, it is not necessary for your code to explicitly modify this state information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.EventLogInstaller.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.EventLogInstaller.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.CategoryCount\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.CategoryResourceFile\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.CopyFromComponent\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.Install\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.IsEquivalentInstaller\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.Log\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.MessageResourceFile\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.ParameterResourceFile\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.Rollback\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.Source\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.Uninstall\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogInstaller.UninstallAction\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.Install.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8728a434-f732-1b69-e922-7dac2141d3f7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows you to install and configure an event log that your application reads from or writes to when running.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.EventLogInstaller\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.EventLogInstaller.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.EventLogInstaller.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.EventLogInstaller","System.Diagnostics.EventLogInstaller..ctor","System.Diagnostics.EventLogInstaller.CategoryCount","System.Diagnostics.EventLogInstaller.CategoryResourceFile","System.Diagnostics.EventLogInstaller.CopyFromComponent","System.Diagnostics.EventLogInstaller.Install","System.Diagnostics.EventLogInstaller.IsEquivalentInstaller","System.Diagnostics.EventLogInstaller.Log","System.Diagnostics.EventLogInstaller.MessageResourceFile","System.Diagnostics.EventLogInstaller.ParameterResourceFile","System.Diagnostics.EventLogInstaller.Rollback","System.Diagnostics.EventLogInstaller.Source","System.Diagnostics.EventLogInstaller.Uninstall","System.Diagnostics.EventLogInstaller.UninstallAction"],"api_location":["System.Configuration.Install.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.EventLogInstaller","System::Diagnostics::EventLogInstaller","System.Diagnostics.EventLogInstaller.#ctor","System::Diagnostics::EventLogInstaller::#ctor","System.Diagnostics.EventLogInstaller.CategoryCount","System::Diagnostics::EventLogInstaller::CategoryCount","System.Diagnostics.EventLogInstaller.CategoryResourceFile","System::Diagnostics::EventLogInstaller::CategoryResourceFile","System.Diagnostics.EventLogInstaller.CopyFromComponent","System::Diagnostics::EventLogInstaller::CopyFromComponent","System.Diagnostics.EventLogInstaller.Install","System::Diagnostics::EventLogInstaller::Install","System.Diagnostics.EventLogInstaller.IsEquivalentInstaller","System::Diagnostics::EventLogInstaller::IsEquivalentInstaller","System.Diagnostics.EventLogInstaller.Log","System::Diagnostics::EventLogInstaller::Log","System.Diagnostics.EventLogInstaller.MessageResourceFile","System::Diagnostics::EventLogInstaller::MessageResourceFile","System.Diagnostics.EventLogInstaller.ParameterResourceFile","System::Diagnostics::EventLogInstaller::ParameterResourceFile","System.Diagnostics.EventLogInstaller.Rollback","System::Diagnostics::EventLogInstaller::Rollback","System.Diagnostics.EventLogInstaller.Source","System::Diagnostics::EventLogInstaller::Source","System.Diagnostics.EventLogInstaller.Uninstall","System::Diagnostics::EventLogInstaller::Uninstall","System.Diagnostics.EventLogInstaller.UninstallAction","System::Diagnostics::EventLogInstaller::UninstallAction"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8728a434-f732-1b69-e922-7dac2141d3f7","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/EventLogInstaller.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventLogInstaller class | Microsoft Docs","_op_ogTitle":"EventLogInstaller class","description":"Allows you to install and configure an event log that your application reads from or writes to when running.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.EventLogInstaller","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.eventloginstaller","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.eventloginstaller","fileRelativePath":"System.Diagnostics.EventLogInstaller.html"},"themesRelativePathToOutputRoot":"_themes/"}