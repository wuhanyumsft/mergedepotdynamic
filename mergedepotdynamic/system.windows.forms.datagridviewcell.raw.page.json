{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridViewCell\">\r\n      <span class=\"lang-csharp\">DataGridViewCell</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an individual cell in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellConverter))]\npublic abstract class DataGridViewCell : System.Windows.Forms.DataGridViewElement, ICloneable, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewElement</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridViewCell</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_DataGridView\" data-linktype=\"relative-path\">DataGridView</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellClick(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentClick(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentDoubleClick(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellValueChanged(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseDataError_System_Windows_Forms_DataGridViewDataErrorEventArgs_\" data-linktype=\"relative-path\">RaiseDataError(DataGridViewDataErrorEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseWheel(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State\" data-linktype=\"relative-path\">State</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataGridViewCell class represents an individual cell in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. You can retrieve cells through the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Cells_\" data-linktype=\"relative-path\">Cells</a> collection of a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.  </p>\n<p> The row and column for a DataGridViewCell identify the cell&#39;s location in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. A typical cell contains data specific to the row and column in which it is contained. The cell can be customized in a number of ways by setting its properties and handling the events associated with it.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell__ctor\" data-linktype=\"self-bookmark\">DataGridViewCell()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_AccessibilityObject\" data-linktype=\"self-bookmark\">AccessibilityObject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell.datagridviewcellaccessibleobject\" data-linktype=\"relative-path\">DataGridViewCell+DataGridViewCellAccessibleObject</a> assigned to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ColumnIndex\" data-linktype=\"self-bookmark\">ColumnIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the column index for this cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ContentBounds\" data-linktype=\"self-bookmark\">ContentBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the bounding rectangle that encloses the cell&#39;s content area.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ContextMenuStrip\" data-linktype=\"self-bookmark\">ContextMenuStrip</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the shortcut menu associated with the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_DefaultNewRowValue\" data-linktype=\"self-bookmark\">DefaultNewRowValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default value for a cell in the row for new records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Displayed\" data-linktype=\"self-bookmark\">Displayed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the cell is currently displayed on-screen.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_EditedFormattedValue\" data-linktype=\"self-bookmark\">EditedFormattedValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_EditType\" data-linktype=\"self-bookmark\">EditType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the cell&#39;s hosted editing control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ErrorIconBounds\" data-linktype=\"self-bookmark\">ErrorIconBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the bounds of the error icon for the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ErrorText\" data-linktype=\"self-bookmark\">ErrorText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text describing an error condition associated with the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_FormattedValue\" data-linktype=\"self-bookmark\">FormattedValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the cell as formatted for display.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_FormattedValueType\" data-linktype=\"self-bookmark\">FormattedValueType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the formatted value associated with the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Frozen\" data-linktype=\"self-bookmark\">Frozen</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the cell is frozen.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_HasStyle\" data-linktype=\"self-bookmark\">HasStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Style*</span> property has been set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_InheritedState\" data-linktype=\"self-bookmark\">InheritedState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current state of the cell as inherited from the state of its row and column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_InheritedStyle\" data-linktype=\"self-bookmark\">InheritedStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the style currently applied to the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_IsInEditMode\" data-linktype=\"self-bookmark\">IsInEditMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether this cell is currently being edited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OwningColumn\" data-linktype=\"self-bookmark\">OwningColumn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the column that contains this cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OwningRow\" data-linktype=\"self-bookmark\">OwningRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the row that contains this cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_PreferredSize\" data-linktype=\"self-bookmark\">PreferredSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size, in pixels, of a rectangular area into which the cell can fit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ReadOnly\" data-linktype=\"self-bookmark\">ReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the cell&#39;s data can be edited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Resizable\" data-linktype=\"self-bookmark\">Resizable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the cell can be resized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_RowIndex\" data-linktype=\"self-bookmark\">RowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the cell&#39;s parent row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Selected\" data-linktype=\"self-bookmark\">Selected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the cell has been selected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Size\" data-linktype=\"self-bookmark\">Size</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size of the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Style\" data-linktype=\"self-bookmark\">Style</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the style for the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Tag\" data-linktype=\"self-bookmark\">Tag</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object that contains supplemental data about the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ToolTipText\" data-linktype=\"self-bookmark\">ToolTipText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the ToolTip text associated with this cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value associated with this cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ValueType\" data-linktype=\"self-bookmark\">ValueType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data type of the values in the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Visible\" data-linktype=\"self-bookmark\">Visible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the cell is in a row or column that has been hidden.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_AdjustCellBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Modifies the input cell border style according to the specified criteria.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_BorderWidths_System_Windows_Forms_DataGridViewAdvancedBorderStyle_\" data-linktype=\"self-bookmark\">BorderWidths(DataGridViewAdvancedBorderStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the widths of all the cell margins.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">ClickUnsharesRow(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ContentClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">ContentClickUnsharesRow(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell&#39;s content is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ContentDoubleClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell&#39;s content is double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_CreateAccessibilityInstance\" data-linktype=\"self-bookmark\">CreateAccessibilityInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new accessible object for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_DetachEditingControl\" data-linktype=\"self-bookmark\">DetachEditingControl()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the cell&#39;s editing control from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_DoubleClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">DoubleClickUnsharesRow(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell is double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_EnterUnsharesRow_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">EnterUnsharesRow(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the parent row will be unshared when the focus moves to the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources and performs other cleanup operations before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetClipboardContent_System_Int32_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_String_\" data-linktype=\"self-bookmark\">GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the formatted value of the cell to copy to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetContentBounds_System_Int32_\" data-linktype=\"self-bookmark\">GetContentBounds(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the bounding rectangle that encloses the cell&#39;s content area using a default <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and cell style currently in effect for the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetContentBounds_System_Drawing_Graphics_System_Windows_Forms_DataGridViewCellStyle_System_Int32_\" data-linktype=\"self-bookmark\">GetContentBounds(Graphics,DataGridViewCellStyle,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the bounding rectangle that encloses the cell&#39;s content area, which is calculated using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and cell style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetEditedFormattedValue_System_Int32_System_Windows_Forms_DataGridViewDataErrorContexts_\" data-linktype=\"self-bookmark\">GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetErrorIconBounds_System_Drawing_Graphics_System_Windows_Forms_DataGridViewCellStyle_System_Int32_\" data-linktype=\"self-bookmark\">GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the bounding rectangle that encloses the cell&#39;s error icon, if one is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetErrorText_System_Int32_\" data-linktype=\"self-bookmark\">GetErrorText(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string that represents the error for the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetFormattedValue_System_Object_System_Int32_System_Windows_Forms_DataGridViewCellStyle__System_ComponentModel_TypeConverter_System_ComponentModel_TypeConverter_System_Windows_Forms_DataGridViewDataErrorContexts_\" data-linktype=\"self-bookmark\">GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the cell as formatted for display.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetInheritedContextMenuStrip_System_Int32_\" data-linktype=\"self-bookmark\">GetInheritedContextMenuStrip(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the inherited shortcut menu for the current cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetInheritedState_System_Int32_\" data-linktype=\"self-bookmark\">GetInheritedState(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating the current state of the cell as inherited from the state of its row and column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetInheritedStyle_System_Windows_Forms_DataGridViewCellStyle_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the style applied to the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetPreferredSize_System_Drawing_Graphics_System_Windows_Forms_DataGridViewCellStyle_System_Int32_System_Drawing_Size_\" data-linktype=\"self-bookmark\">GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calculates the preferred size, in pixels, of the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetSize_System_Int32_\" data-linktype=\"self-bookmark\">GetSize(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size of the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_GetValue_System_Int32_\" data-linktype=\"self-bookmark\">GetValue(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_InitializeEditingControl_System_Int32_System_Object_System_Windows_Forms_DataGridViewCellStyle_\" data-linktype=\"self-bookmark\">InitializeEditingControl(Int32,Object,DataGridViewCellStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the control used to edit the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_KeyDownUnsharesRow_System_Windows_Forms_KeyEventArgs_System_Int32_\" data-linktype=\"self-bookmark\">KeyDownUnsharesRow(KeyEventArgs,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the parent row is unshared if the user presses a key while the focus is on the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_KeyEntersEditMode_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"self-bookmark\">KeyEntersEditMode(KeyEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines if edit mode should be started based on the given key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_KeyPressUnsharesRow_System_Windows_Forms_KeyPressEventArgs_System_Int32_\" data-linktype=\"self-bookmark\">KeyPressUnsharesRow(KeyPressEventArgs,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared if a key is pressed while a cell in the row has focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_KeyUpUnsharesRow_System_Windows_Forms_KeyEventArgs_System_Int32_\" data-linktype=\"self-bookmark\">KeyUpUnsharesRow(KeyEventArgs,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the parent row is unshared when the user releases a key while the focus is on the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_LeaveUnsharesRow_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">LeaveUnsharesRow(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared when the focus leaves a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MeasureTextHeight_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Int32_System_Windows_Forms_TextFormatFlags_\" data-linktype=\"self-bookmark\">MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the height, in pixels, of the specified text, given the specified characteristics.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MeasureTextHeight_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Int32_System_Windows_Forms_TextFormatFlags_System_Boolean__\" data-linktype=\"self-bookmark\">MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the height, in pixels, of the specified text, given the specified characteristics. Also indicates whether the required width is greater than the specified maximum width.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MeasureTextPreferredSize_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Single_System_Windows_Forms_TextFormatFlags_\" data-linktype=\"self-bookmark\">MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ideal height and width of the specified text given the specified characteristics.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MeasureTextSize_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Windows_Forms_TextFormatFlags_\" data-linktype=\"self-bookmark\">MeasureTextSize(Graphics,String,Font,TextFormatFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the height and width of the specified text given the specified characteristics.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MeasureTextWidth_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Int32_System_Windows_Forms_TextFormatFlags_\" data-linktype=\"self-bookmark\">MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the width, in pixels, of the specified text given the specified characteristics.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseClickUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared if the user clicks a mouse button while the pointer is on a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseDoubleClickUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared if the user double-clicks a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseDownUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared when the user holds down a mouse button while the pointer is on a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseEnterUnsharesRow_System_Int32_\" data-linktype=\"self-bookmark\">MouseEnterUnsharesRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseLeaveUnsharesRow_System_Int32_\" data-linktype=\"self-bookmark\">MouseLeaveUnsharesRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared when the mouse pointer leaves the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseMoveUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_MouseUpUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a row will be unshared when the user releases a mouse button while the pointer is on a cell in the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the cell is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnContentClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the cell&#39;s contents are clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnContentDoubleClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the cell&#39;s contents are double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnDataGridViewChanged\" data-linktype=\"self-bookmark\">OnDataGridViewChanged()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property of the cell changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnDoubleClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the cell is double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnEnter_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">OnEnter(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the focus moves to a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnKeyDown_System_Windows_Forms_KeyEventArgs_System_Int32_\" data-linktype=\"self-bookmark\">OnKeyDown(KeyEventArgs,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when a character key is pressed while the focus is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_System_Int32_\" data-linktype=\"self-bookmark\">OnKeyPress(KeyPressEventArgs,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when a key is pressed while the focus is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnKeyUp_System_Windows_Forms_KeyEventArgs_System_Int32_\" data-linktype=\"self-bookmark\">OnKeyUp(KeyEventArgs,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when a character key is released while the focus is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnLeave_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">OnLeave(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the focus moves from a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the user clicks a mouse button while the pointer is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseDoubleClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the user double-clicks a mouse button while the pointer is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseDown_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseDown(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the user holds down a mouse button while the pointer is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseEnter_System_Int32_\" data-linktype=\"self-bookmark\">OnMouseEnter(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the mouse pointer moves over a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseLeave_System_Int32_\" data-linktype=\"self-bookmark\">OnMouseLeave(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the mouse pointer leaves the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseMove_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseMove(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the mouse pointer moves within a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_OnMouseUp_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseUp(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the user releases a mouse button while the pointer is on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_Paint_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Int32_System_Windows_Forms_DataGridViewElementStates_System_Object_System_Object_System_String_System_Windows_Forms_DataGridViewCellStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewPaintParts_\" data-linktype=\"self-bookmark\">Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_PaintBorder_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewCellStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_\" data-linktype=\"self-bookmark\">PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the border of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_PaintErrorIcon_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_String_\" data-linktype=\"self-bookmark\">PaintErrorIcon(Graphics,Rectangle,Rectangle,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the error icon of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ParseFormattedValue_System_Object_System_Windows_Forms_DataGridViewCellStyle_System_ComponentModel_TypeConverter_System_ComponentModel_TypeConverter_\" data-linktype=\"self-bookmark\">ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a value formatted for display to an actual cell value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_PositionEditingControl_System_Boolean_System_Boolean_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewCellStyle_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the location and size of the editing control hosted by a cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_PositionEditingPanel_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewCellStyle_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the location and size of the editing panel hosted by the cell, and returns the normal bounds of the editing control within the editing panel.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_SetValue_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">SetValue(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the value of the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCell_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string that describes the current object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridViewCell()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected DataGridViewCell ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_AccessibilityObject\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_AccessibilityObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccessibilityObject</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell.datagridviewcellaccessibleobject\" data-linktype=\"relative-path\">DataGridViewCell+DataGridViewCellAccessibleObject</a> assigned to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell.datagridviewcellaccessibleobject\" data-linktype=\"relative-path\">DataGridViewCell+DataGridViewCellAccessibleObject</a> assigned to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To control the instance returned from this method, override the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method.  </p>\n<p> If no <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> is currently assigned to the control, a new instance of one is created.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To get or set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject_\" data-linktype=\"relative-path\">AccessibilityObject</a> property, you must add a reference to the <code>Accessibility</code> assembly installed with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE -->.  </p>\n</div>\n<p> For more information about accessible objects, see the &quot;Active Accessibility&quot; section of the MSDN Library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ColumnIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ColumnIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the column index for this cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the column that contains the cell; -1 if the cell is not contained within a column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The column index for the row that contains the row headers has a value of -1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ColumnIndex property to determine which columns to check for integer values. In this example, the cells in the <code>Description</code> column are ignored when the contents of the selected cells are summed. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ContentBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ContentBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the bounding rectangle that encloses the cell&#39;s content area.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle ContentBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that bounds the cell&#39;s contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> property is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned rectangle reports client coordinates, in pixels.  </p>\n<p> This property calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetContentBounds_\" data-linktype=\"relative-path\">GetContentBounds</a> method to get its value. For the base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> type, this value is <a class=\"xref\" href=\"system.drawing.rectangle#System_Drawing_Rectangle_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> To get the bounding rectangle of the cell rather than the cell contents, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GetCellDisplayRectangle_\" data-linktype=\"relative-path\">GetCellDisplayRectangle</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ContextMenuStrip\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ContextMenuStrip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContextMenuStrip</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the shortcut menu associated with the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> associated with the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates the shortcut menu that is typically displayed when the user right-clicks the cell.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>, getting the value of the ContextMenuStrip property raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"relative-path\">CellContextMenuStripNeeded</a> event of the control and returns the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcontextmenustripneededeventargs#System_Windows_Forms_DataGridViewCellContextMenuStripNeededEventArgs_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property as specified in the event handler. If there are no handlers for the event, getting the value of the ContextMenuStrip property returns the previously specified value or its default value of <code>null</code>.  </p>\n<p> Handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"relative-path\">CellContextMenuStripNeeded</a> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the cell ContextMenuStrip value for multiple cells. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> Changing this property raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripChanged\" data-linktype=\"relative-path\">CellContextMenuStripChanged</a> event on the owning <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, if one exists.  </p>\n<p> You can also specify shortcut menus for individual rows rather than individual cells by setting the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property or handling the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"relative-path\">RowContextMenuStripNeeded</a> event. The cell ContextMenuStrip property setting overrides the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property setting, and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"relative-path\">CellContextMenuStripNeeded</a> event overrides both the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"relative-path\">RowContextMenuStripNeeded</a> event and the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property setting. You can specify <code>null</code> for a cell shortcut menu, however, to prevent a row shortcut menu from being overridden.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_DefaultNewRowValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_DefaultNewRowValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultNewRowValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default value for a cell in the row for new records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object DefaultNewRowValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the default value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DefaultNewRowValue property in the base class <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> always returns <code>null</code>. However, this property can be overridden in derived cell classes to return other default values.  </p>\n<p> The value returned by this property is displayed if the cell is in the row for new records. This value can be overridden by a handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultValuesNeeded\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.DefaultValuesNeeded</a> event when focus enters the row for new records.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the DefaultNewRowValue property in a <code>CalendarCell</code> class that derives from <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcell\" data-linktype=\"relative-path\">DataGridViewTextBoxCell</a>. This example is part of a larger code example provided in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#200\">public class CalendarCell : DataGridViewTextBoxCell\n{\n\n    public CalendarCell()\n        : base()\n    {\n        // Use the short date format.\n        this.Style.Format = &quot;d&quot;;\n    }\n\n    public override void InitializeEditingControl(int rowIndex, object \n        initialFormattedValue, DataGridViewCellStyle dataGridViewCellStyle)\n    {\n        // Set the value of the editing control to the current cell value.\n        base.InitializeEditingControl(rowIndex, initialFormattedValue, \n            dataGridViewCellStyle);\n        CalendarEditingControl ctl = \n            DataGridView.EditingControl as CalendarEditingControl;\n        // Use the default row value when Value property is null.\n        if (this.Value == null)\n        {\n            ctl.Value = (DateTime)this.DefaultNewRowValue;\n        }\n        else\n        {\n            ctl.Value = (DateTime)this.Value;\n        }\n    }\n\n    public override Type EditType\n    {\n        get\n        {\n            // Return the type of the editing control that CalendarCell uses.\n            return typeof(CalendarEditingControl);\n        }\n    }\n\n    public override Type ValueType\n    {\n        get\n        {\n            // Return the type of the value that CalendarCell contains.\n            \n            return typeof(DateTime);\n        }\n    }\n\n    public override object DefaultNewRowValue\n    {\n        get\n        {\n            // Use the current date and time as the default value.\n            return DateTime.Now;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#200\">Public Class CalendarCell\n    Inherits DataGridViewTextBoxCell\n\n    Public Sub New()\n        &#39; Use the short date format.\n        Me.Style.Format = &quot;d&quot;\n    End Sub\n\n    Public Overrides Sub InitializeEditingControl(ByVal rowIndex As Integer, _\n        ByVal initialFormattedValue As Object, _\n        ByVal dataGridViewCellStyle As DataGridViewCellStyle)\n\n        &#39; Set the value of the editing control to the current cell value.\n        MyBase.InitializeEditingControl(rowIndex, initialFormattedValue, _\n            dataGridViewCellStyle)\n\n        Dim ctl As CalendarEditingControl = _\n            CType(DataGridView.EditingControl, CalendarEditingControl)\n\n        &#39; Use the default row value when Value property is null.\n        If (Me.Value Is Nothing) Then\n            ctl.Value = CType(Me.DefaultNewRowValue, DateTime)\n        Else\n            ctl.Value = CType(Me.Value, DateTime)\n        End If\n    End Sub\n\n    Public Overrides ReadOnly Property EditType() As Type\n        Get\n            &#39; Return the type of the editing control that CalendarCell uses.\n            Return GetType(CalendarEditingControl)\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property ValueType() As Type\n        Get\n            &#39; Return the type of the value that CalendarCell contains.\n            Return GetType(DateTime)\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property DefaultNewRowValue() As Object\n        Get\n            &#39; Use the current date and time as the default value.\n            Return DateTime.Now\n        End Get\n    End Property\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Displayed\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Displayed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Displayed</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the cell is currently displayed on-screen.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Displayed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell is on-screen or partially on-screen; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to determine whether a particular cell has been scrolled off-screen.  </p>\n<p> If the cell&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Visible_\" data-linktype=\"relative-path\">Visible</a> property value is <code>false</code>, this property will return <code>false</code> as well.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_EditedFormattedValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_EditedFormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditedFormattedValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object EditedFormattedValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The current, formatted value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Formatting failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or the handler set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the current value of the cell or editing control if the cell is in edit mode. Otherwise, getting the value of this property converts the cell value into an equivalent display value of the type indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> property. This raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellFormatting</a> event, which you can handle to customize the value conversion.  </p>\n<p> If formatting is unsuccessful, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.DataError</a> event occurs. If there is no handler for this event or the handler sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs#System_Windows_Forms_DataGridViewDataErrorEventArgs_ThrowException_\" data-linktype=\"relative-path\">ThrowException</a> property to <code>true</code>, an exception is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EditedFormattedValue property. In this example, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentCellDirty_\" data-linktype=\"relative-path\">IsCurrentCellDirty</a> property is used to determine if the current cell&#39;s contents have been edited and not committed and, if the cell has been modified, the edited value is used. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_EditType\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_EditType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the cell&#39;s hosted editing control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Type EditType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> representing the <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxeditingcontrol\" data-linktype=\"relative-path\">DataGridViewTextBoxEditingControl</a> type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A derived cell type overrides this property to return the type of its hosted editing control. If the cell does not have an editing control, as with <a class=\"xref\" href=\"system.windows.forms.datagridviewbuttoncell\" data-linktype=\"relative-path\">DataGridViewButtonCell</a>, the EditType property returns <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the EditType property in a <code>CalendarCell</code> class that derives from <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcell\" data-linktype=\"relative-path\">DataGridViewTextBoxCell</a>. This example is part of a larger code example provided in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#200\">public class CalendarCell : DataGridViewTextBoxCell\n{\n\n    public CalendarCell()\n        : base()\n    {\n        // Use the short date format.\n        this.Style.Format = &quot;d&quot;;\n    }\n\n    public override void InitializeEditingControl(int rowIndex, object \n        initialFormattedValue, DataGridViewCellStyle dataGridViewCellStyle)\n    {\n        // Set the value of the editing control to the current cell value.\n        base.InitializeEditingControl(rowIndex, initialFormattedValue, \n            dataGridViewCellStyle);\n        CalendarEditingControl ctl = \n            DataGridView.EditingControl as CalendarEditingControl;\n        // Use the default row value when Value property is null.\n        if (this.Value == null)\n        {\n            ctl.Value = (DateTime)this.DefaultNewRowValue;\n        }\n        else\n        {\n            ctl.Value = (DateTime)this.Value;\n        }\n    }\n\n    public override Type EditType\n    {\n        get\n        {\n            // Return the type of the editing control that CalendarCell uses.\n            return typeof(CalendarEditingControl);\n        }\n    }\n\n    public override Type ValueType\n    {\n        get\n        {\n            // Return the type of the value that CalendarCell contains.\n            \n            return typeof(DateTime);\n        }\n    }\n\n    public override object DefaultNewRowValue\n    {\n        get\n        {\n            // Use the current date and time as the default value.\n            return DateTime.Now;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#200\">Public Class CalendarCell\n    Inherits DataGridViewTextBoxCell\n\n    Public Sub New()\n        &#39; Use the short date format.\n        Me.Style.Format = &quot;d&quot;\n    End Sub\n\n    Public Overrides Sub InitializeEditingControl(ByVal rowIndex As Integer, _\n        ByVal initialFormattedValue As Object, _\n        ByVal dataGridViewCellStyle As DataGridViewCellStyle)\n\n        &#39; Set the value of the editing control to the current cell value.\n        MyBase.InitializeEditingControl(rowIndex, initialFormattedValue, _\n            dataGridViewCellStyle)\n\n        Dim ctl As CalendarEditingControl = _\n            CType(DataGridView.EditingControl, CalendarEditingControl)\n\n        &#39; Use the default row value when Value property is null.\n        If (Me.Value Is Nothing) Then\n            ctl.Value = CType(Me.DefaultNewRowValue, DateTime)\n        Else\n            ctl.Value = CType(Me.Value, DateTime)\n        End If\n    End Sub\n\n    Public Overrides ReadOnly Property EditType() As Type\n        Get\n            &#39; Return the type of the editing control that CalendarCell uses.\n            Return GetType(CalendarEditingControl)\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property ValueType() As Type\n        Get\n            &#39; Return the type of the value that CalendarCell contains.\n            Return GetType(DateTime)\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property DefaultNewRowValue() As Object\n        Get\n            &#39; Use the current date and time as the default value.\n            Return DateTime.Now\n        End Get\n    End Property\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ErrorIconBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ErrorIconBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorIconBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the bounds of the error icon for the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle ErrorIconBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the error icon for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The cell does not belong to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned rectangle reports client coordinates, in pixels.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowCellErrors_\" data-linktype=\"relative-path\">ShowCellErrors</a> property is <code>false</code>, the value of this property is <a class=\"xref\" href=\"system.drawing.rectangle#System_Drawing_Rectangle_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> This property calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetErrorIconBounds_\" data-linktype=\"relative-path\">GetErrorIconBounds</a> method to get its value. For the base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> type, this value is always <a class=\"xref\" href=\"system.drawing.rectangle#System_Drawing_Rectangle_Empty\" data-linktype=\"relative-path\">Empty</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ErrorText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text describing an error condition associated with the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ErrorText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text that describes an error condition associated with the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, the ErrorText property is used when handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. If the cell&#39;s value fails some validation criteria, set the ErrorText property and cancel the commit operation by setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalidatingeventargs\" data-linktype=\"relative-path\">DataGridViewCellValidatingEventArgs</a> to <code>true</code>. The text you specify is then displayed by the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, and the user is prompted to fix the error in the cell&#39;s data.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is <code>true</code>, you can provide error text for rows and cells using the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> events.  </p>\n<p> When you assign a different ErrorText string to a cell, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextChanged\" data-linktype=\"relative-path\">CellErrorTextChanged</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is raised.  </p>\n<p> Starting with the .NET Framework 4.5.2, resizing of the error icon is determined by the system DPI setting when the app.config file contains the following entry:  </p>\n<pre><code>&lt;appSettings&gt;  \n  &lt;add key=&quot;EnableWindowsFormsHighDpiAutoResizing&quot; value=&quot;true&quot; /&gt;  \n&lt;/appSettings&gt;\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use this property when handling error conditions in an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. The <code>AnnotateCell</code> method sets an error message string to the ErrorText property.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#9\">    Private Sub dataGridView1_CellValidating(ByVal sender As Object, _\n        ByVal e As _\n        DataGridViewCellValidatingEventArgs) _\n        Handles dataGridView1.CellValidating\n\n        Dim column As DataGridViewColumn = _\n            dataGridView1.Columns(e.ColumnIndex)\n\n        If column.Name = &quot;Track&quot; Then\n            CheckTrack(e)\n        ElseIf column.Name = &quot;Release Date&quot; Then\n            CheckDate(e)\n        End If\n    End Sub\n\n    Private Shared Sub CheckTrack(ByVal newValue As DataGridViewCellValidatingEventArgs)\n        If String.IsNullOrEmpty(newValue.FormattedValue.ToString()) Then\n            NotifyUserAndForceRedo(&quot;Please enter a track&quot;, newValue)\n        ElseIf Not Integer.TryParse( _\n            newValue.FormattedValue.ToString(), New Integer()) Then\n            NotifyUserAndForceRedo(&quot;A Track must be a number&quot;, newValue)\n        ElseIf Integer.Parse(newValue.FormattedValue.ToString()) &lt; 1 Then\n            NotifyUserAndForceRedo(&quot;Not a valid track&quot;, newValue)\n        End If\n    End Sub\n\n    Private Shared Sub NotifyUserAndForceRedo(ByVal errorMessage As String, ByVal newValue As DataGridViewCellValidatingEventArgs)\n        MessageBox.Show(errorMessage)\n        newValue.Cancel = True\n    End Sub\n\n    Private Sub CheckDate(ByVal newValue As DataGridViewCellValidatingEventArgs)\n        Try\n            DateTime.Parse(newValue.FormattedValue.ToString()).ToLongDateString()\n            AnnotateCell(String.Empty, newValue)\n        Catch ex As FormatException\n            AnnotateCell(&quot;You did not enter a valid date.&quot;, newValue)\n        End Try\n    End Sub\n\n    Private Sub AnnotateCell(ByVal errorMessage As String, _\n        ByVal editEvent As DataGridViewCellValidatingEventArgs)\n\n        Dim cell As DataGridViewCell = _\n            dataGridView1.Rows(editEvent.RowIndex).Cells( _\n                editEvent.ColumnIndex)\n        cell.ErrorText = errorMessage\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#9\">   void dataGridView1_CellValidating( Object^ /*sender*/, DataGridViewCellValidatingEventArgs^ newValue )\n   {\n      DataGridViewColumn^ column = dataGridView1-&gt;Columns[ newValue-&gt;ColumnIndex ];\n      if ( column-&gt;Name-&gt;Equals( &quot;Track&quot; ) )\n      {\n         CheckTrack( newValue );\n      }\n      else\n      if ( column-&gt;Name-&gt;Equals( &quot;Release Date&quot; ) )\n      {\n         CheckDate( newValue );\n      }\n   }\n\n   void CheckTrack( DataGridViewCellValidatingEventArgs^ newValue )\n   {\n      Int32 ignored;\n      if ( newValue-&gt;FormattedValue-&gt;ToString() == String::Empty )\n      {\n         NotifyUserAndForceRedo( &quot;Please enter a track&quot;, newValue );\n      }\n      else\n      if (  !Int32::TryParse( newValue-&gt;FormattedValue-&gt;ToString(), ignored ) )\n      {\n         NotifyUserAndForceRedo( &quot;A Track must be a number&quot;, newValue );\n      }\n      else\n      if ( Int32::Parse( newValue-&gt;FormattedValue-&gt;ToString() ) &lt; 1 )\n      {\n         NotifyUserAndForceRedo( &quot;Not a valid track&quot;, newValue );\n         editedLastColumn = true;\n      }\n   }\n\n   void NotifyUserAndForceRedo( String^ errorMessage, DataGridViewCellValidatingEventArgs^ newValue )\n   {\n      MessageBox::Show( errorMessage );\n      newValue-&gt;Cancel = true;\n   }\n\n   void CheckDate( DataGridViewCellValidatingEventArgs^ newValue )\n   {\n      try\n      {\n         DateTime::Parse( newValue-&gt;FormattedValue-&gt;ToString() ).ToLongDateString();\n         AnnotateCell( String::Empty, newValue );\n      }\n      catch ( FormatException^ /*ex*/ ) \n      {\n         AnnotateCell( &quot;You did not enter a valid date.&quot;, newValue );\n      }\n   }\n\n   void AnnotateCell( String^ errorMessage, DataGridViewCellValidatingEventArgs^ editEvent )\n   {\n      DataGridViewCell^ cell = dataGridView1-&gt;Rows[ editEvent-&gt;RowIndex ]-&gt;Cells[ editEvent-&gt;ColumnIndex ];\n      cell-&gt;ErrorText = errorMessage;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#9\">    private void dataGridView1_CellValidating(object sender, DataGridViewCellValidatingEventArgs e)\n    {\n\n        DataGridViewColumn column = dataGridView1.Columns[e.ColumnIndex];\n\n        if (column.Name == &quot;Track&quot;)\n        {\n            CheckTrack(e);\n        }\n        else if (column.Name == &quot;Release Date&quot;)\n        {\n            CheckDate(e);\n        }\n    }\n\n    private static void CheckTrack(DataGridViewCellValidatingEventArgs newValue)\n    {\n        Int32 ignored = new Int32();\n        if (String.IsNullOrEmpty(newValue.FormattedValue.ToString()))\n        {\n            NotifyUserAndForceRedo(&quot;Please enter a track&quot;, newValue);\n        }\n        else if (!Int32.TryParse(newValue.FormattedValue.ToString(), out ignored))\n        {\n            NotifyUserAndForceRedo(&quot;A Track must be a number&quot;, newValue);\n        }\n        else if (Int32.Parse(newValue.FormattedValue.ToString()) &lt; 1)\n        {\n            NotifyUserAndForceRedo(&quot;Not a valid track&quot;, newValue);\n        }\n    }\n\n    private static void NotifyUserAndForceRedo(string errorMessage, DataGridViewCellValidatingEventArgs newValue)\n    {\n        MessageBox.Show(errorMessage);\n        newValue.Cancel = true;\n    }\n\n    private void CheckDate(DataGridViewCellValidatingEventArgs newValue)\n    {\n        try\n        {\n            DateTime.Parse(newValue.FormattedValue.ToString()).ToLongDateString();\n            AnnotateCell(String.Empty, newValue);\n        }\n        catch (FormatException)\n        {\n            AnnotateCell(&quot;You did not enter a valid date.&quot;, newValue);\n        }\n    }\n\n    private void AnnotateCell(string errorMessage, DataGridViewCellValidatingEventArgs editEvent)\n    {\n\n        DataGridViewCell cell = dataGridView1.Rows[editEvent.RowIndex].Cells[editEvent.ColumnIndex];\n        cell.ErrorText = errorMessage;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_FormattedValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_FormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormattedValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the cell as formatted for display.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object FormattedValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The formatted value of the cell or <code>null</code> if the cell does not belong to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Formatting failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or the handler set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property is the actual data object contained by the cell, whereas the FormattedValue is the formatted representation of this object. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> properties correspond to the data types of these values, respectively.  </p>\n<p> Getting the value of this property calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetFormattedValue_\" data-linktype=\"relative-path\">GetFormattedValue</a> method to convert the cell value into an equivalent display value of the type indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> property. This raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellFormatting</a> event, which you can handle to customize the value conversion.  </p>\n<p> If formatting is unsuccessful, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.DataError</a> event occurs. If there is no handler for this event or the handler sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs#System_Windows_Forms_DataGridViewDataErrorEventArgs_ThrowException_\" data-linktype=\"relative-path\">ThrowException</a> property to <code>true</code>, an exception is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FormattedValue property. In this example, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentCellDirty_\" data-linktype=\"relative-path\">IsCurrentCellDirty</a> property is used to determine if the current cell&#39;s contents have been edited and not committed and, if the cell has been modified, the FormattedValue is used. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_FormattedValueType\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_FormattedValueType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormattedValueType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the formatted value associated with the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Type FormattedValueType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> representing the type of the cell&#39;s formatted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property is the actual data object contained by the cell, whereas the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValue_\" data-linktype=\"relative-path\">FormattedValue</a> property is the formatted representation of the data. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> and FormattedValueType properties correspond to the data types of these values, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FormattedValueType property to determine the type of the cell contents. In this example, the FormattedValueType property is used to determine whether the cell contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> before attempting to convert the value. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Frozen\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Frozen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Frozen</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the cell is frozen.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Frozen { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell is frozen; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the Frozen property depends on the state of the cell&#39;s parent row and column. If the <code>Frozen</code> property of either the row or column is set to <code>true</code>, the cell&#39;s Frozen property will also be <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_HasStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_HasStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Style*</span> property has been set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Style*</span> property has been set; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Getting the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> property automatically instantiates a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> if the property has not previously been accessed. Therefore, you must use the HasStyle property to determine whether the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> property is currently set to a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> instance. This is useful to determine which properties of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property represent styles set specifically for the cell.  </p>\n<p> For more information about cell style inheritance, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_InheritedState\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_InheritedState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InheritedState</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current state of the cell as inherited from the state of its row and column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewElementStates InheritedState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values representing the current state of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The cell is not contained within a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and the value of its <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.RowIndex*</span> property is not -1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The cell is contained within a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and the value of its <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.RowIndex*</span> property is -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_InheritedStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_InheritedStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InheritedStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the style currently applied to the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> currently applied to the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The cell does not belong to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control displays its cells using the styles indicated by the cell InheritedStyle property, which inherits styles from other properties of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a>. The styles specified through the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> property override the styles specified through all other cell-style properties, but do not necessarily indicate all the styles that contribute to the cell&#39;s appearance.  </p>\n<p> For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_IsInEditMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_IsInEditMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInEditMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether this cell is currently being edited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInEditMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell is in edit mode; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is useful when you are working directly with cell instances. Alternatively, you can use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentCellInEditMode_\" data-linktype=\"relative-path\">IsCurrentCellInEditMode</a> property. You can also handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellBeginEdit</a> event to determine when the user enters edit mode.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OwningColumn\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OwningColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwningColumn</div>        \r\n          </div>\r\n    \r\n            <p>Gets the column that contains this cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewColumn OwningColumn { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> that contains the cell, or <code>null</code> if the cell is not in a column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OwningRow\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OwningRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwningRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets the row that contains this cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewRow OwningRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> that contains the cell, or <code>null</code> if the cell is not in a row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_PreferredSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_PreferredSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size, in pixels, of a rectangular area into which the cell can fit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Size PreferredSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> containing the height and width, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PreferredSize property returns the natural size of the cell computed by the cell&#39;s owning row and column. PreferredSize returns a <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> with a width and height of -1 if the cell is not contained in a table.  </p>\n<p> If the cell is in a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> that has its <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Resizable_\" data-linktype=\"relative-path\">Resizable</a> property set to <code>false</code>, -1 is returned for the width.  </p>\n<p> This method relies on the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetFormattedValue_\" data-linktype=\"relative-path\">GetFormattedValue</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ReadOnly\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the cell&#39;s data can be edited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool ReadOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell&#39;s data cannot be edited; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is no owning row when setting this property.  </p>\n<p> -or-  </p>\n<p> The owning row is shared when setting this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ReadOnly property indicates whether the data displayed by the cell can be edited. You can set ReadOnly for individual cells, or you can make an entire row or column of cells read-only by setting the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> properties. By default, if a cell&#39;s parent row or column is set to read-only, the child cells will adopt the same value. You can override this default behavior by setting ReadOnly for individual cells.  </p>\n<p> You can navigate to a read-only cell, and you can set a read-only cell to be the current cell.  </p>\n<p> ReadOnly only affects whether a cell is editable; it does not affect whether the user can delete rows.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Resizable\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Resizable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resizable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the cell can be resized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Resizable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell can be resized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the Resizable property is set by the cell&#39;s parent row or column.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_RowIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_RowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the cell&#39;s parent row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the row that contains the cell; -1 if there is no owning row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the RowIndex property returns -1, the cell is either a column header, or the cell&#39;s row is shared.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#080\">    private void getCurrentCellButton_Click(object sender, System.EventArgs e)\n    {\n        string msg = String.Format(&quot;Row: {0}, Column: {1}&quot;,\n            dataGridView1.CurrentCell.RowIndex,\n            dataGridView1.CurrentCell.ColumnIndex);\n        MessageBox.Show(msg, &quot;Current Cell&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#080\">    Private Sub getCurrentCellButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles getCurrentCellButton.Click\n\n        Dim msg As String = String.Format(&quot;Row: {0}, Column: {1}&quot;, _\n            dataGridView1.CurrentCell.RowIndex, _\n            dataGridView1.CurrentCell.ColumnIndex)\n        MessageBox.Show(msg, &quot;Current Cell&quot;)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Selected\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Selected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Selected</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the cell has been selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Selected { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell has been selected; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is no associated <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> when setting this property.  </p>\n<p> -or-  </p>\n<p> The owning row is shared when setting this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Size\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Size_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Size</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size of the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Size Size { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> set to the owning row&#39;s height and the owning column&#39;s width.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The row containing the cell is a shared row.  </p>\n<p> -or-  </p>\n<p> The cell is a column header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the cell is not associated with a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, the Size property returns a <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> with a width and height of -1.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Style\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Style_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Style</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the style for the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle Style { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>The style associated with the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control displays its cells using the styles indicated by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property, which inherits styles from other properties of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a>. The styles specified through the Style property override the styles specified through all other cell-style properties, but do not necessarily indicate all the styles that contribute to the cell&#39;s appearance.  </p>\n<p> For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Style property to get the background color of a cell. This example is part of a larger code example provided for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#120\">   void CustomizeCellsInThirdColumn()\n   {\n      int thirdColumn = 2;\n      DataGridViewColumn^ column = dataGridView-&gt;Columns[ thirdColumn ];\n      DataGridViewCell^ cell = gcnew DataGridViewTextBoxCell;\n      cell-&gt;Style-&gt;BackColor = Color::Wheat;\n      column-&gt;CellTemplate = cell;\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#120\">    Private Sub CustomizeCellsInThirdColumn()\n\n        Dim thirdColumn As Integer = 2\n        Dim column As DataGridViewColumn = _\n            dataGridView.Columns(thirdColumn)\n        Dim cell As DataGridViewCell = _\n            New DataGridViewTextBoxCell()\n\n        cell.Style.BackColor = Color.Wheat\n        column.CellTemplate = cell\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#120\">    private void CustomizeCellsInThirdColumn()\n    {\n        int thirdColumn = 2;\n        DataGridViewColumn column =\n            dataGridView.Columns[thirdColumn];\n        DataGridViewCell cell = new DataGridViewTextBoxCell();\n\n        cell.Style.BackColor = Color.Wheat;\n        column.CellTemplate = cell;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Tag\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Tag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Tag</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object that contains supplemental data about the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Tag { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the cell. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any type derived from the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> class can be assigned to this property. The Tag property is commonly used to store data that is closely associated with the value displayed by the cell.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ToolTipText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ToolTipText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolTipText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the ToolTip text associated with this cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToolTipText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The ToolTip text associated with the cell. The default is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this property is displayed as the cell ToolTip when the mouse pointer is over the cell and the property value is not <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. If the value of this property is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, the cell will display a ToolTip containing the value of the cell if the value is truncated in the cell display; otherwise, the cell will not display a ToolTip. You can also prevent the display of a ToolTip by setting the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowCellToolTips_\" data-linktype=\"relative-path\">ShowCellToolTips</a> property to <code>false</code>.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>, getting the value of the ToolTipText property raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"relative-path\">CellToolTipTextNeeded</a> event of the control and returns the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelltooltiptextneededeventargs#System_Windows_Forms_DataGridViewCellToolTipTextNeededEventArgs_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property as specified in the event handler. If there are no handlers for the event, getting the value of the ToolTipText property returns the previously specified value or its default value of <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> Handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"relative-path\">CellToolTipTextNeeded</a> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the cell ToolTipText value for multiple cells. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> Changing this property raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextChanged\" data-linktype=\"relative-path\">CellToolTipTextChanged</a> event on the owning <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, if one exists.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to set the ToolTipText property within an event handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">CellFormatting</a> event. This example is part of a larger code example provided in <a href=\"../Topic/How%20to:%20Add%20ToolTips%20to%20Individual%20Cells%20in%20a%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewCell.ToolTipText#1\">    // Sets the ToolTip text for cells in the Rating column.\n    void dataGridView1_CellFormatting(Object^ /*sender*/, \n        DataGridViewCellFormattingEventArgs^ e)\n    {\n        if ( (e-&gt;ColumnIndex == this-&gt;dataGridView1-&gt;Columns[&quot;Rating&quot;]-&gt;Index)\n            &amp;&amp; e-&gt;Value != nullptr )\n        {\n            DataGridViewCell^ cell = \n                this-&gt;dataGridView1-&gt;Rows[e-&gt;RowIndex]-&gt;Cells[e-&gt;ColumnIndex];\n            if (e-&gt;Value-&gt;Equals(&quot;*&quot;))\n            {                \n                cell-&gt;ToolTipText = &quot;very bad&quot;;\n            }\n            else if (e-&gt;Value-&gt;Equals(&quot;**&quot;))\n            {\n                cell-&gt;ToolTipText = &quot;bad&quot;;\n            }\n            else if (e-&gt;Value-&gt;Equals(&quot;***&quot;))\n            {\n                cell-&gt;ToolTipText = &quot;good&quot;;\n            }\n            else if (e-&gt;Value-&gt;Equals(&quot;****&quot;))\n            {\n                cell-&gt;ToolTipText = &quot;very good&quot;;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCell.ToolTipText#1\">    // Sets the ToolTip text for cells in the Rating column.\n    void dataGridView1_CellFormatting(object sender, \n        DataGridViewCellFormattingEventArgs e)\n    {\n        if ( (e.ColumnIndex == this.dataGridView1.Columns[&quot;Rating&quot;].Index)\n            &amp;&amp; e.Value != null )\n        {\n            DataGridViewCell cell = \n                this.dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex];\n            if (e.Value.Equals(&quot;*&quot;))\n            {                \n                cell.ToolTipText = &quot;very bad&quot;;\n            }\n            else if (e.Value.Equals(&quot;**&quot;))\n            {\n                cell.ToolTipText = &quot;bad&quot;;\n            }\n            else if (e.Value.Equals(&quot;***&quot;))\n            {\n                cell.ToolTipText = &quot;good&quot;;\n            }\n            else if (e.Value.Equals(&quot;****&quot;))\n            {\n                cell.ToolTipText = &quot;very good&quot;;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCell.ToolTipText#1\">    &#39; Sets the ToolTip text for cells in the Rating column.\n    Sub dataGridView1_CellFormatting(ByVal sender As Object, _\n        ByVal e As DataGridViewCellFormattingEventArgs) _\n        Handles dataGridView1.CellFormatting\n\n        If e.ColumnIndex = Me.dataGridView1.Columns(&quot;Rating&quot;).Index _\n            AndAlso (e.Value IsNot Nothing) Then\n\n            With Me.dataGridView1.Rows(e.RowIndex).Cells(e.ColumnIndex)\n\n                If e.Value.Equals(&quot;*&quot;) Then\n                    .ToolTipText = &quot;very bad&quot;\n                ElseIf e.Value.Equals(&quot;**&quot;) Then\n                    .ToolTipText = &quot;bad&quot;\n                ElseIf e.Value.Equals(&quot;***&quot;) Then\n                    .ToolTipText = &quot;good&quot;\n                ElseIf e.Value.Equals(&quot;****&quot;) Then\n                    .ToolTipText = &quot;very good&quot;\n                End If\n\n            End With\n\n        End If\n\n    End Sub &#39;dataGridView1_CellFormatting\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Value\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value associated with this cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Value { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Gets or sets the data to be displayed by the cell. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.RowIndex*</span> is outside the valid range of 0 to the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you assign a different value to a cell, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is raised.  </p>\n<p> The Value property is the actual data object contained by the cell, whereas the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValue_\" data-linktype=\"relative-path\">FormattedValue</a> property is the formatted representation of the data. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> properties correspond to the data types of these values, respectively.  </p>\n<p> When you set the Value property, the specified value is not automatically converted from a formatted, display value to an underlying cell value. For example, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> in effect for the cell is ignored, so setting Value to <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> does not result in a property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to update a cell&#39;s contents with the Value property. This example is part of a larger code example provided in <a href=\"../Topic/How%20to:%20Manipulate%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Manipulate Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">   // Give cheescake excellent rating.\n   void Button8_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      UpdateStars( dataGridView-&gt;Rows[ 4 ], L&quot;******************&quot; );\n   }\n\n   int ratingColumn;\n   void UpdateStars( DataGridViewRow^ row, String^ stars )\n   {\n      row-&gt;Cells[ ratingColumn ]-&gt;Value = stars;\n      \n      // Resize the column width to account for the new value.\n      row-&gt;DataGridView-&gt;AutoResizeColumn( ratingColumn, DataGridViewAutoSizeColumnMode::DisplayedCells );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">    // Give cheescake excellent rating.\n    private void Button8_Click(object sender,\n        System.EventArgs e)\n    {\n        UpdateStars(dataGridView.Rows[4], &quot;******************&quot;);\n    }\n\n    int ratingColumn = 3;\n\n    private void UpdateStars(DataGridViewRow row, string stars)\n    {\n\n        row.Cells[ratingColumn].Value = stars;\n\n        // Resize the column width to account for the new value.\n        row.DataGridView.AutoResizeColumn(ratingColumn, \n            DataGridViewAutoSizeColumnMode.DisplayedCells);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">    &#39; Give cheescake excellent rating.\n    Private Sub Button8_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button8.Click\n\n        UpdateStars(dataGridView.Rows(4), &quot;******************&quot;)\n    End Sub\n\n    Private ratingColumn As Integer = 3\n\n    Private Sub UpdateStars(ByVal row As DataGridViewRow, _\n        ByVal stars As String)\n\n        row.Cells(ratingColumn).Value = stars\n\n        &#39; Resize the column width to account for the new value.\n        row.DataGridView.AutoResizeColumn(ratingColumn, _\n            DataGridViewAutoSizeColumnMode.DisplayedCells)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ValueType\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ValueType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValueType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data type of the values in the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Type ValueType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> representing the data type of the value in the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ValueType property for the cell has not been set, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ValueType_\" data-linktype=\"relative-path\">ValueType</a> property for the owning column is used, if it exists.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property is the actual data object contained by the cell, whereas the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValue_\" data-linktype=\"relative-path\">FormattedValue</a> property is the formatted representation of the data. The ValueType and <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> properties correspond to the data types of these values, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#20\">    private DataGridView dataGridView1 = new DataGridView();\n\n    private void AddColorColumn()\n    {\n        DataGridViewComboBoxColumn comboBoxColumn =\n            new DataGridViewComboBoxColumn();\n        comboBoxColumn.Items.AddRange(\n            Color.Red, Color.Yellow, Color.Green, Color.Blue);\n        comboBoxColumn.ValueType = typeof(Color);\n        dataGridView1.Columns.Add(comboBoxColumn);\n        dataGridView1.EditingControlShowing +=\n            new DataGridViewEditingControlShowingEventHandler(\n            dataGridView1_EditingControlShowing);\n    }\n\n    private void dataGridView1_EditingControlShowing(object sender,\n        DataGridViewEditingControlShowingEventArgs e)\n    {\n        ComboBox combo = e.Control as ComboBox;\n        if (combo != null)\n        {\n            // Remove an existing event-handler, if present, to avoid \n            // adding multiple handlers when the editing control is reused.\n            combo.SelectedIndexChanged -=\n                new EventHandler(ComboBox_SelectedIndexChanged);\n\n            // Add the event handler. \n            combo.SelectedIndexChanged +=\n                new EventHandler(ComboBox_SelectedIndexChanged);\n        }\n    }\n\n    private void ComboBox_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        ((ComboBox)sender).BackColor = (Color)((ComboBox)sender).SelectedItem;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#20\">    Private WithEvents dataGridView1 As New DataGridView()\n\n    Private Sub AddColorColumn()\n\n        Dim comboBoxColumn As New DataGridViewComboBoxColumn()\n        comboBoxColumn.Items.AddRange( _\n            Color.Red, Color.Yellow, Color.Green, Color.Blue)\n        comboBoxColumn.ValueType = GetType(Color)\n        dataGridView1.Columns.Add(comboBoxColumn)\n\n    End Sub\n\n    Private Sub dataGridView1_EditingControlShowing(ByVal sender As Object, _\n        ByVal e As DataGridViewEditingControlShowingEventArgs) _\n        Handles dataGridView1.EditingControlShowing\n\n        Dim combo As ComboBox = CType(e.Control, ComboBox)\n        If (combo IsNot Nothing) Then\n\n            &#39; Remove an existing event-handler, if present, to avoid \n            &#39; adding multiple handlers when the editing control is reused.\n            RemoveHandler combo.SelectedIndexChanged, _\n                New EventHandler(AddressOf ComboBox_SelectedIndexChanged)\n\n            &#39; Add the event handler. \n            AddHandler combo.SelectedIndexChanged, _\n                New EventHandler(AddressOf ComboBox_SelectedIndexChanged)\n\n        End If\n\n    End Sub\n\n    Private Sub ComboBox_SelectedIndexChanged( _\n        ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim comboBox1 As ComboBox = CType(sender, ComboBox)\n        comboBox1.BackColor = _\n            CType(CType(sender, ComboBox).SelectedItem, Color)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Visible\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Visible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visible</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the cell is in a row or column that has been hidden.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Visible { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cell is visible; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates whether the cell is in a row or a column with its <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Visible_\" data-linktype=\"relative-path\">Visible</a> property set to <code>false</code>. It does not indicate whether the cell has been scrolled off-screen. To determine whether a cell is visible within the display area of the control, use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Displayed_\" data-linktype=\"relative-path\">Displayed</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_AdjustCellBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_AdjustCellBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Modifies the input cell border style according to the specified criteria.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewAdvancedBorderStyleInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the cell border style to modify.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewAdvancedBorderStylePlaceholder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that is used to store intermediate changes to the cell border style.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleVerticalBorderAdded</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to add a vertical border to the cell; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleHorizontalBorderAdded</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to add a horizontal border to the cell; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the hosting cell is in the first visible column; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the hosting cell is in the first visible row; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>The modified <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control internally calls the AdjustCellBorderStyle method to determine the appearance of the cell borders. The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control typically uses the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AdvancedCellBorderStyle_\" data-linktype=\"relative-path\">AdvancedCellBorderStyle</a> property for the <code>dataGridViewAdvancedBorderStyleInput</code> parameter.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedcellborderstyle\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewAdvancedCellBorderStyle</a> value is not supported as an input style for cells.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the AdjustCellBorderStyle method to customize the borders of the cells. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#20\">        public override DataGridViewAdvancedBorderStyle AdjustCellBorderStyle(\n            DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput,\n            DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceHolder,\n            bool singleVerticalBorderAdded,\n            bool singleHorizontalBorderAdded,\n            bool firstVisibleColumn,\n            bool firstVisibleRow)\n        {\n            // Customize the top border of cells in the first row and the \n            // right border of cells in the first column. Use the input style \n            // for all other borders.\n            dataGridViewAdvancedBorderStylePlaceHolder.Left = firstVisibleColumn ?\n                DataGridViewAdvancedCellBorderStyle.OutsetDouble :\n                DataGridViewAdvancedCellBorderStyle.None;\n            dataGridViewAdvancedBorderStylePlaceHolder.Top = firstVisibleRow ?\n                DataGridViewAdvancedCellBorderStyle.InsetDouble :\n                DataGridViewAdvancedCellBorderStyle.None;\n\n            dataGridViewAdvancedBorderStylePlaceHolder.Right =\n                dataGridViewAdvancedBorderStyleInput.Right;\n            dataGridViewAdvancedBorderStylePlaceHolder.Bottom =\n                dataGridViewAdvancedBorderStyleInput.Bottom;\n\n            return dataGridViewAdvancedBorderStylePlaceHolder;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#20\">        Public Overrides Function AdjustCellBorderStyle( _\n            ByVal dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, _\n            ByVal dataGridViewAdvancedBorderStylePlaceHolder As DataGridViewAdvancedBorderStyle, _\n            ByVal singleVerticalBorderAdded As Boolean, _\n            ByVal singleHorizontalBorderAdded As Boolean, _\n            ByVal firstVisibleColumn As Boolean, _\n            ByVal firstVisibleRow As Boolean) As DataGridViewAdvancedBorderStyle\n\n            &#39; Customize the top border of cells in the first row and the \n            &#39; right border of cells in the first column. Use the input style \n            &#39; for all other borders.\n            If firstVisibleColumn Then\n                dataGridViewAdvancedBorderStylePlaceHolder.Left = _\n                    DataGridViewAdvancedCellBorderStyle.OutsetDouble\n            Else\n                dataGridViewAdvancedBorderStylePlaceHolder.Left = _\n                    DataGridViewAdvancedCellBorderStyle.None\n            End If\n\n            If firstVisibleRow Then\n                dataGridViewAdvancedBorderStylePlaceHolder.Top = _\n                    DataGridViewAdvancedCellBorderStyle.InsetDouble\n            Else\n                dataGridViewAdvancedBorderStylePlaceHolder.Top = _\n                    DataGridViewAdvancedCellBorderStyle.None\n            End If\n\n            With dataGridViewAdvancedBorderStylePlaceHolder\n                .Right = dataGridViewAdvancedBorderStyleInput.Right\n                .Bottom = dataGridViewAdvancedBorderStyleInput.Bottom\n            End With\n\n            Return dataGridViewAdvancedBorderStylePlaceHolder\n        End Function\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_BorderWidths_System_Windows_Forms_DataGridViewAdvancedBorderStyle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_BorderWidths_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BorderWidths(DataGridViewAdvancedBorderStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the widths of all the cell margins.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Drawing.Rectangle BorderWidths (System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>advancedBorderStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that the margins are to be calculated for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the widths of all the cell margins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default width of the cell border is one pixel. Use the following <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedcellborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedCellBorderStyle</a> values to modify the width of the border:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedcellborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedCellBorderStyle</a> value denotes a width of 0 pixels.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedcellborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedCellBorderStyle</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedcellborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedCellBorderStyle</a> values increase the default width by 1 pixel.  </p>\n<p>In addition, if the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DividerHeight_\" data-linktype=\"relative-path\">DividerHeight</a> property is set for the cell&#39;s owning row, the rectangle&#39;s height is increased by the value of <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DividerHeight_\" data-linktype=\"relative-path\">DividerHeight</a>. If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth_\" data-linktype=\"relative-path\">DividerWidth</a> property is set for the cell&#39;s owning column, the rectangle&#39;s width will be increased by the value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth_\" data-linktype=\"relative-path\">DividerWidth</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the BorderWidths method of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class to determine the available drawing area in a cell. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Disable%20Buttons%20in%20a%20Button%20Column%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#20\">    Protected Overrides Sub Paint(ByVal graphics As Graphics, _\n        ByVal clipBounds As Rectangle, ByVal cellBounds As Rectangle, _\n        ByVal rowIndex As Integer, _\n        ByVal elementState As DataGridViewElementStates, _\n        ByVal value As Object, ByVal formattedValue As Object, _\n        ByVal errorText As String, _\n        ByVal cellStyle As DataGridViewCellStyle, _\n        ByVal advancedBorderStyle As DataGridViewAdvancedBorderStyle, _\n        ByVal paintParts As DataGridViewPaintParts)\n\n        &#39; The button cell is disabled, so paint the border,  \n        &#39; background, and disabled button for the cell.\n        If Not Me.enabledValue Then\n\n            &#39; Draw the background of the cell, if specified.\n            If (paintParts And DataGridViewPaintParts.Background) = _\n                DataGridViewPaintParts.Background Then\n\n                Dim cellBackground As New SolidBrush(cellStyle.BackColor)\n                graphics.FillRectangle(cellBackground, cellBounds)\n                cellBackground.Dispose()\n            End If\n\n            &#39; Draw the cell borders, if specified.\n            If (paintParts And DataGridViewPaintParts.Border) = _\n                DataGridViewPaintParts.Border Then\n\n                PaintBorder(graphics, clipBounds, cellBounds, cellStyle, _\n                    advancedBorderStyle)\n            End If\n\n            &#39; Calculate the area in which to draw the button.\n            Dim buttonArea As Rectangle = cellBounds\n            Dim buttonAdjustment As Rectangle = _\n                Me.BorderWidths(advancedBorderStyle)\n            buttonArea.X += buttonAdjustment.X\n            buttonArea.Y += buttonAdjustment.Y\n            buttonArea.Height -= buttonAdjustment.Height\n            buttonArea.Width -= buttonAdjustment.Width\n\n            &#39; Draw the disabled button.                \n            ButtonRenderer.DrawButton(graphics, buttonArea, _\n                PushButtonState.Disabled)\n\n            &#39; Draw the disabled button text. \n            If TypeOf Me.FormattedValue Is String Then\n                TextRenderer.DrawText(graphics, CStr(Me.FormattedValue), _\n                    Me.DataGridView.Font, buttonArea, SystemColors.GrayText)\n            End If\n\n        Else\n            &#39; The button cell is enabled, so let the base class \n            &#39; handle the painting.\n            MyBase.Paint(graphics, clipBounds, cellBounds, rowIndex, _\n                elementState, value, formattedValue, errorText, _\n                cellStyle, advancedBorderStyle, paintParts)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#20\">    protected override void Paint(Graphics graphics,\n        Rectangle clipBounds, Rectangle cellBounds, int rowIndex,\n        DataGridViewElementStates elementState, object value,\n        object formattedValue, string errorText,\n        DataGridViewCellStyle cellStyle,\n        DataGridViewAdvancedBorderStyle advancedBorderStyle,\n        DataGridViewPaintParts paintParts)\n    {\n        // The button cell is disabled, so paint the border,  \n        // background, and disabled button for the cell.\n        if (!this.enabledValue)\n        {\n            // Draw the cell background, if specified.\n            if ((paintParts &amp; DataGridViewPaintParts.Background) ==\n                DataGridViewPaintParts.Background)\n            {\n                SolidBrush cellBackground =\n                    new SolidBrush(cellStyle.BackColor);\n                graphics.FillRectangle(cellBackground, cellBounds);\n                cellBackground.Dispose();\n            }\n\n            // Draw the cell borders, if specified.\n            if ((paintParts &amp; DataGridViewPaintParts.Border) ==\n                DataGridViewPaintParts.Border)\n            {\n                PaintBorder(graphics, clipBounds, cellBounds, cellStyle,\n                    advancedBorderStyle);\n            }\n\n            // Calculate the area in which to draw the button.\n            Rectangle buttonArea = cellBounds;\n            Rectangle buttonAdjustment =\n                this.BorderWidths(advancedBorderStyle);\n            buttonArea.X += buttonAdjustment.X;\n            buttonArea.Y += buttonAdjustment.Y;\n            buttonArea.Height -= buttonAdjustment.Height;\n            buttonArea.Width -= buttonAdjustment.Width;\n\n            // Draw the disabled button.                \n            ButtonRenderer.DrawButton(graphics, buttonArea,\n                PushButtonState.Disabled);\n\n            // Draw the disabled button text. \n            if (this.FormattedValue is String) \n            {\n                TextRenderer.DrawText(graphics,\n                    (string)this.FormattedValue,\n                    this.DataGridView.Font,\n                    buttonArea, SystemColors.GrayText);\n            }\n        }\n        else\n        {\n            // The button cell is enabled, so let the base class \n            // handle the painting.\n            base.Paint(graphics, clipBounds, cellBounds, rowIndex,\n                elementState, value, formattedValue, errorText,\n                cellStyle, advancedBorderStyle, paintParts);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ClickUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClickUnsharesRow(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> containing the data passed to the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.OnClick*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ClickUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnClick_\" data-linktype=\"relative-path\">OnClick</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnClick_\" data-linktype=\"relative-path\">OnClick</a> has the effect of unsharing the cell&#39;s row. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Clone\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the cloned <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override the Clone method whenever you derive from the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class and add new properties to the derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ContentClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ContentClickUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentClickUnsharesRow(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell&#39;s content is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ContentClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> containing the data passed to the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.OnContentClick*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContentClickUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnContentClick_\" data-linktype=\"relative-path\">OnContentClick</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnContentClick_\" data-linktype=\"relative-path\">OnContentClick</a> has the effect of unsharing the cell&#39;s row. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ContentDoubleClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ContentDoubleClickUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentDoubleClickUnsharesRow(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell&#39;s content is double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ContentDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> containing the data passed to the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.OnContentDoubleClick*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ContentDoubleClickUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnContentDoubleClick_\" data-linktype=\"relative-path\">OnContentDoubleClick</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnContentDoubleClick_\" data-linktype=\"relative-path\">OnContentDoubleClick</a> has the effect of unsharing the cell&#39;s row. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_CreateAccessibilityInstance\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_CreateAccessibilityInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAccessibilityInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new accessible object for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.windows.forms.datagridviewcell.datagridviewcellaccessibleobject\" data-linktype=\"relative-path\">DataGridViewCell+DataGridViewCellAccessibleObject</a> for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_AccessibilityObject_\" data-linktype=\"relative-path\">AccessibilityObject</a> property is referenced.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To get or set <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_AccessibilityObject_\" data-linktype=\"relative-path\">AccessibilityObject</a>, you must add a reference to the <code>Accessibility</code> assembly installed with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE -->.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_DetachEditingControl\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_DetachEditingControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DetachEditingControl()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the cell&#39;s editing control from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void DetachEditingControl ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This cell is not associated with a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Windows.Forms.DataGridView.EditingControl*</span> property of the associated <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> has a value of <code>null</code>. This is the case, for example, when the control is not in edit mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> calls this method when the current cell hosts an editing control and editing mode ends. This method removes the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingControl_\" data-linktype=\"relative-path\">EditingControl</a> from the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingPanel_\" data-linktype=\"relative-path\">EditingPanel</a>, and then removes the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingPanel_\" data-linktype=\"relative-path\">EditingPanel</a> from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Dispose\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> references. This method invokes the <code>Dispose</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_DoubleClickUnsharesRow_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_DoubleClickUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoubleClickUnsharesRow(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the cell&#39;s row will be unshared when the cell is double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool DoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> containing the data passed to the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.OnDoubleClick*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DoubleClickUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnDoubleClick_\" data-linktype=\"relative-path\">OnDoubleClick</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnDoubleClick_\" data-linktype=\"relative-path\">OnDoubleClick</a> has the effect of unsharing the cell&#39;s row. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_EnterUnsharesRow_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_EnterUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnterUnsharesRow(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the parent row will be unshared when the focus moves to the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool EnterUnsharesRow (int rowIndex, bool throughMouseClick);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>throughMouseClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if a user action moved focus to the cell; <code>false</code> if a programmatic operation moved focus to the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared; otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EnterUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnEnter_\" data-linktype=\"relative-path\">OnEnter</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnEnter_\" data-linktype=\"relative-path\">OnEnter</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Finalize\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources and performs other cleanup operations before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~DataGridViewCell ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method calls the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method with <code>false</code> as a parameter.  </p>\n<p> This method overrides <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a>. Application code should not call this method; an object&#39;s <code>Finalize</code> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetClipboardContent_System_Int32_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetClipboardContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetClipboardContent(Int32,Boolean,Boolean,Boolean,Boolean,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the formatted value of the cell to copy to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object GetClipboardContent (int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the row containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>firstCell</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the cell is in the first column of the region defined by the selected cells; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lastCell</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the cell is the last column of the region defined by the selected cells; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inFirstRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the cell is in the first row of the region defined by the selected cells; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inLastRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the cell is in the last row of the region defined by the selected cells; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current format string of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the value of the cell to copy to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is less than 0 or greater than or equal to the number of rows in the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Formatting failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or the handler set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GetClipboardContent_\" data-linktype=\"relative-path\">GetClipboardContent</a> method to retrieve a Clipboard-formatted value that represents the cell value.  </p>\n<p> The cell value is first retrieved in its display format from the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetEditedFormattedValue_\" data-linktype=\"relative-path\">GetEditedFormattedValue</a> method. This may raise the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellFormatting</a> event to format the value and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.DataError</a> event if formatting is unsuccessful.  </p>\n<p> The position-related parameters of this method indicate where this cell is located in the table of data representing the region defined by the selected cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. Depending on the cell&#39;s position, additional formatting information may be returned by this method along with the display-formatted cell value. For example, the HTML format for a cell in the first column of a row will include the tag that indicates the beginning of a row.  </p>\n<p> The supported Clipboard formats include <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_Text\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.Text</a>, <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_UnicodeText\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.UnicodeText</a>, <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_Html\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.Html</a>, and <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_CommaSeparatedValue\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.CommaSeparatedValue</a>.  </p>\n<p> For more information, see the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetContentBounds_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetContentBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetContentBounds(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the bounding rectangle that encloses the cell&#39;s content area using a default <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and cell style currently in effect for the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle GetContentBounds (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that bounds the cell&#39;s contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the cell&#39;s contents is computed dynamically when this method is called. The base class implementation always returns <a class=\"xref\" href=\"system.drawing.rectangle#System_Drawing_Rectangle_Empty\" data-linktype=\"relative-path\">System.Drawing.Rectangle.Empty</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetContentBounds_System_Drawing_Graphics_System_Windows_Forms_DataGridViewCellStyle_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetContentBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetContentBounds(Graphics,DataGridViewCellStyle,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the bounding rectangle that encloses the cell&#39;s content area, which is calculated using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> and cell style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The graphics context for the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to be applied to the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that bounds the cell&#39;s contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the cell&#39;s contents is computed dynamically when this method is called. The base class implementation always returns <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">System.Drawing.Rectangle</a>.  </p>\n<p> This method is called internally when the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContentBounds_\" data-linktype=\"relative-path\">ContentBounds</a> property is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetEditedFormattedValue_System_Int32_System_Windows_Forms_DataGridViewDataErrorContexts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetEditedFormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEditedFormattedValue(Int32,DataGridViewDataErrorContexts)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the current, formatted value of the cell, regardless of whether the cell is in edit mode and the value has not been committed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetEditedFormattedValue (int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> values that specifies the data error context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The current, formatted value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Formatting failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or the handler set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the current value of the editing cell or editing control if the cell is in edit mode. Otherwise, this method converts the cell value into an equivalent display value of the type indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> property. This raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellFormatting</a> event, which you can handle to customize the value conversion.  </p>\n<p> If formatting is unsuccessful, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.DataError</a> event occurs. If there is no handler for this event or the handler sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs#System_Windows_Forms_DataGridViewDataErrorEventArgs_ThrowException_\" data-linktype=\"relative-path\">ThrowException</a> property to <code>true</code>, an exception is thrown.  </p>\n<p> Derived classes that override this method will typically return a string representation of the cell value if the <code>context</code> argument includes the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetErrorIconBounds_System_Drawing_Graphics_System_Windows_Forms_DataGridViewCellStyle_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetErrorIconBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetErrorIconBounds(Graphics,DataGridViewCellStyle,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the bounding rectangle that encloses the cell&#39;s error icon, if one is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The graphics context for the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to be applied to the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that bounds the cell&#39;s error icon, if one is displayed; otherwise, <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the cell&#39;s error icon area is computed dynamically when this method is called. The base class implementation always returns <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">System.Drawing.Rectangle</a>.  </p>\n<p> This method is called internally when the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorIconBounds_\" data-linktype=\"relative-path\">ErrorIconBounds</a> property is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetErrorText_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetErrorText(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string that represents the error for the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetErrorText (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that describes the error for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetFormattedValue_System_Object_System_Int32_System_Windows_Forms_DataGridViewCellStyle__System_ComponentModel_TypeConverter_System_ComponentModel_TypeConverter_System_Windows_Forms_DataGridViewDataErrorContexts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetFormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFormattedValue(Object,Int32,DataGridViewCellStyle,TypeConverter,TypeConverter,DataGridViewDataErrorContexts)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the cell as formatted for display.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to be formatted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> in effect for the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>valueTypeConverter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> associated with the value type that provides custom conversion to the formatted value type, or <code>null</code> if no such custom conversion is needed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattedValueTypeConverter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> associated with the formatted value type that provides custom conversion from the value type, or <code>null</code> if no such custom conversion is needed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> values describing the context in which the formatted value is needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The formatted value of the cell or <code>null</code> if the cell does not belong to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Formatting failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or the handler set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control calls this method to convert a cell value into an equivalent display value of the type indicated by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> property. The control passes the cell value to this method in the <code>value</code> parameter.  </p>\n<p> This method raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellFormatting</a> event. A handler for this event can modify both the <code>value</code> and <code>cellStyle</code> parameters. If the handler does not set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs#System_Windows_Forms_DataGridViewCellFormattingEventArgs_FormattingApplied_\" data-linktype=\"relative-path\">FormattingApplied</a> property to <code>true</code>, however, this method formats <code>value</code> using the formatting properties of the <code>cellStyle</code> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method does not convert <code>value</code> to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property value for values equal to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a> property value when <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a> is set to a value other than <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">System.DBNull.Value</a> or <code>null</code>. In this case, you can handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellFormatting</a> event to display the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property value. For more information, see the code example in <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a>.  </p>\n</div>\n<p> If formatting is unsuccessful, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event occurs. If there is no handler for this event or the handler sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs#System_Windows_Forms_DataGridViewDataErrorEventArgs_ThrowException_\" data-linktype=\"relative-path\">ThrowException</a> property to <code>true</code>, an exception is thrown.  </p>\n<p> Derived classes that override this method will typically return a string representation of the cell value if the <code>context</code> argument includes the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetInheritedContextMenuStrip_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetInheritedContextMenuStrip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInheritedContextMenuStrip(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the inherited shortcut menu for the current cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the current cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> if the parent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>, or <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> has a <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> assigned; otherwise, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property of the cell is not <code>null</code> and the specified <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the cell does not have an associated <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>, it will inherit one from its parents, using the following precedence:  </p>\n<ol>\n<li><p>This cell&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a>  </p>\n</li>\n<li><p>The owning row&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a>  </p>\n</li>\n<li><p>The owning column&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a>  </p>\n</li>\n<li><p>The parent table&#39;s <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">System.Windows.Forms.ContextMenuStrip</a>  </p>\n<p>Shortcut menus are Microsoft Windows native resources whose lifetimes are typically directed by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method or the destructor.  </p>\n<p>Pass the GetInheritedContextMenuStrip method the row index you used to retrieve the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>. Do not use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> property for the <code>rowIndex</code> parameter. If the row is shared, <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> is -1, which is not a valid value for <code>rowIndex</code>.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetInheritedState_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetInheritedState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInheritedState(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating the current state of the cell as inherited from the state of its row and column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row containing the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values representing the current state of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The cell is not contained within a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and <code>rowIndex</code> is not -1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is not the index of the row containing this cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The cell is contained within a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and <code>rowIndex</code> is outside the valid range of 0 to the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful to determine the state of a cell in a shared row. Shared rows have <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Index_\" data-linktype=\"relative-path\">Index</a> values of -1, which prevents you from using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedState_\" data-linktype=\"relative-path\">InheritedState</a> property with cells in shared rows. To use this method, pass in the actual index of the row containing this cell. You can retrieve the actual index of a shared row by calling the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetInheritedStyle_System_Windows_Forms_DataGridViewCellStyle_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetInheritedStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInheritedStyle(DataGridViewCellStyle,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the style applied to the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle (System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int rowIndex, bool includeColors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>inheritedCellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to be populated with the inherited cell style.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeColors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include inherited colors in the returned cell style; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that includes the style settings of the cell inherited from the cell&#39;s parent row, column, and <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The cell has no associated <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is less than 0, or greater than or equal to the number of rows in the parent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that inherits its settings from the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> objects of the cell&#39;s parent row, column, and <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetPreferredSize_System_Drawing_Graphics_System_Windows_Forms_DataGridViewCellStyle_System_Int32_System_Drawing_Size_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetPreferredSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPreferredSize(Graphics,DataGridViewCellStyle,Int32,Size)</div>        \r\n          </div>\r\n    \r\n            <p>Calculates the preferred size, in pixels, of the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that represents the style of the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based row index of the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>constraintSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cell&#39;s maximum allowable size.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the preferred size, in pixels, of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetPreferredSize method in the base class <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> always returns a <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> with a width and height of -1. However, this method is overridden in the derived cell classes to return proper values.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetSize_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSize(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size of the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Drawing.Size GetSize (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the cell&#39;s dimensions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is -1</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method cannot be used with a cell in a shared row.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_GetValue_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_GetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValue(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object GetValue (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value contained in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property of the cell is not <code>null</code> and <code>rowIndex</code> is less than 0 or greater than or equal to the number of rows in the parent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property of the cell is not <code>null</code> and the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> property is less than 0, indicating that the cell is a row header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Pass the GetValue method the row index you used to retrieve the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>. Do not use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> property for the <code>rowIndex</code> parameter. If the row is shared, <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> is -1, which is not a valid value for <code>rowIndex</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_InitializeEditingControl_System_Int32_System_Object_System_Windows_Forms_DataGridViewCellStyle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_InitializeEditingControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeEditingControl(Int32,Object,DataGridViewCellStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the control used to edit the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based row index of the cell&#39;s location.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>initialFormattedValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the value displayed by the cell when editing is started.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewCellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that represents the style of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is no associated <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> or if one is present, it does not have an associated editing control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As an optimization technique, typically all the cells of the same type and in the same <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> share a single hosted editing control. However, before the control is used by a cell, it needs to be initialized by the InitializeEditingControl method. The first time it is called, this method adds the control to the list of editing controls in its parent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. It also initializes some of the visual properties of the cell. For example, InitializeEditingControl sets the background color of the editing area to match the supplied cell style parameter. Subsequent calls to InitializeEditingControl do nothing.  </p>\n<p> Derived classes use this method to host an instance of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class corresponding to their type. For example, a table that contains one or more <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcell\" data-linktype=\"relative-path\">DataGridViewTextBoxCell</a> objects calls this method to add a single <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> editing control to the owning <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcell#System_Windows_Forms_DataGridViewTextBoxCell_InitializeEditingControl_\" data-linktype=\"relative-path\">InitializeEditingControl</a> method in a simple class that derives from the <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcell\" data-linktype=\"relative-path\">DataGridViewTextBoxCell</a> class. This example is part of a larger code example provided in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#200\">public class CalendarCell : DataGridViewTextBoxCell\n{\n\n    public CalendarCell()\n        : base()\n    {\n        // Use the short date format.\n        this.Style.Format = &quot;d&quot;;\n    }\n\n    public override void InitializeEditingControl(int rowIndex, object \n        initialFormattedValue, DataGridViewCellStyle dataGridViewCellStyle)\n    {\n        // Set the value of the editing control to the current cell value.\n        base.InitializeEditingControl(rowIndex, initialFormattedValue, \n            dataGridViewCellStyle);\n        CalendarEditingControl ctl = \n            DataGridView.EditingControl as CalendarEditingControl;\n        // Use the default row value when Value property is null.\n        if (this.Value == null)\n        {\n            ctl.Value = (DateTime)this.DefaultNewRowValue;\n        }\n        else\n        {\n            ctl.Value = (DateTime)this.Value;\n        }\n    }\n\n    public override Type EditType\n    {\n        get\n        {\n            // Return the type of the editing control that CalendarCell uses.\n            return typeof(CalendarEditingControl);\n        }\n    }\n\n    public override Type ValueType\n    {\n        get\n        {\n            // Return the type of the value that CalendarCell contains.\n            \n            return typeof(DateTime);\n        }\n    }\n\n    public override object DefaultNewRowValue\n    {\n        get\n        {\n            // Use the current date and time as the default value.\n            return DateTime.Now;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#200\">Public Class CalendarCell\n    Inherits DataGridViewTextBoxCell\n\n    Public Sub New()\n        &#39; Use the short date format.\n        Me.Style.Format = &quot;d&quot;\n    End Sub\n\n    Public Overrides Sub InitializeEditingControl(ByVal rowIndex As Integer, _\n        ByVal initialFormattedValue As Object, _\n        ByVal dataGridViewCellStyle As DataGridViewCellStyle)\n\n        &#39; Set the value of the editing control to the current cell value.\n        MyBase.InitializeEditingControl(rowIndex, initialFormattedValue, _\n            dataGridViewCellStyle)\n\n        Dim ctl As CalendarEditingControl = _\n            CType(DataGridView.EditingControl, CalendarEditingControl)\n\n        &#39; Use the default row value when Value property is null.\n        If (Me.Value Is Nothing) Then\n            ctl.Value = CType(Me.DefaultNewRowValue, DateTime)\n        Else\n            ctl.Value = CType(Me.Value, DateTime)\n        End If\n    End Sub\n\n    Public Overrides ReadOnly Property EditType() As Type\n        Get\n            &#39; Return the type of the editing control that CalendarCell uses.\n            Return GetType(CalendarEditingControl)\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property ValueType() As Type\n        Get\n            &#39; Return the type of the value that CalendarCell contains.\n            Return GetType(DateTime)\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property DefaultNewRowValue() As Object\n        Get\n            &#39; Use the current date and time as the default value.\n            Return DateTime.Now\n        End Get\n    End Property\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_KeyDownUnsharesRow_System_Windows_Forms_KeyEventArgs_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_KeyDownUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyDownUnsharesRow(KeyEventArgs,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the parent row is unshared if the user presses a key while the focus is on the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The KeyDownUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnKeyDown_\" data-linktype=\"relative-path\">OnKeyDown</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnKeyDown_\" data-linktype=\"relative-path\">OnKeyDown</a> with the same <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> argument has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_KeyEntersEditMode_System_Windows_Forms_KeyEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_KeyEntersEditMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyEntersEditMode(KeyEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Determines if edit mode should be started based on the given key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that represents the key that was pressed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if edit mode should be started; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override this method to create a custom cell that is editable.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_KeyPressUnsharesRow_System_Windows_Forms_KeyPressEventArgs_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_KeyPressUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyPressUnsharesRow(KeyPressEventArgs,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared if a key is pressed while a cell in the row has focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool KeyPressUnsharesRow (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The KeyPressUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnKeyPress_\" data-linktype=\"relative-path\">OnKeyPress</a> method. In derived classes, it must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnKeyPress_\" data-linktype=\"relative-path\">OnKeyPress</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_KeyUpUnsharesRow_System_Windows_Forms_KeyEventArgs_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_KeyUpUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyUpUnsharesRow(KeyEventArgs,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the parent row is unshared when the user releases a key while the focus is on the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The KeyUpUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnKeyUp_\" data-linktype=\"relative-path\">OnKeyUp</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnKeyUp_\" data-linktype=\"relative-path\">OnKeyUp</a> with the same <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> argument has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_LeaveUnsharesRow_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_LeaveUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LeaveUnsharesRow(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared when the focus leaves a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LeaveUnsharesRow (int rowIndex, bool throughMouseClick);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>throughMouseClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if a user action moved focus to the cell; <code>false</code> if a programmatic operation moved focus to the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LeaveUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnLeave_\" data-linktype=\"relative-path\">OnLeave</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnLeave_\" data-linktype=\"relative-path\">OnLeave</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MeasureTextHeight_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Int32_System_Windows_Forms_TextFormatFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MeasureTextHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the height, in pixels, of the specified text, given the specified characteristics.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to render the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> applied to the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>maxWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum width of the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values to apply to the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The height, in pixels, of the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>maxWidth</code> is less than 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>flags</code> is not a valid bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If multiple lines are required and the specified formatting allows it, the height returned is the combined height of all lines.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MeasureTextHeight_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Int32_System_Windows_Forms_TextFormatFlags_System_Boolean__\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MeasureTextHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureTextHeight(Graphics,String,Font,Int32,TextFormatFlags,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the height, in pixels, of the specified text, given the specified characteristics. Also indicates whether the required width is greater than the specified maximum width.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags, out bool widthTruncated);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to render the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> applied to the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>maxWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum width of the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values to apply to the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>widthTruncated</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Set to <code>true</code> if the required width of the text is greater than <code>maxWidth</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The height, in pixels, of the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>maxWidth</code> is less than 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>flags</code> is not a valid bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If multiple lines are required and the specified formatting allows it, the height returned is the combined height of all lines.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MeasureTextPreferredSize_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Single_System_Windows_Forms_TextFormatFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MeasureTextPreferredSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureTextPreferredSize(Graphics,String,Font,Single,TextFormatFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ideal height and width of the specified text given the specified characteristics.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Size MeasureTextPreferredSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, float maxRatio, System.Windows.Forms.TextFormatFlags flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to render the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> applied to the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>maxRatio</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum width-to-height ratio of the block of text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values to apply to the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the preferred height and width of the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>maxRatio</code> is less than or equal to 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>flags</code> is not a valid bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If multiple lines are required and the specified formatting allows it, the size returned includes the combined height of all lines.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MeasureTextSize_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Windows_Forms_TextFormatFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MeasureTextSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureTextSize(Graphics,String,Font,TextFormatFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the height and width of the specified text given the specified characteristics.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Size MeasureTextSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to render the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> applied to the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values to apply to the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the height and width of the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>flags</code> is not a valid bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If multiple lines are required and the specified formatting allows it, the size returned includes the combined height of all lines.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MeasureTextWidth_System_Drawing_Graphics_System_String_System_Drawing_Font_System_Int32_System_Windows_Forms_TextFormatFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MeasureTextWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureTextWidth(Graphics,String,Font,Int32,TextFormatFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the width, in pixels, of the specified text given the specified characteristics.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int MeasureTextWidth (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxHeight, System.Windows.Forms.TextFormatFlags flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to render the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to measure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> applied to the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>maxHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum height of the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values to apply to the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The width, in pixels, of the text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>font</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>maxHeight</code> is less than 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>flags</code> is not a valid bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseClickUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseClickUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseClickUnsharesRow(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared if the user clicks a mouse button while the pointer is on a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseClickUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseClick_\" data-linktype=\"relative-path\">OnMouseClick</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseClick_\" data-linktype=\"relative-path\">OnMouseClick</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseDoubleClickUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseDoubleClickUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseDoubleClickUnsharesRow(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared if the user double-clicks a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseDoubleClickUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseDoubleClick_\" data-linktype=\"relative-path\">OnMouseDoubleClick</a> method. It must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseDoubleClick_\" data-linktype=\"relative-path\">OnMouseDoubleClick</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseDownUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseDownUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseDownUnsharesRow(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared when the user holds down a mouse button while the pointer is on a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseDownUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseDown_\" data-linktype=\"relative-path\">OnMouseDown</a> method. In derived classes, it must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseDown_\" data-linktype=\"relative-path\">OnMouseDown</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseEnterUnsharesRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseEnterUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseEnterUnsharesRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseEnterUnsharesRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseEnterUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseEnter_\" data-linktype=\"relative-path\">OnMouseEnter</a> method. In derived classes, it must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseEnter_\" data-linktype=\"relative-path\">OnMouseEnter</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseLeaveUnsharesRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseLeaveUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseLeaveUnsharesRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared when the mouse pointer leaves the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseLeaveUnsharesRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseLeaveUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseLeave_\" data-linktype=\"relative-path\">OnMouseLeave</a> method. In derived classes, it must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseLeave_\" data-linktype=\"relative-path\">OnMouseLeave</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseMoveUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseMoveUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseMoveUnsharesRow(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseMoveUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseMoveUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseMove_\" data-linktype=\"relative-path\">OnMouseMove</a> method. In derived classes, it must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseMove_\" data-linktype=\"relative-path\">OnMouseMove</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_MouseUpUnsharesRow_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_MouseUpUnsharesRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseUpUnsharesRow(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a row will be unshared when the user releases a mouse button while the pointer is on a cell in the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row will be unshared, otherwise, <code>false</code>. The base <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MouseUpUnsharesRow method is called just before the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseUp_\" data-linktype=\"relative-path\">OnMouseUp</a> method. In derived classes, it must return <code>true</code> if the call to <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_OnMouseUp_\" data-linktype=\"relative-path\">OnMouseUp</a> has the effect of unsharing the row containing the cell. Otherwise, it should return <code>false</code>.  </p>\n<p> For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the cell is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellClick_\" data-linktype=\"relative-path\">OnCellClick</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellClick</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnContentClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnContentClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the cell&#39;s contents are clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellContentClick_\" data-linktype=\"relative-path\">OnCellContentClick</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellContentClick</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnContentDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnContentDoubleClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the cell&#39;s contents are double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellContentDoubleClick_\" data-linktype=\"relative-path\">OnCellContentDoubleClick</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentDoubleClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellContentDoubleClick</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnDataGridViewChanged\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnDataGridViewChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataGridViewChanged()</div>        \r\n          </div>\r\n    \r\n            <p>Called when the <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property of the cell changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnDataGridViewChanged ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDoubleClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the cell is double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellDoubleClick_\" data-linktype=\"relative-path\">OnCellDoubleClick</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellDoubleClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellDoubleClick</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnEnter_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEnter(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the focus moves to a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnEnter (int rowIndex, bool throughMouseClick);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>throughMouseClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if a user action moved focus to the cell; <code>false</code> if a programmatic operation moved focus to the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellEnter_\" data-linktype=\"relative-path\">OnCellEnter</a> method. It is called in the same circumstances in which an <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEnter\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellEnter</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnKeyDown_System_Windows_Forms_KeyEventArgs_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnKeyDown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnKeyDown(KeyEventArgs,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Called when a character key is pressed while the focus is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyDown_\" data-linktype=\"relative-path\">OnKeyDown</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnKeyPress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnKeyPress(KeyPressEventArgs,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Called when a key is pressed while the focus is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyPress_\" data-linktype=\"relative-path\">OnKeyPress</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnKeyUp_System_Windows_Forms_KeyEventArgs_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnKeyUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnKeyUp(KeyEventArgs,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Called when a character key is released while the focus is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyUp_\" data-linktype=\"relative-path\">OnKeyUp</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnLeave_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLeave(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the focus moves from a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnLeave (int rowIndex, bool throughMouseClick);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>throughMouseClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if a user action moved focus from the cell; <code>false</code> if a programmatic operation moved focus from the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellLeave_\" data-linktype=\"relative-path\">OnCellLeave</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellLeave\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellLeave</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the user clicks a mouse button while the pointer is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseClick_\" data-linktype=\"relative-path\">OnCellMouseClick</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseClick</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#10\">    // Override OnMouseClick in a class derived from DataGridViewCell to \n    // enter edit mode when the user clicks the cell. \n    protected override void OnMouseClick(DataGridViewCellMouseEventArgs e)\n    {\n        if (base.DataGridView != null)\n        {\n            Point point1 = base.DataGridView.CurrentCellAddress;\n            if (point1.X == e.ColumnIndex &amp;&amp;\n                point1.Y == e.RowIndex &amp;&amp;\n                e.Button == MouseButtons.Left &amp;&amp;\n                base.DataGridView.EditMode !=\n                DataGridViewEditMode.EditProgrammatically)\n            {\n                base.DataGridView.BeginEdit(true);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#10\">    &#39; Override OnMouseClick in a class derived from DataGridViewCell to \n    &#39; enter edit mode when the user clicks the cell. \n    Protected Overrides Sub OnMouseClick( _\n        ByVal e As DataGridViewCellMouseEventArgs)\n\n        If MyBase.DataGridView IsNot Nothing Then\n\n            Dim point1 As Point = MyBase.DataGridView.CurrentCellAddress\n            If point1.X = e.ColumnIndex And _\n                point1.Y = e.RowIndex And _\n                e.Button = MouseButtons.Left And _\n                Not MyBase.DataGridView.EditMode = _\n                DataGridViewEditMode.EditProgrammatically Then\n\n                MyBase.DataGridView.BeginEdit(True)\n\n            End If\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseDoubleClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the user double-clicks a mouse button while the pointer is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseDoubleClick_\" data-linktype=\"relative-path\">OnCellMouseDoubleClick</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseDoubleClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseDoubleClick</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseDown_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseDown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseDown(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the user holds down a mouse button while the pointer is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseDown_\" data-linktype=\"relative-path\">OnCellMouseDown</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseDown\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseDown</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseEnter_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseEnter(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the mouse pointer moves over a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseEnter (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseEnter_\" data-linktype=\"relative-path\">OnCellMouseEnter</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseEnter\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseEnter</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20Cells%20and%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control%20by%20Extending%20Their%20Behavior%20and%20Appearance.md\" data-linktype=\"relative-path\">How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    // Force the cell to repaint itself when the mouse pointer enters it.\n    protected override void OnMouseEnter(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n\n    // Force the cell to repaint itself when the mouse pointer leaves it.\n    protected override void OnMouseLeave(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    &#39; Force the cell to repaint itself when the mouse pointer enters it.\n    Protected Overrides Sub OnMouseEnter(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n\n    &#39; Force the cell to repaint itself when the mouse pointer leaves it.\n    Protected Overrides Sub OnMouseLeave(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseLeave_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseLeave(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the mouse pointer leaves the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseLeave (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseLeave_\" data-linktype=\"relative-path\">OnCellMouseLeave</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseLeave\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseLeave</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20Cells%20and%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control%20by%20Extending%20Their%20Behavior%20and%20Appearance.md\" data-linktype=\"relative-path\">How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    // Force the cell to repaint itself when the mouse pointer enters it.\n    protected override void OnMouseEnter(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n\n    // Force the cell to repaint itself when the mouse pointer leaves it.\n    protected override void OnMouseLeave(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    &#39; Force the cell to repaint itself when the mouse pointer enters it.\n    Protected Overrides Sub OnMouseEnter(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n\n    &#39; Force the cell to repaint itself when the mouse pointer leaves it.\n    Protected Overrides Sub OnMouseLeave(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseMove_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseMove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseMove(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the mouse pointer moves within a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseMove_\" data-linktype=\"relative-path\">OnCellMouseMove</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseMove\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseMove</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_OnMouseUp_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_OnMouseUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseUp(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the user releases a mouse button while the pointer is on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_OnCellMouseUp_\" data-linktype=\"relative-path\">OnCellMouseUp</a> method. It is called in the same circumstances in which a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseUp\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellMouseUp</a> event is raised, but it does not actually raise the event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_Paint_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Int32_System_Windows_Forms_DataGridViewElementStates_System_Object_System_Object_System_String_System_Windows_Forms_DataGridViewCellStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewPaintParts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_Paint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that contains the bounds of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values that specifies the state of the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattedValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatted data of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errorText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An error message that is associated with the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that contains formatting and style information about the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>advancedBorderStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that contains border styles for the cell that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>paintParts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values that specifies which parts of the cell need to be painted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the Paint method of a <a class=\"xref\" href=\"system.windows.forms.datagridviewbuttoncell\" data-linktype=\"relative-path\">DataGridViewButtonCell</a>. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Disable%20Buttons%20in%20a%20Button%20Column%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#20\">    Protected Overrides Sub Paint(ByVal graphics As Graphics, _\n        ByVal clipBounds As Rectangle, ByVal cellBounds As Rectangle, _\n        ByVal rowIndex As Integer, _\n        ByVal elementState As DataGridViewElementStates, _\n        ByVal value As Object, ByVal formattedValue As Object, _\n        ByVal errorText As String, _\n        ByVal cellStyle As DataGridViewCellStyle, _\n        ByVal advancedBorderStyle As DataGridViewAdvancedBorderStyle, _\n        ByVal paintParts As DataGridViewPaintParts)\n\n        &#39; The button cell is disabled, so paint the border,  \n        &#39; background, and disabled button for the cell.\n        If Not Me.enabledValue Then\n\n            &#39; Draw the background of the cell, if specified.\n            If (paintParts And DataGridViewPaintParts.Background) = _\n                DataGridViewPaintParts.Background Then\n\n                Dim cellBackground As New SolidBrush(cellStyle.BackColor)\n                graphics.FillRectangle(cellBackground, cellBounds)\n                cellBackground.Dispose()\n            End If\n\n            &#39; Draw the cell borders, if specified.\n            If (paintParts And DataGridViewPaintParts.Border) = _\n                DataGridViewPaintParts.Border Then\n\n                PaintBorder(graphics, clipBounds, cellBounds, cellStyle, _\n                    advancedBorderStyle)\n            End If\n\n            &#39; Calculate the area in which to draw the button.\n            Dim buttonArea As Rectangle = cellBounds\n            Dim buttonAdjustment As Rectangle = _\n                Me.BorderWidths(advancedBorderStyle)\n            buttonArea.X += buttonAdjustment.X\n            buttonArea.Y += buttonAdjustment.Y\n            buttonArea.Height -= buttonAdjustment.Height\n            buttonArea.Width -= buttonAdjustment.Width\n\n            &#39; Draw the disabled button.                \n            ButtonRenderer.DrawButton(graphics, buttonArea, _\n                PushButtonState.Disabled)\n\n            &#39; Draw the disabled button text. \n            If TypeOf Me.FormattedValue Is String Then\n                TextRenderer.DrawText(graphics, CStr(Me.FormattedValue), _\n                    Me.DataGridView.Font, buttonArea, SystemColors.GrayText)\n            End If\n\n        Else\n            &#39; The button cell is enabled, so let the base class \n            &#39; handle the painting.\n            MyBase.Paint(graphics, clipBounds, cellBounds, rowIndex, _\n                elementState, value, formattedValue, errorText, _\n                cellStyle, advancedBorderStyle, paintParts)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#20\">    protected override void Paint(Graphics graphics,\n        Rectangle clipBounds, Rectangle cellBounds, int rowIndex,\n        DataGridViewElementStates elementState, object value,\n        object formattedValue, string errorText,\n        DataGridViewCellStyle cellStyle,\n        DataGridViewAdvancedBorderStyle advancedBorderStyle,\n        DataGridViewPaintParts paintParts)\n    {\n        // The button cell is disabled, so paint the border,  \n        // background, and disabled button for the cell.\n        if (!this.enabledValue)\n        {\n            // Draw the cell background, if specified.\n            if ((paintParts &amp; DataGridViewPaintParts.Background) ==\n                DataGridViewPaintParts.Background)\n            {\n                SolidBrush cellBackground =\n                    new SolidBrush(cellStyle.BackColor);\n                graphics.FillRectangle(cellBackground, cellBounds);\n                cellBackground.Dispose();\n            }\n\n            // Draw the cell borders, if specified.\n            if ((paintParts &amp; DataGridViewPaintParts.Border) ==\n                DataGridViewPaintParts.Border)\n            {\n                PaintBorder(graphics, clipBounds, cellBounds, cellStyle,\n                    advancedBorderStyle);\n            }\n\n            // Calculate the area in which to draw the button.\n            Rectangle buttonArea = cellBounds;\n            Rectangle buttonAdjustment =\n                this.BorderWidths(advancedBorderStyle);\n            buttonArea.X += buttonAdjustment.X;\n            buttonArea.Y += buttonAdjustment.Y;\n            buttonArea.Height -= buttonAdjustment.Height;\n            buttonArea.Width -= buttonAdjustment.Width;\n\n            // Draw the disabled button.                \n            ButtonRenderer.DrawButton(graphics, buttonArea,\n                PushButtonState.Disabled);\n\n            // Draw the disabled button text. \n            if (this.FormattedValue is String) \n            {\n                TextRenderer.DrawText(graphics,\n                    (string)this.FormattedValue,\n                    this.DataGridView.Font,\n                    buttonArea, SystemColors.GrayText);\n            }\n        }\n        else\n        {\n            // The button cell is enabled, so let the base class \n            // handle the painting.\n            base.Paint(graphics, clipBounds, cellBounds, rowIndex,\n                elementState, value, formattedValue, errorText,\n                cellStyle, advancedBorderStyle, paintParts);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_PaintBorder_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewCellStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_PaintBorder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintBorder(Graphics,Rectangle,Rectangle,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the border of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PaintBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the border.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that contains the area of the border that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that contains formatting and style information about the current cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>advancedBorderStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that contains border styles of the border that is being painted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Disable%20Buttons%20in%20a%20Button%20Column%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#20\">    Protected Overrides Sub Paint(ByVal graphics As Graphics, _\n        ByVal clipBounds As Rectangle, ByVal cellBounds As Rectangle, _\n        ByVal rowIndex As Integer, _\n        ByVal elementState As DataGridViewElementStates, _\n        ByVal value As Object, ByVal formattedValue As Object, _\n        ByVal errorText As String, _\n        ByVal cellStyle As DataGridViewCellStyle, _\n        ByVal advancedBorderStyle As DataGridViewAdvancedBorderStyle, _\n        ByVal paintParts As DataGridViewPaintParts)\n\n        &#39; The button cell is disabled, so paint the border,  \n        &#39; background, and disabled button for the cell.\n        If Not Me.enabledValue Then\n\n            &#39; Draw the background of the cell, if specified.\n            If (paintParts And DataGridViewPaintParts.Background) = _\n                DataGridViewPaintParts.Background Then\n\n                Dim cellBackground As New SolidBrush(cellStyle.BackColor)\n                graphics.FillRectangle(cellBackground, cellBounds)\n                cellBackground.Dispose()\n            End If\n\n            &#39; Draw the cell borders, if specified.\n            If (paintParts And DataGridViewPaintParts.Border) = _\n                DataGridViewPaintParts.Border Then\n\n                PaintBorder(graphics, clipBounds, cellBounds, cellStyle, _\n                    advancedBorderStyle)\n            End If\n\n            &#39; Calculate the area in which to draw the button.\n            Dim buttonArea As Rectangle = cellBounds\n            Dim buttonAdjustment As Rectangle = _\n                Me.BorderWidths(advancedBorderStyle)\n            buttonArea.X += buttonAdjustment.X\n            buttonArea.Y += buttonAdjustment.Y\n            buttonArea.Height -= buttonAdjustment.Height\n            buttonArea.Width -= buttonAdjustment.Width\n\n            &#39; Draw the disabled button.                \n            ButtonRenderer.DrawButton(graphics, buttonArea, _\n                PushButtonState.Disabled)\n\n            &#39; Draw the disabled button text. \n            If TypeOf Me.FormattedValue Is String Then\n                TextRenderer.DrawText(graphics, CStr(Me.FormattedValue), _\n                    Me.DataGridView.Font, buttonArea, SystemColors.GrayText)\n            End If\n\n        Else\n            &#39; The button cell is enabled, so let the base class \n            &#39; handle the painting.\n            MyBase.Paint(graphics, clipBounds, cellBounds, rowIndex, _\n                elementState, value, formattedValue, errorText, _\n                cellStyle, advancedBorderStyle, paintParts)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#20\">    protected override void Paint(Graphics graphics,\n        Rectangle clipBounds, Rectangle cellBounds, int rowIndex,\n        DataGridViewElementStates elementState, object value,\n        object formattedValue, string errorText,\n        DataGridViewCellStyle cellStyle,\n        DataGridViewAdvancedBorderStyle advancedBorderStyle,\n        DataGridViewPaintParts paintParts)\n    {\n        // The button cell is disabled, so paint the border,  \n        // background, and disabled button for the cell.\n        if (!this.enabledValue)\n        {\n            // Draw the cell background, if specified.\n            if ((paintParts &amp; DataGridViewPaintParts.Background) ==\n                DataGridViewPaintParts.Background)\n            {\n                SolidBrush cellBackground =\n                    new SolidBrush(cellStyle.BackColor);\n                graphics.FillRectangle(cellBackground, cellBounds);\n                cellBackground.Dispose();\n            }\n\n            // Draw the cell borders, if specified.\n            if ((paintParts &amp; DataGridViewPaintParts.Border) ==\n                DataGridViewPaintParts.Border)\n            {\n                PaintBorder(graphics, clipBounds, cellBounds, cellStyle,\n                    advancedBorderStyle);\n            }\n\n            // Calculate the area in which to draw the button.\n            Rectangle buttonArea = cellBounds;\n            Rectangle buttonAdjustment =\n                this.BorderWidths(advancedBorderStyle);\n            buttonArea.X += buttonAdjustment.X;\n            buttonArea.Y += buttonAdjustment.Y;\n            buttonArea.Height -= buttonAdjustment.Height;\n            buttonArea.Width -= buttonAdjustment.Width;\n\n            // Draw the disabled button.                \n            ButtonRenderer.DrawButton(graphics, buttonArea,\n                PushButtonState.Disabled);\n\n            // Draw the disabled button text. \n            if (this.FormattedValue is String) \n            {\n                TextRenderer.DrawText(graphics,\n                    (string)this.FormattedValue,\n                    this.DataGridView.Font,\n                    buttonArea, SystemColors.GrayText);\n            }\n        }\n        else\n        {\n            // The button cell is enabled, so let the base class \n            // handle the painting.\n            base.Paint(graphics, clipBounds, cellBounds, rowIndex,\n                elementState, value, formattedValue, errorText,\n                cellStyle, advancedBorderStyle, paintParts);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_PaintErrorIcon_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_PaintErrorIcon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintErrorIcon(Graphics,Rectangle,Rectangle,String)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the error icon of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PaintErrorIcon (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellValueBounds, string errorText);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the border.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellValueBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The bounding <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that encloses the cell&#39;s content area.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errorText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An error message that is associated with the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>errorText</code> parameter signals the existence of an error. If <code>errorText</code> is <code>null</code> or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a>, the PaintErrorIcon method does nothing.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ParseFormattedValue_System_Object_System_Windows_Forms_DataGridViewCellStyle_System_ComponentModel_TypeConverter_System_ComponentModel_TypeConverter_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ParseFormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParseFormattedValue(Object,DataGridViewCellStyle,TypeConverter,TypeConverter)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a value formatted for display to an actual cell value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattedValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display value of the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> in effect for the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattedValueTypeConverter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> for the display value type, or <code>null</code> to use the default converter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>valueTypeConverter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> for the cell value type, or <code>null</code> to use the default converter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The cell value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>cellStyle</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.FormattedValueType*</span> property value is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ValueType*</span> property value is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>formattedValue</code> cannot be converted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>formattedValue</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The type of <code>formattedValue</code> does not match the type indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.FormattedValueType*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the user edits a cell value and commits the change, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control calls this method to convert the displayed value from the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a>. The control then sets the underlying cell value or data source value to the converted value.  </p>\n<p> The default implementation of this method parses the <code>formattedValue</code> parameter using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> properties of the cell style indicated by the <code>cellStyle</code> parameter.  </p>\n<p> If <code>formattedValue</code> is equal to <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, this method returns the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a> property or <code>null</code> if <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a> is <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">System.DBNull.Value</a> and the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> is a reference type.  </p>\n<p> If <code>formattedValue</code> is not equal to <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, this method parses <code>formattedValue</code> using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> property and the specified or default converters.  </p>\n<p> If the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> is nullable, this method wraps the return value as a <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> type.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_PositionEditingControl_System_Boolean_System_Boolean_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewCellStyle_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_PositionEditingControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PositionEditingControl(Boolean,Boolean,Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the location and size of the editing control hosted by a cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void PositionEditingControl (bool setLocation, bool setSize, System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>setLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to have the control placed as specified by the other arguments; <code>false</code> to allow the control to place itself.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>setSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to specify the size; <code>false</code> to allow the control to size itself.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that defines the cell bounds.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellClip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The area that will be used to paint the editing control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that represents the style of the cell being edited.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleVerticalBorderAdded</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to add a vertical border to the cell; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleHorizontalBorderAdded</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to add a horizontal border to the cell; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the hosting cell is in the first visible column; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the hosting cell is in the first visible row; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The cell is not contained within a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Some classes derived from the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class, such as <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a>, host a control in the selected cell. The PositionEditingControl method positions the editing control inside of the host cell. Because the editing control may take up more space than a single cell, it may need to be positioned differently when editing a cell in the first visible column or first visible row so it does not paint outside the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_PositionEditingPanel_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewCellStyle_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_PositionEditingPanel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PositionEditingPanel(Rectangle,Rectangle,DataGridViewCellStyle,Boolean,Boolean,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the location and size of the editing panel hosted by the cell, and returns the normal bounds of the editing control within the editing panel.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Drawing.Rectangle PositionEditingPanel (System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that defines the cell bounds.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellClip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The area that will be used to paint the editing panel.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that represents the style of the cell being edited.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleVerticalBorderAdded</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to add a vertical border to the cell; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>singleHorizontalBorderAdded</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to add a horizontal border to the cell; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the cell is in the first column currently displayed in the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the cell is in the first row currently displayed in the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the normal bounds of the editing control within the editing panel.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The cell has not been added to a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_SetValue_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_SetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetValue(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the value of the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool SetValue (int rowIndex, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the cell&#39;s parent row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cell value to set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value has been set; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is less than 0 or greater than or equal to the number of rows in the parent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCell_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCell_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string that describes the current object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unless otherwise noted, the ToString method for all the various cell types will return a string of the form shown in the following code example:  </p>\n<p> <code>Classname {RowIndex = #, ColumnIndex = #}</code></p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCell.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCell.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.AccessibilityObject\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.BorderWidths\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ClickUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ColumnIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ContentBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ContextMenuStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.DefaultNewRowValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.DetachEditingControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Displayed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.EditedFormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.EditType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.EnterUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ErrorIconBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ErrorText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.FormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.FormattedValueType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Frozen\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetClipboardContent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetContentBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetErrorIconBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetErrorText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetFormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetInheritedState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetInheritedStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetPreferredSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.GetValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.HasStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.InheritedState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.InheritedStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.InitializeEditingControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.IsInEditMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.KeyEntersEditMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MeasureTextHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MeasureTextSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MeasureTextWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnContentClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnContentDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnKeyPress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnKeyUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OnMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OwningColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.OwningRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.PaintBorder\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.PaintErrorIcon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ParseFormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.PositionEditingControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.PositionEditingPanel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.PreferredSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Resizable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.RowIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Selected\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.SetValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Size\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Style\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Tag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ToolTipText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Value\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.ValueType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCell.Visible\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0ec8cf29-67dc-d89a-0fa2-22b31bb16f1b\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridViewCell.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an individual cell in a  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewCell\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCell.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCell.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridViewCell","System.Windows.Forms.DataGridViewCell..ctor","System.Windows.Forms.DataGridViewCell.AccessibilityObject","System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle","System.Windows.Forms.DataGridViewCell.BorderWidths","System.Windows.Forms.DataGridViewCell.ClickUnsharesRow","System.Windows.Forms.DataGridViewCell.Clone","System.Windows.Forms.DataGridViewCell.ColumnIndex","System.Windows.Forms.DataGridViewCell.ContentBounds","System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow","System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow","System.Windows.Forms.DataGridViewCell.ContextMenuStrip","System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance","System.Windows.Forms.DataGridViewCell.DefaultNewRowValue","System.Windows.Forms.DataGridViewCell.DetachEditingControl","System.Windows.Forms.DataGridViewCell.Displayed","System.Windows.Forms.DataGridViewCell.Dispose","System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow","System.Windows.Forms.DataGridViewCell.EditedFormattedValue","System.Windows.Forms.DataGridViewCell.EditType","System.Windows.Forms.DataGridViewCell.EnterUnsharesRow","System.Windows.Forms.DataGridViewCell.ErrorIconBounds","System.Windows.Forms.DataGridViewCell.ErrorText","System.Windows.Forms.DataGridViewCell.Finalize","System.Windows.Forms.DataGridViewCell.FormattedValue","System.Windows.Forms.DataGridViewCell.FormattedValueType","System.Windows.Forms.DataGridViewCell.Frozen","System.Windows.Forms.DataGridViewCell.GetClipboardContent","System.Windows.Forms.DataGridViewCell.GetContentBounds","System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue","System.Windows.Forms.DataGridViewCell.GetErrorIconBounds","System.Windows.Forms.DataGridViewCell.GetErrorText","System.Windows.Forms.DataGridViewCell.GetFormattedValue","System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip","System.Windows.Forms.DataGridViewCell.GetInheritedState","System.Windows.Forms.DataGridViewCell.GetInheritedStyle","System.Windows.Forms.DataGridViewCell.GetPreferredSize","System.Windows.Forms.DataGridViewCell.GetSize","System.Windows.Forms.DataGridViewCell.GetValue","System.Windows.Forms.DataGridViewCell.HasStyle","System.Windows.Forms.DataGridViewCell.InheritedState","System.Windows.Forms.DataGridViewCell.InheritedStyle","System.Windows.Forms.DataGridViewCell.InitializeEditingControl","System.Windows.Forms.DataGridViewCell.IsInEditMode","System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow","System.Windows.Forms.DataGridViewCell.KeyEntersEditMode","System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow","System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow","System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow","System.Windows.Forms.DataGridViewCell.MeasureTextHeight","System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize","System.Windows.Forms.DataGridViewCell.MeasureTextSize","System.Windows.Forms.DataGridViewCell.MeasureTextWidth","System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow","System.Windows.Forms.DataGridViewCell.OnClick","System.Windows.Forms.DataGridViewCell.OnContentClick","System.Windows.Forms.DataGridViewCell.OnContentDoubleClick","System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged","System.Windows.Forms.DataGridViewCell.OnDoubleClick","System.Windows.Forms.DataGridViewCell.OnEnter","System.Windows.Forms.DataGridViewCell.OnKeyDown","System.Windows.Forms.DataGridViewCell.OnKeyPress","System.Windows.Forms.DataGridViewCell.OnKeyUp","System.Windows.Forms.DataGridViewCell.OnLeave","System.Windows.Forms.DataGridViewCell.OnMouseClick","System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick","System.Windows.Forms.DataGridViewCell.OnMouseDown","System.Windows.Forms.DataGridViewCell.OnMouseEnter","System.Windows.Forms.DataGridViewCell.OnMouseLeave","System.Windows.Forms.DataGridViewCell.OnMouseMove","System.Windows.Forms.DataGridViewCell.OnMouseUp","System.Windows.Forms.DataGridViewCell.OwningColumn","System.Windows.Forms.DataGridViewCell.OwningRow","System.Windows.Forms.DataGridViewCell.Paint","System.Windows.Forms.DataGridViewCell.PaintBorder","System.Windows.Forms.DataGridViewCell.PaintErrorIcon","System.Windows.Forms.DataGridViewCell.ParseFormattedValue","System.Windows.Forms.DataGridViewCell.PositionEditingControl","System.Windows.Forms.DataGridViewCell.PositionEditingPanel","System.Windows.Forms.DataGridViewCell.PreferredSize","System.Windows.Forms.DataGridViewCell.ReadOnly","System.Windows.Forms.DataGridViewCell.Resizable","System.Windows.Forms.DataGridViewCell.RowIndex","System.Windows.Forms.DataGridViewCell.Selected","System.Windows.Forms.DataGridViewCell.SetValue","System.Windows.Forms.DataGridViewCell.Size","System.Windows.Forms.DataGridViewCell.Style","System.Windows.Forms.DataGridViewCell.Tag","System.Windows.Forms.DataGridViewCell.ToolTipText","System.Windows.Forms.DataGridViewCell.ToString","System.Windows.Forms.DataGridViewCell.Value","System.Windows.Forms.DataGridViewCell.ValueType","System.Windows.Forms.DataGridViewCell.Visible"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewCell","System::Windows::Forms::DataGridViewCell","System.Windows.Forms.DataGridViewCell.#ctor","System::Windows::Forms::DataGridViewCell::#ctor","System.Windows.Forms.DataGridViewCell.AccessibilityObject","System::Windows::Forms::DataGridViewCell::AccessibilityObject","System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle","System::Windows::Forms::DataGridViewCell::AdjustCellBorderStyle","System.Windows.Forms.DataGridViewCell.BorderWidths","System::Windows::Forms::DataGridViewCell::BorderWidths","System.Windows.Forms.DataGridViewCell.ClickUnsharesRow","System::Windows::Forms::DataGridViewCell::ClickUnsharesRow","System.Windows.Forms.DataGridViewCell.Clone","System::Windows::Forms::DataGridViewCell::Clone","System.Windows.Forms.DataGridViewCell.ColumnIndex","System::Windows::Forms::DataGridViewCell::ColumnIndex","System.Windows.Forms.DataGridViewCell.ContentBounds","System::Windows::Forms::DataGridViewCell::ContentBounds","System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow","System::Windows::Forms::DataGridViewCell::ContentClickUnsharesRow","System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow","System::Windows::Forms::DataGridViewCell::ContentDoubleClickUnsharesRow","System.Windows.Forms.DataGridViewCell.ContextMenuStrip","System::Windows::Forms::DataGridViewCell::ContextMenuStrip","System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance","System::Windows::Forms::DataGridViewCell::CreateAccessibilityInstance","System.Windows.Forms.DataGridViewCell.DefaultNewRowValue","System::Windows::Forms::DataGridViewCell::DefaultNewRowValue","System.Windows.Forms.DataGridViewCell.DetachEditingControl","System::Windows::Forms::DataGridViewCell::DetachEditingControl","System.Windows.Forms.DataGridViewCell.Displayed","System::Windows::Forms::DataGridViewCell::Displayed","System.Windows.Forms.DataGridViewCell.Dispose","System::Windows::Forms::DataGridViewCell::Dispose","System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow","System::Windows::Forms::DataGridViewCell::DoubleClickUnsharesRow","System.Windows.Forms.DataGridViewCell.EditedFormattedValue","System::Windows::Forms::DataGridViewCell::EditedFormattedValue","System.Windows.Forms.DataGridViewCell.EditType","System::Windows::Forms::DataGridViewCell::EditType","System.Windows.Forms.DataGridViewCell.EnterUnsharesRow","System::Windows::Forms::DataGridViewCell::EnterUnsharesRow","System.Windows.Forms.DataGridViewCell.ErrorIconBounds","System::Windows::Forms::DataGridViewCell::ErrorIconBounds","System.Windows.Forms.DataGridViewCell.ErrorText","System::Windows::Forms::DataGridViewCell::ErrorText","System.Windows.Forms.DataGridViewCell.Finalize","System::Windows::Forms::DataGridViewCell::Finalize","System.Windows.Forms.DataGridViewCell.FormattedValue","System::Windows::Forms::DataGridViewCell::FormattedValue","System.Windows.Forms.DataGridViewCell.FormattedValueType","System::Windows::Forms::DataGridViewCell::FormattedValueType","System.Windows.Forms.DataGridViewCell.Frozen","System::Windows::Forms::DataGridViewCell::Frozen","System.Windows.Forms.DataGridViewCell.GetClipboardContent","System::Windows::Forms::DataGridViewCell::GetClipboardContent","System.Windows.Forms.DataGridViewCell.GetContentBounds","System::Windows::Forms::DataGridViewCell::GetContentBounds","System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue","System::Windows::Forms::DataGridViewCell::GetEditedFormattedValue","System.Windows.Forms.DataGridViewCell.GetErrorIconBounds","System::Windows::Forms::DataGridViewCell::GetErrorIconBounds","System.Windows.Forms.DataGridViewCell.GetErrorText","System::Windows::Forms::DataGridViewCell::GetErrorText","System.Windows.Forms.DataGridViewCell.GetFormattedValue","System::Windows::Forms::DataGridViewCell::GetFormattedValue","System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip","System::Windows::Forms::DataGridViewCell::GetInheritedContextMenuStrip","System.Windows.Forms.DataGridViewCell.GetInheritedState","System::Windows::Forms::DataGridViewCell::GetInheritedState","System.Windows.Forms.DataGridViewCell.GetInheritedStyle","System::Windows::Forms::DataGridViewCell::GetInheritedStyle","System.Windows.Forms.DataGridViewCell.GetPreferredSize","System::Windows::Forms::DataGridViewCell::GetPreferredSize","System.Windows.Forms.DataGridViewCell.GetSize","System::Windows::Forms::DataGridViewCell::GetSize","System.Windows.Forms.DataGridViewCell.GetValue","System::Windows::Forms::DataGridViewCell::GetValue","System.Windows.Forms.DataGridViewCell.HasStyle","System::Windows::Forms::DataGridViewCell::HasStyle","System.Windows.Forms.DataGridViewCell.InheritedState","System::Windows::Forms::DataGridViewCell::InheritedState","System.Windows.Forms.DataGridViewCell.InheritedStyle","System::Windows::Forms::DataGridViewCell::InheritedStyle","System.Windows.Forms.DataGridViewCell.InitializeEditingControl","System::Windows::Forms::DataGridViewCell::InitializeEditingControl","System.Windows.Forms.DataGridViewCell.IsInEditMode","System::Windows::Forms::DataGridViewCell::IsInEditMode","System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow","System::Windows::Forms::DataGridViewCell::KeyDownUnsharesRow","System.Windows.Forms.DataGridViewCell.KeyEntersEditMode","System::Windows::Forms::DataGridViewCell::KeyEntersEditMode","System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow","System::Windows::Forms::DataGridViewCell::KeyPressUnsharesRow","System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow","System::Windows::Forms::DataGridViewCell::KeyUpUnsharesRow","System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow","System::Windows::Forms::DataGridViewCell::LeaveUnsharesRow","System.Windows.Forms.DataGridViewCell.MeasureTextHeight","System::Windows::Forms::DataGridViewCell::MeasureTextHeight","System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize","System::Windows::Forms::DataGridViewCell::MeasureTextPreferredSize","System.Windows.Forms.DataGridViewCell.MeasureTextSize","System::Windows::Forms::DataGridViewCell::MeasureTextSize","System.Windows.Forms.DataGridViewCell.MeasureTextWidth","System::Windows::Forms::DataGridViewCell::MeasureTextWidth","System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseClickUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseDoubleClickUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseDownUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseEnterUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseLeaveUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseMoveUnsharesRow","System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow","System::Windows::Forms::DataGridViewCell::MouseUpUnsharesRow","System.Windows.Forms.DataGridViewCell.OnClick","System::Windows::Forms::DataGridViewCell::OnClick","System.Windows.Forms.DataGridViewCell.OnContentClick","System::Windows::Forms::DataGridViewCell::OnContentClick","System.Windows.Forms.DataGridViewCell.OnContentDoubleClick","System::Windows::Forms::DataGridViewCell::OnContentDoubleClick","System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged","System::Windows::Forms::DataGridViewCell::OnDataGridViewChanged","System.Windows.Forms.DataGridViewCell.OnDoubleClick","System::Windows::Forms::DataGridViewCell::OnDoubleClick","System.Windows.Forms.DataGridViewCell.OnEnter","System::Windows::Forms::DataGridViewCell::OnEnter","System.Windows.Forms.DataGridViewCell.OnKeyDown","System::Windows::Forms::DataGridViewCell::OnKeyDown","System.Windows.Forms.DataGridViewCell.OnKeyPress","System::Windows::Forms::DataGridViewCell::OnKeyPress","System.Windows.Forms.DataGridViewCell.OnKeyUp","System::Windows::Forms::DataGridViewCell::OnKeyUp","System.Windows.Forms.DataGridViewCell.OnLeave","System::Windows::Forms::DataGridViewCell::OnLeave","System.Windows.Forms.DataGridViewCell.OnMouseClick","System::Windows::Forms::DataGridViewCell::OnMouseClick","System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick","System::Windows::Forms::DataGridViewCell::OnMouseDoubleClick","System.Windows.Forms.DataGridViewCell.OnMouseDown","System::Windows::Forms::DataGridViewCell::OnMouseDown","System.Windows.Forms.DataGridViewCell.OnMouseEnter","System::Windows::Forms::DataGridViewCell::OnMouseEnter","System.Windows.Forms.DataGridViewCell.OnMouseLeave","System::Windows::Forms::DataGridViewCell::OnMouseLeave","System.Windows.Forms.DataGridViewCell.OnMouseMove","System::Windows::Forms::DataGridViewCell::OnMouseMove","System.Windows.Forms.DataGridViewCell.OnMouseUp","System::Windows::Forms::DataGridViewCell::OnMouseUp","System.Windows.Forms.DataGridViewCell.OwningColumn","System::Windows::Forms::DataGridViewCell::OwningColumn","System.Windows.Forms.DataGridViewCell.OwningRow","System::Windows::Forms::DataGridViewCell::OwningRow","System.Windows.Forms.DataGridViewCell.Paint","System::Windows::Forms::DataGridViewCell::Paint","System.Windows.Forms.DataGridViewCell.PaintBorder","System::Windows::Forms::DataGridViewCell::PaintBorder","System.Windows.Forms.DataGridViewCell.PaintErrorIcon","System::Windows::Forms::DataGridViewCell::PaintErrorIcon","System.Windows.Forms.DataGridViewCell.ParseFormattedValue","System::Windows::Forms::DataGridViewCell::ParseFormattedValue","System.Windows.Forms.DataGridViewCell.PositionEditingControl","System::Windows::Forms::DataGridViewCell::PositionEditingControl","System.Windows.Forms.DataGridViewCell.PositionEditingPanel","System::Windows::Forms::DataGridViewCell::PositionEditingPanel","System.Windows.Forms.DataGridViewCell.PreferredSize","System::Windows::Forms::DataGridViewCell::PreferredSize","System.Windows.Forms.DataGridViewCell.ReadOnly","System::Windows::Forms::DataGridViewCell::ReadOnly","System.Windows.Forms.DataGridViewCell.Resizable","System::Windows::Forms::DataGridViewCell::Resizable","System.Windows.Forms.DataGridViewCell.RowIndex","System::Windows::Forms::DataGridViewCell::RowIndex","System.Windows.Forms.DataGridViewCell.Selected","System::Windows::Forms::DataGridViewCell::Selected","System.Windows.Forms.DataGridViewCell.SetValue","System::Windows::Forms::DataGridViewCell::SetValue","System.Windows.Forms.DataGridViewCell.Size","System::Windows::Forms::DataGridViewCell::Size","System.Windows.Forms.DataGridViewCell.Style","System::Windows::Forms::DataGridViewCell::Style","System.Windows.Forms.DataGridViewCell.Tag","System::Windows::Forms::DataGridViewCell::Tag","System.Windows.Forms.DataGridViewCell.ToolTipText","System::Windows::Forms::DataGridViewCell::ToolTipText","System.Windows.Forms.DataGridViewCell.ToString","System::Windows::Forms::DataGridViewCell::ToString","System.Windows.Forms.DataGridViewCell.Value","System::Windows::Forms::DataGridViewCell::Value","System.Windows.Forms.DataGridViewCell.ValueType","System::Windows::Forms::DataGridViewCell::ValueType","System.Windows.Forms.DataGridViewCell.Visible","System::Windows::Forms::DataGridViewCell::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0ec8cf29-67dc-d89a-0fa2-22b31bb16f1b","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridViewCell.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridViewCell.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewCell class | Microsoft Docs","_op_ogTitle":"DataGridViewCell class","description":"Represents an individual cell in a  control.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewCell","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcell","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcell","fileRelativePath":"System.Windows.Forms.DataGridViewCell.html"},"themesRelativePathToOutputRoot":"_themes/"}