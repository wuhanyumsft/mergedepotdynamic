{"content":"    \r\n    <h1 id=\"System_Threading_ExecutionContext\">\r\n      <span class=\"lang-csharp\">ExecutionContext</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Manages the execution context for the current thread. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class ExecutionContext : IDisposable, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ExecutionContext</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ExecutionContext class provides a single container for all information relevant to a logical thread of execution. This includes security context, call context, and synchronization context.  </p>\n<p> The ExecutionContext class provides the functionality for user code to capture and transfer this context across user-defined asynchronous points. The common language runtime ensures that the ExecutionContext is consistently transferred across runtime-defined asynchronous points within the managed process.  </p>\n<p> An execution context is the managed equivalent of a COM apartment. Within an application domain, the entire execution context must be transferred whenever a thread is transferred. This situation occurs during transfers made by the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Start_\" data-linktype=\"relative-path\">Start</a> method, most thread pool operations, and Windows Forms thread marshaling through the Windows message pump. It does not occur in unsafe thread pool operations (such as the <a class=\"xref\" href=\"system.threading.threadpool#System_Threading_ThreadPool_UnsafeQueueUserWorkItem_\" data-linktype=\"relative-path\">UnsafeQueueUserWorkItem</a> method), which do not transfer the compressed stack. Wherever the compressed stack flows, the managed principal, synchronization, locale, and user context also flow. The ExecutionContext class provides the <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_Capture_\" data-linktype=\"relative-path\">Capture</a> and <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_CreateCopy_\" data-linktype=\"relative-path\">CreateCopy</a> methods to get the execution context and the <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_Run_\" data-linktype=\"relative-path\">Run</a> method to set the execution context for the current thread.  </p>\n<p> An ExecutionContext that is associated with a thread cannot be set on another thread. Attempting to do so will result in an exception being thrown. To propagate the ExecutionContext from one thread to another, make a copy of the ExecutionContext.  </p>\n<p> Internally, the ExecutionContext stores all data that is associated with the <a class=\"xref\" href=\"system.runtime.remoting.messaging.logicalcallcontext\" data-linktype=\"relative-path\">LogicalCallContext</a>. This allows the <a class=\"xref\" href=\"system.runtime.remoting.messaging.logicalcallcontext\" data-linktype=\"relative-path\">LogicalCallContext</a> data to be propagated when the ExecutionContext is copied and transferred.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_Capture\" data-linktype=\"self-bookmark\">Capture()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Captures the execution context from the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_CreateCopy\" data-linktype=\"self-bookmark\">CreateCopy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of the current execution context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the logical context information needed to recreate an instance of the current execution context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_IsFlowSuppressed\" data-linktype=\"self-bookmark\">IsFlowSuppressed()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the flow of the execution context is currently suppressed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_RestoreFlow\" data-linktype=\"self-bookmark\">RestoreFlow()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Restores the flow of the execution context across asynchronous threads.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_Run_System_Threading_ExecutionContext_System_Threading_ContextCallback_System_Object_\" data-linktype=\"self-bookmark\">Run(ExecutionContext,ContextCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs a method in a specified execution context on the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ExecutionContext_SuppressFlow\" data-linktype=\"self-bookmark\">SuppressFlow()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Suppresses the flow of the execution context across asynchronous threads.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_Capture\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_Capture_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Capture()</div>        \r\n          </div>\r\n    \r\n            <p>Captures the execution context from the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.ExecutionContext Capture ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> object representing the execution context for the current thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The captured execution context can be used as the <code>executionContext</code> parameter for the <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_Run_\" data-linktype=\"relative-path\">Run</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_CreateCopy\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_CreateCopy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCopy()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of the current execution context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.ExecutionContext CreateCopy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> object representing the current execution context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This context cannot be copied because it is used. Only newly captured contexts can be copied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful for propagating an execution context from one thread to another.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_Dispose\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the logical context information needed to recreate an instance of the current execution context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object to be populated with serialization information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> structure representing the destination context of the serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>info</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetObjectData sets a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the logical call context information. During deserialization, the execution context object is reconstituted from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> transmitted over the stream.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_IsFlowSuppressed\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_IsFlowSuppressed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFlowSuppressed()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the flow of the execution context is currently suppressed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsFlowSuppressed ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the flow is suppressed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsFlowSuppressed method is used by infrastructure components to determine whether to transfer the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> during asynchronous operations.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_RestoreFlow\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_RestoreFlow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RestoreFlow()</div>        \r\n          </div>\r\n    \r\n            <p>Restores the flow of the execution context across asynchronous threads.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RestoreFlow ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The context flow cannot be restored because it is not being suppressed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>RestoreFlow reverses the effect of a prior <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_SuppressFlow_\" data-linktype=\"relative-path\">SuppressFlow</a> method call.  </p>\n<p> This method is called by the <a class=\"xref\" href=\"system.threading.asyncflowcontrol#System_Threading_AsyncFlowControl_Undo_\" data-linktype=\"relative-path\">Undo</a> method of the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure returned by the <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_SuppressFlow_\" data-linktype=\"relative-path\">SuppressFlow</a> method.  You should use the <a class=\"xref\" href=\"system.threading.asyncflowcontrol#System_Threading_AsyncFlowControl_Undo_\" data-linktype=\"relative-path\">Undo</a> method to restore the flow of the execution context, not the RestoreFlow method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_Run_System_Threading_ExecutionContext_System_Threading_ContextCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_Run_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Run(ExecutionContext,ContextCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Runs a method in a specified execution context on the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>executionContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> to set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.contextcallback\" data-linktype=\"relative-path\">ContextCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.contextcallback\" data-linktype=\"relative-path\">ContextCallback</a> delegate that represents the method to be run in the provided execution context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to pass to the callback method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>executionContext</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>executionContext</code> was not acquired through a capture operation.  </p>\n<p> -or-  </p>\n<p> <code>executionContext</code> has already been used as the argument to a Run call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The execution context is returned to its previous state when the method completes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ExecutionContext_SuppressFlow\">\r\n    \r\n            <a id=\"System_Threading_ExecutionContext_SuppressFlow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SuppressFlow()</div>        \r\n          </div>\r\n    \r\n            <p>Suppresses the flow of the execution context across asynchronous threads.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.AsyncFlowControl SuppressFlow ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure for restoring the flow.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The context flow is already suppressed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to suppress the flow of the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> on the current thread.  </p>\n<p> You must use the <a class=\"xref\" href=\"system.threading.asyncflowcontrol#System_Threading_AsyncFlowControl_Undo_\" data-linktype=\"relative-path\">Undo</a> method on the returned <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure to restore the flow of the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>.  </p>\n<p> This method is protected with a <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityAction</a> for <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> permission. A fully trusted component can call this method to suppress the flow of the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> during asynchronous calls. While the flow is suppressed, the <a class=\"xref\" href=\"system.security.securitycontext#System_Security_SecurityContext_Capture_\" data-linktype=\"relative-path\">Capture</a> method returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.ExecutionContext.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.ExecutionContext.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.Capture\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.CreateCopy\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.IsFlowSuppressed\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.RestoreFlow\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.Run\">\r\n<meta name=\"APIName\" content=\"System.Threading.ExecutionContext.SuppressFlow\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2915b29e-3768-19a0-48c8-69257b6b669b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Manages the execution context for the current thread. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.ExecutionContext\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.ExecutionContext.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.ExecutionContext.yml","open_to_public_contributors":true,"api_name":["System.Threading.ExecutionContext","System.Threading.ExecutionContext.Capture","System.Threading.ExecutionContext.CreateCopy","System.Threading.ExecutionContext.Dispose","System.Threading.ExecutionContext.GetObjectData","System.Threading.ExecutionContext.IsFlowSuppressed","System.Threading.ExecutionContext.RestoreFlow","System.Threading.ExecutionContext.Run","System.Threading.ExecutionContext.SuppressFlow"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.ExecutionContext","System::Threading::ExecutionContext","System.Threading.ExecutionContext.Capture","System::Threading::ExecutionContext::Capture","System.Threading.ExecutionContext.CreateCopy","System::Threading::ExecutionContext::CreateCopy","System.Threading.ExecutionContext.Dispose","System::Threading::ExecutionContext::Dispose","System.Threading.ExecutionContext.GetObjectData","System::Threading::ExecutionContext::GetObjectData","System.Threading.ExecutionContext.IsFlowSuppressed","System::Threading::ExecutionContext::IsFlowSuppressed","System.Threading.ExecutionContext.RestoreFlow","System::Threading::ExecutionContext::RestoreFlow","System.Threading.ExecutionContext.Run","System::Threading::ExecutionContext::Run","System.Threading.ExecutionContext.SuppressFlow","System::Threading::ExecutionContext::SuppressFlow"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2915b29e-3768-19a0-48c8-69257b6b669b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/ExecutionContext.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ExecutionContext class | Microsoft Docs","_op_ogTitle":"ExecutionContext class","description":"Manages the execution context for the current thread. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.ExecutionContext","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.executioncontext","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.executioncontext","fileRelativePath":"System.Threading.ExecutionContext.html"},"themesRelativePathToOutputRoot":"_themes/"}