{"content":"    \r\n    <h1 id=\"System_CodeDom_CodeMemberField\">\r\n      <span class=\"lang-csharp\">CodeMemberField</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a declaration for a field of a type.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class CodeMemberField : System.CodeDom.CodeTypeMember</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">CodeObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember\" data-linktype=\"relative-path\">System.CodeDom.CodeTypeMember</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CodeMemberField</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Comments\" data-linktype=\"relative-path\">Comments</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_CustomAttributes\" data-linktype=\"relative-path\">CustomAttributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_EndDirectives\" data-linktype=\"relative-path\">EndDirectives</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_LinePragma\" data-linktype=\"relative-path\">LinePragma</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_StartDirectives\" data-linktype=\"relative-path\">StartDirectives</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>CodeMemberField can be used to represent the declaration for a field of a type.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeMemberField__ctor\" data-linktype=\"self-bookmark\">CodeMemberField()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeMemberField__ctor_System_CodeDom_CodeTypeReference_System_String_\" data-linktype=\"self-bookmark\">CodeMemberField(CodeTypeReference,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class using the specified field type and field name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeMemberField__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">CodeMemberField(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class using the specified field type and field name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeMemberField__ctor_System_Type_System_String_\" data-linktype=\"self-bookmark\">CodeMemberField(Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class using the specified field type and field name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeMemberField_InitExpression\" data-linktype=\"self-bookmark\">InitExpression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the initialization expression for the field.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeMemberField_Type\" data-linktype=\"self-bookmark\">Type</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the type of the field.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeMemberField__ctor\">\r\n    \r\n            <a id=\"System_CodeDom_CodeMemberField__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeMemberField()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeMemberField ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeMemberField__ctor_System_CodeDom_CodeTypeReference_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_CodeMemberField__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeMemberField(CodeTypeReference,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class using the specified field type and field name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeMemberField (System.CodeDom.CodeTypeReference type, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates the type of the field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeMemberField__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_CodeMemberField__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeMemberField(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class using the specified field type and field name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeMemberField (string type, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>type</code> parameter references a generic type, it must follow the syntax conventions for generic types. Generic types are formatted as follows: the name of the type, followed by a grave accent (&quot;`&quot;), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.  </p>\n</div>\n<p> To avoid the possibility of making a syntactic mistake, consider using the <a class=\"xref\" href=\"system.codedom.codememberfield#System_CodeDom_CodeMemberField__ctor_System_Type_System_String_\" data-linktype=\"relative-path\">CodeMemberField(Type,String)</a> constructor that takes a type instead of a string as a parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeMemberField__ctor_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_CodeMemberField__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeMemberField(Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codememberfield\" data-linktype=\"relative-path\">CodeMemberField</a> class using the specified field type and field name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeMemberField (Type type, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeMemberField_InitExpression\">\r\n    \r\n            <a id=\"System_CodeDom_CodeMemberField_InitExpression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitExpression</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the initialization expression for the field.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeExpression InitExpression { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a></div>\r\n                  </div>\r\n                  <p>The initialization expression for the field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the InitExpression property.  </p>\n<pre><code class=\"lang-vb\" name=\"CodeMemberFieldInit#1\">Imports System\nImports System.Reflection\nImports System.IO\nImports System.CodeDom\nImports System.CodeDom.Compiler\nImports Microsoft.CSharp\n\n\n&#39;/ &lt;summary&gt;\n&#39;/ This code example creates a graph using a CodeCompileUnit and  \n&#39;/ generates source code for the graph using the CSharpCodeProvider.\n&#39;/ &lt;/summary&gt;\n\nClass Sample\n    &#39;/ &lt;summary&gt;\n    &#39;/ Define the compile unit to use for code generation. \n    &#39;/ &lt;/summary&gt;\n    Private targetUnit As CodeCompileUnit\n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ The only class in the compile unit. \n    &#39;/ &lt;/summary&gt;\n    Private targetClass As CodeTypeDeclaration\n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ The name of the file to contain the source code.\n    &#39;/ &lt;/summary&gt;\n    Private Const outputFileName As String = &quot;SampleCode.vb&quot;\n    \n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ Define the class.\n    &#39;/ &lt;/summary&gt;\n    Public Sub New() \n        targetUnit = New CodeCompileUnit()\n        Dim samples As New CodeNamespace(&quot;CodeDOMSample&quot;)\n        samples.Imports.Add(New CodeNamespaceImport(&quot;System&quot;))\n        targetClass = New CodeTypeDeclaration(&quot;CodeDOMCreatedClass&quot;)\n        targetClass.IsClass = True\n        targetClass.TypeAttributes = TypeAttributes.Public Or TypeAttributes.Sealed\n        samples.Types.Add(targetClass)\n        targetUnit.Namespaces.Add(samples)\n    \n    End Sub &#39;New\n    \n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ Adds a field to the class.\n    &#39;/ &lt;/summary&gt;\n    Public Sub AddField()\n\n        Dim testField As New CodeMemberField()\n        testField.Name = &quot;today&quot;\n        testField.Type = New CodeTypeReference(GetType(System.DateTime))\n        testField.Attributes = MemberAttributes.Private Or MemberAttributes.Static\n        testField.InitExpression = New CodeFieldReferenceExpression(New CodeTypeReferenceExpression(&quot;System.DateTime&quot;), &quot;Today&quot;)\n\n        targetClass.Members.Add(testField)\n\n    End Sub &#39;AddFields\n     \n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ Add a constructor to the class.\n    &#39;/ &lt;/summary&gt;\n    Public Sub AddConstructor() \n        &#39; Declare the constructor\n        Dim constructor As New CodeConstructor()\n        constructor.Attributes = MemberAttributes.Public Or MemberAttributes.Final\n        \n        targetClass.Members.Add(constructor)\n    \n    End Sub &#39;AddConstructor\n    \n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ Add an entry point to the class.\n    &#39;/ &lt;/summary&gt;\n    Public Sub AddEntryPoint() \n        Dim start As New CodeEntryPointMethod()\n        Dim objectCreate As New CodeObjectCreateExpression(New CodeTypeReference(&quot;CodeDOMCreatedClass&quot;))\n        &#39; Add the statement:\n        &#39; &quot;CodeDOMCreatedClass testClass = \n        &#39;     new CodeDOMCreatedClass();&quot;\n        start.Statements.Add(New CodeVariableDeclarationStatement(New CodeTypeReference(&quot;CodeDOMCreatedClass&quot;), &quot;testClass&quot;, objectCreate))\n        \n        &#39; Creat the expression:\n        &#39; &quot;testClass.ToString()&quot;\n        Dim toStringInvoke As New CodeMethodInvokeExpression(New CodeVariableReferenceExpression(&quot;today&quot;), &quot;ToString&quot;)\n        \n        &#39; Add a System.Console.WriteLine statement with the previous \n        &#39; expression as a parameter.\n        start.Statements.Add(New CodeMethodInvokeExpression(New CodeTypeReferenceExpression(&quot;System.Console&quot;), &quot;WriteLine&quot;, toStringInvoke))\n        targetClass.Members.Add(start)\n    \n    End Sub &#39;AddEntryPoint\n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ Generate CSharp source code from the compile unit.\n    &#39;/ &lt;/summary&gt;\n    &#39;/ &lt;param name=&quot;filename&quot;&gt;Output file name&lt;/param&gt;\n    Public Sub GenerateCSharpCode(ByVal fileName As String) \n        Dim provider As CodeDomProvider = CodeDomProvider.CreateProvider(&quot;VB&quot;)\n        Dim options As New CodeGeneratorOptions()\n        Dim sourceWriter As New StreamWriter(fileName)\n        Try\n            provider.GenerateCodeFromCompileUnit(targetUnit, sourceWriter, options)\n        Finally\n            sourceWriter.Dispose()\n        End Try\n    \n    End Sub &#39;GenerateCSharpCode\n    \n    \n    &#39;/ &lt;summary&gt;\n    &#39;/ Create the CodeDOM graph and generate the code.\n    &#39;/ &lt;/summary&gt;\n    Shared Sub Main() \n        Dim sample As New Sample()\n        sample.AddField()\n        sample.AddConstructor()\n        sample.AddEntryPoint()\n        sample.GenerateCSharpCode(outputFileName)\n    \n    End Sub &#39;Main\nEnd Class &#39;Sample\n&#39; A Visual Basic code generator produces the following source code for the preceeding example code:\n&#39;Option Strict Off\n&#39;Option Explicit On\n\n&#39;Imports System\n\n&#39;Namespace CodeDOMSample\n\n&#39;    Public NotInheritable Class CodeDOMCreatedClass\n\n&#39;        Private Shared today As Date = Date.Today\n\n&#39;        Public Sub New()\n&#39;            MyBase.New()\n&#39;        End Sub\n\n&#39;        Public Shared Sub Main()\n&#39;            Dim testClass As CodeDOMCreatedClass = New CodeDOMCreatedClass\n&#39;            System.Console.WriteLine(today.ToString)\n&#39;        End Sub\n&#39;    End Class\n&#39;End Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"CodeMemberFieldInit#1\">using System;\nusing System.Reflection;\nusing System.IO;\nusing System.CodeDom;\nusing System.CodeDom.Compiler;\nusing Microsoft.CSharp;\n\nnamespace SampleCodeDom\n{\n    /// &lt;summary&gt;\n    /// This code example creates a graph using a CodeCompileUnit and  \n    /// generates source code for the graph using the CSharpCodeProvider.\n    /// &lt;/summary&gt;\n    class Sample\n    {\n        /// &lt;summary&gt;\n        /// Define the compile unit to use for code generation. \n        /// &lt;/summary&gt;\n        CodeCompileUnit targetUnit;\n\n        /// &lt;summary&gt;\n        /// The only class in the compile unit. \n        /// &lt;/summary&gt;\n        CodeTypeDeclaration targetClass;\n\n        /// &lt;summary&gt;\n        /// The name of the file to contain the source code.\n        /// &lt;/summary&gt;\n        private const string outputFileName = &quot;SampleCode.cs&quot;;\n\n        /// &lt;summary&gt;\n        /// Define the class.\n        /// &lt;/summary&gt;\n        public Sample()\n        {\n            targetUnit = new CodeCompileUnit();\n            CodeNamespace samples = new CodeNamespace(&quot;CodeDOMSample&quot;);\n            samples.Imports.Add(new CodeNamespaceImport(&quot;System&quot;));\n            targetClass = new CodeTypeDeclaration(&quot;CodeDOMCreatedClass&quot;);\n            targetClass.IsClass = true;\n            targetClass.TypeAttributes =\n                TypeAttributes.Public | TypeAttributes.Sealed;\n            samples.Types.Add(targetClass);\n            targetUnit.Namespaces.Add(samples);\n        }\n\n        /// &lt;summary&gt;\n        /// Adds a field to the class.\n        /// &lt;/summary&gt;\n        public void AddField()\n        {\n\n            CodeMemberField testField = new CodeMemberField();\n            testField.Name = &quot;today&quot;;\n            testField.Type = new CodeTypeReference(typeof(System.DateTime));\n            testField.Attributes = MemberAttributes.Private | MemberAttributes.Static;\n            testField.InitExpression =\n                new CodeFieldReferenceExpression(new CodeTypeReferenceExpression(&quot;System.DateTime&quot;), &quot;Today&quot;);\n\n            targetClass.Members.Add(testField);\n\n        }\n\n        /// &lt;summary&gt;\n        /// Add a constructor to the class.\n        /// &lt;/summary&gt;\n        public void AddConstructor()\n        {\n            // Declare the constructor\n            CodeConstructor constructor = new CodeConstructor();\n            constructor.Attributes =\n                MemberAttributes.Public | MemberAttributes.Final;\n\n            targetClass.Members.Add(constructor);\n        }\n\n        /// &lt;summary&gt;\n        /// Add an entry point to the class.\n        /// &lt;/summary&gt;\n        public void AddEntryPoint()\n        {\n            CodeEntryPointMethod start = new CodeEntryPointMethod();\n            CodeObjectCreateExpression objectCreate =\n                new CodeObjectCreateExpression(\n                new CodeTypeReference(&quot;CodeDOMCreatedClass&quot;));\n            // Add the statement:\n            // &quot;CodeDOMCreatedClass testClass = \n            //     new CodeDOMCreatedClass();&quot;\n            start.Statements.Add(new CodeVariableDeclarationStatement(\n                new CodeTypeReference(&quot;CodeDOMCreatedClass&quot;), &quot;testClass&quot;,\n                objectCreate));\n\n            // Creat the expression:\n            // &quot;testClass.ToString()&quot;\n            CodeMethodInvokeExpression toStringInvoke =\n                new CodeMethodInvokeExpression(\n                new CodeVariableReferenceExpression(&quot;today&quot;), &quot;ToString&quot;);\n\n            // Add a System.Console.WriteLine statement with the previous \n            // expression as a parameter.\n            start.Statements.Add(new CodeMethodInvokeExpression(\n                new CodeTypeReferenceExpression(&quot;System.Console&quot;),\n                &quot;WriteLine&quot;, toStringInvoke));\n            targetClass.Members.Add(start);\n        }\n        /// &lt;summary&gt;\n        /// Generate CSharp source code from the compile unit.\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;filename&quot;&gt;Output file name&lt;/param&gt;\n        public void GenerateCSharpCode(string fileName)\n        {\n            CodeDomProvider provider = CodeDomProvider.CreateProvider(&quot;CSharp&quot;);\n            CodeGeneratorOptions options = new CodeGeneratorOptions();\n            options.BracingStyle = &quot;C&quot;;\n            using (StreamWriter sourceWriter = new StreamWriter(fileName))\n            {\n                provider.GenerateCodeFromCompileUnit(\n                    targetUnit, sourceWriter, options);\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// Create the CodeDOM graph and generate the code.\n        /// &lt;/summary&gt;\n        static void Main()\n        {\n            Sample sample = new Sample();\n            sample.AddField();\n            sample.AddConstructor();\n            sample.AddEntryPoint();\n            sample.GenerateCSharpCode(outputFileName);\n        }\n    }\n}\n// A C# code generator produces the following source code for the preceeding example code:\n//namespace CodeDOMSample\n//{\n//    using System;\n\n\n//    public sealed class CodeDOMCreatedClass\n//    {\n\n//        private static System.DateTime today = System.DateTime.Today;\n\n//        public CodeDOMCreatedClass()\n//        {\n//        }\n\n//        public static void Main()\n//        {\n//            CodeDOMCreatedClass testClass = new CodeDOMCreatedClass();\n//            System.Console.WriteLine(today.ToString());\n//        }\n//    }\n//}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeMemberField_Type\">\r\n    \r\n            <a id=\"System_CodeDom_CodeMemberField_Type_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Type</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the type of the field.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeTypeReference Type { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a></div>\r\n                  </div>\r\n                  <p>The type of the field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeMemberField.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeMemberField.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeMemberField\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeMemberField..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeMemberField.InitExpression\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeMemberField.Type\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a413df94-19e9-09bc-d808-149c40cbd51a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.CodeDom\\CodeMemberField.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a declaration for a field of a type.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.CodeDom/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeMemberField\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeMemberField.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeMemberField.yml","open_to_public_contributors":true,"api_name":["System.CodeDom.CodeMemberField","System.CodeDom.CodeMemberField..ctor","System.CodeDom.CodeMemberField.InitExpression","System.CodeDom.CodeMemberField.Type"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeMemberField","System::CodeDom::CodeMemberField","System.CodeDom.CodeMemberField.#ctor","System::CodeDom::CodeMemberField::#ctor","System.CodeDom.CodeMemberField.InitExpression","System::CodeDom::CodeMemberField::InitExpression","System.CodeDom.CodeMemberField.Type","System::CodeDom::CodeMemberField::Type"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a413df94-19e9-09bc-d808-149c40cbd51a","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.CodeDom\\CodeMemberField.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.CodeDom/CodeMemberField.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeMemberField class | Microsoft Docs","_op_ogTitle":"CodeMemberField class","description":"Represents a declaration for a field of a type.\n","toc_asset_id":"_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeMemberField","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codememberfield","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codememberfield","fileRelativePath":"System.CodeDom.CodeMemberField.html"},"themesRelativePathToOutputRoot":"_themes/"}