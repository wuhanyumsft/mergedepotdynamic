{"content":"    \r\n    <h1 id=\"System_Net_IPHostEntry\">\r\n      <span class=\"lang-csharp\">IPHostEntry</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a container class for Internet host address information.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class IPHostEntry</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">IPHostEntry</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IPHostEntry class associates a Domain Name System (DNS) host name with an array of aliases and an array of matching IP addresses.  </p>\n<p> The IPHostEntry class is used as a helper class with the <a class=\"xref\" href=\"system.net.dns\" data-linktype=\"relative-path\">Dns</a> class.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPHostEntry__ctor\" data-linktype=\"self-bookmark\">IPHostEntry()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.iphostentry\" data-linktype=\"relative-path\">IPHostEntry</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPHostEntry_AddressList\" data-linktype=\"self-bookmark\">AddressList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a list of IP addresses that are associated with a host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPHostEntry_Aliases\" data-linktype=\"self-bookmark\">Aliases</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a list of aliases that are associated with a host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IPHostEntry_HostName\" data-linktype=\"self-bookmark\">HostName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the DNS name of the host.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPHostEntry__ctor\">\r\n    \r\n            <a id=\"System_Net_IPHostEntry__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPHostEntry()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.iphostentry\" data-linktype=\"relative-path\">IPHostEntry</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IPHostEntry ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPHostEntry_AddressList\">\r\n    \r\n            <a id=\"System_Net_IPHostEntry_AddressList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddressList</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a list of IP addresses that are associated with a host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.IPAddress[] AddressList { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that contains IP addresses that resolve to the host names that are contained in the <span class=\"xref\">stem.Net.IPHostEntry.Aliases*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the AddressList property to access the IP addresses that are associated with the <a class=\"xref\" href=\"system.net.iphostentry\" data-linktype=\"relative-path\">IPHostEntry</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"IPHostEntry_AddressList#1\">void GetIpAddressList( String^ hostString )\n{\n   try\n   {\n      // Get &#39;IPHostEntry&#39; object containing information\n      // like host name, IP addresses, aliases for a host.\n      IPHostEntry^ hostInfo = Dns::GetHostByName( hostString );\n      Console::WriteLine( &quot;Host name : {0}&quot;, hostInfo-&gt;HostName );\n      Console::WriteLine( &quot;IP address List : &quot; );\n      for ( int index = 0; index &lt; hostInfo-&gt;AddressList-&gt;Length; index++ )\n         Console::WriteLine( hostInfo-&gt;AddressList[ index ] );\n   }\n   catch ( SocketException^ e ) \n   {\n      Console::WriteLine( &quot;SocketException caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n   catch ( ArgumentNullException^ e ) \n   {\n      Console::WriteLine( &quot;ArgumentNullException caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"IPHostEntry_AddressList#1\">   \n   public void GetIpAddressList(String hostString)\n   {\n\t   try \n\t   {\n\t\t   // Get &#39;IPHostEntry&#39; object containing information like host name, IP addresses, aliases for a host.\n\t\t   IPHostEntry hostInfo = Dns.GetHostByName(hostString);\n\t\t   Console.WriteLine(&quot;Host name : &quot; + hostInfo.HostName);\n\t\t   Console.WriteLine(&quot;IP address List : &quot;);\n\t\t   for(int index=0; index &lt; hostInfo.AddressList.Length; index++)\n\t\t   {\n\t\t\t   Console.WriteLine(hostInfo.AddressList[index]);\n\t\t   }\n\t   }\n\t   catch(SocketException e) \n\t   {\n\t\t   Console.WriteLine(&quot;SocketException caught!!!&quot;);\n\t\t   Console.WriteLine(&quot;Source : &quot; + e.Source);\n\t\t   Console.WriteLine(&quot;Message : &quot; + e.Message);\n\t   }\n\t   catch(ArgumentNullException e)\n\t   {\n\t\t   Console.WriteLine(&quot;ArgumentNullException caught!!!&quot;);\n\t\t   Console.WriteLine(&quot;Source : &quot; + e.Source);\n\t\t   Console.WriteLine(&quot;Message : &quot; + e.Message);\n\t   }\n\t   catch(Exception e)\n\t   {\n\t\t   Console.WriteLine(&quot;Exception caught!!!&quot;);\n\t\t   Console.WriteLine(&quot;Source : &quot; + e.Source);\n\t\t   Console.WriteLine(&quot;Message : &quot; + e.Message);\n\t   }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"IPHostEntry_AddressList#1\">    Public Sub GetIpAddressList(hostString As [String])\n        Try\n            &#39; Get &#39;IPHostEntry&#39; object which contains information like host name, IP addresses, aliases\n\t    &#39; for specified url\n            Dim hostInfo As IPHostEntry = Dns.GetHostByName(hostString)\n            Console.WriteLine((&quot;Host name : &quot; + hostInfo.HostName))\n            Console.WriteLine(&quot;IP address List : &quot;)\n            Dim index As Integer\n            For index = 0 To hostInfo.AddressList.Length - 1\n                Console.WriteLine(hostInfo.AddressList(index))\n            Next index\n        Catch e As SocketException\n            Console.WriteLine(&quot;SocketException caught!!!&quot;)\n            Console.WriteLine((&quot;Source : &quot; + e.Source))\n            Console.WriteLine((&quot;Message : &quot; + e.Message))\n        Catch e As ArgumentNullException\n            Console.WriteLine(&quot;ArgumentNullException caught!!!&quot;)\n            Console.WriteLine((&quot;Source : &quot; + e.Source))\n            Console.WriteLine((&quot;Message : &quot; + e.Message))\n        Catch e As Exception\n            Console.WriteLine(&quot;Exception caught!!!&quot;)\n            Console.WriteLine((&quot;Source : &quot; + e.Source))\n            Console.WriteLine((&quot;Message : &quot; + e.Message))\n        End Try\n    End Sub &#39;GetIpAddressList\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPHostEntry_Aliases\">\r\n    \r\n            <a id=\"System_Net_IPHostEntry_Aliases_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Aliases</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a list of aliases that are associated with a host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] Aliases { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array of strings that contain DNS names that resolve to the IP addresses in the <span class=\"xref\">stem.Net.IPHostEntry.AddressList*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IPHostEntry_HostName\">\r\n    \r\n            <a id=\"System_Net_IPHostEntry_HostName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HostName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the DNS name of the host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string HostName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the primary host name for the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The HostName property contains the primary host name for a server. If the DNS entry for the server defines additional aliases, they will be available in the <a class=\"xref\" href=\"system.net.iphostentry#System_Net_IPHostEntry_Aliases_\" data-linktype=\"relative-path\">Aliases</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the HostName property to retrieve the primary host name.  </p>\n<pre><code class=\"lang-cpp\" name=\"IPHostEntry_AddressList#1\">void GetIpAddressList( String^ hostString )\n{\n   try\n   {\n      // Get &#39;IPHostEntry&#39; object containing information\n      // like host name, IP addresses, aliases for a host.\n      IPHostEntry^ hostInfo = Dns::GetHostByName( hostString );\n      Console::WriteLine( &quot;Host name : {0}&quot;, hostInfo-&gt;HostName );\n      Console::WriteLine( &quot;IP address List : &quot; );\n      for ( int index = 0; index &lt; hostInfo-&gt;AddressList-&gt;Length; index++ )\n         Console::WriteLine( hostInfo-&gt;AddressList[ index ] );\n   }\n   catch ( SocketException^ e ) \n   {\n      Console::WriteLine( &quot;SocketException caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n   catch ( ArgumentNullException^ e ) \n   {\n      Console::WriteLine( &quot;ArgumentNullException caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot;Exception caught!!!&quot; );\n      Console::WriteLine( &quot;Source : {0}&quot;, e-&gt;Source );\n      Console::WriteLine( &quot;Message : {0}&quot;, e-&gt;Message );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"IPHostEntry_AddressList#1\">   \n   public void GetIpAddressList(String hostString)\n   {\n\t   try \n\t   {\n\t\t   // Get &#39;IPHostEntry&#39; object containing information like host name, IP addresses, aliases for a host.\n\t\t   IPHostEntry hostInfo = Dns.GetHostByName(hostString);\n\t\t   Console.WriteLine(&quot;Host name : &quot; + hostInfo.HostName);\n\t\t   Console.WriteLine(&quot;IP address List : &quot;);\n\t\t   for(int index=0; index &lt; hostInfo.AddressList.Length; index++)\n\t\t   {\n\t\t\t   Console.WriteLine(hostInfo.AddressList[index]);\n\t\t   }\n\t   }\n\t   catch(SocketException e) \n\t   {\n\t\t   Console.WriteLine(&quot;SocketException caught!!!&quot;);\n\t\t   Console.WriteLine(&quot;Source : &quot; + e.Source);\n\t\t   Console.WriteLine(&quot;Message : &quot; + e.Message);\n\t   }\n\t   catch(ArgumentNullException e)\n\t   {\n\t\t   Console.WriteLine(&quot;ArgumentNullException caught!!!&quot;);\n\t\t   Console.WriteLine(&quot;Source : &quot; + e.Source);\n\t\t   Console.WriteLine(&quot;Message : &quot; + e.Message);\n\t   }\n\t   catch(Exception e)\n\t   {\n\t\t   Console.WriteLine(&quot;Exception caught!!!&quot;);\n\t\t   Console.WriteLine(&quot;Source : &quot; + e.Source);\n\t\t   Console.WriteLine(&quot;Message : &quot; + e.Message);\n\t   }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"IPHostEntry_AddressList#1\">    Public Sub GetIpAddressList(hostString As [String])\n        Try\n            &#39; Get &#39;IPHostEntry&#39; object which contains information like host name, IP addresses, aliases\n\t    &#39; for specified url\n            Dim hostInfo As IPHostEntry = Dns.GetHostByName(hostString)\n            Console.WriteLine((&quot;Host name : &quot; + hostInfo.HostName))\n            Console.WriteLine(&quot;IP address List : &quot;)\n            Dim index As Integer\n            For index = 0 To hostInfo.AddressList.Length - 1\n                Console.WriteLine(hostInfo.AddressList(index))\n            Next index\n        Catch e As SocketException\n            Console.WriteLine(&quot;SocketException caught!!!&quot;)\n            Console.WriteLine((&quot;Source : &quot; + e.Source))\n            Console.WriteLine((&quot;Message : &quot; + e.Message))\n        Catch e As ArgumentNullException\n            Console.WriteLine(&quot;ArgumentNullException caught!!!&quot;)\n            Console.WriteLine((&quot;Source : &quot; + e.Source))\n            Console.WriteLine((&quot;Message : &quot; + e.Message))\n        Catch e As Exception\n            Console.WriteLine(&quot;Exception caught!!!&quot;)\n            Console.WriteLine((&quot;Source : &quot; + e.Source))\n            Console.WriteLine((&quot;Message : &quot; + e.Message))\n        End Try\n    End Sub &#39;GetIpAddressList\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.IPHostEntry.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.IPHostEntry.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.IPHostEntry\">\r\n<meta name=\"APIName\" content=\"System.Net.IPHostEntry..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.IPHostEntry.AddressList\">\r\n<meta name=\"APIName\" content=\"System.Net.IPHostEntry.Aliases\">\r\n<meta name=\"APIName\" content=\"System.Net.IPHostEntry.HostName\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"eebbf063-bb84-bc86-3f82-9f2ea7b2b980\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\IPHostEntry.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a container class for Internet host address information.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.IPHostEntry\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.IPHostEntry.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.IPHostEntry.yml","open_to_public_contributors":true,"api_name":["System.Net.IPHostEntry","System.Net.IPHostEntry..ctor","System.Net.IPHostEntry.AddressList","System.Net.IPHostEntry.Aliases","System.Net.IPHostEntry.HostName"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.IPHostEntry","System::Net::IPHostEntry","System.Net.IPHostEntry.#ctor","System::Net::IPHostEntry::#ctor","System.Net.IPHostEntry.AddressList","System::Net::IPHostEntry::AddressList","System.Net.IPHostEntry.Aliases","System::Net::IPHostEntry::Aliases","System.Net.IPHostEntry.HostName","System::Net::IPHostEntry::HostName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"eebbf063-bb84-bc86-3f82-9f2ea7b2b980","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\IPHostEntry.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/IPHostEntry.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IPHostEntry class | Microsoft Docs","_op_ogTitle":"IPHostEntry class","description":"Provides a container class for Internet host address information.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.IPHostEntry","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.iphostentry","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.iphostentry","fileRelativePath":"System.Net.IPHostEntry.html"},"themesRelativePathToOutputRoot":"_themes/"}