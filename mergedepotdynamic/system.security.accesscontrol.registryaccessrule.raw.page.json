{"content":"    \r\n    <h1 id=\"System_Security_AccessControl_RegistryAccessRule\">\r\n      <span class=\"lang-csharp\">RegistryAccessRule</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule\" data-linktype=\"relative-path\">AuthorizationRule</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.accessrule\" data-linktype=\"relative-path\">System.Security.AccessControl.AccessRule</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RegistryAccessRule</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.accessrule#System_Security_AccessControl_AccessRule_AccessControlType\" data-linktype=\"relative-path\">AccessControlType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_AccessMask\" data-linktype=\"relative-path\">AccessMask</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_IdentityReference\" data-linktype=\"relative-path\">IdentityReference</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_InheritanceFlags\" data-linktype=\"relative-path\">InheritanceFlags</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_IsInherited\" data-linktype=\"relative-path\">IsInherited</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.accesscontrol.authorizationrule#System_Security_AccessControl_AuthorizationRule_PropagationFlags\" data-linktype=\"relative-path\">PropagationFlags</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The RegistryAccessRule class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys. For an overview of these classes, and their relationship to the underlying Windows access control structures, see <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Windows access control security can only be applied to registry keys. It cannot be applied to individual key/value pairs stored in a key.  </p>\n</div>\n<p> To get a list of the rules currently applied to a registry key, use the <a class=\"xref\" href=\"microsoft.win32.registrykey#Microsoft_Win32_RegistryKey_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> method to get a <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object, and then use its <a class=\"xref\" href=\"system.security.accesscontrol.commonobjectsecurity#System_Security_AccessControl_CommonObjectSecurity_GetAccessRules_\" data-linktype=\"relative-path\">GetAccessRules</a> method to obtain a collection of RegistryAccessRule objects.  </p>\n<p> RegistryAccessRule objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL). When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.  </p>\n</div>\n<p> Use RegistryAccessRule objects to specify access rights to allow or deny to a user or group. A RegistryAccessRule object always represents either allowed access or denied access, never both.  </p>\n<p> To apply a rule to a registry key, use the <a class=\"xref\" href=\"microsoft.win32.registrykey#Microsoft_Win32_RegistryKey_GetAccessControl_\" data-linktype=\"relative-path\">GetAccessControl</a> method to get the <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object. Modify the <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object by using its methods to add the rule, and then use the <a class=\"xref\" href=\"microsoft.win32.registrykey#Microsoft_Win32_RegistryKey_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a> method to reattach the security object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Changes you make to a <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object do not affect the access levels of the registry key until you call the <a class=\"xref\" href=\"microsoft.win32.registrykey#Microsoft_Win32_RegistryKey_SetAccessControl_\" data-linktype=\"relative-path\">SetAccessControl</a> method to assign the altered security object to the registry key.  </p>\n</div>\n<p> RegistryAccessRule objects are immutable. Security for a registry key is modified using the methods of the <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> class to add or remove rules; as you do this, the underlying access control entries are modified.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_RegistryAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_AccessControlType_\" data-linktype=\"self-bookmark\">RegistryAccessRule(IdentityReference,RegistryRights,AccessControlType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_RegistryAccessRule__ctor_System_String_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_AccessControlType_\" data-linktype=\"self-bookmark\">RegistryAccessRule(String,RegistryRights,AccessControlType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_RegistryAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_InheritanceFlags_System_Security_AccessControl_PropagationFlags_System_Security_AccessControl_AccessControlType_\" data-linktype=\"self-bookmark\">RegistryAccessRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_RegistryAccessRule__ctor_System_String_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_InheritanceFlags_System_Security_AccessControl_PropagationFlags_System_Security_AccessControl_AccessControlType_\" data-linktype=\"self-bookmark\">RegistryAccessRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_AccessControl_RegistryAccessRule_RegistryRights\" data-linktype=\"self-bookmark\">RegistryRights</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the rights allowed or denied by the access rule.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_RegistryAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_AccessControlType_\">\r\n    \r\n            <a id=\"System_Security_AccessControl_RegistryAccessRule__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryAccessRule(IdentityReference,RegistryRights,AccessControlType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.identityreference\" data-linktype=\"relative-path\">IdentityReference</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user or group the rule applies to. Must be of type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> or a type such as <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> that can be converted to type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>registryRights</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a> values indicating the rights allowed or denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> values indicating whether the rights are allowed or denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>registryRights</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>type</code> specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>eventRights</code> is zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is neither of type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> nor of a type such as <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> that can be converted to type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor specifies default propagation and inheritance. That is, <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">System.Security.AccessControl.InheritanceFlags</a> and <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">System.Security.AccessControl.PropagationFlags</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_RegistryAccessRule__ctor_System_String_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_AccessControlType_\">\r\n    \r\n            <a id=\"System_Security_AccessControl_RegistryAccessRule__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryAccessRule(String,RegistryRights,AccessControlType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the user or group the rule applies to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>registryRights</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a> values indicating the rights allowed or denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> values indicating whether the rights are allowed or denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>registryRights</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>type</code> specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>registryRights</code> is zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>identity</code> is a zero-length string.  </p>\n<p> -or-  </p>\n<p> <code>identity</code> is longer than 512 characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor specifies default propagation and inheritance. That is, <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">System.Security.AccessControl.InheritanceFlags</a> and <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">System.Security.AccessControl.PropagationFlags</a>.  </p>\n<p> This constructor is equivalent to creating an <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> object, by passing <code>identity</code> to the <a class=\"xref\" href=\"system.security.principal.ntaccount#System_Security_Principal_NTAccount__ctor_System_String_\" data-linktype=\"relative-path\">System.Security.Principal.NTAccount.NTAccount(String)</a> constructor, and passing the newly created <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> object to the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule#System_Security_AccessControl_RegistryAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_AccessControlType_\" data-linktype=\"relative-path\">RegistryAccessRule(IdentityReference,RegistryRights,AccessControlType)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates registry access rules and adds them to a <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.AccessControl.RegistrySecurity.AddAccessRule#1\">using System;\nusing Microsoft.Win32;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\n\npublic class Example\n{\n    public static void Main()\n    {\n        // Create a string representing the current user.\n        string user = Environment.UserDomainName + &quot;\\\\&quot;\n            + Environment.UserName;\n\n        // Create a security object that grants no access.\n        RegistrySecurity mSec = new RegistrySecurity();\n\n        // Add a rule that grants the current user the \n        // right to read the key.\n        RegistryAccessRule rule = new RegistryAccessRule(user, \n            RegistryRights.ReadKey, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        // Add a rule that denies the current user the \n        // right to change permissions on the Registry.\n        rule = new RegistryAccessRule(user, \n            RegistryRights.ChangePermissions, \n            AccessControlType.Deny);\n        mSec.AddAccessRule(rule);\n\n        // Display the rules in the security object.\n        ShowSecurity(mSec);\n\n        // Add a rule that allows the current user the \n        // right to read permissions on the Registry. This \n        // rule is merged with the existing Allow rule.\n        rule = new RegistryAccessRule(user, \n            RegistryRights.WriteKey, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        ShowSecurity(mSec);\n    }\n\n    private static void ShowSecurity(RegistrySecurity security)\n    {\n        Console.WriteLine(&quot;\\r<br>Current access rules:\\r<br>&quot;);\n\n        foreach( RegistryAccessRule ar in \n            security.GetAccessRules(true, true, typeof(NTAccount)) )\n        {\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference);\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType);\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.RegistryRights);\n            Console.WriteLine();\n        }\n    }\n}\n\n/* This code example produces output similar to following:\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: ReadKey\n\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Deny\n      Rights: ChangePermissions\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: SetValue, CreateSubKey, ReadKey\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.AccessControl.RegistrySecurity.AddAccessRule#1\">Imports System\nImports Microsoft.Win32\nImports System.Security.AccessControl\nImports System.Security.Principal\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        &#39; Create a string representing the current user.\n        Dim user As String = Environment.UserDomainName _ \n            &amp; &quot;\\&quot; &amp; Environment.UserName\n\n        &#39; Create a security object that grants no access.\n        Dim mSec As New RegistrySecurity()\n\n        &#39; Add a rule that grants the current user the \n        &#39; right to read the key.\n        Dim rule As New RegistryAccessRule(user, _\n            RegistryRights.ReadKey, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        &#39; Add a rule that denies the current user the \n        &#39; right to change permissions on the Registry.\n        rule = New RegistryAccessRule(user, _\n            RegistryRights.ChangePermissions, _\n            AccessControlType.Deny)\n        mSec.AddAccessRule(rule)\n\n        &#39; Display the rules in the security object.\n        ShowSecurity(mSec)\n\n        &#39; Add a rule that allows the current user the \n        &#39; right to read permissions on the Registry. This \n        &#39; rule is merged with the existing Allow rule.\n        rule = New RegistryAccessRule(user, _\n            RegistryRights.WriteKey, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        ShowSecurity(mSec)\n\n    End Sub \n\n    Private Shared Sub ShowSecurity(ByVal security As RegistrySecurity)\n        Console.WriteLine(vbCrLf &amp; &quot;Current access rules:&quot; &amp; vbCrLf)\n\n        For Each ar As RegistryAccessRule In _\n            security.GetAccessRules(True, True, GetType(NTAccount))\n\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference)\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType)\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.RegistryRights)\n            Console.WriteLine()\n        Next\n\n    End Sub\nEnd Class \n\n&#39;This code example produces output similar to following:\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: ReadKey\n&#39;\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Deny\n&#39;      Rights: ChangePermissions\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: SetValue, CreateSubKey, ReadKey\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_RegistryAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_InheritanceFlags_System_Security_AccessControl_PropagationFlags_System_Security_AccessControl_AccessControlType_\">\r\n    \r\n            <a id=\"System_Security_AccessControl_RegistryAccessRule__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryAccessRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.identityreference\" data-linktype=\"relative-path\">IdentityReference</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user or group the rule applies to. Must be of type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> or a type such as <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> that can be converted to type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>registryRights</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a> values specifying the rights allowed or denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inheritanceFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flags specifying how access rights are inherited from other objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>propagationFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a> flags specifying how access rights are propagated to other objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> values specifying whether the rights are allowed or denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>registryRights</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>type</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>inheritanceFlags</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>propagationFlags</code> specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>registryRights</code> is zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is neither of type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>, nor of a type such as <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> that can be converted to type <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">System.Security.AccessControl.InheritanceFlags</a> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  </p>\n<table>\n<thead>\n<tr>\n<th>Propagation flags</th>\n<th>S</th>\n<th>CS</th>\n<th>GS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td>X</td>\n<td>X</td>\n<td></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td></td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a>, <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td></td>\n<td>X</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p> The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  </p>\n<p> For example, if the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag is specified for <code>inheritanceFlags</code> and the <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a> propagation flag is specified for <code>propagationFlags</code>, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can specify the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">System.Security.AccessControl.InheritanceFlags</a> flag for <code>inheritanceFlags</code>, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag. Finally, specifying the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_RegistryAccessRule__ctor_System_String_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_InheritanceFlags_System_Security_AccessControl_PropagationFlags_System_Security_AccessControl_AccessControlType_\">\r\n    \r\n            <a id=\"System_Security_AccessControl_RegistryAccessRule__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryAccessRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the user or group the rule applies to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>registryRights</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a> values indicating the rights allowed or denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inheritanceFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flags specifying how access rights are inherited from other objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>propagationFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a> flags specifying how access rights are propagated to other objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a> values specifying whether the rights are allowed or denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>registryRights</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>type</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>inheritanceFlags</code> specifies an invalid value.  </p>\n<p> -or-  </p>\n<p> <code>propagationFlags</code> specifies an invalid value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventRights</code> is zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>identity</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>identity</code> is a zero-length string.  </p>\n<p> -or-  </p>\n<p> <code>identity</code> is longer than 512 characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">System.Security.AccessControl.InheritanceFlags</a> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  </p>\n<table>\n<thead>\n<tr>\n<th>Propagation flags</th>\n<th>S</th>\n<th>CS</th>\n<th>GS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td>X</td>\n<td>X</td>\n<td></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td></td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a>, <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a></td>\n<td></td>\n<td>X</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p> The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  </p>\n<p> For example, if the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag is specified for <code>inheritanceFlags</code> and the <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a> propagation flag is specified for <code>propagationFlags</code>, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can specify the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">System.Security.AccessControl.InheritanceFlags</a> flag for <code>inheritanceFlags</code>, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag. Finally, specifying the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.  </p>\n</div>\n<p> This constructor is equivalent to creating an <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> object, by passing <code>identity</code> to the <a class=\"xref\" href=\"system.security.principal.ntaccount#System_Security_Principal_NTAccount__ctor_System_String_\" data-linktype=\"relative-path\">System.Security.Principal.NTAccount.NTAccount(String)</a> constructor, and passing the newly created <a class=\"xref\" href=\"system.security.principal.ntaccount\" data-linktype=\"relative-path\">NTAccount</a> object to the <a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule#System_Security_AccessControl_RegistryAccessRule__ctor_System_Security_Principal_IdentityReference_System_Security_AccessControl_RegistryRights_System_Security_AccessControl_InheritanceFlags_System_Security_AccessControl_PropagationFlags_System_Security_AccessControl_AccessControlType_\" data-linktype=\"relative-path\">RegistryAccessRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates access rules with inheritance and propagation. The example creates a <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object, and then creates and adds two rules that have the <a class=\"xref\" href=\"system.security.accesscontrol.inheritanceflags\" data-linktype=\"relative-path\">InheritanceFlags</a> flag. The first rule has no propagation flags, while the second has <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a> and <a class=\"xref\" href=\"system.security.accesscontrol.propagationflags\" data-linktype=\"relative-path\">PropagationFlags</a>.  </p>\n<p> The program displays the rules in the <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object, and then uses the <a class=\"xref\" href=\"system.security.accesscontrol.registrysecurity\" data-linktype=\"relative-path\">RegistrySecurity</a> object to create a subkey. The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey. Finally, the program deletes the test keys.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.AccessControl.RegistryAccessRule.ctor2#1\">Option Explicit\nImports System\nImports System.Security.AccessControl\nImports System.Security.Principal\nImports System.Security\nImports Microsoft.Win32\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Const TestKey As String = &quot;TestKey3927&quot;\n        Dim cu As RegistryKey = Registry.CurrentUser\n\n        Dim user As String = Environment.UserDomainName _ \n            &amp; &quot;\\&quot; &amp; Environment.UserName\n\n        &#39; Create a security object that grants no access.\n        Dim mSec As New RegistrySecurity()\n\n        &#39; Add a rule that grants the current user the right\n        &#39; to read and enumerate the name/value pairs in a key, \n        &#39; to read its access and audit rules, to enumerate\n        &#39; its subkeys, to create subkeys, and to delete the key. \n        &#39; The rule is inherited by all contained subkeys.\n        &#39;\n        Dim rule As New RegistryAccessRule(user, _\n            RegistryRights.ReadKey Or RegistryRights.WriteKey _\n                Or RegistryRights.Delete, _\n            InheritanceFlags.ContainerInherit, _\n            PropagationFlags.None, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        &#39; Add a rule that allows the current user the right\n        &#39; right to set the name/value pairs in a key. \n        &#39; This rule is inherited by contained subkeys, but\n        &#39; propagation flags limit it to immediate child \n        &#39; subkeys.\n        rule = New RegistryAccessRule(user, _\n            RegistryRights.ChangePermissions, _\n            InheritanceFlags.ContainerInherit, _\n            PropagationFlags.InheritOnly Or PropagationFlags.NoPropagateInherit, _\n            AccessControlType.Allow)\n        mSec.AddAccessRule(rule)\n\n        &#39; Display the rules in the security object.\n        ShowSecurity(mSec)\n\n        &#39; Create the test key using the security object.\n        &#39;\n        Dim rk As RegistryKey = cu.CreateSubKey(TestKey, _\n            RegistryKeyPermissionCheck.ReadWriteSubTree, _\n            mSec)\n\n        &#39; Create a child subkey and a grandchild subkey, \n        &#39; without security.\n        Dim rkChild As RegistryKey= rk.CreateSubKey(&quot;ChildKey&quot;, _\n            RegistryKeyPermissionCheck.ReadWriteSubTree)\n        Dim rkGrandChild As RegistryKey = _\n            rkChild.CreateSubKey(&quot;GrandChildKey&quot;, _\n                RegistryKeyPermissionCheck.ReadWriteSubTree)\n\n        Show(rk)\n        Show(rkChild)\n        Show(rkGrandChild)\n\n        rkGrandChild.Close()\n        rkChild.Close()\n        rk.Close()\n\n        cu.DeleteSubKeyTree(TestKey)\n    End Sub \n\n    Private Shared Sub Show(ByVal rk As RegistryKey)\n        Console.WriteLine(rk.Name)            \n        ShowSecurity(rk.GetAccessControl())\n    End Sub\n\n    Private Shared Sub ShowSecurity(ByVal security As RegistrySecurity)\n        Console.WriteLine(vbCrLf &amp; &quot;Current access rules:&quot; &amp; vbCrLf)\n\n        For Each ar As RegistryAccessRule In _\n            security.GetAccessRules(True, True, GetType(NTAccount))\n\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference)\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType)\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.RegistryRights)\n            Console.WriteLine(&quot; Inheritance: {0}&quot;, ar.InheritanceFlags)\n            Console.WriteLine(&quot; Propagation: {0}&quot;, ar.PropagationFlags)\n            Console.WriteLine(&quot;   Inherited? {0}&quot;, ar.IsInherited)\n            Console.WriteLine()\n        Next\n\n    End Sub\nEnd Class \n\n&#39;This code example produces output similar to following:\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: SetValue, CreateSubKey, Delete, ReadKey\n&#39; Inheritance: ContainerInherit\n&#39; Propagation: None\n&#39;   Inherited? False\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: ChangePermissions\n&#39; Inheritance: ContainerInherit\n&#39; Propagation: NoPropagateInherit, InheritOnly\n&#39;   Inherited? False\n&#39;\n&#39;HKEY_CURRENT_USER&nbsp;&nbsp;&nbsp;&nbsp;estKey3927\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: SetValue, CreateSubKey, Delete, ReadKey\n&#39; Inheritance: ContainerInherit\n&#39; Propagation: None\n&#39;   Inherited? False\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: ChangePermissions\n&#39; Inheritance: ContainerInherit\n&#39; Propagation: NoPropagateInherit, InheritOnly\n&#39;   Inherited? False\n&#39;\n&#39;HKEY_CURRENT_USER&nbsp;&nbsp;&nbsp;&nbsp;estKey3927\\ChildKey\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: SetValue, CreateSubKey, Delete, ReadKey\n&#39; Inheritance: ContainerInherit\n&#39; Propagation: None\n&#39;   Inherited? True\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: ChangePermissions\n&#39; Inheritance: None\n&#39; Propagation: None\n&#39;   Inherited? True\n&#39;\n&#39;HKEY_CURRENT_USER&nbsp;&nbsp;&nbsp;&nbsp;estKey3927\\ChildKey\\GrandChildKey\n&#39;\n&#39;Current access rules:\n&#39;\n&#39;        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n&#39;        Type: Allow\n&#39;      Rights: SetValue, CreateSubKey, Delete, ReadKey\n&#39; Inheritance: ContainerInherit\n&#39; Propagation: None\n&#39;   Inherited? True\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.AccessControl.RegistryAccessRule.ctor2#1\">\nusing System;\nusing System.Security.AccessControl;\nusing System.Security.Principal;\nusing System.Security;\nusing Microsoft.Win32;\n\npublic class Example\n{\n    public static void Main()\n    {\n        const string TestKey = &quot;TestKey3927&quot;;\n        RegistryKey cu = Registry.CurrentUser;\n\n        string user = Environment.UserDomainName + \n            &quot;\\\\&quot; + Environment.UserName;\n\n        // Create a security object that grants no access.\n        RegistrySecurity mSec = new RegistrySecurity();\n\n        // Add a rule that grants the current user the right\n        // to read and enumerate the name/value pairs in a key, \n        // to read its access and audit rules, to enumerate\n        // its subkeys, to create subkeys, and to delete the key. \n        // The rule is inherited by all contained subkeys.\n        //\n        RegistryAccessRule rule = new RegistryAccessRule(user, \n           RegistryRights.ReadKey | RegistryRights.WriteKey \n               | RegistryRights.Delete, \n           InheritanceFlags.ContainerInherit, \n           PropagationFlags.None, \n           AccessControlType.Allow\n        );\n        mSec.AddAccessRule(rule);\n\n        // Add a rule that allows the current user the right\n        // right to set the name/value pairs in a key. \n        // This rule is inherited by contained subkeys, but\n        // propagation flags limit it to immediate child \n        // subkeys.\n        rule = new RegistryAccessRule(user, \n            RegistryRights.ChangePermissions, \n            InheritanceFlags.ContainerInherit, \n            PropagationFlags.InheritOnly | \n                PropagationFlags.NoPropagateInherit, \n            AccessControlType.Allow);\n        mSec.AddAccessRule(rule);\n\n        // Display the rules in the security object.\n        ShowSecurity(mSec);\n\n        // Create the test key using the security object.\n        //\n        RegistryKey rk = cu.CreateSubKey(TestKey, \n            RegistryKeyPermissionCheck.ReadWriteSubTree, mSec);\n\n        // Create a child subkey and a grandchild subkey, \n        // without security.\n        RegistryKey rkChild = rk.CreateSubKey(&quot;ChildKey&quot;, \n            RegistryKeyPermissionCheck.ReadWriteSubTree);\n        RegistryKey rkGrandChild = \n            rkChild.CreateSubKey(&quot;GrandChildKey&quot;, \n                RegistryKeyPermissionCheck.ReadWriteSubTree);\n\n        Show(rk);\n        Show(rkChild);\n        Show(rkGrandChild);\n\n        rkGrandChild.Close();\n        rkChild.Close();\n        rk.Close();\n\n        cu.DeleteSubKeyTree(TestKey);\n    }\n\n    private static void Show(RegistryKey rk)\n    {\n        Console.WriteLine(rk.Name);\n        ShowSecurity(rk.GetAccessControl());\n    }\n\n    private static void ShowSecurity(RegistrySecurity security)\n    {\n        Console.WriteLine(&quot;\\r<br>Current access rules:\\r<br>&quot;);\n\n        foreach( RegistryAccessRule ar in security.GetAccessRules(true, true, typeof(NTAccount)) )\n        {\n\n            Console.WriteLine(&quot;        User: {0}&quot;, ar.IdentityReference);\n            Console.WriteLine(&quot;        Type: {0}&quot;, ar.AccessControlType);\n            Console.WriteLine(&quot;      Rights: {0}&quot;, ar.RegistryRights);\n            Console.WriteLine(&quot; Inheritance: {0}&quot;, ar.InheritanceFlags);\n            Console.WriteLine(&quot; Propagation: {0}&quot;, ar.PropagationFlags);\n            Console.WriteLine(&quot;   Inherited? {0}&quot;, ar.IsInherited);\n            Console.WriteLine();\n        }\n\n    }\n}\n\n/* This code example produces output similar to following:\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: SetValue, CreateSubKey, Delete, ReadKey\n Inheritance: ContainerInherit\n Propagation: None\n   Inherited? False\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: ChangePermissions\n Inheritance: ContainerInherit\n Propagation: NoPropagateInherit, InheritOnly\n   Inherited? False\n\nHKEY_CURRENT_USER&nbsp;&nbsp;&nbsp;&nbsp;estKey3927\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: SetValue, CreateSubKey, Delete, ReadKey\n Inheritance: ContainerInherit\n Propagation: None\n   Inherited? False\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: ChangePermissions\n Inheritance: ContainerInherit\n Propagation: NoPropagateInherit, InheritOnly\n   Inherited? False\n\nHKEY_CURRENT_USER&nbsp;&nbsp;&nbsp;&nbsp;estKey3927\\ChildKey\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: SetValue, CreateSubKey, Delete, ReadKey\n Inheritance: ContainerInherit\n Propagation: None\n   Inherited? True\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: ChangePermissions\n Inheritance: None\n Propagation: None\n   Inherited? True\n\nHKEY_CURRENT_USER&nbsp;&nbsp;&nbsp;&nbsp;estKey3927\\ChildKey\\GrandChildKey\n\nCurrent access rules:\n\n        User: TestDomain&nbsp;&nbsp;&nbsp;&nbsp;estUser\n        Type: Allow\n      Rights: SetValue, CreateSubKey, Delete, ReadKey\n Inheritance: ContainerInherit\n Propagation: None\n   Inherited? True\n */\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_AccessControl_RegistryAccessRule_RegistryRights\">\r\n    \r\n            <a id=\"System_Security_AccessControl_RegistryAccessRule_RegistryRights_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryRights</div>        \r\n          </div>\r\n    \r\n            <p>Gets the rights allowed or denied by the access rule.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.AccessControl.RegistryRights RegistryRights { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.security.accesscontrol.registryrights\" data-linktype=\"relative-path\">RegistryRights</a> values indicating the rights allowed or denied by the access rule.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.security.accesscontrol.registryaccessrule\" data-linktype=\"relative-path\">RegistryAccessRule</a> objects are immutable. You can create a new access rule representing a different user, different rights, or a different <a class=\"xref\" href=\"system.security.accesscontrol.accesscontroltype\" data-linktype=\"relative-path\">AccessControlType</a>, but you cannot modify an existing access rule.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.AccessControl.RegistryAccessRule.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.AccessControl.RegistryAccessRule.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.RegistryAccessRule\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.RegistryAccessRule..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.AccessControl.RegistryAccessRule.RegistryRights\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cd969f55-ffc6-d0b2-40c1-b3f3f1c8802a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.AccessControl\\RegistryAccessRule.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.AccessControl/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.AccessControl.RegistryAccessRule\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.AccessControl.RegistryAccessRule.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.AccessControl.RegistryAccessRule.yml","open_to_public_contributors":true,"api_name":["System.Security.AccessControl.RegistryAccessRule","System.Security.AccessControl.RegistryAccessRule..ctor","System.Security.AccessControl.RegistryAccessRule.RegistryRights"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.AccessControl.RegistryAccessRule","System::Security::AccessControl::RegistryAccessRule","System.Security.AccessControl.RegistryAccessRule.#ctor","System::Security::AccessControl::RegistryAccessRule::#ctor","System.Security.AccessControl.RegistryAccessRule.RegistryRights","System::Security::AccessControl::RegistryAccessRule::RegistryRights"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cd969f55-ffc6-d0b2-40c1-b3f3f1c8802a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.AccessControl\\RegistryAccessRule.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.AccessControl/RegistryAccessRule.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RegistryAccessRule class | Microsoft Docs","_op_ogTitle":"RegistryAccessRule class","description":"Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.AccessControl/toc.json","toc_rel":"_splitted/System.Security.AccessControl/toc.json","source_url":"","ms.assetid":"System.Security.AccessControl.RegistryAccessRule","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.accesscontrol.registryaccessrule","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.accesscontrol.registryaccessrule","fileRelativePath":"System.Security.AccessControl.RegistryAccessRule.html"},"themesRelativePathToOutputRoot":"_themes/"}