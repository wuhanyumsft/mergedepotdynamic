{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IObservable&lt;T&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Defines a provider for push-based notification.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IObservable&lt;out T&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>T</td>\r\n  \t\t\t<td><p>The object that provides notification information.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> and IObservable(T) interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern. The IObservable(T) interface represents the class that sends notifications (the provider); the <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> interface represents the class that receives them (the observer). <code>T</code> represents the class that provides the notification information. In some push-based notifications, the <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> implementation and <code>T</code> can represent the same type.  </p>\n<p> The provider must implement a single method, <a class=\"xref\" href=\"system.iobservable-1#System_IObservable_1_Subscribe_\" data-linktype=\"relative-path\">Subscribe</a>, that indicates that an observer wants to receive push-based notifications. Callers to the method pass an instance of the observer. The method returns an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.  </p>\n<p> At any given time, a given provider may have zero, one, or multiple observers. The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications. The IObservable(T) interface does not make any assumptions about the number of observers or the order in which notifications are sent.  </p>\n<p> The provider sends the following three kinds of notifications to the observer by calling <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> methods:  </p>\n<ul>\n<li><p>The current data. The provider can call the <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnNext_\" data-linktype=\"relative-path\">OnNext</a> method to pass the observer a <code>T</code> object that has current data, changed data, or fresh data.  </p>\n</li>\n<li><p>An error condition. The provider can call the <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnError_\" data-linktype=\"relative-path\">OnError</a> method to notify the observer that some error condition has occurred.  </p>\n</li>\n<li><p>No further data. The provider can call the <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnCompleted_\" data-linktype=\"relative-path\">OnCompleted</a> method to notify the observer that it has finished sending notifications.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IObservable_1_Subscribe_System_IObserver__0__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Subscribe(IObserver&lt;T&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the provider that an observer is to receive notifications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public IDisposable Subscribe (IObserver&lt;out T&gt; observer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>observer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object that is to receive notifications.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Subscribe method must be called to register an observer for push-based notifications. A typical implementation of the Subscribe method does the following:  </p>\n<ul>\n<li><p>It stores a reference to the observer in a collection object, such as a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> object.  </p>\n</li>\n<li><p>It returns a reference to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber&#39;s <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnCompleted_\" data-linktype=\"relative-path\">OnCompleted</a> method.  </p>\n<p>At any given time, a particular instance of an <a class=\"xref\" href=\"system.iobservable-1\" data-linktype=\"relative-path\">IObservable&lt;T&gt;</a> implementation is responsible for handling all subscriptions and notifying all subscribers. Unless the documentation for a particular <a class=\"xref\" href=\"system.iobservable-1\" data-linktype=\"relative-path\">IObservable&lt;T&gt;</a> implementation indicates otherwise, observers should make no assumptions about the <a class=\"xref\" href=\"system.iobservable-1\" data-linktype=\"relative-path\">IObservable&lt;T&gt;</a> implementation, such as the order of notifications that multiple observers will receive.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IObservable-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IObservable-1.yml\">\r\n<meta name=\"APIName\" content=\"System.IObservable&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.IObservable&lt;T&gt;.Subscribe\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"329a20dd-710a-29ef-ee74-bfdf148cdaa8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a provider for push-based notification.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IObservable`1\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IObservable-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IObservable-1.yml","open_to_public_contributors":true,"api_name":["System.IObservable<T>","System.IObservable<T>.Subscribe"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IObservable`1","System::IObservable`1","System.IObservable`1.Subscribe","System::IObservable`1::Subscribe"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"329a20dd-710a-29ef-ee74-bfdf148cdaa8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/IObservable`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IObservable<T> interface | Microsoft Docs","_op_ogTitle":"IObservable<T> interface","description":"Defines a provider for push-based notification.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.IObservable`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.iobservable-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.iobservable-1","fileRelativePath":"System.IObservable-1.html"},"themesRelativePathToOutputRoot":"_themes/"}