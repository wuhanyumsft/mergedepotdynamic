{"content":"    \r\n    <h1 id=\"System_Threading_ThreadAbortException\">\r\n      <span class=\"lang-csharp\">ThreadAbortException</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The exception that is thrown when a call is made to the <span class=\"xref\">stem.Threading.Thread.Abort*</span> method. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class ThreadAbortException : SystemException</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">System.SystemException</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ThreadAbortException</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>When a call is made to the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> method to destroy a thread, the common language runtime throws a ThreadAbortException. ThreadAbortException is a special exception that can be caught, but it will automatically be raised again at the end of the <code>catch</code> block. When this exception is raised, the runtime executes all the <code>finally</code> blocks before ending the thread. Because the thread can do an unbounded computation in the <code>finally</code> blocks or call <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_ResetAbort_\" data-linktype=\"relative-path\">ResetAbort</a> to cancel the abort, there is no guarantee that the thread will ever end. If you want to wait until the aborted thread has ended, you can call the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Join_\" data-linktype=\"relative-path\">Join</a> method. <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Join_\" data-linktype=\"relative-path\">Join</a> is a blocking call that does not return until the thread actually stops executing.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the common language runtime (CLR) stops background threadsafter all foreground threads in a managed executable have ended, it does not use <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a>. Therefore, you cannot use ThreadAbortException to detect when background threads are being terminated by the CLR.  </p>\n</div>\n<p> ThreadAbortException uses the HRESULT COR_E_THREADABORTED, which has the value 0x80131530.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The value of the inherited <a class=\"xref\" href=\"system.exception#System_Exception_Data_\" data-linktype=\"relative-path\">Data</a> property is always <code>null</code>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ThreadAbortException_ExceptionState\" data-linktype=\"self-bookmark\">ExceptionState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that contains application-specific information related to the thread abort.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ThreadAbortException_ExceptionState\">\r\n    \r\n            <a id=\"System_Threading_ThreadAbortException_ExceptionState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExceptionState</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that contains application-specific information related to the thread abort.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ExceptionState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An object containing application-specific information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object returned by this property is specified through the <code>stateInfo</code> parameter of the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Abort_\" data-linktype=\"relative-path\">Abort</a> method. The exact content and usage of this object is application defined; it is typically used to convey information that is meaningful to the thread being aborted.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to pass information to a thread that is being aborted.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Thread.Abort2#1\">using System;\nusing System.Threading;\n\nclass Test\n{\n    public static void Main()\n    {\n        Thread newThread  = new Thread(new ThreadStart(TestMethod));\n        newThread.Start();\n        Thread.Sleep(1000);\n\n        // Abort newThread.\n        Console.WriteLine(&quot;Main aborting new thread.&quot;);\n        newThread.Abort(&quot;Information from Main.&quot;);\n\n        // Wait for the thread to terminate.\n        newThread.Join();\n        Console.WriteLine(&quot;New thread terminated - Main exiting.&quot;);\n    }\n\n    static void TestMethod()\n    {\n        try\n        {\n            while(true)\n            {\n                Console.WriteLine(&quot;New thread running.&quot;);\n                Thread.Sleep(1000);\n            }\n        }\n        catch(ThreadAbortException abortException)\n        {\n            Console.WriteLine((string)abortException.ExceptionState);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Threading.Thread.Abort2#1\">using namespace System;\nusing namespace System::Threading;\nref class Test\n{\nprivate:\n   Test(){}\n\n\npublic:\n   static void TestMethod()\n   {\n      try\n      {\n         while ( true )\n         {\n            Console::WriteLine( &quot;New thread running.&quot; );\n            Thread::Sleep( 1000 );\n         }\n      }\n      catch ( ThreadAbortException^ abortException ) \n      {\n         Console::WriteLine( dynamic_cast&lt;String^&gt;(abortException-&gt;ExceptionState) );\n      }\n\n   }\n\n};\n\nint main()\n{\n   Thread^ newThread = gcnew Thread( gcnew ThreadStart( &amp;Test::TestMethod ) );\n   newThread-&gt;Start();\n   Thread::Sleep( 1000 );\n   \n   // Abort newThread.\n   Console::WriteLine( &quot;Main aborting new thread.&quot; );\n   newThread-&gt;Abort( &quot;Information from main.&quot; );\n   \n   // Wait for the thread to terminate.\n   newThread-&gt;Join();\n   Console::WriteLine( &quot;New thread terminated - main exiting.&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Thread.Abort2#1\">Imports System\nImports System.Threading\n\nPublic Class Test\n\n    &lt;MTAThread&gt; _\n    Shared Sub Main()\n        Dim newThread As New Thread(AddressOf TestMethod)\n        newThread.Start()\n        Thread.Sleep(1000)\n\n        &#39; Abort newThread.\n        Console.WriteLine(&quot;Main aborting new thread.&quot;)\n        newThread.Abort(&quot;Information from Main.&quot;)\n\n        &#39; Wait for the thread to terminate.\n        newThread.Join()\n        Console.WriteLine(&quot;New thread terminated - Main exiting.&quot;)\n    End Sub\n\n    Shared Sub TestMethod()\n        Try\n            While True\n                Console.WriteLine(&quot;New thread running.&quot;)\n                Thread.Sleep(1000)\n            End While\n        Catch abortException As ThreadAbortException\n            Console.WriteLine( _\n                CType(abortException.ExceptionState, String))\n        End Try\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.ThreadAbortException.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.ThreadAbortException.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadAbortException\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadAbortException.ExceptionState\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2b1cb1c6-02b0-c12c-726e-35fedfaf21c1\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\ThreadAbortException.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when a call is made to the  method. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.ThreadAbortException\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.ThreadAbortException.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.ThreadAbortException.yml","open_to_public_contributors":true,"api_name":["System.Threading.ThreadAbortException","System.Threading.ThreadAbortException.ExceptionState"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.ThreadAbortException","System::Threading::ThreadAbortException","System.Threading.ThreadAbortException.ExceptionState","System::Threading::ThreadAbortException::ExceptionState"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2b1cb1c6-02b0-c12c-726e-35fedfaf21c1","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\ThreadAbortException.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/ThreadAbortException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ThreadAbortException class | Microsoft Docs","_op_ogTitle":"ThreadAbortException class","description":"The exception that is thrown when a call is made to the  method. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.ThreadAbortException","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.threadabortexception","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.threadabortexception","fileRelativePath":"System.Threading.ThreadAbortException.html"},"themesRelativePathToOutputRoot":"_themes/"}