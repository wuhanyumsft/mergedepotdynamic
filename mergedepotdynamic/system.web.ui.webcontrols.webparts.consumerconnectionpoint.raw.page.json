{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint\">\r\n      <span class=\"lang-csharp\">ConsumerConnectionPoint</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint\" data-linktype=\"relative-path\">System.Web.UI.WebControls.WebParts.ConnectionPoint</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ConsumerConnectionPoint</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_AllowsMultipleConnections\" data-linktype=\"relative-path\">AllowsMultipleConnections</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_ControlType\" data-linktype=\"relative-path\">ControlType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_DefaultID\" data-linktype=\"relative-path\">DefaultID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_DisplayName\" data-linktype=\"relative-path\">DisplayName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_GetEnabled_System_Web_UI_Control_\" data-linktype=\"relative-path\">GetEnabled(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_ID\" data-linktype=\"relative-path\">ID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_InterfaceType\" data-linktype=\"relative-path\">InterfaceType</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection. A <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint\" data-linktype=\"relative-path\">ConnectionPoint</a> object in general contains the details for how a control can connect to another control and the type of data it can share. For a control acting as the consumer in a connection, its connection point must be a ConsumerConnectionPoint object. For details on Web Parts connections and connection points, read the topics listed in the See Also section below.  </p>\n<p> To create a ConsumerConnectionPoint object, several steps are required:  </p>\n<ol>\n<li><p>Enable a consumer control to reference an interface instance. A <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> or other server control (any type of server control that will be added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartzonebase\" data-linktype=\"relative-path\">WebPartZoneBase</a> zone can be used) must be able to consume data from a specific interface instance. The control need not implement the interface; only the provider must implement it. The consumer can either work with the exact interface type served by a provider or, if it does not, a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webparttransformer\" data-linktype=\"relative-path\">WebPartTransformer</a> object can be used to transform data from a provider&#39;s interface type to a type understood by the consumer. A typical way to enable a consumer is to declare a private field to contain a reference to the desired interface type.  </p>\n</li>\n<li><p>Identify a callback method. A method in the consumer must be identified as the callback method to establish a connection with the provider. This method retrieves an instance of the interface that the provider implements, and assigns it to (for example) the private field created in the first step. The Web Parts approach for identifying a callback method in the consumer is to add a <code>ConnectionConsumer</code> metadata attribute (defined by the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionconsumerattribute\" data-linktype=\"relative-path\">ConnectionConsumerAttribute</a> class) to the method that receives the interface instance. When the attribute is added, the only required parameter is a display name to use for the consumer connection point. Optional parameters can also be added, such as an ID.  </p>\n</li>\n<li><p>Process and output the data from the interface instance. Perform any internal processing as needed on the data, and then typically a consumer control will render the data to the page. A common way of doing this is to override the control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnPreRender_\" data-linktype=\"relative-path\">OnPreRender</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> During a synchronous request, a consumer should request data directly from the provider during or immediately after the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event. During an asynchronous request, if the provider&#39;s callback method is not called at any point during rendering, the developer can assume that no data was sent to the consumer.  </p>\n</div>\n<p>After a control has been equipped to act as a consumer, the control can participate in connections (assuming that a provider control is also equipped and available). To create a static, declarative connection in the markup of a Web page, developers can use the <code>&lt;asp:webpartconnection&gt;</code> element. If the <code>ConnectionConsumer</code> attribute in the consumer source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <code>ConsumerConnectionPointID</code> attribute in the <code>&lt;asp:webpartconnection&gt;</code> element on a page. A reason that a developer might specify an ID for a consumer connection point is if there are multiple connection points defined in the consumer control. If an ID is not specified for the consumer connection point in the consumer control, a value does not have to be assigned to the <code>ConsumerConnectionPointID</code> attribute in the page either, because the connection will be created using a default value obtained from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_DefaultID\" data-linktype=\"relative-path\">DefaultID</a> field.  </p>\n<p>To create a connection in code, developers must create a new ConsumerConnectionPoint object by calling the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartmanager#System_Web_UI_WebControls_WebParts_WebPartManager_GetConsumerConnectionPoints_\" data-linktype=\"relative-path\">GetConsumerConnectionPoints</a> method and passing to it the ID of the consumer control, along with the ID or index of the defined ConsumerConnectionPoint object in the consumer control. The returned ConsumerConnectionPoint object, along with a reference to the consumer control, a reference to the provider control, and a corresponding <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.providerconnectionpoint\" data-linktype=\"relative-path\">ProviderConnectionPoint</a> object, are all passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartmanager#System_Web_UI_WebControls_WebParts_WebPartManager_ConnectWebParts_\" data-linktype=\"relative-path\">ConnectWebParts</a> method to create a new <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartconnection\" data-linktype=\"relative-path\">WebPartConnection</a> object.  </p>\n<p>Although developers can use consumer connection points as part of establishing connections either declaratively or programmatically, users can also interact with consumer connection points to establish connections through the user interface (UI). If developers declare a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionszone\" data-linktype=\"relative-path\">ConnectionsZone</a> control on a Web page, it provides a run-time UI for users to create connections. If users choose the provider control as the starting point for establishing the connection by clicking its connect verb (they could also choose the consumer; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display names of the available consumer connection point (or points if there are multiple ones) that the provider can send the data to. Users must select a consumer connection point to establish a connection.  </p>\n<p>A ConsumerConnectionPoint object associates directly with a specific consumer control, and stores details about a connection in the properties it inherits from the base <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint\" data-linktype=\"relative-path\">ConnectionPoint</a> class. For example, in the inherited <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_InterfaceType_\" data-linktype=\"relative-path\">InterfaceType</a> property, a consumer connection point keeps the type of interface it uses. If the provider and consumer in a connection both understand the interface type, the controls are compatible and capable of forming a direct connection. If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webparttransformer\" data-linktype=\"relative-path\">WebPartTransformer</a> object to translate the provider connection point&#39;s <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_InterfaceType_\" data-linktype=\"relative-path\">InterfaceType</a> property into a type that the consumer can work with. Another important inherited property is the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> property, which provides a friendly name to display in the UI for users to choose a consumer connection point when creating connections. The display name is the required parameter when developers add a <code>ConnectionConsumer</code> attribute to the callback method in a consumer control. The inherited <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_ID_\" data-linktype=\"relative-path\">ID</a> property is also useful, as indicated above, because it provides a unique identifier for a consumer connection point in the event that a consumer has multiple connection points. A consumer can have multiple ConsumerConnectionPoint objects defined in it, and in this case, when developers add the <code>ConnectionConsumer</code> attribute to a method, they should specify an ID value to distinguish each connection point. One other notable inherited property is the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint#System_Web_UI_WebControls_WebParts_ConnectionPoint_AllowsMultipleConnections_\" data-linktype=\"relative-path\">AllowsMultipleConnections</a> property, which indicates whether a consumer connection point can connect simultaneously to multiple providers. This property value is <code>false</code> by default for consumer connection points (whereas it defaults to <code>true</code> for provider connection points).  </p>\n<p>The ConsumerConnectionPoint class adds several unique methods to the members it inherits from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectionpoint\" data-linktype=\"relative-path\">ConnectionPoint</a> class. The <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint#System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SetObject_\" data-linktype=\"relative-path\">SetObject</a> method invokes the consumer&#39;s own defined callback method to retrieve the interface instance from the provider. The <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint#System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SupportsConnection_\" data-linktype=\"relative-path\">SupportsConnection</a> method returns a Boolean value that indicates whether the connection point is able to establish connections, based on the current state of the associated consumer control.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint__ctor_System_Reflection_MethodInfo_System_Type_System_Type_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">ConsumerConnectionPoint(MethodInfo,Type,Type,String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SetObject_System_Web_UI_Control_System_Object_\" data-linktype=\"self-bookmark\">SetObject(Control,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SupportsConnection_System_Web_UI_Control_System_Web_UI_WebControls_WebParts_ConnectionInterfaceCollection_\" data-linktype=\"self-bookmark\">SupportsConnection(Control,ConnectionInterfaceCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a consumer connection point is currently capable of establishing a connection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint__ctor_System_Reflection_MethodInfo_System_Type_System_Type_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConsumerConnectionPoint(MethodInfo,Type,Type,String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ConsumerConnectionPoint (System.Reflection.MethodInfo callbackMethod, Type interfaceType, Type controlType, string displayName, string id, bool allowsMultipleConnections);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callbackMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method in the consumer control that returns an interface instance to consumers to establish a connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>interfaceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the interface that the consumer receives from a provider.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>controlType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the consumer control with which the consumer connection point is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A unique identifier for the consumer connection point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowsMultipleConnections</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>callbackMethod</code> is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>interfaceType</code> is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>controlType</code> is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>displayName</code> is <code>null</code> or an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>controlType </code>is not the same type as the consumer control (or a valid class derived from it).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ConsumerConnectionPoint constructor for the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class simply calls the base constructor, passing to it the various parameters and initializing the base class.  </p>\n<p> The base class constructor checks a number of the parameters for a connection point and can throw several exceptions. For a list of possible exceptions, see the Exceptions section.  </p>\n<p> You can call the ConsumerConnectionPoint constructor to create your own instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class. However, in cases where you are simply establishing a connection and not extending the class, you should call the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartmanager#System_Web_UI_WebControls_WebParts_WebPartManager_GetConsumerConnectionPoints_\" data-linktype=\"relative-path\">GetConsumerConnectionPoints</a> method to return a connection point object from a provider.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to derive from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class to create a custom provider connection point.  </p>\n<p> The code example has three parts:  </p>\n<ul>\n<li><p>A source file that contains a provider <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> control, a consumer <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> control, and a custom <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> object.  </p>\n</li>\n<li><p>A Web page that hosts the controls in a static connection.  </p>\n</li>\n<li><p>An explanation of how to run the example code.  </p>\n<p>The first part of the code example is the source for the provider and consumer <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> controls, and a custom <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class, named <code>TableConsumerConnectionPoint</code>. Note that the constructor of the <code>TableConsumerConnectionPoint</code> class calls the base constructor, passing it the required parameters as indicated in the Parameters section. Also note that in the <code>TableConsumer</code> class, the <code>SetConnectionInterface</code> method is specified as the callback method for connections, and the <code>ConnectionConsumer</code> attribute declares the custom <code>TableConsumerConnectionPoint</code> as a parameter. This demonstrates how to create a custom consumer connection point and then associate it with a consumer control. This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.  </p>\n<pre><code class=\"lang-cs\" name=\"UI.WebControls.WebParts.ProviderConnectionPoint#1\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Reflection;\nusing System.Web;\nusing System.Web.UI;\nusing System.Security.Permissions;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\n\n//This sample code creates a Web Parts control that acts as a provider of table data.\nnamespace Samples.AspNet.CS.Controls\n{\n  [AspNetHostingPermission(SecurityAction.Demand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n\tpublic sealed class TableProviderWebPart : WebPart, IWebPartTable\n\t{\n\t\tDataTable _table;\n\n\t\tpublic TableProviderWebPart()\n\t\t{\n\t\t\t_table = new DataTable();\n\n\t\t\tDataColumn col = new DataColumn();\n\t\t\tcol.DataType = typeof(string);\n\t\t\tcol.ColumnName = &quot;Name&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tcol = new DataColumn();\n\t\t\tcol.DataType = typeof(string);\n\t\t\tcol.ColumnName = &quot;Address&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tcol = new DataColumn();\n\t\t\tcol.DataType = typeof(int);\n\t\t\tcol.ColumnName = &quot;ZIP Code&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tDataRow row = _table.NewRow();\n\t\t\trow[&quot;Name&quot;] = &quot;John Q. Public&quot;;\n\t\t\trow[&quot;Address&quot;] = &quot;123 Main Street&quot;;\n\t\t\trow[&quot;ZIP Code&quot;] = 98000;\n\t\t\t_table.Rows.Add(row);\n\t\t}\n\n\t\tpublic PropertyDescriptorCollection Schema\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn TypeDescriptor.GetProperties(_table.DefaultView[0]);\n\t\t\t}\n\t\t}\n\t\tpublic void GetTableData(TableCallback callback)\n\t\t{\n\t\t\t\tcallback(_table.Rows);\n\t\t}\n\n\t\tpublic bool ConnectionPointEnabled\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\tobject o = ViewState[&quot;ConnectionPointEnabled&quot;];\n\t\t\t\treturn (o != null) ? (bool)o : true;\n\t\t\t}\n\t\t\tset\n\t\t\t{\n\t\t\t\tViewState[&quot;ConnectionPointEnabled&quot;] = value;\n\t\t\t}\n\t\t}\n\n\t\t[ConnectionProvider(&quot;Table&quot;, typeof(TableProviderConnectionPoint), AllowsMultipleConnections = true)]\n\t\tpublic IWebPartTable GetConnectionInterface()\n\t\t{\n\t\t\treturn new TableProviderWebPart();\n\t\t}\n\n\t\tpublic class TableProviderConnectionPoint : ProviderConnectionPoint\n\t\t{\n\t\t\tpublic TableProviderConnectionPoint(MethodInfo callbackMethod, Type interfaceType, Type controlType,\n\t\t\tstring name, string id, bool allowsMultipleConnections) : base(\n\t\t\t\tcallbackMethod, interfaceType, controlType,\n\t\t\t\tname, id, allowsMultipleConnections)\n\t\t\t{\n\t\t\t}\n\t\t\tpublic override bool GetEnabled(Control control)\n\t\t\t{\n\t\t\t\treturn ((TableProviderWebPart)control).ConnectionPointEnabled;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// This code sample demonstrates a custom WebPart controls that acts as \n\t// a consumer in a Web Parts connection.\n  [AspNetHostingPermission(SecurityAction.Demand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  public class TableConsumer : WebPart\n  {\n    private IWebPartTable _provider;\n    private ICollection _tableData;\n\n    private void GetTableData(object tableData)\n    {\n      _tableData = (ICollection)tableData;\n    }\n\n    protected override void OnPreRender(EventArgs e)\n    {\n      if (_provider != null)\n      {\n        _provider.GetTableData(new TableCallback(GetTableData));\n      }\n    }\n\n\n    protected override void RenderContents(HtmlTextWriter writer)\n    {\n      if (_provider != null)\n      {\n        PropertyDescriptorCollection props = _provider.Schema;\n        int count = 0;\n        if (props != null &amp;&amp; props.Count &gt; 0 &amp;&amp; _tableData != null)\n        {\n          foreach (PropertyDescriptor prop in props)\n          {\n            foreach (DataRow o in _tableData)\n            {\n              writer.Write(prop.DisplayName + &quot;: &quot; + o[count]);\n            }\n            writer.WriteBreak();\n            writer.WriteLine();\n            count = count + 1;\n          }\n        }\n        else\n        {\n          writer.Write(&quot;No data&quot;);\n        }\n      }\n      else\n      {\n        writer.Write(&quot;Not connected&quot;);\n      }\n    }\n    [ConnectionConsumer(&quot;Table&quot;)]\n    public void SetConnectionInterface(IWebPartTable provider)\n    {\n      _provider = provider;\n    }\n\n    public class TableConsumerConnectionPoint : ConsumerConnectionPoint\n    {\n      public TableConsumerConnectionPoint(MethodInfo callbackMethod, Type interfaceType, Type controlType,\n      string name, string id, bool allowsMultipleConnections)\n        : base(\n        callbackMethod, interfaceType, controlType,\n        name, id, allowsMultipleConnections)\n      {\n      }\n    }\n  }\n}\n</code></pre><p>The second part of the code example is the Web page that hosts the custom controls in a static Web parts connection. At the top of the page is a <code>Register</code> directive to declare a prefix and the namespace for the custom controls. The connection is declared by using an <code>&lt;asp:webpartconnection&gt;</code> element, and the provider and consumer controls are declared within an <code>&lt;asp:webpartzone&gt;</code> element.  </p>\n<pre><code class=\"lang-cs\" name=\"UI.WebControls.WebParts.ProviderConnectionPoint#3\">&lt;%@ page language=&quot;C#&quot; %&gt;\n&lt;%@ register tagprefix=&quot;aspSample&quot; \n    namespace=&quot;Samples.AspNet.CS.Controls&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;IField Test Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;asp:webpartmanager id=&quot;WebPartManager1&quot; runat=&quot;server&quot;&gt;\n            &lt;StaticConnections&gt;\n                &lt;asp:WebPartConnection id=&quot;wp1&quot; ProviderID=&quot;provider1&quot; ConsumerID=&quot;consumer1&quot;&gt;\n                &lt;/asp:WebPartConnection&gt;\n            &lt;/StaticConnections&gt;\n        &lt;/asp:webpartmanager&gt;\n        &lt;asp:webpartzone id=&quot;WebPartZone1&quot; runat=&quot;server&quot;&gt;\n          &lt;zoneTemplate&gt;\n            &lt;aspSample:TableProviderWebPart ID=&quot;provider1&quot; runat=&quot;server&quot; \n              ToolTip=&quot;Web Parts Table Provider Control&quot; /&gt;\n            &lt;aspSample:TableConsumer ID=&quot;consumer1&quot; runat=&quot;server&quot; \n              ToolTip=&quot;Web Parts Table Consumer Control&quot;/&gt;\n          &lt;/zoneTemplate&gt;\n        &lt;/asp:webpartzone&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>Load the page in a browser. The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SetObject_System_Web_UI_Control_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SetObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetObject(Control,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void SetObject (System.Web.UI.Control control, object data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The consumer control associated with a consumer connection point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The interface instance returned from a provider control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>control</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method receives an interface instance from a provider that contains data for the consumer control.  </p>\n<p> The SetObject method is called by <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartconnection\" data-linktype=\"relative-path\">WebPartConnection</a> objects when a connection is being activated. This is a critical step that is part of initiating a connection and enabling two controls to share data.  </p>\n<p> The consumer control in a connection must be able to work with the same type of interface as the provider. If it does not, the controls are incompatible and a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webparttransformer\" data-linktype=\"relative-path\">WebPartTransformer</a> object must be used to establish a connection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SupportsConnection_System_Web_UI_Control_System_Web_UI_WebControls_WebParts_ConnectionInterfaceCollection_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_WebParts_ConsumerConnectionPoint_SupportsConnection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SupportsConnection(Control,ConnectionInterfaceCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a consumer connection point is currently capable of establishing a connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool SupportsConnection (System.Web.UI.Control control, System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection secondaryInterfaces);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The consumer control associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>secondaryInterfaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectioninterfacecollection\" data-linktype=\"relative-path\">ConnectionInterfaceCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.connectioninterfacecollection\" data-linktype=\"relative-path\">ConnectionInterfaceCollection</a> of any secondary interfaces that participate in a connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a connection point can currently establish a connection; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SupportsConnection method as implemented always returns <code>true</code> in all cases for the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class. The intent for this method is to have it check on the state of <code>control</code> and <code>secondaryInterfaces</code> at certain critical points to determine whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> object is presently able to create a connection.  </p>\n<p> There can be scenarios where <code>control</code> is in a state that would make it impossible to form a connection, or where <code>secondaryInterfaces</code> must exist before a connection can be formed. In such cases, developers can inherit from the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.consumerconnectionpoint\" data-linktype=\"relative-path\">ConsumerConnectionPoint</a> class, and override the SupportsConnection method, providing a custom implementation to determine when the connection point is ready to support connections.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"bc58b7ee-37c9-0171-301c-40b86ff21936\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls.WebParts/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint","System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint..ctor","System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject","System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint","System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint","System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor","System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint::#ctor","System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject","System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint::SetObject","System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection","System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint::SupportsConnection"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"bc58b7ee-37c9-0171-301c-40b86ff21936","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls.WebParts/ConsumerConnectionPoint.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConsumerConnectionPoint class | Microsoft Docs","_op_ogTitle":"ConsumerConnectionPoint class","description":"Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls.WebParts/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls.WebParts/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.webparts.consumerconnectionpoint","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.webparts.consumerconnectionpoint","fileRelativePath":"System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.html"},"themesRelativePathToOutputRoot":"_themes/"}