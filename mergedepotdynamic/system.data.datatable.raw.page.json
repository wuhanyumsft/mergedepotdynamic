{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataTable</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents one table of in-memory data.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;RowChanging&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;TableName&quot;)]\n[System.ComponentModel.DesignTimeVisible(false)]\n[System.ComponentModel.Editor(&quot;Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;, &quot;System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItem(false)]\n[System.Xml.Serialization.XmlSchemaProvider(&quot;GetDataTableSchema&quot;)]\npublic class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent\" data-linktype=\"relative-path\">System.ComponentModel.MarshalByValueComponent</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">DataTable</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The DataTable is a central object in the ADO.NET library. Other objects that use the DataTable include the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>.  </p>\n<p> When accessing DataTable objects, note that they are conditionally case sensitive. For example, if one DataTable is named &quot;mydatatable&quot; and another is named &quot;Mydatatable&quot;, a string used to search for one of the tables is regarded as case sensitive. However, if &quot;mydatatable&quot; exists and &quot;Mydatatable&quot; does not, the search string is regarded as case insensitive. A <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can contain two DataTable objects that have the same <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> property value but different <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property values. For more information about working with DataTable objects, see <a href=\"../Topic/Creating%20a%20DataTable.md\" data-linktype=\"relative-path\">Creating a DataTable</a>.  </p>\n<p> If you are creating a DataTable programmatically, you must first define its schema by adding <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects to the <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> (accessed through the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Columns_\" data-linktype=\"relative-path\">Columns</a> property). For more information about adding <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects, see <a href=\"../Topic/Adding%20Columns%20to%20a%20DataTable.md\" data-linktype=\"relative-path\">Adding Columns to a DataTable</a>.  </p>\n<p> To add rows to a DataTable, you must first use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a> method to return a new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> object. The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a> method returns a row with the schema of the DataTable, as it is defined by the table&#39;s <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a>. The maximum number of rows that a DataTable can store is 16,777,216. For more information, see <a href=\"../Topic/Adding%20Data%20to%20a%20DataTable.md\" data-linktype=\"relative-path\">Adding Data to a DataTable</a>.  </p>\n<p> The DataTable also contains a collection of <a class=\"xref\" href=\"system.data.constraint\" data-linktype=\"relative-path\">Constraint</a> objects that can be used to ensure the integrity of the data. For more information, see <a href=\"../Topic/DataTable%20Constraints.md\" data-linktype=\"relative-path\">DataTable Constraints</a>.  </p>\n<p> There are many DataTable events that can be used to determine when changes are made to a table. These include <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanged\" data-linktype=\"relative-path\">RowChanged</a>, <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a>, <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a>, and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a>. For more information about the events that can be used with a DataTable, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.  </p>\n<p> When an instance of DataTable is created, some of the read/write properties are set to initial values. For a list of these values, see the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable__ctor_\" data-linktype=\"relative-path\">DataTable</a> constructor topic.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and DataTable objects inherit from <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent\" data-linktype=\"relative-path\">MarshalByValueComponent</a>, and support the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface for .NET Framework remoting. These are the only ADO.NET objects that you can use for .NET Framework remoting.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataTable()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> class with no arguments.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataTable ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The constructor sets initial values for all properties of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object. The following table shows the properties and their default values. When an instance of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is created, the following read/write properties are set to initial values.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>CaseSensitive</strong></td>\n<td>Same as the parent <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, if it belongs to one. Otherwise, <code>false</code>.</td>\n</tr>\n<tr>\n<td><strong>DisplayExpression</strong></td>\n<td>Empty string (&quot;&quot;)</td>\n</tr>\n<tr>\n<td><strong>Locale</strong></td>\n<td>Same as the parent <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object&#39;s <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> (returned by the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Locale_\" data-linktype=\"relative-path\">Locale</a> property); if no parent exists, the default is the current system <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>.</td>\n</tr>\n<tr>\n<td><strong>MinimumCapacity</strong></td>\n<td>50 rows.</td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value for any of these properties through a separate call to the property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataTable(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> class with the specified table name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataTable (string tableName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tableName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name to give the table. If <code>tableName</code> is <code>null</code> or an empty string, a default name is given when added to the <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataTable(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> class with the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and the <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data needed to serialize or deserialize an object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source and destination of a given serialized stream.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This implementation of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> constructor is required for <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable__ctor_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataTable(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> class using the specified table name and namespace.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataTable (string tableName, string tableNamespace);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tableName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name to give the table. If <code>tableName</code> is <code>null</code> or an empty string, a default name is given when added to the <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tableNamespace</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The namespace for the XML representation of the data stored in the <code>DataTable</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_fInitInProgress\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">fInitInProgress</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Checks whether initialization is in progress. The initialization occurs at run time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool fInitInProgress;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_CaseSensitive\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CaseSensitive</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether string comparisons within the table are case-sensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CaseSensitive { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the comparison is case-sensitive; otherwise <code>false</code>. The default is set to the parent <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object&#39;s <span class=\"xref\">stem.Data.DataSet.CaseSensitive*</span> property, or <code>false</code> if the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> was created independently of a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CaseSensitive property affects string comparisons in sorting, searching, and filtering.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ChildRelations\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ChildRelations</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of child relations for this <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRelationCollection ChildRelations { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a> that contains the child relations for the table. An empty collection is returned if no <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> defines the relationship between two tables. Typically, two tables are linked through a single field that contains the same data. For example, a table which contains address data may have a single field containing codes that represent countries/regions. A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table. A <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Columns\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Columns</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of columns that belong to this table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataColumnCollection Columns { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> that contains the collection of <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects for the table. An empty collection is returned if no <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> determines the schema of a table by defining the data type of each column.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Constraints\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Constraints</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of constraints maintained by this table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.ConstraintCollection Constraints { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.constraintcollection\" data-linktype=\"relative-path\">ConstraintCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.constraintcollection\" data-linktype=\"relative-path\">ConstraintCollection</a> that contains the collection of <a class=\"xref\" href=\"system.data.constraint\" data-linktype=\"relative-path\">Constraint</a> objects for the table. An empty collection is returned if no <a class=\"xref\" href=\"system.data.constraint\" data-linktype=\"relative-path\">Constraint</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.foreignkeyconstraint\" data-linktype=\"relative-path\">ForeignKeyConstraint</a> restricts the action performed when a value in a column (or columns) is either deleted or updated. Such a constraint is intended to be used with primary key columns. In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.  </p>\n<ul>\n<li><p>The child rows can also be deleted (a cascading action).  </p>\n</li>\n<li><p>The values in the child column (or columns) can be set to null values.  </p>\n</li>\n<li><p>The values in the child column (or columns) can be set to default values.  </p>\n</li>\n<li><p>An exception can be generated.  </p>\n<p>A <a class=\"xref\" href=\"system.data.uniqueconstraint\" data-linktype=\"relative-path\">UniqueConstraint</a> becomes active when attempting to set a value in a primary key to a non-unique value.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_DataSet\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSet</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to which this table belongs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataSet DataSet { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to which this table belongs.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a control is data bound to a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, and the table belongs to a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, you can get to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> through this property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_DefaultView\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultView</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a customized view of the table that may include a filtered view, or a cursor position.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataView DefaultView { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> associated with the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DefaultView property returns a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> you can use to sort, filter, and search a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_DisplayExpression\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DisplayExpression</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the expression that returns a value used to represent this table in the user interface. The <code>DisplayExpression</code> property lets you display the name of this table in a user interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DisplayExpression { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A display string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ExtendedProperties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExtendedProperties</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of customized user information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.PropertyCollection ExtendedProperties { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a> that contains custom user information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ExtendedProperties to add custom information to a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. Add information with the <code>Add</code> method. Retrieve information with the <code>Item</code> method.  </p>\n<p> Extended properties must be of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. Properties that are not of type String are not persisted when the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is written as XML.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_HasErrors\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasErrors</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether there are errors in any of the rows in any of the tables of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to which the table belongs.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasErrors { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if errors exist; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>As users work on a set of data contained in a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, you can mark each change with an error if the change causes some validation failure. You can mark an entire <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> with an error message using the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_RowError_\" data-linktype=\"relative-path\">RowError</a> property. You can also set errors on each column of the row with the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_SetColumnError_\" data-linktype=\"relative-path\">SetColumnError</a> method.  </p>\n<p> Before updating a data source with a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, it&#39;s recommended that you first invoke the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method on the target <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The method results in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that contains only the changes made to the original. Before sending the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to the data source for updating, check the HasErrors property of each table to see if any errors have been attached to the rows or columns in the rows.  </p>\n<p> After reconciling each error, clear the errors with the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ClearErrors_\" data-linktype=\"relative-path\">ClearErrors</a> method of the <code>DataRow</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_IsInitialized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInitialized</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsInitialized { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to indicate the component has completed initialization; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Returns the status of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> while it’s being constructed, for instance by Visual Studio. The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> method sets it to <code>false</code> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_EndInit_\" data-linktype=\"relative-path\">EndInit</a> method sets it to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Locale\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Locale</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the locale information used to compare strings within the table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Globalization.CultureInfo Locale { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> that contains data about the user&#39;s machine locale. The default is the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object&#39;s <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> (returned by the <span class=\"xref\">stem.Data.DataSet.Locale*</span> property) to which the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> belongs; if the table doesn&#39;t belong to a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the default is the current system <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> represents the software preferences of a particular culture or community.  </p>\n<p> When used for string comparisons, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> affects sorting, comparisons, and filtering.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In columns that contain expressions, the <a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a> is used. The <a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a> is ignored.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_MinimumCapacity\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinimumCapacity</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the initial starting size for this table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int MinimumCapacity { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The initial starting size in rows of this table. The default is 50.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The MinimumCapacity allows the system to create an appropriate set of resources before fetching data. In a situation when performance is critical, setting this property can optimize performance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Namespace\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Namespace</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the namespace for the XML representation of the data stored in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Namespace { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The namespace of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ParentRelations\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParentRelations</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of parent relations for this <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRelationCollection ParentRelations { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a> that contains the parent relations for the table. An empty collection is returned if no <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Prefix\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Prefix</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the namespace for the XML representation of the data stored in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Prefix { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The prefix of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_PrimaryKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PrimaryKey</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an array of columns that function as primary keys for the data table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataColumn[] PrimaryKey { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataexception\" data-linktype=\"relative-path\">DataException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The key is a foreign key.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The primary key of a table must be unique to identify the record in the table. It&#39;s also possible to have a table with a primary key made up of two or more columns. This occurs when a single column can&#39;t contain enough unique values. For example, a two column primary key might consist of a &quot;FirstName&quot; and &quot;LastName&quot; column. Because primary keys can be made up of more than one column, the PrimaryKey property consists of an array of <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_RemotingFormat\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemotingFormat</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the serialization format.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.SerializationFormat RemotingFormat { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.serializationformat\" data-linktype=\"relative-path\">SerializationFormat</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.serializationformat\" data-linktype=\"relative-path\">SerializationFormat</a> enumeration specifying either <code>Binary</code> or <code>Xml</code> serialization.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Rows\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Rows</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of rows that belong to this table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRowCollection Rows { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowcollection\" data-linktype=\"relative-path\">DataRowCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarowcollection\" data-linktype=\"relative-path\">DataRowCollection</a> that contains <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects; otherwise a null value if no <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To create a new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>, you must use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a> method to return a new object. Such an object is automatically configured according to the schema defined for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> through its collection of <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects. After creating a new row and setting the values for each column in the row, add the row to the <a class=\"xref\" href=\"system.data.datarowcollection\" data-linktype=\"relative-path\">DataRowCollection</a> using the <code>Add</code> method.  </p>\n<p> Each <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> in the collection represents a row of data in the table. To commit a change to the value of a column in the row, you must invoke the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Site\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Site</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.ComponentModel.ISite Site { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Sites bind a <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> to a <a class=\"xref\" href=\"system.componentmodel.container\" data-linktype=\"relative-path\">Container</a> and enable communication between them, as well as provide a way for the container to manage its components.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_TableName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TableName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string TableName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>null</code> or empty string (&quot;&quot;) is passed in and this table belongs to a collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.duplicatenameexception\" data-linktype=\"relative-path\">DuplicateNameException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TableName is used to return this table from the parent <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object&#39;s <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a> (returned by the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Tables_\" data-linktype=\"relative-path\">Tables</a> property).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_AcceptChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AcceptChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Commits all the changes made to this table since the last time AcceptChanges was called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AcceptChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When AcceptChanges is called, any <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> object still in edit mode successfully ends its edits. The <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> also changes: all <code>Added</code> and <code>Modified</code> rows become <code>Unchanged</code>, and <code>Deleted</code> rows are removed.  </p>\n<p> The AcceptChanges method is generally called on a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> after you attempt to update the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_BeginInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins the initialization of a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that is used on a form or used by another component. The initialization occurs at run time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void BeginInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component. The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_EndInit_\" data-linktype=\"relative-path\">EndInit</a> method ends the initialization. Using the BeginInit and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_EndInit_\" data-linktype=\"relative-path\">EndInit</a> methods prevents the control from being used before it is fully initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_BeginLoadData\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginLoadData()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Turns off notifications, index maintenance, and constraints while loading data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginLoadData ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use BeginLoadData in conjunction with <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_LoadDataRow_\" data-linktype=\"relative-path\">LoadDataRow</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_EndLoadData_\" data-linktype=\"relative-path\">EndLoadData</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Clear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clear()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Clears the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> of all data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Clear ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>All rows in all tables are removed. An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.  </p>\n<p> If the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is bound to an <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a>, calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Clear_\" data-linktype=\"relative-path\">Clear</a> or Clear raises the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>. To avoid this situation, traverse each table, removing each row one at a time. When you use <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a> to create new rows, the rows must be processed before you call Clear.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Clones the structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, including all <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> schemas and constraints.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Data.DataTable Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the same schema as the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If these classes have been derived, the clone will also be of the same derived classes.  </p>\n<p> Clone creates a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the same structure as the original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, but does not copy any data (the new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> will not contain any <code>DataRows</code>). To copy both the structure and data into a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, use <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Copy_\" data-linktype=\"relative-path\">Copy</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Compute_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Compute(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Computes the given expression on the current rows that pass the filter criteria.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Compute (string expression, string filter);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>expression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The expression to compute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filter</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The filter to limit the rows that evaluate in the expression.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>, set to the result of the computation. If the expression evaluates to null, the return value will be <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>expression</code> parameter requires an aggregate function. For example, the following is a legal expression:  </p>\n<p> <code>Count(Quantity)</code>  </p>\n<p> But this expression is not:  </p>\n<p> <code>Sum (Quantity * UnitPrice)</code>  </p>\n<p> If you must perform an operation on two or more columns, you should create a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>, set its <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property to an appropriate expression, and use an aggregate expression on the resulting column. In that case, given a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> with the name &quot;total&quot;, and the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property set to this:  </p>\n<p> <code>&quot;Quantity * UnitPrice&quot;</code>  </p>\n<p> The expression argument for the Compute method would then be this:  </p>\n<p> <code>Sum(total)</code>  </p>\n<p> The second parameter, <code>filter</code>, determines which rows are used in the expression. For example, if the table contains a date column named &quot;colDate&quot;, you could limit the rows with the following expression:  </p>\n<p> <code>colDate &gt; 1/1/99 AND colDate &lt; 17/1/99</code>  </p>\n<p> For rules on creating expressions for both parameters, see the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Copy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Copy()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies both the structure and data for this <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTable Copy ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the same structure (table schemas and constraints) and data as this <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> If these classes have been derived, the copy will also be of the same derived classes.  </p>\n<p> Copy creates a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the same structure and data as the original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. To copy the structure to a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, but not the data, use <span class=\"xref\">stem.Data.DataTable.Clone*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_CreateDataReader\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateDataReader()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a> corresponding to the data within this <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTableReader CreateDataReader ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a> containing one result set, corresponding to the source <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_CreateInstance\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstance()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new instance of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Data.DataTable CreateInstance ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new expression.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_EndInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Ends the initialization of a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that is used on a form or used by another component. The initialization occurs at run time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void EndInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component. The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> method starts the initialization. Using the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> and EndInit methods prevents the control from being used before it is fully initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_EndLoadData\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndLoadData()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Turns on notifications, index maintenance, and constraints after loading data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void EndLoadData ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use EndLoadData in conjunction with <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_LoadDataRow_\" data-linktype=\"relative-path\">LoadDataRow</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_BeginLoadData_\" data-linktype=\"relative-path\">BeginLoadData</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a copy of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains all changes made to it since it was loaded or <span class=\"xref\">stem.Data.DataTable.AcceptChanges*</span> was last called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTable GetChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A copy of the changes from this <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, or <code>null</code> if no changes are found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Creates a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> containing a copy of all rows in the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that have pending changes. Relationship constraints can cause additional unchanged rows to be added to the new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows. The method returns <code>null</code> (<code>Nothing</code> in Visual Basic) if there are no rows in the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with pending changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetChanges_System_Data_DataRowState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChanges(DataRowState)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a copy of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> containing all changes made to it since it was last loaded, or since <span class=\"xref\">stem.Data.DataTable.AcceptChanges*</span> was called, filtered by <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rowStates</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A filtered copy of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that can have actions performed on it, and later be merged back in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using <span class=\"xref\">stem.Data.DataSet.Merge*</span>. If no rows of the desired <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> are found, the method returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is used to produce a second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object that contains only the changes introduced into the original. Use the <code>rowStates</code> argument to specify the type of changes the new object should include.  </p>\n<p> Relationship constraints may cause unchanged parent rows to be included.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetDataTableSchema_System_Xml_Schema_XmlSchemaSet_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDataTableSchema(XmlSchemaSet)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This method returns an <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> instance containing the Web Services Description Language (WSDL) that describes the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> for Web Services.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>schemaSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemacomplextype\" data-linktype=\"relative-path\">XmlSchemaComplexType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetErrors\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetErrors()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that contain errors.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow[] GetErrors ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that have errors.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Returns the list of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that have <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_RowError_\" data-linktype=\"relative-path\">RowError</a> set. For example, errors can occur when calling <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_Update_\" data-linktype=\"relative-path\">Update</a> with <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_ContinueUpdateOnError_\" data-linktype=\"relative-path\">ContinueUpdateOnError</a> set to <strong>true</strong>. Do not invoke <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> on the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> until you resolve all errors and resubmit the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> for updating.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Populates a serialization information object with the data needed to serialize the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object that holds the serialized data associated with the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object that contains the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>info</code> parameter is a null reference (<code>Nothing</code> in Visual Basic).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetRowType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetRowType()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the row type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual Type GetRowType ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the type of the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_GetSchema\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSchema()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.GetSchema*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Xml.Schema.XmlSchema GetSchema ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> that describes the XML representation of the object that is produced by the <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.WriteXml*</span> method and consumed by the <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.ReadXml*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ImportRow_System_Data_DataRow_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ImportRow(DataRow)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> into a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, preserving any property settings, as well as original and current values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ImportRow (System.Data.DataRow row);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>row</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> to be imported.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a> adds a row to the table using the existing table schema, but with default values for the row, and sets the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> to <code>Detached</code>. Calling ImportRow preserves the existing <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> along with other values in the row. If the <code>DataRow</code> that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.  </p>\n<p> The new row will be added to the end of the data table.  </p>\n<p> If the new row violates a Constraint it won’t be added to the data table.  </p>\n<p> You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf. See <a class=\"xref\" href=\"system.data.datarowcollection\" data-linktype=\"relative-path\">DataRowCollection</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Rows_\" data-linktype=\"relative-path\">Rows</a> for more information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Load_System_Data_IDataReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IDataReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with values from a data source using the supplied <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>. If the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> already contains rows, the incoming data from the data source is merged with the existing rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Data.IDataReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> that provides a result set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Loadmethod consumes the first result set from the loaded <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>, and after successful completion, sets the reader&#39;s position to the next result set, if any. When converting data, the <code>Load</code> method uses the same conversion rules as the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method.  </p>\n<p> The Load method must take into account three specific issues when loading the data from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> instance: schema, data, and event operations. When working with the schema, the Load method may encounter conditions as described in the following table. The schema operations take place for all imported result sets, even those containing no data.  </p>\n<table>\n<thead>\n<tr>\n<th>Condition</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has no schema.</td>\n<td>The Load method infers the schema based on the result set from the imported <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>.</td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has a schema, but it is incompatible with the loaded schema.</td>\n<td>The Load method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</td>\n</tr>\n<tr>\n<td>The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</td>\n<td>The Load method adds the extra columns to <code>DataTable</code>&#39;s schema. The method throws an exception if corresponding columns in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and the loaded result set are not value compatible. The method also retrieves constraint information from the result set for all added columns. Except for the case of Primary Key constraint, this constraint information is used only if the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> does not contain any columns at the start of the load operation.</td>\n</tr>\n<tr>\n<td>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <code>DataTable</code>.</td>\n<td>If a missing column has a default value defined or the column&#39;s data type is nullable, the Load method allows the rows to be added, substituting the default or <code>null</code> value for the missing column. If no default value or <code>null</code> can be used, then the <code>Load</code> method throws an exception. If no specific default value has been supplied, the <code>Load</code> method uses the <code>null</code> value as the implied default value.</td>\n</tr>\n</tbody>\n</table>\n<p> Before considering the behavior of the <code>Load</code> method in terms of data operations, consider that each row within a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> maintains both the current value and the original value for each column. These values may be equivalent, or may be different if the data in the row has been changed since filling the <code>DataTable</code>.  For more information, see <a href=\"../Topic/Row%20States%20and%20Row%20Versions.md\" data-linktype=\"relative-path\">Row States and Row Versions</a>.  </p>\n<p> This version of the <code>Load</code> method attempts to preserve the current values in each row, leaving the original value intact. (If you want finer control over the behavior of incoming data, see <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it&#39;s treated as a new row.  </p>\n<p> In terms of event operations, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a> event occurs before each row is changed, and the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanged\" data-linktype=\"relative-path\">RowChanged</a> event occurs after each row has been changed. In each case, the <a class=\"xref\" href=\"system.data.datarowchangeeventargs#System_Data_DataRowChangeEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> instance passed to the event handler contains information about the particular action associated with the event. This action value depends on the state of the row before the load operation. In each case, both events occur, and the action is the same for each. The action may be applied to either the current or original version of each row, or both, depending on the current row state.  </p>\n<p> The following table displays behavior for the <code>Load</code> method. The final row (labeled &quot;(Not present)&quot;) describes the behavior for incoming rows that don&#39;t match any existing row. Each cell in this table describes the current and original value for a field within a row, along with the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> for the value after the <code>Load</code> method has completed. In this case, the method doesn&#39;t allow you to indicate the load option, and uses the default, <code>PreserveChanges</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Existing DataRowState</th>\n<th>Values after <code>Load</code> method, and event action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Added</td>\n<td>Current = &lt;Existing&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Modified</td>\n<td>Current = &lt;Existing&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Deleted</td>\n<td>Current = &lt;Not available&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Deleted&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Unchanged</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n</tr>\n<tr>\n<td>(Not present)</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n</tr>\n</tbody>\n</table>\n<p> Values in a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> can be constrained through use of properties such as <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a>. The <code>Load</code> method handles such columns in a manner that is consistent with the behavior defined by the column&#39;s properties. The read only constraint on a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is applicable only for changes that occur in memory. The <code>Load</code> method&#39;s overwrites the read-only column values, if needed.  </p>\n<p> To determine which version of the primary key field to use for comparing the current row with an incoming row, the <code>Load</code> method uses the original version of the primary key value within a row, if it exists. Otherwise, the <code>Load</code> method uses the current version of the primary key field.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Load_System_Data_IDataReader_System_Data_LoadOption_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IDataReader,LoadOption)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with values from a data source using the supplied <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>. If the <code>DataTable</code> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <code>loadOption</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> that provides one or more result sets.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>loadOption</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration that indicates how rows already in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> are combined with incoming rows that share the same primary key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Load</code> method consumes the first result set from the loaded <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>, and after successful completion, sets the reader&#39;s position to the next result set, if any. When converting data, the <code>Load</code> method uses the same conversion rules as the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method.  </p>\n<p> The <code>Load</code> method must take into account three specific issues when loading the data from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> instance: schema, data, and event operations. When working with the schema, the <code>Load</code> method may encounter conditions as described in the following table. The schema operations take place for all imported result sets, even those containing no data.  </p>\n<table>\n<thead>\n<tr>\n<th>Condition</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has no schema.</td>\n<td>The <code>Load</code> method infers the schema based on the result set from the imported <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>.</td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has a schema, but it is incompatible with the loaded schema.</td>\n<td>The <code>Load</code> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</td>\n</tr>\n<tr>\n<td>The schemas are compatible, but the loaded result set schema contains columns that don&#39;t exist in the <code>DataTable</code>.</td>\n<td>The <code>Load</code> method adds the extra columns to <code>DataTable</code>’s schema. The method throws an exception if corresponding columns in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and the loaded result set are not value compatible. The method also retrieves constraint information from the result set for all added columns. Except for the case of Primary Key constraint, this constraint information is used only if the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> does not contain any columns at the start of the load operation.</td>\n</tr>\n<tr>\n<td>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <code>DataTable</code>.</td>\n<td>If a missing column has a default value defined or the column&#39;s data type is nullable, the <code>Load</code> method allows the rows to be added, substituting the default or null value for the missing column. If no default value or null can be used, then the <code>Load</code> method throws an exception. If no specific default value has been supplied, the <code>Load</code> method uses the null value as the implied default value.</td>\n</tr>\n</tbody>\n</table>\n<p> Before considering the behavior of the <code>Load</code> method in terms of data operations, consider that each row within a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> maintains both the current value and the original value for each column. These values may be equivalent, or may be different if the data in the row has been changed since filling the <code>DataTable</code>. See <a href=\"../Topic/Row%20States%20and%20Row%20Versions.md\" data-linktype=\"relative-path\">Row States and Row Versions</a> for more information.  </p>\n<p> In this method call, the specified <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> parameter influences the processing of the incoming data. How should the Load method handle loading rows that have the same primary key as existing rows? Should it modify current values, original values, or both? These issues, and more, are controlled by the <code>loadOption</code> parameter.  </p>\n<p> If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it&#39;s treated as a new row.  </p>\n<p> In terms of event operations, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a> event occurs before each row is changed, and the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanged\" data-linktype=\"relative-path\">RowChanged</a> event occurs after each row has been changed. In each case, the <a class=\"xref\" href=\"system.data.datarowchangeeventargs#System_Data_DataRowChangeEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> instance passed to the event handler contains information about the particular action associated with the event. This action value varies, depending on the state of the row before the load operation. In each case, both events occur, and the action is the same for each. The action may be applied to either the current or original version of each row, or both, depending on the current row state.  </p>\n<p> The following table displays behavior for the Load method when called with each of the <code>LoadOption</code> values, and also shows how the values interact with the row state for the row being loaded. The final row (labeled &quot;(Not present)&quot;) describes the behavior for incoming rows that don&#39;t match any existing row. Each cell in this table describes the current and original value for a field within a row, along with the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> for the value after the <code>Load</code> method has completed.  </p>\n<table>\n<thead>\n<tr>\n<th>Existing DataRowState</th>\n<th>Upsert</th>\n<th>OverwriteChanges</th>\n<th>PreserveChanges (Default behavior)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Added</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = -&lt;Not available&gt;<br><br> State = &lt;Added&gt;<br><br> RowAction = Change</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Existing&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Modified</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Existing&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction = Change</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Existing&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction =ChangeOriginal</td>\n</tr>\n<tr>\n<td>eleted</td>\n<td>(Load does not affect deleted rows)<br><br> Current = ---<br><br> Original = &lt;Existing&gt;<br><br> State = &lt;Deleted&gt;<br><br> (New row is added with the following characteristics)<br><br> Current = &lt;Incoming&gt;<br><br> Original = &lt;Not available&gt;<br><br> State = &lt;Added&gt;<br><br> RowAction = Add</td>\n<td>Undo delete and<br><br> Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Not available&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Deleted&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Unchanged</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Existing&gt;<br><br> If new value is the same as the existing value then<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = Nothing<br><br> Else<br><br> State = &lt;Modified&gt;<br><br> RowAction = Change</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n</tr>\n<tr>\n<td>Not present)</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Not available&gt;<br><br> State = &lt;Added&gt;<br><br> RowAction = Add</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n</tr>\n</tbody>\n</table>\n<p> Values in a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> can be constrained through use of properties such as <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a>. The <code>Load</code> method handles such columns in a manner that is consistent with the behavior defined by the column&#39;s properties. The read only constraint on a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is applicable only for changes that occur in memory. The <code>Load</code> method&#39;s overwrites the read-only column values, if needed.  </p>\n<p> If you specify the OverwriteChanges or PreserveChanges options when calling the <code>Load</code> method, then the assumption is made that the incoming data is coming from the <code>DataTable</code>&#39;s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source. If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user. In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <code>DataTable</code>, and then perhaps propagate the data back to the primary data source. The <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> parameter is used for determining the specific version of the row that is to be used for primary key comparison. The table below provides the details.  </p>\n<table>\n<thead>\n<tr>\n<th>Load option</th>\n<th>DataRow version used for primary key comparison</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>OverwriteChanges</code></td>\n<td>Original version, if it exists, otherwise Current version</td>\n</tr>\n<tr>\n<td><code>PreserveChanges</code></td>\n<td>Original version, if it exists, otherwise Current version</td>\n</tr>\n<tr>\n<td><code>Upsert</code></td>\n<td>Current version, if it exists, otherwise Original version</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Load_System_Data_IDataReader_System_Data_LoadOption_System_Data_FillErrorEventHandler_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IDataReader,LoadOption,FillErrorEventHandler)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with values from a data source using the supplied <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> using an error-handling delegate.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> that provides a result set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>loadOption</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration that indicates how rows already in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> are combined with incoming rows that share the same primary key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>errorHandler</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.fillerroreventhandler\" data-linktype=\"relative-path\">FillErrorEventHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.fillerroreventhandler\" data-linktype=\"relative-path\">FillErrorEventHandler</a> delegate to call when an error occurs while loading data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Load</code> method consumes the first result set from the loaded <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>, and after successful completion, sets the reader&#39;s position to the next result set, if any. When converting data, the <code>Load</code> method uses the same conversion rules as the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method.  </p>\n<p> The <code>Load</code> method must take into account three specific issues when loading the data from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> instance: schema, data, and event operations. When working with the schema, the <code>Load</code> method may encounter conditions as described in the following table. The schema operations take place for all imported result sets, even those containing no data.  </p>\n<table>\n<thead>\n<tr>\n<th>Condition</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has no schema.</td>\n<td>The <code>Load</code> method infers the schema based on the result set from the imported <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>.</td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> has a schema, but it is incompatible with the loaded schema.</td>\n<td>The <code>Load</code> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</td>\n</tr>\n<tr>\n<td>The schemas are compatible, but the loaded result set schema contains columns that don&#39;t exist in the <code>DataTable</code>.</td>\n<td>The <code>Load</code> method adds the extra column(s) to <code>DataTable</code>’s schema. The method throws an exception if corresponding columns in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and the loaded result set are not value compatible. The method also retrieves constraint information from the result set for all added columns. Except for the case of Primary Key constraint, this constraint information is used only if the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> does not contain any columns at the start of the load operation.</td>\n</tr>\n<tr>\n<td>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <code>DataTable</code>.</td>\n<td>If a missing column has a default value defined or the column&#39;s data type is nullable, the <code>Load</code> method allows the rows to be added, substituting the default or null value for the missing column. If no default value or null can be used, then the <code>Load</code> method throws an exception. If no specific default value has been supplied, the <code>Load</code> method uses the null value as the implied default value.</td>\n</tr>\n</tbody>\n</table>\n<p> Before considering the behavior of the <code>Load</code> method in terms of data operations, consider that each row within a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> maintains both the current value and the original value for each column. These values may be equivalent, or may be different if the data in the row has been changed since filling the <code>DataTable</code>. See <a href=\"../Topic/Row%20States%20and%20Row%20Versions.md\" data-linktype=\"relative-path\">Row States and Row Versions</a> for more information.  </p>\n<p> In this method call, the specified <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> parameter influences the processing of the incoming data. How should the Load method handle loading rows that have the same primary key as existing rows? Should it modify current values, original values, or both? These issues, and more, are controlled by the <code>loadOption</code> parameter.  </p>\n<p> If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it&#39;s treated as a new row.  </p>\n<p> In terms of event operations, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a> event occurs before each row is changed, and the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanged\" data-linktype=\"relative-path\">RowChanged</a> event occurs after each row has been changed. In each case, the <a class=\"xref\" href=\"system.data.datarowchangeeventargs#System_Data_DataRowChangeEventArgs_Action_\" data-linktype=\"relative-path\">Action</a> property of the <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> instance passed to the event handler contains information about the particular action associated with the event. This action value varies, depending on the state of the row before the load operation. In each case, both events occur, and the action is the same for each. The action may be applied to either the current or original version of each row, or both, depending on the current row state.  </p>\n<p> The following table displays behavior for the Load method when called with each of the <code>LoadOption</code> values, and also shows how the values interact with the row state for the row being loaded. The final row (labeled &quot;(Not present)&quot;) describes the behavior for incoming rows that don&#39;t match any existing row. Each cell in this table describes the current and original value for a field within a row, along with the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> for the value after the <code>Load</code> method has completed.  </p>\n<table>\n<thead>\n<tr>\n<th>Existing DataRowState</th>\n<th>Upsert</th>\n<th>OverwriteChanges</th>\n<th>PreserveChanges (Default behavior)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Added</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = -&lt;Not available&gt;<br><br> State = &lt;Added&gt;<br><br> RowAction = Change</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Existing&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Modified</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Existing&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction = Change</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Existing&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Modified&gt;<br><br> RowAction =ChangeOriginal</td>\n</tr>\n<tr>\n<td>eleted</td>\n<td>(Load does not affect deleted rows)<br><br> Current = ---<br><br> Original = &lt;Existing&gt;<br><br> State = &lt;Deleted&gt;<br><br> (New row is added with the following characteristics)<br><br> Current = &lt;Incoming&gt;<br><br> Original = &lt;Not available&gt;<br><br> State = &lt;Added&gt;<br><br> RowAction = Add</td>\n<td>Undo delete and<br><br> Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Not available&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Deleted&gt;<br><br> RowAction = ChangeOriginal</td>\n</tr>\n<tr>\n<td>Unchanged</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Existing&gt;<br><br> If new value is the same as the existing value then<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = Nothing<br><br> Else<br><br> State = &lt;Modified&gt;<br><br> RowAction = Change</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n</tr>\n<tr>\n<td>Not present)</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Not available&gt;<br><br> State = &lt;Added&gt;<br><br> RowAction = Add</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n<td>Current = &lt;Incoming&gt;<br><br> Original = &lt;Incoming&gt;<br><br> State = &lt;Unchanged&gt;<br><br> RowAction = ChangeCurrentAndOriginal</td>\n</tr>\n</tbody>\n</table>\n<p> Values in a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> can be constrained through use of properties such as <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a>. The <code>Load</code> method handles such columns in a manner that is consistent with the behavior defined by the column&#39;s properties. The read only constraint on a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is applicable only for changes that occur in memory. The <code>Load</code> method&#39;s overwrites the read-only column values, if needed.  </p>\n<p> If you specify the OverwriteChanges or PreserveChanges options when calling the <code>Load</code> method, then the assumption is made that the incoming data is coming from the <code>DataTable</code>&#39;s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source. If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user. In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <code>DataTable</code>, and then perhaps propagate the data back to the primary data source. The <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> parameter is used for determining the specific version of the row that is to be used for primary key comparison. The table below provides the details.  </p>\n<table>\n<thead>\n<tr>\n<th>Load option</th>\n<th>DataRow version used for primary key comparison</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>OverwriteChanges</code></td>\n<td>Original version, if it exists, otherwise Current version</td>\n</tr>\n<tr>\n<td><code>PreserveChanges</code></td>\n<td>Original version, if it exists, otherwise Current version</td>\n</tr>\n<tr>\n<td><code>Upsert</code></td>\n<td>Current version, if it exists, otherwise Original version</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>errorHandler</code> parameter is a <a class=\"xref\" href=\"system.data.fillerroreventhandler\" data-linktype=\"relative-path\">FillErrorEventHandler</a> delegate that refers to a procedure that is called when an error occurs while loading data. The <a class=\"xref\" href=\"system.data.fillerroreventargs\" data-linktype=\"relative-path\">FillErrorEventArgs</a> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> being filled. Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like. The <a class=\"xref\" href=\"system.data.fillerroreventargs\" data-linktype=\"relative-path\">FillErrorEventArgs</a> parameter supplies a <a class=\"xref\" href=\"system.data.fillerroreventargs#System_Data_FillErrorEventArgs_Continue_\" data-linktype=\"relative-path\">Continue</a> property: set this property to <code>true</code> to indicate that you have handled the error and wish to continue processing. Set the property to <code>false</code> to indicate that you wish to halt processing. Be aware that setting the property to <code>false</code> causes the code that triggered the problem to throw an exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_LoadDataRow_System_Object___System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadDataRow(Object[],Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Finds and updates a specific row. If no matching row is found, a new row is created using the given values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>values</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of values used to create the new row.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fAcceptChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to accept changes; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The array is larger than the number of columns in the table.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>A value doesn&#39;t match its respective column type.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Adding the row invalidates a constraint.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.nonullallowedexception\" data-linktype=\"relative-path\">NoNullAllowedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Attempting to put a null in a column where <span class=\"xref\">stem.Data.DataColumn.AllowDBNull*</span> is false.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LoadDataRow method takes an array of values and finds the matching value(s) in the primary key column(s).  </p>\n<p> If a column has a default value, pass a null value in the array to set the default value for that column. Similarly, if a column has its <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a> property set to true, pass a null value in the array to set the automatically generated value for the row.  </p>\n<p> If the <code>fAcceptChanges</code> parameter is <code>true</code> or not specified, the new data is added and then <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> is called to accept all changes in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>; if the argument is <code>false</code>, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.  </p>\n<p> Exceptions can also occur during either a <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ColumnChanging\" data-linktype=\"relative-path\">ColumnChanging</a> or <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a> event. If an exception occurs, the row is not added to the table.  </p>\n<p> Use LoadDataRow in conjunction with <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_BeginLoadData_\" data-linktype=\"relative-path\">BeginLoadData</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_EndLoadData_\" data-linktype=\"relative-path\">EndLoadData</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_LoadDataRow_System_Object___System_Data_LoadOption_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadDataRow(Object[],LoadOption)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Finds and updates a specific row. If no matching row is found, a new row is created using the given values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>values</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of values used to create the new row.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>loadOption</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Used to determine how the array values are applied to the corresponding values in an existing row.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_LoadDataRow_\" data-linktype=\"relative-path\">LoadDataRow</a> method takes an array of values and finds the matching value(s) in the primary key column(s).  </p>\n<p> If a column has a default value, pass a null value in the array to set the default value for that column. Similarly, if a column has its <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a> property set to true, pass a null value in the array to set the automatically generated value for the row.  </p>\n<p> The value of the <code>loadOption</code> parameter is used to determine how the values in the array are applied to an existing row. For example, if <code>loadOption</code> is set to <code>OverwriteChanges</code>, the <code>Original</code> and <code>Current</code> values of each column are replaced with the values in the incoming row and the <code>RowState</code> property is set to <code>Unchanged</code>.  </p>\n<p> Exceptions can also occur during either a <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ColumnChanging\" data-linktype=\"relative-path\">ColumnChanging</a> or <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a> event. If an exception occurs, the row is not added to the table.  </p>\n<p> Use <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_LoadDataRow_\" data-linktype=\"relative-path\">LoadDataRow</a> in conjunction with <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_BeginLoadData_\" data-linktype=\"relative-path\">BeginLoadData</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_EndLoadData_\" data-linktype=\"relative-path\">EndLoadData</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Merge_System_Data_DataTable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataTable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merge the specified <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataTable table);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>table</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to be merged with the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Merge method is used to merge two <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the latest data from the data source.  </p>\n<p> The merge operation takes into account only the original table, and the table to be merged. Child tables are not affected or included. If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.  </p>\n<p> The <code>Merge</code> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation. Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the <code>preserveChanges</code> parameter.  </p>\n<p> In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component. In this scenario, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object contains only the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. This subset is generally smaller and thus more efficiently passed back to a middle tier component. The middle tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the Merge method.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code>, is matched to target rows with the same primary key values. Source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Merge_System_Data_DataTable_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataTable,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merge the specified <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the current <code>DataTable</code>, indicating whether to preserve changes in the current <code>DataTable</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataTable table, bool preserveChanges);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>table</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>DataTable</code> to be merged with the current <code>DataTable</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>preserveChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code>, to preserve changes in the current <code>DataTable</code>; otherwise <code>false</code>.``</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Merge method is used to merge two <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the latest data from the data source.  </p>\n<p> The merge operation takes into account only the original table, and the table to be merged. Child tables are not affected or included. If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.  </p>\n<p> The <code>Merge</code> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <code>preserveChanges</code> parameter. If the <code>preserveChanges</code> parameter is set to <code>true</code>, incoming values do not overwrite existing values in the Current row version of the existing row. If the <code>preserveChanges</code> parameter is set to <code>false</code>, incoming values do overwrite the existing values in the Current row version of the existing row. For more information about row versions, see <a href=\"../Topic/Row%20States%20and%20Row%20Versions.md\" data-linktype=\"relative-path\">Row States and Row Versions</a>.  </p>\n<p> In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component. In this scenario, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component. The middle tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Merge_System_Data_DataTable_System_Boolean_System_Data_MissingSchemaAction_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataTable,Boolean,MissingSchemaAction)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merge the specified <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the current <code>DataTable</code>, indicating whether to preserve changes and how to handle missing schema in the current <code>DataTable</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>table</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to be merged with the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>preserveChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code>, to preserve changes in the current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>missingSchemaAction</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>Merge</code> method is used to merge two <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the latest data from the data source.  </p>\n<p> The merge operation takes into account only the original table, and the table to be merged. Child tables are not affected or included. If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.  </p>\n<p> The <code>Merge</code> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <code>preserveChanges</code> parameter. If the <code>preserveChanges</code> parameter is set to <code>true</code>, incoming values do not overwrite existing values in the Current row version of the existing row. If the <code>preserveChanges</code> parameter is set to <code>false</code>, incoming values do overwrite the existing values in the Current row version of the existing row. For more information about row versions, see <a href=\"../Topic/Row%20States%20and%20Row%20Versions.md\" data-linktype=\"relative-path\">Row States and Row Versions</a>.  </p>\n<p> In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component. In this scenario, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component. The middle tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects are compared, because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_NewRow\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NewRow()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> with the same schema as the table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow NewRow ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> with the same schema as the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You must use the NewRow method to create new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects with the same schema as the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. After creating a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>, you can add it to the <a class=\"xref\" href=\"system.data.datarowcollection\" data-linktype=\"relative-path\">DataRowCollection</a>, through the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object&#39;s <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Rows_\" data-linktype=\"relative-path\">Rows</a> property. When you use NewRow to create new rows, the rows must be added to or deleted from the data table before you call <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_NewRowArray_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NewRowArray(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Data.DataRow[] NewRowArray (int size);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>size</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that describes the size of the array.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new array.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_NewRowFromBuilder_System_Data_DataRowBuilder_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NewRowFromBuilder(DataRowBuilder)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new row from an existing row.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>builder</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowbuilder\" data-linktype=\"relative-path\">DataRowBuilder</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarowbuilder\" data-linktype=\"relative-path\">DataRowBuilder</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> derived class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnColumnChanged_System_Data_DataColumnChangeEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnColumnChanged(DataColumnChangeEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ColumnChanged\" data-linktype=\"relative-path\">ColumnChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datacolumnchangeeventargs\" data-linktype=\"relative-path\">DataColumnChangeEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datacolumnchangeeventargs\" data-linktype=\"relative-path\">DataColumnChangeEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnColumnChanging_System_Data_DataColumnChangeEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnColumnChanging(DataColumnChangeEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ColumnChanging\" data-linktype=\"relative-path\">ColumnChanging</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datacolumnchangeeventargs\" data-linktype=\"relative-path\">DataColumnChangeEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datacolumnchangeeventargs\" data-linktype=\"relative-path\">DataColumnChangeEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnPropertyChanging_System_ComponentModel_PropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPropertyChanging(PropertyChangedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged#System_ComponentModel_INotifyPropertyChanged_PropertyChanged\" data-linktype=\"relative-path\">PropertyChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pcevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnRemoveColumn_System_Data_DataColumn_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRemoveColumn(DataColumn)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is being removed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRemoveColumn (System.Data.DataColumn column);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>column</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> being removed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnRowChanged_System_Data_DataRowChangeEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRowChanged(DataRowChangeEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanged\" data-linktype=\"relative-path\">RowChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnRowChanging_System_Data_DataRowChangeEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRowChanging(DataRowChangeEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowChanging\" data-linktype=\"relative-path\">RowChanging</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnRowDeleted_System_Data_DataRowChangeEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRowDeleted(DataRowChangeEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnRowDeleting_System_Data_DataRowChangeEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRowDeleting(DataRowChangeEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarowchangeeventargs\" data-linktype=\"relative-path\">DataRowChangeEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnTableCleared_System_Data_DataTableClearEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnTableCleared(DataTableClearEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableCleared\" data-linktype=\"relative-path\">TableCleared</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablecleareventargs\" data-linktype=\"relative-path\">DataTableClearEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datatablecleareventargs\" data-linktype=\"relative-path\">DataTableClearEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableCleared\" data-linktype=\"relative-path\">TableCleared</a> event, which is fired immediately after all rows have been successfully cleared but before the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a> method returns control back to the caller.  </p>\n<p> Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnTableClearing_System_Data_DataTableClearEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnTableClearing(DataTableClearEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableClearing\" data-linktype=\"relative-path\">TableClearing</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablecleareventargs\" data-linktype=\"relative-path\">DataTableClearEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datatablecleareventargs\" data-linktype=\"relative-path\">DataTableClearEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableClearing\" data-linktype=\"relative-path\">TableClearing</a> event, which is fired before processing of the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a> operation begins.  </p>\n<p> Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_OnTableNewRow_System_Data_DataTableNewRowEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnTableNewRow(DataTableNewRowEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableNewRow\" data-linktype=\"relative-path\">TableNewRow</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablenewroweventargs\" data-linktype=\"relative-path\">DataTableNewRowEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datatablenewroweventargs\" data-linktype=\"relative-path\">DataTableNewRowEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableNewRow\" data-linktype=\"relative-path\">TableNewRow</a> event, which fires after a new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> has been created using <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a>.  </p>\n<p> Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXml_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that derives from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and its descendents are loaded with the data from the supplied <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. The behavior of this method is identical to that of the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method, except that in this case, data is loaded only for the current table and its descendants.  </p>\n<p> The ReadXml method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataTable</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXml_System_IO_TextReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(TextReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> that will be used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and its descendents are loaded with the data from the supplied <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>. The behavior of this method is identical to that of the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method, except that in this case, data is loaded only for the current table and its descendants.  </p>\n<p> The ReadXml method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataTable</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXml_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> from the specified file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file from which to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and its descendents are loaded with the data from the file named in the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The behavior of this method is identical to that of the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method, except that in this case, data is loaded only for the current table and its descendants.  </p>\n<p> The ReadXml method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataTable</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<pre><code>using System.Data;  \npublic class A {  \n   static void Main(string[] args) {  \n      DataTable tabl = new DataTable(&quot;mytable&quot;);  \n      tabl.Columns.Add(new DataColumn(&quot;id&quot;, typeof(int)));  \n      for (int i = 0; i &lt; 10; i++) {  \n         DataRow row = tabl.NewRow();  \n         row[&quot;id&quot;] = i;  \n         tabl.Rows.Add(row);  \n      }  \n      tabl.WriteXml(&quot;f.xml&quot;, XmlWriteMode.WriteSchema);  \n      DataTable newt = new DataTable();  \n      newt.ReadXml(&quot;f.xml&quot;);  \n   }  \n}  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXml_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML Schema and Data into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that will be used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and its descendents are loaded with the data from the file named in the supplied <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>. The behavior of this method is identical to that of the ReadXml method, except that in this case, data is loaded only for the current table and its descendants.  </p>\n<p> The ReadXml method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataTable</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXmlSchema_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads an XML schema into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream used to read the schema.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ReadXmlSchema method to create the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. The schema includes table, relation, and constraint definitions.  </p>\n<p> To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is interpreted according to the XSD standard.  </p>\n<p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n<p> The <code>ReadXmlSchema</code> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> To create a nested relation using XML schema, use implicit nested elements. You can also configure the nested relation to use explicit column names. Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXmlSchema_System_IO_TextReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(TextReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads an XML schema into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (System.IO.TextReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> used to read the schema information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ReadXmlSchema method to create the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. The schema includes table, relation, and constraint definitions.  </p>\n<p> To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is interpreted according to the XSD standard.  </p>\n<p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n<p> The <code>ReadXmlSchema</code> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> To create a nested relation using XML schema, use implicit nested elements. You can also reconfigure the nested relation to use explicit column names. Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXmlSchema_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads an XML schema into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> from the specified file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file from which to read the schema information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ReadXmlSchema method to create the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. The schema includes table, relation, and constraint definitions.  </p>\n<p> To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is interpreted according to the XSD standard.  </p>\n<p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n<p> The <code>ReadXmlSchema</code> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <code>DataTable</code>.  </p>\n<p> To create a nested relation using XML schema, use implicit nested elements. You can also reconfigure the nested relation to use explicit column names. Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXmlSchema_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads an XML schema into the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> used to read the schema information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ReadXmlSchema method to create the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. The schema includes table, relation, and constraint definitions.  </p>\n<p> To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is interpreted according to the XSD standard.  </p>\n<p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n<p> The <code>ReadXmlSchema</code> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The way to create a nested relation using XML schema is to have implicit nested elements. Additionally, the nested relation could be re-wired, to use explicit column names. It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ReadXmlSerializable_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSerializable(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads from an XML stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_RejectChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RejectChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Rolls back all changes that have been made to the table since it was loaded, or the last time <span class=\"xref\">stem.Data.DataTable.AcceptChanges*</span> was called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RejectChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When RejectChanges is called, any <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that are still in edit-mode cancel their edits. New rows are removed. Rows with the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> set to <code>Modified</code> or <code>Deleted</code> return back to their original state.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Reset\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Reset()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Resets the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void Reset ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Select\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of all <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow[] Select ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To ensure the proper sort order, specify sort criteria with <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Select_\" data-linktype=\"relative-path\">Select</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Select_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of all <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that match the filter criteria.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow[] Select (string filterExpression);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filterExpression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The criteria to use to filter the rows. For examples on how to filter rows, see <a href=\"http://www.csharp-examples.net/dataview-rowfilter/\" data-linktype=\"external\">DataView RowFilter Syntax [C#]</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To create the <code>filterExpression</code> argument, use the same rules that apply to the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class&#39;s <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property value for creating filters.  </p>\n<p> To ensure the proper sort order, specify sort criteria with <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Select_\" data-linktype=\"relative-path\">Select</a> or <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Select_\" data-linktype=\"relative-path\">Select</a>.  </p>\n<p> If the column on the filter contains a null value, it will not be part of the result.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Select_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of all <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that match the filter criteria, in the specified sort order.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow[] Select (string filterExpression, string sort);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filterExpression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The criteria to use to filter the rows. For examples on how to filter rows, see <a href=\"http://www.csharp-examples.net/dataview-rowfilter/\" data-linktype=\"external\">DataView RowFilter Syntax [C#]</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sort</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string specifying the column and sort direction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects matching the filter expression.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To form the <code>filterExpression</code> argument, use the same rules for creating the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class&#39;s <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property value. The <code>Sort</code> argument also uses the same rules for creating class&#39;s <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> strings.  </p>\n<p> If the column on the filter contains a null value, it will not be part of the result.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Select_System_String_System_String_System_Data_DataViewRowState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select(String,String,DataViewRowState)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an array of all <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that match the filter in the order of the sort that match the specified state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filterExpression</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The criteria to use to filter the rows. For examples on how to filter rows, see <a href=\"http://www.csharp-examples.net/dataview-rowfilter/\" data-linktype=\"external\">DataView RowFilter Syntax [C#]</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sort</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string specifying the column and sort direction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>recordStates</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataviewrowstate\" data-linktype=\"relative-path\">DataViewRowState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.dataviewrowstate\" data-linktype=\"relative-path\">DataViewRowState</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To form the <code>filterExpression</code> argument, use the same rules for creating the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class&#39;s <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property value. The <code>Sort</code> argument also uses the same rules for creating class&#39;s <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> strings.  </p>\n<p> If the column on the filter contains a null value, it will not be part of the result.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <span class=\"xref\">stem.Data.DataTable.TableName*</span> and <span class=\"xref\">stem.Data.DataTable.DisplayExpression*</span>, if there is one as a concatenated string.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string consisting of the <span class=\"xref\">stem.Data.DataTable.TableName*</span> and the <span class=\"xref\">stem.Data.DataTable.DisplayExpression*</span> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_TableName_\" data-linktype=\"relative-path\">TableName</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_DisplayExpression_\" data-linktype=\"relative-path\">DisplayExpression</a> for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which the data will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_TextWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(TextWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.TextWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> with which to write the content.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to which to write the XML data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> with which to write the contents.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_Stream_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(Stream,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.Stream stream, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which the data will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and all of its descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_Stream_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(Stream,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to the specified file using the specified <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which the data will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_TextWriter_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(TextWriter,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> with which to write the content.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and all its descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_TextWriter_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(TextWriter,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> used to write the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_String_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(String,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified file. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (string fileName, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to which to write the XML data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and all of its descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_String_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(String,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified file and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (string fileName, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to which the data will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_Xml_XmlWriter_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(XmlWriter,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current contents of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as XML using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> with which to write the contents.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and its entire descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_Xml_XmlWriter_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(XmlWriter,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_Stream_System_Data_XmlWriteMode_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(Stream,XmlWriteMode,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to the specified file using the specified <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which the data will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <code>DataTable</code> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <code>XmlWriteMode</code> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally, the <code>WriteXml</code> method saves data only for the current table. The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <code>DataTable</code> into an XML document, whereas the <code>WriteXmlSchema</code> method writes only the schema. To write both data and schema, use one of the overloads that includes the <code>XmlWriteMode</code> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and all of its descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_IO_TextWriter_System_Data_XmlWriteMode_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(TextWriter,XmlWriteMode,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> used to write the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally, the <code>WriteXml</code> method saves data only for the current table. The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and all of its descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_String_System_Data_XmlWriteMode_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(String,XmlWriteMode,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified file and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to which the data will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally, the <code>WriteXml</code> method saves data only for the current table. If you want to save the data for the current table and all of schema, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and all descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXml_System_Xml_XmlWriter_System_Data_XmlWriteMode_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(XmlWriter,XmlWriteMode,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>. To save the data for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the contents of the current table and all its descendants. If <code>false</code> (the default value), write the data for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that include the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataTable</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<p> Normally the <code>WriteXml</code> method writes the data only for the current table. To write the data for the current table and its entire descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema to the specified stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which the XML schema will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_IO_TextWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(TextWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.TextWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> with which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema to the specified file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to use.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to use.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_IO_Stream_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(Stream,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which the XML schema will be written.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the schema of the current table and all its descendants. If <code>false</code> (the default value), write the schema for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Normally the <code>WriteXmlSchema</code> method writes the schema only for the current table. To write the schema for the current table and its entire descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_IO_TextWriter_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(TextWriter,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. To save the schema for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> with which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the schema of the current table and all its descendants. If <code>false</code> (the default value), write the schema for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Normally the <code>WriteXmlSchema</code> method writes the schema only for the current table. To write the schema for the current table and its entire descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_String_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(String,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema to the specified file. To save the schema for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (string fileName, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to use.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the schema of the current table and all its descendants. If <code>false</code> (the default value), write the schema for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Normally the <code>WriteXmlSchema</code> method writes the schema only for the current table. To write the schema for the current table and its entire descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_WriteXmlSchema_System_Xml_XmlWriter_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(XmlWriter,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data structure of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as an XML schema using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. To save the schema for the table and all its descendants, set the <code>writeHierarchy</code> parameter to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writeHierarchy</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>true</code>, write the schema of the current table and all its descendants. If <code>false</code> (the default value), write the schema for the current table only.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to an XML document. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Normally the <code>WriteXmlSchema</code> method writes the schema only for the current table. To write the schema for the current table and its entire descendant, related tables, call the method with the <code>writeHierarchy</code> parameter set to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ColumnChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ColumnChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after a value has been changed for the specified <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> in a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataColumnChangeEventHandler ColumnChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_ColumnChanging\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ColumnChanging</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a value is being changed for the specified <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> in a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataColumnChangeEventHandler ColumnChanging;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_Initialized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Initialized</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Initialized;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_IsInitialized_\" data-linktype=\"relative-path\">IsInitialized</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_RowChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RowChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> has been changed successfully.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataRowChangeEventHandler RowChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_RowChanging\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RowChanging</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> is changing.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataRowChangeEventHandler RowChanging;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_RowDeleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RowDeleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after a row in the table has been deleted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataRowChangeEventHandler RowDeleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_RowDeleting\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RowDeleting</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs before a row in the table is about to be deleted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataRowChangeEventHandler RowDeleting;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a href=\"../Topic/Handling%20DataTable%20Events.md\" data-linktype=\"relative-path\">Handling DataTable Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_TableCleared\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TableCleared</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is cleared.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataTableClearEventHandler TableCleared;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TableCleared event is fired immediately after all rows have been successfully cleared but before the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a> method returns control back to the caller. The TableCleared event is not fired if there are any exceptions during the clear operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_TableClearing\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TableClearing</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is cleared.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataTableClearEventHandler TableClearing;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TableClearing event is fired before processing of the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a> operation begins. This event is always fired when the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a> method is invoked, even if the table contains zero rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_TableNewRow\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TableNewRow</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> is inserted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.DataTableNewRowEventHandler TableNewRow;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Fires after a new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> has been created using <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a>. This event is fired before the invoked <code>NewRow</code> method returns. The new <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> instance is detached; it has not been added to the collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_System_ComponentModel_IListSource_ContainsListCollection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IListSource.ContainsListCollection</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.IListSource.ContainsListCollection*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool System.ComponentModel.IListSource.ContainsListCollection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the collection is a collection of <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> objects; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_System_ComponentModel_IListSource_GetList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IListSource.GetList()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.IListSource.GetList*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Collections.IList IListSource.GetList ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> that can be bound to a data source from the object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_System_Xml_Serialization_IXmlSerializable_GetSchema\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IXmlSerializable.GetSchema()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.GetSchema*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> that describes the XML representation of the object that is produced by the <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.WriteXml*</span> method and consumed by the <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.ReadXml*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_System_Xml_Serialization_IXmlSerializable_ReadXml_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IXmlSerializable.ReadXml(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.ReadXml*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XmlReader.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataTable_System_Xml_Serialization_IXmlSerializable_WriteXml_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IXmlSerializable.WriteXml(XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.WriteXml*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XmlWriter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.DataTable.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.DataTable.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.AcceptChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.BeginInit\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.BeginLoadData\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.CaseSensitive\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ChildRelations\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Clear\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Clone\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ColumnChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_ColumnChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_ColumnChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ColumnChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_ColumnChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_ColumnChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Columns\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Compute\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Constraints\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Copy\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.CreateDataReader\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.CreateInstance\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.DataSet\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.DefaultView\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.DisplayExpression\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.EndInit\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.EndLoadData\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ExtendedProperties\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.fInitInProgress\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.GetChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.GetDataTableSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.GetErrors\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.GetRowType\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.GetSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.HasErrors\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ImportRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Initialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_Initialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_Initialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.IsInitialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Load\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.LoadDataRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Locale\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Merge\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.MinimumCapacity\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.NewRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.NewRowArray\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.NewRowFromBuilder\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnColumnChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnColumnChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnPropertyChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnRemoveColumn\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnRowChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnRowChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnRowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnRowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnTableCleared\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnTableClearing\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.OnTableNewRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ParentRelations\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Prefix\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.PrimaryKey\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ReadXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ReadXmlSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ReadXmlSerializable\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.RejectChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.RemotingFormat\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Reset\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.RowChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_RowChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_RowChanged\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.RowChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_RowChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_RowChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.RowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_RowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_RowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.RowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_RowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_RowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Rows\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Select\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.Site\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.IListSource.ContainsListCollection\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.IListSource.GetList\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.IXmlSerializable.GetSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.IXmlSerializable.ReadXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.IXmlSerializable.WriteXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.TableCleared\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_TableCleared\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_TableCleared\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.TableClearing\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_TableClearing\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_TableClearing\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.TableName\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.TableNewRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.add_TableNewRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.remove_TableNewRow\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.ToString\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.WriteXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataTable.WriteXmlSchema\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a0d8121a-8216-9ad0-7187-73d70dbddbb8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents one table of in-memory data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.DataTable\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.DataTable.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.DataTable.yml","open_to_public_contributors":true,"api_name":["System.Data.DataTable","System.Data.DataTable..ctor","System.Data.DataTable.AcceptChanges","System.Data.DataTable.BeginInit","System.Data.DataTable.BeginLoadData","System.Data.DataTable.CaseSensitive","System.Data.DataTable.ChildRelations","System.Data.DataTable.Clear","System.Data.DataTable.Clone","System.Data.DataTable.ColumnChanged","System.Data.DataTable.add_ColumnChanged","System.Data.DataTable.remove_ColumnChanged","System.Data.DataTable.ColumnChanging","System.Data.DataTable.add_ColumnChanging","System.Data.DataTable.remove_ColumnChanging","System.Data.DataTable.Columns","System.Data.DataTable.Compute","System.Data.DataTable.Constraints","System.Data.DataTable.Copy","System.Data.DataTable.CreateDataReader","System.Data.DataTable.CreateInstance","System.Data.DataTable.DataSet","System.Data.DataTable.DefaultView","System.Data.DataTable.DisplayExpression","System.Data.DataTable.EndInit","System.Data.DataTable.EndLoadData","System.Data.DataTable.ExtendedProperties","System.Data.DataTable.fInitInProgress","System.Data.DataTable.GetChanges","System.Data.DataTable.GetDataTableSchema","System.Data.DataTable.GetErrors","System.Data.DataTable.GetObjectData","System.Data.DataTable.GetRowType","System.Data.DataTable.GetSchema","System.Data.DataTable.HasErrors","System.Data.DataTable.ImportRow","System.Data.DataTable.Initialized","System.Data.DataTable.add_Initialized","System.Data.DataTable.remove_Initialized","System.Data.DataTable.IsInitialized","System.Data.DataTable.Load","System.Data.DataTable.LoadDataRow","System.Data.DataTable.Locale","System.Data.DataTable.Merge","System.Data.DataTable.MinimumCapacity","System.Data.DataTable.Namespace","System.Data.DataTable.NewRow","System.Data.DataTable.NewRowArray","System.Data.DataTable.NewRowFromBuilder","System.Data.DataTable.OnColumnChanged","System.Data.DataTable.OnColumnChanging","System.Data.DataTable.OnPropertyChanging","System.Data.DataTable.OnRemoveColumn","System.Data.DataTable.OnRowChanged","System.Data.DataTable.OnRowChanging","System.Data.DataTable.OnRowDeleted","System.Data.DataTable.OnRowDeleting","System.Data.DataTable.OnTableCleared","System.Data.DataTable.OnTableClearing","System.Data.DataTable.OnTableNewRow","System.Data.DataTable.ParentRelations","System.Data.DataTable.Prefix","System.Data.DataTable.PrimaryKey","System.Data.DataTable.ReadXml","System.Data.DataTable.ReadXmlSchema","System.Data.DataTable.ReadXmlSerializable","System.Data.DataTable.RejectChanges","System.Data.DataTable.RemotingFormat","System.Data.DataTable.Reset","System.Data.DataTable.RowChanged","System.Data.DataTable.add_RowChanged","System.Data.DataTable.remove_RowChanged","System.Data.DataTable.RowChanging","System.Data.DataTable.add_RowChanging","System.Data.DataTable.remove_RowChanging","System.Data.DataTable.RowDeleted","System.Data.DataTable.add_RowDeleted","System.Data.DataTable.remove_RowDeleted","System.Data.DataTable.RowDeleting","System.Data.DataTable.add_RowDeleting","System.Data.DataTable.remove_RowDeleting","System.Data.DataTable.Rows","System.Data.DataTable.Select","System.Data.DataTable.Site","System.Data.DataTable.IListSource.ContainsListCollection","System.Data.DataTable.IListSource.GetList","System.Data.DataTable.IXmlSerializable.GetSchema","System.Data.DataTable.IXmlSerializable.ReadXml","System.Data.DataTable.IXmlSerializable.WriteXml","System.Data.DataTable.TableCleared","System.Data.DataTable.add_TableCleared","System.Data.DataTable.remove_TableCleared","System.Data.DataTable.TableClearing","System.Data.DataTable.add_TableClearing","System.Data.DataTable.remove_TableClearing","System.Data.DataTable.TableName","System.Data.DataTable.TableNewRow","System.Data.DataTable.add_TableNewRow","System.Data.DataTable.remove_TableNewRow","System.Data.DataTable.ToString","System.Data.DataTable.WriteXml","System.Data.DataTable.WriteXmlSchema"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.DataTable","System::Data::DataTable","System.Data.DataTable.#ctor","System::Data::DataTable::#ctor","System.Data.DataTable.AcceptChanges","System::Data::DataTable::AcceptChanges","System.Data.DataTable.BeginInit","System::Data::DataTable::BeginInit","System.Data.DataTable.BeginLoadData","System::Data::DataTable::BeginLoadData","System.Data.DataTable.CaseSensitive","System::Data::DataTable::CaseSensitive","System.Data.DataTable.ChildRelations","System::Data::DataTable::ChildRelations","System.Data.DataTable.Clear","System::Data::DataTable::Clear","System.Data.DataTable.Clone","System::Data::DataTable::Clone","System.Data.DataTable.ColumnChanged","System::Data::DataTable::ColumnChanged","System.Data.DataTable.ColumnChanging","System::Data::DataTable::ColumnChanging","System.Data.DataTable.Columns","System::Data::DataTable::Columns","System.Data.DataTable.Compute","System::Data::DataTable::Compute","System.Data.DataTable.Constraints","System::Data::DataTable::Constraints","System.Data.DataTable.Copy","System::Data::DataTable::Copy","System.Data.DataTable.CreateDataReader","System::Data::DataTable::CreateDataReader","System.Data.DataTable.CreateInstance","System::Data::DataTable::CreateInstance","System.Data.DataTable.DataSet","System::Data::DataTable::DataSet","System.Data.DataTable.DefaultView","System::Data::DataTable::DefaultView","System.Data.DataTable.DisplayExpression","System::Data::DataTable::DisplayExpression","System.Data.DataTable.EndInit","System::Data::DataTable::EndInit","System.Data.DataTable.EndLoadData","System::Data::DataTable::EndLoadData","System.Data.DataTable.ExtendedProperties","System::Data::DataTable::ExtendedProperties","System.Data.DataTable.fInitInProgress","System::Data::DataTable::fInitInProgress","System.Data.DataTable.GetChanges","System::Data::DataTable::GetChanges","System.Data.DataTable.GetDataTableSchema","System::Data::DataTable::GetDataTableSchema","System.Data.DataTable.GetErrors","System::Data::DataTable::GetErrors","System.Data.DataTable.GetObjectData","System::Data::DataTable::GetObjectData","System.Data.DataTable.GetRowType","System::Data::DataTable::GetRowType","System.Data.DataTable.GetSchema","System::Data::DataTable::GetSchema","System.Data.DataTable.HasErrors","System::Data::DataTable::HasErrors","System.Data.DataTable.ImportRow","System::Data::DataTable::ImportRow","System.Data.DataTable.Initialized","System::Data::DataTable::Initialized","System.Data.DataTable.IsInitialized","System::Data::DataTable::IsInitialized","System.Data.DataTable.Load","System::Data::DataTable::Load","System.Data.DataTable.LoadDataRow","System::Data::DataTable::LoadDataRow","System.Data.DataTable.Locale","System::Data::DataTable::Locale","System.Data.DataTable.Merge","System::Data::DataTable::Merge","System.Data.DataTable.MinimumCapacity","System::Data::DataTable::MinimumCapacity","System.Data.DataTable.Namespace","System::Data::DataTable::Namespace","System.Data.DataTable.NewRow","System::Data::DataTable::NewRow","System.Data.DataTable.NewRowArray","System::Data::DataTable::NewRowArray","System.Data.DataTable.NewRowFromBuilder","System::Data::DataTable::NewRowFromBuilder","System.Data.DataTable.OnColumnChanged","System::Data::DataTable::OnColumnChanged","System.Data.DataTable.OnColumnChanging","System::Data::DataTable::OnColumnChanging","System.Data.DataTable.OnPropertyChanging","System::Data::DataTable::OnPropertyChanging","System.Data.DataTable.OnRemoveColumn","System::Data::DataTable::OnRemoveColumn","System.Data.DataTable.OnRowChanged","System::Data::DataTable::OnRowChanged","System.Data.DataTable.OnRowChanging","System::Data::DataTable::OnRowChanging","System.Data.DataTable.OnRowDeleted","System::Data::DataTable::OnRowDeleted","System.Data.DataTable.OnRowDeleting","System::Data::DataTable::OnRowDeleting","System.Data.DataTable.OnTableCleared","System::Data::DataTable::OnTableCleared","System.Data.DataTable.OnTableClearing","System::Data::DataTable::OnTableClearing","System.Data.DataTable.OnTableNewRow","System::Data::DataTable::OnTableNewRow","System.Data.DataTable.ParentRelations","System::Data::DataTable::ParentRelations","System.Data.DataTable.Prefix","System::Data::DataTable::Prefix","System.Data.DataTable.PrimaryKey","System::Data::DataTable::PrimaryKey","System.Data.DataTable.ReadXml","System::Data::DataTable::ReadXml","System.Data.DataTable.ReadXmlSchema","System::Data::DataTable::ReadXmlSchema","System.Data.DataTable.ReadXmlSerializable","System::Data::DataTable::ReadXmlSerializable","System.Data.DataTable.RejectChanges","System::Data::DataTable::RejectChanges","System.Data.DataTable.RemotingFormat","System::Data::DataTable::RemotingFormat","System.Data.DataTable.Reset","System::Data::DataTable::Reset","System.Data.DataTable.RowChanged","System::Data::DataTable::RowChanged","System.Data.DataTable.RowChanging","System::Data::DataTable::RowChanging","System.Data.DataTable.RowDeleted","System::Data::DataTable::RowDeleted","System.Data.DataTable.RowDeleting","System::Data::DataTable::RowDeleting","System.Data.DataTable.Rows","System::Data::DataTable::Rows","System.Data.DataTable.Select","System::Data::DataTable::Select","System.Data.DataTable.Site","System::Data::DataTable::Site","System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection","System::Data::DataTable::System#ComponentModel#IListSource#ContainsListCollection","System.Data.DataTable.System#ComponentModel#IListSource#GetList","System::Data::DataTable::System#ComponentModel#IListSource#GetList","System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema","System::Data::DataTable::System#Xml#Serialization#IXmlSerializable#GetSchema","System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml","System::Data::DataTable::System#Xml#Serialization#IXmlSerializable#ReadXml","System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml","System::Data::DataTable::System#Xml#Serialization#IXmlSerializable#WriteXml","System.Data.DataTable.TableCleared","System::Data::DataTable::TableCleared","System.Data.DataTable.TableClearing","System::Data::DataTable::TableClearing","System.Data.DataTable.TableName","System::Data::DataTable::TableName","System.Data.DataTable.TableNewRow","System::Data::DataTable::TableNewRow","System.Data.DataTable.ToString","System::Data::DataTable::ToString","System.Data.DataTable.WriteXml","System::Data::DataTable::WriteXml","System.Data.DataTable.WriteXmlSchema","System::Data::DataTable::WriteXmlSchema"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a0d8121a-8216-9ad0-7187-73d70dbddbb8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data/DataTable.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataTable class | Microsoft Docs","_op_ogTitle":"DataTable class","description":"Represents one table of in-memory data.\n","toc_asset_id":"_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.DataTable","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.datatable","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.datatable","fileRelativePath":"System.Data.DataTable.html"},"themesRelativePathToOutputRoot":"_themes/"}