{"content":"    \r\n    <h1 id=\"System_Xml_Schema_XmlSchemaInference\">\r\n      <span class=\"lang-csharp\">XmlSchemaInference</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Infers an XML Schema Definition Language (XSD) schema from an XML document. The XmlSchemaInference class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class XmlSchemaInference</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlSchemaInference</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"IMPORTANT\"><h5>Important</h5><ul>\n<li>Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.  <ul>\n<li>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.  </li>\n<li>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers.  </li>\n</ul>\n</li>\n</ul>\n</div>\n<p> The XmlSchemaInference class in the <a class=\"xref\" href=\"system.xml.schema\" data-linktype=\"relative-path\">System.Xml.Schema</a> namespace allows you to infer an XML Schema Definition Language (XSD) schema from the structure of an XML document. The XmlSchemaInference class outputs an XML schema that can validate the XML document.  </p>\n<p> The XmlSchemaInference class supports the W3C XML and XML Schemas standards. It can be used to infer a new schema or to refine an existing schema.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaInference__ctor\" data-linktype=\"self-bookmark\">XmlSchemaInference()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference\" data-linktype=\"relative-path\">XmlSchemaInference</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaInference_Occurrence\" data-linktype=\"self-bookmark\">Occurrence</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> value that affects schema occurrence declarations inferred from the XML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaInference_TypeInference\" data-linktype=\"self-bookmark\">TypeInference</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> value that affects types inferred from the XML document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaInference_InferSchema_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">InferSchema(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaInference_InferSchema_System_Xml_XmlReader_System_Xml_Schema_XmlSchemaSet_\" data-linktype=\"self-bookmark\">InferSchema(XmlReader,XmlSchemaSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object specified, and refines the inferred schema using an existing schema in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object specified with the same target namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaInference__ctor\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaInference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSchemaInference()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference\" data-linktype=\"relative-path\">XmlSchemaInference</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSchemaInference ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaInference_Occurrence\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaInference_Occurrence_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Occurrence</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> value that affects schema occurrence declarations inferred from the XML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the Occurrence property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, the first time elements are encountered in the XML document, the schema declaration is inferred as <code>minOccurs=&quot;1&quot;</code>. When attributes are encountered, the schema declaration is inferred as <code>use=&quot;required&quot;</code>.  </p>\n<p> If the Occurrence property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, element schema declarations are inferred as <code>minOccurs=&quot;0&quot;</code>, and attribute schema declarations are inferred as <code>use=&quot;optional&quot;</code>.  </p>\n<p> The default value of the Occurrence property is <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#7\">&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;root&gt;\n    &lt;subElement1 attribute1=&quot;text&quot;&gt;ABC&lt;/subElement1&gt;\n&lt;/root&gt;\n</code></pre><p> The following example code instructs the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference\" data-linktype=\"relative-path\">XmlSchemaInference</a> class to infer occurrence of elements and attributes in a relaxed way.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaInferenceExamples#2\">        XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);\n        XmlSchemaSet schemaSet = new XmlSchemaSet();\n        XmlSchemaInference schema = new XmlSchemaInference();\n\n        schema.Occurrence = XmlSchemaInference.InferenceOption.Relaxed;\n\n        schemaSet = schema.InferSchema(reader);\n\n        foreach (XmlSchema s in schemaSet.Schemas())\n        {\n            s.Write(Console.Out);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSchemaInferenceExamples#2\">\t\tXmlReader^ reader = XmlReader::Create(&quot;input.xml&quot;);\n        XmlSchemaSet^ schemaSet = gcnew XmlSchemaSet();\n        XmlSchemaInference^ schema = gcnew XmlSchemaInference();\n\n\t\tschema-&gt;Occurrence = XmlSchemaInference::InferenceOption::Relaxed;\n\n        schemaSet = schema-&gt;InferSchema(reader);\n\n        for each (XmlSchema^ s in schemaSet-&gt;Schemas())\n        {\n            s-&gt;Write(Console::Out);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaInferenceExamples#2\">        Dim reader As XmlReader = XmlReader.Create(&quot;input.xml&quot;)\n        Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n        Dim schema As XmlSchemaInference = New XmlSchemaInference()\n\n        schema.Occurrence = XmlSchemaInference.InferenceOption.Relaxed\n\n        schemaSet = schema.InferSchema(reader)\n\n        For Each s As XmlSchema In schemaSet.Schemas()\n            s.Write(Console.Out)\n        Next\n</code></pre><p> Because the Occurrence property was set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, the following schema was generated.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#8\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;root&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element minOccurs=&quot;0&quot; name=&quot;subElement1&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:simpleContent&gt;\n                            &lt;xs:extension base=&quot;xs:string&quot;&gt;\n                            &lt;xs:attribute name=&quot;attribute1&quot; type=&quot;xs:string&quot; use=&quot;optional&quot;/&gt;\n                            &lt;/xs:extension&gt;\n                        &lt;/xs:simpleContent&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre><p> In the example code above, if the Occurrence property was not set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference\" data-linktype=\"relative-path\">XmlSchemaInference</a> class would have defaulted to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> and generated the following schema.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#9\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;root&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element name=&quot;subElement1&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:simpleContent&gt;\n                            &lt;xs:extension base=&quot;xs:string&quot;&gt;\n                                &lt;xs:attribute name=&quot;attribute1&quot; type=&quot;xs:string&quot; use=&quot;required&quot;/&gt;\n                            &lt;/xs:extension&gt;\n                        &lt;/xs:simpleContent&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaInference_TypeInference\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaInference_TypeInference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeInference</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> value that affects types inferred from the XML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the TypeInference property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, the inferred type of elements and attributes in the XML document with simple content is always <code>xs:string</code>. If the TypeInference property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, more specific types are inferred, such as <code>xs:date</code>, <code>xs:decimal</code>, <code>xs:unsignedByte</code>, and so on.  </p>\n<p> The default value of the TypeInference property is <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#10\">&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;root&gt;\n    &lt;subElement1&gt;ABC&lt;/subElement1&gt;\n    &lt;subElement2&gt;123&lt;/subElement2&gt;\n&lt;/root&gt;\n</code></pre><p> The following example code instructs the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference\" data-linktype=\"relative-path\">XmlSchemaInference</a> class to infer <code>xs:string</code> for elements and attributes with simple content.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaInferenceExamples#3\">        XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);\n        XmlSchemaSet schemaSet = new XmlSchemaSet();\n        XmlSchemaInference schema = new XmlSchemaInference();\n\n        schema.TypeInference = XmlSchemaInference.InferenceOption.Relaxed;\n\n        schemaSet = schema.InferSchema(reader);\n\n        foreach (XmlSchema s in schemaSet.Schemas())\n        {\n            s.Write(Console.Out);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSchemaInferenceExamples#3\">\t\tXmlReader^ reader = XmlReader::Create(&quot;input.xml&quot;);\n        XmlSchemaSet^ schemaSet = gcnew XmlSchemaSet();\n        XmlSchemaInference^ schema = gcnew XmlSchemaInference();\n\n\t\tschema-&gt;TypeInference = XmlSchemaInference::InferenceOption::Relaxed;\n\n        schemaSet = schema-&gt;InferSchema(reader);\n\n        for each (XmlSchema^ s in schemaSet-&gt;Schemas())\n        {\n            s-&gt;Write(Console::Out);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaInferenceExamples#3\">        Dim reader As XmlReader = XmlReader.Create(&quot;input.xml&quot;)\n        Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n        Dim schema As XmlSchemaInference = New XmlSchemaInference()\n\n        schema.TypeInference = XmlSchemaInference.InferenceOption.Relaxed\n\n        schemaSet = schema.InferSchema(reader)\n\n        For Each s As XmlSchema In schemaSet.Schemas()\n            s.Write(Console.Out)\n        Next\n</code></pre><p> Because the TypeInference property was set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, the following schema was generated.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#11\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;root&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element name=&quot;subElement1&quot; type=&quot;xs:string&quot; /&gt;\n                &lt;xs:element name=&quot;subElement2&quot; type=&quot;xs:string&quot; /&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre><p> In the example code above, if the TypeInference property was not set to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a>, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainference\" data-linktype=\"relative-path\">XmlSchemaInference</a> class would have defaulted to <a class=\"xref\" href=\"system.xml.schema.xmlschemainference.inferenceoption\" data-linktype=\"relative-path\">XmlSchemaInference+InferenceOption</a> and generated the following schema.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#12\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;root&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element name=&quot;subElement1&quot; type=&quot;xs:string&quot; /&gt;\n                &lt;xs:element name=&quot;subElement2&quot; type=&quot;xs:unsignedByte&quot; /&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaInference_InferSchema_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaInference_InferSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InferSchema(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceDocument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object containing the XML document to infer a schema from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object containing the inferred schemas.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The XML document is not well-formed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainferenceexception\" data-linktype=\"relative-path\">XmlSchemaInferenceException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is not positioned on the root node or on an element. An error occurs during the schema inference process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InferSchema method infers one or more W3C XML Schema Definition Language (XSD) schemas from the XML instance document contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object specified. If the XML document contains elements and attributes from multiple namespaces, then multiple schemas are generated: one for each namespace used in the document. The primary schema is the schema that can validate the entire XML document, and its target namespace is the same as the namespace of the document element of the XML document.  </p>\n<p> The following are important notes to consider when using the InferSchema method.  </p>\n<ul>\n<li><p>The InferSchema method ignores any <code>xsi:type</code>, <code>xsi:schemaLocation</code>, or <code>xsi:noNamespaceSchemaLocation</code> attributes in the XML document.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is typed, the type information it contains is ignored.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is positioned on an element that is not the root element of the XML document, a schema is inferred for only that element. If the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is not positioned on an element, the <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_Read_\" data-linktype=\"relative-path\">Read</a> method is called on the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> parameter until an element is encountered (for example, when <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_NodeType_\" data-linktype=\"relative-path\">NodeType</a> is <a class=\"xref\" href=\"system.xml.xmlnodetype\" data-linktype=\"relative-path\">XmlNodeType</a>). At this point, the inference process starts from that element. If no element is encountered until the end of the document, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example takes an XML file as input, and generates a schema that can validate the example XML.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaInferenceExamples#1\">        XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n        XmlSchemaSet schemaSet = new XmlSchemaSet();\n        XmlSchemaInference schema = new XmlSchemaInference();\n\n        schemaSet = schema.InferSchema(reader);\n\n        foreach (XmlSchema s in schemaSet.Schemas())\n        {\n            s.Write(Console.Out);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSchemaInferenceExamples#1\">\t\tXmlReader^ reader = XmlReader::Create(&quot;contosoBooks.xml&quot;);\n        XmlSchemaSet^ schemaSet = gcnew XmlSchemaSet();\n        XmlSchemaInference^ schema = gcnew XmlSchemaInference();\n\n        schemaSet = schema-&gt;InferSchema(reader);\n\n        for each (XmlSchema^ s in schemaSet-&gt;Schemas())\n        {\n            s-&gt;Write(Console::Out);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaInferenceExamples#1\">        Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n        Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n        Dim schema As XmlSchemaInference = New XmlSchemaInference()\n\n        schemaSet = schema.InferSchema(reader)\n\n        For Each s As XmlSchema In schemaSet.Schemas()\n            s.Write(Console.Out)\n        Next\n</code></pre><p> The following is the input XML file.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#5\">&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n  &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n    &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n    &lt;author&gt;\n      &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n      &lt;last-name&gt;Franklin&lt;/last-name&gt;\n    &lt;/author&gt;\n    &lt;price&gt;8.99&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n    &lt;title&gt;The Confidence Man&lt;/title&gt;\n    &lt;author&gt;\n      &lt;first-name&gt;Herman&lt;/first-name&gt;\n      &lt;last-name&gt;Melville&lt;/last-name&gt;\n    &lt;/author&gt;\n    &lt;price&gt;11.99&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n    &lt;title&gt;The Gorgias&lt;/title&gt;\n    &lt;author&gt;\n      &lt;name&gt;Plato&lt;/name&gt;\n    &lt;/author&gt;\n    &lt;price&gt;9.99&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The following is the schema inferred from the XML document.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#6\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaInference_InferSchema_System_Xml_XmlReader_System_Xml_Schema_XmlSchemaSet_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaInference_InferSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InferSchema(XmlReader,XmlSchemaSet)</div>        \r\n          </div>\r\n    \r\n            <p>Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object specified, and refines the inferred schema using an existing schema in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object specified with the same target namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceDocument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object containing the XML document to infer a schema from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemas</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object containing an existing schema used to refine the inferred schema.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object containing the inferred schemas.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The XML document is not well-formed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainferenceexception\" data-linktype=\"relative-path\">XmlSchemaInferenceException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is not positioned on the root node or on an element. An error occurs during the schema inference process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InferSchema method infers one or more W3C XML Schema Definition Language (XSD) schemas from the XML instance document contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object specified. If the XML document contains elements and attributes from multiple namespaces, multiple schemas are generated: one for each namespace used in the document. The primary schema is the schema that can validate the entire XML document, and its target namespace is the same as the namespace of the document element of the XML document.  </p>\n<p> The following are important notes to consider when using the InferSchema method.  </p>\n<ul>\n<li><p>The InferSchema method ignores any <code>xsi:type</code>, <code>xsi:schemaLocation</code>, or <code>xsi:noNamespaceSchemaLocation</code> attributes in the XML document.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is typed, the type information it contains is ignored.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is positioned on an element that is not the root element of the XML document, a schema is inferred for only that element. If the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is not positioned on an element, the <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_Read_\" data-linktype=\"relative-path\">Read</a> method is called on the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> parameter until an element is encountered (for example, when <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_NodeType_\" data-linktype=\"relative-path\">NodeType</a> is <a class=\"xref\" href=\"system.xml.xmlnodetype\" data-linktype=\"relative-path\">XmlNodeType</a>). At this point, the inference process starts from that element. If no element is encountered until the end of the document, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n</li>\n<li><p>If an <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object is passed as a parameter and the element upon which the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object is positioned is defined in one of the schemas in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a>, the inferred schema is used to refine an existing schema in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> parameter with the same target namespace; otherwise, a new schema is inferred for the namespace.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  </p>\n<p> The following is XML document 1.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#13\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;item xmlns=&quot;http://www.contoso.com/items&quot; productID=&quot;123456789&quot;&gt;\n\t&lt;name&gt;Hammer&lt;/name&gt;\n\t&lt;price&gt;9.95&lt;/price&gt;\n\t&lt;supplierID&gt;1929&lt;/supplierID&gt;\n&lt;/item&gt;\n</code></pre><p> The following is XML document 2.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#14\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;item xmlns=&quot;http://www.contoso.com/items&quot; productID=&quot;A53-246&quot;&gt;\n\t&lt;name&gt;Paint&lt;/name&gt;\n\t&lt;price&gt;12.50&lt;/price&gt;\n&lt;/item&gt;\n</code></pre><p> The following example code infers a schema from the first XML document contained in <code>reader</code>, and then refines the inferred schema with the changes found in the second XML document contained in <code>reader1</code>. The example code uses the first overloaded <a class=\"xref\" href=\"system.xml.schema.xmlschemainference#System_Xml_Schema_XmlSchemaInference_InferSchema_\" data-linktype=\"relative-path\">InferSchema</a> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaInferenceExamples#4\">        XmlReader reader = XmlReader.Create(&quot;item1.xml&quot;);\n        XmlReader reader1 = XmlReader.Create(&quot;item2.xml&quot;);\n        XmlSchemaSet schemaSet = new XmlSchemaSet();\n        XmlSchemaInference inference = new XmlSchemaInference();\n        schemaSet = inference.InferSchema(reader);\n\n        // Display the inferred schema.\n        Console.WriteLine(&quot;Original schema:<br>&quot;);\n        foreach (XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/items&quot;))\n        {\n            schema.Write(Console.Out);\n        }\n\n        // Use the additional data in item2.xml to refine the original schema.\n        schemaSet = inference.InferSchema(reader1, schemaSet);\n\n        // Display the refined schema.\n        Console.WriteLine(&quot;<br><br>Refined schema:<br>&quot;);\n        foreach (XmlSchema schema in schemaSet.Schemas(&quot;http://www.contoso.com/items&quot;))\n        {\n            schema.Write(Console.Out);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSchemaInferenceExamples#4\">\t\tXmlReader^ reader = XmlReader::Create(&quot;item1.xml&quot;);\n        XmlReader^ reader1 = XmlReader::Create(&quot;item2.xml&quot;);\n        XmlSchemaSet^ schemaSet = gcnew XmlSchemaSet();\n        XmlSchemaInference^ inference = gcnew XmlSchemaInference();\n        schemaSet = inference-&gt;InferSchema(reader);\n\n        // Display the inferred schema.\n        Console::WriteLine(&quot;Original schema:<br>&quot;);\n        for each (XmlSchema^ schema in schemaSet-&gt;Schemas(&quot;http://www.contoso.com/items&quot;))\n        {\n            schema-&gt;Write(Console::Out);\n        }\n\n        // Use the additional data in item2.xml to refine the original schema.\n        schemaSet = inference-&gt;InferSchema(reader1, schemaSet);\n\n        // Display the refined schema.\n        Console::WriteLine(&quot;<br><br>Refined schema:<br>&quot;);\n        for each (XmlSchema^ schema in schemaSet-&gt;Schemas(&quot;http://www.contoso.com/items&quot;))\n        {\n            schema-&gt;Write(Console::Out);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaInferenceExamples#4\">        Dim reader As XmlReader = XmlReader.Create(&quot;item1.xml&quot;)\n        Dim reader1 As XmlReader = XmlReader.Create(&quot;item2.xml&quot;)\n        Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n        Dim inference As XmlSchemaInference = New XmlSchemaInference()\n        schemaSet = inference.InferSchema(reader)\n\n        &#39; Display the inferred schema.\n        Console.WriteLine(&quot;Original schema:<br>&quot;)\n        For Each schema As XmlSchema In schemaSet.Schemas(&quot;http://www.contoso.com/items&quot;)\n            schema.Write(Console.Out)\n        Next\n\n        &#39; Use the additional data in item2.xml to refine the original schema.\n        schemaSet = inference.InferSchema(reader1, schemaSet)\n\n        &#39; Display the refined schema.\n        Console.WriteLine(&quot;<br><br>Refined schema:<br>&quot;)\n        For Each schema As XmlSchema In schemaSet.Schemas(&quot;http://www.contoso.com/items&quot;)\n            schema.Write(Console.Out)\n        Next\n</code></pre><p> The following schema is the schema inferred from XML document 1.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#15\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/items&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n  &lt;xs:element name=&quot;item&quot;&gt;\n    &lt;xs:complexType&gt;\n      &lt;xs:sequence&gt;\n        &lt;xs:element name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n        &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n        &lt;xs:element name=&quot;supplierID&quot; type=&quot;xs:unsignedShort&quot; /&gt;\n      &lt;/xs:sequence&gt;\n      &lt;xs:attribute name=&quot;productID&quot; type=&quot;xs:unsignedInt&quot; use=&quot;required&quot; /&gt;\n    &lt;/xs:complexType&gt;\n  &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre><p> The following schema is the refined version of the schema above, based on XML document 2.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlSchemaInferenceExamples#16\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/items&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n  &lt;xs:element name=&quot;item&quot;&gt;\n    &lt;xs:complexType&gt;\n      &lt;xs:sequence&gt;\n        &lt;xs:element name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n        &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;supplierID&quot; type=&quot;xs:unsignedShort&quot; /&gt;\n      &lt;/xs:sequence&gt;\n      &lt;xs:attribute name=&quot;productID&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n    &lt;/xs:complexType&gt;\n  &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Schema.XmlSchemaInference.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Schema.XmlSchemaInference.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaInference\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaInference..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaInference.InferSchema\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaInference.Occurrence\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaInference.TypeInference\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"fce82154-269e-e163-0e27-07b159d20edd\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.Schema\\XmlSchemaInference.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Infers an XML Schema Definition Language (XSD) schema from an XML document. The XmlSchemaInference class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Schema/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Schema.XmlSchemaInference\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Schema.XmlSchemaInference.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Schema.XmlSchemaInference.yml","open_to_public_contributors":true,"api_name":["System.Xml.Schema.XmlSchemaInference","System.Xml.Schema.XmlSchemaInference..ctor","System.Xml.Schema.XmlSchemaInference.InferSchema","System.Xml.Schema.XmlSchemaInference.Occurrence","System.Xml.Schema.XmlSchemaInference.TypeInference"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Schema.XmlSchemaInference","System::Xml::Schema::XmlSchemaInference","System.Xml.Schema.XmlSchemaInference.#ctor","System::Xml::Schema::XmlSchemaInference::#ctor","System.Xml.Schema.XmlSchemaInference.InferSchema","System::Xml::Schema::XmlSchemaInference::InferSchema","System.Xml.Schema.XmlSchemaInference.Occurrence","System::Xml::Schema::XmlSchemaInference::Occurrence","System.Xml.Schema.XmlSchemaInference.TypeInference","System::Xml::Schema::XmlSchemaInference::TypeInference"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"fce82154-269e-e163-0e27-07b159d20edd","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.Schema\\XmlSchemaInference.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Schema/XmlSchemaInference.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlSchemaInference class | Microsoft Docs","_op_ogTitle":"XmlSchemaInference class","description":"Infers an XML Schema Definition Language (XSD) schema from an XML document. The XmlSchemaInference class cannot be inherited.\n","toc_asset_id":"_splitted/System.Xml.Schema/toc.json","toc_rel":"_splitted/System.Xml.Schema/toc.json","source_url":"","ms.assetid":"System.Xml.Schema.XmlSchemaInference","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.schema.xmlschemainference","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.schema.xmlschemainference","fileRelativePath":"System.Xml.Schema.XmlSchemaInference.html"},"themesRelativePathToOutputRoot":"_themes/"}