{"content":"    \r\n    <h1 id=\"System_Data_IDataReader\">\r\n      <span class=\"lang-csharp\">IDataReader</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IDataReader : IDisposable, System.Data.IDataRecord</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IDataReader and <a class=\"xref\" href=\"system.data.idatarecord\" data-linktype=\"relative-path\">IDataRecord</a> interfaces allow an inheriting class to implement a <code>DataReader</code> class, which provides a means of reading one or more forward-only streams of result sets. For more information about <code>DataReader</code> classes, see <a href=\"../Topic/Retrieving%20Data%20Using%20a%20DataReader.md\" data-linktype=\"relative-path\">Retrieving Data Using a DataReader</a>.  </p>\n<p> An application does not create an instance of the IDataReader interface directly, but creates an instance of a class that inherits IDataReader.  </p>\n<p> Classes that inherit IDataReader must implement the inherited members, and typically define additional members to add provider-specific functionality.  </p>\n<p> Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an <code>IDataReader</code>. However, the precise behavior is both provider and timing dependent.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_Depth\" data-linktype=\"self-bookmark\">Depth</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating the depth of nesting for the current row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_IsClosed\" data-linktype=\"self-bookmark\">IsClosed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the data reader is closed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_RecordsAffected\" data-linktype=\"self-bookmark\">RecordsAffected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> Object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_GetSchemaTable\" data-linktype=\"self-bookmark\">GetSchemaTable()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that describes the column metadata of the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_NextResult\" data-linktype=\"self-bookmark\">NextResult()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Advances the data reader to the next result, when reading the results of batch SQL statements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDataReader_Read\" data-linktype=\"self-bookmark\">Read()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Advances the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> to the next record.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_Depth\">\r\n    \r\n            <a id=\"System_Data_IDataReader_Depth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Depth</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating the depth of nesting for the current row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Depth { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The level of nesting.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The outermost table has a depth of zero.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_IsClosed\">\r\n    \r\n            <a id=\"System_Data_IDataReader_IsClosed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsClosed</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the data reader is closed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsClosed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the data reader is closed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IsClosed and <a class=\"xref\" href=\"system.data.idatareader#System_Data_IDataReader_RecordsAffected_\" data-linktype=\"relative-path\">RecordsAffected</a> are the only properties that you can call after the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> is closed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_RecordsAffected\">\r\n    \r\n            <a id=\"System_Data_IDataReader_RecordsAffected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RecordsAffected</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RecordsAffected { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RecordsAffected property is not set until all rows are read and you close the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>.  </p>\n<p> <a class=\"xref\" href=\"system.data.idatareader#System_Data_IDataReader_IsClosed_\" data-linktype=\"relative-path\">IsClosed</a> and RecordsAffected are the only properties that you can call after the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> is closed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_Close\">\r\n    \r\n            <a id=\"System_Data_IDataReader_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> Object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must explicitly call the Close method when you are through using the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> to use the associated <a class=\"xref\" href=\"system.data.idbconnection\" data-linktype=\"relative-path\">IDbConnection</a> for any other purpose.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_GetSchemaTable\">\r\n    \r\n            <a id=\"System_Data_IDataReader_GetSchemaTable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSchemaTable()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that describes the column metadata of the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.DataTable GetSchemaTable ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that describes the column metadata.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The implementation of GetSchemaTable method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which GetSchemaTable returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement GetSchemaTable.  </p>\n<table>\n<thead>\n<tr>\n<th>Data Provider</th>\n<th>Member</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.NET Data Provider for ODBC</td>\n<td><a class=\"xref\" href=\"system.data.odbc.odbcdatareader#System_Data_Odbc_OdbcDataReader_GetSchemaTable_\" data-linktype=\"relative-path\">GetSchemaTable</a>.</td>\n</tr>\n<tr>\n<td>.NET Data Provider for OLE DB</td>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbdatareader#System_Data_OleDb_OleDbDataReader_GetSchemaTable_\" data-linktype=\"relative-path\">GetSchemaTable</a>.</td>\n</tr>\n<tr>\n<td>.NET Data Provider for Oracle</td>\n<td><a class=\"xref\" href=\"system.data.oracleclient.oracledatareader#System_Data_OracleClient_OracleDataReader_GetSchemaTable_\" data-linktype=\"relative-path\">GetSchemaTable</a>.</td>\n</tr>\n<tr>\n<td>.NET Data Provider for SQL Server</td>\n<td><a class=\"xref\" href=\"system.data.sqlclient.sqldatareader#System_Data_SqlClient_SqlDataReader_GetSchemaTable_\" data-linktype=\"relative-path\">GetSchemaTable</a>.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_NextResult\">\r\n    \r\n            <a id=\"System_Data_IDataReader_NextResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NextResult()</div>        \r\n          </div>\r\n    \r\n            <p>Advances the data reader to the next result, when reading the results of batch SQL statements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool NextResult ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there are more rows; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Used to process multiple results, which can be obtained by executing batch SQL statements.  </p>\n<p> By default, the data reader is positioned on the first result.  </p>\n<pre><code class=\"lang-vb\" name=\"IDataReader_NextResult#1\">Imports System\nImports System.Data\nImports System.Data.SqlClient\nImports System.Data.OleDb\nImports System.Data.Odbc\n\nModule Module1\n   Dim connectionTypeName As String = &quot;SqlClient&quot;\n   Dim connectionString As String = &quot;Data Source=(local);Initial Catalog=AdventureWorks2012;Integrated Security=SSPI&quot;\n\n   &#39; Dim connectionTypeName As String = &quot;Odbc&quot;\n   &#39; Dim connectionString As String = &quot;Driver={SQL Server Native Client 11.0};Server=(local);Database=AdventureWorks2012;Trusted_Connection=Yes&quot;\n\n   &#39; Dim connectionTypeName As String = &quot;OleDb&quot;\n   &#39; Dim connectionString As String = &quot;Provider=SQLNCLI11;Data Source=(local);Initial Catalog=AdventureWorks2012;Integrated Security=SSPI&quot;\n\n   Sub Main()\n      Using connection As IDbConnection = DatabaseConnectionFactory.GetConnection(connectionTypeName, connectionString)\n         Dim command As IDbCommand = connection.CreateCommand()\n         command.Connection = connection\n\n         &#39;these 2 queries are executed as a single batch and return 2 separate results\n         command.CommandText =\n             &quot;SELECT CountryRegionCode, Name FROM Person.CountryRegion;&quot; +\n             &quot;SELECT CountryRegionCode, StateProvinceCode, Name, StateProvinceID FROM Person.StateProvince;&quot;\n\n         connection.Open()\n\n         Using reader As IDataReader = command.ExecuteReader()\n            &#39;process the first result\n            displayCountryRegions(reader)\n\n            &#39;use NextResult to move to the second result and verify it is returned\n            If Not reader.NextResult() Then\n               Throw New InvalidOperationException(&quot;Expected second result (StateProvinces) but only one was returned&quot;)\n            End If\n\n            &#39;process the second result\n            displayStateProvinces(reader)\n\n            reader.Close()\n         End Using\n\n         connection.Close()\n      End Using\n   End Sub\n\n   Sub displayCountryRegions(reader As IDataReader)\n      If Not reader.FieldCount = 2 Then\n         Throw New InvalidOperationException(&quot;First resultset (CountryRegions) must contain exactly 2 columns&quot;)\n      End If\n\n      While reader.Read()\n         Console.WriteLine(&quot;CountryRegionCode={0}, Name={1}&quot; _\n             , reader.GetString(reader.GetOrdinal(&quot;CountryRegionCode&quot;)) _\n             , reader.GetString(reader.GetOrdinal(&quot;Name&quot;)))\n      End While\n   End Sub\n\n   Sub displayStateProvinces(reader As IDataReader)\n\n      If Not reader.FieldCount = 4 Then\n         Throw New InvalidOperationException(&quot;Second resultset (StateProvinces) must contain exactly 4 columns&quot;)\n      End If\n\n      While reader.Read()\n         Console.WriteLine(&quot;CountryRegionCode={0}, StateProvinceCode={1}, Name={2}, StateProvinceID={3}&quot; _\n             , reader.GetString(reader.GetOrdinal(&quot;CountryRegionCode&quot;)) _\n             , reader.GetString(reader.GetOrdinal(&quot;StateProvinceCode&quot;)) _\n             , reader.GetString(reader.GetOrdinal(&quot;Name&quot;)) _\n             , reader.GetInt32(reader.GetOrdinal(&quot;StateProvinceID&quot;)))\n      End While\n   End Sub\n\n   Class DatabaseConnectionFactory\n      Shared Function GetSqlConnection(connectionString As String) As SqlConnection\n         Return New SqlConnection(connectionString)\n      End Function\n\n      Shared Function GetOdbcConnection(connectionString As String) As OdbcConnection\n         Return New OdbcConnection(connectionString)\n      End Function\n\n      Shared Function GetOleDbConnection(connectionString As String) As OleDbConnection\n         Return New OleDbConnection(connectionString)\n      End Function\n\n      Public Shared Function GetConnection(connectionTypeName As String, connectionString As String) As IDbConnection\n\n         Select Case connectionTypeName\n            Case &quot;SqlClient&quot;\n               Return GetSqlConnection(connectionString)\n            Case &quot;Odbc&quot;\n               Return GetOdbcConnection(connectionString)\n            Case &quot;OleDb&quot;\n               Return GetOleDbConnection(connectionString)\n            Case Else\n               Throw New ArgumentException(&quot;Value must be SqlClient, Odbc or OleDb&quot;, &quot;connectionTypeName&quot;)\n         End Select\n\n      End Function\n   End Class\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"IDataReader_NextResult#1\">using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Data.OleDb;\nusing System.Data.Odbc;\n\nclass Program {\n   static void Main(string[] args) {\n\n      // string connectionTypeName = &quot;SqlClient&quot;;\n      // string connectionString = @&quot;Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=SSPI&quot;;\n\n      // string connectionTypeName = &quot;Odbc&quot;;\n      // string connectionString = @&quot;Driver={SQL Server Native Client 11.0};Server=(local);Database=AdventureWorks2012;Trusted_Connection=Yes&quot;;\n\n      string connectionTypeName = &quot;OleDb&quot;;\n      string connectionString = @&quot;Provider=SQLNCLI11;Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=SSPI&quot;;\n\n      using (IDbConnection connection = DatabaseConnectionFactory.GetConnection(connectionTypeName, connectionString)) {\n         IDbCommand command = connection.CreateCommand();\n         command.Connection = connection;\n\n         // these 2 queries are executed as a single batch and return 2 separate results\n         command.CommandText = &quot;SELECT CountryRegionCode, Name FROM Person.CountryRegion;&quot; + &quot;SELECT CountryRegionCode, StateProvinceCode, Name, StateProvinceID FROM Person.StateProvince;&quot;;\n\n         connection.Open();\n\n         using (IDataReader reader = command.ExecuteReader()) {\n\n            // process the first result\n            displayCountryRegions(reader);\n\n            // use NextResult to move to the second result and verify it is returned\n            if (!reader.NextResult())\n               throw new InvalidOperationException(&quot;Expected second result (StateProvinces) but only one was returned&quot;);\n\n            // process the second result\n            displayStateProvinces(reader);\n\n            reader.Close();\n         }\n\n         connection.Close();\n      }\n   }\n\n   static void displayCountryRegions(IDataReader reader) {\n      if (reader.FieldCount != 2)\n         throw new InvalidOperationException(&quot;First resultset (CountryRegions) must contain exactly 2 columns&quot;);\n\n      while (reader.Read()) {\n         Console.WriteLine(&quot;CountryRegionCode={0}, Name={1}&quot;\n             , reader.GetString(reader.GetOrdinal(&quot;CountryRegionCode&quot;))\n             , reader.GetString(reader.GetOrdinal(&quot;Name&quot;)));\n      }\n   }\n\n   static void displayStateProvinces(IDataReader reader) {\n      if (reader.FieldCount != 4)\n         throw new InvalidOperationException(&quot;Second resultset (StateProvinces) must contain exactly 4 columns&quot;);\n\n      while (reader.Read()) {\n         Console.WriteLine(&quot;CountryRegionCode={0}, StateProvinceCode={1}, Name={2}, StateProvinceID={3}&quot;\n             , reader.GetString(reader.GetOrdinal(&quot;CountryRegionCode&quot;))\n             , reader.GetString(reader.GetOrdinal(&quot;StateProvinceCode&quot;))\n             , reader.GetString(reader.GetOrdinal(&quot;Name&quot;))\n             , reader.GetInt32(reader.GetOrdinal(&quot;StateProvinceID&quot;)));\n      }\n   }\n\n   class DatabaseConnectionFactory {\n      static SqlConnection GetSqlConnection(string connectionString) {\n         return new SqlConnection(connectionString);\n      }\n\n      static OdbcConnection GetOdbcConnection(string connectionString) {\n         return new OdbcConnection(connectionString);\n      }\n\n      static OleDbConnection GetOleDbConnection(string connectionString) {\n         return new OleDbConnection(connectionString);\n      }\n\n      public static IDbConnection GetConnection(string connectionTypeName, string connectionString) {\n         switch (connectionTypeName) {\n            case &quot;SqlClient&quot;:\n               return GetSqlConnection(connectionString);\n            case &quot;Odbc&quot;:\n               return GetOdbcConnection(connectionString);\n            case &quot;OleDb&quot;:\n               return GetOleDbConnection(connectionString);\n            default:\n               throw new ArgumentException(&quot;Value must be SqlClient, Odbc or OleDb&quot;, &quot;connectionTypeName&quot;);\n         }\n      }\n   }\n}\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDataReader_Read\">\r\n    \r\n            <a id=\"System_Data_IDataReader_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read()</div>        \r\n          </div>\r\n    \r\n            <p>Advances the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> to the next record.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Read ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there are more rows; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default position of the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> is prior to the first record. Therefore you must call Read to begin accessing any data.  </p>\n<p> While the data reader is in use, the associated connection is busy serving the <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>. This is the case until <a class=\"xref\" href=\"system.data.idatareader#System_Data_IDataReader_Close_\" data-linktype=\"relative-path\">Close</a> is called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates instances of three derived classes <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>, an <a class=\"xref\" href=\"system.data.oledb.oledbcommand\" data-linktype=\"relative-path\">OleDbCommand</a>, and an <a class=\"xref\" href=\"system.data.oledb.oledbdatareader\" data-linktype=\"relative-path\">OleDbDataReader</a>. The example reads through the data, writing it out to the console. Finally, the example closes the <a class=\"xref\" href=\"system.data.oledb.oledbdatareader\" data-linktype=\"relative-path\">OleDbDataReader</a>, then the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData IDataReader.Read Example#1\">    private static void ReadData(string connectionString)\n    {\n        string queryString = &quot;SELECT OrderID, CustomerID FROM Orders&quot;;\n        using (OracleConnection connection = new OracleConnection(connectionString))\n        {\n            OracleCommand command = new OracleCommand(queryString, connection);\n            connection.Open();\n            OracleDataReader reader;\n            reader = command.ExecuteReader();\n\n            // Always call Read before accessing data.\n            while (reader.Read())\n            {\n                Console.WriteLine(reader.GetInt32(0) + &quot;, &quot; + reader.GetString(1));\n            }\n\n            // Always call Close when done reading.\n            reader.Close();\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData IDataReader.Read Example#1\">    Public Sub ReadData(ByVal connectionString As String)\n        Dim queryString As String = _\n            &quot;SELECT OrderID, CustomerID FROM Orders&quot;\n\n        Using connection As New OracleConnection(connectionString)\n            Dim command As New OracleCommand(queryString, connection)\n            connection.Open()\n\n            Dim reader As OracleDataReader\n            reader = command.ExecuteReader()\n\n            &#39; Always call Read before accessing data.\n            While reader.Read()\n                Console.WriteLine(reader.GetInt32(0) &amp; &quot;, &quot; &amp; reader.GetString(1))\n            End While\n\n            &#39; Always call Close when done reading.\n            reader.Close()\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.IDataReader.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.IDataReader.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.Close\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.Depth\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.GetSchemaTable\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.IsClosed\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.NextResult\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.Read\">\r\n<meta name=\"APIName\" content=\"System.Data.IDataReader.RecordsAffected\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"70b46a35-f496-2813-0682-7687fc7fd19e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relationa…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.IDataReader\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.IDataReader.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.IDataReader.yml","open_to_public_contributors":true,"api_name":["System.Data.IDataReader","System.Data.IDataReader.Close","System.Data.IDataReader.Depth","System.Data.IDataReader.GetSchemaTable","System.Data.IDataReader.IsClosed","System.Data.IDataReader.NextResult","System.Data.IDataReader.Read","System.Data.IDataReader.RecordsAffected"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.IDataReader","System::Data::IDataReader","System.Data.IDataReader.Close","System::Data::IDataReader::Close","System.Data.IDataReader.Depth","System::Data::IDataReader::Depth","System.Data.IDataReader.GetSchemaTable","System::Data::IDataReader::GetSchemaTable","System.Data.IDataReader.IsClosed","System::Data::IDataReader::IsClosed","System.Data.IDataReader.NextResult","System::Data::IDataReader::NextResult","System.Data.IDataReader.Read","System::Data::IDataReader::Read","System.Data.IDataReader.RecordsAffected","System::Data::IDataReader::RecordsAffected"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"70b46a35-f496-2813-0682-7687fc7fd19e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data/IDataReader.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDataReader interface | Microsoft Docs","_op_ogTitle":"IDataReader interface","description":"Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relationa…","toc_asset_id":"_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.IDataReader","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.idatareader","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.idatareader","fileRelativePath":"System.Data.IDataReader.html"},"themesRelativePathToOutputRoot":"_themes/"}