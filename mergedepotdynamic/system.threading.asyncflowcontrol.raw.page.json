{"content":"    \r\n    <h1 id=\"System_Threading_AsyncFlowControl\">\r\n      <span class=\"lang-csharp\">AsyncFlowControl</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the functionality to restore the migration, or flow, of the execution context between threads.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct AsyncFlowControl : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AsyncFlowControl</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An execution context contains all execution-related information for a logical thread. The flow of the execution context to other threads can be prevented by using the <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_SuppressFlow_\" data-linktype=\"relative-path\">SuppressFlow</a> method, which returns an AsyncFlowControl structure. The <a class=\"xref\" href=\"system.threading.asyncflowcontrol#System_Threading_AsyncFlowControl_Undo_\" data-linktype=\"relative-path\">Undo</a> method of the returned AsyncFlowControl structure can be used to undo the flow suppression. The AsyncFlowControl structure must be used on the same thread on which it was created.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified object is equal to the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_Equals_System_Threading_AsyncFlowControl_\" data-linktype=\"self-bookmark\">Equals(AsyncFlowControl)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure is equal to the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a hash code for the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_Undo\" data-linktype=\"self-bookmark\">Undo()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Restores the flow of the execution context between threads.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_op_Equality_System_Threading_AsyncFlowControl_System_Threading_AsyncFlowControl_\" data-linktype=\"self-bookmark\">op_Equality(AsyncFlowControl,AsyncFlowControl)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structures to determine whether they are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_AsyncFlowControl_op_Inequality_System_Threading_AsyncFlowControl_System_Threading_AsyncFlowControl_\" data-linktype=\"self-bookmark\">op_Inequality(AsyncFlowControl,AsyncFlowControl)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structures to determine whether they are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_Dispose\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure is not used on the thread where it was created.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure has already been used to call Dispose or <span class=\"xref\">stem.Threading.AsyncFlowControl.Undo*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified object is equal to the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare with the current structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> is an <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure and is equal to the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_Equals_System_Threading_AsyncFlowControl_\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(AsyncFlowControl)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure is equal to the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Threading.AsyncFlowControl obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure to compare with the current structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> is equal to the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_GetHashCode\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a hash code for the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the current <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_Undo\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_Undo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Undo()</div>        \r\n          </div>\r\n    \r\n            <p>Restores the flow of the execution context between threads.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Undo ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure is not used on the thread where it was created.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure has already been used to call <span class=\"xref\">stem.Threading.AsyncFlowControl.Dispose*</span> or Undo.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_SuppressFlow_\" data-linktype=\"relative-path\">SuppressFlow</a> method returns an <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure that is used to restore the flow.  </p>\n<p> The Undo method must be called only on the <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure returned by its associated <a class=\"xref\" href=\"system.threading.executioncontext#System_Threading_ExecutionContext_SuppressFlow_\" data-linktype=\"relative-path\">SuppressFlow</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_op_Equality_System_Threading_AsyncFlowControl_System_Threading_AsyncFlowControl_\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(AsyncFlowControl,AsyncFlowControl)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structures to determine whether they are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two structures are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_AsyncFlowControl_op_Inequality_System_Threading_AsyncFlowControl_System_Threading_AsyncFlowControl_\">\r\n    \r\n            <a id=\"System_Threading_AsyncFlowControl_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(AsyncFlowControl,AsyncFlowControl)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structures to determine whether they are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.asyncflowcontrol\" data-linktype=\"relative-path\">AsyncFlowControl</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the structures are not equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.AsyncFlowControl.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.AsyncFlowControl.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.Equals\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Threading.AsyncFlowControl.Undo\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"09312fb0-6c52-add4-e0da-520c34b301b3\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\AsyncFlowControl.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the functionality to restore the migration, or flow, of the execution context between threads.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.AsyncFlowControl\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.AsyncFlowControl.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.AsyncFlowControl.yml","open_to_public_contributors":true,"api_name":["System.Threading.AsyncFlowControl","System.Threading.AsyncFlowControl.Dispose","System.Threading.AsyncFlowControl.Equals","System.Threading.AsyncFlowControl.GetHashCode","System.Threading.AsyncFlowControl.op_Equality","System.Threading.AsyncFlowControl.op_op_Equality","System.Threading.AsyncFlowControl.op_Inequality","System.Threading.AsyncFlowControl.op_op_Inequality","System.Threading.AsyncFlowControl.Undo"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.AsyncFlowControl","System::Threading::AsyncFlowControl","System.Threading.AsyncFlowControl.Dispose","System::Threading::AsyncFlowControl::Dispose","System.Threading.AsyncFlowControl.Equals","System::Threading::AsyncFlowControl::Equals","System.Threading.AsyncFlowControl.GetHashCode","System::Threading::AsyncFlowControl::GetHashCode","System.Threading.AsyncFlowControl.op_Equality","System::Threading::AsyncFlowControl::op_Equality","System.Threading.AsyncFlowControl.op_Inequality","System::Threading::AsyncFlowControl::op_Inequality","System.Threading.AsyncFlowControl.Undo","System::Threading::AsyncFlowControl::Undo"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"09312fb0-6c52-add4-e0da-520c34b301b3","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\AsyncFlowControl.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/AsyncFlowControl.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AsyncFlowControl struct | Microsoft Docs","_op_ogTitle":"AsyncFlowControl struct","description":"Provides the functionality to restore the migration, or flow, of the execution context between threads.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.AsyncFlowControl","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.asyncflowcontrol","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.asyncflowcontrol","fileRelativePath":"System.Threading.AsyncFlowControl.html"},"themesRelativePathToOutputRoot":"_themes/"}