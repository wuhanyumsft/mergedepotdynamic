{"content":"    \r\n    <h1 id=\"System_Net_NetworkInformation_TcpStatistics\">\r\n      <span class=\"lang-csharp\">TcpStatistics</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides Transmission Control Protocol (TCP) statistical data.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class TcpStatistics</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TcpStatistics</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Instances of this class are returned by the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties#System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv4Statistics_\" data-linktype=\"relative-path\">GetTcpIPv4Statistics</a> and <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties#System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv6Statistics_\" data-linktype=\"relative-path\">GetTcpIPv6Statistics</a> methods, to give applications access to TCP traffic information.  </p>\n<p> The information in this class correlates to the management information objects described in <a href=\"http://www.ietf.org/rfc/rfc2012.txt\" data-linktype=\"external\">http://www.ietf.org/rfc/rfc2012.txt</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics__ctor\" data-linktype=\"self-bookmark\">TcpStatistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_ConnectionsAccepted\" data-linktype=\"self-bookmark\">ConnectionsAccepted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of accepted Transmission Control Protocol (TCP) connection requests.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_ConnectionsInitiated\" data-linktype=\"self-bookmark\">ConnectionsInitiated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of Transmission Control Protocol (TCP) connection requests made by clients.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_CumulativeConnections\" data-linktype=\"self-bookmark\">CumulativeConnections</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the total number of Transmission Control Protocol (TCP) connections established.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_CurrentConnections\" data-linktype=\"self-bookmark\">CurrentConnections</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of current Transmission Control Protocol (TCP) connections.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_ErrorsReceived\" data-linktype=\"self-bookmark\">ErrorsReceived</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of Transmission Control Protocol (TCP) errors received.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_FailedConnectionAttempts\" data-linktype=\"self-bookmark\">FailedConnectionAttempts</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of failed Transmission Control Protocol (TCP) connection attempts.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_MaximumConnections\" data-linktype=\"self-bookmark\">MaximumConnections</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the maximum number of supported Transmission Control Protocol (TCP) connections.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_MaximumTransmissionTimeout\" data-linktype=\"self-bookmark\">MaximumTransmissionTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the maximum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_MinimumTransmissionTimeout\" data-linktype=\"self-bookmark\">MinimumTransmissionTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the minimum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_ResetConnections\" data-linktype=\"self-bookmark\">ResetConnections</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of RST packets received by Transmission Control Protocol (TCP) connections.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_ResetsSent\" data-linktype=\"self-bookmark\">ResetsSent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments sent with the reset flag set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_SegmentsReceived\" data-linktype=\"self-bookmark\">SegmentsReceived</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments received.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_SegmentsResent\" data-linktype=\"self-bookmark\">SegmentsResent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments re-sent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_TcpStatistics_SegmentsSent\" data-linktype=\"self-bookmark\">SegmentsSent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments sent.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics__ctor\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TcpStatistics()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected TcpStatistics ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor can be called only by classes that derive from the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_ConnectionsAccepted\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_ConnectionsAccepted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionsAccepted</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of accepted Transmission Control Protocol (TCP) connection requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long ConnectionsAccepted { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP connection requests accepted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IETF RFC 2012 formally defines this value as, &quot;The number of times TCP connections have made a direct transition to the SYN-RCVD state from the LISTEN state.&quot;</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_ConnectionsInitiated\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_ConnectionsInitiated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionsInitiated</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of Transmission Control Protocol (TCP) connection requests made by clients.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long ConnectionsInitiated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP connections initiated by clients.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IETF RFC 2012 formally defines this value as, &quot;The number of times TCP connections have made a direct transition to the SYN-SENT state from the CLOSED state.&quot;</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_CumulativeConnections\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_CumulativeConnections_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CumulativeConnections</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the total number of Transmission Control Protocol (TCP) connections established.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long CumulativeConnections { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of connections established.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_CurrentConnections\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_CurrentConnections_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentConnections</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of current Transmission Control Protocol (TCP) connections.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long CurrentConnections { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of current TCP connections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IETF RFC 2012 formally defines this value as, &quot;The number of TCP connections for which the current state is either ESTABLISHED or CLOSE-WAIT.&quot;</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_ErrorsReceived\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_ErrorsReceived_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorsReceived</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of Transmission Control Protocol (TCP) errors received.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long ErrorsReceived { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP errors received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_FailedConnectionAttempts\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_FailedConnectionAttempts_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FailedConnectionAttempts</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of failed Transmission Control Protocol (TCP) connection attempts.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long FailedConnectionAttempts { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of failed TCP connection attempts.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IETF RFC 2012 formally defines this value as, &quot;The number of times TCP connections have made a direct transition to the CLOSED state from either the SYN-SENT state or the SYN-RCVD state, plus the number of times TCP connections have made a direct transition to the LISTEN state from the SYN-RCVD state.&quot;</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_MaximumConnections\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_MaximumConnections_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximumConnections</div>        \r\n          </div>\r\n    \r\n            <p>Gets the maximum number of supported Transmission Control Protocol (TCP) connections.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long MaximumConnections { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP connections that can be supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the maximum number of connections is dynamic, this property returns -1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays time-out and maximum connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#5\">        public static void ShowTcpTimeouts()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MinimumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MaximumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum connections ............. : {0}&quot;, \n                tcpstat.MaximumConnections);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#5\">    Public Shared Sub ShowTcpTimeouts() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, tcpstat.MinimumTransmissionTimeout)\n        Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, tcpstat.MaximumTransmissionTimeout)\n        Console.WriteLine(&quot;  Maximum connections ............. : {0}&quot;, tcpstat.MaximumConnections)\n    \n    End Sub &#39;ShowTcpTimeouts\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#5\">void ShowTcpTimeouts()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Minimum Transmission Timeout............. : {0}&quot;, \n      tcpstat-&gt;MinimumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum Transmission Timeout............. : {0}&quot;, \n      tcpstat-&gt;MaximumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum connections ............. : {0}&quot;, \n      tcpstat-&gt;MaximumConnections );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_MaximumTransmissionTimeout\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_MaximumTransmissionTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximumTransmissionTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets the maximum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long MaximumTransmissionTimeout { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the maximum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TCP starts a retransmission timer when each outbound segment is passed to the network layer (IP). If no acknowledgement is received for the data in the segment before the timer expires, the segment is retransmitted. The timer can be set to any value between the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics#System_Net_NetworkInformation_TcpStatistics_MinimumTransmissionTimeout_\" data-linktype=\"relative-path\">MinimumTransmissionTimeout</a> value and the MaximumTransmissionTimeout value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays time-out and maximum connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#5\">        public static void ShowTcpTimeouts()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MinimumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MaximumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum connections ............. : {0}&quot;, \n                tcpstat.MaximumConnections);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#5\">    Public Shared Sub ShowTcpTimeouts() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, tcpstat.MinimumTransmissionTimeout)\n        Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, tcpstat.MaximumTransmissionTimeout)\n        Console.WriteLine(&quot;  Maximum connections ............. : {0}&quot;, tcpstat.MaximumConnections)\n    \n    End Sub &#39;ShowTcpTimeouts\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#5\">void ShowTcpTimeouts()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Minimum Transmission Timeout............. : {0}&quot;, \n      tcpstat-&gt;MinimumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum Transmission Timeout............. : {0}&quot;, \n      tcpstat-&gt;MaximumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum connections ............. : {0}&quot;, \n      tcpstat-&gt;MaximumConnections );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_MinimumTransmissionTimeout\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_MinimumTransmissionTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinimumTransmissionTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets the minimum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long MinimumTransmissionTimeout { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the minimum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TCP starts a retransmission timer when each outbound segment is passed to the network layer (IP). If no acknowledgement is received for the data in the segment before the timer expires, the segment is retransmitted. The timer The timer can be set to any value between the MinimumTransmissionTimeout value and the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics#System_Net_NetworkInformation_TcpStatistics_MaximumTransmissionTimeout_\" data-linktype=\"relative-path\">MaximumTransmissionTimeout</a> value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays time-out and maximum connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#5\">        public static void ShowTcpTimeouts()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MinimumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MaximumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum connections ............. : {0}&quot;, \n                tcpstat.MaximumConnections);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#5\">    Public Shared Sub ShowTcpTimeouts() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, tcpstat.MinimumTransmissionTimeout)\n        Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, tcpstat.MaximumTransmissionTimeout)\n        Console.WriteLine(&quot;  Maximum connections ............. : {0}&quot;, tcpstat.MaximumConnections)\n    \n    End Sub &#39;ShowTcpTimeouts\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#5\">void ShowTcpTimeouts()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Minimum Transmission Timeout............. : {0}&quot;, \n      tcpstat-&gt;MinimumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum Transmission Timeout............. : {0}&quot;, \n      tcpstat-&gt;MaximumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum connections ............. : {0}&quot;, \n      tcpstat-&gt;MaximumConnections );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_ResetConnections\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_ResetConnections_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetConnections</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of RST packets received by Transmission Control Protocol (TCP) connections.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long ResetConnections { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of reset TCP connections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IETF RFC 2012 formally defines this value as, &quot;The number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE-WAIT state.&quot;</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays connection information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#6\">        public static void ShowTcpConnectionStatistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n                tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n            Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, \n                tcpstat.ErrorsReceived);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#6\">    Public Shared Sub ShowTcpConnectionStatistics() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Connection Data:&quot;)\n        Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, tcpstat.CurrentConnections)\n        Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, tcpstat.CumulativeConnections)\n        Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, tcpstat.ConnectionsInitiated)\n        Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, tcpstat.ConnectionsAccepted)\n        Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, tcpstat.FailedConnectionAttempts)\n        Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, tcpstat.ResetConnections)\n        Console.WriteLine(&quot;      Errors .............................. : {0}&quot;, tcpstat.ErrorsReceived)\n    \n    End Sub &#39;ShowTcpConnectionStatistics\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#6\">void ShowTcpConnectionStatistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;, \n       tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;, \n       tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;, \n       tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;, \n       tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;, \n       tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;, \n       tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;      Errors .............................. : {0}&quot;, \n       tcpstat-&gt;ErrorsReceived );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_ResetsSent\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_ResetsSent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetsSent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments sent with the reset flag set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long ResetsSent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP segments sent with the reset flag set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TCP resets are specified using the reset (RST) control bit in the TCP header.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays segment information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#7\">        public static void ShowTcpSegmentData()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Segment Data:&quot;);\n            Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, \n                tcpstat.SegmentsReceived);\n            Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, \n                tcpstat.SegmentsSent);\n            Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, \n                tcpstat.SegmentsResent);\n            Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, \n                tcpstat.ResetsSent);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#7\">    Public Shared Sub ShowTcpSegmentData() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Segment Data:&quot;)\n        Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, tcpstat.SegmentsReceived)\n        Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, tcpstat.SegmentsSent)\n        Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, tcpstat.SegmentsResent)\n        Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, tcpstat.ResetsSent)\n    \n    End Sub &#39;ShowTcpSegmentData\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#7\">void ShowTcpSegmentData()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Segment Data:&quot; );\n   Console::WriteLine( &quot;      Received  ........................... : {0}&quot;, \n      tcpstat-&gt;SegmentsReceived );\n   Console::WriteLine( &quot;      Sent ................................ : {0}&quot;, \n      tcpstat-&gt;SegmentsSent );\n   Console::WriteLine( &quot;      Retransmitted ....................... : {0}&quot;, \n      tcpstat-&gt;SegmentsResent );\n   Console::WriteLine( &quot;      Resent with reset ................... : {0}&quot;, \n      tcpstat-&gt;ResetsSent );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_SegmentsReceived\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_SegmentsReceived_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SegmentsReceived</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments received.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long SegmentsReceived { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP segments received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This data includes segments with errors and segments received on currently established connections.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays segment information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#7\">        public static void ShowTcpSegmentData()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Segment Data:&quot;);\n            Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, \n                tcpstat.SegmentsReceived);\n            Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, \n                tcpstat.SegmentsSent);\n            Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, \n                tcpstat.SegmentsResent);\n            Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, \n                tcpstat.ResetsSent);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#7\">    Public Shared Sub ShowTcpSegmentData() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Segment Data:&quot;)\n        Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, tcpstat.SegmentsReceived)\n        Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, tcpstat.SegmentsSent)\n        Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, tcpstat.SegmentsResent)\n        Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, tcpstat.ResetsSent)\n    \n    End Sub &#39;ShowTcpSegmentData\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#7\">void ShowTcpSegmentData()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Segment Data:&quot; );\n   Console::WriteLine( &quot;      Received  ........................... : {0}&quot;, \n      tcpstat-&gt;SegmentsReceived );\n   Console::WriteLine( &quot;      Sent ................................ : {0}&quot;, \n      tcpstat-&gt;SegmentsSent );\n   Console::WriteLine( &quot;      Retransmitted ....................... : {0}&quot;, \n      tcpstat-&gt;SegmentsResent );\n   Console::WriteLine( &quot;      Resent with reset ................... : {0}&quot;, \n      tcpstat-&gt;ResetsSent );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_SegmentsResent\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_SegmentsResent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SegmentsResent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments re-sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long SegmentsResent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP segments retransmitted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TCP segments that are not acknowledged as being received at the destination are retransmitted.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays segment information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#7\">        public static void ShowTcpSegmentData()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Segment Data:&quot;);\n            Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, \n                tcpstat.SegmentsReceived);\n            Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, \n                tcpstat.SegmentsSent);\n            Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, \n                tcpstat.SegmentsResent);\n            Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, \n                tcpstat.ResetsSent);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#7\">    Public Shared Sub ShowTcpSegmentData() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Segment Data:&quot;)\n        Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, tcpstat.SegmentsReceived)\n        Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, tcpstat.SegmentsSent)\n        Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, tcpstat.SegmentsResent)\n        Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, tcpstat.ResetsSent)\n    \n    End Sub &#39;ShowTcpSegmentData\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#7\">void ShowTcpSegmentData()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Segment Data:&quot; );\n   Console::WriteLine( &quot;      Received  ........................... : {0}&quot;, \n      tcpstat-&gt;SegmentsReceived );\n   Console::WriteLine( &quot;      Sent ................................ : {0}&quot;, \n      tcpstat-&gt;SegmentsSent );\n   Console::WriteLine( &quot;      Retransmitted ....................... : {0}&quot;, \n      tcpstat-&gt;SegmentsResent );\n   Console::WriteLine( &quot;      Resent with reset ................... : {0}&quot;, \n      tcpstat-&gt;ResetsSent );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_TcpStatistics_SegmentsSent\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_TcpStatistics_SegmentsSent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SegmentsSent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of Transmission Control Protocol (TCP) segments sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract long SegmentsSent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the total number of TCP segments sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This data includes segments sent for currently established connections but does not include segments containing only retransmitted octets.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays segment information.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLNetInfo2#7\">        public static void ShowTcpSegmentData()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = properties.GetTcpIPv4Statistics();\n            \n            Console.WriteLine(&quot;  Segment Data:&quot;);\n            Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, \n                tcpstat.SegmentsReceived);\n            Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, \n                tcpstat.SegmentsSent);\n            Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, \n                tcpstat.SegmentsResent);\n            Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, \n                tcpstat.ResetsSent);\n            Console.WriteLine();    \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLNetInfo2#7\">    Public Shared Sub ShowTcpSegmentData() \n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Dim tcpstat As TcpStatistics = properties.GetTcpIPv4Statistics()\n        \n        Console.WriteLine(&quot;  Segment Data:&quot;)\n        Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, tcpstat.SegmentsReceived)\n        Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, tcpstat.SegmentsSent)\n        Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, tcpstat.SegmentsResent)\n        Console.WriteLine(&quot;      Resent with reset ................... : {0}&quot;, tcpstat.ResetsSent)\n    \n    End Sub &#39;ShowTcpSegmentData\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLNetInfo2#7\">void ShowTcpSegmentData()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = properties-&gt;GetTcpIPv4Statistics();\n   Console::WriteLine( &quot;  Segment Data:&quot; );\n   Console::WriteLine( &quot;      Received  ........................... : {0}&quot;, \n      tcpstat-&gt;SegmentsReceived );\n   Console::WriteLine( &quot;      Sent ................................ : {0}&quot;, \n      tcpstat-&gt;SegmentsSent );\n   Console::WriteLine( &quot;      Retransmitted ....................... : {0}&quot;, \n      tcpstat-&gt;SegmentsResent );\n   Console::WriteLine( &quot;      Resent with reset ................... : {0}&quot;, \n      tcpstat-&gt;ResetsSent );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.TcpStatistics.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.TcpStatistics.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.CumulativeConnections\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.CurrentConnections\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.ErrorsReceived\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.MaximumConnections\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.ResetConnections\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.ResetsSent\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.SegmentsReceived\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.SegmentsResent\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.TcpStatistics.SegmentsSent\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"94f58d45-7d3b-1cce-f225-87f793e162ad\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides Transmission Control Protocol (TCP) statistical data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.NetworkInformation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkInformation.TcpStatistics\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.TcpStatistics.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.TcpStatistics.yml","open_to_public_contributors":true,"api_name":["System.Net.NetworkInformation.TcpStatistics","System.Net.NetworkInformation.TcpStatistics..ctor","System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted","System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated","System.Net.NetworkInformation.TcpStatistics.CumulativeConnections","System.Net.NetworkInformation.TcpStatistics.CurrentConnections","System.Net.NetworkInformation.TcpStatistics.ErrorsReceived","System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts","System.Net.NetworkInformation.TcpStatistics.MaximumConnections","System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout","System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout","System.Net.NetworkInformation.TcpStatistics.ResetConnections","System.Net.NetworkInformation.TcpStatistics.ResetsSent","System.Net.NetworkInformation.TcpStatistics.SegmentsReceived","System.Net.NetworkInformation.TcpStatistics.SegmentsResent","System.Net.NetworkInformation.TcpStatistics.SegmentsSent"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkInformation.TcpStatistics","System::Net::NetworkInformation::TcpStatistics","System.Net.NetworkInformation.TcpStatistics.#ctor","System::Net::NetworkInformation::TcpStatistics::#ctor","System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted","System::Net::NetworkInformation::TcpStatistics::ConnectionsAccepted","System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated","System::Net::NetworkInformation::TcpStatistics::ConnectionsInitiated","System.Net.NetworkInformation.TcpStatistics.CumulativeConnections","System::Net::NetworkInformation::TcpStatistics::CumulativeConnections","System.Net.NetworkInformation.TcpStatistics.CurrentConnections","System::Net::NetworkInformation::TcpStatistics::CurrentConnections","System.Net.NetworkInformation.TcpStatistics.ErrorsReceived","System::Net::NetworkInformation::TcpStatistics::ErrorsReceived","System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts","System::Net::NetworkInformation::TcpStatistics::FailedConnectionAttempts","System.Net.NetworkInformation.TcpStatistics.MaximumConnections","System::Net::NetworkInformation::TcpStatistics::MaximumConnections","System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout","System::Net::NetworkInformation::TcpStatistics::MaximumTransmissionTimeout","System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout","System::Net::NetworkInformation::TcpStatistics::MinimumTransmissionTimeout","System.Net.NetworkInformation.TcpStatistics.ResetConnections","System::Net::NetworkInformation::TcpStatistics::ResetConnections","System.Net.NetworkInformation.TcpStatistics.ResetsSent","System::Net::NetworkInformation::TcpStatistics::ResetsSent","System.Net.NetworkInformation.TcpStatistics.SegmentsReceived","System::Net::NetworkInformation::TcpStatistics::SegmentsReceived","System.Net.NetworkInformation.TcpStatistics.SegmentsResent","System::Net::NetworkInformation::TcpStatistics::SegmentsResent","System.Net.NetworkInformation.TcpStatistics.SegmentsSent","System::Net::NetworkInformation::TcpStatistics::SegmentsSent"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"94f58d45-7d3b-1cce-f225-87f793e162ad","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.NetworkInformation/TcpStatistics.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TcpStatistics class | Microsoft Docs","_op_ogTitle":"TcpStatistics class","description":"Provides Transmission Control Protocol (TCP) statistical data.\n","toc_asset_id":"_splitted/System.Net.NetworkInformation/toc.json","toc_rel":"_splitted/System.Net.NetworkInformation/toc.json","source_url":"","ms.assetid":"System.Net.NetworkInformation.TcpStatistics","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.tcpstatistics","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.tcpstatistics","fileRelativePath":"System.Net.NetworkInformation.TcpStatistics.html"},"themesRelativePathToOutputRoot":"_themes/"}