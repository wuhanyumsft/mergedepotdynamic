{"content":"    \r\n    <h1 id=\"System_Drawing_Drawing2D_Blend\">\r\n      <span class=\"lang-csharp\">Blend</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a blend pattern for a <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> object. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Blend</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Blend</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Gradients are commonly used to smoothly shade the interiors of shapes. A blend pattern is defined by two arrays (<a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Factors_\" data-linktype=\"relative-path\">Factors</a> and <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Positions_\" data-linktype=\"relative-path\">Positions</a>) that each contain the same number of elements. Each element of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Positions_\" data-linktype=\"relative-path\">Positions</a> array represents a proportion of the distance along the gradient line. Each element of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Factors_\" data-linktype=\"relative-path\">Factors</a> array represents the proportion of the starting and ending colors in the gradient blend at the position along the gradient line represented by the corresponding element in the <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Positions_\" data-linktype=\"relative-path\">Positions</a> array.  </p>\n<p> For example, if corresponding elements of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Positions_\" data-linktype=\"relative-path\">Positions</a> and <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Factors_\" data-linktype=\"relative-path\">Factors</a> arrays are 0.2 and 0.3, respectively, for a linear gradient from blue to red along a 100-pixel line, the color 20 pixels along that line (20 percent of the distance) consists of 30 percent blue and 70 percent red.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Blend__ctor\" data-linktype=\"self-bookmark\">Blend()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Blend__ctor_System_Int32_\" data-linktype=\"self-bookmark\">Blend(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class with the specified number of factors and positions.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Blend_Factors\" data-linktype=\"self-bookmark\">Factors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an array of blend factors for the gradient.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Blend_Positions\" data-linktype=\"self-bookmark\">Positions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an array of blend positions for the gradient.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Blend__ctor\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Blend__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Blend()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Blend ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is intended to be used in a Windows Forms environment. It demonstrates how to use the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class in conjunction with the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> class to draw an ellipse to screen that has its colors blended. The ellipse is blue on the left, blends to red in the center, and blends back to blue on the right. This is accomplished through the settings in the <code>myFactors</code> and <code>myPositions</code> arrays used in the <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Factors_\" data-linktype=\"relative-path\">Factors</a> and <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Positions_\" data-linktype=\"relative-path\">Positions</a> properties. Note that the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> property of the <a class=\"xref\" href=\"system.drawing.drawing2d.lineargradientbrush\" data-linktype=\"relative-path\">LinearGradientBrush</a> object named <code>lgBrush2</code> must be made equal to the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> object <code>myBlend</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMisc#3\">    Public Sub BlendConstExample(ByVal e As PaintEventArgs)\n\n        &#39; Draw ellipse using Blend.\n        Dim startPoint2 As New Point(20, 110)\n        Dim endPoint2 As New Point(140, 110)\n        Dim myFactors As Single() = {0.2F, 0.4F, 0.8F, 0.8F, 0.4F, 0.2F}\n        Dim myPositions As Single() = {0.0F, 0.2F, 0.4F, 0.6F, 0.8F, 1.0F}\n        Dim myBlend As New Blend\n        myBlend.Factors = myFactors\n        myBlend.Positions = myPositions\n        Dim lgBrush2 As New LinearGradientBrush(startPoint2, endPoint2, _\n        Color.Blue, Color.Red)\n        lgBrush2.Blend = myBlend\n        Dim ellipseRect2 As New Rectangle(20, 110, 120, 80)\n        e.Graphics.FillEllipse(lgBrush2, ellipseRect2)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMisc#3\">        public void BlendConstExample(PaintEventArgs e)\n        {\n                     \n            //Draw ellipse using Blend.\n            Point startPoint2 = new Point(20, 110);\n            Point endPoint2 = new Point(140, 110);\n            float[] myFactors = {.2f,.4f,.8f,.8f,.4f,.2f};\n            float[] myPositions = {0.0f,.2f,.4f,.6f,.8f,1.0f};\n            Blend myBlend = new Blend();\n            myBlend.Factors = myFactors;\n            myBlend.Positions = myPositions;\n            LinearGradientBrush lgBrush2 = new LinearGradientBrush(\n                startPoint2,\n                endPoint2,\n                Color.Blue,\n                Color.Red);\n            lgBrush2.Blend = myBlend;\n            Rectangle ellipseRect2 = new Rectangle(20, 110, 120, 80);\n            e.Graphics.FillEllipse(lgBrush2, ellipseRect2);\n                     \n            // End example.\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMisc#3\">public:\n   void BlendConstExample( PaintEventArgs^ e )\n   {\n      //Draw ellipse using Blend.\n      Point startPoint2 = Point(20,110);\n      Point endPoint2 = Point(140,110);\n      array&lt;Single&gt;^myFactors = {.2f,.4f,.8f,.8f,.4f,.2f};\n      array&lt;Single&gt;^myPositions = {0.0f,.2f,.4f,.6f,.8f,1.0f};\n      Blend^ myBlend = gcnew Blend;\n      myBlend-&gt;Factors = myFactors;\n      myBlend-&gt;Positions = myPositions;\n      LinearGradientBrush^ lgBrush2 =\n            gcnew LinearGradientBrush( startPoint2,endPoint2,Color::Blue,Color::Red );\n      lgBrush2-&gt;Blend = myBlend;\n      Rectangle ellipseRect2 = Rectangle(20,110,120,80);\n      e-&gt;Graphics-&gt;FillEllipse( lgBrush2, ellipseRect2 );\n\n      // End example.\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Blend__ctor_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Blend__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Blend(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class with the specified number of factors and positions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Blend (int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of elements in the <span class=\"xref\">stem.Drawing.Drawing2D.Blend.Factors*</span> and <span class=\"xref\">stem.Drawing.Drawing2D.Blend.Positions*</span> arrays.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend__ctor_\" data-linktype=\"relative-path\">Blend</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Blend_Factors\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Blend_Factors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Factors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an array of blend factors for the gradient.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float[] Factors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>[]</div>\r\n                  </div>\r\n                  <p>An array of blend factors that specify the percentages of the starting color and the ending color to be used at the corresponding position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, the elements of this array are a value from 0.0f through 1.0f. These elements specify the percentages of the ending color and the starting color to use at the corresponding blend position. For example, a value of 0.2 indicates that at the specified position, the blended color is composed of 20 percent of the ending gradient color and 80 percent of the starting gradient color.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class by setting the Factors and <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Positions_\" data-linktype=\"relative-path\">Positions</a> properties. This example is designed to be used with Windows Forms. Paste the code into a form that imports the <a class=\"xref\" href=\"system.drawing.drawing2d\" data-linktype=\"relative-path\">System.Drawing.Drawing2D</a> namespace. Handle the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>DemonstrateBlend</code> method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Misc2#5\">    private void DemonstrateBlend(PaintEventArgs e)\n    {\n        Blend blend1 = new Blend(9);\n\n        // Set the values in the Factors array to be all green, \n        // go to all blue, and then go back to green.\n        blend1.Factors = new float[]{0.0F, 0.2F, 0.5F, 0.7F, 1.0F, \n                                        0.7F, 0.5F, 0.2F, 0.0F};\n\n        // Set the positions.\n        blend1.Positions = \n            new float[]{0.0F, 0.1F, 0.3F, 0.4F, 0.5F, 0.6F, \n            0.7F, 0.8F, 1.0F};\n\n        // Declare a rectangle to draw the Blend in.\n        Rectangle rectangle1 = new Rectangle(10, 10, 120, 100);\n\n        // Create a new LinearGradientBrush using the rectangle, \n        // green and blue. and 90-degree angle.\n        LinearGradientBrush brush1 = \n            new LinearGradientBrush(rectangle1, Color.LightGreen, \n            Color.Blue, 90, true);\n\n        // Set the Blend property on the brush to the custom blend.\n        brush1.Blend = blend1;\n\n        // Fill in an ellipse with the brush.\n        e.Graphics.FillEllipse(brush1, rectangle1);\n\n        // Dispose of the custom brush.\n        brush1.Dispose();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Misc2#5\">    Private Sub DemonstrateBlend(ByVal e As PaintEventArgs)\n        Dim blend1 As New Blend(9)\n\n        &#39; Set the values in the Factors array to be all green, \n        &#39; go to all blue, and then go back to green.\n        blend1.Factors = New Single() {0.0F, 0.2F, 0.5F, 0.7F, 1.0F, _\n            0.7F, 0.5F, 0.2F, 0.0F}\n\n        &#39; Set the positions.\n        blend1.Positions = New Single() {0.0F, 0.1F, 0.3F, 0.4F, 0.5F, _\n            0.6F, 0.7F, 0.8F, 1.0F}\n\n        &#39; Declare a rectangle to draw the Blend in.\n        Dim rectangle1 As New Rectangle(10, 10, 120, 100)\n\n        &#39; Create a new LinearGradientBrush using the rectangle, \n        &#39; green and blue. and 90-degree angle.\n        Dim brush1 As New LinearGradientBrush(rectangle1, _\n            Color.LightGreen, Color.Blue, 90, True)\n\n        &#39; Set the Blend property on the brush to the custom blend.\n        brush1.Blend = blend1\n\n        &#39; Fill in an ellipse with the brush.\n        e.Graphics.FillEllipse(brush1, rectangle1)\n\n        &#39; Dispose of the custom brush.\n        brush1.Dispose()\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Misc2#5\">private:\n   void DemonstrateBlend( PaintEventArgs^ e )\n   {\n      Blend^ blend1 = gcnew Blend( 9 );\n\n      // Set the values in the Factors array to be all green, \n      // go to all blue, and then go back to green.\n      array&lt;Single&gt;^temp0 = {0.0F,0.2F,0.5F,0.7F,1.0F,0.7F,0.5F,0.2F,0.0F};\n      blend1-&gt;Factors = temp0;\n\n      // Set the positions.\n      array&lt;Single&gt;^temp1 = {0.0F,0.1F,0.3F,0.4F,0.5F,0.6F,0.7F,0.8F,1.0F};\n      blend1-&gt;Positions = temp1;\n\n      // Declare a rectangle to draw the Blend in.\n      Rectangle rectangle1 = Rectangle(10,10,120,100);\n\n      // Create a new LinearGradientBrush using the rectangle, \n      // green and blue. and 90-degree angle.\n      LinearGradientBrush^ brush1 = gcnew LinearGradientBrush( rectangle1,Color::LightGreen,Color::Blue,90,true );\n\n      // Set the Blend property on the brush to the custom blend.\n      brush1-&gt;Blend = blend1;\n\n      // Fill in an ellipse with the brush.\n      e-&gt;Graphics-&gt;FillEllipse( brush1, rectangle1 );\n\n      // Dispose of the custom brush.\n      delete brush1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Blend_Positions\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Blend_Positions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Positions</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an array of blend positions for the gradient.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float[] Positions { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>[]</div>\r\n                  </div>\r\n                  <p>An array of blend positions that specify the percentages of distance along the gradient line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f. The first element of the array must be 0.0f, and the last element must be 1.0f.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.drawing2d.blend\" data-linktype=\"relative-path\">Blend</a> class by setting the <a class=\"xref\" href=\"system.drawing.drawing2d.blend#System_Drawing_Drawing2D_Blend_Factors_\" data-linktype=\"relative-path\">Factors</a> and Positions properties. This example is designed to be used with Windows Forms. Paste the code into a form that imports the <a class=\"xref\" href=\"system.drawing.drawing2d\" data-linktype=\"relative-path\">System.Drawing.Drawing2D</a> namespace. Handle the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call the <code>DemonstrateBlend</code> method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Misc2#5\">    private void DemonstrateBlend(PaintEventArgs e)\n    {\n        Blend blend1 = new Blend(9);\n\n        // Set the values in the Factors array to be all green, \n        // go to all blue, and then go back to green.\n        blend1.Factors = new float[]{0.0F, 0.2F, 0.5F, 0.7F, 1.0F, \n                                        0.7F, 0.5F, 0.2F, 0.0F};\n\n        // Set the positions.\n        blend1.Positions = \n            new float[]{0.0F, 0.1F, 0.3F, 0.4F, 0.5F, 0.6F, \n            0.7F, 0.8F, 1.0F};\n\n        // Declare a rectangle to draw the Blend in.\n        Rectangle rectangle1 = new Rectangle(10, 10, 120, 100);\n\n        // Create a new LinearGradientBrush using the rectangle, \n        // green and blue. and 90-degree angle.\n        LinearGradientBrush brush1 = \n            new LinearGradientBrush(rectangle1, Color.LightGreen, \n            Color.Blue, 90, true);\n\n        // Set the Blend property on the brush to the custom blend.\n        brush1.Blend = blend1;\n\n        // Fill in an ellipse with the brush.\n        e.Graphics.FillEllipse(brush1, rectangle1);\n\n        // Dispose of the custom brush.\n        brush1.Dispose();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Misc2#5\">    Private Sub DemonstrateBlend(ByVal e As PaintEventArgs)\n        Dim blend1 As New Blend(9)\n\n        &#39; Set the values in the Factors array to be all green, \n        &#39; go to all blue, and then go back to green.\n        blend1.Factors = New Single() {0.0F, 0.2F, 0.5F, 0.7F, 1.0F, _\n            0.7F, 0.5F, 0.2F, 0.0F}\n\n        &#39; Set the positions.\n        blend1.Positions = New Single() {0.0F, 0.1F, 0.3F, 0.4F, 0.5F, _\n            0.6F, 0.7F, 0.8F, 1.0F}\n\n        &#39; Declare a rectangle to draw the Blend in.\n        Dim rectangle1 As New Rectangle(10, 10, 120, 100)\n\n        &#39; Create a new LinearGradientBrush using the rectangle, \n        &#39; green and blue. and 90-degree angle.\n        Dim brush1 As New LinearGradientBrush(rectangle1, _\n            Color.LightGreen, Color.Blue, 90, True)\n\n        &#39; Set the Blend property on the brush to the custom blend.\n        brush1.Blend = blend1\n\n        &#39; Fill in an ellipse with the brush.\n        e.Graphics.FillEllipse(brush1, rectangle1)\n\n        &#39; Dispose of the custom brush.\n        brush1.Dispose()\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Misc2#5\">private:\n   void DemonstrateBlend( PaintEventArgs^ e )\n   {\n      Blend^ blend1 = gcnew Blend( 9 );\n\n      // Set the values in the Factors array to be all green, \n      // go to all blue, and then go back to green.\n      array&lt;Single&gt;^temp0 = {0.0F,0.2F,0.5F,0.7F,1.0F,0.7F,0.5F,0.2F,0.0F};\n      blend1-&gt;Factors = temp0;\n\n      // Set the positions.\n      array&lt;Single&gt;^temp1 = {0.0F,0.1F,0.3F,0.4F,0.5F,0.6F,0.7F,0.8F,1.0F};\n      blend1-&gt;Positions = temp1;\n\n      // Declare a rectangle to draw the Blend in.\n      Rectangle rectangle1 = Rectangle(10,10,120,100);\n\n      // Create a new LinearGradientBrush using the rectangle, \n      // green and blue. and 90-degree angle.\n      LinearGradientBrush^ brush1 = gcnew LinearGradientBrush( rectangle1,Color::LightGreen,Color::Blue,90,true );\n\n      // Set the Blend property on the brush to the custom blend.\n      brush1-&gt;Blend = blend1;\n\n      // Fill in an ellipse with the brush.\n      e-&gt;Graphics-&gt;FillEllipse( brush1, rectangle1 );\n\n      // Dispose of the custom brush.\n      delete brush1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.Blend.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.Blend.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Blend\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Blend..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Blend.Factors\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Blend.Positions\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a8300366-da8f-d528-c816-d52c3460f9d3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a blend pattern for a  object. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Drawing2D/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Drawing2D.Blend\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.Blend.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.Blend.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Drawing2D.Blend","System.Drawing.Drawing2D.Blend..ctor","System.Drawing.Drawing2D.Blend.Factors","System.Drawing.Drawing2D.Blend.Positions"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Drawing2D.Blend","System::Drawing::Drawing2D::Blend","System.Drawing.Drawing2D.Blend.#ctor","System::Drawing::Drawing2D::Blend::#ctor","System.Drawing.Drawing2D.Blend.Factors","System::Drawing::Drawing2D::Blend::Factors","System.Drawing.Drawing2D.Blend.Positions","System::Drawing::Drawing2D::Blend::Positions"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a8300366-da8f-d528-c816-d52c3460f9d3","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Drawing2D/Blend.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Blend class | Microsoft Docs","_op_ogTitle":"Blend class","description":"Defines a blend pattern for a  object. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing.Drawing2D/toc.json","toc_rel":"_splitted/System.Drawing.Drawing2D/toc.json","source_url":"","ms.assetid":"System.Drawing.Drawing2D.Blend","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.blend","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.blend","fileRelativePath":"System.Drawing.Drawing2D.Blend.html"},"themesRelativePathToOutputRoot":"_themes/"}