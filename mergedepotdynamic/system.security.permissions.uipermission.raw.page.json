{"content":"    \r\n    <h1 id=\"System_Security_Permissions_UIPermission\">\r\n      <span class=\"lang-csharp\">UIPermission</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class UIPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission\" data-linktype=\"relative-path\">System.Security.CodeAccessPermission</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UIPermission</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert\" data-linktype=\"relative-path\">Assert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Demand\" data-linktype=\"relative-path\">Demand()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny\" data-linktype=\"relative-path\">Deny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_PermitOnly\" data-linktype=\"relative-path\">PermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAll\" data-linktype=\"relative-path\">RevertAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAssert\" data-linktype=\"relative-path\">RevertAssert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertDeny\" data-linktype=\"relative-path\">RevertDeny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertPermitOnly\" data-linktype=\"relative-path\">RevertPermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Drawing and user input events in windows are user interfaces.  </p>\n<p> The permission to use windows can be one of the following: unrestricted, limited to <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a>, only <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a>, or no window drawing or user input event access allowed. <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> and <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> are restricted in title and size to prevent possible spoofing by potentially harmful code.  </p>\n<p> The permission to use the Clipboard can be one of the following: unrestricted, write-only, or no Clipboard access allowed. The paste limitation prevents potentially harmful applications from taking data from the Clipboard without the user&#39;s consent, while still allowing the cut, copy, and paste operations when initiated by the user through keyboard commands.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_PermissionState_\" data-linktype=\"self-bookmark\">UIPermission(PermissionState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with either fully restricted or unrestricted access, as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_UIPermissionClipboard_\" data-linktype=\"self-bookmark\">UIPermission(UIPermissionClipboard)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with the permissions for the Clipboard, and no access to windows.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_UIPermissionWindow_\" data-linktype=\"self-bookmark\">UIPermission(UIPermissionWindow)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with the permissions for windows, and no access to the Clipboard.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_UIPermissionWindow_System_Security_Permissions_UIPermissionClipboard_\" data-linktype=\"self-bookmark\">UIPermission(UIPermissionWindow,UIPermissionClipboard)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with the specified permissions for windows and the Clipboard.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_Clipboard\" data-linktype=\"self-bookmark\">Clipboard</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the Clipboard access represented by the permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_Window\" data-linktype=\"self-bookmark\">Window</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the window access represented by the permission.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_Copy\" data-linktype=\"self-bookmark\">Copy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns an identical copy of the current permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_FromXml_System_Security_SecurityElement_\" data-linktype=\"self-bookmark\">FromXml(SecurityElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reconstructs a permission with a specified state from an XML encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_Intersect_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Intersect(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a permission that is the intersection of the current permission and the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_IsSubsetOf_System_Security_IPermission_\" data-linktype=\"self-bookmark\">IsSubsetOf(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current permission is a subset of the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_IsUnrestricted\" data-linktype=\"self-bookmark\">IsUnrestricted()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether the current permission is unrestricted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_ToXml\" data-linktype=\"self-bookmark\">ToXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an XML encoding of the permission and its current state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_UIPermission_Union_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Union(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a permission that is the union of the permission and the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_PermissionState_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UIPermission(PermissionState)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with either fully restricted or unrestricted access, as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UIPermission (System.Security.Permissions.PermissionState state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>state</code> parameter is not a valid <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates either the fully restricted (<code>None</code>) or the <code>Unrestricted</code> form of the permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#7\">        UIPermission uiPerm2 = new UIPermission(PermissionState.None);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#7\">    UIPermission ^ uiPerm2 = gcnew UIPermission(PermissionState::None);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#7\">        Dim uiPerm2 As New UIPermission(PermissionState.None)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_UIPermissionClipboard_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UIPermission(UIPermissionClipboard)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with the permissions for the Clipboard, and no access to windows.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UIPermission (System.Security.Permissions.UIPermissionClipboard clipboardFlag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipboardFlag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>clipboardFlag</code> parameter is not a valid <a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set both the Clipboard and window permissions, use the constructor that takes parameters for both.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#9\">        uiPerm1 = new UIPermission(UIPermissionClipboard.AllClipboard);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#9\">    uiPerm1 = gcnew UIPermission(UIPermissionClipboard::AllClipboard);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#9\">        uiPerm1 = New UIPermission(UIPermissionClipboard.AllClipboard)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_UIPermissionWindow_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UIPermission(UIPermissionWindow)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with the permissions for windows, and no access to the Clipboard.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>windowFlag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>windowFlag</code> parameter is not a valid <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set both the Clipboard and window permissions, use the constructor that takes parameters for both.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#8\">        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#8\">    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#8\">        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission__ctor_System_Security_Permissions_UIPermissionWindow_System_Security_Permissions_UIPermissionClipboard_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UIPermission(UIPermissionWindow,UIPermissionClipboard)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class with the specified permissions for windows and the Clipboard.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag, System.Security.Permissions.UIPermissionClipboard clipboardFlag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>windowFlag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipboardFlag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>windowFlag</code> parameter is not a valid <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> value.  </p>\n<p> -or-  </p>\n<p> The <code>clipboardFlag</code> parameter is not a valid <a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#10\">        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows, UIPermissionClipboard.OwnClipboard);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#10\">    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows,UIPermissionClipboard::OwnClipboard);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#10\">        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows, UIPermissionClipboard.OwnClipboard)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_Clipboard\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_Clipboard_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clipboard</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the Clipboard access represented by the permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_Window\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_Window_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Window</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the window access represented by the permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Permissions.UIPermissionWindow Window { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Window property. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#2\">    // IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    private static void IsSubsetOfDemo()\n    {\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n        UIPermission uiPerm2 = new UIPermission(UIPermissionWindow.SafeSubWindows);\n        CheckIsSubsetOfWindow(uiPerm1, uiPerm2);\n        uiPerm1 = new UIPermission(UIPermissionClipboard.AllClipboard);\n        uiPerm2 = new UIPermission(UIPermissionClipboard.OwnClipboard);\n        CheckIsSubsetOfClipBoard(uiPerm1, uiPerm2);\n    }\n    private static void CheckIsSubsetOfWindow(UIPermission uiPerm1, UIPermission uiPerm2)\n    {\n        if (uiPerm1.IsSubsetOf(uiPerm2))\n        {\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is a subset of &quot; +\n                uiPerm2.Window.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is not a subset of &quot; +\n                uiPerm2.Window.ToString());\n\n        }\n        if (uiPerm2.IsSubsetOf(uiPerm1))\n        {\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is a subset of &quot; +\n                uiPerm1.Window.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is not a subset of &quot; +\n                uiPerm1.Window.ToString());\n\n        }\n    }\n    private static void CheckIsSubsetOfClipBoard(UIPermission uiPerm1, UIPermission uiPerm2)\n    {\n        if (uiPerm1.IsSubsetOf(uiPerm2))\n        {\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is a subset of &quot; +\n                uiPerm2.Clipboard.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is not a subset of &quot; +\n                uiPerm2.Clipboard.ToString());\n\n        }\n        if (uiPerm2.IsSubsetOf(uiPerm1))\n        {\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is a subset of &quot; +\n                uiPerm1.Clipboard.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is not a subset of &quot; +\n                uiPerm1.Clipboard.ToString());\n\n        }\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#2\">// IsSubsetOf determines whether the current permission is a subset of the specified permission.\n\nvoid IsSubsetOfDemo()\n{\n    Console::WriteLine(&quot;<br>**********************  IsSubsetOf() Demo **********************<br>&quot;);\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(UIPermissionWindow::SafeSubWindows);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm1-&gt;Window,\n                            uiPerm1-&gt;IsSubsetOf(uiPerm2)?&quot;&quot;:&quot;not &quot;, uiPerm2-&gt;Window);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm2-&gt;Window,\n                            uiPerm2-&gt;IsSubsetOf(uiPerm1)?&quot;&quot;:&quot;not &quot;, uiPerm1-&gt;Window);\n\n    uiPerm1 = gcnew UIPermission(UIPermissionClipboard::AllClipboard);\n    uiPerm2 = gcnew UIPermission(UIPermissionClipboard::OwnClipboard);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm1-&gt;Clipboard,\n                            uiPerm1-&gt;IsSubsetOf(uiPerm2)?&quot;&quot;:&quot;not &quot;, uiPerm2-&gt;Clipboard);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm2-&gt;Clipboard,\n                            uiPerm2-&gt;IsSubsetOf(uiPerm1)?&quot;&quot;:&quot;not &quot;, uiPerm1-&gt;Clipboard);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#2\">    &#39; IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    Private Shared Sub IsSubsetOfDemo()\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n        Dim uiPerm2 As New UIPermission(UIPermissionWindow.SafeSubWindows)\n        CheckIsSubsetOfWindow(uiPerm1, uiPerm2)\n        uiPerm1 = New UIPermission(UIPermissionClipboard.AllClipboard)\n        uiPerm2 = New UIPermission(UIPermissionClipboard.OwnClipboard)\n        CheckIsSubsetOfClipBoard(uiPerm1, uiPerm2)\n\n    End Sub &#39;IsSubsetOfDemo\n\n    Private Shared Sub CheckIsSubsetOfWindow(ByVal uiPerm1 As UIPermission, ByVal uiPerm2 As UIPermission)\n        If uiPerm1.IsSubsetOf(uiPerm2) Then\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is a subset of &quot; + uiPerm2.Window.ToString())\n        Else\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is not a subset of &quot; + uiPerm2.Window.ToString())\n        End If\n\n        If uiPerm2.IsSubsetOf(uiPerm1) Then\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is a subset of &quot; + uiPerm1.Window.ToString())\n        Else\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is not a subset of &quot; + uiPerm1.Window.ToString())\n        End If\n\n    End Sub &#39;CheckIsSubsetOfWindow\n\n    Private Shared Sub CheckIsSubsetOfClipBoard(ByVal uiPerm1 As UIPermission, ByVal uiPerm2 As UIPermission)\n        If uiPerm1.IsSubsetOf(uiPerm2) Then\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is a subset of &quot; + uiPerm2.Clipboard.ToString())\n        Else\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is not a subset of &quot; + uiPerm2.Clipboard.ToString())\n        End If\n\n        If uiPerm2.IsSubsetOf(uiPerm1) Then\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is a subset of &quot; + uiPerm1.Clipboard.ToString())\n        Else\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is not a subset of &quot; + uiPerm1.Clipboard.ToString())\n        End If\n\n    End Sub &#39;CheckIsSubsetOfClipBoard\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_Copy\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_Copy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Copy()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns an identical copy of the current permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Copy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A copy of the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A copy of the permission represents the same access to resources as the original permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#5\">    //Copy creates and returns an identical copy of the current permission.\n    private static void CopyDemo()\n    {\n\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n        UIPermission uiPerm2 = new UIPermission(PermissionState.None);\n        uiPerm2 = (UIPermission)uiPerm1.Copy();\n        if (uiPerm2 != null)\n        {\n            Console.WriteLine(&quot;The copy succeeded:  &quot; + uiPerm2.ToString() + &quot; <br>&quot;);\n        }\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#5\">//Copy creates and returns an identical copy of the current permission.\nvoid CopyDemo()\n{\n    Console::WriteLine(&quot;<br>*************************  Copy() Demo *************************<br>&quot;);\n\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(PermissionState::None);\n    uiPerm2 = (UIPermission ^)uiPerm1-&gt;Copy();\n    if (uiPerm2 != nullptr)\n        Console::WriteLine(&quot;The copy succeeded:  &quot; + uiPerm2-&gt;ToString());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#5\">    &#39;Copy creates and returns an identical copy of the current permission.\n    Private Shared Sub CopyDemo()\n\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n        Dim uiPerm2 As New UIPermission(PermissionState.None)\n        uiPerm2 = CType(uiPerm1.Copy(), UIPermission)\n        If Not (uiPerm2 Is Nothing) Then\n            Console.WriteLine(&quot;The copy succeeded:  &quot; + uiPerm2.ToString() + &quot; &quot; + vbLf)\n        End If\n\n    End Sub &#39;CopyDemo\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_FromXml_System_Security_SecurityElement_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_FromXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromXml(SecurityElement)</div>        \r\n          </div>\r\n    \r\n            <p>Reconstructs a permission with a specified state from an XML encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void FromXml (System.Security.SecurityElement esd);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>esd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML encoding used to reconstruct the permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>esd</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>esd</code> parameter is not a valid permission element.  </p>\n<p> -or-  </p>\n<p> The <code>esd</code> parameter&#39;s version number is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#6\">    // ToXml creates an XML encoding of the permission and its current state; FromXml reconstructs a\n    // permission with the specified state from the XML encoding.\n    private static void ToFromXmlDemo()\n    {\n\n\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n        UIPermission uiPerm2 = new UIPermission(PermissionState.None);\n        uiPerm2.FromXml(uiPerm1.ToXml());\n        bool result = uiPerm2.Equals(uiPerm1);\n        if (result)\n        {\n            Console.WriteLine(&quot;Result of ToFromXml = &quot; + uiPerm2.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm2.ToString());\n            Console.WriteLine(uiPerm1.ToString());\n        }\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#6\">\n// ToXml creates an XML encoding of the permission and its current state; FromXml reconstructs a\n// permission with the specified state from the XML encoding.\nvoid ToFromXmlDemo()\n{\n    Console::WriteLine(&quot;<br>**********************  To/From XML() Demo *********************<br>&quot;);\n\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(PermissionState::None);\n    uiPerm2-&gt;FromXml(uiPerm1-&gt;ToXml());\n    bool result = uiPerm2-&gt;Equals(uiPerm1);\n    if (result)\n        Console::WriteLine(&quot;Result of ToFromXml = &quot; + uiPerm2-&gt;ToString());\n    else\n        {\n        Console::WriteLine(uiPerm2-&gt;ToString());\n        Console::WriteLine(uiPerm1-&gt;ToString());\n        }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#6\">    &#39; ToXml creates an XML encoding of the permission and its current state; FromXml reconstructs a\n    &#39; permission with the specified state from the XML encoding.\n    Private Shared Sub ToFromXmlDemo()\n\n\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n        Dim uiPerm2 As New UIPermission(PermissionState.None)\n        uiPerm2.FromXml(uiPerm1.ToXml())\n        Dim result As Boolean = uiPerm2.Equals(uiPerm1)\n        If result Then\n            Console.WriteLine(&quot;Result of ToFromXml = &quot; + uiPerm2.ToString())\n        Else\n            Console.WriteLine(uiPerm2.ToString())\n            Console.WriteLine(uiPerm1.ToString())\n        End If\n\n    End Sub &#39;ToFromXmlDemo \nEnd Class &#39;UIPermissionDemo\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_Intersect_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a permission that is the intersection of the current permission and the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Intersect (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to intersect with the current permission. It must be the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <code>null</code> if the intersection is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The intersection of two permissions is a permission that describes the set of operations they both describe in common. Specifically, it represents the least permissive values of <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> and <a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a> from those in the current permission and the specified permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the Intersect method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#4\">    // Intersect creates and returns a new permission that is the intersection of the\n    // current permission and the permission specified.\n    private static void IntersectDemo()\n    {\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows, UIPermissionClipboard.OwnClipboard);\n        UIPermission uiPerm2 = new UIPermission(UIPermissionWindow.SafeSubWindows, UIPermissionClipboard.NoClipboard);\n        UIPermission p3 = (UIPermission)uiPerm1.Intersect(uiPerm2);\n\n        Console.WriteLine(&quot;The intersection of &quot; + uiPerm1.Window.ToString() + &quot; and <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n            uiPerm2.Window.ToString() + &quot; is &quot; + p3.Window.ToString() + &quot;<br>&quot;);\n        Console.WriteLine(&quot;The intersection of &quot; + uiPerm1.Clipboard.ToString() + &quot; and <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                uiPerm2.Clipboard.ToString() + &quot; is &quot; + p3.Clipboard.ToString() + &quot;<br>&quot;);\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#4\">// Intersect creates and returns a new permission that is the intersection of the\n// current permission and the permission specified.\nvoid IntersectDemo()\n{\n    Console::WriteLine(&quot;<br>**********************  Intersect() Demo ***********************<br>&quot;);\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows,UIPermissionClipboard::OwnClipboard);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(UIPermissionWindow::SafeSubWindows,UIPermissionClipboard::NoClipboard);\n    UIPermission ^ p3 = (UIPermission^)uiPerm1-&gt;Intersect(uiPerm2);\n\n        Console::WriteLine(&quot;   The intersection of {0} and <br>&nbsp;&nbsp;&nbsp;&nbsp;{1} = {2} &quot;, uiPerm1-&gt;Window,\n                               uiPerm1-&gt;Window, (nullptr != p3)?p3-&gt;Window.ToString():&quot;null&quot;);\n\n        Console::WriteLine(&quot;   The intersection of &quot; + uiPerm1-&gt;Clipboard.ToString() + &quot; and <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n                uiPerm2-&gt;Clipboard.ToString() + &quot; is &quot; + p3-&gt;Clipboard.ToString());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#4\">    &#39; Intersect creates and returns a new permission that is the intersection of the\n    &#39; current permission and the permission specified.\n    Private Shared Sub IntersectDemo()\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows, UIPermissionClipboard.OwnClipboard)\n        Dim uiPerm2 As New UIPermission(UIPermissionWindow.SafeSubWindows, UIPermissionClipboard.NoClipboard)\n        Dim p3 As UIPermission = CType(uiPerm1.Intersect(uiPerm2), UIPermission)\n\n        Console.WriteLine(&quot;The intersection of &quot; + uiPerm1.Window.ToString() + &quot; and &quot; + vbLf + vbTab + uiPerm2.Window.ToString() + &quot; is &quot; + p3.Window.ToString() + vbLf)\n        Console.WriteLine(&quot;The intersection of &quot; + uiPerm1.Clipboard.ToString() + &quot; and &quot; + vbLf + vbTab + uiPerm2.Clipboard.ToString() + &quot; is &quot; + p3.Clipboard.ToString() + vbLf)\n\n    End Sub &#39;IntersectDemo\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_IsSubsetOf_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_IsSubsetOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSubsetOf(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current permission is a subset of the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsSubsetOf (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to test for the subset relationship. This permission must be the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current permission is a subset of the specified permission; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission. That is, the specified permission contains at least the permissions contained in the subset. For IsSubsetOf to return <code>true</code>, both the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> and <a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a> values of the current permission must be equal to or less permissive than the values of the specified permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the IsSubsetOf method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#2\">    // IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    private static void IsSubsetOfDemo()\n    {\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n        UIPermission uiPerm2 = new UIPermission(UIPermissionWindow.SafeSubWindows);\n        CheckIsSubsetOfWindow(uiPerm1, uiPerm2);\n        uiPerm1 = new UIPermission(UIPermissionClipboard.AllClipboard);\n        uiPerm2 = new UIPermission(UIPermissionClipboard.OwnClipboard);\n        CheckIsSubsetOfClipBoard(uiPerm1, uiPerm2);\n    }\n    private static void CheckIsSubsetOfWindow(UIPermission uiPerm1, UIPermission uiPerm2)\n    {\n        if (uiPerm1.IsSubsetOf(uiPerm2))\n        {\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is a subset of &quot; +\n                uiPerm2.Window.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is not a subset of &quot; +\n                uiPerm2.Window.ToString());\n\n        }\n        if (uiPerm2.IsSubsetOf(uiPerm1))\n        {\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is a subset of &quot; +\n                uiPerm1.Window.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is not a subset of &quot; +\n                uiPerm1.Window.ToString());\n\n        }\n    }\n    private static void CheckIsSubsetOfClipBoard(UIPermission uiPerm1, UIPermission uiPerm2)\n    {\n        if (uiPerm1.IsSubsetOf(uiPerm2))\n        {\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is a subset of &quot; +\n                uiPerm2.Clipboard.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is not a subset of &quot; +\n                uiPerm2.Clipboard.ToString());\n\n        }\n        if (uiPerm2.IsSubsetOf(uiPerm1))\n        {\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is a subset of &quot; +\n                uiPerm1.Clipboard.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is not a subset of &quot; +\n                uiPerm1.Clipboard.ToString());\n\n        }\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#2\">// IsSubsetOf determines whether the current permission is a subset of the specified permission.\n\nvoid IsSubsetOfDemo()\n{\n    Console::WriteLine(&quot;<br>**********************  IsSubsetOf() Demo **********************<br>&quot;);\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(UIPermissionWindow::SafeSubWindows);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm1-&gt;Window,\n                            uiPerm1-&gt;IsSubsetOf(uiPerm2)?&quot;&quot;:&quot;not &quot;, uiPerm2-&gt;Window);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm2-&gt;Window,\n                            uiPerm2-&gt;IsSubsetOf(uiPerm1)?&quot;&quot;:&quot;not &quot;, uiPerm1-&gt;Window);\n\n    uiPerm1 = gcnew UIPermission(UIPermissionClipboard::AllClipboard);\n    uiPerm2 = gcnew UIPermission(UIPermissionClipboard::OwnClipboard);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm1-&gt;Clipboard,\n                            uiPerm1-&gt;IsSubsetOf(uiPerm2)?&quot;&quot;:&quot;not &quot;, uiPerm2-&gt;Clipboard);\n\n    Console::WriteLine(&quot;   {0} is {1}a subset of {2} &quot;, uiPerm2-&gt;Clipboard,\n                            uiPerm2-&gt;IsSubsetOf(uiPerm1)?&quot;&quot;:&quot;not &quot;, uiPerm1-&gt;Clipboard);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#2\">    &#39; IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    Private Shared Sub IsSubsetOfDemo()\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n        Dim uiPerm2 As New UIPermission(UIPermissionWindow.SafeSubWindows)\n        CheckIsSubsetOfWindow(uiPerm1, uiPerm2)\n        uiPerm1 = New UIPermission(UIPermissionClipboard.AllClipboard)\n        uiPerm2 = New UIPermission(UIPermissionClipboard.OwnClipboard)\n        CheckIsSubsetOfClipBoard(uiPerm1, uiPerm2)\n\n    End Sub &#39;IsSubsetOfDemo\n\n    Private Shared Sub CheckIsSubsetOfWindow(ByVal uiPerm1 As UIPermission, ByVal uiPerm2 As UIPermission)\n        If uiPerm1.IsSubsetOf(uiPerm2) Then\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is a subset of &quot; + uiPerm2.Window.ToString())\n        Else\n            Console.WriteLine(uiPerm1.Window.ToString() + &quot; is not a subset of &quot; + uiPerm2.Window.ToString())\n        End If\n\n        If uiPerm2.IsSubsetOf(uiPerm1) Then\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is a subset of &quot; + uiPerm1.Window.ToString())\n        Else\n            Console.WriteLine(uiPerm2.Window.ToString() + &quot; is not a subset of &quot; + uiPerm1.Window.ToString())\n        End If\n\n    End Sub &#39;CheckIsSubsetOfWindow\n\n    Private Shared Sub CheckIsSubsetOfClipBoard(ByVal uiPerm1 As UIPermission, ByVal uiPerm2 As UIPermission)\n        If uiPerm1.IsSubsetOf(uiPerm2) Then\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is a subset of &quot; + uiPerm2.Clipboard.ToString())\n        Else\n            Console.WriteLine(uiPerm1.Clipboard.ToString() + &quot; is not a subset of &quot; + uiPerm2.Clipboard.ToString())\n        End If\n\n        If uiPerm2.IsSubsetOf(uiPerm1) Then\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is a subset of &quot; + uiPerm1.Clipboard.ToString())\n        Else\n            Console.WriteLine(uiPerm2.Clipboard.ToString() + &quot; is not a subset of &quot; + uiPerm1.Clipboard.ToString())\n        End If\n\n    End Sub &#39;CheckIsSubsetOfClipBoard\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_IsUnrestricted\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_IsUnrestricted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUnrestricted()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether the current permission is unrestricted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsUnrestricted ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current permission is unrestricted; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An unrestricted permission represents access to any and all resources protected by the permission.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_ToXml\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_ToXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToXml()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an XML encoding of the permission and its current state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.SecurityElement ToXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </div>\r\n                  <p>An XML encoding of the permission, including any state information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the ToXml method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#6\">    // ToXml creates an XML encoding of the permission and its current state; FromXml reconstructs a\n    // permission with the specified state from the XML encoding.\n    private static void ToFromXmlDemo()\n    {\n\n\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n        UIPermission uiPerm2 = new UIPermission(PermissionState.None);\n        uiPerm2.FromXml(uiPerm1.ToXml());\n        bool result = uiPerm2.Equals(uiPerm1);\n        if (result)\n        {\n            Console.WriteLine(&quot;Result of ToFromXml = &quot; + uiPerm2.ToString());\n        }\n        else\n        {\n            Console.WriteLine(uiPerm2.ToString());\n            Console.WriteLine(uiPerm1.ToString());\n        }\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#6\">\n// ToXml creates an XML encoding of the permission and its current state; FromXml reconstructs a\n// permission with the specified state from the XML encoding.\nvoid ToFromXmlDemo()\n{\n    Console::WriteLine(&quot;<br>**********************  To/From XML() Demo *********************<br>&quot;);\n\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(PermissionState::None);\n    uiPerm2-&gt;FromXml(uiPerm1-&gt;ToXml());\n    bool result = uiPerm2-&gt;Equals(uiPerm1);\n    if (result)\n        Console::WriteLine(&quot;Result of ToFromXml = &quot; + uiPerm2-&gt;ToString());\n    else\n        {\n        Console::WriteLine(uiPerm2-&gt;ToString());\n        Console::WriteLine(uiPerm1-&gt;ToString());\n        }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#6\">    &#39; ToXml creates an XML encoding of the permission and its current state; FromXml reconstructs a\n    &#39; permission with the specified state from the XML encoding.\n    Private Shared Sub ToFromXmlDemo()\n\n\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n        Dim uiPerm2 As New UIPermission(PermissionState.None)\n        uiPerm2.FromXml(uiPerm1.ToXml())\n        Dim result As Boolean = uiPerm2.Equals(uiPerm1)\n        If result Then\n            Console.WriteLine(&quot;Result of ToFromXml = &quot; + uiPerm2.ToString())\n        Else\n            Console.WriteLine(uiPerm2.ToString())\n            Console.WriteLine(uiPerm1.ToString())\n        End If\n\n    End Sub &#39;ToFromXmlDemo \nEnd Class &#39;UIPermissionDemo\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_UIPermission_Union_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_UIPermission_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a permission that is the union of the permission and the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Union (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to combine with the current permission. It must be the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new permission that represents the union of the current permission and the specified permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The result of a call to Union is a permission that represents all the operations represented by the current permission as well as all the operations represented by the specified permission. Specifically, it represents the most permissive values of <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> and <a class=\"xref\" href=\"system.security.permissions.uipermissionclipboard\" data-linktype=\"relative-path\">UIPermissionClipboard</a> from those in the current permission and the specified permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the Union method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.uipermission\" data-linktype=\"relative-path\">UIPermission</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Security.Permissions.UIPermission#3\">    // Union creates a new permission that is the union of the current permission\n    // and the specified permission.\n    private static void UnionDemo()\n    {\n        UIPermission uiPerm1 = new UIPermission(UIPermissionWindow.SafeTopLevelWindows);\n        UIPermission uiPerm2 = new UIPermission(UIPermissionWindow.SafeSubWindows);\n        UIPermission p3 = (UIPermission)uiPerm1.Union(uiPerm2);\n        try\n        {\n            if (p3 != null)\n            {\n                Console.WriteLine(&quot;The union of &quot; + uiPerm1.Window.ToString() +\n                    &quot; and <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; + uiPerm2.Window.ToString() + &quot; is <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\n                    + p3.Window.ToString() + &quot;<br>&quot;);\n\n            }\n            else\n            {\n                Console.WriteLine(&quot;The union of &quot; + uiPerm1.Window.ToString() +\n                    &quot; and <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; + uiPerm2.Window.ToString() + &quot; is null.<br>&quot;);\n            }\n        }\n        catch (SystemException e)\n        {\n            Console.WriteLine(&quot;The union of &quot; + uiPerm1.Window.ToString() +\n                    &quot; and <br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; + uiPerm2.Window.ToString() + &quot; failed.&quot;);\n\n            Console.WriteLine(e.Message);\n        }\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.UIPermission#3\">   // Union creates a new permission that is the union of the current permission\n   // and the specified permission.\nvoid UnionDemo()\n{\n    Console::WriteLine(&quot;<br>************************  Union() Demo *************************<br>&quot;);\n\n    UIPermission ^ uiPerm1 = gcnew UIPermission(UIPermissionWindow::SafeTopLevelWindows);\n    UIPermission ^ uiPerm2 = gcnew UIPermission(UIPermissionWindow::SafeSubWindows);\n\n    UIPermission ^ p3 = dynamic_cast&lt;UIPermission^&gt;(uiPerm1-&gt;Union(uiPerm2));\n    Console::WriteLine(&quot;   The union of {0} and  <br>&nbsp;&nbsp;&nbsp;&nbsp;{1} = {2} &quot;, uiPerm1-&gt;Window,\n                               uiPerm2-&gt;Window, (nullptr != p3)?p3-&gt;Window.ToString():&quot;null&quot;);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Permissions.UIPermission#3\">    &#39; Union creates a new permission that is the union of the current permission\n    &#39; and the specified permission.\n    Private Shared Sub UnionDemo()\n        Dim uiPerm1 As New UIPermission(UIPermissionWindow.SafeTopLevelWindows)\n        Dim uiPerm2 As New UIPermission(UIPermissionWindow.SafeSubWindows)\n        Dim p3 As UIPermission = CType(uiPerm1.Union(uiPerm2), UIPermission)\n        Try\n            If Not (p3 Is Nothing) Then\n                Console.WriteLine(&quot;The union of &quot; + uiPerm1.Window.ToString() + &quot; and &quot; + vbLf + vbTab + uiPerm2.Window.ToString() + &quot; is &quot; + vbLf + vbTab + p3.Window.ToString() + vbLf)\n\n            Else\n                Console.WriteLine(&quot;The union of &quot; + uiPerm1.Window.ToString() + &quot; and &quot; + vbLf + vbTab + uiPerm2.Window.ToString() + &quot; is null.&quot; + vbLf)\n            End If\n        Catch e As SystemException\n            Console.WriteLine(&quot;The union of &quot; + uiPerm1.Window.ToString() + &quot; and &quot; + vbLf + vbTab + uiPerm2.Window.ToString() + &quot; failed.&quot;)\n\n            Console.WriteLine(e.Message)\n        End Try\n\n    End Sub &#39;UnionDemo\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Permissions.UIPermission.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Permissions.UIPermission.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.Clipboard\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.Copy\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.FromXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.IsSubsetOf\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.IsUnrestricted\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.ToXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.Union\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.UIPermission.Window\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"21e4bcd1-96bc-934d-453d-42f42714b5e0\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Permissions\\UIPermission.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Permissions/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Permissions.UIPermission\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Permissions.UIPermission.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Permissions.UIPermission.yml","open_to_public_contributors":true,"api_name":["System.Security.Permissions.UIPermission","System.Security.Permissions.UIPermission..ctor","System.Security.Permissions.UIPermission.Clipboard","System.Security.Permissions.UIPermission.Copy","System.Security.Permissions.UIPermission.FromXml","System.Security.Permissions.UIPermission.Intersect","System.Security.Permissions.UIPermission.IsSubsetOf","System.Security.Permissions.UIPermission.IsUnrestricted","System.Security.Permissions.UIPermission.ToXml","System.Security.Permissions.UIPermission.Union","System.Security.Permissions.UIPermission.Window"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Permissions.UIPermission","System::Security::Permissions::UIPermission","System.Security.Permissions.UIPermission.#ctor","System::Security::Permissions::UIPermission::#ctor","System.Security.Permissions.UIPermission.Clipboard","System::Security::Permissions::UIPermission::Clipboard","System.Security.Permissions.UIPermission.Copy","System::Security::Permissions::UIPermission::Copy","System.Security.Permissions.UIPermission.FromXml","System::Security::Permissions::UIPermission::FromXml","System.Security.Permissions.UIPermission.Intersect","System::Security::Permissions::UIPermission::Intersect","System.Security.Permissions.UIPermission.IsSubsetOf","System::Security::Permissions::UIPermission::IsSubsetOf","System.Security.Permissions.UIPermission.IsUnrestricted","System::Security::Permissions::UIPermission::IsUnrestricted","System.Security.Permissions.UIPermission.ToXml","System::Security::Permissions::UIPermission::ToXml","System.Security.Permissions.UIPermission.Union","System::Security::Permissions::UIPermission::Union","System.Security.Permissions.UIPermission.Window","System::Security::Permissions::UIPermission::Window"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"21e4bcd1-96bc-934d-453d-42f42714b5e0","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Permissions\\UIPermission.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Permissions/UIPermission.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UIPermission class | Microsoft Docs","_op_ogTitle":"UIPermission class","description":"Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Permissions/toc.json","toc_rel":"_splitted/System.Security.Permissions/toc.json","source_url":"","ms.assetid":"System.Security.Permissions.UIPermission","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.permissions.uipermission","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.permissions.uipermission","fileRelativePath":"System.Security.Permissions.UIPermission.html"},"themesRelativePathToOutputRoot":"_themes/"}