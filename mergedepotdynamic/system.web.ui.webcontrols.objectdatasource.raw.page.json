{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_ObjectDataSource\">\r\n      <span class=\"lang-csharp\">ObjectDataSource</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a business object that provides data to data-bound controls in multitier Web application architectures.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;Selecting&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;TypeName&quot;)]\n[System.ComponentModel.Designer(&quot;System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))]\n[System.Web.UI.ParseChildren(true)]\n[System.Web.UI.PersistChildren(false)]\npublic class ObjectDataSource : System.Web.UI.DataSourceControl</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol\" data-linktype=\"relative-path\">System.Web.UI.DataSourceControl</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ObjectDataSource</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Adapter\" data-linktype=\"relative-path\">Adapter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AddedControl_System_Web_UI_Control_System_Int32_\" data-linktype=\"relative-path\">AddedControl(Control,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AddParsedSubObject_System_Object_\" data-linktype=\"relative-path\">AddParsedSubObject(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AppRelativeTemplateSourceDirectory\" data-linktype=\"relative-path\">AppRelativeTemplateSourceDirectory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BeginRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"relative-path\">BeginRenderTracing(TextWriter,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BindingContainer\" data-linktype=\"relative-path\">BindingContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BuildProfileTree_System_String_System_Boolean_\" data-linktype=\"relative-path\">BuildProfileTree(String,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated\" data-linktype=\"relative-path\">ChildControlsCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearCachedClientID\" data-linktype=\"relative-path\">ClearCachedClientID()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildControlState\" data-linktype=\"relative-path\">ClearChildControlState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildState\" data-linktype=\"relative-path\">ClearChildState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState\" data-linktype=\"relative-path\">ClearChildViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearEffectiveClientIDMode\" data-linktype=\"relative-path\">ClearEffectiveClientIDMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDSeparator\" data-linktype=\"relative-path\">ClientIDSeparator</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateChildControls\" data-linktype=\"relative-path\">CreateChildControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind\" data-linktype=\"relative-path\">DataBind()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_System_Boolean_\" data-linktype=\"relative-path\">DataBind(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBindChildren\" data-linktype=\"relative-path\">DataBindChildren()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataItemContainer\" data-linktype=\"relative-path\">DataItemContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataKeysContainer\" data-linktype=\"relative-path\">DataKeysContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState\" data-linktype=\"relative-path\">EnableViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EndRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"relative-path\">EndRenderTracing(TextWriter,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnsureChildControls\" data-linktype=\"relative-path\">EnsureChildControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnsureID\" data-linktype=\"relative-path\">EnsureID()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_System_String_System_Int32_\" data-linktype=\"relative-path\">FindControl(String,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetDesignModeState\" data-linktype=\"relative-path\">GetDesignModeState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_Object_\" data-linktype=\"relative-path\">GetRouteUrl(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_String_System_Object_\" data-linktype=\"relative-path\">GetRouteUrl(String,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">GetRouteUrl(String,RouteValueDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">GetRouteUrl(RouteValueDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetUniqueIDRelativeTo_System_Web_UI_Control_\" data-linktype=\"relative-path\">GetUniqueIDRelativeTo(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasChildViewState\" data-linktype=\"relative-path\">HasChildViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasEvents\" data-linktype=\"relative-path\">HasEvents()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID\" data-linktype=\"relative-path\">ID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IdSeparator\" data-linktype=\"relative-path\">IdSeparator</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsChildControlStateCleared\" data-linktype=\"relative-path\">IsChildControlStateCleared</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsLiteralContent\" data-linktype=\"relative-path\">IsLiteralContent()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsTrackingViewState\" data-linktype=\"relative-path\">IsTrackingViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsViewStateEnabled\" data-linktype=\"relative-path\">IsViewStateEnabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_LoadControlState_System_Object_\" data-linktype=\"relative-path\">LoadControlState(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_LoadViewStateByID\" data-linktype=\"relative-path\">LoadViewStateByID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_MapPathSecure_System_String_\" data-linktype=\"relative-path\">MapPathSecure(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_NamingContainer\" data-linktype=\"relative-path\">NamingContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"relative-path\">OnBubbleEvent(Object,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_System_EventArgs_\" data-linktype=\"relative-path\">OnDataBinding(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnLoad_System_EventArgs_\" data-linktype=\"relative-path\">OnLoad(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnPreRender_System_EventArgs_\" data-linktype=\"relative-path\">OnPreRender(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnUnload_System_EventArgs_\" data-linktype=\"relative-path\">OnUnload(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OpenFile_System_String_\" data-linktype=\"relative-path\">OpenFile(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page\" data-linktype=\"relative-path\">Page</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RaiseBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"relative-path\">RaiseBubbleEvent(Object,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RemovedControl_System_Web_UI_Control_\" data-linktype=\"relative-path\">RemovedControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Render_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">Render(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderChildren_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderChildren(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_System_Web_UI_Adapters_ControlAdapter_\" data-linktype=\"relative-path\">RenderControl(HtmlTextWriter,ControlAdapter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderingCompatibility\" data-linktype=\"relative-path\">RenderingCompatibility</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveAdapter\" data-linktype=\"relative-path\">ResolveAdapter()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveClientUrl_System_String_\" data-linktype=\"relative-path\">ResolveClientUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveUrl_System_String_\" data-linktype=\"relative-path\">ResolveUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SaveControlState\" data-linktype=\"relative-path\">SaveControlState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"relative-path\">SetDesignModeState(IDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetRenderMethodDelegate_System_Web_UI_RenderMethod_\" data-linktype=\"relative-path\">SetRenderMethodDelegate(RenderMethod)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetTraceData_System_Object_System_Object_\" data-linktype=\"relative-path\">SetTraceData(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetTraceData_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">SetTraceData(Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlBuilderAccessor_ControlBuilder\" data-linktype=\"relative-path\">IControlBuilderAccessor.ControlBuilder</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_GetDesignModeState\" data-linktype=\"relative-path\">IControlDesignerAccessor.GetDesignModeState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"relative-path\">IControlDesignerAccessor.SetDesignModeState(IDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetOwnerControl_System_Web_UI_Control_\" data-linktype=\"relative-path\">IControlDesignerAccessor.SetOwnerControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_UserData\" data-linktype=\"relative-path\">IControlDesignerAccessor.UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_DataBindings\" data-linktype=\"relative-path\">IDataBindingsAccessor.DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_HasDataBindings\" data-linktype=\"relative-path\">IDataBindingsAccessor.HasDataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_Expressions\" data-linktype=\"relative-path\">IExpressionsAccessor.Expressions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_HasExpressions\" data-linktype=\"relative-path\">IExpressionsAccessor.HasExpressions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IParserAccessor_AddParsedSubObject_System_Object_\" data-linktype=\"relative-path\">IParserAccessor.AddParsedSubObject(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateControl\" data-linktype=\"relative-path\">TemplateControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateSourceDirectory\" data-linktype=\"relative-path\">TemplateSourceDirectory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID\" data-linktype=\"relative-path\">UniqueID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Unload\" data-linktype=\"relative-path\">Unload</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ValidateRequestMode\" data-linktype=\"relative-path\">ValidateRequestMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewState\" data-linktype=\"relative-path\">ViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateIgnoresCase\" data-linktype=\"relative-path\">ViewStateIgnoresCase</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateMode\" data-linktype=\"relative-path\">ViewStateMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_ApplyStyleSheetSkin_System_Web_UI_Page_\" data-linktype=\"relative-path\">ApplyStyleSheetSkin(Page)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_ClientID\" data-linktype=\"relative-path\">ClientID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_ClientIDMode\" data-linktype=\"relative-path\">ClientIDMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_CreateControlCollection\" data-linktype=\"relative-path\">CreateControlCollection()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_EnableTheming\" data-linktype=\"relative-path\">EnableTheming</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_FindControl_System_String_\" data-linktype=\"relative-path\">FindControl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_HasControls\" data-linktype=\"relative-path\">HasControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_RaiseDataSourceChangedEvent_System_EventArgs_\" data-linktype=\"relative-path\">RaiseDataSourceChangedEvent(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_RenderControl_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderControl(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_SkinID\" data-linktype=\"relative-path\">SkinID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_System_ComponentModel_IListSource_ContainsListCollection\" data-linktype=\"relative-path\">IListSource.ContainsListCollection</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_System_ComponentModel_IListSource_GetList\" data-linktype=\"relative-path\">IListSource.GetList()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_System_Web_UI_IDataSource_GetView_System_String_\" data-linktype=\"relative-path\">IDataSource.GetView(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_System_Web_UI_IDataSource_GetViewNames\" data-linktype=\"relative-path\">IDataSource.GetViewNames()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In this topic:  </p>\n<ul>\n<li><p><a href=\"#introduction\" data-linktype=\"self-bookmark\">Introduction</a>  </p>\n</li>\n<li><p><a href=\"#purpose\" data-linktype=\"self-bookmark\">Purpose</a>  </p>\n</li>\n<li><p><a href=\"#retrieving_data\" data-linktype=\"self-bookmark\">Retrieving Data</a>  </p>\n</li>\n<li><p><a href=\"#performing_data_operations\" data-linktype=\"self-bookmark\">Performing Data Operations</a>  </p>\n</li>\n<li><p><a href=\"#filtering_data\" data-linktype=\"self-bookmark\">Filtering Data</a>  </p>\n</li>\n<li><p><a href=\"#caching\" data-linktype=\"self-bookmark\">Caching</a>  </p>\n</li>\n<li><p><a href=\"#features\" data-linktype=\"self-bookmark\">Features</a>  </p>\n</li>\n<li><p><a href=\"#data_view\" data-linktype=\"self-bookmark\">Data View</a>  </p>\n</li>\n<li><p><a href=\"#using_linq_to_sql\" data-linktype=\"self-bookmark\">Using LINQ to SQL</a>  </p>\n</li>\n<li><p><a href=\"#declarative_syntax\" data-linktype=\"self-bookmark\">Declarative Syntax</a>  </p>\n</li>\n</ul>\n<p><a name=\"introduction\"></a>   </p>\n<h2 id=\"introduction\">Introduction</h2>\n<p> An ObjectDataSource control works with a class that you create. You create methods that retrieve and update data, and you provide the names of those methods to the ObjectDataSource control in markup. During rendering or postback processing, the ObjectDataSource calls the methods that you have specified.  </p>\n<p> There is no visual rendering of the ObjectDataSource control. As a result, the ObjectDataSource does not support visual features such as the <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_EnableTheming_\" data-linktype=\"relative-path\">EnableTheming</a> or <a class=\"xref\" href=\"system.web.ui.datasourcecontrol#System_Web_UI_DataSourceControl_SkinID_\" data-linktype=\"relative-path\">SkinID</a> property.  </p>\n<p><a name=\"purpose\"></a>   </p>\n<h2 id=\"purpose\">Purpose</h2>\n<p> A very common application design practice is to separate the presentation layer from business logic and to encapsulate the business logic in business objects. These business objects form a distinct layer between the presentation layer and the data tier, resulting in a three-tier application architecture. The ObjectDataSource control enables developers to use an ASP.NET data source control while retaining their three-tier application architecture.  </p>\n<p> The ObjectDataSource control uses reflection to create instances of business objects and to call methods on them to retrieve, update, insert, and delete data. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property identifies the name of the class that the ObjectDataSource works with. The ObjectDataSource control creates and destroys an instance of the class for each method call; it does not hold the object in memory for the lifetime of the Web request. This is a serious consideration if the business object that you use requires many resources or is otherwise expensive to create and destroy. Using an expensive object might not be an optimal design choice, but you can control the life cycle of the object by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> events.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The methods that are identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> properties can be instance methods or <code>static</code> (<code>Shared</code> in Visual Basic) methods. If the methods are <code>static</code> (<code>Shared</code> in Visual Basic), an instance of the business object is not created, and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> events are not raised.  </p>\n</div>\n<p><a name=\"retrieving_data\"></a>   </p>\n<h2 id=\"retrieving-data\">Retrieving Data</h2>\n<p> To retrieve data from a business object, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to the name of the method that retrieves data. If the method does not return an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> or <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object, the object is wrapped by the runtime in an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> collection. If the method signature has parameters, you can add <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter\" data-linktype=\"relative-path\">Parameter</a> objects to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> collection, and then bind them to the values that you want to pass to the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. In order for the ObjectDataSource control to use the parameters, the parameters must match the names and types of the parameters in the method signature. For more information, see <a href=\"../Topic/Using%20Parameters%20with%20the%20ObjectDataSource%20Control.md\" data-linktype=\"relative-path\">Using Parameters with the ObjectDataSource Control</a>.  </p>\n<p> The ObjectDataSource control retrieves data whenever the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is called. This method provides programmatic access to the method that is specified by <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. The method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property is called automatically by controls that are bound to the ObjectDataSource when their <code>DataBind</code> method is called. If you set the <code>DataSourceID</code> property of a data-bound control, the control automatically binds to data from the data source, as needed. Setting the <code>DataSourceID</code> property is the recommended method for binding an ObjectDataSource control to a data-bound control. Alternatively, you can set the <code>DataSource</code> property, but then you must explicitly call the <code>DataBind</code> method of the data-bound control. You can call the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method programmatically at any time to retrieve data.  </p>\n<p> For more information about binding data-bound controls to data source controls, see <a href=\"http://msdn.microsoft.com/en-us/e41adfff-8fb8-449e-9cd1-9bd49788c5f7\" data-linktype=\"external\">Binding to Data Using a Data Source Control</a>.  </p>\n<p><a name=\"performing_data_operations\"></a>   </p>\n<h2 id=\"performing-data-operations\">Performing Data Operations</h2>\n<p> Depending on the capabilities of the business object that the ObjectDataSource control works with, you can perform data operations, such as updates, insertions, and deletions. To perform these data operations, set the appropriate method name and any associated parameters for the operation that you want to perform. For example, for an update operation, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property to the name of the business object method that performs updates and add any required parameters to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection. If the ObjectDataSource control is associated with a data-bound control, the parameters are added by the data-bound control. In this case, you need to ensure that the parameter names of the method match the field names in the data-bound control. The update is performed when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a> method is called, either explicitly by your code or automatically by a data-bound control. The same general pattern is followed for <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operations. Business objects are assumed to perform these types of data operations one record at a time, rather than batched.  </p>\n<p><a name=\"filtering_data\"></a>   </p>\n<h2 id=\"filtering-data\">Filtering Data</h2>\n<p> The ObjectDataSource control can filter data that is retrieved by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property, if the data is returned as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object. You can set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property to a filtering expression by using a format string syntax and bind values in the expression to parameters that are specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> collection.  </p>\n<p><a name=\"caching\"></a>   </p>\n<h2 id=\"caching\">Caching</h2>\n<p> Although the ObjectDataSource does not retain the instance of the business object across multiple requests, it can cache the result of calling the method identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. While the data is cached, subsequent calls to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method return the cached data instead of creating the business object and calling its <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> using reflection. Caching lets you avoid creating the object and calling its data method at the expense of memory on the Web server. The ObjectDataSource automatically caches data when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property is set to <code>true</code>, and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> property is set to the number of seconds that the cache stores data before the cache is discarded. You can also specify a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> property and an optional <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SqlCacheDependency_\" data-linktype=\"relative-path\">SqlCacheDependency</a> property. The ObjectDataSource control allows you to cache all types of data, but you should not cache objects that retain resources or state that cannot be shared to service multiple requests (for example, an open <a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a> object), because the same instance of the object will be used to service multiple requests.  </p>\n<p><a name=\"features\"></a>   </p>\n<h2 id=\"features\">Features</h2>\n<p> The following table describes the features of the ObjectDataSource control.  </p>\n<table>\n<thead>\n<tr>\n<th>Capability</th>\n<th>Requirements</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Selecting</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to the name of the business object method that selects data, and include any necessary parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> collection either programmatically or by using a data-bound control.</td>\n</tr>\n<tr>\n<td>Sorting</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SortParameterName_\" data-linktype=\"relative-path\">SortParameterName</a> property to the name of the parameter in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> method that carries the sort criteria.</td>\n</tr>\n<tr>\n<td>Filtering</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property to a filtering expression and optionally add any parameters to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> collection to filter the data when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is called. The method specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property must return a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</td>\n</tr>\n<tr>\n<td>Paging</td>\n<td>Data source paging is supported, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> method contains parameters for the maximum number of records to retrieve and the index of the first record to retrieve. The names of those parameters must be set in the  <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a> properties, respectively. A data-bound control might be able to perform paging itself, even if the ObjectDataSource control does not support paging directly in the method specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. The requirement for the data-bound control to be able to do this is that the method specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property return an object that implements the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.</td>\n</tr>\n<tr>\n<td>Updating</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property to the name of the business object method that updates data, and include any necessary parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection.</td>\n</tr>\n<tr>\n<td>Deleting</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property to the name of the business object method or function that deletes data, and include any necessary parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection.</td>\n</tr>\n<tr>\n<td>Inserting</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property to the name of the business object method or function that inserts data, and include any necessary parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection.</td>\n</tr>\n<tr>\n<td>Caching</td>\n<td>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property to <code>true</code>, and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> properties according to the caching behavior you want for your cached data.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> When you use the ObjectDataSource class to update or insert data, strings that are entered at the client are not automatically converted from the client culture format to the server culture format. For example, the client culture might specify DD/MM/YYYY as the date format, and the date format on the server might be MM/DD/YYYY. In that case, October 5, 2009 would be entered in a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control as 5/10/2009 but would be interpreted as May 10, 2009. October 15, 2009 would be entered as 15/10/2009, and would be rejected as an invalid date.  </p>\n</div>\n<p><a name=\"data_view\"></a>   </p>\n<h2 id=\"data-view\">Data View</h2>\n<p> As with all data source controls, the ObjectDataSource control is associated with a data source view class. While the ObjectDataSource control is the interface that the page developer uses to work with data, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> class is the interface that data-bound controls work with. Additionally, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> class describes the capabilities of the data source control, and performs the actual work. The ObjectDataSource control has only one associated <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a>, and it is always named <code>DefaultView</code>. While the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_GetView_\" data-linktype=\"relative-path\">GetView</a> method, many of its properties and methods are wrapped and exposed directly by the ObjectDataSource control. Behind the scenes, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object performs all data operations, including retrieving, inserting, updating, deleting, filtering, and sorting the data. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a>.  </p>\n<p><a name=\"using_linq_to_sql\"></a>   </p>\n<h2 id=\"using-linq-to-sql\">Using LINQ to SQL</h2>\n<p> You can use the ObjectDataSource control with a LINQ to SQL class. To do so, you set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property to the name of the data-context class. You also set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> methods to the methods in the data-context class that perform the corresponding operations. You must create an event handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event in order to cancel disposing of the data-context class. This step is necessary because LINQ to SQL supports deferred execution, whereas the ObjectDataSource control tries to dispose the data context after the Select operation. For more information about how to create LINQ to SQL classes, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>. For an example of how to cancel the disposing of a data context class, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event.  </p>\n<h2 id=\"using-the-entity-framework\">Using the Entity Framework</h2>\n<p> You can also use the ObjectDataSource control with the Entity Framework. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=209117\" data-linktype=\"external\">Using the Entity Framework and the ObjectDataSource Control</a>.  </p>\n<p><a name=\"declarative_syntax\"></a>   </p>\n<h2 id=\"declarative-syntax\">Declarative Syntax</h2>\n<pre><code>&lt;asp:ObjectDataSource  \n    CacheDuration=&quot;string|Infinite&quot;  \n    CacheExpirationPolicy=&quot;Absolute|Sliding&quot;  \n    CacheKeyDependency=&quot;string&quot;  \n    ConflictDetection=&quot;OverwriteChanges|CompareAllValues&quot;  \n    ConvertNullToDBNull=&quot;True|False&quot;  \n    DataObjectTypeName=&quot;string&quot;  \n    DeleteMethod=&quot;string&quot;  \n    EnableCaching=&quot;True|False&quot;  \n    EnablePaging=&quot;True|False&quot;  \n    EnableTheming=&quot;True|False&quot;  \n    EnableViewState=&quot;True|False&quot;  \n    FilterExpression=&quot;string&quot;  \n    ID=&quot;string&quot;  \n    InsertMethod=&quot;string&quot;  \n    MaximumRowsParameterName=&quot;string&quot;  \n    OldValuesParameterFormatString=&quot;string&quot;  \n    OnDataBinding=&quot;DataBinding event handler&quot;  \n    OnDeleted=&quot;Deleted event handler&quot;  \n    OnDeleting=&quot;Deleting event handler&quot;  \n    OnDisposed=&quot;Disposed event handler&quot;  \n    OnFiltering=&quot;Filtering event handler&quot;  \n    OnInit=&quot;Init event handler&quot;  \n    OnInserted=&quot;Inserted event handler&quot;  \n    OnInserting=&quot;Inserting event handler&quot;  \n    OnLoad=&quot;Load event handler&quot;  \n    OnObjectCreated=&quot;ObjectCreated event handler&quot;  \n    OnObjectCreating=&quot;ObjectCreating event handler&quot;  \n    OnObjectDisposing=&quot;ObjectDisposing event handler&quot;  \n    OnPreRender=&quot;PreRender event handler&quot;  \n    OnSelected=&quot;Selected event handler&quot;  \n    OnSelecting=&quot;Selecting event handler&quot;  \n    OnUnload=&quot;Unload event handler&quot;  \n    OnUpdated=&quot;Updated event handler&quot;  \n    OnUpdating=&quot;Updating event handler&quot;  \n    runat=&quot;server&quot;  \n    SelectCountMethod=&quot;string&quot;  \n    SelectMethod=&quot;string&quot;  \n    SkinID=&quot;string&quot;  \n    SortParameterName=&quot;string&quot;  \n    SqlCacheDependency=&quot;string&quot;  \n    StartRowIndexParameterName=&quot;string&quot;  \n    TypeName=&quot;string&quot;  \n    UpdateMethod=&quot;string&quot;  \n    Visible=&quot;True|False&quot;  \n&gt;  \n        &lt;DeleteParameters&gt;  \n                &lt;asp:ControlParameter  \n                    ControlID=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:CookieParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    CookieName=&quot;string&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:FormParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    FormField=&quot;string&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:Parameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:ProfileParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:QueryStringParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    QueryStringField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:SessionParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    SessionField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n        &lt;/DeleteParameters&gt;  \n        &lt;FilterParameters&gt;  \n                &lt;asp:ControlParameter  \n                    ControlID=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:CookieParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    CookieName=&quot;string&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:FormParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    FormField=&quot;string&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:Parameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:ProfileParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:QueryStringParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    QueryStringField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:SessionParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    SessionField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n        &lt;/FilterParameters&gt;  \n        &lt;InsertParameters&gt;  \n                &lt;asp:ControlParameter  \n                    ControlID=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:CookieParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    CookieName=&quot;string&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:FormParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    FormField=&quot;string&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:Parameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:ProfileParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:QueryStringParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    QueryStringField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:SessionParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    SessionField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n        &lt;/InsertParameters&gt;  \n        &lt;SelectParameters&gt;  \n                &lt;asp:ControlParameter  \n                    ControlID=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:CookieParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    CookieName=&quot;string&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:FormParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    FormField=&quot;string&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:Parameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:ProfileParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:QueryStringParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    QueryStringField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:SessionParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    SessionField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n        &lt;/SelectParameters&gt;  \n        &lt;UpdateParameters&gt;  \n                &lt;asp:ControlParameter  \n                    ControlID=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:CookieParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    CookieName=&quot;string&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:FormParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    FormField=&quot;string&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:Parameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:ProfileParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    PropertyName=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:QueryStringParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    QueryStringField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n                &lt;asp:SessionParameter  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DefaultValue=&quot;string&quot;  \n                    Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;  \n                    Name=&quot;string&quot;  \n                    SessionField=&quot;string&quot;  \n                    Size=&quot;integer&quot;  \n                    Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|  \n                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  \n                        Single|Double|Decimal|DateTime|String&quot;  \n                /&gt;  \n        &lt;/UpdateParameters&gt;  \n&lt;/asp:ObjectDataSource&gt;\n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource__ctor\" data-linktype=\"self-bookmark\">ObjectDataSource()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">ObjectDataSource(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class with the specified type name and data retrieval method name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_CacheDuration\" data-linktype=\"self-bookmark\">CacheDuration</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy\" data-linktype=\"self-bookmark\">CacheExpirationPolicy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_CacheKeyDependency\" data-linktype=\"self-bookmark\">CacheKeyDependency</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_ConflictDetection\" data-linktype=\"self-bookmark\">ConflictDetection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that determines whether or not just the new values are passed to the <code>Update</code> method or both the old and new values are passed to the <code>Update</code> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_ConvertNullToDBNull\" data-linktype=\"self-bookmark\">ConvertNullToDBNull</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter\" data-linktype=\"relative-path\">Parameter</a> values that are passed to an update, insert, or delete operation are automatically converted from <code>null</code> to the <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> value by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName\" data-linktype=\"self-bookmark\">DataObjectTypeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of a class that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control uses for a parameter in an update, insert, or delete data operation, instead of passing individual values from the data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod\" data-linktype=\"self-bookmark\">DeleteMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to delete data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters\" data-linktype=\"self-bookmark\">DeleteParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parameters collection that contains the parameters that are used by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteMethod*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_EnableCaching\" data-linktype=\"self-bookmark\">EnableCaching</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control has data caching enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_EnablePaging\" data-linktype=\"self-bookmark\">EnablePaging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the data source control supports paging through the set of data that it retrieves.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_FilterExpression\" data-linktype=\"self-bookmark\">FilterExpression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a filtering expression that is applied when the method that is specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property is called.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_FilterParameters\" data-linktype=\"self-bookmark\">FilterParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of parameters that are associated with any parameter placeholders in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.FilterExpression*</span> string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_InsertMethod\" data-linktype=\"self-bookmark\">InsertMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to insert data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_InsertParameters\" data-linktype=\"self-bookmark\">InsertParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parameters collection that contains the parameters that are used by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertMethod*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName\" data-linktype=\"self-bookmark\">MaximumRowsParameterName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the business object data retrieval method parameter that is used to indicate the number of records to retrieve for data source paging support.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString\" data-linktype=\"self-bookmark\">OldValuesParameterFormatString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a format string to apply to the names of the parameters for original values that are passed to the <code>Delete</code> or <code>Update</code> methods.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_ParsingCulture\" data-linktype=\"self-bookmark\">ParsingCulture</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a or sets a value that indicates what culture information is used when converting string values to actual property types in order to construct an object of the type indicated by <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod\" data-linktype=\"self-bookmark\">SelectCountMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to retrieve a row count.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_SelectMethod\" data-linktype=\"self-bookmark\">SelectMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to retrieve data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_SelectParameters\" data-linktype=\"self-bookmark\">SelectParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of parameters that are used by the method specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_SortParameterName\" data-linktype=\"self-bookmark\">SortParameterName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the business object that the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> parameter used to specify a sort expression for data source sorting support.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_SqlCacheDependency\" data-linktype=\"self-bookmark\">SqlCacheDependency</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName\" data-linktype=\"self-bookmark\">StartRowIndexParameterName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the data retrieval method parameter that is used to indicate the value of the identifier of the first record to retrieve for data source paging support.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_TypeName\" data-linktype=\"self-bookmark\">TypeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the class that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object represents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod\" data-linktype=\"self-bookmark\">UpdateMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to update data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters\" data-linktype=\"self-bookmark\">UpdateParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parameters collection that contains the parameters that are used by the method that is specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateMethod*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Delete\" data-linktype=\"self-bookmark\">Delete()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a delete operation by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteMethod*</span> property with any parameters that are in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteParameters*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_GetView_System_String_\" data-linktype=\"self-bookmark\">GetView(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the named data source view that is associated with the data source control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_GetViewNames\" data-linktype=\"self-bookmark\">GetViewNames()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a collection of names representing the list of view objects that are associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Insert\" data-linktype=\"self-bookmark\">Insert()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs an insert operation by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertMethod*</span> property and any parameters in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertParameters*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_OnInit_System_EventArgs_\" data-linktype=\"self-bookmark\">OnInit(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_LoadComplete\" data-linktype=\"relative-path\">LoadComplete</a> event handler to the page that contains the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_SaveViewState\" data-linktype=\"self-bookmark\">SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Select\" data-linktype=\"self-bookmark\">Select()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves data from the underlying data storage by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property with the parameters in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectParameters*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_TrackViewState\" data-linktype=\"self-bookmark\">TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tracks view-state changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control so that they can be stored in the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Update\" data-linktype=\"self-bookmark\">Update()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs an update operation by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateMethod*</span> property and any parameters that are in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateParameters*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Deleted\" data-linktype=\"self-bookmark\">Deleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Delete*</span> operation has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"self-bookmark\">Deleting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Delete*</span> operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Filtering\" data-linktype=\"self-bookmark\">Filtering</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before a filter operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Inserted\" data-linktype=\"self-bookmark\">Inserted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Insert*</span> operation has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Inserting\" data-linktype=\"self-bookmark\">Inserting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Insert*</span> operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"self-bookmark\">ObjectCreated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the object that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.TypeName*</span> property is created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"self-bookmark\">ObjectCreating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before the object that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.TypeName*</span> property is created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"self-bookmark\">ObjectDisposing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before the object that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.TypeName*</span> property is discarded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"self-bookmark\">Selected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Select*</span> operation has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"self-bookmark\">Selecting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Select*</span> operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Updated\" data-linktype=\"self-bookmark\">Updated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Update*</span> operation has completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"self-bookmark\">Updating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Update*</span> operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource__ctor\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectDataSource()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ObjectDataSource ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectDataSource(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class with the specified type name and data retrieval method name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ObjectDataSource (string typeName, string selectMethod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the class that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> works with.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> invokes to retrieve data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the <code>typeName</code> parameter can be a partially qualified type for code that is located in the Bin or App_Code directory or a fully qualified type name for code that is registered in the global assembly cache. If you use the global assembly cache, you must add the appropriate reference to the <code>assemblies</code> section of the Machine.config or Web.config configuration file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_CacheDuration\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDuration</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int CacheDuration { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of seconds that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> caches the results of a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property invocation. The default is 0. The value cannot be negative.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports data caching. While data is cached, calls to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieve data from the cache rather than from the business object that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> works with. When the cache expires, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieves data from the business object, and then caches the data again.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically caches data when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property is set to <code>true</code> and the CacheDuration property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded. A value of 0 indicates an infinitely long cache.  </p>\n<p> The cache is regulated by a combination of the duration and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> setting. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> property is set to the <a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a> value, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> caches data on the first call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method and holds it in memory for, at most, the amount of time that is specified by the CacheDuration property. The data might be released before the duration time, if the memory is needed. The cache is then refreshed during the next call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> property is set to <a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a> value, the data source control caches data on the first call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method, but resets the time window for which it holds the cache on each subsequent call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. The cache expires if there is no activity for a time that is equal to the CacheDuration property since the last call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object supports caching. The second code example demonstrates how to implement a wrapper method that returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to enable caching with an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object.  </p>\n<p> The following code example demonstrates how an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports caching. To enable caching, you must implement the method that retrieves data, which is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property, to return the data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object. In this example, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property is set to <code>true</code>, and the CacheDuration and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> properties are set. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> caches data that is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property for 30 seconds.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_6#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          enablecaching=&quot;True&quot;\n          cacheduration=&quot;30&quot;\n          cacheexpirationpolicy=&quot;Absolute&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_6#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          enablecaching=&quot;True&quot;\n          cacheduration=&quot;30&quot;\n          cacheexpirationpolicy=&quot;Absolute&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to implement a wrapper method that returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to enable caching with an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. In the base implementation of the <code>EmployeeLogic</code> class, the <code>GetAllEmployees</code> method returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> object. Instead of refactoring the object completely to work with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> on a Web Forms page, a wrapper method named <code>GetAllEmployeesAsDataSet</code> is added that returns a set of <code>NorthwindEmployee</code> data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_5#3\">   &#39; To support basic filtering, the employees cannot\n   &#39; be returned as an array of objects, rather as a\n   &#39; DataSet of the raw data values.\n   Public Shared Function GetAllEmployeesAsDataSet() As DataSet\n      Dim employees As ICollection = GetAllEmployees()\n\n      Dim ds As New DataSet(&quot;Table&quot;)\n\n      &#39; Create the schema of the DataTable.\n      Dim dt As New DataTable()\n      Dim dc As DataColumn\n      dc = New DataColumn(&quot;FirstName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;LastName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Title&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Courtesy&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Supervisor&quot;, GetType(Int32))\n      dt.Columns.Add(dc)\n\n      &#39; Add rows to the DataTable.\n      Dim emplEnum As IEnumerator = employees.GetEnumerator()\n      Dim row As DataRow\n      Dim ne As NorthwindEmployee\n      While emplEnum.MoveNext()\n         ne = CType(emplEnum.Current, NorthwindEmployee)\n         row = dt.NewRow()\n         row(&quot;FirstName&quot;) = ne.FirstName\n         row(&quot;LastName&quot;) = ne.LastName\n         row(&quot;Title&quot;) = ne.Title\n         row(&quot;Courtesy&quot;) = ne.Courtesy\n         row(&quot;Supervisor&quot;) = ne.Supervisor\n         dt.Rows.Add(row)\n      End While\n      &#39; Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt)\n\n      Return ds\n   End Function &#39;GetAllEmployeesAsDataSet\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_5#3\">    //\n    // To support basic filtering, the employees cannot\n    // be returned as an array of objects, rather as a\n    // DataSet of the raw data values.\n    public static DataSet GetAllEmployeesAsDataSet () {\n      ICollection employees = GetAllEmployees();\n\n      DataSet ds = new DataSet(&quot;Table&quot;);\n\n      // Create the schema of the DataTable.\n      DataTable dt = new DataTable();\n      DataColumn dc;\n      dc = new DataColumn(&quot;FirstName&quot;, typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;LastName&quot;,  typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Title&quot;,     typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Courtesy&quot;,  typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Supervisor&quot;,typeof(Int32));  dt.Columns.Add(dc);\n\n      // Add rows to the DataTable.\n      IEnumerator emplEnum = employees.GetEnumerator();\n      DataRow row;\n      NorthwindEmployee ne;\n      while (emplEnum.MoveNext()) {\n        ne = emplEnum.Current as NorthwindEmployee;\n        row = dt.NewRow();\n        row[&quot;FirstName&quot;]  = ne.FirstName;\n        row[&quot;LastName&quot;]   = ne.LastName;\n        row[&quot;Title&quot;]      = ne.Title;\n        row[&quot;Courtesy&quot;]   = ne.Courtesy;\n        row[&quot;Supervisor&quot;] = ne.Supervisor;\n        dt.Rows.Add(row);\n      }\n      // Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt);\n\n      return ds;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheExpirationPolicy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a> values. The default is <a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports data caching. While data is cached, calls to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieve data from the cache rather than from the business object that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> works with. When the cache expires, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieves data from the business object, and then caches the data again.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically caches data when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property is set to <code>true</code> and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded. A value of 0 indicates an infinitely long cache period.  </p>\n<p> The cache is regulated by a combination of the duration and the CacheExpirationPolicy setting. If the CacheExpirationPolicy property is set to the <a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a> value, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> caches data on the first call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method and holds it in memory for, at most, the amount of time that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> property. The data might be released before the duration time, if the memory is needed. The cache is then refreshed during the next call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. If the CacheExpirationPolicy property is set to the <a class=\"xref\" href=\"system.web.ui.datasourcecacheexpiry\" data-linktype=\"relative-path\">DataSourceCacheExpiry</a> value, the data source control caches data on the first call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method, but resets the time window for which it holds the cache for each subsequent call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. The cache expires if there is no activity for a time that is equal to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> property since the last call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object supports filtering and caching. The second code example demonstrates how to implement a wrapper method that returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to enable caching and filtering with an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object.  </p>\n<p> The following code example demonstrates how an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports filtering and caching. To enable filtering and caching, you must implement the method that retrieves data, which is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property, to return the data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object. In this example, caching is enabled because the <code>EmployeeLogic</code> object returns data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property is set to <code>true</code>, and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> and CacheExpirationPolicy properties are set. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> caches data that is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property for 30 seconds.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_6#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          enablecaching=&quot;True&quot;\n          cacheduration=&quot;30&quot;\n          cacheexpirationpolicy=&quot;Absolute&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_6#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          enablecaching=&quot;True&quot;\n          cacheduration=&quot;30&quot;\n          cacheexpirationpolicy=&quot;Absolute&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to implement a wrapper method that returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to enable caching and filtering with an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. In the base implementation of the <code>EmployeeLogic</code> class, the <code>GetAllEmployees</code> method returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>. Instead of refactoring the object completely to work with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> on a Web Forms page, a wrapper method named <code>GetAllEmployeesAsDataSet</code> is added that returns a set of <code>NorthwindEmployee</code> data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_5#3\">   &#39; To support basic filtering, the employees cannot\n   &#39; be returned as an array of objects, rather as a\n   &#39; DataSet of the raw data values.\n   Public Shared Function GetAllEmployeesAsDataSet() As DataSet\n      Dim employees As ICollection = GetAllEmployees()\n\n      Dim ds As New DataSet(&quot;Table&quot;)\n\n      &#39; Create the schema of the DataTable.\n      Dim dt As New DataTable()\n      Dim dc As DataColumn\n      dc = New DataColumn(&quot;FirstName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;LastName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Title&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Courtesy&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Supervisor&quot;, GetType(Int32))\n      dt.Columns.Add(dc)\n\n      &#39; Add rows to the DataTable.\n      Dim emplEnum As IEnumerator = employees.GetEnumerator()\n      Dim row As DataRow\n      Dim ne As NorthwindEmployee\n      While emplEnum.MoveNext()\n         ne = CType(emplEnum.Current, NorthwindEmployee)\n         row = dt.NewRow()\n         row(&quot;FirstName&quot;) = ne.FirstName\n         row(&quot;LastName&quot;) = ne.LastName\n         row(&quot;Title&quot;) = ne.Title\n         row(&quot;Courtesy&quot;) = ne.Courtesy\n         row(&quot;Supervisor&quot;) = ne.Supervisor\n         dt.Rows.Add(row)\n      End While\n      &#39; Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt)\n\n      Return ds\n   End Function &#39;GetAllEmployeesAsDataSet\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_5#3\">    //\n    // To support basic filtering, the employees cannot\n    // be returned as an array of objects, rather as a\n    // DataSet of the raw data values.\n    public static DataSet GetAllEmployeesAsDataSet () {\n      ICollection employees = GetAllEmployees();\n\n      DataSet ds = new DataSet(&quot;Table&quot;);\n\n      // Create the schema of the DataTable.\n      DataTable dt = new DataTable();\n      DataColumn dc;\n      dc = new DataColumn(&quot;FirstName&quot;, typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;LastName&quot;,  typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Title&quot;,     typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Courtesy&quot;,  typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Supervisor&quot;,typeof(Int32));  dt.Columns.Add(dc);\n\n      // Add rows to the DataTable.\n      IEnumerator emplEnum = employees.GetEnumerator();\n      DataRow row;\n      NorthwindEmployee ne;\n      while (emplEnum.MoveNext()) {\n        ne = emplEnum.Current as NorthwindEmployee;\n        row = dt.NewRow();\n        row[&quot;FirstName&quot;]  = ne.FirstName;\n        row[&quot;LastName&quot;]   = ne.LastName;\n        row[&quot;Title&quot;]      = ne.Title;\n        row[&quot;Courtesy&quot;]   = ne.Courtesy;\n        row[&quot;Supervisor&quot;] = ne.Supervisor;\n        dt.Rows.Add(row);\n      }\n      // Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt);\n\n      return ds;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_CacheKeyDependency\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_CacheKeyDependency_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheKeyDependency</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string CacheKeyDependency { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A key that identifies all cache objects created by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CacheKeyDependency property can be set to any arbitrary string value.  </p>\n<p> All cache objects are explicitly expired when the key is expired. This allows you to invalidate cache entries that are created by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> from your own page code programmatically.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports data caching. While data is cached, calls to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieve data from the cache rather than from the business object that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> works with. When the cache expires, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieves data from the business object, and then caches the data again.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically caches data when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\" data-linktype=\"relative-path\">EnableCaching</a> property is set to <code>true</code> and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded. A value of 0 indicates an infinitely long cache.  </p>\n<p> You can set the CacheKeyDependency property to create a dependency between all cache entries that are created by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the key. You can expire all the cache entries programmatically at any time by expiring the key. Expire the key by using the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Remove_\" data-linktype=\"relative-path\">Remove</a> method with the current CacheKeyDependency value as the parameter.  </p>\n<p> A unique cache entry is created for every combination of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> properties. Multiple <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls can use the same cache entries in scenarios where they load data using the same type, method, and parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.  </p>\n<p> The first example shows a Web page that contains two <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls, a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The first <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control are used to retrieve and display employee names from the database. The second <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control are used to retrieve and display the employee record that is selected by the user.  </p>\n<p> Caching is enabled for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. Therefore, each record is retrieved only one time from the database. The CacheKeyDependency property is set to &quot;EmployeeDetails&quot;, but any string value can work as the key. The Web page also includes a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control that the user can click to expire the cached data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#3\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n          \n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n        \n     &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; \n          EnableCaching=&quot;true&quot;\n          CacheKeyDependency=&quot;EmployeeDetails&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n        \n        &lt;asp:Button \n        ID=&quot;Button1&quot; \n        runat=&quot;server&quot; \n        Text=&quot;Check for latest data&quot; \n        OnClick=&quot;Button1_Click&quot; /&gt;\n        \n    &lt;/div&gt;\n    &lt;/form&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#3\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n          \n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n        \n     &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; \n          EnableCaching=&quot;true&quot;\n          CacheKeyDependency=&quot;EmployeeDetails&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n        \n        &lt;asp:Button \n        ID=&quot;Button1&quot; \n        runat=&quot;server&quot; \n        Text=&quot;Check for latest data&quot; \n        OnClick=&quot;Button1_Click&quot; /&gt;\n        \n    &lt;/div&gt;\n    &lt;/form&gt;\n</code></pre><p> The second example shows a handler for the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event and a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_Click\" data-linktype=\"relative-path\">Click</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control. The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event handler creates a cache item with a key set to the CacheKeyDependency value. The <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_Click\" data-linktype=\"relative-path\">Click</a> event handler removes the cache item whose key is equal to the CacheKeyDependency value. When the cache item is removed, all the cached data that is dependent on the key is expired.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#4\">    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            Cache[ObjectDataSource2.CacheKeyDependency] = &quot;CacheExample&quot;;\n        }\n    }\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        Cache.Remove(ObjectDataSource2.CacheKeyDependency);\n        Cache[ObjectDataSource2.CacheKeyDependency] = &quot;CacheExample&quot;;\n        DetailsView1.DataBind();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#4\">    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        If Not (IsPostBack) Then\n            Cache(ObjectDataSource2.CacheKeyDependency) = &quot;CacheExample&quot;\n        End If\n    End Sub\n    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As EventArgs)\n        Cache.Remove(ObjectDataSource2.CacheKeyDependency)\n        Cache(ObjectDataSource2.CacheKeyDependency) = &quot;CacheExample&quot;\n        DetailsView1.DataBind()\n    End Sub\n</code></pre><p> The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and the Employees table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">Public Class EmployeeLogic\n    Public Shared Function GetFullNamesAndIDs() As Array\n        Dim ndc As New NorthwindDataContext()\n\n        Dim employeeQuery = _\n            From e In ndc.Employees _\n            Order By e.LastName _\n            Select FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID\n\n        Return employeeQuery.ToArray()\n    End Function\n\n    Public Shared Function GetEmployee(ByVal empID As Integer) As Employee\n\n        If (empID &lt; 0) Then\n            Return Nothing\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim employeeQuery = _\n                From e In ndc.Employees _\n                Where e.EmployeeID = empID _\n                Select e\n\n            Return employeeQuery.Single()\n        End If\n    End Function\n\n    Public Shared Sub UpdateEmployeeAddress(ByVal originalEmployee As Employee, ByVal address As String, ByVal city As String, ByVal postalcode As String)\n\n        Dim ndc As New NorthwindDataContext()\n        ndc.Employees.Attach(originalEmployee, False)\n        originalEmployee.Address = address\n        originalEmployee.City = city\n        originalEmployee.PostalCode = postalcode\n        ndc.SubmitChanges()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">    public class EmployeeLogic\n    {\n        public static Array GetFullNamesAndIDs()\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n\n            var employeeQuery =\n                from e in ndc.Employees\n                orderby e.LastName\n                select new { FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID };\n\n            return employeeQuery.ToArray();\n        }\n\n        public static Employee GetEmployee(int empID)\n        {\n            if (empID &lt; 0)\n            {\n                return null;\n            }\n            else\n            {\n                NorthwindDataContext ndc = new NorthwindDataContext();\n                var employeeQuery =\n                    from e in ndc.Employees\n                    where e.EmployeeID == empID\n                    select e;\n\n                return employeeQuery.Single();\n            }\n        }\n     \n        public static void UpdateEmployeeAddress(Employee originalEmployee, string address, string city, string postalcode)\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            ndc.Employees.Attach(originalEmployee, false);\n            originalEmployee.Address = address;\n            originalEmployee.City = city;\n            originalEmployee.PostalCode = postalcode;\n            ndc.SubmitChanges();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_ConflictDetection\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_ConflictDetection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConflictDetection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that determines whether or not just the new values are passed to the <code>Update</code> method or both the old and new values are passed to the <code>Update</code> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.ConflictOptions ConflictDetection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> values. The default is <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property determines whether parameters for old and new values are applied to the method specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property. For example, if the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property returns a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> control with the columns <code>Name</code> and <code>Number</code>, and the ConflictDetection property is set to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> field, parameters are created for <code>Name</code> and <code>Number</code> for the <code>Update</code> method. If the ConflictDetection property is set to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> value, parameters are created for <code>Name</code>, <code>Number</code>, <code>original_Name</code>, and <code>original_Number</code>. (The exact name of the parameters for the original values depends on the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property.) The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> then determines whether the method that is specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property has parameters that match.  </p>\n<p> Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data. For example, one client reads data and presents it to a user, while another client reads the same data and presents it to a different user. If both users update the data and submit it to the data storage, an unexpected result might occur, because both clients might provide different values for the same data. This is considered a conflict. By setting the ConflictDetection property to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> value, the <code>Update</code> method can then compare the old and new values to the original data source to detect conflicts and handle them as necessary.  </p>\n<p> The ConflictDetection property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_ConflictDetection_\" data-linktype=\"relative-path\">ConflictDetection</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_ConvertNullToDBNull\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_ConvertNullToDBNull_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertNullToDBNull</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter\" data-linktype=\"relative-path\">Parameter</a> values that are passed to an update, insert, or delete operation are automatically converted from <code>null</code> to the <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> value by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ConvertNullToDBNull { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if any <code>null</code> values in <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter\" data-linktype=\"relative-path\">Parameter</a> objects passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control are automatically converted to <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> values; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Not converting <code>null</code> to the <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> value can result in errors at run time. Use the ConvertNullToDBNull property to indicate whether <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter\" data-linktype=\"relative-path\">Parameter</a> values that are passed to an update, insert, or delete operation are automatically converted from <code>null</code> to the <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a> value by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataObjectTypeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of a class that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control uses for a parameter in an update, insert, or delete data operation, instead of passing individual values from the data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DataObjectTypeName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A partially or fully qualified class name that identifies the type of the object that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> can use as a parameter for an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Insert*</span>, <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Update*</span>, or a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Delete*</span> operation. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Instead of specifying several parameters that are passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> methods, you can create one object that aggregates several data field values. This one object is passed to the methods, instead of several parameters.  </p>\n<p> The default behavior of an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control that is bound to a data-bound control is that the data-bound control creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter\" data-linktype=\"relative-path\">Parameter</a> object for each parameter in the data source. If the business object has many fields, the resulting method also has many fields. The DataObjectTypeName property allows you to specify a type that has a property for each data field. Then, instead of passing several parameters to the method, the runtime creates one object and sets all of its properties. This one object is added to the parameters collection for the method call.  </p>\n<p> The type that is specified by the DataObjectTypeName property must have a default constructor that has no parameters, so the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control can create an instance of the type. The type must also have settable properties that allow the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control to populate the object with values that are passed from the data-bound control. The property names on the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control are expected to exactly match the parameter names of values that are passed by the data-bound control.  </p>\n<p> When the DataObjectTypeName property is set and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is associated with a data-bound control, the methods that are specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> properties must each have one parameter of the type that is specified in the DataObjectTypeName property. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ConflictDetection_\" data-linktype=\"relative-path\">ConflictDetection</a> property is set to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> value, the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property must have one parameter of the type that is specified in the DataObjectTypeName property. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ConflictDetection_\" data-linktype=\"relative-path\">ConflictDetection</a> property is set to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> value, the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property must have two parameters of the type that is specified in the DataObjectTypeName property. The first parameter contains the original values; the second parameter contains the new values.  </p>\n<p> The DataObjectTypeName property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The section contains two code examples. The first code example demonstrates how to implement a type that combines all parameter values into one object, using the DataObjectTypeName property. The second code example shows the Web page that uses the two classes that are used in the first code example.  </p>\n<p> The following code example demonstrates how to implement a type that combines all parameter values into one object, using the DataObjectTypeName property. The select method of the <code>AggregateData</code> class returns a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object with two columns named <code>Name</code> and <code>Number</code>. Similarly, the <code>NewData</code> class defines two read/write properties, <code>Name</code> and <code>Number</code>. The <code>Insert</code> method of the <code>AggregateData</code> class takes one parameter of type <code>NewData</code>. The <code>TypeName</code> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> is set to <code>AggregateData</code> and the DataObjectTypeName property is set to <code>NewData</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"ObjectDataSourceDataObjectTypeName#2\">using System;\nusing System.Data;\nusing System.Configuration;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\n\nnamespace Samples.AspNet.CS\n{\n\n\t/// &lt;summary&gt;\n\t/// Summary description for AggregateData\n\t/// &lt;/summary&gt;\n\tpublic class AggregateData\n\t{\n\n\t\tpublic AggregateData()\n\t\t{\n\n\t\t}\n\n\t\tstatic DataTable table;\n\n\t\tprivate DataTable CreateData()\n\t\t{\n\t\t\ttable = new DataTable();\n\t\t\ttable.Columns.Add(&quot;Name&quot;, typeof(string));\n\t\t\ttable.Columns.Add(&quot;Number&quot;, typeof(int));\n\t\t\ttable.Rows.Add(new object[] { &quot;one&quot;, 1 });\n\t\t\ttable.Rows.Add(new object[] { &quot;two&quot;, 2 });\n\t\t\ttable.Rows.Add(new object[] { &quot;three&quot;, 3 });\n\t\t\treturn table;\n\t\t}\n\n\t\tpublic DataTable Select()\n\t\t{\n\t\t\tif (table == null)\n\t\t\t{\n\t\t\t\treturn CreateData();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn table;\n\t\t\t}\n\t\t}\n\n\t\tpublic int Insert(NewData newRecord)\n\t\t{\n\t\t\ttable.Rows.Add(new object[] { newRecord.Name, newRecord.Number });\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tpublic class NewData\n\t{\n\t\tprivate string nameValue;\n\t\tprivate int numberValue;\n\n\t\tpublic string Name\n\t\t{\n\t\t\tget { return nameValue; }\n\t\t\tset { nameValue = value; }\n\t\t}\n\n\t\tpublic int Number\n\t\t{\n\t\t\tget { return numberValue; }\n\t\t\tset { numberValue = value; }\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ObjectDataSourceDataObjectTypeName#2\">Imports System\nImports System.Data\nImports System.Configuration\nImports System.Web\nImports System.Web.Security\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Web.UI.WebControls.WebParts\nImports System.Web.UI.HtmlControls\n\nNamespace Samples.AspNet.VB\n\n    Public Class AggregateData\n\n        Public Sub New()\n        End Sub\n\n        Shared table As DataTable\n\n        Private Function CreateData() As DataTable\n            table = New DataTable()\n            table.Columns.Add(&quot;Name&quot;, GetType(String))\n            table.Columns.Add(&quot;Number&quot;, GetType(Integer))\n            table.Rows.Add(New Object() {&quot;one&quot;, 1})\n            table.Rows.Add(New Object() {&quot;two&quot;, 2})\n            table.Rows.Add(New Object() {&quot;three&quot;, 3})\n            Return table\n        End Function\n\n        Public Function SelectMethod() As DataTable\n            If table Is Nothing Then\n                Return CreateData()\n            Else\n                Return table\n            End If\n        End Function\n\n\n        Public Function Insert(ByVal newRecord As NewData) As Integer\n\n            table.Rows.Add(New Object() {newRecord.Name, newRecord.Number})\n            Return 1\n        End Function\n    End Class\n\n\n    Public Class NewData\n\n        Private nameValue As String\n        Private numberValue As Integer\n\n        Public Property Name() As String\n            Get\n                Return nameValue\n            End Get\n            Set(ByVal value As String)\n                nameValue = value\n            End Set\n        End Property\n\n        Public Property Number() As Integer\n            Get\n                Return numberValue\n            End Get\n            Set(ByVal value As Integer)\n                numberValue = value\n            End Set\n        End Property\n    End Class\nEnd Namespace\n</code></pre><p> The following code example shows the Web page that uses the two classes that are used in the preceding code example.  </p>\n<pre><code class=\"lang-cs\" name=\"ObjectDataSourceDataObjectTypeName#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \n\n&lt;script runat=&quot;server&quot;&gt;\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ObjectDataSource - DataObjectTypeName Property Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;asp:DetailsView \n            ID=&quot;DetailsView1&quot; \n            runat=&quot;server&quot; \n            AllowPaging=&quot;True&quot; \n            AutoGenerateInsertButton=&quot;True&quot;\n            DataSourceID=&quot;ObjectDataSource1&quot; \n            Height=&quot;50px&quot; \n            Width=&quot;125px&quot;&gt;\n        &lt;/asp:DetailsView&gt;\n        &lt;asp:ObjectDataSource \n            ID=&quot;ObjectDataSource1&quot; \n            runat=&quot;server&quot; \n            DataObjectTypeName=&quot;Samples.AspNet.CS.NewData&quot;\n            InsertMethod=&quot;Insert&quot; \n            SelectMethod=&quot;Select&quot; \n            TypeName=&quot;Samples.AspNet.CS.AggregateData&quot;&gt;\n        &lt;/asp:ObjectDataSource&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ObjectDataSourceDataObjectTypeName#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \n\n&lt;script runat=&quot;server&quot;&gt;\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ObjectDataSource - DataObjectTypeName Property Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;asp:DetailsView \n            ID=&quot;DetailsView1&quot; \n            runat=&quot;server&quot; \n            AllowPaging=&quot;True&quot; \n            AutoGenerateInsertButton=&quot;True&quot;\n            DataSourceID=&quot;ObjectDataSource1&quot; \n            Height=&quot;50px&quot; \n            Width=&quot;125px&quot;&gt;\n        &lt;/asp:DetailsView&gt;\n        &lt;asp:ObjectDataSource \n            ID=&quot;ObjectDataSource1&quot; \n            runat=&quot;server&quot; \n            DataObjectTypeName=&quot;Samples.AspNet.VB.NewData&quot;\n            InsertMethod=&quot;Insert&quot; \n            SelectMethod=&quot;SelectMethod&quot; \n            TypeName=&quot;Samples.AspNet.VB.AggregateData&quot;&gt;\n        &lt;/asp:ObjectDataSource&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_DeleteMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to delete data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DeleteMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> uses to delete data. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The business object is assumed to delete data one record at a time, rather than in a batch.  </p>\n<p> The DeleteMethod property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> Make sure that the parameter names configured for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection match the column names that are returned by the select method.  </p>\n<h2 id=\"object-lifetime\">Object Lifetime</h2>\n<p> The method that is identified by the DeleteMethod property can be an instance method or a <code>static</code> (<code>Shared</code> in Visual Basic) method. If it is an instance method, the business object is created and destroyed each time the DeleteMethod property is called. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> events to work with the business object before the DeleteMethod property is called. You can also handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event that is raised after the DeleteMethod property is called. If the business object implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface, the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method is called before the object is destroyed. If the method is a <code>static</code> (<code>Shared</code> in Visual Basic) method, the business object is never created and you cannot handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> events.  </p>\n<h2 id=\"parameter-merging\">Parameter Merging</h2>\n<p> Parameters are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection from three sources:  </p>\n<ul>\n<li><p>From the data-bound control, at run time.  </p>\n</li>\n<li><p>From the <code>DeleteParameters</code> element, declaratively.  </p>\n</li>\n<li><p>From the <code>Deleting</code> method, declaratively.  </p>\n<p>First, any parameters that are generated from data-bound controls are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection. For example, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that has the columns <code>Name</code> and <code>Number</code>, parameters for <code>Name</code> and <code>Number</code> are added to the collection. The exact name of the parameter depends on the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property. The data type of these parameters is <code>string</code>. Next, the parameters that are listed in the <code>DeleteParameters</code> element are added. If a parameter in the <code>DeleteParameters</code> element is found with the same name as a parameter that is already in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection, the existing parameter is modified to match the parameter that is specified in the <code>DeleteParameters</code> element. Typically, this is used to modify the type of the data in the parameter. Finally, you can programmatically add and remove parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event, which occurs before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> method is run. The method is resolved after the parameters are merged. Method resolution is discussed in the next section.  </p>\n</li>\n</ul>\n<h2 id=\"method-resolution\">Method Resolution</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <code>DeleteParameters</code> element, and the parameters that were added in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event handler are all merged. (For more information, see the preceding section.) The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object then attempts to find a method to call. First, it looks for one or more methods with the name that is specified in the DeleteMethod property. If no match is found, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> exception is thrown. If a match is found, it then looks for matching parameter names. For example, suppose the type that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property has two methods named <code>DeleteARecord</code>. One <code>DeleteARecord</code> has one parameter, <code>ID</code>, and the other <code>DeleteARecord</code> has two parameters, <code>Name</code> and <code>Number</code>. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection has only one parameter named <code>ID</code>, the <code>DeleteARecord</code> method with just the <code>ID</code> parameter is called. The type of the parameter is not checked in resolving the methods. The order of the parameters does not matter.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property is set, the method is resolved in a different way. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> looks for a method with the name that is specified in the DeleteMethod property that takes one parameter of the type that is specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property. In this case, the name of the parameter does not matter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. The second code example shows the <code>EmployeeLogic</code> class that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays a set of all employees, using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to retrieve the data from the <code>EmployeeLogic</code> object. Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton_\" data-linktype=\"relative-path\">AutoGenerateDeleteButton</a> property is set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically displays a <strong>Delete</strong> button.  </p>\n<p> If you click the <strong>Delete</strong> button, the delete operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection. In this code example, some preprocessing and post-processing steps are also performed. The <code>NorthwindEmployeeDeleting</code> delegate is called to handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event before the operation is performed, and the <code>NorthwindEmployeeDeleted</code> delegate is called to handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleted\" data-linktype=\"relative-path\">Deleted</a> event after the operation has completed to perform exception handling. In this example, if a <code>NorthwindDataException</code> is thrown, it is handled by the <code>NorthwindDataException</code> delegate.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nprivate void NorthwindEmployeeDeleting(object source, ObjectDataSourceMethodEventArgs e)\n{\n  // The GridView passes the ID of the employee\n  // to be deleted. However, the buisiness object, EmployeeLogic,\n  // requires a NorthwindEmployee parameter, named &quot;ne&quot;. Create\n  // it now and add it to the parameters collection.\n  IDictionary paramsFromPage = e.InputParameters;\n  if (paramsFromPage[&quot;EmpID&quot;] != null) {\n    NorthwindEmployee ne\n      = new NorthwindEmployee( Int32.Parse(paramsFromPage[&quot;EmpID&quot;].ToString()));\n    // Remove the old EmpID parameter.\n    paramsFromPage.Clear();\n    paramsFromPage.Add(&quot;ne&quot;, ne);\n  }\n}\n\nprivate void NorthwindEmployeeDeleted(object source, ObjectDataSourceStatusEventArgs e)\n{\n  // Handle the Exception if it is a NorthwindDataException\n  if (e.Exception != null)\n  {\n\n    // Handle the specific exception type. The ObjectDataSource wraps\n    // any Exceptions in a TargetInvokationException wrapper, so\n    // check the InnerException property for expected Exception types.\n    if (e.Exception.InnerException is NorthwindDataException)\n    {\n      Label1.Text = e.Exception.InnerException.Message;\n      // Because the exception is handled, there is\n      // no reason to throw it.\n      e.ExceptionHandled = true;\n    }\n  }\n}\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          autogeneratecolumns=&quot;false&quot;\n          datakeynames=&quot;EmpID&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;EmpID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;First Name&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Last Name&quot; datafield=&quot;LastName&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          ondeleting=&quot;NorthwindEmployeeDeleting&quot;\n          ondeleted=&quot;NorthwindEmployeeDeleted&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;EmpID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;asp:label id=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&#39; Called before a Delete operation.\n    Private Sub NorthwindEmployeeDeleting(ByVal source As Object, ByVal e As ObjectDataSourceMethodEventArgs)\n\n        &#39; The GridView passes the ID of the employee\n        &#39; to be deleted. However, the business object, EmployeeLogic,\n        &#39; requires a NorthwindEmployee parameter, named &quot;ne&quot;. Create\n        &#39; it now and add it to the parameters collection.\n        Dim paramsFromPage As IDictionary = e.InputParameters\n  \n        If Not paramsFromPage(&quot;EmpID&quot;) Is Nothing Then\n    \n            Dim ne As New NorthwindEmployee(paramsFromPage(&quot;EmpID&quot;).ToString())\n            &#39; Remove the old EmpID parameter.\n            paramsFromPage.Clear()\n            paramsFromPage.Add(&quot;ne&quot;, ne)\n    \n    \n        End If\n    End Sub &#39; NorthwindEmployeeDeleting\n\n    &#39; Called after a Delete operation.\n    Private Sub NorthwindEmployeeDeleted(ByVal source As Object, ByVal e As ObjectDataSourceStatusEventArgs)\n        &#39; Handle the Exception if it is a NorthwindDataException.\n        If Not e.Exception Is Nothing Then\n\n            &#39; Handle the specific exception type. The ObjectDataSource wraps\n            &#39; any Exceptions in a TargetInvokationException wrapper, so\n            &#39; check the InnerException property for the expected Exception types.\n            If e.Exception.InnerException.GetType().Equals(GetType(NorthwindDataException)) Then\n\n                Label1.Text = e.Exception.InnerException.Message\n                &#39; Because the exception is handled, there is\n                &#39; no reason to throw it.\n                e.ExceptionHandled = True\n      \n            End If\n        End If\n    End Sub &#39; NorthwindEmployeeDeleted\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          autogeneratecolumns=&quot;false&quot;\n          datakeynames=&quot;EmpID&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;EmpID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;First Name&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Last Name&quot; datafield=&quot;LastName&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          ondeleting=&quot;NorthwindEmployeeDeleting&quot;\n          ondeleted=&quot;NorthwindEmployeeDeleted&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;EmpID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;asp:label id=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example shows the <code>EmployeeLogic</code> class that is used in the preceding code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\nPublic Class EmployeeLogic\n\n   &#39; Return a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      &#39; Use the SqlDataSource class to wrap the\n      &#39; ADO.NET code required to query the database.\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, _\n                                  &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Return New NorthwindEmployee(anID)\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;Employee delete failed.&quot;)\n      End If &#39; Delete the object in memory.\n      ne = Nothing\n   End Sub &#39;DeleteEmployee\n\n\n   Public Shared Sub DeleteEmployeeByID(anID As Integer)\n      Dim tempEmp As New NorthwindEmployee(anID)\n      DeleteEmployee(tempEmp)\n   End Sub &#39;DeleteEmployeeByID\n\nEnd Class &#39;EmployeeLogic\n\nPublic Class NorthwindEmployee\n\n   Public Sub New()\n      ID = DBNull.Value\n      aLastName = &quot;&quot;\n      aFirstName = &quot;&quot;\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As Object\n      Get\n         Return ID\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public Function Delete() As Boolean\n      If ID.Equals(DBNull.Value) Then\n         &#39; The Employee object is not persisted.\n         Return True\n      Else\n         &#39; The Employee object is persisted.\n         &#39; Use the SqlDataSource control as a convenient wrapper for\n         &#39; the ADO.NET code needed to delete a record from the database.\n         Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n         Dim sds As New SqlDataSource()\n         Try\n            sds.ConnectionString = cts.ConnectionString\n            sds.DeleteParameters.Add(New Parameter(&quot;empID&quot;, TypeCode.Int32, Me.ID.ToString()))\n            sds.DeleteCommand = &quot;DELETE FROM [Order Details] &quot; &amp; _\n                &quot;WHERE OrderID IN (SELECT OrderID FROM Orders WHERE EmployeeID=@empID)&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM Orders WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM EmployeeTerritories WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            Return True\n         Finally\n            &#39; Clean up resources.\n            sds.Dispose()\n         End Try\n      End If\n   End Function &#39;Delete\nEnd Class &#39;NorthwindEmployee\n\nPublic Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\n\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      // Use the SqlDataSource class to wrap the\n      // ADO.NET code required to query the database.\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      return new NorthwindEmployee(anID);\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;Employee delete failed.&quot;); }\n      // Delete the object in memory.\n      ne = null;\n    }\n\n    public static void DeleteEmployeeByID(int anID) {\n        NorthwindEmployee tempEmp = new NorthwindEmployee(anID);\n        DeleteEmployee(tempEmp);\n    }\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public object EmpID {\n      get { return ID; }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n    public bool Delete () {\n      if (ID.Equals(DBNull.Value)) {\n        // The Employee object is not persisted.\n        return true;\n      }\n      else {\n        // The Employee object is persisted.\n        // Use the SqlDataSource control as a convenient wrapper for\n        // the ADO.NET code needed to delete a record from the database.\n        ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n        SqlDataSource sds = new SqlDataSource();\n\n        try {\n          sds.ConnectionString = cts.ConnectionString;\n          sds.DeleteParameters.Add(new Parameter(&quot;empID&quot;, TypeCode.Int32, this.ID.ToString()));\n          sds.DeleteCommand = &quot;DELETE FROM [Order Details] &quot; + \n              &quot;WHERE OrderID IN (SELECT OrderID FROM Orders WHERE EmployeeID=@empID)&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM Orders WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM EmployeeTerritories WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          return true;\n        }\n        finally {\n          // Clean up resources.\n          sds.Dispose();\n        }\n      }\n    }\n  }\n\n  public class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_DeleteParameters\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parameters collection that contains the parameters that are used by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteMethod*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a> that contains the parameters used by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteMethod*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The names and types of the parameters that are contained in the DeleteParameters collection must match the names and types of the parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> method signature. The parameter names are affected by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property and are case-sensitive. The parameters in the collection depend on the data that is in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically. For more information, see &quot;Parameter Merging&quot; in <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> and <a href=\"../Topic/Using%20Parameters%20with%20the%20ObjectDataSource%20Control.md\" data-linktype=\"relative-path\">Using Parameters with the ObjectDataSource Control</a>.  </p>\n<p> The DeleteParameters property retrieves the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> property that is contained by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. The second code example shows the <code>EmployeeLogic</code> class that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use the DeleteParameters property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays a set of all employees, using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to retrieve the data from the <code>EmployeeLogic</code> object. Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton_\" data-linktype=\"relative-path\">AutoGenerateDeleteButton</a> property is set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically displays a <strong>Delete</strong> button.  </p>\n<p> If you click the <strong>Delete</strong> button, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event is called with two parameters. One parameter, <code>EmpID</code>, comes from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, and is based on the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property. The other parameter comes from the declarative DeleteParameters property. The <code>EmployeeLogic</code> class overloads the <code>DeleteEmployee</code> method. One overload takes a <code>NorthwindEmployee</code> parameter, and the other takes an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> parameter named <code>anID</code>. In the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event, the entries in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> property are adjusted to include only one parameter named <code>anID</code> with the value from <code>original_EmpID</code>. When the event handler exists, the matching <code>DeleteEmployee</code> method is called.  </p>\n<p> The following code example shows the Web page that displays the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control and handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_11#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nprivate void NorthwindEmployeeDeleting(object source, ObjectDataSourceMethodEventArgs e)\n{\n  IDictionary paramsFromPage = e.InputParameters;\n\n  paramsFromPage.Remove(&quot;anID&quot;);\n  paramsFromPage.Add(&quot;anID&quot;, (int)paramsFromPage[&quot;EmpID&quot;]);\n  paramsFromPage.Remove(&quot;EmpID&quot;);\n    \n}\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          DataKeyNames=&quot;EmpID&quot;&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          OnDeleting=&quot;NorthwindEmployeeDeleting&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_11#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nPrivate Sub NorthwindEmployeeDeleting(source As Object, e As ObjectDataSourceMethodEventArgs)\n\n  Dim paramsFromPage As IDictionary = e.InputParameters\n\n  paramsFromPage.Remove(&quot;anID&quot;)\n  paramsFromPage.Add(&quot;anID&quot;, CInt(paramsFromPage(&quot;EmpID&quot;)))\n  paramsFromPage.Remove(&quot;EmpID&quot;)\n\nEnd Sub &#39; NorthwindEmployeeDeleting\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          DataKeyNames=&quot;EmpID&quot;&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          OnDeleting=&quot;NorthwindEmployeeDeleting&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example shows the <code>EmployeeLogic</code> class that is used in the preceding code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_11#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\nPublic Class EmployeeLogic\n\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      &#39; Use the SqlDataSource class to wrap the\n      &#39; ADO.NET code required to query the database.\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n                    Dim nwe As New NorthwindEmployee(CInt(id))\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Integer) As NorthwindEmployee\n      Return New NorthwindEmployee(anID)\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;Employee delete failed.&quot;)\n      End If &#39; Delete the object in memory.\n      ne = Nothing\n   End Sub &#39;DeleteEmployee\n\n\n   Public Shared Sub DeleteEmployee(anID As Integer)\n      Dim tempEmp As New NorthwindEmployee(anID)\n      DeleteEmployee(tempEmp)\n   End Sub &#39;DeleteEmployeeByID\n\n   &#39; And so on...\n\nEnd Class &#39;EmployeeLogic\n\nPublic Class NorthwindEmployee\n\n   Public Sub New(anID As Integer)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.firstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.lastName = sdr(&quot;LastName&quot;).ToString()\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As Object\n      Get\n         Return ID\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public Function Delete() As Boolean\n      If ID.Equals(DBNull.Value) Then\n         &#39; The Employee object is not persisted.\n         Return True\n      Else\n         &#39; The Employee object is persisted.\n         &#39; Use the SqlDataSource control as a convenient wrapper for\n         &#39; the ADO.NET code needed to delete a record from the database.\n         Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n         Dim sds As New SqlDataSource()\n         Try\n            sds.ConnectionString = cts.ConnectionString\n            sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID;&quot;\n                    Dim param As New Parameter(&quot;empID&quot;, TypeCode.Int32, CStr(Me.ID))\n            sds.DeleteParameters.Add(param)\n\n            &#39; To make this sample fully functional, uncomment these lines\n&#39;          int retval = sds.Delete();\n&#39;          if (retval == 1) { return true; }\n&#39;          return false;\n\n            Return True\n         Finally\n            sds.Dispose()\n         End Try\n      End If\n   End Function &#39;Delete\n\nEnd Class &#39;NorthwindEmployee\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\nEnd Class &#39;NorthwindDataException\n\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_11#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      // Use the SqlDataSource class to wrap the\n      // ADO.NET code required to query the database.\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          int id = (int) row[&quot;EmployeeID&quot;];\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(int anID) {\n      return new NorthwindEmployee(anID);\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;Employee delete failed.&quot;); }\n      // Delete the object in memory.\n      ne = null;\n    }\n\n    public static void DeleteEmployee(int anID) {\n        NorthwindEmployee tempEmp = new NorthwindEmployee(anID);\n        DeleteEmployee(tempEmp);\n    }\n  }\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee (int anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n      SqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public object EmpID {\n      get { return ID; }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n    public bool Delete () {\n      if (ID.Equals(DBNull.Value)) {\n        // The Employee object is not persisted.\n        return true;\n      }\n      else {\n        // The Employee object is persisted.\n        // Use the SqlDataSource control as a convenient wrapper for\n        // the ADO.NET code needed to delete a record from the database.\n        ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n        SqlDataSource sds = new SqlDataSource();\n        try {\n          sds.ConnectionString = cts.ConnectionString;\n          sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID;&quot;;\n          sds.DeleteParameters.Add(new Parameter(&quot;empID&quot;,TypeCode.Int32,this.ID.ToString()));\n\n          /* To make this sample fully functional, uncomment these lines\n          int retval = sds.Delete();\n          if (retval == 1) { return true; }\n          return false; */\n\n          return true;\n        }\n        finally {\n          sds.Dispose();\n        }\n      }\n    }\n  }\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_EnableCaching\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_EnableCaching_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableCaching</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control has data caching enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnableCaching { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data caching is enabled for the data source control; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The EnableCaching property is set to <code>true</code> when the method specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property returns a <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports data caching. While data is cached, calls to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieve data from the cache rather than the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> creating an instance of the business object and calling its data method. When the cache expires, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method retrieves data from the business object, and then caches the data again.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically caches data when the EnableCaching property is set to <code>true</code> and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded. A value of 0 indicates an infinitely long cache.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.  </p>\n<p> The first example shows a Web page that contains two <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls, a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The first <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control are used to retrieve and display employee names from the database. The second <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control are used to retrieve and display the employee record that is selected by the user.  </p>\n<p> Caching is enabled for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. Therefore, each record is retrieved only one time from the database. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheKeyDependency_\" data-linktype=\"relative-path\">CacheKeyDependency</a> property is set to &quot;EmployeeDetails&quot;, but any string value can work as the key. The Web page also includes a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control that the user can click to expire the cached data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#3\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n          \n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n        \n     &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; \n          EnableCaching=&quot;true&quot;\n          CacheKeyDependency=&quot;EmployeeDetails&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n        \n        &lt;asp:Button \n        ID=&quot;Button1&quot; \n        runat=&quot;server&quot; \n        Text=&quot;Check for latest data&quot; \n        OnClick=&quot;Button1_Click&quot; /&gt;\n        \n    &lt;/div&gt;\n    &lt;/form&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#3\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n          \n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n        \n     &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; \n          EnableCaching=&quot;true&quot;\n          CacheKeyDependency=&quot;EmployeeDetails&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n        \n        &lt;asp:Button \n        ID=&quot;Button1&quot; \n        runat=&quot;server&quot; \n        Text=&quot;Check for latest data&quot; \n        OnClick=&quot;Button1_Click&quot; /&gt;\n        \n    &lt;/div&gt;\n    &lt;/form&gt;\n</code></pre><p> The second example shows a handler for the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event and a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_Click\" data-linktype=\"relative-path\">Click</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control. The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event handler creates a cache item with a key set to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheKeyDependency_\" data-linktype=\"relative-path\">CacheKeyDependency</a> value. The <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_Click\" data-linktype=\"relative-path\">Click</a> event handler removes the cache item whose key is equal to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheKeyDependency_\" data-linktype=\"relative-path\">CacheKeyDependency</a> value. When the cache item is removed, all the cached data that is dependent on the key is expired.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#4\">    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            Cache[ObjectDataSource2.CacheKeyDependency] = &quot;CacheExample&quot;;\n        }\n    }\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        Cache.Remove(ObjectDataSource2.CacheKeyDependency);\n        Cache[ObjectDataSource2.CacheKeyDependency] = &quot;CacheExample&quot;;\n        DetailsView1.DataBind();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#4\">    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        If Not (IsPostBack) Then\n            Cache(ObjectDataSource2.CacheKeyDependency) = &quot;CacheExample&quot;\n        End If\n    End Sub\n    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As EventArgs)\n        Cache.Remove(ObjectDataSource2.CacheKeyDependency)\n        Cache(ObjectDataSource2.CacheKeyDependency) = &quot;CacheExample&quot;\n        DetailsView1.DataBind()\n    End Sub\n</code></pre><p> The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and the Employees table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">Public Class EmployeeLogic\n    Public Shared Function GetFullNamesAndIDs() As Array\n        Dim ndc As New NorthwindDataContext()\n\n        Dim employeeQuery = _\n            From e In ndc.Employees _\n            Order By e.LastName _\n            Select FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID\n\n        Return employeeQuery.ToArray()\n    End Function\n\n    Public Shared Function GetEmployee(ByVal empID As Integer) As Employee\n\n        If (empID &lt; 0) Then\n            Return Nothing\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim employeeQuery = _\n                From e In ndc.Employees _\n                Where e.EmployeeID = empID _\n                Select e\n\n            Return employeeQuery.Single()\n        End If\n    End Function\n\n    Public Shared Sub UpdateEmployeeAddress(ByVal originalEmployee As Employee, ByVal address As String, ByVal city As String, ByVal postalcode As String)\n\n        Dim ndc As New NorthwindDataContext()\n        ndc.Employees.Attach(originalEmployee, False)\n        originalEmployee.Address = address\n        originalEmployee.City = city\n        originalEmployee.PostalCode = postalcode\n        ndc.SubmitChanges()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">    public class EmployeeLogic\n    {\n        public static Array GetFullNamesAndIDs()\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n\n            var employeeQuery =\n                from e in ndc.Employees\n                orderby e.LastName\n                select new { FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID };\n\n            return employeeQuery.ToArray();\n        }\n\n        public static Employee GetEmployee(int empID)\n        {\n            if (empID &lt; 0)\n            {\n                return null;\n            }\n            else\n            {\n                NorthwindDataContext ndc = new NorthwindDataContext();\n                var employeeQuery =\n                    from e in ndc.Employees\n                    where e.EmployeeID == empID\n                    select e;\n\n                return employeeQuery.Single();\n            }\n        }\n     \n        public static void UpdateEmployeeAddress(Employee originalEmployee, string address, string city, string postalcode)\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            ndc.Employees.Attach(originalEmployee, false);\n            originalEmployee.Address = address;\n            originalEmployee.City = city;\n            originalEmployee.PostalCode = postalcode;\n            ndc.SubmitChanges();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_EnablePaging\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnablePaging</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the data source control supports paging through the set of data that it retrieves.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EnablePaging { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the data source control supports paging through the data it retrieves; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Paging by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is handled by setting the EnablePaging, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> and defining a select method in the business object with the proper parameters. When the EnablePaging property is set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> collection includes two additional parameters for the first row that is requested and the number of rows that are requested. These two parameters are named as defined by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a> properties. The <code>Select</code> method should return the requested number of rows, starting at the specified index. Because the data might not divide evenly by the page size, the last page might contain fewer rows. Thus, the number of rows that are requested is actually the maximum number of rows that are returned.  </p>\n<p> When paging is enabled on the associated data-bound control, the data-bound control calls the <code>Select</code> method with the start index and number of rows that are required. Additionally, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property is set, the data-bound control calls the method before rendering the pager controls. For example, if a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has paging enabled with a page size of 5, and the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property returns 20, only 4 pages are displayed in the pager.  </p>\n<p> The EnablePaging property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  </p>\n<p> The Web page contains an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control whose EnablePaging property is set to <code>true</code>. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property is set to the name of a method that returns the total number of records in the query. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a> property and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a> property are set to the names of the parameters that are used in the Select method. The page also contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ObjectDataSource Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The second example shows a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.listcontrol#System_Web_UI_WebControls_ListControl_SelectedIndexChanged\" data-linktype=\"relative-path\">System.Web.UI.WebControls.ListControl.SelectedIndexChanged</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control. The code in the handler sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property to the user&#39;s selection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    protected void rowsToDisplay_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        GridView1.PageSize = int.Parse(rowsToDisplay.SelectedValue);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    Protected Sub rowsToDisplay_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rowsToDisplay.SelectedIndexChanged\n        GridView1.PageSize = Integer.Parse(rowsToDisplay.SelectedValue)\n    End Sub\n</code></pre><p> The third example shows the data access class that retrieves data from the Customers table. It includes a method named <code>GetSubsetOfEmployees</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The example also includes a method named <code>GetEmployeeCount</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">public class CustomerLogic\n{\n\n    public List&lt;Customer&gt; GetSubsetOfEmployees(int startRows, int maxRows)\n    {\n        NorthwindDataContext ndc = new NorthwindDataContext();\n        var customerQuery = \n            from c in ndc.Customers\n            select c;\n\n        return customerQuery.Skip(startRows).Take(maxRows).ToList&lt;Customer&gt;();\n    }\n\n    public int GetEmployeeCount()\n    {\n        object cachedCount = HttpRuntime.Cache[&quot;TotalEmployeeCount&quot;];\n        if (cachedCount != null)\n        {\n            return int.Parse(cachedCount.ToString());\n        }\n        else\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            var totalNumberQuery =\n                from c in ndc.Customers\n                select c;\n            \n            int employeeCount = totalNumberQuery.Count();\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, null, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, null);\n            return employeeCount;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">Public Class CustomerLogic\n    Public Function GetSubsetOfEmployees(ByVal startRows As Integer, ByVal maxRows As Integer) As List(Of Customer)\n\n        Dim ndc As New NorthwindDataContext()\n        Dim customerQuery = _\n        From c In ndc.Customers _\n            Select c\n\n        Return customerQuery.Skip(startRows).Take(maxRows).ToList()\n    End Function\n\n    Public Function GetEmployeeCount() As Integer\n\n        Dim cachedCount = HttpRuntime.Cache(&quot;TotalEmployeeCount&quot;)\n        If cachedCount IsNot Nothing Then\n            Return Integer.Parse(cachedCount.ToString())\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim totalNumberQuery = _\n            From c In ndc.Customers _\n                Select c\n\n            Dim employeeCount = totalNumberQuery.Count()\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, Nothing, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, Nothing)\n            Return employeeCount\n        End If\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_FilterExpression\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilterExpression</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a filtering expression that is applied when the method that is specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property is called.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FilterExpression { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents a filtering expression that is applied when data is retrieved by using the method or function identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The FilterExpression property was set and the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Select*</span> method does not return a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports filtering data only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object.  </p>\n<p> The syntax that is used for the FilterExpression property is a format stringâ€“style expression. The filter expression syntax is the same syntax that is accepted by the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property. If you add parameters to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> collection, you can also include format string placeholders. For example, include <code>&quot;{0}&quot;</code> in the expression to substitute for parameter values. The placeholders are replaced according to the index of the parameter in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> collection.  </p>\n<p> You can include parameters in the FilterExpression property. If the type of the parameter is a string or character type, enclose the parameter in single quotation marks. Quotation marks are not required if the parameter is a numeric type.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> collection contains the parameters that are evaluated for the placeholders that are found in the FilterExpression property.  </p>\n<p> The FilterExpression property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object that is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. If you are using the FilterExpression property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to display filtered data using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control to retrieve data from a middle-tier business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display the results. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control can filter data only when the method that retrieves the data retrieves it as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object. For this reason, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property identifies a business object method that retrieves data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> The code example consists of a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control, a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control, and a <strong>Submit</strong> button. By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> is populated with the name of one of the Northwind Traders employees. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> displays information about the employee that is identified by the name in the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a>. To retrieve data on another employee, enter the full name of the employee in the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a>, and then click the <strong>Submit</strong> button.  </p>\n<p> The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void ObjectDataSource1_Filtering(object sender, ObjectDataSourceFilteringEventArgs e)\n    {\n        if (Textbox1.Text == &quot;&quot;)\n        {\n            e.ParameterValues.Clear();\n            e.ParameterValues.Add(&quot;FullName&quot;, &quot;Nancy Davolio&quot;);\n        }\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;p&gt;Show all users with the following name.&lt;/p&gt;\n\n        &lt;asp:textbox id=&quot;Textbox1&quot; runat=&quot;server&quot; text=&quot;Nancy Davolio&quot; /&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratecolumns=&quot;False&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;ID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Name&quot; datafield=&quot;FullName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Street Address&quot; datafield=&quot;Address&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          filterexpression=&quot;FullName=&#39;{0}&#39;&quot; OnFiltering=&quot;ObjectDataSource1_Filtering&quot;&gt;\n            &lt;filterparameters&gt;\n              &lt;asp:formparameter name=&quot;FullName&quot; formfield=&quot;Textbox1&quot; defaultvalue=&quot;Nancy Davolio&quot; /&gt;\n            &lt;/filterparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:button id=&quot;Button1&quot; runat=&quot;server&quot; text=&quot;Search&quot; /&gt;&lt;/p&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub ObjectDataSource1_Filtering(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)\n        If Textbox1.Text = &quot;&quot; Then\n            e.ParameterValues.Clear()\n            e.ParameterValues.Add(&quot;FullName&quot;, &quot;Nancy Davolio&quot;)\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;p&gt;Show all users with the following name.&lt;/p&gt;\n\n        &lt;asp:textbox id=&quot;Textbox1&quot; runat=&quot;server&quot; text=&quot;Nancy Davolio&quot; /&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratecolumns=&quot;False&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;ID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Name&quot; datafield=&quot;FullName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Street Address&quot; datafield=&quot;Address&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          filterexpression=&quot;FullName=&#39;{0}&#39;&quot; OnFiltering=&quot;ObjectDataSource1_Filtering&quot;&gt;\n            &lt;filterparameters&gt;\n              &lt;asp:formparameter name=&quot;FullName&quot; formfield=&quot;Textbox1&quot; defaultvalue=&quot;Nancy Davolio&quot; /&gt;\n            &lt;/filterparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:button id=&quot;Button1&quot; runat=&quot;server&quot; text=&quot;Search&quot; /&gt;&lt;/p&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  </p>\n<ul>\n<li><p>The <code>EmployeeLogic</code> class, which is a class that encapsulates business logic.  </p>\n</li>\n<li><p>The <code>NorthwindEmployee</code> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  </p>\n<p>For simplicity, the <code>EmployeeLogic</code> class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Data;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates \n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n  \n    \n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList data = new ArrayList();\n           \n      data.Add(new NorthwindEmployee(1,&quot;Nancy&quot;,&quot;Davolio&quot;,&quot;507 - 20th Ave. E. Apt. 2A&quot;));\n      data.Add(new NorthwindEmployee(2,&quot;Andrew&quot;,&quot;Fuller&quot;,&quot;908 W. Capital Way&quot;));\n      data.Add(new NorthwindEmployee(3,&quot;Janet&quot;,&quot;Leverling&quot;,&quot;722 Moss Bay Blvd.&quot;));\n      data.Add(new NorthwindEmployee(4,&quot;Margaret&quot;,&quot;Peacock&quot;,&quot;4110 Old Redmond Rd.&quot;));\n      data.Add(new NorthwindEmployee(5,&quot;Steven&quot;,&quot;Buchanan&quot;,&quot;14 Garrett Hill&quot;));\n      data.Add(new NorthwindEmployee(6,&quot;Michael&quot;,&quot;Suyama&quot;,&quot;Coventry House Miner Rd.&quot;));\n      data.Add(new NorthwindEmployee(7,&quot;Robert&quot;,&quot;King&quot;,&quot;Edgeham Hollow Winchester Way&quot;));\n      \n      return data;\n    }\n    \n    public static NorthwindEmployee GetEmployee(object anID) {\n      ArrayList data = GetAllEmployees() as ArrayList;     \n      int empID = Int32.Parse(anID.ToString());      \n      return data[empID] as NorthwindEmployee;\n    }\n\n    // \n    // To support basic filtering, the employees cannot\n    // be returned as an array of objects, rather as a \n    // DataSet of the raw data values. \n    public static DataSet GetAllEmployeesAsDataSet () {\n      ICollection employees = GetAllEmployees();\n      \n      DataSet ds = new DataSet(&quot;Table&quot;);\n      \n      // Create the schema of the DataTable.\n      DataTable dt = new DataTable();\n      DataColumn dc;\n      dc = new DataColumn(&quot;EmpID&quot;,   typeof(int));    dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;FullName&quot;,typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Address&quot;, typeof(string)); dt.Columns.Add(dc);\n      \n      // Add rows to the DataTable.\n      DataRow row;\n            \n      foreach (NorthwindEmployee ne in employees) {                \n        row = dt.NewRow();\n        row[&quot;EmpID&quot;]    = ne.EmpID;\n        row[&quot;FullName&quot;] = ne.FullName;\n        row[&quot;Address&quot;]  = ne.Address;\n        dt.Rows.Add(row);\n      } \n      // Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt);\n      \n      return ds;\n    }    \n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee (int anID, \n                              string aFirstName,\n                              string aLastName,\n                              string anAddress) {\n      ID = anID;\n      firstName = aFirstName;\n      lastName = aLastName;   \n      address = anAddress;\n    }\n\n    private object ID;\n    public string EmpID {\n      get { return ID.ToString();  }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n    \n    public string FullName {\n      get { return FirstName  + &quot; &quot; +  LastName; }\n    }\n    \n    private string address;\n    public string Address {\n      get { return address; }\n      set { address = value;  }\n    }    \n    \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#2\">Imports System\nImports System.Collections\nImports System.Data\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates \n&#39; the operations you can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n   \n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim data As New ArrayList()\n      \n      data.Add(New NorthwindEmployee(1, &quot;Nancy&quot;, &quot;Davolio&quot;, &quot;507 - 20th Ave. E. Apt. 2A&quot;))\n      data.Add(New NorthwindEmployee(2, &quot;Andrew&quot;, &quot;Fuller&quot;, &quot;908 W. Capital Way&quot;))\n      data.Add(New NorthwindEmployee(3, &quot;Janet&quot;, &quot;Leverling&quot;, &quot;722 Moss Bay Blvd.&quot;))\n      data.Add(New NorthwindEmployee(4, &quot;Margaret&quot;, &quot;Peacock&quot;, &quot;4110 Old Redmond Rd.&quot;))\n      data.Add(New NorthwindEmployee(5, &quot;Steven&quot;, &quot;Buchanan&quot;, &quot;14 Garrett Hill&quot;))\n      data.Add(New NorthwindEmployee(6, &quot;Michael&quot;, &quot;Suyama&quot;, &quot;Coventry House Miner Rd.&quot;))\n      data.Add(New NorthwindEmployee(7, &quot;Robert&quot;, &quot;King&quot;, &quot;Edgeham Hollow Winchester Way&quot;))\n      \n      Return data\n   End Function &#39;GetAllEmployees\n   \n   \n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Dim data As ArrayList = CType(GetAllEmployees(), ArrayList)\n      Dim empID As Integer = Int32.Parse(anID.ToString())\n      Return CType(data(empID),NorthwindEmployee)   \n   End Function &#39;GetEmployee\n   \n   \n   &#39; To support basic filtering, the employees cannot\n   &#39; be returned as an array of objects, rather as a \n   &#39; DataSet of the raw data values. \n   Public Shared Function GetAllEmployeesAsDataSet() As DataSet\n      Dim employees As ICollection = GetAllEmployees()\n      \n      Dim ds As New DataSet(&quot;Table&quot;)\n      \n      &#39; Create the schema of the DataTable.\n      Dim dt As New DataTable()\n      Dim dc As DataColumn\n      dc = New DataColumn(&quot;EmpID&quot;, GetType(Integer))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;FullName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Address&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      \n      &#39; Add rows to the DataTable.\n      Dim row As DataRow\n      Dim ne As NorthwindEmployee\n      For Each ne In employees         \n         row = dt.NewRow()\n         row(&quot;EmpID&quot;) = ne.EmpID\n         row(&quot;FullName&quot;) = ne.FullName\n         row(&quot;Address&quot;) = ne.Address\n         dt.Rows.Add(row)\n      Next\n      &#39; Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt)\n      \n      Return ds\n   End Function &#39;GetAllEmployeesAsDataSet\n      \nEnd Class &#39;EmployeeLogic \n\n\nPublic Class NorthwindEmployee\n   \n   Public Sub New(anID As Integer, aFirstName As String, aLastName As String, anAddress As String)\n      ID = anID\n      Me.aFirstName = aFirstName\n      Me.aLastName = aLastName\n      Me.aAddress = anAddress\n   End Sub &#39;New\n   \n   Private ID As Object   \n   Public ReadOnly Property EmpID() As String\n      Get\n         Return ID.ToString()\n      End Get\n   End Property \n\n   Private aLastName As String   \n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property \n\n   Private aFirstName As String   \n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property \n   \n   Public ReadOnly Property FullName() As String\n      Get\n         Return FirstName &amp; &quot; &quot; &amp; LastName\n      End Get\n   End Property \n  \n   Private aAddress As String  \n   Public Property Address() As String\n      Get\n         Return aAddress\n      End Get\n      Set\n         aAddress = value\n      End Set\n   End Property \n   \nEnd Class &#39;NorthwindEmployee\nEnd Namespace\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_FilterParameters\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilterParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of parameters that are associated with any parameter placeholders in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.FilterExpression*</span> string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a> that contains a set of parameters associated with any parameter placeholders found in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.FilterExpression*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>You set the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.FilterExpression*</span> property and the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Select*</span> method does not return a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports filtering data only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object.  </p>\n<p> The syntax that is used for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> is a format stringâ€“style expression. The filter expression syntax is the same syntax that is accepted by the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property. If you add parameters to the FilterParameters collection, you can also include format string placeholders. For example, include <code>&quot;{0}&quot;</code> in the expression to substitute for parameter values. The placeholders are replaced according to the index of the parameter in the FilterParameters collection.  </p>\n<p> You can include parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property. If the parameter is a string or character type, enclose the parameter in single quotation marks. Quotation marks are not required if the parameter is a numeric type.  </p>\n<p> The FilterParameters property retrieves the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> property that is contained by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to display filtered data using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object to retrieve data from a middle-tier business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display the results. The second code example provides an example of a middle-tier business object that is used in the first code example.  </p>\n<p> The following code example demonstrates how to display filtered data using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control to retrieve data from a middle-tier business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display the results. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control can filter data only when the method that retrieves the data retrieves it as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object. For this reason, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property identifies a business object method that retrieves data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> The code example consists of a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control, a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control, and a <strong>Submit</strong> button. By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> is populated with the name of one of the Northwind Traders employees. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> displays information about the employee that is identified by the name in the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a>. To retrieve data on another employee, in the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a>, enter the full name of the employee, and then click the <strong>Submit</strong> button.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property specifies an expression that is used to filter the data that is retrieved by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <a class=\"xref\" href=\"system.web.ui.webcontrols.formparameter\" data-linktype=\"relative-path\">FormParameter</a> object that is bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> object that is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. If you are using the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void ObjectDataSource1_Filtering(object sender, ObjectDataSourceFilteringEventArgs e)\n    {\n        if (Textbox1.Text == &quot;&quot;)\n        {\n            e.ParameterValues.Clear();\n            e.ParameterValues.Add(&quot;FullName&quot;, &quot;Nancy Davolio&quot;);\n        }\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;p&gt;Show all users with the following name.&lt;/p&gt;\n\n        &lt;asp:textbox id=&quot;Textbox1&quot; runat=&quot;server&quot; text=&quot;Nancy Davolio&quot; /&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratecolumns=&quot;False&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;ID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Name&quot; datafield=&quot;FullName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Street Address&quot; datafield=&quot;Address&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          filterexpression=&quot;FullName=&#39;{0}&#39;&quot; OnFiltering=&quot;ObjectDataSource1_Filtering&quot;&gt;\n            &lt;filterparameters&gt;\n              &lt;asp:formparameter name=&quot;FullName&quot; formfield=&quot;Textbox1&quot; defaultvalue=&quot;Nancy Davolio&quot; /&gt;\n            &lt;/filterparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:button id=&quot;Button1&quot; runat=&quot;server&quot; text=&quot;Search&quot; /&gt;&lt;/p&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub ObjectDataSource1_Filtering(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)\n        If Textbox1.Text = &quot;&quot; Then\n            e.ParameterValues.Clear()\n            e.ParameterValues.Add(&quot;FullName&quot;, &quot;Nancy Davolio&quot;)\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;p&gt;Show all users with the following name.&lt;/p&gt;\n\n        &lt;asp:textbox id=&quot;Textbox1&quot; runat=&quot;server&quot; text=&quot;Nancy Davolio&quot; /&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratecolumns=&quot;False&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;ID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Name&quot; datafield=&quot;FullName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Street Address&quot; datafield=&quot;Address&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          filterexpression=&quot;FullName=&#39;{0}&#39;&quot; OnFiltering=&quot;ObjectDataSource1_Filtering&quot;&gt;\n            &lt;filterparameters&gt;\n              &lt;asp:formparameter name=&quot;FullName&quot; formfield=&quot;Textbox1&quot; defaultvalue=&quot;Nancy Davolio&quot; /&gt;\n            &lt;/filterparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:button id=&quot;Button1&quot; runat=&quot;server&quot; text=&quot;Search&quot; /&gt;&lt;/p&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  </p>\n<ul>\n<li><p>The <code>EmployeeLogic</code> class, which is a class that encapsulates business logic.  </p>\n</li>\n<li><p>The <code>NorthwindEmployee</code> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  </p>\n<p>For simplicity, the <code>EmployeeLogic</code> class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Data;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates \n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n  \n    \n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList data = new ArrayList();\n           \n      data.Add(new NorthwindEmployee(1,&quot;Nancy&quot;,&quot;Davolio&quot;,&quot;507 - 20th Ave. E. Apt. 2A&quot;));\n      data.Add(new NorthwindEmployee(2,&quot;Andrew&quot;,&quot;Fuller&quot;,&quot;908 W. Capital Way&quot;));\n      data.Add(new NorthwindEmployee(3,&quot;Janet&quot;,&quot;Leverling&quot;,&quot;722 Moss Bay Blvd.&quot;));\n      data.Add(new NorthwindEmployee(4,&quot;Margaret&quot;,&quot;Peacock&quot;,&quot;4110 Old Redmond Rd.&quot;));\n      data.Add(new NorthwindEmployee(5,&quot;Steven&quot;,&quot;Buchanan&quot;,&quot;14 Garrett Hill&quot;));\n      data.Add(new NorthwindEmployee(6,&quot;Michael&quot;,&quot;Suyama&quot;,&quot;Coventry House Miner Rd.&quot;));\n      data.Add(new NorthwindEmployee(7,&quot;Robert&quot;,&quot;King&quot;,&quot;Edgeham Hollow Winchester Way&quot;));\n      \n      return data;\n    }\n    \n    public static NorthwindEmployee GetEmployee(object anID) {\n      ArrayList data = GetAllEmployees() as ArrayList;     \n      int empID = Int32.Parse(anID.ToString());      \n      return data[empID] as NorthwindEmployee;\n    }\n\n    // \n    // To support basic filtering, the employees cannot\n    // be returned as an array of objects, rather as a \n    // DataSet of the raw data values. \n    public static DataSet GetAllEmployeesAsDataSet () {\n      ICollection employees = GetAllEmployees();\n      \n      DataSet ds = new DataSet(&quot;Table&quot;);\n      \n      // Create the schema of the DataTable.\n      DataTable dt = new DataTable();\n      DataColumn dc;\n      dc = new DataColumn(&quot;EmpID&quot;,   typeof(int));    dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;FullName&quot;,typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Address&quot;, typeof(string)); dt.Columns.Add(dc);\n      \n      // Add rows to the DataTable.\n      DataRow row;\n            \n      foreach (NorthwindEmployee ne in employees) {                \n        row = dt.NewRow();\n        row[&quot;EmpID&quot;]    = ne.EmpID;\n        row[&quot;FullName&quot;] = ne.FullName;\n        row[&quot;Address&quot;]  = ne.Address;\n        dt.Rows.Add(row);\n      } \n      // Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt);\n      \n      return ds;\n    }    \n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee (int anID, \n                              string aFirstName,\n                              string aLastName,\n                              string anAddress) {\n      ID = anID;\n      firstName = aFirstName;\n      lastName = aLastName;   \n      address = anAddress;\n    }\n\n    private object ID;\n    public string EmpID {\n      get { return ID.ToString();  }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n    \n    public string FullName {\n      get { return FirstName  + &quot; &quot; +  LastName; }\n    }\n    \n    private string address;\n    public string Address {\n      get { return address; }\n      set { address = value;  }\n    }    \n    \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_9#2\">Imports System\nImports System.Collections\nImports System.Data\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates \n&#39; the operations you can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n   \n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim data As New ArrayList()\n      \n      data.Add(New NorthwindEmployee(1, &quot;Nancy&quot;, &quot;Davolio&quot;, &quot;507 - 20th Ave. E. Apt. 2A&quot;))\n      data.Add(New NorthwindEmployee(2, &quot;Andrew&quot;, &quot;Fuller&quot;, &quot;908 W. Capital Way&quot;))\n      data.Add(New NorthwindEmployee(3, &quot;Janet&quot;, &quot;Leverling&quot;, &quot;722 Moss Bay Blvd.&quot;))\n      data.Add(New NorthwindEmployee(4, &quot;Margaret&quot;, &quot;Peacock&quot;, &quot;4110 Old Redmond Rd.&quot;))\n      data.Add(New NorthwindEmployee(5, &quot;Steven&quot;, &quot;Buchanan&quot;, &quot;14 Garrett Hill&quot;))\n      data.Add(New NorthwindEmployee(6, &quot;Michael&quot;, &quot;Suyama&quot;, &quot;Coventry House Miner Rd.&quot;))\n      data.Add(New NorthwindEmployee(7, &quot;Robert&quot;, &quot;King&quot;, &quot;Edgeham Hollow Winchester Way&quot;))\n      \n      Return data\n   End Function &#39;GetAllEmployees\n   \n   \n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Dim data As ArrayList = CType(GetAllEmployees(), ArrayList)\n      Dim empID As Integer = Int32.Parse(anID.ToString())\n      Return CType(data(empID),NorthwindEmployee)   \n   End Function &#39;GetEmployee\n   \n   \n   &#39; To support basic filtering, the employees cannot\n   &#39; be returned as an array of objects, rather as a \n   &#39; DataSet of the raw data values. \n   Public Shared Function GetAllEmployeesAsDataSet() As DataSet\n      Dim employees As ICollection = GetAllEmployees()\n      \n      Dim ds As New DataSet(&quot;Table&quot;)\n      \n      &#39; Create the schema of the DataTable.\n      Dim dt As New DataTable()\n      Dim dc As DataColumn\n      dc = New DataColumn(&quot;EmpID&quot;, GetType(Integer))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;FullName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Address&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      \n      &#39; Add rows to the DataTable.\n      Dim row As DataRow\n      Dim ne As NorthwindEmployee\n      For Each ne In employees         \n         row = dt.NewRow()\n         row(&quot;EmpID&quot;) = ne.EmpID\n         row(&quot;FullName&quot;) = ne.FullName\n         row(&quot;Address&quot;) = ne.Address\n         dt.Rows.Add(row)\n      Next\n      &#39; Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt)\n      \n      Return ds\n   End Function &#39;GetAllEmployeesAsDataSet\n      \nEnd Class &#39;EmployeeLogic \n\n\nPublic Class NorthwindEmployee\n   \n   Public Sub New(anID As Integer, aFirstName As String, aLastName As String, anAddress As String)\n      ID = anID\n      Me.aFirstName = aFirstName\n      Me.aLastName = aLastName\n      Me.aAddress = anAddress\n   End Sub &#39;New\n   \n   Private ID As Object   \n   Public ReadOnly Property EmpID() As String\n      Get\n         Return ID.ToString()\n      End Get\n   End Property \n\n   Private aLastName As String   \n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property \n\n   Private aFirstName As String   \n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property \n   \n   Public ReadOnly Property FullName() As String\n      Get\n         Return FirstName &amp; &quot; &quot; &amp; LastName\n      End Get\n   End Property \n  \n   Private aAddress As String  \n   Public Property Address() As String\n      Get\n         Return aAddress\n      End Get\n      Set\n         aAddress = value\n      End Set\n   End Property \n   \nEnd Class &#39;NorthwindEmployee\nEnd Namespace\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_InsertMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to insert data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string InsertMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> uses to insert data. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The business object is assumed to insert data one record at a time, rather than in a batch.  </p>\n<p> The InsertMethod property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object.  </p>\n<h2 id=\"object-lifetime\">Object Lifetime</h2>\n<p> The method that is identified by the InsertMethod property can be an instance method or a <code>static</code> (<code>Shared</code> in Visual Basic) method. If it is an instance method, the business object is created and destroyed each time the method specified by the InsertMethod property is called. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> events to work with the business object before the InsertMethod property is called. You can also handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event that is raised after the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property is called. If the business object implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface, the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method is called before the object is destroyed. If the method is <code>static</code> (<code>Shared</code> in Visual Basic), the business object is never created and you cannot handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> events.  </p>\n<h2 id=\"parameter-merging\">Parameter Merging</h2>\n<p> Parameters are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection from three sources:  </p>\n<ul>\n<li><p>From the data-bound control, at run time.  </p>\n</li>\n<li><p>From the <code>InsertParameters</code> element, declaratively.  </p>\n</li>\n<li><p>From the <code>Inserting</code> method, programmatically.  </p>\n<p>First, any parameters that are generated from data-bound controls are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection. For example, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that has the columns <code>Name</code> and <code>Number</code>, the parameters for <code>Name</code> and <code>Number</code> are added to the collection. The data type of these parameters is <code>string</code>. Next, the parameters that are listed in the <code>InsertParameters</code> element are added. If a parameter in the <code>InsertParameters</code> element is found with the same name as a parameter that is already in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection, the existing parameter is modified to match the parameter that is specified in the <code>InsertParameters</code> element. Typically, this is used to modify the type of the data in the parameter. Finally, you can programmatically add and remove parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserting\" data-linktype=\"relative-path\">Inserting</a> event, which occurs before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> method is run. The method is resolved after the parameters are merged. Method resolution is discussed in the next section.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the InsertMethod property.  </p>\n</div>\n<h2 id=\"method-resolution\">Method Resolution</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <code>InsertParameters</code> element, and the parameters that were added in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserting\" data-linktype=\"relative-path\">Inserting</a> event handler are all merged. (For more information, see the preceding section.) The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object then attempts to find a method to call. First, it looks for one or more methods with the name that is specified in the InsertMethod property. If no match is found, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> exception is thrown. If a match is found, it then looks for matching parameter names. For example, suppose a type that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property has two methods named <code>InsertARecord</code>. One <code>InsertARecord</code> has one parameter, <code>ID</code>, and the other <code>InsertARecord</code> has two parameters, <code>Name</code> and <code>Number</code>. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection has only one parameter named <code>ID</code>, the <code>InsertARecord</code> method with just the <code>ID</code> parameter is called. The type of the parameter is not checked in resolving the methods. The order of the parameters does not matter.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property is set, the method is resolved in a different way. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> looks for a method with the name that is specified in the InsertMethod property that takes one parameter of the type that is specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property. In this case, the name of the parameter does not matter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to insert data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> displays a new <code>NorthwindEmployee</code> record, along with an automatically generated <strong>Insert</strong> button. After you enter data into the fields of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, click the <strong>Insert</strong> button. The InsertMethod property identifies which method performs the insert operation.  </p>\n<p> In this example, the <code>UpdateEmployeeInfo</code> method is used to perform an insert; however, it requires a <code>NorthwindEmployee</code> parameter to insert the data. For this reason, the collection of strings that the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control passes automatically is not sufficient. The <code>NorthwindEmployeeInserting</code> delegate is an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventhandler\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventHandler</a> object that handles the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserting\" data-linktype=\"relative-path\">Inserting</a> event and enables you to manipulate the input parameters before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operation proceeds. Because the <code>UpdateEmployeeInfo</code> method requires a <code>NorthwindEmployee</code> object as a parameter, one is created using the collection of strings and is added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> collection using a parameter name (<code>ne</code>) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operation is performed, the method that is identified by the InsertMethod property is called. If the <code>Insert</code> method of the object has a method signature that includes parameters, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection must contain a parameter with names that match the method signature parameters for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> method to complete successfully.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nPrivate Sub NorthwindEmployeeInserting(source As Object, e As ObjectDataSourceMethodEventArgs)\n\n  &#39; The GridView control passes an array of strings in the parameters\n  &#39; collection because that is the type it knows how to work with.\n  &#39; However, the business object expects a custom type. Build it\n  &#39; and add it to the parameters collection.\n  Dim paramsFromPage As IDictionary = e.InputParameters\n\n  Dim ne As New NorthwindEmployee()\n  ne.FirstName  = paramsFromPage(&quot;FirstName&quot;).ToString()\n  ne.LastName   = paramsFromPage(&quot;LastName&quot;).ToString()\n  ne.Title      = paramsFromPage(&quot;Title&quot;).ToString()\n  ne.Courtesy   = paramsFromPage(&quot;Courtesy&quot;).ToString()\n  ne.Supervisor = Int32.Parse(paramsFromPage(&quot;Supervisor&quot;).ToString())\n  \n  paramsFromPage.Clear()\n  paramsFromPage.Add(&quot;ne&quot;, ne)\nEnd Sub &#39; NorthwindEmployeeInserting\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          autogenerateinsertbutton=&quot;True&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:detailsview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          insertmethod=&quot;UpdateEmployeeInfo&quot;\n          oninserting=&quot;NorthwindEmployeeInserting&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nprivate void NorthwindEmployeeInserting(object source, ObjectDataSourceMethodEventArgs e)\n{\n  // The business object expects a custom type. Build it\n  // and add it to the parameters collection.\n  \n  IDictionary paramsFromPage = e.InputParameters;\n\n  NorthwindEmployee ne = new NorthwindEmployee();\n\n  ne.FirstName  = paramsFromPage[&quot;FirstName&quot;].ToString();\n  ne.LastName   = paramsFromPage[&quot;LastName&quot;].ToString();\n  ne.Title      = paramsFromPage[&quot;Title&quot;].ToString();\n  ne.Courtesy   = paramsFromPage[&quot;Courtesy&quot;].ToString();\n  ne.Supervisor = Int32.Parse(paramsFromPage[&quot;Supervisor&quot;].ToString());\n\n  paramsFromPage.Clear();\n  paramsFromPage.Add(&quot;ne&quot;, ne);\n}\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          autogenerateinsertbutton=&quot;True&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:detailsview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          insertmethod=&quot;UpdateEmployeeInfo&quot;\n          oninserting=&quot;NorthwindEmployeeInserting&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  </p>\n<ul>\n<li><p>The <code>EmployeeLogic</code> class, which is a stateless class that encapsulates business logic.  </p>\n</li>\n<li><p>The <code>NorthwindEmployee</code> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  </p>\n<p>An additional <code>NorthwindDataException</code> class is provided as a convenience. For a complete working example, you must compile and use these classes. The <code>UpdateEmployeeInfo</code> method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n\n      Dim al As New ArrayList()\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n\n      Dim sds As New SqlDataSource(cts.ConnectionString, &quot;SELECT EmployeeID FROM Employees&quot;)\n\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      If anID.Equals(&quot;-1&quot;) OrElse anID.Equals(DBNull.Value) Then\n         Return New NorthwindEmployee()\n      Else\n         Return New NorthwindEmployee(anID)\n      End If\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub UpdateEmployeeInfo(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Save()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;UpdateEmployee failed.&quot;)\n      End If\n   End Sub &#39;UpdateEmployeeInfo\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;DeleteEmployee failed.&quot;)\n      End If\n   End Sub &#39;DeleteEmployee\n\n   &#39; And so on...\n\nEnd Class &#39;EmployeeLogic\n\n\nPublic Class NorthwindEmployee\n\n\n   Public Sub New()\n      ID = DBNull.Value\n      lastName = &quot;&quot;\n      firstName = &quot;&quot;\n      title = &quot;&quot;\n      titleOfCourtesy = &quot;&quot;\n      reportsTo = - 1\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n\n      Dim conn As New SqlConnection(cts.ConnectionString)\n\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; Only loop once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n            Me.aTitle = sdr(&quot;Title&quot;).ToString()\n            Me.titleOfCourtesy = sdr(&quot;TitleOfCourtesy&quot;).ToString()\n            If Not sdr.IsDBNull(4) Then\n               Me.reportsTo = sdr.GetInt32(4)\n            End If\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As String\n      Get\n         Return ID.ToString()\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public ReadOnly Property FullName() As String\n      Get\n         Return FirstName &amp; &quot; &quot; &amp; LastName\n      End Get\n   End Property\n\n   Private aTitle As String\n   Public Property Title() As String\n      Get\n         Return aTitle\n      End Get\n      Set\n         aTitle = value\n      End Set\n   End Property\n\n   Private titleOfCourtesy As String\n   Public Property Courtesy() As String\n      Get\n         Return titleOfCourtesy\n      End Get\n      Set\n         titleOfCourtesy = value\n      End Set\n   End Property\n\n   Private reportsTo As Integer\n   Public Property Supervisor() As Integer\n      Get\n         Return reportsTo\n      End Get\n      Set\n         reportsTo = value\n      End Set\n   End Property\n\n   Public Function Save() As Boolean\n\n      &#39; Implement persistence logic.\n      Return True\n\n   End Function &#39;Save\n\n\n   Public Function Delete() As Boolean\n\n     &#39; Implement delete logic.\n     Return True\n\n   End Function &#39;Delete\nEnd Class &#39;NorthwindEmployee\n\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\nEnd Class &#39;NorthwindDataException\n\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      if (anID.Equals(&quot;-1&quot;) ||\n          anID.Equals(DBNull.Value) ) {\n        return new NorthwindEmployee();\n      }\n      else {\n        return new NorthwindEmployee(anID);\n      }\n    }\n\n    public static void UpdateEmployeeInfo(NorthwindEmployee ne) {\n      bool retval = ne.Save();\n      if (! retval) { throw new NorthwindDataException(&quot;UpdateEmployee failed.&quot;); }\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;DeleteEmployee failed.&quot;); }\n    }\n\n    // And so on...\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n      title=&quot;&quot;;\n      titleOfCourtesy = &quot;&quot;;\n      reportsTo = -1;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      SqlConnection conn\n        = new SqlConnection (ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;].ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // Only loop once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n          this.title            = sdr[&quot;Title&quot;].ToString();\n          this.titleOfCourtesy  = sdr[&quot;TitleOfCourtesy&quot;].ToString();\n          if (! sdr.IsDBNull(4)) {\n            this.reportsTo        = sdr.GetInt32(4);\n          }\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public string EmpID {\n      get { return ID.ToString();  }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n\n    public string FullName {\n      get { return FirstName + &quot; &quot; + LastName; }\n    }\n\n    private string title;\n    public String Title {\n      get { return title; }\n      set { title = value; }\n    }\n\n    private string titleOfCourtesy;\n    public string Courtesy {\n      get { return titleOfCourtesy; }\n      set { titleOfCourtesy = value; }\n    }\n\n    private int    reportsTo;\n    public int Supervisor {\n      get { return reportsTo; }\n      set { reportsTo = value; }\n    }\n\n    public bool Save () {\n      // Implement persistence logic.\n      return true;\n    }\n\n    public bool Delete () {\n      // Implement delete logic.\n      return true;\n    }\n  }\n\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_InsertParameters\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parameters collection that contains the parameters that are used by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertMethod*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a> that contains the parameters used by the method identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertMethod*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The names and types of the parameters that are contained in the InsertParameters collection must match the names and types of the parameters that are in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property signature. The parameter names are case sensitive. When working with data-bound controls that supply parameters, such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> controls, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically merges any parameters that are explicitly specified in the collection with the parameters that are provided by the data-bound control. This is important because data-bound controls always supply their parameters as <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> types, and if the method signature includes numeric or date types, you must explicitly include a parameter in the InsertParameters collection with the correct type. Otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control attempts to cast the parameters according to the type that is defined by the parameters in the collection. For more information, see <a href=\"../Topic/Using%20Parameters%20with%20the%20ObjectDataSource%20Control.md\" data-linktype=\"relative-path\">Using Parameters with the ObjectDataSource Control</a>.  </p>\n<p> The InsertParameters property retrieves the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> property that is contained by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to insert data. The second code example provides an example implementation of the <code>Insert</code> method that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to insert data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> displays text boxes in which you can enter data for a new <code>NorthwindEmployee</code> record, along with an automatically generated <strong>Insert</strong> button. After you enter data into the fields of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, click the <strong>Insert</strong> button. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property identifies which method performs the insert operation.  </p>\n<p> If you click the <strong>Insert</strong> button, the operation is performed using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor&#39;s ID. This is because even though the ID is displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control as a <a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a> object, it is passed as a string to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. By adding it explicitly to the InsertParameters collection with a <a class=\"xref\" href=\"system.web.ui.webcontrols.parameter#System_Web_UI_WebControls_Parameter_Type_\" data-linktype=\"relative-path\">Type</a> property set to the <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a> value, it will be passed correctly by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> to the method as an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>, not as a string.  </p>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operation is performed, the method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property is called. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> method of the object has a method signature that includes parameters, the InsertParameters collection must contain parameters that have names that match the method signature parameters for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> method to complete successfully.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_8#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          autogenerateinsertbutton=&quot;True&quot;\n          autogeneraterows=&quot;false&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          defaultmode=&quot;Insert&quot; &gt;\n          &lt;fields&gt;\n            &lt;asp:BoundField headertext=&quot;FirstName&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;LastName&quot;   datafield=&quot;LastName&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;Title&quot;      datafield=&quot;Title&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;Courtesy&quot;   datafield=&quot;Courtesy&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;Supervisor&quot; datafield=&quot;Supervisor&quot; /&gt;\n          &lt;/fields&gt;\n        &lt;/asp:detailsview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          insertmethod=&quot;InsertNewEmployeeWrapper&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n          &lt;insertparameters&gt;\n            &lt;asp:parameter name=&quot;Supervisor&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/insertparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_8#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          autogenerateinsertbutton=&quot;True&quot;\n          autogeneraterows=&quot;false&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          defaultmode=&quot;Insert&quot; &gt;\n          &lt;fields&gt;\n            &lt;asp:BoundField headertext=&quot;FirstName&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;LastName&quot;   datafield=&quot;LastName&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;Title&quot;      datafield=&quot;Title&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;Courtesy&quot;   datafield=&quot;Courtesy&quot; /&gt;\n            &lt;asp:BoundField headertext=&quot;Supervisor&quot; datafield=&quot;Supervisor&quot; /&gt;\n          &lt;/fields&gt;\n        &lt;/asp:detailsview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          insertmethod=&quot;InsertNewEmployeeWrapper&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n          &lt;insertparameters&gt;\n            &lt;asp:parameter name=&quot;Supervisor&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/insertparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides an example implementation of the <code>Insert</code> method that the preceding code example uses. The <code>InsertNewEmployeeWrapper</code> method is added to the <code>EmployeeLogic</code> middle-tier object that is provided in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class overview to enable the object to work more easily with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control in Web scenarios, without a substantial rewrite to the actual business logic.  </p>\n<p> To run the example, you must have the <code>NorthwindEmployee</code> class that is provided in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class overview. This example illustrates only how to connect the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> to a business object method that gets data for a new database record by using parameters. The example does not add records to the database, because the <code>Save</code> method of the <code>NorthwindEmployee</code> class does not include code to update the database.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_8#3\">   &#39; This InsertNewEmployeeWrapper method is a wrapper method that enables\n   &#39; the use of ObjectDataSource and InsertParameters, without\n   &#39; substantially rewriting the true implementation for the NorthwindEmployee\n   &#39; or the EmployeeLogic objects.\n   &#39;\n   &#39; The parameters to the method must be named the same as the\n   &#39; DataControlFields used by the GridView or DetailsView controls.\n   Public Shared Sub InsertNewEmployeeWrapper(FirstName As String, LastName As String, Title As String, Courtesy As String, Supervisor As Integer)\n      &#39; Build the NorthwindEmployee object and\n      &#39; call the true  implementation.\n      Dim tempEmployee As New NorthwindEmployee()\n\n      tempEmployee.FirstName = FirstName\n      tempEmployee.LastName = LastName\n      tempEmployee.Title = Title\n      tempEmployee.Courtesy = Courtesy\n      tempEmployee.Supervisor = Supervisor\n\n      &#39; Call the true implementation.\n      InsertNewEmployee(tempEmployee)\n   End Sub &#39;InsertNewEmployeeWrapper\n\n\n   Public Shared Sub InsertNewEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Save()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;InsertNewEmployee failed.&quot;)\n      End If\n   End Sub &#39;InsertNewEmployee\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_8#3\">    // This InsertNewEmployeeWrapper method is a wrapper method that enables\n    // the use of ObjectDataSource and InsertParameters, without\n    // substantially rewriting the true implementation for the NorthwindEmployee\n    // or the EmployeeLogic objects.\n    //\n    // The parameters to the method must be named the same as the\n    // DataControlFields used by the GridView or DetailsView controls.\n    public static void InsertNewEmployeeWrapper (string FirstName,\n                                                 string LastName,\n                                                 string Title,\n                                                 string Courtesy,\n                                                 int    Supervisor)\n    {\n      // Build the NorthwindEmployee object and\n      // call the true  implementation.\n      NorthwindEmployee tempEmployee = new NorthwindEmployee();\n\n      tempEmployee.FirstName  = FirstName;\n      tempEmployee.LastName   = LastName;\n      tempEmployee.Title      = Title;\n      tempEmployee.Courtesy   = Courtesy;\n      tempEmployee.Supervisor = Supervisor;\n\n      // Call the true implementation.\n      InsertNewEmployee(tempEmployee);\n    }\n\n    public static void InsertNewEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Save();\n      if (! retval) { throw new NorthwindDataException(&quot;InsertNewEmployee failed.&quot;); }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximumRowsParameterName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the business object data retrieval method parameter that is used to indicate the number of records to retrieve for data source paging support.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MaximumRowsParameterName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> parameter that is used to indicate the number of records to retrieve. The default is <code>&quot;maximumRows&quot;</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MaximumRowsParameterName property is used to support data source paging. For information about how paging is supported by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a>.  </p>\n<p> The MaximumRowsParameterName property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  </p>\n<p> The Web page contains an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control whose <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a> property is set to <code>true</code>. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property is set to the name of a method that returns the total number of records in the query. The MaximumRowsParameterName property and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a> property are set to the names of the parameters that are used in the Select method. The page also contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ObjectDataSource Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The second example shows a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.listcontrol#System_Web_UI_WebControls_ListControl_SelectedIndexChanged\" data-linktype=\"relative-path\">System.Web.UI.WebControls.ListControl.SelectedIndexChanged</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control. The code in the handler sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property to the user&#39;s selection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    protected void rowsToDisplay_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        GridView1.PageSize = int.Parse(rowsToDisplay.SelectedValue);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    Protected Sub rowsToDisplay_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rowsToDisplay.SelectedIndexChanged\n        GridView1.PageSize = Integer.Parse(rowsToDisplay.SelectedValue)\n    End Sub\n</code></pre><p> The third example shows the data access class that retrieves data from the Customers table. It includes a method named <code>GetSubsetOfEmployees</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The example also includes a method named <code>GetEmployeeCount</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">public class CustomerLogic\n{\n\n    public List&lt;Customer&gt; GetSubsetOfEmployees(int startRows, int maxRows)\n    {\n        NorthwindDataContext ndc = new NorthwindDataContext();\n        var customerQuery = \n            from c in ndc.Customers\n            select c;\n\n        return customerQuery.Skip(startRows).Take(maxRows).ToList&lt;Customer&gt;();\n    }\n\n    public int GetEmployeeCount()\n    {\n        object cachedCount = HttpRuntime.Cache[&quot;TotalEmployeeCount&quot;];\n        if (cachedCount != null)\n        {\n            return int.Parse(cachedCount.ToString());\n        }\n        else\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            var totalNumberQuery =\n                from c in ndc.Customers\n                select c;\n            \n            int employeeCount = totalNumberQuery.Count();\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, null, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, null);\n            return employeeCount;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">Public Class CustomerLogic\n    Public Function GetSubsetOfEmployees(ByVal startRows As Integer, ByVal maxRows As Integer) As List(Of Customer)\n\n        Dim ndc As New NorthwindDataContext()\n        Dim customerQuery = _\n        From c In ndc.Customers _\n            Select c\n\n        Return customerQuery.Skip(startRows).Take(maxRows).ToList()\n    End Function\n\n    Public Function GetEmployeeCount() As Integer\n\n        Dim cachedCount = HttpRuntime.Cache(&quot;TotalEmployeeCount&quot;)\n        If cachedCount IsNot Nothing Then\n            Return Integer.Parse(cachedCount.ToString())\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim totalNumberQuery = _\n            From c In ndc.Customers _\n                Select c\n\n            Dim employeeCount = totalNumberQuery.Count()\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, Nothing, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, Nothing)\n            Return employeeCount\n        End If\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OldValuesParameterFormatString</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a format string to apply to the names of the parameters for original values that are passed to the <code>Delete</code> or <code>Update</code> methods.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string OldValuesParameterFormatString { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents a format string applied to the names of any <code>oldValues</code> or key parameters passed to the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Delete*</span> or <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Update*</span> methods. The default is <code>&quot;{0}&quot;</code>, which means the parameter name is the field name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property is applied to primary keys only, such as those that are identified with the <code>DataKeyNames</code> property of a data-bound control, or in delete and update scenarios where the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_ConflictDetection_\" data-linktype=\"relative-path\">ConflictDetection</a> property is set to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> value, and the set of original values are passed to the corresponding data method.  </p>\n<p> The following are two common scenarios where you might change the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property:  </p>\n<ul>\n<li><p>You might want to change the property to differentiate between old and new values in updates. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_ConflictDetection_\" data-linktype=\"relative-path\">ConflictDetection</a> property is set to the <a class=\"xref\" href=\"system.web.ui.conflictoptions\" data-linktype=\"relative-path\">ConflictOptions</a> value, parameters for both the original and new values are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection. Without the formatting string, two parameters with the same name would be created for each data field. By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.  </p>\n</li>\n<li><p>Some visual designers implement a particular naming scheme for original values and keys.  </p>\n<p>The OldValuesParameterFormatString property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_ParsingCulture\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_ParsingCulture_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParsingCulture</div>        \r\n          </div>\r\n    \r\n            <p>Gets a or sets a value that indicates what culture information is used when converting string values to actual property types in order to construct an object of the type indicated by <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.parsingculture\" data-linktype=\"relative-path\">ParsingCulture</a></div>\r\n                  </div>\r\n                  <p>The culture information. The default value is <a class=\"xref\" href=\"system.web.ui.webcontrols.parsingculture\" data-linktype=\"relative-path\">ParsingCulture</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectCountMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to retrieve a row count.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SelectCountMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> uses to retrieve a row count. The method must return an integer (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>). The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectCountMethod property identifies a business object method that is used to retrieve a total row count, to support data source paging. The SelectCountMethod property is evaluated only if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a> property is set to <code>true</code>.  </p>\n<p> The SelectCountMethod property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. For information about how paging is supported by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  </p>\n<p> The Web page contains an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control whose <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a> property is set to <code>true</code>. The SelectCountMethod property is set to the name of a method that returns the total number of records in the query. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a> property and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a> property are set to the names of the parameters that are used in the Select method. The page also contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ObjectDataSource Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The second example shows a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.listcontrol#System_Web_UI_WebControls_ListControl_SelectedIndexChanged\" data-linktype=\"relative-path\">System.Web.UI.WebControls.ListControl.SelectedIndexChanged</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control. The code in the handler sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property to the user&#39;s selection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    protected void rowsToDisplay_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        GridView1.PageSize = int.Parse(rowsToDisplay.SelectedValue);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    Protected Sub rowsToDisplay_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rowsToDisplay.SelectedIndexChanged\n        GridView1.PageSize = Integer.Parse(rowsToDisplay.SelectedValue)\n    End Sub\n</code></pre><p> The third example shows the data access class that retrieves data from the Customers table. It includes a method named <code>GetSubsetOfEmployees</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The example also includes a method named <code>GetEmployeeCount</code>, which is assigned to the SelectCountMethod property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">public class CustomerLogic\n{\n\n    public List&lt;Customer&gt; GetSubsetOfEmployees(int startRows, int maxRows)\n    {\n        NorthwindDataContext ndc = new NorthwindDataContext();\n        var customerQuery = \n            from c in ndc.Customers\n            select c;\n\n        return customerQuery.Skip(startRows).Take(maxRows).ToList&lt;Customer&gt;();\n    }\n\n    public int GetEmployeeCount()\n    {\n        object cachedCount = HttpRuntime.Cache[&quot;TotalEmployeeCount&quot;];\n        if (cachedCount != null)\n        {\n            return int.Parse(cachedCount.ToString());\n        }\n        else\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            var totalNumberQuery =\n                from c in ndc.Customers\n                select c;\n            \n            int employeeCount = totalNumberQuery.Count();\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, null, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, null);\n            return employeeCount;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">Public Class CustomerLogic\n    Public Function GetSubsetOfEmployees(ByVal startRows As Integer, ByVal maxRows As Integer) As List(Of Customer)\n\n        Dim ndc As New NorthwindDataContext()\n        Dim customerQuery = _\n        From c In ndc.Customers _\n            Select c\n\n        Return customerQuery.Skip(startRows).Take(maxRows).ToList()\n    End Function\n\n    Public Function GetEmployeeCount() As Integer\n\n        Dim cachedCount = HttpRuntime.Cache(&quot;TotalEmployeeCount&quot;)\n        If cachedCount IsNot Nothing Then\n            Return Integer.Parse(cachedCount.ToString())\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim totalNumberQuery = _\n            From c In ndc.Customers _\n                Select c\n\n            Dim employeeCount = totalNumberQuery.Count()\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, Nothing, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, Nothing)\n            Return employeeCount\n        End If\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_SelectMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to retrieve data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SelectMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> uses to retrieve data. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The specified method can have any method signature, but it must return one of the types shown in the following table for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control to call it successfully.  </p>\n<table>\n<thead>\n<tr>\n<th>Return type</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></td>\n<td>The <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></td>\n<td>A <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is created using the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a></td>\n<td>A <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></td>\n<td>The first <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is extracted, and a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is created and returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></td>\n<td>The object is wrapped in a one-element <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> collection and returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method.</td>\n</tr>\n</tbody>\n</table>\n<p> The SelectMethod property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> When you use the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class to delete or update data, make sure that the parameter names configured for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection or <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection match the column names that are returned by the select method.  </p>\n<h2 id=\"object-lifetime\">Object Lifetime</h2>\n<p> The method that is identified by the SelectMethod property can be an instance method or a <code>static</code> (<code>Shared</code> in Visual Basic) method. If it is an instance method, the business object is created and destroyed each time the method that is specified by the SelectMethod property is called. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> events to work with the business object before the method that is specified by the SelectMethod property is called. You can also handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event that is raised after the method that is specified by the SelectMethod property is called. If the business object implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface, the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method is called before the object is destroyed. If the method is <code>static</code> (<code>Shared</code> in Visual Basic), the business object is never created and you cannot handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> events.  </p>\n<h2 id=\"parameter-merging\">Parameter Merging</h2>\n<p> Parameters are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> collection from these sources:  </p>\n<ul>\n<li><p>Declaratively from the <code>SelectParameters</code> element.  </p>\n</li>\n<li><p>Programmatically from the <code>Selecting</code> method.  </p>\n<p>First, the parameters listed in the <code>SelectParameters</code> element are added. Second, parameters are programmatically added and removed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event, which occurs before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is run. The method is resolved after the parameters are merged. Method resolution is discussed in the next section.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the SelectMethod property.  </p>\n</div>\n<h2 id=\"method-resolution\">Method Resolution</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <code>SelectParameters</code> element, and the parameters that were added in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event handler are all merged. (For more information, see the preceding section.) The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control then attempts to find a method to call. First, it looks for one or more methods with the name that is specified in the SelectMethod property. If no match is found, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> exception is thrown. If a match is found, it then looks for matching parameter names. For example, suppose a type that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property has two methods named <code>SelectARecord</code>. One <code>SelectARecord</code> has one parameter, <code>ID</code>, and the other <code>SelectARecord</code> has two parameters, <code>Name</code> and <code>Number</code>. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> collection has only one parameter named <code>ID</code>, the <code>SelectARecord</code> method with just the <code>ID</code> parameter is called. The type of the parameter is not checked in resolving the methods. The order of the parameters does not matter.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property is set, the method is resolved in a different way. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> looks for a method with the name that is specified in the SelectMethod property that takes one parameter of the type that is specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property. In this case, the name of the parameter does not matter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can display data using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control on a Web Forms page. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> identifies a partially or fully qualified class name with its <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enumerates through the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> collection that is returned by the method that is specified by the SelectMethod property, and displays the data.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_1#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - Visual Basic Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_1#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_SelectParameters\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of parameters that are used by the method specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of parameters that are used by the method specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectParameters property gets the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> You add parameters to the SelectParameters collection declaratively by using the <code>SelectParameters</code> element or programmatically in the handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event. At run time, parameters listed in the <code>SelectParameters</code> element are added to the collection first. Parameters in the collection are then added or removed by the handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event is raised before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is run.  </p>\n<p> Before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is run, the names and types of the parameters that are contained in the SelectParameters collection must match the signature of the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. For example, if a select method named <code>GetEmployeesByStateAndAge</code> takes a <code>string</code> and an integer as parameters, the SelectParameters collection must contain two parameters. The first parameter must resolve to a string and the second parameter must resolve to an integer. Both parameters can be specified in markup in the <code>SelectParameters</code> element. Alternatively, they can be can be added in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event handler, or one parameter can be added in markup and the other one can be added programmatically.  </p>\n<p> For more information, see <a href=\"../Topic/Using%20Parameters%20with%20the%20ObjectDataSource%20Control.md\" data-linktype=\"relative-path\">Using Parameters with the ObjectDataSource Control</a> and the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod\" data-linktype=\"relative-path\">SelectMethod</a> property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> In the code for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event handler or in the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property, make sure that you validate any parameter value that is received from the client.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to retrieve a single data record using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and display it in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control retrieves a specific employee record by calling the <code>GetEmployee</code> method of the <code>EmployeeLogic</code> class. The <code>GetEmployee</code> method requires an employee ID parameter. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control uses a <code>QueryStringParameter</code> element in markup to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.querystringparameter\" data-linktype=\"relative-path\">QueryStringParameter</a> object that will retrieve the value of a specified query-string parameter from the URL and pass it to the <code>GetEmployee</code> method.  </p>\n<p> Other parameter classes can be used to retrieve values from other sources, such as control properties, form fields, cookies, ASP.NET profile data, or session state. You can also use a parameter object that is defined in markup in order to pass a hard-coded value to the select method. For more information about parameter classes that are available, see <a href=\"../Topic/Using%20Parameters%20with%20Data%20Source%20Controls%20for%20Filtering.md\" data-linktype=\"relative-path\">Using Parameters with Data Source Controls for Filtering</a>.  </p>\n<p> To run this example, you will need the following:  </p>\n<ul>\n<li><p>A Web site that has a connection string named <code>NorthwindConnection</code> that connects to the Northwind Traders database. For more information, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class overview.  </p>\n</li>\n<li><p>The <code>EmployeeLogic</code> class that is shown as one of the code examples for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> class overview. The class file must be located in the App_Code folder.  </p>\n</li>\n<li><p>The sample code can be run as an .aspx page. If you request the page without a query-string parameter, an error message is displayed. If you request the page using a query string such as <code>?empid=1</code> after the name of the .aspx file, you will see the details for the requested employee.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_3#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:detailsview&gt;\n\n&lt;!-- Security Note: The ObjectDataSource uses a QueryStringParameter,\n     Security Note: which does not perform validation of input from the client.\n     Security Note: To validate the value of the QueryStringParameter, handle the Selecting event. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:querystringparameter name=&quot;EmployeeID&quot; querystringfield=&quot;empid&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_3#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:detailsview&gt;\n\n&lt;!-- Security Note: The ObjectDataSource uses a QueryStringParameter,\n     Security Note: which does not perform validation of input from the client.\n     Security Note: To validate the value of the QueryStringParameter, handle the Selecting event. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:querystringparameter name=&quot;EmployeeID&quot; querystringfield=&quot;empid&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_SortParameterName\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_SortParameterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortParameterName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the business object that the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> parameter used to specify a sort expression for data source sorting support.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SortParameterName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the method parameter used to indicate the parameter which is used to sort the data. The default is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SortParameterName property is used to support data source sorting. When a <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments#System_Web_UI_DataSourceSelectArguments_SortExpression_\" data-linktype=\"relative-path\">SortExpression</a> property is set on the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object and passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method, the SortParameterName value identifies the parameter name of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> business object method according to which the data is sorted.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> is associated with a data-bound control, the values that are passed to this parameter take the form of comma-separated field values followed by <code>&quot;ASC&quot;</code> or <code>&quot;DESC&quot;</code>. For example, the value for an ascending sort on <code>Name</code> would be <code>&quot;Name ASC&quot;</code>.  </p>\n<p> The SortParameterName property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_SortParameterName_\" data-linktype=\"relative-path\">SortParameterName</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to implement a type that supports sorting. The second code example demonstrates how to implement a sort expression.  </p>\n<p> The following code example demonstrates how to implement a type that supports sorting. The <code>SelectMethod</code> of the <code>SortingData</code> class takes a parameter, <code>sortExpression</code>. The string that is passed to <code>SelectMethod</code> is used for the <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_Sort_\" data-linktype=\"relative-path\">Sort</a> property of the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> object that is returned by <code>SelectMethod</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"ObjectDataSourceSorting#1\">using System;\nusing System.Data;\nusing System.Configuration;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\n\nnamespace Samples.AspNet.CS\n{\n\tpublic class SortingData\n\t{\n\t\tpublic SortingData()\n\t\t{\n\t\t}\n\n\n\t\tprivate static DataTable table;\n\n\n\t\tprivate DataTable CreateData()\n\t\t{\n\t\t\ttable = new DataTable();\n\t\t\ttable.Columns.Add(&quot;Name&quot;, typeof(string));\n\t\t\ttable.Columns.Add(&quot;Number&quot;, typeof(int));\n\t\t\ttable.Rows.Add(new object[] { &quot;one&quot;, 1 });\n\t\t\ttable.Rows.Add(new object[] { &quot;two&quot;, 2 });\n\t\t\ttable.Rows.Add(new object[] { &quot;three&quot;, 3 });\n\t\t\ttable.Rows.Add(new object[] { &quot;four&quot;, 4 });\n\t\t\treturn table;\n\t\t}\n\n\t\tpublic DataView SelectMethod(string sortExpression)\n\t\t{\n\t\t\tif (table == null)\n\t\t\t{\n\t\t\t\ttable = CreateData();\n\t\t\t}\n\n\t\t\tDataView dv = new DataView(table);\n\t\t\tdv.Sort = sortExpression;\n\t\t\treturn dv;\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ObjectDataSourceSorting#1\">Imports System\nImports System.Data\nImports System.Configuration\nImports System.Web\nImports System.Web.Security\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Web.UI.WebControls.WebParts\nImports System.Web.UI.HtmlControls\n\nNamespace Samples.AspNet.VB\n    Public Class SortingData\n        Public Sub New()\n\n        End Sub\n\n        Private Shared table As DataTable\n\n        Private Function CreateData() As DataTable\n            table = New DataTable()\n            table.Columns.Add(&quot;Name&quot;, GetType(String))\n            table.Columns.Add(&quot;Number&quot;, GetType(Integer))\n            table.Rows.Add(New Object() {&quot;one&quot;, 1})\n            table.Rows.Add(New Object() {&quot;two&quot;, 2})\n            table.Rows.Add(New Object() {&quot;three&quot;, 3})\n            table.Rows.Add(New Object() {&quot;four&quot;, 4})\n            Return table\n        End Function\n\n        Public Function SelectMethod(ByVal sortExpression As String) As DataView\n            If table Is Nothing Then\n                table = CreateData()\n            End If\n\n            Dim dv As New DataView(table)\n            dv.Sort = sortExpression\n            Return dv\n        End Function\n\n\n    End Class\nEnd Namespace\n</code></pre><p> The following code example demonstrates how to implement a sort expression. The code in the Web page creates an instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property is set to <code>SortingData</code> and the SortParameterName property is set to <code>sortExpression</code>. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowSorting_\" data-linktype=\"relative-path\">AllowSorting</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is set to <code>true</code>. When the user clicks the <strong>Sort</strong> button, the field name, <code>Name</code> or <code>Number</code>, is passed to <code>SelectMethod</code> in the sort parameter.  </p>\n<pre><code class=\"lang-cs\" name=\"ObjectDataSourceSorting#2\">&lt;%--&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n--%&gt;&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \n\n&lt;script runat=&quot;server&quot;&gt;\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;asp:GridView ID=&quot;GridView1&quot; \n            runat=&quot;server&quot; \n            DataSourceID=&quot;ObjectDataSource1&quot;\n            AllowSorting=&quot;True&quot;&gt;\n        &lt;/asp:GridView&gt;\n        &lt;asp:ObjectDataSource \n            ID=&quot;ObjectDataSource1&quot; \n            runat=&quot;server&quot; \n            SelectMethod=&quot;SelectMethod&quot; \n            TypeName=&quot;Samples.AspNet.CS.SortingData&quot; \n            SortParameterName=&quot;sortExpression&quot;&gt;\n        &lt;/asp:ObjectDataSource&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"ObjectDataSourceSorting#2\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \n\n&lt;script runat=&quot;server&quot;&gt;\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;asp:GridView ID=&quot;GridView1&quot; \n            runat=&quot;server&quot; \n            DataSourceID=&quot;ObjectDataSource1&quot;\n            AllowSorting=&quot;True&quot;&gt;\n        &lt;/asp:GridView&gt;\n        &lt;asp:ObjectDataSource \n            ID=&quot;ObjectDataSource1&quot; \n            runat=&quot;server&quot; \n            SelectMethod=&quot;SelectMethod&quot; \n            TypeName=&quot;Samples.AspNet.VB.SortingData&quot; \n            SortParameterName=&quot;sortExpression&quot;&gt;\n        &lt;/asp:ObjectDataSource&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_SqlCacheDependency\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_SqlCacheDependency_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlCacheDependency</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string SqlCacheDependency { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that indicates which databases and tables to use for the SQL Server cache dependency.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports an optional expiration policy that is based on the <a class=\"xref\" href=\"system.web.caching.sqlcachedependency\" data-linktype=\"relative-path\">SqlCacheDependency</a> object for the data cache (the service must be configured for the database server).  </p>\n<p> SQL Server supports two mechanisms for cache invalidation: polling and notification. Each mechanism has a different syntax for the <a class=\"xref\" href=\"system.web.caching.sqlcachedependency\" data-linktype=\"relative-path\">SqlCacheDependency</a> object.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> supports only polling. The <a class=\"xref\" href=\"system.web.caching.sqlcachedependency\" data-linktype=\"relative-path\">SqlCacheDependency</a> string is used to create a <a class=\"xref\" href=\"system.data.sqlclient.sqldependency\" data-linktype=\"relative-path\">SqlDependency</a> object that is passed to the <a class=\"xref\" href=\"system.data.common.dbcommand\" data-linktype=\"relative-path\">DbCommand</a> constructor before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method is executed. The SqlCacheDependency string identifies databases and tables according to the same format that is used by the <code>@ Page</code> directive, where the first part of the string is a connection string to a SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, <code>&quot;connectionstring1:table1&quot;</code>). If the SqlCacheDependency property depends on more than one table, the connection string and table name pairs are separated by semicolons (for example, <code>&quot;connectionstring1:table1&quot;;connectionstring2:table2&quot;</code>).  </p>\n<p> To support notification, you must write the cache logic in the implementation of your <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property and handle the construction of the <a class=\"xref\" href=\"system.web.caching.sqlcachedependency\" data-linktype=\"relative-path\">SqlCacheDependency</a> object in your code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to create a SQL Server cache dependency and set the SqlCacheDependency property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object. The second code example demonstrates how to implement a wrapper method that returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to enable caching and filtering with an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object.  </p>\n<p> The following code example demonstrates how to create a SQL Server cache dependency and set the SqlCacheDependency property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. In this example, the database is polled every 120 seconds. If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and displayed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is expired and a new set of data is retrieved on the next request for the page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_7#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n\n&lt;!--\n\nThe page uses an example configuration that includes\nconnection strings and a defined SqlCacheDependecy.\n\n&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;configuration&gt;\n\n  &lt;connectionStrings&gt;\n    &lt;add name=&quot;MyNorthwind&quot;\n         connectionString=&quot;Data Source=&quot;localhost&quot;;Integrated Security=&quot;SSPI&quot;;Initial Catalog=&quot;Northwind&quot;&quot;\n         providerName=&quot;System.Data.SqlClient&quot; /&gt;\n  &lt;/connectionStrings&gt;\n\n  &lt;system.web&gt;\n    &lt;cache&gt;\n      &lt;sqlCacheDependency enabled=&quot;true&quot;&gt;\n        &lt;databases&gt;\n          &lt;add\n            name=&quot;Northwind&quot;\n            connectionStringName=&quot;MyNorthwind&quot;\n            pollTime=&quot;120000&quot; /&gt;\n        &lt;/databases&gt;\n      &lt;/sqlCacheDependency&gt;\n    &lt;/cache&gt;\n\n  &lt;/system.web&gt;\n&lt;/configuration&gt;\n--&gt;\n\n\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          enablecaching=&quot;True&quot;\n          cacheduration=&quot;300&quot;\n          cacheexpirationpolicy=&quot;Absolute&quot;\n          sqlcachedependency=&quot;Northwind:Employees&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_7#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n\n&lt;!--\nThe page uses an example configuration that includes\nconnection strings and a defined SqlCacheDependecy.\n\n&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;configuration&gt;\n\n  &lt;connectionStrings&gt;\n    &lt;add name=&quot;MyNorthwind&quot;\n         connectionString=&quot;Data Source=&quot;localhost&quot;;Integrated Security=&quot;SSPI&quot;;Initial Catalog=&quot;Northwind&quot;&quot;\n         providerName=&quot;System.Data.SqlClient&quot; /&gt;\n  &lt;/connectionStrings&gt;\n\n  &lt;system.web&gt;\n    &lt;cache&gt;\n      &lt;sqlCacheDependency enabled=&quot;true&quot;&gt;\n        &lt;databases&gt;\n          &lt;add\n            name=&quot;Northwind&quot;\n            connectionStringName=&quot;MyNorthwind&quot;\n            pollTime=&quot;120000&quot; /&gt;\n        &lt;/databases&gt;\n      &lt;/sqlCacheDependency&gt;\n    &lt;/cache&gt;\n\n  &lt;/system.web&gt;\n&lt;/configuration&gt;\n--&gt;\n\n\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          selectmethod=&quot;GetAllEmployeesAsDataSet&quot;\n          enablecaching=&quot;True&quot;\n          cacheduration=&quot;300&quot;\n          cacheexpirationpolicy=&quot;Absolute&quot;\n          sqlcachedependency=&quot;Northwind:Employees&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example demonstrates how to implement a wrapper method that returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object to enable caching and filtering with an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. In the base implementation of the <code>EmployeeLogic</code> class, the <code>GetAllEmployees</code> method returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> object. Instead of refactoring the object completely to work with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> on a Web Forms page, a wrapper method named <code>GetAllEmployeesAsDataSet</code> is added that returns a set of <code>NorthwindEmployee</code> data as a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_5#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations one can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n\n      Dim sds As New SqlDataSource(cts.ConnectionString, &quot;SELECT EmployeeID FROM Employees&quot;)\n\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n   &#39; To support basic filtering, the employees cannot\n   &#39; be returned as an array of objects, rather as a\n   &#39; DataSet of the raw data values.\n   Public Shared Function GetAllEmployeesAsDataSet() As DataSet\n      Dim employees As ICollection = GetAllEmployees()\n\n      Dim ds As New DataSet(&quot;Table&quot;)\n\n      &#39; Create the schema of the DataTable.\n      Dim dt As New DataTable()\n      Dim dc As DataColumn\n      dc = New DataColumn(&quot;FirstName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;LastName&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Title&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Courtesy&quot;, GetType(String))\n      dt.Columns.Add(dc)\n      dc = New DataColumn(&quot;Supervisor&quot;, GetType(Int32))\n      dt.Columns.Add(dc)\n\n      &#39; Add rows to the DataTable.\n      Dim emplEnum As IEnumerator = employees.GetEnumerator()\n      Dim row As DataRow\n      Dim ne As NorthwindEmployee\n      While emplEnum.MoveNext()\n         ne = CType(emplEnum.Current, NorthwindEmployee)\n         row = dt.NewRow()\n         row(&quot;FirstName&quot;) = ne.FirstName\n         row(&quot;LastName&quot;) = ne.LastName\n         row(&quot;Title&quot;) = ne.Title\n         row(&quot;Courtesy&quot;) = ne.Courtesy\n         row(&quot;Supervisor&quot;) = ne.Supervisor\n         dt.Rows.Add(row)\n      End While\n      &#39; Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt)\n\n      Return ds\n   End Function &#39;GetAllEmployeesAsDataSet\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      If anID.Equals(&quot;-1&quot;) OrElse anID.Equals(DBNull.Value) Then\n         Return New NorthwindEmployee()\n      Else\n         Return New NorthwindEmployee(anID)\n      End If\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub UpdateEmployeeInfo(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Save()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;UpdateEmployee failed.&quot;)\n      End If\n   End Sub &#39;UpdateEmployeeInfo\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;DeleteEmployee failed.&quot;)\n      End If\n   End Sub &#39;DeleteEmployee\nEnd Class &#39;EmployeeLogic\n\n\nPublic Class NorthwindEmployee\n\n\n   Public Sub New()\n      ID = DBNull.Value\n      aLastName = &quot;&quot;\n      aFirstName = &quot;&quot;\n      aTitle = &quot;&quot;\n      titleOfCourtesy = &quot;&quot;\n      reportsTo = - 1\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n\n      Dim conn As New SqlConnection(cts.ConnectionString)\n\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; Only loop once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n            Me.aTitle = sdr(&quot;Title&quot;).ToString()\n            Me.titleOfCourtesy = sdr(&quot;TitleOfCourtesy&quot;).ToString()\n            If Not sdr.IsDBNull(4) Then\n               Me.reportsTo = sdr.GetInt32(4)\n            End If\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As String\n      Get\n         Return ID.ToString()\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public ReadOnly Property FullName() As String\n      Get\n         Return FirstName &amp; &quot; &quot; &amp; LastName\n      End Get\n   End Property\n\n   Private aTitle As String\n   Public Property Title() As String\n      Get\n         Return aTitle\n      End Get\n      Set\n         aTitle = value\n      End Set\n   End Property\n\n   Private titleOfCourtesy As String\n   Public Property Courtesy() As String\n      Get\n         Return titleOfCourtesy\n      End Get\n      Set\n         titleOfCourtesy = value\n      End Set\n   End Property\n\n   Private reportsTo As Integer\n   Public Property Supervisor() As Integer\n      Get\n         Return reportsTo\n      End Get\n      Set\n         reportsTo = value\n      End Set\n   End Property\n\n   Public Function Save() As Boolean\n\n      &#39; Implement persistence logic.\n      Return True\n\n   End Function &#39;Save\n\n\n   Public Function Delete() As Boolean\n\n      &#39; Implement delete logic.\n      Return True\n\n   End Function &#39;Delete\nEnd Class &#39;NorthwindEmployee\n\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_5#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations one can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    //\n    // To support basic filtering, the employees cannot\n    // be returned as an array of objects, rather as a\n    // DataSet of the raw data values.\n    public static DataSet GetAllEmployeesAsDataSet () {\n      ICollection employees = GetAllEmployees();\n\n      DataSet ds = new DataSet(&quot;Table&quot;);\n\n      // Create the schema of the DataTable.\n      DataTable dt = new DataTable();\n      DataColumn dc;\n      dc = new DataColumn(&quot;FirstName&quot;, typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;LastName&quot;,  typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Title&quot;,     typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Courtesy&quot;,  typeof(string)); dt.Columns.Add(dc);\n      dc = new DataColumn(&quot;Supervisor&quot;,typeof(Int32));  dt.Columns.Add(dc);\n\n      // Add rows to the DataTable.\n      IEnumerator emplEnum = employees.GetEnumerator();\n      DataRow row;\n      NorthwindEmployee ne;\n      while (emplEnum.MoveNext()) {\n        ne = emplEnum.Current as NorthwindEmployee;\n        row = dt.NewRow();\n        row[&quot;FirstName&quot;]  = ne.FirstName;\n        row[&quot;LastName&quot;]   = ne.LastName;\n        row[&quot;Title&quot;]      = ne.Title;\n        row[&quot;Courtesy&quot;]   = ne.Courtesy;\n        row[&quot;Supervisor&quot;] = ne.Supervisor;\n        dt.Rows.Add(row);\n      }\n      // Add the complete DataTable to the DataSet.\n      ds.Tables.Add(dt);\n\n      return ds;\n    }\n    public static NorthwindEmployee GetEmployee(object anID) {\n      if (anID.Equals(&quot;-1&quot;) ||\n          anID.Equals(DBNull.Value) ) {\n        return new NorthwindEmployee();\n      }\n      else {\n        return new NorthwindEmployee(anID);\n      }\n    }\n\n    public static void UpdateEmployeeInfo(NorthwindEmployee ne) {\n      bool retval = ne.Save();\n      if (! retval) { throw new NorthwindDataException(&quot;UpdateEmployee failed.&quot;); }\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;DeleteEmployee failed.&quot;); }\n    }\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n      title=&quot;&quot;;\n      titleOfCourtesy = &quot;&quot;;\n      reportsTo = -1;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      SqlConnection conn\n        = new SqlConnection (ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;].ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // Only loop once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n          this.title            = sdr[&quot;Title&quot;].ToString();\n          this.titleOfCourtesy  = sdr[&quot;TitleOfCourtesy&quot;].ToString();\n          if (! sdr.IsDBNull(4)) {\n            this.reportsTo        = sdr.GetInt32(4);\n          }\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public string EmpID {\n      get { return ID.ToString();  }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n\n    public string FullName {\n      get { return FirstName + &quot; &quot; + LastName; }\n    }\n\n    private string title;\n    public String Title {\n      get { return title; }\n      set { title = value; }\n    }\n\n    private string titleOfCourtesy;\n    public string Courtesy {\n      get { return titleOfCourtesy; }\n      set { titleOfCourtesy = value; }\n    }\n\n    private int    reportsTo;\n    public int Supervisor {\n      get { return reportsTo; }\n      set { reportsTo = value; }\n    }\n\n    public bool Save () {\n      // Implement persistence logic.\n      return true;\n    }\n\n    public bool Delete () {\n      // Implement delete logic.\n      return true;\n    }\n  }\n\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_StartRowIndexParameterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartRowIndexParameterName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the data retrieval method parameter that is used to indicate the value of the identifier of the first record to retrieve for data source paging support.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StartRowIndexParameterName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the business object method parameter used to indicate the first record to retrieve. The parameter must return an integer value. The default is <code>&quot;startRowIndex&quot;</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The StartRowIndexParameterName property is used to support data source paging. For information about how paging is supported by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a>.  </p>\n<p> The StartRowIndexParameterName property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_StartRowIndexParameterName_\" data-linktype=\"relative-path\">StartRowIndexParameterName</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  </p>\n<p> The Web page contains an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control whose <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_EnablePaging_\" data-linktype=\"relative-path\">EnablePaging</a> property is set to <code>true</code>. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property is set to the name of a method that returns the total number of records in the query. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_MaximumRowsParameterName_\" data-linktype=\"relative-path\">MaximumRowsParameterName</a> property and the StartRowIndexParameterName property are set to the names of the parameters that are used in the Select method. The page also contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#1\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ObjectDataSource Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    How many rows to display on this page:&lt;br /&gt;\n    &lt;asp:DropDownList \n          AutoPostBack=&quot;true&quot; \n          ID=&quot;rowsToDisplay&quot; \n          runat=&quot;server&quot; \n          onselectedindexchanged=&quot;rowsToDisplay_SelectedIndexChanged&quot;&gt;\n        &lt;asp:ListItem Value=&quot;5&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;10&quot; Selected=&quot;True&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;asp:ListItem Value=&quot;20&quot;&gt;&lt;/asp:ListItem&gt;\n    &lt;/asp:DropDownList&gt; \n    \n    &lt;asp:ObjectDataSource \n        SelectCountMethod=&quot;GetEmployeeCount&quot; \n        EnablePaging=&quot;true&quot; \n        TypeName=&quot;CustomerLogic&quot; \n        SelectMethod=&quot;GetSubsetOfEmployees&quot;\n        MaximumRowsParameterName=&quot;maxRows&quot;\n        StartRowIndexParameterName=&quot;startRows&quot;\n        ID=&quot;ObjectDataSource1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:ObjectDataSource&gt;\n    \n    &lt;asp:GridView \n        DataSourceID=&quot;ObjectDataSource1&quot; \n        AllowPaging=&quot;true&quot; \n        ID=&quot;GridView1&quot; \n        runat=&quot;server&quot;&gt;\n    &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The second example shows a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.listcontrol#System_Web_UI_WebControls_ListControl_SelectedIndexChanged\" data-linktype=\"relative-path\">System.Web.UI.WebControls.ListControl.SelectedIndexChanged</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control. The code in the handler sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property to the user&#39;s selection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    protected void rowsToDisplay_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        GridView1.PageSize = int.Parse(rowsToDisplay.SelectedValue);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#2\">    Protected Sub rowsToDisplay_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rowsToDisplay.SelectedIndexChanged\n        GridView1.PageSize = Integer.Parse(rowsToDisplay.SelectedValue)\n    End Sub\n</code></pre><p> The third example shows the data access class that retrieves data from the Customers table. It includes a method named <code>GetSubsetOfEmployees</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The example also includes a method named <code>GetEmployeeCount</code>, which is assigned to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">public class CustomerLogic\n{\n\n    public List&lt;Customer&gt; GetSubsetOfEmployees(int startRows, int maxRows)\n    {\n        NorthwindDataContext ndc = new NorthwindDataContext();\n        var customerQuery = \n            from c in ndc.Customers\n            select c;\n\n        return customerQuery.Skip(startRows).Take(maxRows).ToList&lt;Customer&gt;();\n    }\n\n    public int GetEmployeeCount()\n    {\n        object cachedCount = HttpRuntime.Cache[&quot;TotalEmployeeCount&quot;];\n        if (cachedCount != null)\n        {\n            return int.Parse(cachedCount.ToString());\n        }\n        else\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            var totalNumberQuery =\n                from c in ndc.Customers\n                select c;\n            \n            int employeeCount = totalNumberQuery.Count();\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, null, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, null);\n            return employeeCount;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_17#3\">Public Class CustomerLogic\n    Public Function GetSubsetOfEmployees(ByVal startRows As Integer, ByVal maxRows As Integer) As List(Of Customer)\n\n        Dim ndc As New NorthwindDataContext()\n        Dim customerQuery = _\n        From c In ndc.Customers _\n            Select c\n\n        Return customerQuery.Skip(startRows).Take(maxRows).ToList()\n    End Function\n\n    Public Function GetEmployeeCount() As Integer\n\n        Dim cachedCount = HttpRuntime.Cache(&quot;TotalEmployeeCount&quot;)\n        If cachedCount IsNot Nothing Then\n            Return Integer.Parse(cachedCount.ToString())\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim totalNumberQuery = _\n            From c In ndc.Customers _\n                Select c\n\n            Dim employeeCount = totalNumberQuery.Count()\n            HttpRuntime.Cache.Add(&quot;TotalEmployeeCount&quot;, employeeCount, Nothing, DateTime.Now.AddMinutes(5), Cache.NoSlidingExpiration, CacheItemPriority.Normal, Nothing)\n            Return employeeCount\n        End If\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_TypeName\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_TypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the class that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object represents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TypeName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A partially or fully qualified class name that identifies the type of the object that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> represents. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create an instance of the object that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control binds to, the control uses reflection to load the type that is identified by the type name at run time. Therefore, the value of the TypeName property can be a partially qualified type for code that is located in the Bin or App_Code directories or a fully qualified type name for code that is registered in the global assembly cache. If you use the global assembly cache, you must add the appropriate reference to the <code>assemblies</code> section of the Machine.config or Web.config file.  </p>\n<p> The type must have a default constructor, unless you handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> event to create an instance of it yourself. An instance of the type is created for each call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> methods, if the methods on the type are member methods. An instance is not created if the methods are <code>static</code> (<code>Shared</code> in Visual Basic). If the type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface, the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method is called before the object is destroyed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can display data by using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control on a Web Forms page. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property. At run time, the object is created and the method is called using reflection. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enumerates through the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> collection that is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property, and displays the data.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_1#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - Visual Basic Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_1#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot; /&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example shows the class that the TypeName property value refers to.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_1#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Collections.Specialized;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations one can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString, &quot;SELECT EmployeeID FROM Employees&quot;);\n\n      try {\n\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        foreach (DataRowView row in IDs) {\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n    public static NorthwindEmployee GetEmployee(object anID) {\n      return new NorthwindEmployee(anID);\n    }\n\n    public static void UpdateEmployeeInfo(NorthwindEmployee ne) {\n      bool retval = ne.Save();\n      if (! retval) { throw new NorthwindDataException(&quot;UpdateEmployee failed.&quot;); }\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) { }\n\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n      title=&quot;&quot;;\n      titleOfCourtesy = &quot;&quot;;\n      reportsTo = -1;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n\t\tSqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n          this.title            = sdr[&quot;Title&quot;].ToString();\n          this.titleOfCourtesy  = sdr[&quot;TitleOfCourtesy&quot;].ToString();\n          if (! sdr.IsDBNull(4)) {\n            this.reportsTo        = sdr.GetInt32(4);\n          }\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n\n    private string title;\n    public String Title {\n      get { return title; }\n      set { title = value; }\n    }\n\n    private string titleOfCourtesy;\n    public string Courtesy {\n      get { return titleOfCourtesy; }\n      set { titleOfCourtesy = value; }\n    }\n\n    private int    reportsTo;\n    public int Supervisor {\n      get { return reportsTo; }\n      set { reportsTo = value; }\n    }\n\n    public bool Save () {\n      return true;\n    }\n  }\n\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_1#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\n&#39; When the class is written in Visual Basic, you cannot use the Shared\n&#39; part.\nPublic Class EmployeeLogic\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         For Each row As DataRowView In IDs\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         Next\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Return New NorthwindEmployee(anID)\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub UpdateEmployeeInfo(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Save()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;UpdateEmployee failed.&quot;)\n      End If\n   End Sub &#39;UpdateEmployeeInfo\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n   End Sub &#39;DeleteEmployee\n\nEnd Class &#39;EmployeeLogic\n\n\nPublic Class NorthwindEmployee\n\n\n   Public Sub New()\n      ID = DBNull.Value\n      aLastName = &quot;&quot;\n      aFirstName = &quot;&quot;\n      aTitle = &quot;&quot;\n      titleOfCourtesy = &quot;&quot;\n      reportsTo = - 1\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n            Me.aTitle = sdr(&quot;Title&quot;).ToString()\n            Me.titleOfCourtesy = sdr(&quot;TitleOfCourtesy&quot;).ToString()\n            If Not sdr.IsDBNull(4) Then\n               Me.reportsTo = sdr.GetInt32(4)\n            End If\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Private aTitle As String\n   Public Property Title() As String\n      Get\n         Return aTitle\n      End Get\n      Set\n         aTitle = value\n      End Set\n   End Property\n\n   Private titleOfCourtesy As String\n   Public Property Courtesy() As String\n      Get\n         Return titleOfCourtesy\n      End Get\n      Set\n         titleOfCourtesy = value\n      End Set\n   End Property\n   Private reportsTo As Integer\n\n   Public Property Supervisor() As Integer\n      Get\n         Return reportsTo\n      End Get\n      Set\n         reportsTo = value\n      End Set\n   End Property\n\n   Public Function Save() As Boolean\n      Return True\n   End Function &#39;Save\nEnd Class &#39;NorthwindEmployee\n\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_UpdateMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control invokes to update data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UpdateMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the name of the method or function that the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> uses to update data. The default is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control assumes that the method that is identified by the UpdateMethod property performs updates one at a time, rather than in a batch.  </p>\n<p> The UpdateMethod property delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> Make sure that the parameter names configured for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection match the column names that are returned by the select method.  </p>\n<h2 id=\"object-lifetime\">Object Lifetime</h2>\n<p> The method that is identified by the UpdateMethod property can be an instance method or a <code>static</code> (<code>Shared</code> in Visual Basic) method. If it is an instance method, the business object is created and destroyed each time the method that is specified by the UpdateMethod property is called. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> events to work with the business object before the method that is specified by the UpdateMethod property is called. You can also handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event that is raised after the method that is specified by the UpdateMethod property is called. If the business object implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface, the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method is called before the object is destroyed. If the method is <code>static</code> (<code>Shared</code> in Visual Basic), the business object is never created and you cannot handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> events.  </p>\n<h2 id=\"parameter-merging\">Parameter Merging</h2>\n<p> Parameters are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection from three sources:  </p>\n<ul>\n<li><p>From the data-bound control, at run time.  </p>\n</li>\n<li><p>From the <code>UpdateParameters</code> element, declaratively.  </p>\n</li>\n<li><p>From the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event handler, programmatically.  </p>\n<p>First, any parameters that are generated from data-bound controls are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection. For example, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that has the columns <code>Name</code> and <code>Number</code>, the parameters for <code>Name</code> and <code>Number</code> are added to the collection. The exact name of the parameter depends on the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property. The data type of these parameters is <code>string</code>. Next, the parameters that are listed in the <code>UpdateParameters</code> element are added. If a parameter in the <code>UpdateParameters</code> element is found with the same name as a parameter that is already in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection, the existing parameter is modified to match the parameter that is specified in the <code>UpdateParameters</code> element. Typically, this is used to modify the type of the data in the parameter. Finally, you can programmatically add and remove parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event, which occurs before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a> method is run. The method is resolved after the parameters are merged. Method resolution is discussed in the next section.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the UpdateMethod property.  </p>\n</div>\n<h2 id=\"method-resolution\">Method Resolution</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <code>UpdateParameters</code> element, and the parameters that were added in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event handler are all merged. (For more information, see the preceding section.) The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control then attempts to find a method to call. First, it looks for one or more methods with the name that is specified in the UpdateMethod property. If no match is found, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> exception is thrown. If a match is found, it then looks for matching parameter names. For example, suppose a type that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property has two methods named <code>UpdateARecord</code>. One <code>UpdateARecord</code> has one parameter, <code>ID</code>, and the other <code>UpdateARecord</code> has two parameters, <code>Name</code> and <code>Number</code>. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection has only one parameter named <code>ID</code>, the <code>UpdateARecord</code> method with just the <code>ID</code> parameter is called. The type of the parameter is not checked in resolving the methods. The order of the parameters does not matter.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property is set, the method is resolved in a different way. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> looks for a method with the name that is specified in the UpdateMethod property that takes one parameter of the type that is specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DataObjectTypeName_\" data-linktype=\"relative-path\">DataObjectTypeName</a> property. In this case, the name of the parameter does not matter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.  </p>\n<p> The first example shows a Web page that contains two <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls, a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The first <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control are used to retrieve and display employee names from the database. The second <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#1\">    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          UpdateMethod=&quot;UpdateEmployeeAddress&quot;\n          OnUpdating=&quot;EmployeeUpdating&quot;\n          OnSelected=&quot;EmployeeSelected&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateEditButton=&quot;true&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n       \n    &lt;/form&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#1\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          UpdateMethod=&quot;UpdateEmployeeAddress&quot;\n          OnUpdating=&quot;EmployeeUpdating&quot;\n          OnSelected=&quot;EmployeeSelected&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateEditButton=&quot;true&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n       \n    &lt;/form&gt;\n</code></pre><p> The second example shows handlers for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"relative-path\">Selected</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> events. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"relative-path\">Selected</a> event handler serializes the object that contains data that was retrieved from the Employee table. The serialized object is stored in view state. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event handler deserializes the object in view state that contains the original data for the data record that is being updated. The object that contains the original data is passed as a parameter to the Update method. The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#2\">    Public Sub EmployeeUpdating(ByVal source As Object, ByVal e As ObjectDataSourceMethodEventArgs)\n        Dim dcs As New DataContractSerializer(GetType(Employee))\n        Dim xmlData As String\n        Dim reader As XmlReader\n        Dim originalEmployee As Employee\n\n        xmlData = ViewState(&quot;OriginalEmployee&quot;).ToString()\n        reader = XmlReader.Create(New StringReader(xmlData))\n        originalEmployee = CType(dcs.ReadObject(reader), Employee)\n        reader.Close()\n\n        e.InputParameters.Add(&quot;originalEmployee&quot;, originalEmployee)\n    End Sub\n\n    Public Sub EmployeeSelected(ByVal source As Object, ByVal e As ObjectDataSourceStatusEventArgs)\n        If e.ReturnValue IsNot Nothing Then\n            Dim dcs As New DataContractSerializer(GetType(Employee))\n            Dim sb As New StringBuilder()\n            Dim writer As XmlWriter\n            writer = XmlWriter.Create(sb)\n            dcs.WriteObject(writer, e.ReturnValue)\n            writer.Close()\n\n            ViewState(&quot;OriginalEmployee&quot;) = sb.ToString()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#2\">    public void EmployeeUpdating(object source, ObjectDataSourceMethodEventArgs e)\n    {\n        DataContractSerializer dcs = new DataContractSerializer(typeof(Employee));\n\n        String xmlData = ViewState[&quot;OriginalEmployee&quot;].ToString();\n        XmlReader reader = XmlReader.Create(new StringReader(xmlData));\n        Employee originalEmployee = (Employee)dcs.ReadObject(reader);\n        reader.Close();\n\n        e.InputParameters.Add(&quot;originalEmployee&quot;, originalEmployee);\n    }\n\n    public void EmployeeSelected(object source, ObjectDataSourceStatusEventArgs e)\n    {\n        if (e.ReturnValue != null)\n        {\n            DataContractSerializer dcs = new DataContractSerializer(typeof(Employee));\n            StringBuilder sb = new StringBuilder();\n            XmlWriter writer = XmlWriter.Create(sb);\n            dcs.WriteObject(writer, e.ReturnValue);\n            writer.Close();\n\n            ViewState[&quot;OriginalEmployee&quot;] = sb.ToString();\n        }\n    }\n</code></pre><p> The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query and update the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and Employees table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">Public Class EmployeeLogic\n    Public Shared Function GetFullNamesAndIDs() As Array\n        Dim ndc As New NorthwindDataContext()\n\n        Dim employeeQuery = _\n            From e In ndc.Employees _\n            Order By e.LastName _\n            Select FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID\n\n        Return employeeQuery.ToArray()\n    End Function\n\n    Public Shared Function GetEmployee(ByVal empID As Integer) As Employee\n\n        If (empID &lt; 0) Then\n            Return Nothing\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim employeeQuery = _\n                From e In ndc.Employees _\n                Where e.EmployeeID = empID _\n                Select e\n\n            Return employeeQuery.Single()\n        End If\n    End Function\n\n    Public Shared Sub UpdateEmployeeAddress(ByVal originalEmployee As Employee, ByVal address As String, ByVal city As String, ByVal postalcode As String)\n\n        Dim ndc As New NorthwindDataContext()\n        ndc.Employees.Attach(originalEmployee, False)\n        originalEmployee.Address = address\n        originalEmployee.City = city\n        originalEmployee.PostalCode = postalcode\n        ndc.SubmitChanges()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">    public class EmployeeLogic\n    {\n        public static Array GetFullNamesAndIDs()\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n\n            var employeeQuery =\n                from e in ndc.Employees\n                orderby e.LastName\n                select new { FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID };\n\n            return employeeQuery.ToArray();\n        }\n\n        public static Employee GetEmployee(int empID)\n        {\n            if (empID &lt; 0)\n            {\n                return null;\n            }\n            else\n            {\n                NorthwindDataContext ndc = new NorthwindDataContext();\n                var employeeQuery =\n                    from e in ndc.Employees\n                    where e.EmployeeID == empID\n                    select e;\n\n                return employeeQuery.Single();\n            }\n        }\n     \n        public static void UpdateEmployeeAddress(Employee originalEmployee, string address, string city, string postalcode)\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            ndc.Employees.Attach(originalEmployee, false);\n            originalEmployee.Address = address;\n            originalEmployee.City = city;\n            originalEmployee.PostalCode = postalcode;\n            ndc.SubmitChanges();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_UpdateParameters\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parameters collection that contains the parameters that are used by the method that is specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateMethod*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.parametercollection\" data-linktype=\"relative-path\">ParameterCollection</a> that contains the parameters used by the method that is specified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateMethod*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The names and types of the parameters that are contained in the UpdateParameters collection must match the names and types of the parameters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> method signature. The parameter names are affected by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property and are case-sensitive. The parameters in the collection depend on the data in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically. For more information, see the &quot;Parameter Merging&quot; section in <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a> and <a href=\"../Topic/Using%20Parameters%20with%20the%20ObjectDataSource%20Control.md\" data-linktype=\"relative-path\">Using Parameters with the ObjectDataSource Control</a>.  </p>\n<p> The UpdateParameters property retrieves the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> property that is contained by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls, and several <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> objects to update data. The second code example shows the <code>EmployeeLogic</code> class that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls, and several <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls to update data. The <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> displays the name of a Northwind employee, while the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls are used to enter and update address information. Because the UpdateParameters collection contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> that is bound to the selected value of the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a>, the button that raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a> operation is enabled only after an employee is selected.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n// Add parameters and initialize the user interface\n// only if an employee is selected.\nprivate void Page_Load(object sender, EventArgs e)\n{\n  // Be sure the text boxes are initialized with\n  // data from the currently selected employee.\n  NorthwindEmployee selectedEmployee = EmployeeLogic.GetEmployee(DropDownList1.SelectedValue);\n  if (selectedEmployee != null) {\n    AddressBox.Text    = selectedEmployee.Address;\n    CityBox.Text       = selectedEmployee.City;\n    PostalCodeBox.Text = selectedEmployee.PostalCode;\n\n    Button1.Enabled = true;\n  }\n  else {\n    Button1.Enabled = false;\n  }\n}\n\n// Press the button to update.\nprivate void Btn_UpdateEmployee (object sender, CommandEventArgs e) {\n  ObjectDataSource2.Update();\n}\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;!-- The DropDownList is bound to the first ObjectDataSource. --&gt;\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;&lt;asp:dropdownlist\n          id=&quot;DropDownList1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          datatextfield=&quot;FullName&quot;\n          datavaluefield=&quot;EmpID&quot;\n          autopostback=&quot;True&quot; /&gt;&lt;/p&gt;\n\n        &lt;!-- The second ObjectDataSource performs the Update. This\n             preserves the state of the DropDownList, which otherwise\n             would rebind when the DataSourceChanged event is\n             raised as a result of an Update operation. --&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client.\n             Security Note: To validate the value of the FormParameter,\n             Security Note: handle the Updating event. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          updatemethod=&quot;UpdateEmployeeWrapper&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;&gt;\n          &lt;updateparameters&gt;\n            &lt;asp:controlparameter name=&quot;anID&quot; controlid=&quot;DropDownList1&quot; propertyname=&quot;SelectedValue&quot; /&gt;\n            &lt;asp:formparameter name=&quot;anAddress&quot; formfield=&quot;AddressBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aCity&quot; formfield=&quot;CityBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aPostalCode&quot; formfield=&quot;PostalCodeBox&quot; /&gt;\n          &lt;/updateparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;AddressBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;CityBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;PostalCodeBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;asp:button\n          id=&quot;Button1&quot;\n          runat=&quot;server&quot;\n          text=&quot;Update Employee&quot;\n          oncommand=&quot;Btn_UpdateEmployee&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n&#39; Add parameters and initialize the user interface\n&#39; only if an employee is selected.\nPrivate Sub Page_Load(sender As Object, e As EventArgs)\n\n  &#39; Be sure the text boxes are initialized with\n  &#39; data from the currently selected employee.\n  Dim selectedEmployee As NorthwindEmployee\n  selectedEmployee = EmployeeLogic.GetEmployee(DropDownList1.SelectedValue)\n\n  If Not selectedEmployee Is Nothing Then\n    AddressBox.Text    = selectedEmployee.Address\n    CityBox.Text       = selectedEmployee.City\n    PostalCodeBox.Text = selectedEmployee.PostalCode\n\n    Button1.Enabled = True\n  Else\n    Button1.Enabled = False\n  End If\nEnd Sub &#39; Page_Load\n\n&#39; Press the button to update.\nPrivate Sub Btn_UpdateEmployee (sender As Object, e As CommandEventArgs )\n  ObjectDataSource2.Update()\nEnd Sub &#39; Btn_UpdateEmployee\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;!-- The DropDownList is bound to the first ObjectDataSource. --&gt;\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;&lt;asp:dropdownlist\n          id=&quot;DropDownList1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          datatextfield=&quot;FullName&quot;\n          datavaluefield=&quot;EmpID&quot;\n          autopostback=&quot;True&quot; /&gt;&lt;/p&gt;\n\n        &lt;!-- The second ObjectDataSource performs the Update. This\n             preserves the state of the DropDownList, which otherwise\n             would rebind when the DataSourceChanged event is\n             raised as a result of an Update operation. --&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client.\n             Security Note: To validate the value of the FormParameter,\n             Security Note: handle the Updating event. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          updatemethod=&quot;UpdateEmployeeWrapper&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;&gt;\n          &lt;updateparameters&gt;\n            &lt;asp:controlparameter name=&quot;anID&quot; controlid=&quot;DropDownList1&quot; propertyname=&quot;SelectedValue&quot; /&gt;\n            &lt;asp:formparameter name=&quot;anAddress&quot; formfield=&quot;AddressBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aCity&quot; formfield=&quot;CityBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aPostalCode&quot; formfield=&quot;PostalCodeBox&quot; /&gt;\n          &lt;/updateparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;AddressBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;CityBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;PostalCodeBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;asp:button\n          id=&quot;Button1&quot;\n          runat=&quot;server&quot;\n          text=&quot;Update Employee&quot;\n          oncommand=&quot;Btn_UpdateEmployee&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example shows the <code>EmployeeLogic</code> class that is used in the preceding code example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations one can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      // Use the SqlDataSource class to wrap the\n      // ADO.NET code required to query the database.\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      ArrayList al = GetAllEmployees() as ArrayList;\n      IEnumerator enumerator = al.GetEnumerator();\n      while (enumerator.MoveNext()) {\n        // The IEnumerable contains initialized NorthwindEmployee objects.\n        NorthwindEmployee ne = enumerator.Current as NorthwindEmployee;\n        if (ne.EmpID.Equals(anID.ToString())) {\n          return ne;\n        }\n      }\n      return null;\n    }\n    public static void UpdateEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Update();\n      if (! retval) { throw new NorthwindDataException(&quot;Employee update failed.&quot;); }\n    }\n\n    // This method is added as a conveniece wrapper on the original\n    // implementation.\n    public static void UpdateEmployeeWrapper(string anID,\n                                             string anAddress,\n                                             string aCity,\n                                             string aPostalCode) {\n      NorthwindEmployee ne = new NorthwindEmployee(anID);\n      ne.Address = anAddress;\n      ne.City = aCity;\n      ne.PostalCode = aPostalCode;\n      UpdateEmployee(ne);\n    }\n\n    // And so on...\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n      SqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName,Address,City,PostalCode &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName       = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName        = sdr[&quot;LastName&quot;].ToString();\n          this.address         = sdr[&quot;Address&quot;].ToString();\n          this.city            = sdr[&quot;City&quot;].ToString();\n          this.postalCode      = sdr[&quot;PostalCode&quot;].ToString();\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public object EmpID {\n      get { return ID; }\n    }\n\n    private string lastName;\n    public string LastName {\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      set { firstName = value;  }\n    }\n\n    public string FullName {\n      get { return firstName + &quot; &quot; + lastName; }\n    }\n\n    private string address;\n    public string Address {\n      get { return address; }\n      set { address = value;  }\n    }\n\n    private string city;\n    public string City {\n      get { return city; }\n      set { city = value;  }\n    }\n\n    private string postalCode;\n    public string PostalCode {\n      get { return postalCode; }\n      set { postalCode = value;  }\n    }\n\n    public bool Update () {\n\n      // Implement Update logic.\n\n      return true;\n    }\n  }\n\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations one can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      &#39; Use the SqlDataSource class to wrap the\n      &#39; ADO.NET code required to query the database.\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, _\n                                  &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Dim al As ArrayList = CType(GetAllEmployees(), ArrayList)\n      Dim enumerator As IEnumerator = al.GetEnumerator()\n      While enumerator.MoveNext()\n         &#39; The IEnumerable contains initialized NorthwindEmployee objects.\n         Dim ne As NorthwindEmployee = CType(enumerator.Current,NorthwindEmployee)\n         If ne.EmpID.Equals(anID.ToString()) Then\n            Return ne\n         End If\n      End While\n      Return Nothing\n   End Function &#39;GetEmployee\n\n   Public Shared Sub UpdateEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Update()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;Employee update failed.&quot;)\n      End If\n   End Sub &#39;UpdateEmployee\n\n   &#39; This method is added as a conveniece wrapper on the original\n   &#39; implementation.\n   Public Shared Sub UpdateEmployeeWrapper(anID As String, _\n                                           anAddress As String, _\n                                           aCity As String, _\n                                           aPostalCode As String)\n      Dim ne As New NorthwindEmployee(anID)\n      ne.Address = anAddress\n      ne.City = aCity\n      ne.PostalCode = aPostalCode\n      UpdateEmployee(ne)\n   End Sub &#39;UpdateEmployeeWrapper\n   &#39; And so on...\n\nEnd Class &#39;EmployeeLogic\n\nPublic Class NorthwindEmployee\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName,Address,City,PostalCode &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n            Me.aAddress = sdr(&quot;Address&quot;).ToString()\n            Me.aCity = sdr(&quot;City&quot;).ToString()\n            Me.aPostalCode = sdr(&quot;PostalCode&quot;).ToString()\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As Object\n      Get\n         Return ID\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public WriteOnly Property LastName() As String\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public WriteOnly Property FirstName() As String\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public ReadOnly Property FullName() As String\n      Get\n         Return aFirstName &amp; &quot; &quot; &amp; aLastName\n      End Get\n   End Property\n\n   Private aAddress As String\n   Public Property Address() As String\n      Get\n         Return aAddress\n      End Get\n      Set\n         aAddress = value\n      End Set\n   End Property\n\n   Private aCity As String\n   Public Property City() As String\n      Get\n         Return aCity\n      End Get\n      Set\n         aCity = value\n      End Set\n   End Property\n\n   Private aPostalCode As String\n   Public Property PostalCode() As String\n      Get\n         Return aPostalCode\n      End Get\n      Set\n         aPostalCode = value\n      End Set\n   End Property\n\n   Public Function Update() As Boolean\n\n      &#39; Implement Update logic.\n      Return True\n\n   End Function &#39;Update\n\nEnd Class &#39;NorthwindEmployee\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\n\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Delete\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_Delete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Delete()</div>        \r\n          </div>\r\n    \r\n            <p>Performs a delete operation by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteMethod*</span> property with any parameters that are in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.DeleteParameters*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Delete ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value that represents the number of rows deleted from the underlying data storage, if the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*</span> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> is set in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleted\" data-linktype=\"relative-path\">Deleted</a> event; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before the Delete operation is performed, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnDeleting_\" data-linktype=\"relative-path\">OnDeleting</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event to examine the values of the parameters and to perform any preprocessing before a Delete operation. To perform a delete operation, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object uses reflection to create an instance of the object that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property. It then calls the method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property, using any associated <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> properties. If the deletion parameters come from an associated data-bound control, the name of the parameters is created according to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_OldValuesParameterFormatString_\" data-linktype=\"relative-path\">OldValuesParameterFormatString</a> property. After the Delete operation completes, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnDeleted_\" data-linktype=\"relative-path\">OnDeleted</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleted\" data-linktype=\"relative-path\">Deleted</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleted\" data-linktype=\"relative-path\">Deleted</a> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.  </p>\n<p> The Delete method delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_Delete_\" data-linktype=\"relative-path\">Delete</a> method of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<h2 id=\"data-bound-controls\">Data-Bound Controls</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is associated with a data-bound control, such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, it is not necessary to call the Delete method from page code. The Delete method is invoked directly by the data-bound control instead.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_GetView_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_GetView_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetView(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the named data source view that is associated with the data source control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.DataSourceView GetView (string viewName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>viewName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the view to retrieve. Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> supports only one view, <code>viewName</code> is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> named <code>DefaultView</code> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified <code>viewName</code> is <code>null</code> or something other than <code>DefaultView</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports only one data source view. As with all data source view objects, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the data source control defines its capabilities, performs all the work that is necessary to retrieve data from the underlying data storage, and performs operations such as sorting, inserting, deleting, and updating.  </p>\n<p> The GetView method is intended to be called by data-bound controls, not by page code.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_GetViewNames\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_GetViewNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetViewNames()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a collection of names representing the list of view objects that are associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Collections.ICollection GetViewNames ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the names of the views associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control supports only one view, named <code>DefaultView</code>, on its underlying data. The GetViewNames method returns a single-element collection of this one view name.  </p>\n<p> The GetViewNames method is intended to be called by data-bound controls, not by page code.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Insert\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Insert()</div>        \r\n          </div>\r\n    \r\n            <p>Performs an insert operation by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertMethod*</span> property and any parameters in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.InsertParameters*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Insert ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value that represents the number of rows inserted into the underlying data storage.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before the Insert operation is performed, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnInserting_\" data-linktype=\"relative-path\">OnInserting</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserting\" data-linktype=\"relative-path\">Inserting</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserting\" data-linktype=\"relative-path\">Inserting</a> event to examine the values of the parameters and to perform any preprocessing before an Insert operation. To perform an insert operation, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object uses reflection to create an instance of the object that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property. It then calls the method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property, using any associated <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> properties. After the Insert operation completes, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnInserted_\" data-linktype=\"relative-path\">OnInserted</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserted\" data-linktype=\"relative-path\">Inserted</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Inserted\" data-linktype=\"relative-path\">Inserted</a> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.  </p>\n<p> The Insert method delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_Insert_\" data-linktype=\"relative-path\">Insert</a> method of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a>.  </p>\n<h2 id=\"data-bound-controls\">Data-Bound Controls</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object is associated with a data-bound control, such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, it is not necessary to call the Insert method from page code. The Insert method is invoked directly by the data-bound control instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void LoadViewState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that contains the saved view state values for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.  </p>\n<p> The LoadViewState method is used to load the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_OnInit_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_OnInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInit(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_LoadComplete\" data-linktype=\"relative-path\">LoadComplete</a> event handler to the page that contains the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnInit (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<p> The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override object SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the server control&#39;s current view state; otherwise, returns <code>null</code>, if there is no view state associated with the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Select\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_Select_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves data from the underlying data storage by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectMethod*</span> property with the parameters in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.SelectParameters*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerable Select ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> list of data rows.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The specified method might have any method signature, but it must return or be derived from one of the types listed in the following table for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control to call it successfully.  </p>\n<table>\n<thead>\n<tr>\n<th>Return type</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></td>\n<td>The <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> is returned by the Select method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></td>\n<td>A <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is created by using the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and returned by the Select method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a></td>\n<td>The <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is returned by the Select method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></td>\n<td>The first <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is extracted and a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is created and returned by the Select method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></td>\n<td>The object is wrapped in a one-element <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> collection and returned by the Select method.</td>\n</tr>\n</tbody>\n</table>\n<p> The method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property can be an instance method or a <code>static</code> (<code>Shared</code> in Visual Basic) method. If it is an instance method, the business object is created and destroyed each time the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property is called, except that the same instance is used to call the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property and the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property. The Select method returns an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> interface. However, to enable caching and filtering scenarios, the return value must be a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object. While the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> class does not implement the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> interface, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically extracts the default <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> control, which implements the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a>.  </p>\n<p> Before the Select operation is performed, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnSelecting_\" data-linktype=\"relative-path\">OnSelecting</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selecting\" data-linktype=\"relative-path\">Selecting</a> event to examine the values of the parameters and to perform any preprocessing before a Select operation. To perform a data retrieval operation, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object uses reflection to create an instance of the object that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property. It then calls the method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property, using any associated <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectParameters_\" data-linktype=\"relative-path\">SelectParameters</a> properties. After the Select operation completes, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnSelected_\" data-linktype=\"relative-path\">OnSelected</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"relative-path\">Selected</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"relative-path\">Selected</a> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, or <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> object and caching is enabled, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> retrieves data from and saves data to the cache during the Select operation. The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheDuration_\" data-linktype=\"relative-path\">CacheDuration</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_CacheExpirationPolicy_\" data-linktype=\"relative-path\">CacheExpirationPolicy</a> properties.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property returns a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object, and a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property has been specified, it is evaluated with any supplied <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterParameters_\" data-linktype=\"relative-path\">FilterParameters</a> properties and the resulting filter is applied to the list of data during the Select operation.  </p>\n<p> The Select method delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_Select_\" data-linktype=\"relative-path\">Select</a> method of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a>.  </p>\n<h2 id=\"data-bound-controls\">Data-Bound Controls</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is associated with a data-bound control, such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, it is not necessary to call the Select method from page code. The Select method is invoked directly by the data-bound control instead.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Tracks view-state changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control so that they can be stored in the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TrackViewState method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Update\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_ObjectDataSource_Update_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Update()</div>        \r\n          </div>\r\n    \r\n            <p>Performs an update operation by calling the method that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateMethod*</span> property and any parameters that are in the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.UpdateParameters*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Update ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value that represents the number of rows updated in the underlying data storage.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The business object is assumed to update data one record at a time, rather than in a batch.  </p>\n<p> Before the Update operation is performed, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnUpdating_\" data-linktype=\"relative-path\">OnUpdating</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event to examine the values of the parameters and to perform any preprocessing before an Update operation. To perform an update operation, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object uses reflection to create an instance of the object that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_TypeName_\" data-linktype=\"relative-path\">TypeName</a> property. It then calls the method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property, using any associated <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> properties. After the Update operation completes, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_OnUpdated_\" data-linktype=\"relative-path\">OnUpdated</a> method is called to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updated\" data-linktype=\"relative-path\">Updated</a> event. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updated\" data-linktype=\"relative-path\">Updated</a> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.  </p>\n<p> The Update method delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_Update_\" data-linktype=\"relative-path\">Update</a> method of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> For more information about parameter merging, object lifetime, and method resolution, see <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateMethod_\" data-linktype=\"relative-path\">UpdateMethod</a> property.  </p>\n</div>\n<h2 id=\"data-bound-controls\">Data-Bound Controls</h2>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control is associated with a data-bound control, such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, it is not necessary to call the Update method from page code. The Update method is invoked directly by the data-bound control instead.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls, and several <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> objects to update data. The second code example shows the <code>EmployeeLogic</code> class that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls, and several <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls to update data. The <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> displays the name of a Northwind employee, while the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls are used to enter and update address information. Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_UpdateParameters_\" data-linktype=\"relative-path\">UpdateParameters</a> collection contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> object that is bound to the selected value of the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a>, the button that raises the Update operation is enabled only after an employee is selected.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n// Add parameters and initialize the user interface\n// only if an employee is selected.\nprivate void Page_Load(object sender, EventArgs e)\n{\n  // Be sure the text boxes are initialized with\n  // data from the currently selected employee.\n  NorthwindEmployee selectedEmployee = EmployeeLogic.GetEmployee(DropDownList1.SelectedValue);\n  if (selectedEmployee != null) {\n    AddressBox.Text    = selectedEmployee.Address;\n    CityBox.Text       = selectedEmployee.City;\n    PostalCodeBox.Text = selectedEmployee.PostalCode;\n\n    Button1.Enabled = true;\n  }\n  else {\n    Button1.Enabled = false;\n  }\n}\n\n// Press the button to update.\nprivate void Btn_UpdateEmployee (object sender, CommandEventArgs e) {\n  ObjectDataSource2.Update();\n}\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;!-- The DropDownList is bound to the first ObjectDataSource. --&gt;\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;&lt;asp:dropdownlist\n          id=&quot;DropDownList1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          datatextfield=&quot;FullName&quot;\n          datavaluefield=&quot;EmpID&quot;\n          autopostback=&quot;True&quot; /&gt;&lt;/p&gt;\n\n        &lt;!-- The second ObjectDataSource performs the Update. This\n             preserves the state of the DropDownList, which otherwise\n             would rebind when the DataSourceChanged event is\n             raised as a result of an Update operation. --&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client.\n             Security Note: To validate the value of the FormParameter,\n             Security Note: handle the Updating event. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          updatemethod=&quot;UpdateEmployeeWrapper&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;&gt;\n          &lt;updateparameters&gt;\n            &lt;asp:controlparameter name=&quot;anID&quot; controlid=&quot;DropDownList1&quot; propertyname=&quot;SelectedValue&quot; /&gt;\n            &lt;asp:formparameter name=&quot;anAddress&quot; formfield=&quot;AddressBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aCity&quot; formfield=&quot;CityBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aPostalCode&quot; formfield=&quot;PostalCodeBox&quot; /&gt;\n          &lt;/updateparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;AddressBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;CityBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;PostalCodeBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;asp:button\n          id=&quot;Button1&quot;\n          runat=&quot;server&quot;\n          text=&quot;Update Employee&quot;\n          oncommand=&quot;Btn_UpdateEmployee&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n&#39; Add parameters and initialize the user interface\n&#39; only if an employee is selected.\nPrivate Sub Page_Load(sender As Object, e As EventArgs)\n\n  &#39; Be sure the text boxes are initialized with\n  &#39; data from the currently selected employee.\n  Dim selectedEmployee As NorthwindEmployee\n  selectedEmployee = EmployeeLogic.GetEmployee(DropDownList1.SelectedValue)\n\n  If Not selectedEmployee Is Nothing Then\n    AddressBox.Text    = selectedEmployee.Address\n    CityBox.Text       = selectedEmployee.City\n    PostalCodeBox.Text = selectedEmployee.PostalCode\n\n    Button1.Enabled = True\n  Else\n    Button1.Enabled = False\n  End If\nEnd Sub &#39; Page_Load\n\n&#39; Press the button to update.\nPrivate Sub Btn_UpdateEmployee (sender As Object, e As CommandEventArgs )\n  ObjectDataSource2.Update()\nEnd Sub &#39; Btn_UpdateEmployee\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;!-- The DropDownList is bound to the first ObjectDataSource. --&gt;\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;&lt;asp:dropdownlist\n          id=&quot;DropDownList1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          datatextfield=&quot;FullName&quot;\n          datavaluefield=&quot;EmpID&quot;\n          autopostback=&quot;True&quot; /&gt;&lt;/p&gt;\n\n        &lt;!-- The second ObjectDataSource performs the Update. This\n             preserves the state of the DropDownList, which otherwise\n             would rebind when the DataSourceChanged event is\n             raised as a result of an Update operation. --&gt;\n\n        &lt;!-- Security Note: The ObjectDataSource uses a FormParameter,\n             Security Note: which does not perform validation of input from the client.\n             Security Note: To validate the value of the FormParameter,\n             Security Note: handle the Updating event. --&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          updatemethod=&quot;UpdateEmployeeWrapper&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;&gt;\n          &lt;updateparameters&gt;\n            &lt;asp:controlparameter name=&quot;anID&quot; controlid=&quot;DropDownList1&quot; propertyname=&quot;SelectedValue&quot; /&gt;\n            &lt;asp:formparameter name=&quot;anAddress&quot; formfield=&quot;AddressBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aCity&quot; formfield=&quot;CityBox&quot; /&gt;\n            &lt;asp:formparameter name=&quot;aPostalCode&quot; formfield=&quot;PostalCodeBox&quot; /&gt;\n          &lt;/updateparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;AddressBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;CityBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;p&gt;&lt;asp:textbox\n          id=&quot;PostalCodeBox&quot;\n          runat=&quot;server&quot; /&gt;&lt;/p&gt;\n\n        &lt;asp:button\n          id=&quot;Button1&quot;\n          runat=&quot;server&quot;\n          text=&quot;Update Employee&quot;\n          oncommand=&quot;Btn_UpdateEmployee&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example shows the <code>EmployeeLogic</code> class that is used in the preceding code example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations one can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      // Use the SqlDataSource class to wrap the\n      // ADO.NET code required to query the database.\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      ArrayList al = GetAllEmployees() as ArrayList;\n      IEnumerator enumerator = al.GetEnumerator();\n      while (enumerator.MoveNext()) {\n        // The IEnumerable contains initialized NorthwindEmployee objects.\n        NorthwindEmployee ne = enumerator.Current as NorthwindEmployee;\n        if (ne.EmpID.Equals(anID.ToString())) {\n          return ne;\n        }\n      }\n      return null;\n    }\n    public static void UpdateEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Update();\n      if (! retval) { throw new NorthwindDataException(&quot;Employee update failed.&quot;); }\n    }\n\n    // This method is added as a conveniece wrapper on the original\n    // implementation.\n    public static void UpdateEmployeeWrapper(string anID,\n                                             string anAddress,\n                                             string aCity,\n                                             string aPostalCode) {\n      NorthwindEmployee ne = new NorthwindEmployee(anID);\n      ne.Address = anAddress;\n      ne.City = aCity;\n      ne.PostalCode = aPostalCode;\n      UpdateEmployee(ne);\n    }\n\n    // And so on...\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n      SqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName,Address,City,PostalCode &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName       = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName        = sdr[&quot;LastName&quot;].ToString();\n          this.address         = sdr[&quot;Address&quot;].ToString();\n          this.city            = sdr[&quot;City&quot;].ToString();\n          this.postalCode      = sdr[&quot;PostalCode&quot;].ToString();\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public object EmpID {\n      get { return ID; }\n    }\n\n    private string lastName;\n    public string LastName {\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      set { firstName = value;  }\n    }\n\n    public string FullName {\n      get { return firstName + &quot; &quot; + lastName; }\n    }\n\n    private string address;\n    public string Address {\n      get { return address; }\n      set { address = value;  }\n    }\n\n    private string city;\n    public string City {\n      get { return city; }\n      set { city = value;  }\n    }\n\n    private string postalCode;\n    public string PostalCode {\n      get { return postalCode; }\n      set { postalCode = value;  }\n    }\n\n    public bool Update () {\n\n      // Implement Update logic.\n\n      return true;\n    }\n  }\n\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_12#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations one can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      &#39; Use the SqlDataSource class to wrap the\n      &#39; ADO.NET code required to query the database.\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, _\n                                  &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Dim al As ArrayList = CType(GetAllEmployees(), ArrayList)\n      Dim enumerator As IEnumerator = al.GetEnumerator()\n      While enumerator.MoveNext()\n         &#39; The IEnumerable contains initialized NorthwindEmployee objects.\n         Dim ne As NorthwindEmployee = CType(enumerator.Current,NorthwindEmployee)\n         If ne.EmpID.Equals(anID.ToString()) Then\n            Return ne\n         End If\n      End While\n      Return Nothing\n   End Function &#39;GetEmployee\n\n   Public Shared Sub UpdateEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Update()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;Employee update failed.&quot;)\n      End If\n   End Sub &#39;UpdateEmployee\n\n   &#39; This method is added as a conveniece wrapper on the original\n   &#39; implementation.\n   Public Shared Sub UpdateEmployeeWrapper(anID As String, _\n                                           anAddress As String, _\n                                           aCity As String, _\n                                           aPostalCode As String)\n      Dim ne As New NorthwindEmployee(anID)\n      ne.Address = anAddress\n      ne.City = aCity\n      ne.PostalCode = aPostalCode\n      UpdateEmployee(ne)\n   End Sub &#39;UpdateEmployeeWrapper\n   &#39; And so on...\n\nEnd Class &#39;EmployeeLogic\n\nPublic Class NorthwindEmployee\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName,Address,City,PostalCode &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n            Me.aAddress = sdr(&quot;Address&quot;).ToString()\n            Me.aCity = sdr(&quot;City&quot;).ToString()\n            Me.aPostalCode = sdr(&quot;PostalCode&quot;).ToString()\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As Object\n      Get\n         Return ID\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public WriteOnly Property LastName() As String\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public WriteOnly Property FirstName() As String\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public ReadOnly Property FullName() As String\n      Get\n         Return aFirstName &amp; &quot; &quot; &amp; aLastName\n      End Get\n   End Property\n\n   Private aAddress As String\n   Public Property Address() As String\n      Get\n         Return aAddress\n      End Get\n      Set\n         aAddress = value\n      End Set\n   End Property\n\n   Private aCity As String\n   Public Property City() As String\n      Get\n         Return aCity\n      End Get\n      Set\n         aCity = value\n      End Set\n   End Property\n\n   Private aPostalCode As String\n   Public Property PostalCode() As String\n      Get\n         Return aPostalCode\n      End Get\n      Set\n         aPostalCode = value\n      End Set\n   End Property\n\n   Public Function Update() As Boolean\n\n      &#39; Implement Update logic.\n      Return True\n\n   End Function &#39;Update\n\nEnd Class &#39;NorthwindEmployee\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\n\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Deleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Delete*</span> operation has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Deleted event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> operation has completed. The return value, output parameters, and exception handling properties are available from the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> object that is associated with the event.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs#System_Web_UI_WebControls_ObjectDataSourceStatusEventArgs_AffectedRows_\" data-linktype=\"relative-path\">AffectedRows</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> object to return the number of rows that were deleted from the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Delete_\" data-linktype=\"relative-path\">Delete</a> method. To do this, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs#System_Web_UI_WebControls_ObjectDataSourceStatusEventArgs_AffectedRows_\" data-linktype=\"relative-path\">AffectedRows</a> property. If you return the number of deleted rows from the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property, the value is available from the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs#System_Web_UI_WebControls_ObjectDataSourceStatusEventArgs_ReturnValue_\" data-linktype=\"relative-path\">ReturnValue</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. The second code example shows the <code>EmployeeLogic</code> class that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays a set of all employees, using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to retrieve the data from the <code>EmployeeLogic</code> object. Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton_\" data-linktype=\"relative-path\">AutoGenerateDeleteButton</a> property is set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically displays a <strong>Delete</strong> button.  </p>\n<p> If you click the <strong>Delete</strong> button, the delete operation is performed using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property and any parameters that are specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection. In this code example, some preprocessing and post-processing steps are also performed. The <code>NorthwindEmployeeDeleting</code> delegate is called to handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleting\" data-linktype=\"relative-path\">Deleting</a> event before the operation is performed and the <code>NorthwindEmployeeDeleted</code> delegate is called to handle the Deleted event after the operation has completed to perform exception handling. In this code example, if a <code>NorthwindDataException</code> is thrown, it is handled by the <code>NorthwindEmployeeDeleted</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nprivate void NorthwindEmployeeDeleting(object source, ObjectDataSourceMethodEventArgs e)\n{\n  // The GridView passes the ID of the employee\n  // to be deleted. However, the buisiness object, EmployeeLogic,\n  // requires a NorthwindEmployee parameter, named &quot;ne&quot;. Create\n  // it now and add it to the parameters collection.\n  IDictionary paramsFromPage = e.InputParameters;\n  if (paramsFromPage[&quot;EmpID&quot;] != null) {\n    NorthwindEmployee ne\n      = new NorthwindEmployee( Int32.Parse(paramsFromPage[&quot;EmpID&quot;].ToString()));\n    // Remove the old EmpID parameter.\n    paramsFromPage.Clear();\n    paramsFromPage.Add(&quot;ne&quot;, ne);\n  }\n}\n\nprivate void NorthwindEmployeeDeleted(object source, ObjectDataSourceStatusEventArgs e)\n{\n  // Handle the Exception if it is a NorthwindDataException\n  if (e.Exception != null)\n  {\n\n    // Handle the specific exception type. The ObjectDataSource wraps\n    // any Exceptions in a TargetInvokationException wrapper, so\n    // check the InnerException property for expected Exception types.\n    if (e.Exception.InnerException is NorthwindDataException)\n    {\n      Label1.Text = e.Exception.InnerException.Message;\n      // Because the exception is handled, there is\n      // no reason to throw it.\n      e.ExceptionHandled = true;\n    }\n  }\n}\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          autogeneratecolumns=&quot;false&quot;\n          datakeynames=&quot;EmpID&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;EmpID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;First Name&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Last Name&quot; datafield=&quot;LastName&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          ondeleting=&quot;NorthwindEmployeeDeleting&quot;\n          ondeleted=&quot;NorthwindEmployeeDeleted&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;EmpID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;asp:label id=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&#39; Called before a Delete operation.\n    Private Sub NorthwindEmployeeDeleting(ByVal source As Object, ByVal e As ObjectDataSourceMethodEventArgs)\n\n        &#39; The GridView passes the ID of the employee\n        &#39; to be deleted. However, the business object, EmployeeLogic,\n        &#39; requires a NorthwindEmployee parameter, named &quot;ne&quot;. Create\n        &#39; it now and add it to the parameters collection.\n        Dim paramsFromPage As IDictionary = e.InputParameters\n  \n        If Not paramsFromPage(&quot;EmpID&quot;) Is Nothing Then\n    \n            Dim ne As New NorthwindEmployee(paramsFromPage(&quot;EmpID&quot;).ToString())\n            &#39; Remove the old EmpID parameter.\n            paramsFromPage.Clear()\n            paramsFromPage.Add(&quot;ne&quot;, ne)\n    \n    \n        End If\n    End Sub &#39; NorthwindEmployeeDeleting\n\n    &#39; Called after a Delete operation.\n    Private Sub NorthwindEmployeeDeleted(ByVal source As Object, ByVal e As ObjectDataSourceStatusEventArgs)\n        &#39; Handle the Exception if it is a NorthwindDataException.\n        If Not e.Exception Is Nothing Then\n\n            &#39; Handle the specific exception type. The ObjectDataSource wraps\n            &#39; any Exceptions in a TargetInvokationException wrapper, so\n            &#39; check the InnerException property for the expected Exception types.\n            If e.Exception.InnerException.GetType().Equals(GetType(NorthwindDataException)) Then\n\n                Label1.Text = e.Exception.InnerException.Message\n                &#39; Because the exception is handled, there is\n                &#39; no reason to throw it.\n                e.ExceptionHandled = True\n      \n            End If\n        End If\n    End Sub &#39; NorthwindEmployeeDeleted\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          autogeneratecolumns=&quot;false&quot;\n          datakeynames=&quot;EmpID&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;EmpID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;First Name&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Last Name&quot; datafield=&quot;LastName&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          ondeleting=&quot;NorthwindEmployeeDeleting&quot;\n          ondeleted=&quot;NorthwindEmployeeDeleted&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;EmpID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;asp:label id=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example shows the <code>EmployeeLogic</code> class that is used in the preceding code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\nPublic Class EmployeeLogic\n\n   &#39; Return a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      &#39; Use the SqlDataSource class to wrap the\n      &#39; ADO.NET code required to query the database.\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, _\n                                  &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Return New NorthwindEmployee(anID)\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;Employee delete failed.&quot;)\n      End If &#39; Delete the object in memory.\n      ne = Nothing\n   End Sub &#39;DeleteEmployee\n\n\n   Public Shared Sub DeleteEmployeeByID(anID As Integer)\n      Dim tempEmp As New NorthwindEmployee(anID)\n      DeleteEmployee(tempEmp)\n   End Sub &#39;DeleteEmployeeByID\n\nEnd Class &#39;EmployeeLogic\n\nPublic Class NorthwindEmployee\n\n   Public Sub New()\n      ID = DBNull.Value\n      aLastName = &quot;&quot;\n      aFirstName = &quot;&quot;\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As Object\n      Get\n         Return ID\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public Function Delete() As Boolean\n      If ID.Equals(DBNull.Value) Then\n         &#39; The Employee object is not persisted.\n         Return True\n      Else\n         &#39; The Employee object is persisted.\n         &#39; Use the SqlDataSource control as a convenient wrapper for\n         &#39; the ADO.NET code needed to delete a record from the database.\n         Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n         Dim sds As New SqlDataSource()\n         Try\n            sds.ConnectionString = cts.ConnectionString\n            sds.DeleteParameters.Add(New Parameter(&quot;empID&quot;, TypeCode.Int32, Me.ID.ToString()))\n            sds.DeleteCommand = &quot;DELETE FROM [Order Details] &quot; &amp; _\n                &quot;WHERE OrderID IN (SELECT OrderID FROM Orders WHERE EmployeeID=@empID)&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM Orders WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM EmployeeTerritories WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            Return True\n         Finally\n            &#39; Clean up resources.\n            sds.Dispose()\n         End Try\n      End If\n   End Function &#39;Delete\nEnd Class &#39;NorthwindEmployee\n\nPublic Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\n\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      // Use the SqlDataSource class to wrap the\n      // ADO.NET code required to query the database.\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      return new NorthwindEmployee(anID);\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;Employee delete failed.&quot;); }\n      // Delete the object in memory.\n      ne = null;\n    }\n\n    public static void DeleteEmployeeByID(int anID) {\n        NorthwindEmployee tempEmp = new NorthwindEmployee(anID);\n        DeleteEmployee(tempEmp);\n    }\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public object EmpID {\n      get { return ID; }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n    public bool Delete () {\n      if (ID.Equals(DBNull.Value)) {\n        // The Employee object is not persisted.\n        return true;\n      }\n      else {\n        // The Employee object is persisted.\n        // Use the SqlDataSource control as a convenient wrapper for\n        // the ADO.NET code needed to delete a record from the database.\n        ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n        SqlDataSource sds = new SqlDataSource();\n\n        try {\n          sds.ConnectionString = cts.ConnectionString;\n          sds.DeleteParameters.Add(new Parameter(&quot;empID&quot;, TypeCode.Int32, this.ID.ToString()));\n          sds.DeleteCommand = &quot;DELETE FROM [Order Details] &quot; + \n              &quot;WHERE OrderID IN (SELECT OrderID FROM Orders WHERE EmployeeID=@empID)&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM Orders WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM EmployeeTerritories WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          return true;\n        }\n        finally {\n          // Clean up resources.\n          sds.Dispose();\n        }\n      }\n    }\n  }\n\n  public class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Deleting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deleting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Delete*</span> operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Deleting event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control performs the delete operation. The parameters are available as an <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> collection that is accessed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> property, which is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventArgs</a> object.  </p>\n<p> You can cancel the delete operation by setting the <a class=\"xref\" href=\"microsoft.win32.sessionendingeventargs#Microsoft_Win32_SessionEndingEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventArgs</a> to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. The second code example shows the <code>EmployeeLogic</code> class that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to delete data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays a set of all employees, using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to retrieve the data from the <code>EmployeeLogic</code> object. Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton_\" data-linktype=\"relative-path\">AutoGenerateDeleteButton</a> property is set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically displays a <strong>Delete</strong> button.  </p>\n<p> If you click the <strong>Delete</strong> button, the delete operation is performed using the method that is specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteMethod_\" data-linktype=\"relative-path\">DeleteMethod</a> property and any parameters that are specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_DeleteParameters_\" data-linktype=\"relative-path\">DeleteParameters</a> collection. In this code example, some preprocessing and post-processing steps are also performed. The <code>NorthwindEmployeeDeleting</code> delegate is called to handle the Deleting event before the operation is performed, and the <code>NorthwindEmployeeDeleted</code> delegate is called to handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Deleted\" data-linktype=\"relative-path\">Deleted</a> event after the operation has completed to perform exception handling. In this code example, if a <code>NorthwindDataException</code> is thrown, it is handled by the <code>NorthwindEmployeeDeleted</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nprivate void NorthwindEmployeeDeleting(object source, ObjectDataSourceMethodEventArgs e)\n{\n  // The GridView passes the ID of the employee\n  // to be deleted. However, the buisiness object, EmployeeLogic,\n  // requires a NorthwindEmployee parameter, named &quot;ne&quot;. Create\n  // it now and add it to the parameters collection.\n  IDictionary paramsFromPage = e.InputParameters;\n  if (paramsFromPage[&quot;EmpID&quot;] != null) {\n    NorthwindEmployee ne\n      = new NorthwindEmployee( Int32.Parse(paramsFromPage[&quot;EmpID&quot;].ToString()));\n    // Remove the old EmpID parameter.\n    paramsFromPage.Clear();\n    paramsFromPage.Add(&quot;ne&quot;, ne);\n  }\n}\n\nprivate void NorthwindEmployeeDeleted(object source, ObjectDataSourceStatusEventArgs e)\n{\n  // Handle the Exception if it is a NorthwindDataException\n  if (e.Exception != null)\n  {\n\n    // Handle the specific exception type. The ObjectDataSource wraps\n    // any Exceptions in a TargetInvokationException wrapper, so\n    // check the InnerException property for expected Exception types.\n    if (e.Exception.InnerException is NorthwindDataException)\n    {\n      Label1.Text = e.Exception.InnerException.Message;\n      // Because the exception is handled, there is\n      // no reason to throw it.\n      e.ExceptionHandled = true;\n    }\n  }\n}\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          autogeneratecolumns=&quot;false&quot;\n          datakeynames=&quot;EmpID&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;EmpID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;First Name&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Last Name&quot; datafield=&quot;LastName&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          ondeleting=&quot;NorthwindEmployeeDeleting&quot;\n          ondeleted=&quot;NorthwindEmployeeDeleted&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;EmpID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;asp:label id=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&#39; Called before a Delete operation.\n    Private Sub NorthwindEmployeeDeleting(ByVal source As Object, ByVal e As ObjectDataSourceMethodEventArgs)\n\n        &#39; The GridView passes the ID of the employee\n        &#39; to be deleted. However, the business object, EmployeeLogic,\n        &#39; requires a NorthwindEmployee parameter, named &quot;ne&quot;. Create\n        &#39; it now and add it to the parameters collection.\n        Dim paramsFromPage As IDictionary = e.InputParameters\n  \n        If Not paramsFromPage(&quot;EmpID&quot;) Is Nothing Then\n    \n            Dim ne As New NorthwindEmployee(paramsFromPage(&quot;EmpID&quot;).ToString())\n            &#39; Remove the old EmpID parameter.\n            paramsFromPage.Clear()\n            paramsFromPage.Add(&quot;ne&quot;, ne)\n    \n    \n        End If\n    End Sub &#39; NorthwindEmployeeDeleting\n\n    &#39; Called after a Delete operation.\n    Private Sub NorthwindEmployeeDeleted(ByVal source As Object, ByVal e As ObjectDataSourceStatusEventArgs)\n        &#39; Handle the Exception if it is a NorthwindDataException.\n        If Not e.Exception Is Nothing Then\n\n            &#39; Handle the specific exception type. The ObjectDataSource wraps\n            &#39; any Exceptions in a TargetInvokationException wrapper, so\n            &#39; check the InnerException property for the expected Exception types.\n            If e.Exception.InnerException.GetType().Equals(GetType(NorthwindDataException)) Then\n\n                Label1.Text = e.Exception.InnerException.Message\n                &#39; Because the exception is handled, there is\n                &#39; no reason to throw it.\n                e.ExceptionHandled = True\n      \n            End If\n        End If\n    End Sub &#39; NorthwindEmployeeDeleted\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;\n          autogeneratedeletebutton=&quot;true&quot;\n          autogeneratecolumns=&quot;false&quot;\n          datakeynames=&quot;EmpID&quot;&gt;\n          &lt;columns&gt;\n            &lt;asp:boundfield headertext=&quot;EmpID&quot; datafield=&quot;EmpID&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;First Name&quot; datafield=&quot;FirstName&quot; /&gt;\n            &lt;asp:boundfield headertext=&quot;Last Name&quot; datafield=&quot;LastName&quot; /&gt;\n          &lt;/columns&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetAllEmployees&quot;\n          deletemethod=&quot;DeleteEmployee&quot;\n          ondeleting=&quot;NorthwindEmployeeDeleting&quot;\n          ondeleted=&quot;NorthwindEmployeeDeleted&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;&gt;\n          &lt;deleteparameters&gt;\n            &lt;asp:parameter name=&quot;EmpID&quot; type=&quot;Int32&quot; /&gt;\n          &lt;/deleteparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n        &lt;asp:label id=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example shows the <code>EmployeeLogic</code> class that is used in the preceding code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\nPublic Class EmployeeLogic\n\n   &#39; Return a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n      Dim al As New ArrayList()\n\n      &#39; Use the SqlDataSource class to wrap the\n      &#39; ADO.NET code required to query the database.\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim sds As New SqlDataSource(cts.ConnectionString, _\n                                  &quot;SELECT EmployeeID FROM Employees&quot;)\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      Return New NorthwindEmployee(anID)\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;Employee delete failed.&quot;)\n      End If &#39; Delete the object in memory.\n      ne = Nothing\n   End Sub &#39;DeleteEmployee\n\n\n   Public Shared Sub DeleteEmployeeByID(anID As Integer)\n      Dim tempEmp As New NorthwindEmployee(anID)\n      DeleteEmployee(tempEmp)\n   End Sub &#39;DeleteEmployeeByID\n\nEnd Class &#39;EmployeeLogic\n\nPublic Class NorthwindEmployee\n\n   Public Sub New()\n      ID = DBNull.Value\n      aLastName = &quot;&quot;\n      aFirstName = &quot;&quot;\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n      Dim conn As New SqlConnection(cts.ConnectionString)\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; This is not a while loop. It only loops once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As Object\n      Get\n         Return ID\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public Function Delete() As Boolean\n      If ID.Equals(DBNull.Value) Then\n         &#39; The Employee object is not persisted.\n         Return True\n      Else\n         &#39; The Employee object is persisted.\n         &#39; Use the SqlDataSource control as a convenient wrapper for\n         &#39; the ADO.NET code needed to delete a record from the database.\n         Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n         Dim sds As New SqlDataSource()\n         Try\n            sds.ConnectionString = cts.ConnectionString\n            sds.DeleteParameters.Add(New Parameter(&quot;empID&quot;, TypeCode.Int32, Me.ID.ToString()))\n            sds.DeleteCommand = &quot;DELETE FROM [Order Details] &quot; &amp; _\n                &quot;WHERE OrderID IN (SELECT OrderID FROM Orders WHERE EmployeeID=@empID)&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM Orders WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM EmployeeTerritories WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID&quot;\n            sds.Delete()\n            Return True\n         Finally\n            &#39; Clean up resources.\n            sds.Dispose()\n         End Try\n      End If\n   End Function &#39;Delete\nEnd Class &#39;NorthwindEmployee\n\nPublic Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\n\nEnd Class &#39;NorthwindDataException\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_10#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      // Use the SqlDataSource class to wrap the\n      // ADO.NET code required to query the database.\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      return new NorthwindEmployee(anID);\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;Employee delete failed.&quot;); }\n      // Delete the object in memory.\n      ne = null;\n    }\n\n    public static void DeleteEmployeeByID(int anID) {\n        NorthwindEmployee tempEmp = new NorthwindEmployee(anID);\n        DeleteEmployee(tempEmp);\n    }\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlConnection conn = new SqlConnection (cts.ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // This is not a while loop. It only loops once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public object EmpID {\n      get { return ID; }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n    public bool Delete () {\n      if (ID.Equals(DBNull.Value)) {\n        // The Employee object is not persisted.\n        return true;\n      }\n      else {\n        // The Employee object is persisted.\n        // Use the SqlDataSource control as a convenient wrapper for\n        // the ADO.NET code needed to delete a record from the database.\n        ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n        SqlDataSource sds = new SqlDataSource();\n\n        try {\n          sds.ConnectionString = cts.ConnectionString;\n          sds.DeleteParameters.Add(new Parameter(&quot;empID&quot;, TypeCode.Int32, this.ID.ToString()));\n          sds.DeleteCommand = &quot;DELETE FROM [Order Details] &quot; + \n              &quot;WHERE OrderID IN (SELECT OrderID FROM Orders WHERE EmployeeID=@empID)&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM Orders WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM EmployeeTerritories WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          sds.DeleteCommand = &quot;DELETE FROM Employees WHERE EmployeeID=@empID&quot;;\n          sds.Delete();\n          return true;\n        }\n        finally {\n          // Clean up resources.\n          sds.Dispose();\n        }\n      }\n    }\n  }\n\n  public class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Filtering\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Filtering</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before a filter operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Filtering event to perform validation operations on filter parameter values before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control performs a filter operation. You can cancel the selected operation by setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcefilteringeventargs\" data-linktype=\"relative-path\">ObjectDataSourceFilteringEventArgs</a> to <code>true</code>. The event is raised only if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property is set.  </p>\n<p> The Filtering event delegates to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview#System_Web_UI_WebControls_ObjectDataSourceView_Filtering\" data-linktype=\"relative-path\">System.Web.UI.WebControls.ObjectDataSourceView.Filtering</a> event of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> that is associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object that is returned by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method. If you are using the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_FilterExpression_\" data-linktype=\"relative-path\">FilterExpression</a> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Inserted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Inserted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Insert*</span> operation has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Inserted event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operation has completed. The return value, output parameters, and exception handling properties are available from the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> object that is associated with the event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Inserting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Inserting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Insert*</span> operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Inserting event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control performs the insert operation. The parameters are available as an <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> collection that is accessed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> property, which is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventArgs</a> object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to insert data. Initially, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> displays a new <code>NorthwindEmployee</code> record, along with an automatically generated <strong>Insert</strong> button. After you enter data into the fields of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, click the <strong>Insert</strong> button. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property identifies which method performs the insert operation.  </p>\n<p> In this example, the <code>UpdateEmployeeInfo</code> method is used to perform an insert; however, it requires a <code>NorthwindEmployee</code> parameter to insert the data. For this reason, the collection of strings that the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control passes automatically is not sufficient. The <code>NorthwindEmployeeInserting</code> delegate is an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventhandler\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventHandler</a> object that handles the Inserting event and enables you to manipulate the input parameters before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operation proceeds. Because the <code>UpdateEmployeeInfo</code> method requires a <code>NorthwindEmployee</code> object as a parameter, one is created using the collection of strings and is added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> collection using a parameter name (<code>ne</code>) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control.  </p>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> operation is performed, the method that is identified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertMethod_\" data-linktype=\"relative-path\">InsertMethod</a> property is called. If the <code>Insert</code> method of the object has a method signature that includes parameters, the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_InsertParameters_\" data-linktype=\"relative-path\">InsertParameters</a> collection must contain a parameter with names that match the method signature parameters for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Insert_\" data-linktype=\"relative-path\">Insert</a> method to complete successfully.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.VB&quot; Assembly=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nPrivate Sub NorthwindEmployeeInserting(source As Object, e As ObjectDataSourceMethodEventArgs)\n\n  &#39; The GridView control passes an array of strings in the parameters\n  &#39; collection because that is the type it knows how to work with.\n  &#39; However, the business object expects a custom type. Build it\n  &#39; and add it to the parameters collection.\n  Dim paramsFromPage As IDictionary = e.InputParameters\n\n  Dim ne As New NorthwindEmployee()\n  ne.FirstName  = paramsFromPage(&quot;FirstName&quot;).ToString()\n  ne.LastName   = paramsFromPage(&quot;LastName&quot;).ToString()\n  ne.Title      = paramsFromPage(&quot;Title&quot;).ToString()\n  ne.Courtesy   = paramsFromPage(&quot;Courtesy&quot;).ToString()\n  ne.Supervisor = Int32.Parse(paramsFromPage(&quot;Supervisor&quot;).ToString())\n  \n  paramsFromPage.Clear()\n  paramsFromPage.Add(&quot;ne&quot;, ne)\nEnd Sub &#39; NorthwindEmployeeInserting\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          autogenerateinsertbutton=&quot;True&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:detailsview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          insertmethod=&quot;UpdateEmployeeInfo&quot;\n          oninserting=&quot;NorthwindEmployeeInserting&quot;\n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot; &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#1\">&lt;%@ Register TagPrefix=&quot;aspSample&quot; Namespace=&quot;Samples.AspNet.CS&quot; Assembly=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\nprivate void NorthwindEmployeeInserting(object source, ObjectDataSourceMethodEventArgs e)\n{\n  // The business object expects a custom type. Build it\n  // and add it to the parameters collection.\n  \n  IDictionary paramsFromPage = e.InputParameters;\n\n  NorthwindEmployee ne = new NorthwindEmployee();\n\n  ne.FirstName  = paramsFromPage[&quot;FirstName&quot;].ToString();\n  ne.LastName   = paramsFromPage[&quot;LastName&quot;].ToString();\n  ne.Title      = paramsFromPage[&quot;Title&quot;].ToString();\n  ne.Courtesy   = paramsFromPage[&quot;Courtesy&quot;].ToString();\n  ne.Supervisor = Int32.Parse(paramsFromPage[&quot;Supervisor&quot;].ToString());\n\n  paramsFromPage.Clear();\n  paramsFromPage.Add(&quot;ne&quot;, ne);\n}\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:detailsview\n          id=&quot;DetailsView1&quot;\n          runat=&quot;server&quot;\n          autogenerateinsertbutton=&quot;True&quot;\n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:detailsview&gt;\n\n        &lt;asp:objectdatasource\n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          selectmethod=&quot;GetEmployee&quot;\n          insertmethod=&quot;UpdateEmployeeInfo&quot;\n          oninserting=&quot;NorthwindEmployeeInserting&quot;\n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          &gt;\n          &lt;selectparameters&gt;\n            &lt;asp:parameter name=&quot;anID&quot; defaultvalue=&quot;-1&quot; /&gt;\n          &lt;/selectparameters&gt;\n        &lt;/asp:objectdatasource&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  </p>\n<ul>\n<li><p>The <code>EmployeeLogic</code> class, which is a stateless class that encapsulates business logic.  </p>\n</li>\n<li><p>The <code>NorthwindEmployee</code> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  </p>\n<p>An additional <code>NorthwindDataException</code> class is provided as a convenience. For a complete working example, you must compile and use these classes. The <code>UpdateEmployeeInfo</code> method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#2\">Imports System\nImports System.Collections\nImports System.Configuration\nImports System.Data\nImports System.Data.SqlClient\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n\n&#39;\n&#39; EmployeeLogic is a stateless business object that encapsulates\n&#39; the operations you can perform on a NorthwindEmployee object.\n&#39;\nPublic Class EmployeeLogic\n\n   &#39; Returns a collection of NorthwindEmployee objects.\n   Public Shared Function GetAllEmployees() As ICollection\n\n      Dim al As New ArrayList()\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n\n      Dim sds As New SqlDataSource(cts.ConnectionString, &quot;SELECT EmployeeID FROM Employees&quot;)\n\n      Try\n         Dim IDs As IEnumerable = sds.Select(DataSourceSelectArguments.Empty)\n\n         &#39; Iterate through the Enumeration and create a\n         &#39; NorthwindEmployee object for each ID.\n         Dim enumerator As IEnumerator = IDs.GetEnumerator()\n         While enumerator.MoveNext()\n            &#39; The IEnumerable contains DataRowView objects.\n            Dim row As DataRowView = CType(enumerator.Current,DataRowView)\n            Dim id As String = row(&quot;EmployeeID&quot;).ToString()\n            Dim nwe As New NorthwindEmployee(id)\n            &#39; Add the NorthwindEmployee object to the collection.\n            al.Add(nwe)\n         End While\n      Finally\n         &#39; If anything strange happens, clean up.\n         sds.Dispose()\n      End Try\n\n      Return al\n   End Function &#39;GetAllEmployees\n\n\n   Public Shared Function GetEmployee(anID As Object) As NorthwindEmployee\n      If anID.Equals(&quot;-1&quot;) OrElse anID.Equals(DBNull.Value) Then\n         Return New NorthwindEmployee()\n      Else\n         Return New NorthwindEmployee(anID)\n      End If\n   End Function &#39;GetEmployee\n\n\n   Public Shared Sub UpdateEmployeeInfo(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Save()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;UpdateEmployee failed.&quot;)\n      End If\n   End Sub &#39;UpdateEmployeeInfo\n\n   Public Shared Sub DeleteEmployee(ne As NorthwindEmployee)\n      Dim retval As Boolean = ne.Delete()\n      If Not retval Then\n         Throw New NorthwindDataException(&quot;DeleteEmployee failed.&quot;)\n      End If\n   End Sub &#39;DeleteEmployee\n\n   &#39; And so on...\n\nEnd Class &#39;EmployeeLogic\n\n\nPublic Class NorthwindEmployee\n\n\n   Public Sub New()\n      ID = DBNull.Value\n      lastName = &quot;&quot;\n      firstName = &quot;&quot;\n      title = &quot;&quot;\n      titleOfCourtesy = &quot;&quot;\n      reportsTo = - 1\n   End Sub &#39;New\n\n\n   Public Sub New(anID As Object)\n      Me.ID = anID\n\n      Dim cts As ConnectionStringSettings = ConfigurationManager.ConnectionStrings(&quot;NorthwindConnection&quot;)\n\n      Dim conn As New SqlConnection(cts.ConnectionString)\n\n      Dim sc As New SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; &amp; _\n                               &quot; FROM Employees &quot; &amp; _\n                               &quot; WHERE EmployeeID = @empId&quot;, conn)\n\n      &#39; Add the employee ID parameter and set its value.\n      sc.Parameters.Add(New SqlParameter(&quot;@empId&quot;, SqlDbType.Int)).Value = Int32.Parse(anID.ToString())\n      Dim sdr As SqlDataReader = Nothing\n\n      Try\n         conn.Open()\n         sdr = sc.ExecuteReader()\n\n         &#39; Only loop once.\n         If Not (sdr Is Nothing) AndAlso sdr.Read() Then\n            &#39; The IEnumerable contains DataRowView objects.\n            Me.aFirstName = sdr(&quot;FirstName&quot;).ToString()\n            Me.aLastName = sdr(&quot;LastName&quot;).ToString()\n            Me.aTitle = sdr(&quot;Title&quot;).ToString()\n            Me.titleOfCourtesy = sdr(&quot;TitleOfCourtesy&quot;).ToString()\n            If Not sdr.IsDBNull(4) Then\n               Me.reportsTo = sdr.GetInt32(4)\n            End If\n         Else\n            Throw New NorthwindDataException(&quot;Data not loaded for employee id.&quot;)\n         End If\n      Finally\n         Try\n            If Not (sdr Is Nothing) Then\n               sdr.Close()\n            End If\n            conn.Close()\n         Catch se As SqlException\n            &#39; Log an event in the Application Event Log.\n            Throw\n         End Try\n      End Try\n   End Sub &#39;New\n\n   Private ID As Object\n   Public ReadOnly Property EmpID() As String\n      Get\n         Return ID.ToString()\n      End Get\n   End Property\n\n   Private aLastName As String\n   Public Property LastName() As String\n      Get\n         Return aLastName\n      End Get\n      Set\n         aLastName = value\n      End Set\n   End Property\n\n   Private aFirstName As String\n   Public Property FirstName() As String\n      Get\n         Return aFirstName\n      End Get\n      Set\n         aFirstName = value\n      End Set\n   End Property\n\n   Public ReadOnly Property FullName() As String\n      Get\n         Return FirstName &amp; &quot; &quot; &amp; LastName\n      End Get\n   End Property\n\n   Private aTitle As String\n   Public Property Title() As String\n      Get\n         Return aTitle\n      End Get\n      Set\n         aTitle = value\n      End Set\n   End Property\n\n   Private titleOfCourtesy As String\n   Public Property Courtesy() As String\n      Get\n         Return titleOfCourtesy\n      End Get\n      Set\n         titleOfCourtesy = value\n      End Set\n   End Property\n\n   Private reportsTo As Integer\n   Public Property Supervisor() As Integer\n      Get\n         Return reportsTo\n      End Get\n      Set\n         reportsTo = value\n      End Set\n   End Property\n\n   Public Function Save() As Boolean\n\n      &#39; Implement persistence logic.\n      Return True\n\n   End Function &#39;Save\n\n\n   Public Function Delete() As Boolean\n\n     &#39; Implement delete logic.\n     Return True\n\n   End Function &#39;Delete\nEnd Class &#39;NorthwindEmployee\n\n\nFriend Class NorthwindDataException\n   Inherits Exception\n\n   Public Sub New(msg As String)\n      MyBase.New(msg)\n   End Sub &#39;New\nEnd Class &#39;NorthwindDataException\n\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_4#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    // Returns a collection of NorthwindEmployee objects.\n    public static ICollection GetAllEmployees () {\n      ArrayList al = new ArrayList();\n\n      ConnectionStringSettings cts = ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;];\n\n      SqlDataSource sds\n        = new SqlDataSource(cts.ConnectionString,\n                            &quot;SELECT EmployeeID FROM Employees&quot;);\n      try {\n        IEnumerable IDs = sds.Select(DataSourceSelectArguments.Empty);\n\n        // Iterate through the Enumeration and create a\n        // NorthwindEmployee object for each ID.\n        IEnumerator enumerator = IDs.GetEnumerator();\n        while (enumerator.MoveNext()) {\n          // The IEnumerable contains DataRowView objects.\n          DataRowView row = enumerator.Current as DataRowView;\n          string id = row[&quot;EmployeeID&quot;].ToString();\n          NorthwindEmployee nwe = new NorthwindEmployee(id);\n          // Add the NorthwindEmployee object to the collection.\n          al.Add(nwe);\n        }\n      }\n      finally {\n        // If anything strange happens, clean up.\n        sds.Dispose();\n      }\n\n      return al;\n    }\n\n    public static NorthwindEmployee GetEmployee(object anID) {\n      if (anID.Equals(&quot;-1&quot;) ||\n          anID.Equals(DBNull.Value) ) {\n        return new NorthwindEmployee();\n      }\n      else {\n        return new NorthwindEmployee(anID);\n      }\n    }\n\n    public static void UpdateEmployeeInfo(NorthwindEmployee ne) {\n      bool retval = ne.Save();\n      if (! retval) { throw new NorthwindDataException(&quot;UpdateEmployee failed.&quot;); }\n    }\n\n    public static void DeleteEmployee(NorthwindEmployee ne) {\n      bool retval = ne.Delete();\n      if (! retval) { throw new NorthwindDataException(&quot;DeleteEmployee failed.&quot;); }\n    }\n\n    // And so on...\n  }\n\n  public class NorthwindEmployee {\n\n    public NorthwindEmployee () {\n      ID = DBNull.Value;\n      lastName = &quot;&quot;;\n      firstName = &quot;&quot;;\n      title=&quot;&quot;;\n      titleOfCourtesy = &quot;&quot;;\n      reportsTo = -1;\n    }\n\n    public NorthwindEmployee (object anID) {\n      this.ID = anID;\n\n      SqlConnection conn\n        = new SqlConnection (ConfigurationManager.ConnectionStrings[&quot;NorthwindConnection&quot;].ConnectionString);\n      SqlCommand sc =\n        new SqlCommand(&quot; SELECT FirstName,LastName,Title,TitleOfCourtesy,ReportsTo &quot; +\n                       &quot; FROM Employees &quot; +\n                       &quot; WHERE EmployeeID = @empId&quot;,\n                       conn);\n      // Add the employee ID parameter and set its value.\n      sc.Parameters.Add(new SqlParameter(&quot;@empId&quot;,SqlDbType.Int)).Value = Int32.Parse(anID.ToString());\n      SqlDataReader sdr = null;\n\n      try {\n        conn.Open();\n        sdr = sc.ExecuteReader();\n\n        // Only loop once.\n        if (sdr != null &amp;&amp; sdr.Read()) {\n          // The IEnumerable contains DataRowView objects.\n          this.firstName        = sdr[&quot;FirstName&quot;].ToString();\n          this.lastName         = sdr[&quot;LastName&quot;].ToString();\n          this.title            = sdr[&quot;Title&quot;].ToString();\n          this.titleOfCourtesy  = sdr[&quot;TitleOfCourtesy&quot;].ToString();\n          if (! sdr.IsDBNull(4)) {\n            this.reportsTo        = sdr.GetInt32(4);\n          }\n        }\n        else {\n          throw new NorthwindDataException(&quot;Data not loaded for employee id.&quot;);\n        }\n      }\n      finally {\n        try {\n          if (sdr != null) sdr.Close();\n          conn.Close();\n        }\n        catch (SqlException) {\n          // Log an event in the Application Event Log.\n          throw;\n        }\n      }\n    }\n\n    private object ID;\n    public string EmpID {\n      get { return ID.ToString();  }\n    }\n\n    private string lastName;\n    public string LastName {\n      get { return lastName; }\n      set { lastName = value; }\n    }\n\n    private string firstName;\n    public string FirstName {\n      get { return firstName; }\n      set { firstName = value;  }\n    }\n\n    public string FullName {\n      get { return FirstName + &quot; &quot; + LastName; }\n    }\n\n    private string title;\n    public String Title {\n      get { return title; }\n      set { title = value; }\n    }\n\n    private string titleOfCourtesy;\n    public string Courtesy {\n      get { return titleOfCourtesy; }\n      set { titleOfCourtesy = value; }\n    }\n\n    private int    reportsTo;\n    public int Supervisor {\n      get { return reportsTo; }\n      set { reportsTo = value; }\n    }\n\n    public bool Save () {\n      // Implement persistence logic.\n      return true;\n    }\n\n    public bool Delete () {\n      // Implement delete logic.\n      return true;\n    }\n  }\n\n  internal class NorthwindDataException: Exception {\n    public NorthwindDataException(string msg) : base (msg) { }\n  }\n}\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectCreated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the object that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.TypeName*</span> property is created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the ObjectCreated event to call other methods on the business object, set properties, or perform other initialization that is specific to the business object before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object calls the business object data method to perform a data operation. A reference to the object is accessed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceeventargs#System_Web_UI_WebControls_ObjectDataSourceEventArgs_ObjectInstance_\" data-linktype=\"relative-path\">ObjectInstance</a> property, which is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceeventargs\" data-linktype=\"relative-path\">ObjectDataSourceEventArgs</a> object.  </p>\n<p> If the method that is identified to perform the data operation is <code>static</code> (<code>Shared</code> in Visual Basic), the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> and ObjectCreated events are never raised.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectCreating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before the object that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.TypeName*</span> property is created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the method that is identified to perform the data operation is <code>static</code> (<code>Shared</code> in Visual Basic), the ObjectCreating and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreated\" data-linktype=\"relative-path\">ObjectCreated</a> events are never raised.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control automatically calls the default constructor of a business object to create an instance of it using reflection. Handle the ObjectCreating event to explicitly call another constructor, and set the instance of the object that results to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceeventargs#System_Web_UI_WebControls_ObjectDataSourceEventArgs_ObjectInstance_\" data-linktype=\"relative-path\">ObjectInstance</a> property of the associated <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceeventargs\" data-linktype=\"relative-path\">ObjectDataSourceEventArgs</a> object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display information. The second code example provides the middle-tier business object that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display information. You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In a production application, multiple requests might end up simultaneously using the same instance. Therefore, the object needs to be implemented in a thread-safe manner.  </p>\n</div>\n<p> This code example demonstrates this pattern. You can handle the ObjectCreating event to check the cache for an object first, and only create an instance of the object, if one is not already cached. Then, handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\" data-linktype=\"relative-path\">ObjectDisposing</a> event to cache the business object for future use, instead of destroying it. In this code example, the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel\" data-linktype=\"relative-path\">System.ComponentModel.CancelEventArgs.Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcedisposingeventargs\" data-linktype=\"relative-path\">ObjectDataSourceDisposingEventArgs</a> object is set to <code>true</code> to direct the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> to not call <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method on the object.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#1\">&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n// Instead of creating and destroying the business object each time, the \n// business object is cached in the ASP.NET Cache.\nprivate void GetEmployeeLogic(object sender, ObjectDataSourceEventArgs e)\n{\n    // First check to see if an instance of this object already exists in the Cache.\n    EmployeeLogic cachedLogic;\n    \n    cachedLogic = Cache[&quot;ExpensiveEmployeeLogicObject&quot;] as EmployeeLogic;\n    \n    if (null == cachedLogic) {\n            cachedLogic = new EmployeeLogic();            \n    }\n        \n    e.ObjectInstance = cachedLogic;     \n}\n\nprivate void ReturnEmployeeLogic(object sender, ObjectDataSourceDisposingEventArgs e)\n{    \n    // Get the instance of the business object that the ObjectDataSource is working with.\n    EmployeeLogic cachedLogic = e.ObjectInstance as EmployeeLogic;        \n    \n    // Test to determine whether the object already exists in the cache.\n    EmployeeLogic temp = Cache[&quot;ExpensiveEmployeeLogicObject&quot;] as EmployeeLogic;\n    \n    if (null == temp) {\n        // If it does not yet exist in the Cache, add it.\n        Cache.Insert(&quot;ExpensiveEmployeeLogicObject&quot;, cachedLogic);\n    }\n    \n    // Cancel the event, so that the object will \n    // not be Disposed if it implements IDisposable.\n    e.Cancel = true;\n}\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;          \n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource \n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;          \n          selectmethod=&quot;GetCreateTime&quot;          \n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          onobjectcreating=&quot;GetEmployeeLogic&quot;\n          onobjectdisposing=&quot;ReturnEmployeeLogic&quot; &gt;\n        &lt;/asp:objectdatasource&gt;        \n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#1\">&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n&#39; Instead of creating and destroying the business object each time, the \n&#39; business object is cached in the ASP.NET Cache.\nSub GetEmployeeLogic(sender As Object, e As ObjectDataSourceEventArgs)\n\n    &#39; First check to see if an instance of this object already exists in the Cache.\n    Dim cachedLogic As EmployeeLogic \n    \n    cachedLogic = CType( Cache(&quot;ExpensiveEmployeeLogicObject&quot;), EmployeeLogic)\n    \n    If (cachedLogic Is Nothing) Then\n            cachedLogic = New EmployeeLogic            \n    End If\n        \n    e.ObjectInstance = cachedLogic\n    \nEnd Sub &#39; GetEmployeeLogic\n\nSub ReturnEmployeeLogic(sender As Object, e As ObjectDataSourceDisposingEventArgs)\n    \n    &#39; Get the instance of the business object that the ObjectDataSource is working with.\n    Dim cachedLogic  As EmployeeLogic  \n    cachedLogic = CType( e.ObjectInstance, EmployeeLogic)\n    \n    &#39; Test to determine whether the object already exists in the cache.\n    Dim temp As EmployeeLogic \n    temp = CType( Cache(&quot;ExpensiveEmployeeLogicObject&quot;), EmployeeLogic)\n    \n    If (temp Is Nothing) Then\n        &#39; If it does not yet exist in the Cache, add it.\n        Cache.Insert(&quot;ExpensiveEmployeeLogicObject&quot;, cachedLogic)\n    End If\n    \n    &#39; Cancel the event, so that the object will \n    &#39; not be Disposed if it implements IDisposable.\n    e.Cancel = True\nEnd Sub &#39; ReturnEmployeeLogic\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;          \n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource \n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;          \n          selectmethod=&quot;GetCreateTime&quot;          \n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          onobjectcreating=&quot;GetEmployeeLogic&quot;\n          onobjectdisposing=&quot;ReturnEmployeeLogic&quot; &gt;\n        &lt;/asp:objectdatasource&gt;        \n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides the example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the <code>EmployeeLogic</code> class, which is a stateful class that encapsulates business logic. For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    public EmployeeLogic () : this(DateTime.Now) {        \n    }\n    \n    public EmployeeLogic (DateTime creationTime) { \n        _creationTime = creationTime;\n    }\n\n    private DateTime _creationTime;\n    \n    // Returns a collection of NorthwindEmployee objects.\n    public ICollection GetCreateTime () {\n      ArrayList al = new ArrayList();\n      \n      // Returns creation time for this example.      \n      al.Add(&quot;The business object that you are using was created at &quot; + _creationTime);\n      \n      return al;\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#2\">Imports System\nImports System.Collections\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n\n  Public Class EmployeeLogic\n    \n    \n    Public Sub New() \n        MyClass.New(DateTime.Now)\n    \n    End Sub &#39;New\n    \n    \n    Public Sub New(ByVal creationTime As DateTime) \n        _creationTime = creationTime\n    \n    End Sub &#39;New\n    \n    Private _creationTime As DateTime\n    \n    \n    &#39; Returns a collection of NorthwindEmployee objects.\n    Public Function GetCreateTime() As ICollection \n        Dim al As New ArrayList()\n        \n        &#39; Returns creation time for this example.      \n        al.Add(&quot;The business object that you are using was created at &quot; + _creationTime)\n        \n        Return al\n    \n    End Function &#39;GetCreateTime\n  End Class &#39;EmployeeLogic\nEnd Namespace &#39; Samples.AspNet.VB\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_ObjectDisposing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectDisposing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before the object that is identified by the <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.TypeName*</span> property is discarded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ObjectDisposing event is always raised before the instance of the business object is discarded. If the business object implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface, the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method is called after this event is raised.  </p>\n<p> Handle the ObjectDisposing event to call other methods on the object, set properties, or perform clean-up that is specific to the object before the object is destroyed. A reference to the object is accessed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceeventargs#System_Web_UI_WebControls_ObjectDataSourceEventArgs_ObjectInstance_\" data-linktype=\"relative-path\">ObjectInstance</a> property, which is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceeventargs\" data-linktype=\"relative-path\">ObjectDataSourceEventArgs</a> object.  </p>\n<p> When you use a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a LINQ to SQL class, you must cancel the disposing of the data-context class in an handler for the ObjectDisposing event. This step is necessary because LINQ to SQL supports deferred execution, whereas the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control tries to dispose the data context after the Select operation.  </p>\n<p> For more information about how to handle events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> object with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display information. The second code example provides the middle-tier business object that is used in the first code example.  </p>\n<p> The following code example demonstrates how to use an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a business object and a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to display information. You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_ObjectCreating\" data-linktype=\"relative-path\">ObjectCreating</a> event to check the cache for an object first, and only create an instance of it, if one is not already cached. Then, handle the ObjectDisposing event to cache the business object for future use, instead of destroying it. In this code example, the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel\" data-linktype=\"relative-path\">System.ComponentModel.CancelEventArgs.Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcedisposingeventargs\" data-linktype=\"relative-path\">ObjectDataSourceDisposingEventArgs</a> object is set to <code>true</code> to direct the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> to not call the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method on the object.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#1\">&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n// Instead of creating and destroying the business object each time, the \n// business object is cached in the ASP.NET Cache.\nprivate void GetEmployeeLogic(object sender, ObjectDataSourceEventArgs e)\n{\n    // First check to see if an instance of this object already exists in the Cache.\n    EmployeeLogic cachedLogic;\n    \n    cachedLogic = Cache[&quot;ExpensiveEmployeeLogicObject&quot;] as EmployeeLogic;\n    \n    if (null == cachedLogic) {\n            cachedLogic = new EmployeeLogic();            \n    }\n        \n    e.ObjectInstance = cachedLogic;     \n}\n\nprivate void ReturnEmployeeLogic(object sender, ObjectDataSourceDisposingEventArgs e)\n{    \n    // Get the instance of the business object that the ObjectDataSource is working with.\n    EmployeeLogic cachedLogic = e.ObjectInstance as EmployeeLogic;        \n    \n    // Test to determine whether the object already exists in the cache.\n    EmployeeLogic temp = Cache[&quot;ExpensiveEmployeeLogicObject&quot;] as EmployeeLogic;\n    \n    if (null == temp) {\n        // If it does not yet exist in the Cache, add it.\n        Cache.Insert(&quot;ExpensiveEmployeeLogicObject&quot;, cachedLogic);\n    }\n    \n    // Cancel the event, so that the object will \n    // not be Disposed if it implements IDisposable.\n    e.Cancel = true;\n}\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - C# Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;          \n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource \n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;          \n          selectmethod=&quot;GetCreateTime&quot;          \n          typename=&quot;Samples.AspNet.CS.EmployeeLogic&quot;\n          onobjectcreating=&quot;GetEmployeeLogic&quot;\n          onobjectdisposing=&quot;ReturnEmployeeLogic&quot; &gt;\n        &lt;/asp:objectdatasource&gt;        \n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#1\">&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Page language=&quot;vb&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n&#39; Instead of creating and destroying the business object each time, the \n&#39; business object is cached in the ASP.NET Cache.\nSub GetEmployeeLogic(sender As Object, e As ObjectDataSourceEventArgs)\n\n    &#39; First check to see if an instance of this object already exists in the Cache.\n    Dim cachedLogic As EmployeeLogic \n    \n    cachedLogic = CType( Cache(&quot;ExpensiveEmployeeLogicObject&quot;), EmployeeLogic)\n    \n    If (cachedLogic Is Nothing) Then\n            cachedLogic = New EmployeeLogic            \n    End If\n        \n    e.ObjectInstance = cachedLogic\n    \nEnd Sub &#39; GetEmployeeLogic\n\nSub ReturnEmployeeLogic(sender As Object, e As ObjectDataSourceDisposingEventArgs)\n    \n    &#39; Get the instance of the business object that the ObjectDataSource is working with.\n    Dim cachedLogic  As EmployeeLogic  \n    cachedLogic = CType( e.ObjectInstance, EmployeeLogic)\n    \n    &#39; Test to determine whether the object already exists in the cache.\n    Dim temp As EmployeeLogic \n    temp = CType( Cache(&quot;ExpensiveEmployeeLogicObject&quot;), EmployeeLogic)\n    \n    If (temp Is Nothing) Then\n        &#39; If it does not yet exist in the Cache, add it.\n        Cache.Insert(&quot;ExpensiveEmployeeLogicObject&quot;, cachedLogic)\n    End If\n    \n    &#39; Cancel the event, so that the object will \n    &#39; not be Disposed if it implements IDisposable.\n    e.Cancel = True\nEnd Sub &#39; ReturnEmployeeLogic\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;ObjectDataSource - VB Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:gridview\n          id=&quot;GridView1&quot;\n          runat=&quot;server&quot;          \n          datasourceid=&quot;ObjectDataSource1&quot;&gt;\n        &lt;/asp:gridview&gt;\n\n        &lt;asp:objectdatasource \n          id=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;          \n          selectmethod=&quot;GetCreateTime&quot;          \n          typename=&quot;Samples.AspNet.VB.EmployeeLogic&quot;\n          onobjectcreating=&quot;GetEmployeeLogic&quot;\n          onobjectdisposing=&quot;ReturnEmployeeLogic&quot; &gt;\n        &lt;/asp:objectdatasource&gt;        \n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following code example provides the example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the <code>EmployeeLogic</code> class, which is a stateful class that encapsulates business logic. For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#2\">namespace Samples.AspNet.CS {\n\nusing System;\nusing System.Collections;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n  //\n  // EmployeeLogic is a stateless business object that encapsulates\n  // the operations you can perform on a NorthwindEmployee object.\n  //\n  public class EmployeeLogic {\n\n    public EmployeeLogic () : this(DateTime.Now) {        \n    }\n    \n    public EmployeeLogic (DateTime creationTime) { \n        _creationTime = creationTime;\n    }\n\n    private DateTime _creationTime;\n    \n    // Returns a collection of NorthwindEmployee objects.\n    public ICollection GetCreateTime () {\n      ArrayList al = new ArrayList();\n      \n      // Returns creation time for this example.      \n      al.Add(&quot;The business object that you are using was created at &quot; + _creationTime);\n      \n      return al;\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_16#2\">Imports System\nImports System.Collections\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace Samples.AspNet.VB\n\n  Public Class EmployeeLogic\n    \n    \n    Public Sub New() \n        MyClass.New(DateTime.Now)\n    \n    End Sub &#39;New\n    \n    \n    Public Sub New(ByVal creationTime As DateTime) \n        _creationTime = creationTime\n    \n    End Sub &#39;New\n    \n    Private _creationTime As DateTime\n    \n    \n    &#39; Returns a collection of NorthwindEmployee objects.\n    Public Function GetCreateTime() As ICollection \n        Dim al As New ArrayList()\n        \n        &#39; Returns creation time for this example.      \n        al.Add(&quot;The business object that you are using was created at &quot; + _creationTime)\n        \n        Return al\n    \n    End Function &#39;GetCreateTime\n  End Class &#39;EmployeeLogic\nEnd Namespace &#39; Samples.AspNet.VB\n</code></pre><p> The following example shows how to handle the ObjectDisposing event when using an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control with a LINQ to SQL class.  </p>\n<pre><code class=\"lang-vb#\">Public Sub ExampleObjectDisposing(ByVal sender As Object, _   \n        ByVal e As ObjectDataSourceDisposingEventArgs)  \n    e.Cancel = True  \nEnd Sub\n</code></pre><pre><code class=\"lang-c#\">public void ExampleObjectDisposing(object sender,   \n        ObjectDataSourceDisposingEventArgs e)  \n{  \n    e.Cancel = true;  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Selected\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Selected</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Select*</span> operation has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Selected event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> operation has completed. The return value, output parameters, and exception handling properties are available from the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> object that is associated with the event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.  </p>\n<p> The first example shows a Web page that contains two <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls, a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The first <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control are used to retrieve and display employee names from the database. The second <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#1\">    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          UpdateMethod=&quot;UpdateEmployeeAddress&quot;\n          OnUpdating=&quot;EmployeeUpdating&quot;\n          OnSelected=&quot;EmployeeSelected&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateEditButton=&quot;true&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n       \n    &lt;/form&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#1\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          UpdateMethod=&quot;UpdateEmployeeAddress&quot;\n          OnUpdating=&quot;EmployeeUpdating&quot;\n          OnSelected=&quot;EmployeeSelected&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateEditButton=&quot;true&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n       \n    &lt;/form&gt;\n</code></pre><p> The second example shows handlers for the Selected and <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> events. The Selected event handler serializes the object that contains data that was retrieved from the Employee table. The serialized object is stored in view state. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Updating\" data-linktype=\"relative-path\">Updating</a> event handler deserializes the object in view state that contains the original data for the data record that is being updated. The object that contains the original data is passed as a parameter to the Update method. The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#2\">    Public Sub EmployeeUpdating(ByVal source As Object, ByVal e As ObjectDataSourceMethodEventArgs)\n        Dim dcs As New DataContractSerializer(GetType(Employee))\n        Dim xmlData As String\n        Dim reader As XmlReader\n        Dim originalEmployee As Employee\n\n        xmlData = ViewState(&quot;OriginalEmployee&quot;).ToString()\n        reader = XmlReader.Create(New StringReader(xmlData))\n        originalEmployee = CType(dcs.ReadObject(reader), Employee)\n        reader.Close()\n\n        e.InputParameters.Add(&quot;originalEmployee&quot;, originalEmployee)\n    End Sub\n\n    Public Sub EmployeeSelected(ByVal source As Object, ByVal e As ObjectDataSourceStatusEventArgs)\n        If e.ReturnValue IsNot Nothing Then\n            Dim dcs As New DataContractSerializer(GetType(Employee))\n            Dim sb As New StringBuilder()\n            Dim writer As XmlWriter\n            writer = XmlWriter.Create(sb)\n            dcs.WriteObject(writer, e.ReturnValue)\n            writer.Close()\n\n            ViewState(&quot;OriginalEmployee&quot;) = sb.ToString()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#2\">    public void EmployeeUpdating(object source, ObjectDataSourceMethodEventArgs e)\n    {\n        DataContractSerializer dcs = new DataContractSerializer(typeof(Employee));\n\n        String xmlData = ViewState[&quot;OriginalEmployee&quot;].ToString();\n        XmlReader reader = XmlReader.Create(new StringReader(xmlData));\n        Employee originalEmployee = (Employee)dcs.ReadObject(reader);\n        reader.Close();\n\n        e.InputParameters.Add(&quot;originalEmployee&quot;, originalEmployee);\n    }\n\n    public void EmployeeSelected(object source, ObjectDataSourceStatusEventArgs e)\n    {\n        if (e.ReturnValue != null)\n        {\n            DataContractSerializer dcs = new DataContractSerializer(typeof(Employee));\n            StringBuilder sb = new StringBuilder();\n            XmlWriter writer = XmlWriter.Create(sb);\n            dcs.WriteObject(writer, e.ReturnValue);\n            writer.Close();\n\n            ViewState[&quot;OriginalEmployee&quot;] = sb.ToString();\n        }\n    }\n</code></pre><p> The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query and update the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and Employees table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">Public Class EmployeeLogic\n    Public Shared Function GetFullNamesAndIDs() As Array\n        Dim ndc As New NorthwindDataContext()\n\n        Dim employeeQuery = _\n            From e In ndc.Employees _\n            Order By e.LastName _\n            Select FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID\n\n        Return employeeQuery.ToArray()\n    End Function\n\n    Public Shared Function GetEmployee(ByVal empID As Integer) As Employee\n\n        If (empID &lt; 0) Then\n            Return Nothing\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim employeeQuery = _\n                From e In ndc.Employees _\n                Where e.EmployeeID = empID _\n                Select e\n\n            Return employeeQuery.Single()\n        End If\n    End Function\n\n    Public Shared Sub UpdateEmployeeAddress(ByVal originalEmployee As Employee, ByVal address As String, ByVal city As String, ByVal postalcode As String)\n\n        Dim ndc As New NorthwindDataContext()\n        ndc.Employees.Attach(originalEmployee, False)\n        originalEmployee.Address = address\n        originalEmployee.City = city\n        originalEmployee.PostalCode = postalcode\n        ndc.SubmitChanges()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">    public class EmployeeLogic\n    {\n        public static Array GetFullNamesAndIDs()\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n\n            var employeeQuery =\n                from e in ndc.Employees\n                orderby e.LastName\n                select new { FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID };\n\n            return employeeQuery.ToArray();\n        }\n\n        public static Employee GetEmployee(int empID)\n        {\n            if (empID &lt; 0)\n            {\n                return null;\n            }\n            else\n            {\n                NorthwindDataContext ndc = new NorthwindDataContext();\n                var employeeQuery =\n                    from e in ndc.Employees\n                    where e.EmployeeID == empID\n                    select e;\n\n                return employeeQuery.Single();\n            }\n        }\n     \n        public static void UpdateEmployeeAddress(Employee originalEmployee, string address, string city, string postalcode)\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            ndc.Employees.Attach(originalEmployee, false);\n            originalEmployee.Address = address;\n            originalEmployee.City = city;\n            originalEmployee.PostalCode = postalcode;\n            ndc.SubmitChanges();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Selecting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Selecting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before a <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Select*</span> operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Selecting event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control performs the data retrieval operation. The parameters are available as an <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> collection that is accessed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> property, which is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventArgs</a> object.  </p>\n<p> This event can be fired twice for a single call to the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Select_\" data-linktype=\"relative-path\">Select</a> method, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_SelectCountMethod_\" data-linktype=\"relative-path\">SelectCountMethod</a> property is set. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceselectingeventargs#System_Web_UI_WebControls_ObjectDataSourceSelectingEventArgs_ExecutingSelectCount_\" data-linktype=\"relative-path\">ExecutingSelectCount</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceselectingeventargs\" data-linktype=\"relative-path\">ObjectDataSourceSelectingEventArgs</a> object is used to determine if select was called to retrieve data or retrieve the count.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Updated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Updated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Update*</span> operation has completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Updated event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Update_\" data-linktype=\"relative-path\">Update</a> operation has completed. The return value, output parameters, and exception handling properties are available from the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcestatuseventargs\" data-linktype=\"relative-path\">ObjectDataSourceStatusEventArgs</a> object that is associated with the event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_ObjectDataSource_Updating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Updating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before an <span class=\"xref\">stem.Web.UI.WebControls.ObjectDataSource.Update*</span> operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the Updating event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control performs the update operation. The parameters are available as an <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> collection that is accessed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs#System_Web_UI_WebControls_ObjectDataSourceMethodEventArgs_InputParameters_\" data-linktype=\"relative-path\">InputParameters</a> property, which is exposed by the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourcemethodeventargs\" data-linktype=\"relative-path\">ObjectDataSourceMethodEventArgs</a> object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.  </p>\n<p> The first example shows a Web page that contains two <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> controls, a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control, and a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The first <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control are used to retrieve and display employee names from the database. The second <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#1\">    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          UpdateMethod=&quot;UpdateEmployeeAddress&quot;\n          OnUpdating=&quot;EmployeeUpdating&quot;\n          OnSelected=&quot;EmployeeSelected&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateEditButton=&quot;true&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n       \n    &lt;/form&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#1\">    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    \n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource1&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetFullNamesAndIDs&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; /&gt;\n\n        &lt;p&gt;\n        &lt;asp:dropdownlist\n          ID=&quot;DropDownList1&quot;\n          runat=&quot;server&quot; \n          DataSourceID=&quot;ObjectDataSource1&quot;\n          DataTextField=&quot;FullName&quot;\n          DataValueField=&quot;EmployeeID&quot; \n          AutoPostBack=&quot;True&quot; \n          AppendDataBoundItems=&quot;true&quot;&gt;\n            &lt;asp:ListItem Text=&quot;Select One&quot; Value=&quot;&quot;&gt;&lt;/asp:ListItem&gt;\n        &lt;/asp:dropdownlist&gt;\n        &lt;/p&gt;\n\n        &lt;asp:objectdatasource\n          ID=&quot;ObjectDataSource2&quot;\n          runat=&quot;server&quot;\n          SelectMethod=&quot;GetEmployee&quot;\n          UpdateMethod=&quot;UpdateEmployeeAddress&quot;\n          OnUpdating=&quot;EmployeeUpdating&quot;\n          OnSelected=&quot;EmployeeSelected&quot;\n          TypeName=&quot;Samples.AspNet.CS.EmployeeLogic&quot; &gt;\n          &lt;SelectParameters&gt;\n            &lt;asp:ControlParameter ControlID=&quot;DropDownList1&quot; DefaultValue=&quot;-1&quot; Name=&quot;empID&quot; /&gt;\n          &lt;/SelectParameters&gt;\n        &lt;/asp:objectdatasource&gt;\n        \n        &lt;asp:DetailsView\n            ID=&quot;DetailsView1&quot;\n            runat=&quot;server&quot;\n            DataSourceID=&quot;ObjectDataSource2&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateEditButton=&quot;true&quot;&gt;  \n            &lt;Fields&gt;\n                &lt;asp:BoundField HeaderText=&quot;Address&quot; DataField=&quot;Address&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;City&quot; DataField=&quot;City&quot; /&gt;\n                &lt;asp:BoundField HeaderText=&quot;Postal Code&quot; DataField=&quot;PostalCode&quot; /&gt;\n            &lt;/Fields&gt;  \n        &lt;/asp:DetailsView&gt;\n       \n    &lt;/form&gt;\n</code></pre><p> The second example shows handlers for the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"relative-path\">Selected</a> and Updating events. The <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource#System_Web_UI_WebControls_ObjectDataSource_Selected\" data-linktype=\"relative-path\">Selected</a> event handler serializes the object that contains data that was retrieved from the Employee table. The serialized object is stored in view state. The Updating event handler deserializes the object in view state that contains the original data for the data record that is being updated. The object that contains the original data is passed as a parameter to the Update method. The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#2\">    Public Sub EmployeeUpdating(ByVal source As Object, ByVal e As ObjectDataSourceMethodEventArgs)\n        Dim dcs As New DataContractSerializer(GetType(Employee))\n        Dim xmlData As String\n        Dim reader As XmlReader\n        Dim originalEmployee As Employee\n\n        xmlData = ViewState(&quot;OriginalEmployee&quot;).ToString()\n        reader = XmlReader.Create(New StringReader(xmlData))\n        originalEmployee = CType(dcs.ReadObject(reader), Employee)\n        reader.Close()\n\n        e.InputParameters.Add(&quot;originalEmployee&quot;, originalEmployee)\n    End Sub\n\n    Public Sub EmployeeSelected(ByVal source As Object, ByVal e As ObjectDataSourceStatusEventArgs)\n        If e.ReturnValue IsNot Nothing Then\n            Dim dcs As New DataContractSerializer(GetType(Employee))\n            Dim sb As New StringBuilder()\n            Dim writer As XmlWriter\n            writer = XmlWriter.Create(sb)\n            dcs.WriteObject(writer, e.ReturnValue)\n            writer.Close()\n\n            ViewState(&quot;OriginalEmployee&quot;) = sb.ToString()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#2\">    public void EmployeeUpdating(object source, ObjectDataSourceMethodEventArgs e)\n    {\n        DataContractSerializer dcs = new DataContractSerializer(typeof(Employee));\n\n        String xmlData = ViewState[&quot;OriginalEmployee&quot;].ToString();\n        XmlReader reader = XmlReader.Create(new StringReader(xmlData));\n        Employee originalEmployee = (Employee)dcs.ReadObject(reader);\n        reader.Close();\n\n        e.InputParameters.Add(&quot;originalEmployee&quot;, originalEmployee);\n    }\n\n    public void EmployeeSelected(object source, ObjectDataSourceStatusEventArgs e)\n    {\n        if (e.ReturnValue != null)\n        {\n            DataContractSerializer dcs = new DataContractSerializer(typeof(Employee));\n            StringBuilder sb = new StringBuilder();\n            XmlWriter writer = XmlWriter.Create(sb);\n            dcs.WriteObject(writer, e.ReturnValue);\n            writer.Close();\n\n            ViewState[&quot;OriginalEmployee&quot;] = sb.ToString();\n        }\n    }\n</code></pre><p> The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query and update the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and Employees table. For more information, see <a href=\"http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081\" data-linktype=\"external\">How to: Create LINQ to SQL Classes in a Web Project</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">Public Class EmployeeLogic\n    Public Shared Function GetFullNamesAndIDs() As Array\n        Dim ndc As New NorthwindDataContext()\n\n        Dim employeeQuery = _\n            From e In ndc.Employees _\n            Order By e.LastName _\n            Select FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID\n\n        Return employeeQuery.ToArray()\n    End Function\n\n    Public Shared Function GetEmployee(ByVal empID As Integer) As Employee\n\n        If (empID &lt; 0) Then\n            Return Nothing\n        Else\n            Dim ndc As New NorthwindDataContext()\n            Dim employeeQuery = _\n                From e In ndc.Employees _\n                Where e.EmployeeID = empID _\n                Select e\n\n            Return employeeQuery.Single()\n        End If\n    End Function\n\n    Public Shared Sub UpdateEmployeeAddress(ByVal originalEmployee As Employee, ByVal address As String, ByVal city As String, ByVal postalcode As String)\n\n        Dim ndc As New NorthwindDataContext()\n        ndc.Employees.Attach(originalEmployee, False)\n        originalEmployee.Address = address\n        originalEmployee.City = city\n        originalEmployee.PostalCode = postalcode\n        ndc.SubmitChanges()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.ObjectDataSource_18#5\">    public class EmployeeLogic\n    {\n        public static Array GetFullNamesAndIDs()\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n\n            var employeeQuery =\n                from e in ndc.Employees\n                orderby e.LastName\n                select new { FullName = e.FirstName + &quot; &quot; + e.LastName, EmployeeID = e.EmployeeID };\n\n            return employeeQuery.ToArray();\n        }\n\n        public static Employee GetEmployee(int empID)\n        {\n            if (empID &lt; 0)\n            {\n                return null;\n            }\n            else\n            {\n                NorthwindDataContext ndc = new NorthwindDataContext();\n                var employeeQuery =\n                    from e in ndc.Employees\n                    where e.EmployeeID == empID\n                    select e;\n\n                return employeeQuery.Single();\n            }\n        }\n     \n        public static void UpdateEmployeeAddress(Employee originalEmployee, string address, string city, string postalcode)\n        {\n            NorthwindDataContext ndc = new NorthwindDataContext();\n            ndc.Employees.Attach(originalEmployee, false);\n            originalEmployee.Address = address;\n            originalEmployee.City = city;\n            originalEmployee.PostalCode = postalcode;\n            ndc.SubmitChanges();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.ObjectDataSource.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.ObjectDataSource.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.CacheDuration\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.ConflictDetection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Delete\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Deleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Deleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Deleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.DeleteMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.DeleteParameters\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Deleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Deleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Deleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.EnableCaching\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.EnablePaging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.FilterExpression\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Filtering\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Filtering\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Filtering\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.FilterParameters\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.GetView\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.GetViewNames\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Insert\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Inserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Inserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Inserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Inserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Inserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Inserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.InsertMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.InsertParameters\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.ObjectCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_ObjectCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_ObjectCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.ObjectCreating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_ObjectCreating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_ObjectCreating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_ObjectDisposing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_ObjectDisposing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.OnInit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.ParsingCulture\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Select\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Selected\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Selected\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Selected\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Selecting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Selecting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Selecting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.SelectMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.SelectParameters\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.SortParameterName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.TrackViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.TypeName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Update\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Updated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Updated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Updated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.UpdateMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.UpdateParameters\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.Updating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.add_Updating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.ObjectDataSource.remove_Updating\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"044119d5-25f9-63a9-0f50-8b3ee8f2560d\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\ObjectDataSource.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a business object that provides data to data-bound controls in multitier Web application architectures.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.ObjectDataSource\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.ObjectDataSource.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.ObjectDataSource.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.ObjectDataSource","System.Web.UI.WebControls.ObjectDataSource..ctor","System.Web.UI.WebControls.ObjectDataSource.CacheDuration","System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy","System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency","System.Web.UI.WebControls.ObjectDataSource.ConflictDetection","System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull","System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName","System.Web.UI.WebControls.ObjectDataSource.Delete","System.Web.UI.WebControls.ObjectDataSource.Deleted","System.Web.UI.WebControls.ObjectDataSource.add_Deleted","System.Web.UI.WebControls.ObjectDataSource.remove_Deleted","System.Web.UI.WebControls.ObjectDataSource.DeleteMethod","System.Web.UI.WebControls.ObjectDataSource.DeleteParameters","System.Web.UI.WebControls.ObjectDataSource.Deleting","System.Web.UI.WebControls.ObjectDataSource.add_Deleting","System.Web.UI.WebControls.ObjectDataSource.remove_Deleting","System.Web.UI.WebControls.ObjectDataSource.EnableCaching","System.Web.UI.WebControls.ObjectDataSource.EnablePaging","System.Web.UI.WebControls.ObjectDataSource.FilterExpression","System.Web.UI.WebControls.ObjectDataSource.Filtering","System.Web.UI.WebControls.ObjectDataSource.add_Filtering","System.Web.UI.WebControls.ObjectDataSource.remove_Filtering","System.Web.UI.WebControls.ObjectDataSource.FilterParameters","System.Web.UI.WebControls.ObjectDataSource.GetView","System.Web.UI.WebControls.ObjectDataSource.GetViewNames","System.Web.UI.WebControls.ObjectDataSource.Insert","System.Web.UI.WebControls.ObjectDataSource.Inserted","System.Web.UI.WebControls.ObjectDataSource.add_Inserted","System.Web.UI.WebControls.ObjectDataSource.remove_Inserted","System.Web.UI.WebControls.ObjectDataSource.Inserting","System.Web.UI.WebControls.ObjectDataSource.add_Inserting","System.Web.UI.WebControls.ObjectDataSource.remove_Inserting","System.Web.UI.WebControls.ObjectDataSource.InsertMethod","System.Web.UI.WebControls.ObjectDataSource.InsertParameters","System.Web.UI.WebControls.ObjectDataSource.LoadViewState","System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName","System.Web.UI.WebControls.ObjectDataSource.ObjectCreated","System.Web.UI.WebControls.ObjectDataSource.add_ObjectCreated","System.Web.UI.WebControls.ObjectDataSource.remove_ObjectCreated","System.Web.UI.WebControls.ObjectDataSource.ObjectCreating","System.Web.UI.WebControls.ObjectDataSource.add_ObjectCreating","System.Web.UI.WebControls.ObjectDataSource.remove_ObjectCreating","System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing","System.Web.UI.WebControls.ObjectDataSource.add_ObjectDisposing","System.Web.UI.WebControls.ObjectDataSource.remove_ObjectDisposing","System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString","System.Web.UI.WebControls.ObjectDataSource.OnInit","System.Web.UI.WebControls.ObjectDataSource.ParsingCulture","System.Web.UI.WebControls.ObjectDataSource.SaveViewState","System.Web.UI.WebControls.ObjectDataSource.Select","System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod","System.Web.UI.WebControls.ObjectDataSource.Selected","System.Web.UI.WebControls.ObjectDataSource.add_Selected","System.Web.UI.WebControls.ObjectDataSource.remove_Selected","System.Web.UI.WebControls.ObjectDataSource.Selecting","System.Web.UI.WebControls.ObjectDataSource.add_Selecting","System.Web.UI.WebControls.ObjectDataSource.remove_Selecting","System.Web.UI.WebControls.ObjectDataSource.SelectMethod","System.Web.UI.WebControls.ObjectDataSource.SelectParameters","System.Web.UI.WebControls.ObjectDataSource.SortParameterName","System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency","System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName","System.Web.UI.WebControls.ObjectDataSource.TrackViewState","System.Web.UI.WebControls.ObjectDataSource.TypeName","System.Web.UI.WebControls.ObjectDataSource.Update","System.Web.UI.WebControls.ObjectDataSource.Updated","System.Web.UI.WebControls.ObjectDataSource.add_Updated","System.Web.UI.WebControls.ObjectDataSource.remove_Updated","System.Web.UI.WebControls.ObjectDataSource.UpdateMethod","System.Web.UI.WebControls.ObjectDataSource.UpdateParameters","System.Web.UI.WebControls.ObjectDataSource.Updating","System.Web.UI.WebControls.ObjectDataSource.add_Updating","System.Web.UI.WebControls.ObjectDataSource.remove_Updating"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.ObjectDataSource","System::Web::UI::WebControls::ObjectDataSource","System.Web.UI.WebControls.ObjectDataSource.#ctor","System::Web::UI::WebControls::ObjectDataSource::#ctor","System.Web.UI.WebControls.ObjectDataSource.CacheDuration","System::Web::UI::WebControls::ObjectDataSource::CacheDuration","System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy","System::Web::UI::WebControls::ObjectDataSource::CacheExpirationPolicy","System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency","System::Web::UI::WebControls::ObjectDataSource::CacheKeyDependency","System.Web.UI.WebControls.ObjectDataSource.ConflictDetection","System::Web::UI::WebControls::ObjectDataSource::ConflictDetection","System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull","System::Web::UI::WebControls::ObjectDataSource::ConvertNullToDBNull","System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName","System::Web::UI::WebControls::ObjectDataSource::DataObjectTypeName","System.Web.UI.WebControls.ObjectDataSource.Delete","System::Web::UI::WebControls::ObjectDataSource::Delete","System.Web.UI.WebControls.ObjectDataSource.Deleted","System::Web::UI::WebControls::ObjectDataSource::Deleted","System.Web.UI.WebControls.ObjectDataSource.DeleteMethod","System::Web::UI::WebControls::ObjectDataSource::DeleteMethod","System.Web.UI.WebControls.ObjectDataSource.DeleteParameters","System::Web::UI::WebControls::ObjectDataSource::DeleteParameters","System.Web.UI.WebControls.ObjectDataSource.Deleting","System::Web::UI::WebControls::ObjectDataSource::Deleting","System.Web.UI.WebControls.ObjectDataSource.EnableCaching","System::Web::UI::WebControls::ObjectDataSource::EnableCaching","System.Web.UI.WebControls.ObjectDataSource.EnablePaging","System::Web::UI::WebControls::ObjectDataSource::EnablePaging","System.Web.UI.WebControls.ObjectDataSource.FilterExpression","System::Web::UI::WebControls::ObjectDataSource::FilterExpression","System.Web.UI.WebControls.ObjectDataSource.Filtering","System::Web::UI::WebControls::ObjectDataSource::Filtering","System.Web.UI.WebControls.ObjectDataSource.FilterParameters","System::Web::UI::WebControls::ObjectDataSource::FilterParameters","System.Web.UI.WebControls.ObjectDataSource.GetView","System::Web::UI::WebControls::ObjectDataSource::GetView","System.Web.UI.WebControls.ObjectDataSource.GetViewNames","System::Web::UI::WebControls::ObjectDataSource::GetViewNames","System.Web.UI.WebControls.ObjectDataSource.Insert","System::Web::UI::WebControls::ObjectDataSource::Insert","System.Web.UI.WebControls.ObjectDataSource.Inserted","System::Web::UI::WebControls::ObjectDataSource::Inserted","System.Web.UI.WebControls.ObjectDataSource.Inserting","System::Web::UI::WebControls::ObjectDataSource::Inserting","System.Web.UI.WebControls.ObjectDataSource.InsertMethod","System::Web::UI::WebControls::ObjectDataSource::InsertMethod","System.Web.UI.WebControls.ObjectDataSource.InsertParameters","System::Web::UI::WebControls::ObjectDataSource::InsertParameters","System.Web.UI.WebControls.ObjectDataSource.LoadViewState","System::Web::UI::WebControls::ObjectDataSource::LoadViewState","System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName","System::Web::UI::WebControls::ObjectDataSource::MaximumRowsParameterName","System.Web.UI.WebControls.ObjectDataSource.ObjectCreated","System::Web::UI::WebControls::ObjectDataSource::ObjectCreated","System.Web.UI.WebControls.ObjectDataSource.ObjectCreating","System::Web::UI::WebControls::ObjectDataSource::ObjectCreating","System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing","System::Web::UI::WebControls::ObjectDataSource::ObjectDisposing","System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString","System::Web::UI::WebControls::ObjectDataSource::OldValuesParameterFormatString","System.Web.UI.WebControls.ObjectDataSource.OnInit","System::Web::UI::WebControls::ObjectDataSource::OnInit","System.Web.UI.WebControls.ObjectDataSource.ParsingCulture","System::Web::UI::WebControls::ObjectDataSource::ParsingCulture","System.Web.UI.WebControls.ObjectDataSource.SaveViewState","System::Web::UI::WebControls::ObjectDataSource::SaveViewState","System.Web.UI.WebControls.ObjectDataSource.Select","System::Web::UI::WebControls::ObjectDataSource::Select","System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod","System::Web::UI::WebControls::ObjectDataSource::SelectCountMethod","System.Web.UI.WebControls.ObjectDataSource.Selected","System::Web::UI::WebControls::ObjectDataSource::Selected","System.Web.UI.WebControls.ObjectDataSource.Selecting","System::Web::UI::WebControls::ObjectDataSource::Selecting","System.Web.UI.WebControls.ObjectDataSource.SelectMethod","System::Web::UI::WebControls::ObjectDataSource::SelectMethod","System.Web.UI.WebControls.ObjectDataSource.SelectParameters","System::Web::UI::WebControls::ObjectDataSource::SelectParameters","System.Web.UI.WebControls.ObjectDataSource.SortParameterName","System::Web::UI::WebControls::ObjectDataSource::SortParameterName","System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency","System::Web::UI::WebControls::ObjectDataSource::SqlCacheDependency","System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName","System::Web::UI::WebControls::ObjectDataSource::StartRowIndexParameterName","System.Web.UI.WebControls.ObjectDataSource.TrackViewState","System::Web::UI::WebControls::ObjectDataSource::TrackViewState","System.Web.UI.WebControls.ObjectDataSource.TypeName","System::Web::UI::WebControls::ObjectDataSource::TypeName","System.Web.UI.WebControls.ObjectDataSource.Update","System::Web::UI::WebControls::ObjectDataSource::Update","System.Web.UI.WebControls.ObjectDataSource.Updated","System::Web::UI::WebControls::ObjectDataSource::Updated","System.Web.UI.WebControls.ObjectDataSource.UpdateMethod","System::Web::UI::WebControls::ObjectDataSource::UpdateMethod","System.Web.UI.WebControls.ObjectDataSource.UpdateParameters","System::Web::UI::WebControls::ObjectDataSource::UpdateParameters","System.Web.UI.WebControls.ObjectDataSource.Updating","System::Web::UI::WebControls::ObjectDataSource::Updating"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"044119d5-25f9-63a9-0f50-8b3ee8f2560d","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\ObjectDataSource.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/ObjectDataSource.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ObjectDataSource class | Microsoft Docs","_op_ogTitle":"ObjectDataSource class","description":"Represents a business object that provides data to data-bound controls in multitier Web application architectures.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.ObjectDataSource","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.objectdatasource","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.objectdatasource","fileRelativePath":"System.Web.UI.WebControls.ObjectDataSource.html"},"themesRelativePathToOutputRoot":"_themes/"}