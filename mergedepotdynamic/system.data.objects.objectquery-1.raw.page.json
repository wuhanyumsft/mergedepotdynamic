{"content":"    \r\n    <h1 id=\"System_Data_Objects_ObjectQuery_1\">\r\n      <span class=\"lang-csharp\">ObjectQuery&lt;T&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a typed query against a conceptual model in a given object context.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The entity type of the query.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery\" data-linktype=\"relative-path\">System.Data.Objects.ObjectQuery</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ObjectQuery&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_CommandText\" data-linktype=\"relative-path\">CommandText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_EnablePlanCaching\" data-linktype=\"relative-path\">EnablePlanCaching</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_GetResultType\" data-linktype=\"relative-path\">GetResultType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_MergeOption\" data-linktype=\"relative-path\">MergeOption</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_Parameters\" data-linktype=\"relative-path\">Parameters</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_System_ComponentModel_IListSource_ContainsListCollection\" data-linktype=\"relative-path\">IListSource.ContainsListCollection</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_System_ComponentModel_IListSource_GetList\" data-linktype=\"relative-path\">IListSource.GetList()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_System_Linq_IQueryable_ElementType\" data-linktype=\"relative-path\">IQueryable.ElementType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_System_Linq_IQueryable_Expression\" data-linktype=\"relative-path\">IQueryable.Expression</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_System_Linq_IQueryable_Provider\" data-linktype=\"relative-path\">IQueryable.Provider</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_ToTraceString\" data-linktype=\"relative-path\">ToTraceString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ObjectQuery(T) generic class represents a query that returns a collection of zero or more objects of a specific type. The <a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a> must be defined before an object query can be executed. This context provides the connection and metadata information that is required to compose and execute the query. An object query is executed in the following scenarios:  </p>\n<ul>\n<li><p>When it is acted upon, such as during a <code>foreach</code> (C#) or <code>For Each</code> (Visual Basic) enumeration.  </p>\n</li>\n<li><p>When it is assigned to fill a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> collection.  </p>\n</li>\n<li><p>When the <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_Execute_\" data-linktype=\"relative-path\">Execute</a> method is explicitly called.  </p>\n<p>The query itself can be created by using an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class. In every case, the result is a new ObjectQuery(T) instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.  </p>\n<p>An ObjectQuery(T) is frequently of an entity type, but it can also be of <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> type, for projections to an anonymous type, or of a primitive type, such as an integer or string. For more information, see <a href=\"http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276\" data-linktype=\"external\">Object Queries</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1__ctor_System_String_System_Data_Objects_ObjectContext_\" data-linktype=\"self-bookmark\">ObjectQuery&lt;T&gt;(String,ObjectContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance using the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> command as the initial query.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1__ctor_System_String_System_Data_Objects_ObjectContext_System_Data_Objects_MergeOption_\" data-linktype=\"self-bookmark\">ObjectQuery&lt;T&gt;(String,ObjectContext,MergeOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance using the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> command as the initial query and the specified merge option.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of this object query.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Distinct\" data-linktype=\"self-bookmark\">Distinct()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query to unique results.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Except_System_Data_Objects_ObjectQuery__0__\" data-linktype=\"self-bookmark\">Except(ObjectQuery&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query results by excluding results based on the results of another object query.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Execute_System_Data_Objects_MergeOption_\" data-linktype=\"self-bookmark\">Execute(MergeOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the object query with the specified merge option.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_GroupBy_System_String_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">GroupBy(String,String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Groups the query results by the specified criteria.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Include_System_String_\" data-linktype=\"self-bookmark\">Include(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the related objects to include in the query results.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Intersect_System_Data_Objects_ObjectQuery__0__\" data-linktype=\"self-bookmark\">Intersect(ObjectQuery&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query results by including only the results that exist in another object query.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_OfType__1\" data-linktype=\"self-bookmark\">OfType&lt;TResultType&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query to only results of a specific type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_OrderBy_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">OrderBy(String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Orders the query results by the specified criteria.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Select_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">Select(String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query results to only the properties that are defined in the specified projection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_SelectValue__1_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">SelectValue&lt;TResultType&gt;(String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query results to only the property specified in the projection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Skip_System_String_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">Skip(String,String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Orders the query results by the specified criteria and skips a specified number of results.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Top_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">Top(String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query results to a specified number of items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Union_System_Data_Objects_ObjectQuery__0__\" data-linktype=\"self-bookmark\">Union(ObjectQuery&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Combines the results of the query with the results of another object query, without any duplicates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_UnionAll_System_Data_Objects_ObjectQuery__0__\" data-linktype=\"self-bookmark\">UnionAll(ObjectQuery&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Combines the results of the query with the results of another object query, including all duplicates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_Where_System_String_System_Data_Objects_ObjectParameter___\" data-linktype=\"self-bookmark\">Where(String,ObjectParameter[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Limits the query to results that match specified filtering criteria.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Objects_ObjectQuery_1_System_Collections_Generic_IEnumerable_T__GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable&lt;T&gt;.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the results of the query.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1__ctor_System_String_System_Data_Objects_ObjectContext_\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectQuery&lt;T&gt;(String,ObjectContext)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance using the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> command as the initial query.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> query.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a> on which to execute the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The example in this topic is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example shows how to construct an instance of the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery\">Using context As New AdventureWorksEntities()\n    &#39; Call the constructor with a query for products and the ObjectContext. \n    Dim productQuery1 As New ObjectQuery(Of Product)(&quot;Products&quot;, context)\n\n    For Each result As Product In productQuery1\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.Name)\n    Next\n\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;\n\n    &#39; Call the constructor with the specified query and the ObjectContext. \n    Dim productQuery2 As New ObjectQuery(Of Product)(queryString, context)\n\n    For Each result As Product In productQuery2\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.Name)\n    Next\n\n    &#39; Call the constructor with the specified query, the ObjectContext, \n    &#39; and the NoTracking merge option. \n    Dim productQuery3 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    For Each result As Product In productQuery3\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.Name)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    // Call the constructor with a query for products and the ObjectContext.\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(&quot;Products&quot;, context);\n\n    foreach (Product result in productQuery1)\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.Name);\n\n    string queryString =\n        @&quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;;\n\n    // Call the constructor with the specified query and the ObjectContext.\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        new ObjectQuery&lt;Product&gt;(queryString, context);\n\n    foreach (Product result in productQuery2)\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.Name);\n\n    // Call the constructor with the specified query, the ObjectContext, \n    // and the NoTracking merge option.\n    ObjectQuery&lt;Product&gt; productQuery3 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    foreach (Product result in productQuery3)\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.Name);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1__ctor_System_String_System_Data_Objects_ObjectContext_System_Data_Objects_MergeOption_\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectQuery&lt;T&gt;(String,ObjectContext,MergeOption)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance using the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> command as the initial query and the specified merge option.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/esql-md.md&quot; -->Entity SQL<!--END INCLUDE --> query.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a> on which to execute the query.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mergeOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.mergeoption\" data-linktype=\"relative-path\">MergeOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> is initialized with the specified query, <a class=\"xref\" href=\"system.data.objects.objectcontext\" data-linktype=\"relative-path\">ObjectContext</a>, and <a class=\"xref\" href=\"system.data.objects.mergeoption\" data-linktype=\"relative-path\">MergeOption</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Select\">Dim productID = 900\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot; &amp; _\n            &quot; WHERE product.ProductID &gt; @productID&quot;\n\n    Dim productQuery1 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n    productQuery1.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    Dim productQuery2 As ObjectQuery(Of DbDataRecord) = productQuery1.Select(&quot;it.ProductID&quot;)\n\n    For Each result As DbDataRecord In productQuery2\n        Console.WriteLine(&quot;{0}&quot;, result(&quot;ProductID&quot;))\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Select\">int productID = 900;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString = @&quot;SELECT VALUE product FROM \n        AdventureWorksEntities.Products AS product\n        WHERE product.ProductID &gt; @productID&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    productQuery1.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    ObjectQuery&lt;DbDataRecord&gt; productQuery2 =\n        productQuery1.Select(&quot;it.ProductID&quot;);\n\n    foreach (DbDataRecord result in productQuery2)\n    {\n        Console.WriteLine(&quot;{0}&quot;, result[&quot;ProductID&quot;]);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Name\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of this object query.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <code>string</code> value that is the name of this <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified on set is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The name of the object query identifies the current object query in the sequence by name when constructing query builder methods. By default, the query name is <code>it</code>. This can be useful when referring to the current sequence in joins inside the [M:System.Data.Objects.Query`1.Where(System.String,System.Data.Objects.ObjectParameter&lt;xref:System.Data.Objects.Query%601.Where%2A&gt; method or in the &lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt; method. For more information, see <a href=\"http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0\" data-linktype=\"external\">Query Builder Methods</a>.  </p>\n<p> When you set the Name property of an <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>, that value becomes the alias in successive methods.  </p>\n<p> The value of the Name property must start with a letter and can contain letters, digits, and underscores.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example sets the name of the first <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> to &quot;product&quot; and then uses this alias in the successive <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_OrderBy_\" data-linktype=\"relative-path\">OrderBy</a> method. The example in this topic is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#QueryWithAliasNamed\">&#39; Return Product objects with a standard cost \n&#39; above 10 dollars. \nDim cost = 10\nDim productQuery As ObjectQuery(Of Product) = context.Products.Where(&quot;it.StandardCost &gt; @cost&quot;)\nproductQuery.Parameters.Add(New ObjectParameter(&quot;cost&quot;, cost))\n\n&#39; Set the Name property for the query and then \n&#39; use that name as the alias in the subsequent \n&#39; OrderBy method. \nproductQuery.Name = &quot;product&quot;\nDim filteredProduct As ObjectQuery(Of Product) = productQuery.OrderBy(&quot;product.ProductID&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#QueryWithAliasNamed\">int cost = 10;\n// Return Product objects with a standard cost\n// above 10 dollars.\nObjectQuery&lt;Product&gt; productQuery =\n    context.Products\n    .Where(&quot;it.StandardCost &gt; @cost&quot;, new ObjectParameter(&quot;cost&quot;, cost));\n\n// Set the Name property for the query and then \n// use that name as the alias in the subsequent \n// OrderBy method.\nproductQuery.Name = &quot;product&quot;;\nObjectQuery&lt;Product&gt; filteredProduct = productQuery\n    .OrderBy(&quot;product.ProductID&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Distinct\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Distinct_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Distinct()</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query to unique results.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/SELECT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">SELECT DISTINCT</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This query builder method returns an <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance that is equivalent to the original query with <a href=\"../Topic/SELECT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">SELECT DISTINCT</a> applied.  </p>\n<p> The <code>DISTINCT</code> operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The example in this topic is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example uses <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_UnionAll_\" data-linktype=\"relative-path\">UnionAll</a> method to create a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object. Then it calls Distinct on the new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object to get the unique results of this query.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll\">Dim productID = 100\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products &quot; &amp; _\n            &quot; AS product WHERE product.ProductID &lt; @productID&quot;\n\n    Dim productQuery As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery3 As ObjectQuery(Of Product) = productQuery.UnionAll(productQuery2)\n\n    productQuery3.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    Console.WriteLine(&quot;Result of UnionAll&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items, \n    &#39; after the UnionAll method was called on two queries. \n    For Each result As Product In productQuery3\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\n    Dim productQuery4 As ObjectQuery(Of Product) = productQuery3.Distinct()\n\n    Console.WriteLine(vbLf &amp; &quot;Result of Distinct&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items. \n    &#39; after the Distinct method was called on a query. \n    For Each result As Product In productQuery4\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll\">int productID = 100;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString =\n        @&quot;SELECT VALUE product FROM AdventureWorksEntities.Products \n            AS product WHERE product.ProductID &lt; @productID&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery3 =\n        productQuery.UnionAll(productQuery2);\n\n    productQuery3.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    Console.WriteLine(&quot;Result of UnionAll&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items, \n    // after the UnionAll method was called on two queries.\n    foreach (Product result in productQuery3)\n    {\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID);\n    }\n    ObjectQuery&lt;Product&gt; productQuery4 = productQuery3.Distinct();\n\n    Console.WriteLine(&quot;<br>Result of Distinct&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items.\n    // after the Distinct method was called on a query. \n    foreach (Product result in productQuery4)\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Except_System_Data_Objects_ObjectQuery__0__\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Except_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Except(ObjectQuery&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query results by excluding results based on the results of another object query.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> that represents the results to exclude from the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/EXCEPT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">EXCEPT</a> applied based on the specified <code>query</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>query</code> parameter is <code>null</code> or an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The supplied <code>query</code> that defines results to exclude must be of the same type or of a type that is compatible with the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>.  </p>\n<p> Parameters that are defined in the supplied <code>query</code> are merged with parameters that are defined in the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance. Parameters must be unique in the combined <a class=\"xref\" href=\"system.data.objects.objectparametercollection\" data-linktype=\"relative-path\">ObjectParameterCollection</a>. There cannot be two parameters in the combined collection with the same name. For more information, see <a href=\"http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0\" data-linktype=\"external\">Query Builder Methods</a>.  </p>\n<p> The resulting query inherits the connection from the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance on which Except was called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example uses Except method to create a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object and then iterates through the result of the new query.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Except\">Dim productID = 900\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;\n    Dim productQuery As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim queryString2 As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products &quot; &amp; _\n        &quot; AS product WHERE product.ProductID &lt; @productID&quot;\n    Dim productQuery2 As New ObjectQuery(Of Product)(queryString2, context, MergeOption.NoTracking)\n    productQuery2.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    Dim productQuery3 As ObjectQuery(Of Product) = productQuery.Except(productQuery2)\n\n    Console.WriteLine(&quot;Result of Except&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items \n    &#39; after the Except method was called. \n    For Each result As Product In productQuery3\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Except\">int productID = 900;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString = @&quot;SELECT VALUE product \n        FROM AdventureWorksEntities.Products AS product&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    string queryString2 = @&quot;SELECT VALUE product \n        FROM AdventureWorksEntities.Products \n        AS product WHERE product.ProductID &lt; @productID&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        new ObjectQuery&lt;Product&gt;(queryString2,\n            context, MergeOption.NoTracking);\n\n    productQuery2.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    ObjectQuery&lt;Product&gt; productQuery3 =\n        productQuery.Except(productQuery2);\n\n    Console.WriteLine(&quot;Result of Except&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items\n    // after the Except method was called.\n    foreach (Product result in productQuery3)\n        Console.WriteLine(&quot;Product Name: {0}&quot;,\n            result.ProductID);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Execute_System_Data_Objects_MergeOption_\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Execute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Execute(MergeOption)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the object query with the specified merge option.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mergeOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.mergeoption\" data-linktype=\"relative-path\">MergeOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.objects.mergeoption\" data-linktype=\"relative-path\">MergeOption</a> to use when executing the query. The default is <a class=\"xref\" href=\"system.data.objects.mergeoption\" data-linktype=\"relative-path\">MergeOption</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectresult-1\" data-linktype=\"relative-path\">ObjectResult<t></t></a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Data.Objects.ObjectResult`1</span> that contains a collection of entity objects returned by the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default merge option for object queries is <a class=\"xref\" href=\"system.data.objects.mergeoption\" data-linktype=\"relative-path\">MergeOption</a>. For more information, see <a href=\"http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0\" data-linktype=\"external\">Identity Resolution, State Management, and Change Tracking</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example returns an <a class=\"xref\" href=\"system.data.objects.objectresult-1\" data-linktype=\"relative-path\">ObjectResult&lt;T&gt;</a> from <a class=\"xref\" href=\"system.data.objects.objectquery#System_Data_Objects_ObjectQuery_Execute_\" data-linktype=\"relative-path\">Execute</a> method. Then it gets an enumerator and iterates through the query results. At the end it releases the enumerator and the <a class=\"xref\" href=\"system.data.objects.objectresult-1\" data-linktype=\"relative-path\">ObjectResult&lt;T&gt;</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#QueryResult\">Using context As New AdventureWorksEntities()\n    Dim query As ObjectSet(Of Product) = context.Products\n    Dim queryResults As ObjectResult(Of Product) = Nothing\n\n    Dim enumerator As System.Collections.IEnumerator = Nothing\n    Try\n        queryResults = query.Execute(MergeOption.AppendOnly)\n\n        &#39; Get the enumerator. \n        enumerator = DirectCast(queryResults, System.Collections.IEnumerable).GetEnumerator()\n\n        &#39; Iterate through the query results. \n        While enumerator.MoveNext()\n            Dim product As Product = DirectCast(enumerator.Current, Product)\n            Console.WriteLine(&quot;{0}&quot;, product.Name)\n        End While\n        &#39; Dispose the enumerator \n        DirectCast(enumerator, IDisposable).Dispose()\n    Finally\n        &#39; Dispose the query results and the enumerator. \n        If queryResults IsNot Nothing Then\n            queryResults.Dispose()\n        End If\n        If enumerator IsNot Nothing Then\n            DirectCast(enumerator, IDisposable).Dispose()\n        End If\n    End Try\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#QueryResult\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    ObjectSet&lt;Product&gt; query = context.Products;\n    ObjectResult&lt;Product&gt; queryResults = null;\n\n    System.Collections.IEnumerator enumerator = null;\n    try\n    {\n        queryResults = query.Execute(MergeOption.AppendOnly);\n\n        // Get the enumerator.\n        enumerator = ((System.Collections.IEnumerable)queryResults).GetEnumerator();\n\n        // Iterate through the query results.\n        while (enumerator.MoveNext())\n        {\n            Product product = (Product)enumerator.Current;\n            Console.WriteLine(&quot;{0}&quot;, product.Name);\n        }\n        // Dispose the enumerator\n        ((IDisposable)enumerator).Dispose();\n    }\n    finally\n    {\n        // Dispose the query results and the enumerator.\n        if (queryResults != null)\n        {\n            queryResults.Dispose();\n        }\n        if (enumerator != null)\n        {\n            ((IDisposable)enumerator).Dispose();\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_GroupBy_System_String_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_GroupBy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GroupBy(String,String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Groups the query results by the specified criteria.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key columns by which to group the results.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>projection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of selected properties that defines the projection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Zero or more parameters that are used in this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery</a>&lt;<a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a>&gt;</div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance of type <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> that is equivalent to the original instance with <a href=\"../Topic/GROUP%20BY%20(Entity%20SQL).md\" data-linktype=\"relative-path\">GROUP BY</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>query</code> parameter is <code>null</code> or an empty string.  </p>\n<p> -or-  </p>\n<p> The <code>projection</code> parameter is <code>null</code> or an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GroupBy applies the projection specified by the <code>projection</code> parameter. This means that the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> returned by the GroupBy method is always of type <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a>. For more information, see <a href=\"http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276\" data-linktype=\"external\">Object Queries</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>.  </p>\n<p> This example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object that contains the results of the existing query grouped by product name.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_GroupBy\">    Using context As New AdventureWorksEntities()\n        Dim queryString As String = &quot;SELECT VALUE product &quot; &amp; vbCr &amp; vbLf &amp; &quot; FROM AdventureWorksEntities.Products AS product&quot;\n\n        Dim productQuery As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n        Dim productQuery2 As ObjectQuery(Of DbDataRecord) = _\n            productQuery.GroupBy(&quot;it.name AS pn&quot;, &quot;Sqlserver.COUNT(it.Name) as count, pn&quot;)\n\n        &#39; Iterate through the collection of Products \n        &#39; after the GroupBy method was called. \n        For Each result As DbDataRecord In productQuery2\n            Console.WriteLine(&quot;Name: {0}; Count: {1}&quot;, result(&quot;pn&quot;), result(&quot;count&quot;))\n        Next\n    End Using\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_GroupBy\">    using (AdventureWorksEntities context =\n        new AdventureWorksEntities())\n    {\n        string queryString = @&quot;SELECT VALUE product \n            FROM AdventureWorksEntities.Products AS product&quot;;\n\n        ObjectQuery&lt;Product&gt; productQuery =\n            new ObjectQuery&lt;Product&gt;(queryString,\n                context, MergeOption.NoTracking);\n\n        ObjectQuery&lt;DbDataRecord&gt; productQuery2 =\n            productQuery.GroupBy(&quot;it.name AS pn&quot;,\n            &quot;Sqlserver.COUNT(it.Name) as count, pn&quot;);\n\n        // Iterate through the collection of Products\n        // after the GroupBy method was called.\n        foreach (DbDataRecord result in productQuery2)\n        {\n            Console.WriteLine(&quot;Name: {0}; Count: {1}&quot;,\n                result[&quot;pn&quot;], result[&quot;count&quot;]);\n        }\n    }\n}\n</code></pre><p> This example returns a set of nested data records that contain the <code>Contact.LastName</code> column, grouped and sorted alphabetically by the first letter of <code>Contact.LastName</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#Projection_GroupBy\">Using context As New AdventureWorksEntities()\n    &#39; Define the query with a GROUP BY clause that returns \n    &#39; a set of nested LastName records grouped by first letter. \n    Dim query As ObjectQuery(Of DbDataRecord) = _\n        context.Contacts.GroupBy(&quot;SUBSTRING(it.LastName, 1, 1) AS ln&quot;, &quot;ln&quot;) _\n        .Select(&quot;it.ln AS ln, (SELECT c1.LastName FROM AdventureWorksEntities.Contacts AS c1 &quot; &amp; _\n                &quot;WHERE SubString(c1.LastName, 1, 1) = it.ln) AS CONTACT&quot;).OrderBy(&quot;it.ln&quot;)\n\n    &#39; Execute the query and walk through the nested records. \n    For Each rec As DbDataRecord In query.Execute(MergeOption.AppendOnly)\n        Console.WriteLine(&quot;Last names that start with the letter &#39;{0}&#39;:&quot;, rec(0))\n        Dim list As List(Of DbDataRecord) = TryCast(rec(1), List(Of DbDataRecord))\n        For Each r As DbDataRecord In list\n            For i As Integer = 0 To r.FieldCount - 1\n                Console.WriteLine(&quot; {0} &quot;, r(i))\n            Next\n        Next\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#Projection_GroupBy\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    // Define the query with a GROUP BY clause that returns\n    // a set of nested LastName records grouped by first letter.\n    ObjectQuery&lt;DbDataRecord&gt; query =\n        context.Contacts\n        .GroupBy(&quot;SUBSTRING(it.LastName, 1, 1) AS ln&quot;, &quot;ln&quot;)\n        .Select(&quot;it.ln AS ln, (SELECT c1.LastName &quot; +\n        &quot;FROM AdventureWorksEntities.Contacts AS c1 &quot; +\n        &quot;WHERE SubString(c1.LastName, 1, 1) = it.ln) AS CONTACT&quot;)\n        .OrderBy(&quot;it.ln&quot;);\n\n    // Execute the query and walk through the nested records.\n    foreach (DbDataRecord rec in\n        query.Execute(MergeOption.AppendOnly))\n    {\n        Console.WriteLine(&quot;Last names that start with the letter &#39;{0}&#39;:&quot;,\n                    rec[0]);\n        List&lt;DbDataRecord&gt; list = rec[1] as List&lt;DbDataRecord&gt;;\n        foreach (DbDataRecord r in list)\n        {\n            for (int i = 0; i &lt; r.FieldCount; i++)\n            {\n                Console.WriteLine(&quot;   {0} &quot;, r[i]);\n            }\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Include_System_String_\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Include_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Include(String)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the related objects to include in the query results.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Dot-separated list of related objects to return in the query results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> with the defined query path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>empty</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Query paths can be used with Entity SQL and LINQ queries.  </p>\n<p> Paths are all-inclusive. For example, if an include call indicates <code>Include(&quot;Orders.OrderLines&quot;)</code>, not only will <code>OrderLines</code> be included, but also <code>Orders</code>. For more information, see <a href=\"http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1\" data-linktype=\"external\">Loading Related Objects</a>.  </p>\n<p> When you call the Include method, the query path is only valid on the returned instance of the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>. Other instances of <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> and the object context itself are not affected.  </p>\n<p> Because the Include method returns the query object, you can call this method multiple times on an <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> to specify multiple paths for the query, as in the following example:  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#SpanOnlyWithMultiplePaths\">&#39; Create a SalesOrderHeader query with two query paths, \n&#39; one that returns order items and a second that returns the \n&#39; billing and shipping addresses for each order. \nDim query As ObjectQuery(Of SalesOrderHeader) = context.SalesOrderHeaders.Include(&quot;SalesOrderDetails&quot;).Include(&quot;Address&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#SpanOnlyWithMultiplePaths\">// Create a SalesOrderHeader query with two query paths, \n// one that returns order items and a second that returns the \n// billing and shipping addresses for each order.\nObjectQuery&lt;SalesOrderHeader&gt; query =\n    context.SalesOrderHeaders.Include(&quot;SalesOrderDetails&quot;).Include(&quot;Address&quot;);\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#QueryWithSpan\">Using context As New AdventureWorksEntities()\n    &#39; Define an object query with a path that returns \n    &#39; orders and items for a specific contact. \n    Dim contact As Contact = context.Contacts.Include(&quot;SalesOrderHeaders.SalesOrderDetails&quot;).FirstOrDefault()\n\n    &#39; Execute the query and display information for each item \n    &#39; in the orders that belong to the first contact. \n    For Each order As SalesOrderHeader In contact.SalesOrderHeaders\n        Console.WriteLine(String.Format(&quot;PO Number: {0}&quot;, order.PurchaseOrderNumber))\n        Console.WriteLine(String.Format(&quot;Order Date: {0}&quot;, order.OrderDate.ToString()))\n        Console.WriteLine(&quot;Order items:&quot;)\n        For Each item As SalesOrderDetail In order.SalesOrderDetails\n            Console.WriteLine(String.Format(&quot;Product: {0} Quantity: {1}&quot;, _\n                                              item.ProductID.ToString(), item.OrderQty.ToString()))\n        Next\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#QueryWithSpan\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    // Define an object query with a path that returns \n    // orders and items for a specific contact.\n    Contact contact =\n        context.Contacts.Include(&quot;SalesOrderHeaders.SalesOrderDetails&quot;)\n        .FirstOrDefault();\n\n    // Execute the query and display information for each item \n    // in the orders that belong to the first contact.\n    foreach (SalesOrderHeader order in contact\n        .SalesOrderHeaders)\n    {\n        Console.WriteLine(String.Format(&quot;PO Number: {0}&quot;,\n            order.PurchaseOrderNumber));\n        Console.WriteLine(String.Format(&quot;Order Date: {0}&quot;,\n            order.OrderDate.ToString()));\n        Console.WriteLine(&quot;Order items:&quot;);\n        foreach (SalesOrderDetail item in order.SalesOrderDetails)\n        {\n            Console.WriteLine(String.Format(&quot;Product: {0} &quot;\n                + &quot;Quantity: {1}&quot;, item.ProductID.ToString(),\n                item.OrderQty.ToString()));\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Intersect_System_Data_Objects_ObjectQuery__0__\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(ObjectQuery&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query results by including only the results that exist in another object query.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> that represents the results to include in the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/INTERSECT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">INTERSECT</a> applied based on the specified <code>query</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>query</code> parameter is <code>null</code> or is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The supplied <code>query</code> that defines results to include must be of the same type or of a type that is compatible with the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>.  </p>\n<p> Parameters that are defined in the supplied <code>query</code> are merged with parameters that are defined in the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance. Parameters must be unique in the combined <a class=\"xref\" href=\"system.data.objects.objectparametercollection\" data-linktype=\"relative-path\">ObjectParameterCollection</a>. There cannot be two parameters in the combined collection with the same name. For more information, see <a href=\"http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0\" data-linktype=\"external\">Query Builder Methods</a>.  </p>\n<p> The resulting query inherits the connection from the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance on which the Intersect method was called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The example in this topic is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. This example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object that contains the results of two other queries.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Intersect\">Dim productID1 = 900\nDim productID2 = 950\n\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products &quot; &amp; _\n            &quot; AS product WHERE product.ProductID &gt; @productID1&quot;\n\n    Dim productQuery As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim queryString2 As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products &quot; &amp; _\n        &quot; AS product WHERE product.ProductID &gt; @productID2&quot;\n\n    Dim productQuery2 As New ObjectQuery(Of Product)(queryString2, context, MergeOption.NoTracking)\n\n    Dim productQuery3 As ObjectQuery(Of Product) = productQuery.Intersect(productQuery2)\n    productQuery3.Parameters.Add(New ObjectParameter(&quot;productID1&quot;, productID1))\n    productQuery3.Parameters.Add(New ObjectParameter(&quot;productID2&quot;, productID2))\n\n    Console.WriteLine(&quot;Result of Intersect&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items \n    &#39; after the Intersect method was called. \n    For Each result As Product In productQuery3\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Intersect\">int productID1 = 900;\nint productID2 = 950;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString = @&quot;SELECT VALUE product \n        FROM AdventureWorksEntities.Products \n        AS product WHERE product.ProductID &gt; @productID1&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    string queryString2 = @&quot;SELECT VALUE product \n        FROM AdventureWorksEntities.Products \n        AS product WHERE product.ProductID &gt; @productID2&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        new ObjectQuery&lt;Product&gt;(queryString2,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery3 =\n        productQuery.Intersect(productQuery2);\n\n    productQuery3.Parameters.Add(new ObjectParameter(&quot;productID1&quot;, productID1));\n    productQuery3.Parameters.Add(new ObjectParameter(&quot;productID2&quot;, productID2));\n\n    Console.WriteLine(&quot;Result of Intersect&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items\n    // after the Intersect method was called.\n    foreach (Product result in productQuery3)\n    {\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_OfType__1\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_OfType_TResultType__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OfType&lt;TResultType&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query to only results of a specific type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery</a>&lt;<span class=\"xref\">TResultType</span>&gt;</div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/OFTYPE%20(Entity%20SQL).md\" data-linktype=\"relative-path\">OFTYPE</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.entitysqlexception\" data-linktype=\"relative-path\">EntitySqlException</a></div>\r\n                  </div>\r\n                  <p>The type specified is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>OfType(TResultType) is used to filter query results by a specific entity or complex type. This supports a conceptual model with object inheritance. For more information, see <a href=\"http://msdn.microsoft.com/en-us/5de40bf8-527f-4f2e-96e3-61164f429caa\" data-linktype=\"external\">Entity Data Model Inheritance (Application Scenarios)</a>. The  </p>\n<p> OfType(TResultType) method can only be applied to an <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> of an entity type or complex type that is defined in the EDM.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_OrderBy_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_OrderBy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OrderBy(String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Orders the query results by the specified criteria.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key columns by which to order the results.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Zero or more parameters that are used in this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/ORDER%20BY%20(Entity%20SQL).md\" data-linktype=\"relative-path\">ORDER BY</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>keys</code> or <code>parameters</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>key</code> is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ordering of results in a nested query cannot be guaranteed.  </p>\n<p> OrderBy should always be the final query builder method in the sequence.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object that contains the results of the existing query order by <code>ProductID</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_OrderBy\">Using context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;\n\n    Dim productQuery1 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As ObjectQuery(Of Product) = productQuery1.OrderBy(&quot;it.ProductID&quot;)\n\n    &#39; Iterate through the collection of Product items. \n    For Each result As Product In productQuery2\n        Console.WriteLine(&quot;{0}&quot;, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_OrderBy\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString = @&quot;SELECT VALUE product \n        FROM AdventureWorksEntities.Products AS product&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        productQuery1.OrderBy(&quot;it.ProductID&quot;);\n\n    // Iterate through the collection of Product items.\n    foreach (Product result in productQuery2)\n    {\n        Console.WriteLine(&quot;{0}&quot;, result.ProductID);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Select_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Select_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select(String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query results to only the properties that are defined in the specified projection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>projection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of selected properties that defines the projection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Zero or more parameters that are used in this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery</a>&lt;<a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a>&gt;</div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance of type <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> that is equivalent to the original instance with <a href=\"../Topic/SELECT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">SELECT</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>projection</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>parameters</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>projection</code> is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Select applies the projection specified by the <code>projection</code> parameter. The <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> returned by the Select method is always a row type of <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a>. Use the &lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt; method to return values that are simple types, entity types, or complex types. For more information, see <a href=\"http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276\" data-linktype=\"external\">Object Queries</a>.  </p>\n<p> When a navigation property is included in the projection, the query results include a collection of nested <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> objects. For more information, see <a href=\"http://msdn.microsoft.com/en-us/b1d71c7d-16a7-4b46-96ac-690176bd5057\" data-linktype=\"external\">How to: Navigate Relationships Using Navigation Properties</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> whose results are data records that contain the <code>ProductID</code> fields of the results of this query.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Select\">Dim productID = 900\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot; &amp; _\n            &quot; WHERE product.ProductID &gt; @productID&quot;\n\n    Dim productQuery1 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n    productQuery1.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    Dim productQuery2 As ObjectQuery(Of DbDataRecord) = productQuery1.Select(&quot;it.ProductID&quot;)\n\n    For Each result As DbDataRecord In productQuery2\n        Console.WriteLine(&quot;{0}&quot;, result(&quot;ProductID&quot;))\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Select\">int productID = 900;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString = @&quot;SELECT VALUE product FROM \n        AdventureWorksEntities.Products AS product\n        WHERE product.ProductID &gt; @productID&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    productQuery1.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    ObjectQuery&lt;DbDataRecord&gt; productQuery2 =\n        productQuery1.Select(&quot;it.ProductID&quot;);\n\n    foreach (DbDataRecord result in productQuery2)\n    {\n        Console.WriteLine(&quot;{0}&quot;, result[&quot;ProductID&quot;]);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_SelectValue__1_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_SelectValue_TResultType__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectValue&lt;TResultType&gt;(String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query results to only the property specified in the projection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>projection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The projection list.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional set of query parameters that should be in scope when parsing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery</a>&lt;<span class=\"xref\">TResultType</span>&gt;</div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance of a type compatible with the specific projection. The returned <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> is equivalent to the original instance with <a href=\"../Topic/SELECT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">SELECT VALUE</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>projection</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>parameters</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>projection</code> is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>SelectValue(TResultType) is used to return values that are simple types, entity types, or complex types. Use the <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_Select_\" data-linktype=\"relative-path\">Select</a> method for projections that require a row type instead of a value type. For more information, see <a href=\"http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276\" data-linktype=\"external\">Object Queries</a>.  </p>\n<p> The SelectValue(TResultType) method applies the projection specified by the <code>projection</code> parameter. The <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> returned by the SelectValue(TResultType) method must be of a value type that is compatible with the projection and must be the same type as the type of SelectValue(TResultType).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> that contains results that are a sequence of <code>ProductID</code> values projected from the results of the existing query.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_SelectValue\">Using context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;\n\n    Dim productQuery1 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As ObjectQuery(Of Int32) = productQuery1.SelectValue(Of Int32)(&quot;it.ProductID&quot;)\n\n    For Each result As Int32 In productQuery2\n        Console.WriteLine(&quot;{0}&quot;, result)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_SelectValue\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString =\n        @&quot;SELECT VALUE product FROM \n            AdventureWorksEntities.Products AS product&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Int32&gt; productQuery2 =\n        productQuery1.SelectValue&lt;Int32&gt;(&quot;it.ProductID&quot;);\n\n    foreach (Int32 result in productQuery2)\n    {\n        Console.WriteLine(&quot;{0}&quot;, result);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Skip_System_String_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Skip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Skip(String,String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Orders the query results by the specified criteria and skips a specified number of results.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key columns by which to order the results.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of results to skip. This must be either a constant or a parameter reference.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional set of query parameters that should be in scope when parsing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with both <a href=\"../Topic/ORDER%20BY%20(Entity%20SQL).md\" data-linktype=\"relative-path\">ORDER BY</a> and <a href=\"../Topic/SKIP%20(Entity%20SQL).md\" data-linktype=\"relative-path\">SKIP</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Any argument is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>keys</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> <code>count</code> is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Skip method cannot be used after the <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_Top_\" data-linktype=\"relative-path\">Top</a> method. When you use <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_Top_\" data-linktype=\"relative-path\">Top</a> after Skip, it functions like the <a href=\"../Topic/LIMIT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">LIMIT</a> statement of an  clause.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example gets five <code>Product</code> objects after skipping the first three in the query result, sorted by <code>Product.ListPrice</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#Projection_SkipLimit\">Using context As New AdventureWorksEntities()\n    &#39; Define the parameters used to define the &quot;page&quot; of returned data. \n    Dim skipValue As Integer = 3\n    Dim limitValue As Integer = 5\n\n    &#39; Define a query that returns a &quot;page&quot; or the full \n    &#39; Product data using the Skip and Top methods. \n    &#39; When Top() follows Skip(), it acts like the LIMIT statement. \n    Dim query As ObjectQuery(Of Product) = _\n        context.Products.Skip(&quot;it.ListPrice&quot;, &quot;@skip&quot;, _\n            New ObjectParameter(&quot;skip&quot;, skipValue)).Top(&quot;@limit&quot;, New ObjectParameter(&quot;limit&quot;, limitValue))\n\n    &#39; Iterate through the page of Product items. \n    For Each result As Product In query\n        Console.WriteLine(&quot;ID: {0}; Name: {1}&quot;, result.ProductID, result.Name)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#Projection_SkipLimit\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    // Define the parameters used to define the &quot;page&quot; of returned data.\n    int skipValue = 3;\n    int limitValue = 5;\n\n    // Define a query that returns a &quot;page&quot; or the full \n    // Product data using the Skip and Top methods. \n    // When Top() follows Skip(), it acts like the LIMIT statement.\n    ObjectQuery&lt;Product&gt; query = context.Products\n        .Skip(&quot;it.ListPrice&quot;, &quot;@skip&quot;,\n                new ObjectParameter(&quot;skip&quot;, skipValue))\n        .Top(&quot;@limit&quot;, new ObjectParameter(&quot;limit&quot;, limitValue));\n\n    // Iterate through the page of Product items.\n    foreach (Product result in query)\n        Console.WriteLine(&quot;ID: {0}; Name: {1}&quot;,\n        result.ProductID, result.Name);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Top_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Top_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Top(String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query results to a specified number of items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of items in the results as a string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional set of query parameters that should be in scope when parsing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/TOP%20(Entity%20SQL).md\" data-linktype=\"relative-path\">TOP</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>count</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>count</code> is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Top is nondeterministic unless the query is sorted.  </p>\n<p> When you use the Top method after the <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_Skip_\" data-linktype=\"relative-path\">Skip</a> method, it functions like the <a href=\"../Topic/LIMIT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">LIMIT</a> statement of an <a href=\"../Topic/ORDER%20BY%20(Entity%20SQL).md\" data-linktype=\"relative-path\">ORDER BY</a> clause.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>These examples are based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>.  </p>\n<p> This example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> that contains the first two results of the existing query.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Top\">Using context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;\n\n    Dim productQuery1 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As ObjectQuery(Of Product) = productQuery1.Top(&quot;2&quot;)\n\n    &#39; Iterate through the collection of Product items. \n    For Each result As Product In productQuery2\n        Console.WriteLine(&quot;{0}&quot;, result.Name)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Top\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString =\n        @&quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(queryString, context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery2 = productQuery1.Top(&quot;2&quot;);\n\n    // Iterate through the collection of Product items.\n    foreach (Product result in productQuery2)\n        Console.WriteLine(&quot;{0}&quot;, result.Name);\n}\n</code></pre><p> This example gets five <code>Product</code> objects after skipping the first three in the query result, sorted by <code>Product.ListPrice</code>. Top is used instead of <a href=\"../Topic/LIMIT%20(Entity%20SQL).md\" data-linktype=\"relative-path\">LIMIT</a> for paging.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#Projection_SkipLimit\">Using context As New AdventureWorksEntities()\n    &#39; Define the parameters used to define the &quot;page&quot; of returned data. \n    Dim skipValue As Integer = 3\n    Dim limitValue As Integer = 5\n\n    &#39; Define a query that returns a &quot;page&quot; or the full \n    &#39; Product data using the Skip and Top methods. \n    &#39; When Top() follows Skip(), it acts like the LIMIT statement. \n    Dim query As ObjectQuery(Of Product) = _\n        context.Products.Skip(&quot;it.ListPrice&quot;, &quot;@skip&quot;, _\n            New ObjectParameter(&quot;skip&quot;, skipValue)).Top(&quot;@limit&quot;, New ObjectParameter(&quot;limit&quot;, limitValue))\n\n    &#39; Iterate through the page of Product items. \n    For Each result As Product In query\n        Console.WriteLine(&quot;ID: {0}; Name: {1}&quot;, result.ProductID, result.Name)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#Projection_SkipLimit\">using (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    // Define the parameters used to define the &quot;page&quot; of returned data.\n    int skipValue = 3;\n    int limitValue = 5;\n\n    // Define a query that returns a &quot;page&quot; or the full \n    // Product data using the Skip and Top methods. \n    // When Top() follows Skip(), it acts like the LIMIT statement.\n    ObjectQuery&lt;Product&gt; query = context.Products\n        .Skip(&quot;it.ListPrice&quot;, &quot;@skip&quot;,\n                new ObjectParameter(&quot;skip&quot;, skipValue))\n        .Top(&quot;@limit&quot;, new ObjectParameter(&quot;limit&quot;, limitValue));\n\n    // Iterate through the page of Product items.\n    foreach (Product result in query)\n        Console.WriteLine(&quot;ID: {0}; Name: {1}&quot;,\n        result.ProductID, result.Name);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Union_System_Data_Objects_ObjectQuery__0__\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(ObjectQuery&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Combines the results of the query with the results of another object query, without any duplicates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> that represents the results to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/UNION%20(Entity%20SQL).md\" data-linktype=\"relative-path\">UNION</a> applied to add the results of the specified <code>query</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>query</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Union adds the results of the supplied <code>query</code> without any duplicates.  </p>\n<p> The supplied <code>query</code> that defines the results to add must be of the same type or of a type that can be promoted to the type of this <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>. For example, the following is valid because <code>DiscontinuedProducts</code> can be promoted to <code>Products</code>:  </p>\n<p><codecontentplaceholder>0</codecontentplaceholder><br> The following will throw an exception because <code>Products</code> cannot be promoted to <code>DiscontinuedProducts</code>.  </p>\n<p><codecontentplaceholder>1</codecontentplaceholder><br> For an <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> of type <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a>, the records in both queries must have the same number of columns, and the types in the columns of the <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> of the passed <code>query</code> must be promotable to the types of the columns in the <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> of the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>.  </p>\n<p> Parameters that are defined in the supplied <code>query</code> are merged with parameters that are defined in the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance. Parameters must be unique in the combined <a class=\"xref\" href=\"system.data.objects.objectparametercollection\" data-linktype=\"relative-path\">ObjectParameterCollection</a>. There cannot be two parameters in the combined collection with the same name. For more information, see <a href=\"http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0\" data-linktype=\"external\">Query Builder Methods</a>.  </p>\n<p> The resulting query inherits the connection from the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance on which Union was called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example uses Union method to creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Distinct_Union\">Dim productID = 100\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product &quot; &amp; _\n            &quot; WHERE product.ProductID &lt; @productID&quot;\n    Dim productQuery As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery3 As ObjectQuery(Of Product) = productQuery.Union(productQuery2)\n\n    productQuery3.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    Console.WriteLine(&quot;Result of Union&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items, \n    &#39; after the Union method was called on two queries. \n    For Each result As Product In productQuery3\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Distinct_Union\">int productID = 100;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString = @&quot;SELECT VALUE product \n        FROM AdventureWorksEntities.Products AS product \n        WHERE product.ProductID &lt; @productID&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery3 =\n        productQuery.Union(productQuery2);\n\n    productQuery3.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    Console.WriteLine(&quot;Result of Union&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items, \n    // after the Union method was called on two queries.\n    foreach (Product result in productQuery3)\n    {\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_UnionAll_System_Data_Objects_ObjectQuery__0__\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_UnionAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnionAll(ObjectQuery&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Combines the results of the query with the results of another object query, including all duplicates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> that represents the results to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/UNION%20(Entity%20SQL).md\" data-linktype=\"relative-path\">UNION ALL</a> applied to add the results of the specified <code>query</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>query</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>UnionAll adds the results of the supplied <code>query</code> including all duplicates.  </p>\n<p> The supplied <code>query</code> that defines results to add must be of the same type or of a type that can be promoted to the type of this <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>. For example, the following is valid because <code>DiscontinuedProducts</code> can be promoted to <code>Products</code>:  </p>\n<p><codecontentplaceholder>0</codecontentplaceholder><br> The following will throw an exception because <code>Products</code> cannot be promoted to <code>DiscontinuedProducts</code>.  </p>\n<p><codecontentplaceholder>1</codecontentplaceholder><br> For an <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> of type <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a>, the records in both queries must have the same number of columns, and the types in the columns of the <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> of the passed <code>query</code> must be promotable to the types of the columns in the <a class=\"xref\" href=\"system.data.common.dbdatarecord\" data-linktype=\"relative-path\">DbDataRecord</a> of the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a>.  </p>\n<p> Parameters that are defined in the supplied <code>query</code> are merged with parameters that are defined in the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance. Parameters must be unique in the combined <a class=\"xref\" href=\"system.data.objects.objectparametercollection\" data-linktype=\"relative-path\">ObjectParameterCollection</a>. There cannot be two parameters in the combined collection with the same name. For more information, see <a href=\"http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0\" data-linktype=\"external\">Query Builder Methods</a>.  </p>\n<p> The resulting query inherits the connection from the <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> instance on which UnionAll was called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The example in this topic is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example uses the UnionAll method to create a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object. Then it calls the <a class=\"xref\" href=\"system.data.objects.objectquery-1#System_Data_Objects_ObjectQuery_1_Distinct_\" data-linktype=\"relative-path\">Distinct</a> method on the new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> object to get the unique results of this query.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll\">Dim productID = 100\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products &quot; &amp; _\n            &quot; AS product WHERE product.ProductID &lt; @productID&quot;\n\n    Dim productQuery As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery3 As ObjectQuery(Of Product) = productQuery.UnionAll(productQuery2)\n\n    productQuery3.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    Console.WriteLine(&quot;Result of UnionAll&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items, \n    &#39; after the UnionAll method was called on two queries. \n    For Each result As Product In productQuery3\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\n    Dim productQuery4 As ObjectQuery(Of Product) = productQuery3.Distinct()\n\n    Console.WriteLine(vbLf &amp; &quot;Result of Distinct&quot;)\n    Console.WriteLine(&quot;------------------&quot;)\n\n    &#39; Iterate through the collection of Product items. \n    &#39; after the Distinct method was called on a query. \n    For Each result As Product In productQuery4\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll\">int productID = 100;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString =\n        @&quot;SELECT VALUE product FROM AdventureWorksEntities.Products \n            AS product WHERE product.ProductID &lt; @productID&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery3 =\n        productQuery.UnionAll(productQuery2);\n\n    productQuery3.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    Console.WriteLine(&quot;Result of UnionAll&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items, \n    // after the UnionAll method was called on two queries.\n    foreach (Product result in productQuery3)\n    {\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID);\n    }\n    ObjectQuery&lt;Product&gt; productQuery4 = productQuery3.Distinct();\n\n    Console.WriteLine(&quot;<br>Result of Distinct&quot;);\n    Console.WriteLine(&quot;------------------&quot;);\n\n    // Iterate through the collection of Product items.\n    // after the Distinct method was called on a query. \n    foreach (Product result in productQuery4)\n        Console.WriteLine(&quot;Product Name: {0}&quot;, result.ProductID);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_Where_System_String_System_Data_Objects_ObjectParameter___\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_Where_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Where(String,ObjectParameter[])</div>        \r\n          </div>\r\n    \r\n            <p>Limits the query to results that match specified filtering criteria.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, System.Data.Objects.ObjectParameter[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>predicate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The filter predicate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectparameter\" data-linktype=\"relative-path\">ObjectParameter</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Zero or more parameters that are used in this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery<t></t></a></div>\r\n                  </div>\r\n                  <p>A new <span class=\"xref\">stem.Data.Objects.ObjectQuery`1</span> instance that is equivalent to the original instance with <a href=\"../Topic/WHERE%20(Entity%20SQL).md\" data-linktype=\"relative-path\">WHERE</a> applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>predicate</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>parameters</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>predicate</code> is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example is based on the <a href=\"http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832\" data-linktype=\"external\">AdventureWorks Sales Model</a>. The example creates a new <a class=\"xref\" href=\"system.data.objects.objectquery-1\" data-linktype=\"relative-path\">ObjectQuery&lt;T&gt;</a> that contains results of the existing query filtered by the following criteria: <code>&quot;it.ProductID = 900&quot;</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"DP ObjectServices Concepts#ObjectQuery_Where\">Dim productID = 900\nUsing context As New AdventureWorksEntities()\n    Dim queryString As String = &quot;SELECT VALUE product FROM AdventureWorksEntities.Products AS product&quot;\n\n    Dim productQuery1 As New ObjectQuery(Of Product)(queryString, context, MergeOption.NoTracking)\n\n    Dim productQuery2 As ObjectQuery(Of Product) = productQuery1.Where(&quot;it.ProductID = @productID&quot;)\n    productQuery2.Parameters.Add(New ObjectParameter(&quot;productID&quot;, productID))\n\n    &#39; Iterate through the collection of Product items. \n    For Each result As Product In productQuery2\n        Console.WriteLine(&quot;Product Name: {0}; Product ID: {1}&quot;, result.Name, result.ProductID)\n    Next\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DP ObjectServices Concepts#ObjectQuery_Where\">int productID = 900;\nusing (AdventureWorksEntities context =\n    new AdventureWorksEntities())\n{\n    string queryString =\n        @&quot;SELECT VALUE product FROM \n            AdventureWorksEntities.Products AS product&quot;;\n\n    ObjectQuery&lt;Product&gt; productQuery1 =\n        new ObjectQuery&lt;Product&gt;(queryString,\n            context, MergeOption.NoTracking);\n\n    ObjectQuery&lt;Product&gt; productQuery2 =\n        productQuery1.Where(&quot;it.ProductID = @productID&quot;);\n\n    productQuery2.Parameters.Add(new ObjectParameter(&quot;productID&quot;, productID));\n\n    // Iterate through the collection of Product items.\n    foreach (Product result in productQuery2)\n    {\n        Console.WriteLine(&quot;Product Name: {0}; Product ID: {1}&quot;,\n            result.Name, result.ProductID);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Objects_ObjectQuery_1_System_Collections_Generic_IEnumerable_T__GetEnumerator\">\r\n    \r\n            <a id=\"System_Data_Objects_ObjectQuery_1_System_Collections_Generic_IEnumerable_T__GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable&lt;T&gt;.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the results of the query.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator<t></t></a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.IEnumerator`1</span> object that can be used to iterate through the results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling IEnumerable(T).GetEnumerator executes the query.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Objects.ObjectQuery-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Objects.ObjectQuery-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Distinct\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Except\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Execute\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.GroupBy\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Include\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Name\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.OfType&lt;TResultType&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.OrderBy\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Select\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.SelectValue&lt;TResultType&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Skip\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.IEnumerable&lt;T&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Top\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Union\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.UnionAll\">\r\n<meta name=\"APIName\" content=\"System.Data.Objects.ObjectQuery&lt;T&gt;.Where\">\r\n<meta name=\"APILocation\" content=\"System.Data.Entity.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"24005a97-4b53-3d6e-f2ff-c31226496261\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Data.Objects\\ObjectQuery`1.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a typed query against a conceptual model in a given object context.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.Objects/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Objects.ObjectQuery`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Objects.ObjectQuery-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Objects.ObjectQuery-1.yml","open_to_public_contributors":true,"api_name":["System.Data.Objects.ObjectQuery<T>","System.Data.Objects.ObjectQuery<T>..ctor","System.Data.Objects.ObjectQuery<T>.Distinct","System.Data.Objects.ObjectQuery<T>.Except","System.Data.Objects.ObjectQuery<T>.Execute","System.Data.Objects.ObjectQuery<T>.GroupBy","System.Data.Objects.ObjectQuery<T>.Include","System.Data.Objects.ObjectQuery<T>.Intersect","System.Data.Objects.ObjectQuery<T>.Name","System.Data.Objects.ObjectQuery<T>.OfType<TResultType>","System.Data.Objects.ObjectQuery<T>.OrderBy","System.Data.Objects.ObjectQuery<T>.Select","System.Data.Objects.ObjectQuery<T>.SelectValue<TResultType>","System.Data.Objects.ObjectQuery<T>.Skip","System.Data.Objects.ObjectQuery<T>.IEnumerable<T>.GetEnumerator","System.Data.Objects.ObjectQuery<T>.Top","System.Data.Objects.ObjectQuery<T>.Union","System.Data.Objects.ObjectQuery<T>.UnionAll","System.Data.Objects.ObjectQuery<T>.Where"],"api_location":["System.Data.Entity.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Objects.ObjectQuery`1","System::Data::Objects::ObjectQuery`1","System.Data.Objects.ObjectQuery`1.#ctor","System::Data::Objects::ObjectQuery`1::#ctor","System.Data.Objects.ObjectQuery`1.Distinct","System::Data::Objects::ObjectQuery`1::Distinct","System.Data.Objects.ObjectQuery`1.Except","System::Data::Objects::ObjectQuery`1::Except","System.Data.Objects.ObjectQuery`1.Execute","System::Data::Objects::ObjectQuery`1::Execute","System.Data.Objects.ObjectQuery`1.GroupBy","System::Data::Objects::ObjectQuery`1::GroupBy","System.Data.Objects.ObjectQuery`1.Include","System::Data::Objects::ObjectQuery`1::Include","System.Data.Objects.ObjectQuery`1.Intersect","System::Data::Objects::ObjectQuery`1::Intersect","System.Data.Objects.ObjectQuery`1.Name","System::Data::Objects::ObjectQuery`1::Name","System.Data.Objects.ObjectQuery`1.OfType``1","System::Data::Objects::ObjectQuery`1::OfType``1","System.Data.Objects.ObjectQuery`1.OrderBy","System::Data::Objects::ObjectQuery`1::OrderBy","System.Data.Objects.ObjectQuery`1.Select","System::Data::Objects::ObjectQuery`1::Select","System.Data.Objects.ObjectQuery`1.SelectValue``1","System::Data::Objects::ObjectQuery`1::SelectValue``1","System.Data.Objects.ObjectQuery`1.Skip","System::Data::Objects::ObjectQuery`1::Skip","System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator","System::Data::Objects::ObjectQuery`1::System#Collections#Generic#IEnumerable{T}#GetEnumerator","System.Data.Objects.ObjectQuery`1.Top","System::Data::Objects::ObjectQuery`1::Top","System.Data.Objects.ObjectQuery`1.Union","System::Data::Objects::ObjectQuery`1::Union","System.Data.Objects.ObjectQuery`1.UnionAll","System::Data::Objects::ObjectQuery`1::UnionAll","System.Data.Objects.ObjectQuery`1.Where","System::Data::Objects::ObjectQuery`1::Where"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"24005a97-4b53-3d6e-f2ff-c31226496261","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Data.Objects\\ObjectQuery`1.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.Objects/ObjectQuery`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ObjectQuery<T> class | Microsoft Docs","_op_ogTitle":"ObjectQuery<T> class","description":"Represents a typed query against a conceptual model in a given object context.\n","toc_asset_id":"_splitted/System.Data.Objects/toc.json","toc_rel":"_splitted/System.Data.Objects/toc.json","source_url":"","ms.assetid":"System.Data.Objects.ObjectQuery`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.objects.objectquery-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.objects.objectquery-1","fileRelativePath":"System.Data.Objects.ObjectQuery-1.html"},"themesRelativePathToOutputRoot":"_themes/"}