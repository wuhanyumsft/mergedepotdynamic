{"content":"    \r\n    <h1 id=\"System_Net_Sockets_NetworkStream\">\r\n      <span class=\"lang-csharp\">NetworkStream</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the underlying stream of data for network access.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class NetworkStream : System.IO.Stream</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">NetworkStream</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close\" data-linktype=\"relative-path\">Close()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_\" data-linktype=\"relative-path\">CopyTo(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyTo(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_\" data-linktype=\"relative-path\">CopyToAsync(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CreateWaitHandle\" data-linktype=\"relative-path\">CreateWaitHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ObjectInvariant\" data-linktype=\"relative-path\">ObjectInvariant()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadByte\" data-linktype=\"relative-path\">ReadByte()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Synchronized_System_IO_Stream_\" data-linktype=\"relative-path\">Synchronized(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteByte_System_Byte_\" data-linktype=\"relative-path\">WriteByte(Byte)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The NetworkStream class provides methods for sending and receiving data over <a class=\"xref\" href=\"system.net.sockets.sockettype\" data-linktype=\"relative-path\">SocketType</a> sockets in blocking mode. For more information about blocking versus nonblocking <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>s, see <a href=\"../Topic/Using%20an%20Asynchronous%20Client%20Socket.md\" data-linktype=\"relative-path\">Using an Asynchronous Client Socket</a>. You can use the NetworkStream class for both synchronous and asynchronous data transfer. For more information about synchronous and asynchronous communication, see <a href=\"../Topic/Sockets.md\" data-linktype=\"relative-path\">Sockets</a>.  </p>\n<p> To create a NetworkStream, you must provide a connected <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. You can also specify what <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> permission the NetworkStream has over the provided <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. By default, closing the NetworkStream does not close the provided <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. If you want the NetworkStream to have permission to close the provided <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>, you must specify <code>true</code> for the value of the <code>ownsSocket</code> parameter.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> and <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> methods for simple single thread synchronous blocking I/O. If you want to process your I/O using separate threads, consider using the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> and <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> methods, or the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> and <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> methods for communication.  </p>\n<p> The NetworkStream does not support random access to the network data stream. The value of the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property, which indicates whether the stream supports seeking, is always <code>false</code>; reading the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Position_\" data-linktype=\"relative-path\">Position</a> property, reading the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Length_\" data-linktype=\"relative-path\">Length</a> property, or calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Seek_\" data-linktype=\"relative-path\">Seek</a> method will throw a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> Read and write operations can be performed simultaneously on an instance of the NetworkStream class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_\" data-linktype=\"self-bookmark\">NetworkStream(Socket)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_System_Boolean_\" data-linktype=\"self-bookmark\">NetworkStream(Socket,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> with the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> ownership.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_System_IO_FileAccess_\" data-linktype=\"self-bookmark\">NetworkStream(Socket,FileAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> with the specified access rights.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_System_IO_FileAccess_System_Boolean_\" data-linktype=\"self-bookmark\">NetworkStream(Socket,FileAccess,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> with the specified access rights and the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> ownership.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_CanRead\" data-linktype=\"self-bookmark\">CanRead</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> supports reading.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_CanSeek\" data-linktype=\"self-bookmark\">CanSeek</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns <code>false</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_CanTimeout\" data-linktype=\"self-bookmark\">CanTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether timeout properties are usable for <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_CanWrite\" data-linktype=\"self-bookmark\">CanWrite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> supports writing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_DataAvailable\" data-linktype=\"self-bookmark\">DataAvailable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether data is available on the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to be read.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Length\" data-linktype=\"self-bookmark\">Length</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the length of the data available on the stream. This property is not currently supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Position\" data-linktype=\"self-bookmark\">Position</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the current position in the stream. This property is not currently supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Readable\" data-linktype=\"self-bookmark\">Readable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> can be read.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_ReadTimeout\" data-linktype=\"self-bookmark\">ReadTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time that a read operation blocks waiting for data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Socket\" data-linktype=\"self-bookmark\">Socket</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Writeable\" data-linktype=\"self-bookmark\">Writeable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_WriteTimeout\" data-linktype=\"self-bookmark\">WriteTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time that a write operation blocks waiting for data.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous write to a stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Close_System_Int32_\" data-linktype=\"self-bookmark\">Close(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> after waiting the specified time to allow data to be sent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_EndRead_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndRead(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Handles the end of an asynchronous read.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_EndWrite_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndWrite(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Handles the end of an asynchronous write.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Flushes data from the stream. This method is reserved for future use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_FlushAsync_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">FlushAsync(CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Flushes data from the stream as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Read_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Read(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads data from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Seek_System_Int64_System_IO_SeekOrigin_\" data-linktype=\"self-bookmark\">Seek(Int64,SeekOrigin)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the current position of the stream to the given value. This method is not currently supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_SetLength_System_Int64_\" data-linktype=\"self-bookmark\">SetLength(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the length of the stream. This method always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_NetworkStream_Write_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes data to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkStream(Socket)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkStream (System.Net.Sockets.Socket socket);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>socket</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> will use to send and receive data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is not connected.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Net.Sockets.Socket.SocketType*</span> property of the <code>socket</code> parameter is not <a class=\"xref\" href=\"system.net.sockets.sockettype\" data-linktype=\"relative-path\">SocketType</a>.  </p>\n<p> -or-  </p>\n<p> The <code>socket</code> parameter is in a nonblocking state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is created with read/write access to the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> does not own the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>, so calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Close_\" data-linktype=\"relative-path\">Close</a> method does not close the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to create a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> with a <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#2\">         &#39; Examples for constructors that do not specify file permission.\n         &#39; Create the NetworkStream for communicating with the remote host.\n         Dim myNetworkStream As NetworkStream\n         \n         If networkStreamOwnsSocket Then\n            myNetworkStream = New NetworkStream(mySocket, True)\n         Else\n            myNetworkStream = New NetworkStream(mySocket)\n         End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#2\">      // Examples for constructors that do not specify file permission.\n      // Create the NetworkStream for communicating with the remote host.\n      NetworkStream^ myNetworkStream;\n\n      if ( networkStreamOwnsSocket )\n      {\n         myNetworkStream = gcnew NetworkStream( mySocket,true );\n      }\n      else\n      {\n         myNetworkStream = gcnew NetworkStream( mySocket );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#2\">            // Examples for constructors that do not specify file permission.\n            \n            // Create the NetworkStream for communicating with the remote host.\n            NetworkStream myNetworkStream;\n            \n            if (networkStreamOwnsSocket){\n                 myNetworkStream = new NetworkStream(mySocket, true);          \n            }\n            else{\n                 myNetworkStream = new NetworkStream(mySocket);     \n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkStream(Socket,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> with the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> ownership.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>socket</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> will use to send and receive data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownsSocket</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Set to <code>true</code> to indicate that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> will take ownership of the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is not connected.  </p>\n<p> -or-  </p>\n<p> the value of the <span class=\"xref\">stem.Net.Sockets.Socket.SocketType*</span> property of the <code>socket</code> parameter is not <a class=\"xref\" href=\"system.net.sockets.sockettype\" data-linktype=\"relative-path\">SocketType</a>.  </p>\n<p> -or-  </p>\n<p> the <code>socket</code> parameter is in a nonblocking state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is created with read/write access to the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. If the value of <code>ownsSocket</code> parameter is <code>true</code>, the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> takes ownership of the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>, and calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Close_\" data-linktype=\"relative-path\">Close</a> method also closes the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> with ownership of the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#2\">         &#39; Examples for constructors that do not specify file permission.\n         &#39; Create the NetworkStream for communicating with the remote host.\n         Dim myNetworkStream As NetworkStream\n         \n         If networkStreamOwnsSocket Then\n            myNetworkStream = New NetworkStream(mySocket, True)\n         Else\n            myNetworkStream = New NetworkStream(mySocket)\n         End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#2\">      // Examples for constructors that do not specify file permission.\n      // Create the NetworkStream for communicating with the remote host.\n      NetworkStream^ myNetworkStream;\n\n      if ( networkStreamOwnsSocket )\n      {\n         myNetworkStream = gcnew NetworkStream( mySocket,true );\n      }\n      else\n      {\n         myNetworkStream = gcnew NetworkStream( mySocket );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#2\">            // Examples for constructors that do not specify file permission.\n            \n            // Create the NetworkStream for communicating with the remote host.\n            NetworkStream myNetworkStream;\n            \n            if (networkStreamOwnsSocket){\n                 myNetworkStream = new NetworkStream(mySocket, true);          \n            }\n            else{\n                 myNetworkStream = new NetworkStream(mySocket);     \n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_System_IO_FileAccess_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkStream(Socket,FileAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> with the specified access rights.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>socket</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> will use to send and receive data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values that specify the type of access given to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> over the provided <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is not connected.  </p>\n<p> -or-  </p>\n<p> the <span class=\"xref\">stem.Net.Sockets.Socket.SocketType*</span> property of the <code>socket</code> parameter is not <a class=\"xref\" href=\"system.net.sockets.sockettype\" data-linktype=\"relative-path\">SocketType</a>.  </p>\n<p> -or-  </p>\n<p> the <code>socket</code> parameter is in a nonblocking state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is created with the specified access to the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. With this constructor, the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> does not own the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>, so calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Close_\" data-linktype=\"relative-path\">Close</a> method does not close the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.  </p>\n<p> The <code>access</code> parameter sets the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> and <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanWrite_\" data-linktype=\"relative-path\">CanWrite</a> properties of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. If you specify <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, then the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. If you specify <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, then the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method. If you specify <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, both method calls are allowed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> with the ability to read and write to the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Async_SendAndReceive#1\">         &#39; Example for creating a NetworkStreams\n         mySocket.Connect(myIpEndPoint)\n         \n         &#39; Create the NetworkStream for communicating with the remote host.\n         Dim myNetworkStream As NetworkStream\n         \n         If networkStreamOwnsSocket Then\n            myNetworkStream = New NetworkStream(mySocket, FileAccess.ReadWrite, True)\n         Else\n            myNetworkStream = New NetworkStream(mySocket, FileAccess.ReadWrite)\n         End If\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Async_SendAndReceive#1\">            // Example for creating a NetworkStreams\n            \n            mySocket.Connect(myIpEndPoint);\n                     \n            // Create the NetworkStream for communicating with the remote host.\n            NetworkStream myNetworkStream;\n            \n            if (networkStreamOwnsSocket){\n                 myNetworkStream = new NetworkStream(mySocket, FileAccess.ReadWrite, true);          \n            }\n            else{\n                 myNetworkStream = new NetworkStream(mySocket, FileAccess.ReadWrite);     \n            }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Async_SendAndReceive#1\">         // Example for creating a NetworkStreams\n         mySocket-&gt;Connect( myIpEndPoint );\n\n         // Create the NetworkStream for communicating with the remote host.\n         NetworkStream^ myNetworkStream;\n         if ( networkStreamOwnsSocket )\n         {\n            myNetworkStream = gcnew NetworkStream( mySocket,FileAccess::ReadWrite,true );\n         }\n         else\n         {\n            myNetworkStream = gcnew NetworkStream( mySocket,FileAccess::ReadWrite );\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream__ctor_System_Net_Sockets_Socket_System_IO_FileAccess_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkStream(Socket,FileAccess,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class for the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> with the specified access rights and the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> ownership.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>socket</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> will use to send and receive data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> values that specifies the type of access given to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> over the provided <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownsSocket</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Set to <code>true</code> to indicate that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> will take ownership of the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The <code>socket</code> parameter is not connected.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Net.Sockets.Socket.SocketType*</span> property of the <code>socket</code> parameter is not <a class=\"xref\" href=\"system.net.sockets.sockettype\" data-linktype=\"relative-path\">SocketType</a>.  </p>\n<p> -or-  </p>\n<p> The <code>socket</code> parameter is in a nonblocking state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is created with read/write access to the specified <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. If the value of the <code>ownsSocket</code> parameter is <code>true</code>, the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> takes ownership of the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>, and calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Close_\" data-linktype=\"relative-path\">Close</a> method also closes the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.  </p>\n<p> The <code>access</code> parameter sets the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> and <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanWrite_\" data-linktype=\"relative-path\">CanWrite</a> properties of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. If you specify <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, then the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. If you specify <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, then the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method. If you specify <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a>, both method calls are allowed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> with the ability to read and write to the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. Ownership of the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is given to this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> by specifying <code>true</code> for the <code>ownsSocket</code> parameter.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Async_SendAndReceive#1\">         &#39; Example for creating a NetworkStreams\n         mySocket.Connect(myIpEndPoint)\n         \n         &#39; Create the NetworkStream for communicating with the remote host.\n         Dim myNetworkStream As NetworkStream\n         \n         If networkStreamOwnsSocket Then\n            myNetworkStream = New NetworkStream(mySocket, FileAccess.ReadWrite, True)\n         Else\n            myNetworkStream = New NetworkStream(mySocket, FileAccess.ReadWrite)\n         End If\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Async_SendAndReceive#1\">            // Example for creating a NetworkStreams\n            \n            mySocket.Connect(myIpEndPoint);\n                     \n            // Create the NetworkStream for communicating with the remote host.\n            NetworkStream myNetworkStream;\n            \n            if (networkStreamOwnsSocket){\n                 myNetworkStream = new NetworkStream(mySocket, FileAccess.ReadWrite, true);          \n            }\n            else{\n                 myNetworkStream = new NetworkStream(mySocket, FileAccess.ReadWrite);     \n            }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Async_SendAndReceive#1\">         // Example for creating a NetworkStreams\n         mySocket-&gt;Connect( myIpEndPoint );\n\n         // Create the NetworkStream for communicating with the remote host.\n         NetworkStream^ myNetworkStream;\n         if ( networkStreamOwnsSocket )\n         {\n            myNetworkStream = gcnew NetworkStream( mySocket,FileAccess::ReadWrite,true );\n         }\n         else\n         {\n            myNetworkStream = gcnew NetworkStream( mySocket,FileAccess::ReadWrite );\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_CanRead\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_CanRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRead</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> supports reading.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanRead { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data can be read from the stream; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If CanRead is <code>true</code>, <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method. Provide the appropriate <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> enumerated value in the constructor to set the readability and writability of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. The CanRead property is set when the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is initialized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example checks CanRead to verify that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is readable. It then performs a read operation on the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#4\">         &#39; Examples for CanRead, Read, and DataAvailable.\n         &#39; Check to see if this NetworkStream is readable.\n         If myNetworkStream.CanRead Then\n            Dim myReadBuffer(1024) As Byte\n                Dim myCompleteMessage As StringBuilder = New StringBuilder()\n            Dim numberOfBytesRead As Integer = 0\n            \n            &#39; Incoming message may be larger than the buffer size.\n            Do\n               numberOfBytesRead = myNetworkStream.Read(myReadBuffer, 0, myReadBuffer.Length)\n                    myCompleteMessage.AppendFormat(&quot;{0}&quot;, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead))\n            Loop While myNetworkStream.DataAvailable\n            \n            &#39; Print out the received message to the console.\n                Console.WriteLine((&quot;You received the following message : &quot; + myCompleteMessage.ToString()))\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#4\">      // Examples for CanRead, Read, and DataAvailable.\n      // Check to see if this NetworkStream is readable.\n      if ( myNetworkStream-&gt;CanRead )\n      {\n         array&lt;Byte&gt;^ myReadBuffer = gcnew array&lt;Byte&gt;(1024);\n         String^ myCompleteMessage = &quot;&quot;;\n         int numberOfBytesRead = 0;\n         \n         // Incoming message may be larger than the buffer size.\n         do\n         {\n            numberOfBytesRead = myNetworkStream-&gt;Read( myReadBuffer, 0,\n               myReadBuffer-&gt;Length );\n            myCompleteMessage = String::Concat( myCompleteMessage,\n               Encoding::ASCII-&gt;GetString( myReadBuffer, 0, numberOfBytesRead ) );\n         }\n         while ( myNetworkStream-&gt;DataAvailable );\n         \n         // Print out the received message to the console.\n         Console::WriteLine( &quot;You received the following message : {0}&quot;,\n            myCompleteMessage );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Sorry.  You cannot read from this NetworkStream.&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#4\">            // Examples for CanRead, Read, and DataAvailable.\n           \n            // Check to see if this NetworkStream is readable.\n            if(myNetworkStream.CanRead){\n                byte[] myReadBuffer = new byte[1024];\n                StringBuilder myCompleteMessage = new StringBuilder();\n                int numberOfBytesRead = 0;\n\n                // Incoming message may be larger than the buffer size.\n                do{\n                     numberOfBytesRead = myNetworkStream.Read(myReadBuffer, 0, myReadBuffer.Length);\n\n\t\t\t\t\t myCompleteMessage.AppendFormat(&quot;{0}&quot;, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead));\n\t\t\t\t \t\t\t\t\t\n                }\n                while(myNetworkStream.DataAvailable);\n\n                // Print out the received message to the console.\n                Console.WriteLine(&quot;You received the following message : &quot; +\n                                             myCompleteMessage);\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_CanSeek\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_CanSeek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanSeek</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns <code>false</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanSeek { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases to indicate that <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> cannot seek a specific location in the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_CanTimeout\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_CanTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether timeout properties are usable for <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanTimeout { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is present because it is inherited from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_CanWrite\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_CanWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWrite</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> supports writing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanWrite { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data can be written to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If CanWrite is <code>true</code>, <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. Provide the appropriate <a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a> enumerated value in the constructor to set the readability and writability of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. The CanWrite property is set when the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is initialized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example checks CanWrite to verify that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable. It then performs a write operation on the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#3\">         &#39; Examples for CanWrite, and CanWrite  \n         &#39; Check to see if this NetworkStream is writable.\n         If myNetworkStream.CanWrite Then\n            \n            Dim myWriteBuffer As Byte() = Encoding.ASCII.GetBytes(&quot;Are you receiving this message?&quot;)\n            myNetworkStream.Write(myWriteBuffer, 0, myWriteBuffer.Length)\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot write to this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#3\">      // Examples for CanWrite, and CanWrite  \n      // Check to see if this NetworkStream is writable.\n      if ( myNetworkStream-&gt;CanWrite )\n      {\n         array&lt;Byte&gt;^ myWriteBuffer = Encoding::ASCII-&gt;GetBytes(\n            &quot;Are you receiving this message?&quot; );\n         myNetworkStream-&gt;Write( myWriteBuffer, 0, myWriteBuffer-&gt;Length );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Sorry.  You cannot write to this NetworkStream.&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#3\">            // Examples for CanWrite, and CanWrite  \n           \n            // Check to see if this NetworkStream is writable.\n            if (myNetworkStream.CanWrite){\n               \n                 byte[] myWriteBuffer = Encoding.ASCII.GetBytes(&quot;Are you receiving this message?&quot;);\n                 myNetworkStream.Write(myWriteBuffer, 0, myWriteBuffer.Length);\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot write to this NetworkStream.&quot;);  \n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_DataAvailable\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_DataAvailable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataAvailable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether data is available on the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to be read.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool DataAvailable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data is available on the stream to be read; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>Use the <span class=\"xref\">stem.Net.Sockets.SocketException.ErrorCode*</span> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataAvailable property to determine if data is ready to be read. If DataAvailable is <code>true</code>, a call to <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> returns immediately. If the remote host shuts down or closes the connection, DataAvailable may throw a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example reads from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> as long as data is available.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#4\">         &#39; Examples for CanRead, Read, and DataAvailable.\n         &#39; Check to see if this NetworkStream is readable.\n         If myNetworkStream.CanRead Then\n            Dim myReadBuffer(1024) As Byte\n                Dim myCompleteMessage As StringBuilder = New StringBuilder()\n            Dim numberOfBytesRead As Integer = 0\n            \n            &#39; Incoming message may be larger than the buffer size.\n            Do\n               numberOfBytesRead = myNetworkStream.Read(myReadBuffer, 0, myReadBuffer.Length)\n                    myCompleteMessage.AppendFormat(&quot;{0}&quot;, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead))\n            Loop While myNetworkStream.DataAvailable\n            \n            &#39; Print out the received message to the console.\n                Console.WriteLine((&quot;You received the following message : &quot; + myCompleteMessage.ToString()))\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#4\">      // Examples for CanRead, Read, and DataAvailable.\n      // Check to see if this NetworkStream is readable.\n      if ( myNetworkStream-&gt;CanRead )\n      {\n         array&lt;Byte&gt;^ myReadBuffer = gcnew array&lt;Byte&gt;(1024);\n         String^ myCompleteMessage = &quot;&quot;;\n         int numberOfBytesRead = 0;\n         \n         // Incoming message may be larger than the buffer size.\n         do\n         {\n            numberOfBytesRead = myNetworkStream-&gt;Read( myReadBuffer, 0,\n               myReadBuffer-&gt;Length );\n            myCompleteMessage = String::Concat( myCompleteMessage,\n               Encoding::ASCII-&gt;GetString( myReadBuffer, 0, numberOfBytesRead ) );\n         }\n         while ( myNetworkStream-&gt;DataAvailable );\n         \n         // Print out the received message to the console.\n         Console::WriteLine( &quot;You received the following message : {0}&quot;,\n            myCompleteMessage );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Sorry.  You cannot read from this NetworkStream.&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#4\">            // Examples for CanRead, Read, and DataAvailable.\n           \n            // Check to see if this NetworkStream is readable.\n            if(myNetworkStream.CanRead){\n                byte[] myReadBuffer = new byte[1024];\n                StringBuilder myCompleteMessage = new StringBuilder();\n                int numberOfBytesRead = 0;\n\n                // Incoming message may be larger than the buffer size.\n                do{\n                     numberOfBytesRead = myNetworkStream.Read(myReadBuffer, 0, myReadBuffer.Length);\n\n\t\t\t\t\t myCompleteMessage.AppendFormat(&quot;{0}&quot;, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead));\n\t\t\t\t \t\t\t\t\t\n                }\n                while(myNetworkStream.DataAvailable);\n\n                // Print out the received message to the console.\n                Console.WriteLine(&quot;You received the following message : &quot; +\n                                             myCompleteMessage);\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Length\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Length_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Length</div>        \r\n          </div>\r\n    \r\n            <p>Gets the length of the data available on the stream. This property is not currently supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Length { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The length of the data available on the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Any use of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Position\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Position_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Position</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the current position in the stream. This property is not currently supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Position { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The current position in the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Any use of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Readable\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Readable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Readable</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> can be read.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool Readable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to indicate that the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> can be read; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must derive from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class to use the Readable property. If Readable is <code>true</code>, <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method. You can also determine whether a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is readable by checking the publicly accessible <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> property.  </p>\n<p> The Readable property is set when the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is initialized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following code example, the <code>CanCommunicate</code> property checks the Readable property to determine if the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is readable.  </p>\n<pre><code class=\"lang-cpp\" name=\"NetworkStream_Protected_Members#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::Net::Sockets;\n\nref class MyNetworkStream_Sub_Class: public NetworkStream\n{\npublic:\n   MyNetworkStream_Sub_Class( System::Net::Sockets::Socket^ socket, bool ownsSocket )\n      : NetworkStream( socket, ownsSocket )\n   {\n   }\n\n   property bool IsConnected \n   {\n      // You can use the Socket method to examine the underlying Socket.\n      bool get()\n      {\n         return this-&gt;Socket-&gt;Connected;\n      }\n   }\n\n   property bool CanCommunicate \n   {\n      bool get()\n      {\n         if ( !this-&gt;Readable | !this-&gt;Writeable )\n         {\n            return false;\n         }\n         else\n         {\n            return true;\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Protected_Members#1\">using System;\nusing System.Net;\nusing System.Net.Sockets;\n\n\npublic class MyNetworkStream_Sub_Class : NetworkStream\n{\n\n    public MyNetworkStream_Sub_Class(Socket socket, bool ownsSocket) :\n        base(socket, ownsSocket)\n    {\n    }\n    // You can use the Socket method to examine the underlying Socket.\n    public bool IsConnected\n    {\n        get\n        {\n            return this.Socket.Connected;\n        } \n    }\n \n    public bool CanCommunicate\n    {\n        get\n        {\n            if (!this.Readable | !this.Writeable)\n            {\n                return false;\n            }\n            else\n            {\n                return true;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkStream_Protected_Members#1\">Public Class MyNetworkStream_Sub_Class\n   Inherits NetworkStream\n   \n   \n   Public Sub New(socket As Socket, ownsSocket As Boolean)\n      MyBase.New(socket, ownsSocket)\n   End Sub &#39;New\n   \n   &#39; Suppose you wanted a property for determining if Socket is connected. You can use\n   &#39; the protected method &#39;Socket&#39; to return underlying Socket.\n   \n   Public ReadOnly Property IsConnected() As Boolean\n      Get\n         Return Me.Socket.Connected\n      End Get\n   End Property\n   \n   &#39; You could also use public NetworkStream methods &#39;CanRead&#39; and &#39;CanWrite&#39;.\n   \n   Public ReadOnly Property CanCommunicate() As Boolean\n      Get\n         If Not Me.Readable Or Not Me.Writeable  Then\n            Return False\n         Else\n            Return True\n         End If\n      End Get\n   End Property\n    \n   Public Shared Sub DoSomethingSignificant()\n   End Sub &#39;DoSomethingSignificant\n    &#39; Do something significant in here\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_ReadTimeout\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_ReadTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time that a read operation blocks waiting for data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int ReadTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>, specifies that the read operation does not time out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value specified is less than or equal to zero and is not <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the read operation does not complete within the time specified by this property, the read operation throws an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property affects only synchronous reads performed by calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method. This property does not affect asynchronous reads performed by calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the read time-out for a network stream to 10 milliseconds.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLTcpClientSync#2\">\t\t\t// Create a client that will connect to a \n            // server listening on the contosoServer computer\n            // at port 11000.\n            TcpClient tcpClient = new TcpClient();\n            tcpClient.Connect(&quot;contosoServer&quot;, 11000);\n            // Get the stream used to read the message sent by the server.\n            NetworkStream networkStream = tcpClient.GetStream();\n            // Set a 10 millisecond timeout for reading.\n            networkStream.ReadTimeout = 10;\n            // Read the server message into a byte buffer.\n            byte[] bytes = new byte[1024];\n            networkStream.Read(bytes, 0, 1024);\n            //Convert the server&#39;s message into a string and display it.\n            string data = Encoding.UTF8.GetString(bytes);\n            Console.WriteLine(&quot;Server sent message: {0}&quot;, data);\n            networkStream.Close();\n            tcpClient.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Socket\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Socket_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Socket</div>        \r\n          </div>\r\n    \r\n            <p>Gets the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Net.Sockets.Socket Socket { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> that represents the underlying network connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes deriving from <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> can use this property to get the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. Use the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> returned from the Socket property if you require access beyond that which <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> provides.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property is accessible only through this class or a derived class.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example retrieves the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> to verify an active connection.  </p>\n<pre><code class=\"lang-cpp\" name=\"NetworkStream_Protected_Members#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::Net::Sockets;\n\nref class MyNetworkStream_Sub_Class: public NetworkStream\n{\npublic:\n   MyNetworkStream_Sub_Class( System::Net::Sockets::Socket^ socket, bool ownsSocket )\n      : NetworkStream( socket, ownsSocket )\n   {\n   }\n\n   property bool IsConnected \n   {\n      // You can use the Socket method to examine the underlying Socket.\n      bool get()\n      {\n         return this-&gt;Socket-&gt;Connected;\n      }\n   }\n\n   property bool CanCommunicate \n   {\n      bool get()\n      {\n         if ( !this-&gt;Readable | !this-&gt;Writeable )\n         {\n            return false;\n         }\n         else\n         {\n            return true;\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Protected_Members#1\">using System;\nusing System.Net;\nusing System.Net.Sockets;\n\n\npublic class MyNetworkStream_Sub_Class : NetworkStream\n{\n\n    public MyNetworkStream_Sub_Class(Socket socket, bool ownsSocket) :\n        base(socket, ownsSocket)\n    {\n    }\n    // You can use the Socket method to examine the underlying Socket.\n    public bool IsConnected\n    {\n        get\n        {\n            return this.Socket.Connected;\n        } \n    }\n \n    public bool CanCommunicate\n    {\n        get\n        {\n            if (!this.Readable | !this.Writeable)\n            {\n                return false;\n            }\n            else\n            {\n                return true;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkStream_Protected_Members#1\">Public Class MyNetworkStream_Sub_Class\n   Inherits NetworkStream\n   \n   \n   Public Sub New(socket As Socket, ownsSocket As Boolean)\n      MyBase.New(socket, ownsSocket)\n   End Sub &#39;New\n   \n   &#39; Suppose you wanted a property for determining if Socket is connected. You can use\n   &#39; the protected method &#39;Socket&#39; to return underlying Socket.\n   \n   Public ReadOnly Property IsConnected() As Boolean\n      Get\n         Return Me.Socket.Connected\n      End Get\n   End Property\n   \n   &#39; You could also use public NetworkStream methods &#39;CanRead&#39; and &#39;CanWrite&#39;.\n   \n   Public ReadOnly Property CanCommunicate() As Boolean\n      Get\n         If Not Me.Readable Or Not Me.Writeable  Then\n            Return False\n         Else\n            Return True\n         End If\n      End Get\n   End Property\n    \n   Public Shared Sub DoSomethingSignificant()\n   End Sub &#39;DoSomethingSignificant\n    &#39; Do something significant in here\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Writeable\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Writeable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Writeable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool Writeable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data can be written to the stream; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must derive from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class to use the Writeable property. If Writeable is <code>true</code>, <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> allows calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. You can also determine whether a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable by checking the publicly accessible <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanWrite_\" data-linktype=\"relative-path\">CanWrite</a> property.  </p>\n<p> The Writeable property is set when the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is initialized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following code example, the <code>CanCommunicate</code> property checks the Writeable property to determine if the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable.  </p>\n<pre><code class=\"lang-cpp\" name=\"NetworkStream_Protected_Members#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::Net::Sockets;\n\nref class MyNetworkStream_Sub_Class: public NetworkStream\n{\npublic:\n   MyNetworkStream_Sub_Class( System::Net::Sockets::Socket^ socket, bool ownsSocket )\n      : NetworkStream( socket, ownsSocket )\n   {\n   }\n\n   property bool IsConnected \n   {\n      // You can use the Socket method to examine the underlying Socket.\n      bool get()\n      {\n         return this-&gt;Socket-&gt;Connected;\n      }\n   }\n\n   property bool CanCommunicate \n   {\n      bool get()\n      {\n         if ( !this-&gt;Readable | !this-&gt;Writeable )\n         {\n            return false;\n         }\n         else\n         {\n            return true;\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Protected_Members#1\">using System;\nusing System.Net;\nusing System.Net.Sockets;\n\n\npublic class MyNetworkStream_Sub_Class : NetworkStream\n{\n\n    public MyNetworkStream_Sub_Class(Socket socket, bool ownsSocket) :\n        base(socket, ownsSocket)\n    {\n    }\n    // You can use the Socket method to examine the underlying Socket.\n    public bool IsConnected\n    {\n        get\n        {\n            return this.Socket.Connected;\n        } \n    }\n \n    public bool CanCommunicate\n    {\n        get\n        {\n            if (!this.Readable | !this.Writeable)\n            {\n                return false;\n            }\n            else\n            {\n                return true;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkStream_Protected_Members#1\">Public Class MyNetworkStream_Sub_Class\n   Inherits NetworkStream\n   \n   \n   Public Sub New(socket As Socket, ownsSocket As Boolean)\n      MyBase.New(socket, ownsSocket)\n   End Sub &#39;New\n   \n   &#39; Suppose you wanted a property for determining if Socket is connected. You can use\n   &#39; the protected method &#39;Socket&#39; to return underlying Socket.\n   \n   Public ReadOnly Property IsConnected() As Boolean\n      Get\n         Return Me.Socket.Connected\n      End Get\n   End Property\n   \n   &#39; You could also use public NetworkStream methods &#39;CanRead&#39; and &#39;CanWrite&#39;.\n   \n   Public ReadOnly Property CanCommunicate() As Boolean\n      Get\n         If Not Me.Readable Or Not Me.Writeable  Then\n            Return False\n         Else\n            Return True\n         End If\n      End Get\n   End Property\n    \n   Public Shared Sub DoSomethingSignificant()\n   End Sub &#39;DoSomethingSignificant\n    &#39; Do something significant in here\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_WriteTimeout\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_WriteTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time that a write operation blocks waiting for data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int WriteTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>, specifies that the write operation does not time out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value specified is less than or equal to zero and is not <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the write operation does not complete within the time specified by this property, the write operation throws a <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property affects only synchronous write operations performed by calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. This property does not affect asynchronous writes performed by calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the write time-out for a network stream to 10 milliseconds.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLTcpServerSync#0\">#using &lt;System.dll&gt;\nusing namespace System;\nusing namespace System::Text;\nusing namespace System::Net;\nusing namespace System::Net::Sockets;\n\nint main()\n{\n    // Create the server side connection and\n    // start listening for clients.\n    TcpListener^ tcpListener = gcnew TcpListener(IPAddress::Any, 11000);\n    tcpListener-&gt;Start();\n    Console::WriteLine(&quot;Waiting for a connection....&quot;);\n\n    // Accept the pending client connection.\n    TcpClient^ tcpClient = tcpListener-&gt;AcceptTcpClient();\n    Console::WriteLine(&quot;Connection accepted.&quot;);\n    // Get the stream to write the message\n    // that will be sent to the client.\n    NetworkStream^ networkStream = tcpClient-&gt;GetStream();\n    String^ responseString = &quot;Hello.&quot;;\n    // Set the write timeout to 10 millseconds.\n    networkStream-&gt;WriteTimeout = 10;\n    // Convert the message to a byte array and sent it to the client.\n    array&lt;Byte&gt;^ sendBytes = Encoding::UTF8-&gt;GetBytes(responseString);\n    networkStream-&gt;Write(sendBytes, 0, sendBytes-&gt;Length);\n    Console::WriteLine(&quot;Message Sent.&quot;);\n    // Close the connection to the client.\n    tcpClient-&gt;Close();\n    // Stop listening for incoming connections\n    // and close the server.\n    tcpListener-&gt;Stop();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLTcpServerSync#0\">using System;\nusing System.Text;\nusing System.Net;\nusing System.Net.Sockets;\n\nnamespace Examples.System.Net\n{\n    public class TCPListenerExample\n    {\n        public static void Main()\n        {\n            // Create the server side connection and \n            // start listening for clients.\n            TcpListener tcpListener = new TcpListener(IPAddress.Any,11000);\n            tcpListener.Start();\n            Console.WriteLine(&quot;Waiting for a connection....&quot;);\n\n            // Accept the pending client connection.\n            TcpClient tcpClient = tcpListener.AcceptTcpClient();\n            Console.WriteLine(&quot;Connection accepted.&quot;);\n            // Get the stream to write the message \n            // that will be sent to the client.\n            NetworkStream networkStream = tcpClient.GetStream();\n            string responseString = &quot;Hello.&quot;;\n            // Set the write timeout to 10 millseconds.\n            networkStream.WriteTimeout = 10;\n            // Convert the message to a byte array and sent it to the client.\n            Byte[] sendBytes = Encoding.UTF8.GetBytes(responseString);\n            networkStream.Write(sendBytes, 0, sendBytes.Length);\n            Console.WriteLine(&quot;Message Sent.&quot;);\n            // Close the connection to the client.\n            tcpClient.Close();\n            // Stop listening for incoming connections\n            // and close the server.\n            tcpListener.Stop();\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_BeginRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> that is the location in memory to store data read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in <code>buffer</code> to begin storing the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>size</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that is executed when BeginRead completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that contains any additional user-defined data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents the asynchronous call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>offset</code> parameter is greater than the length of the <code>buffer</code> paramater.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is closed.  </p>\n<p> -or-  </p>\n<p> There was a failure while reading from the network.  </p>\n<p> -or-  </p>\n<p> An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginRead method starts asynchronously reading data from the incoming network buffers. Calling the BeginRead method gives you the ability to receive data within a separate execution thread.  </p>\n<p> You must create a callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate and pass its name to the BeginRead method. At the very minimum, your <code>state</code> parameter must contain the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information. Pass the structure or class instance to the BeginRead method through the <code>state</code> parameter.  </p>\n<p> Your callback method should call the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> method. When your application calls BeginRead, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> until the provided <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> reads data or throws an exception. If you want the original thread to block after you call the BeginRead method, use the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitOne_\" data-linktype=\"relative-path\">WaitOne</a> method. Call <a class=\"xref\" href=\"system.threading.eventwaithandle#System_Threading_EventWaitHandle_Set_\" data-linktype=\"relative-path\">Set</a> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see <a href=\"../Topic/Marshaling%20a%20Delegate%20as%20a%20Callback%20Method.md\" data-linktype=\"relative-path\">Marshaling a Delegate as a Callback Method</a>.  </p>\n<p> The BeginRead method reads as much data as is available, up to the number of bytes specified by the <code>size</code> parameter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>, check the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property to determine if it was caused by a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. If so, use the <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<p> Read and write operations can be performed simultaneously on an instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses BeginRead to read data asynchronously from the network stream. The <code>myReadCallBack</code> method implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate and is called by the system when BeginRead returns.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Async_SendAndReceive#3\">         &#39; Example of CanRead, and BeginRead.\n         &#39; Check to see if this NetworkStream is readable.\n         If myNetworkStream.CanRead Then\n            \n            Dim myReadBuffer(1024) As Byte\n            myNetworkStream.BeginRead(myReadBuffer, 0, myReadBuffer.Length, New AsyncCallback(AddressOf NetworkStream_ASync_Send_Receive.myReadCallBack), myNetworkStream)\n            \n            allDone.WaitOne()\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Async_SendAndReceive#3\">            // Example of CanRead, and BeginRead.\n\n            // Check to see if this NetworkStream is readable.\n            if(myNetworkStream.CanRead){\n            \t\n                byte[] myReadBuffer = new byte[1024];\n                myNetworkStream.BeginRead(myReadBuffer, 0, myReadBuffer.Length, \n                                                             new AsyncCallback(NetworkStream_ASync_Send_Receive.myReadCallBack), \n                                                             myNetworkStream);  \n\n                allDone.WaitOne();\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Async_SendAndReceive#3\">         // Example of CanRead, and BeginRead.\n         // Check to see if this NetworkStream is readable.\n         if ( myNetworkStream-&gt;CanRead )\n         {\n            array&lt;Byte&gt;^myReadBuffer = gcnew array&lt;Byte&gt;(1024);\n            myNetworkStream-&gt;BeginRead( myReadBuffer, 0, myReadBuffer-&gt;Length, gcnew AsyncCallback( &amp;MyNetworkStreamClass::myReadCallBack ), myNetworkStream );\n            allDone-&gt;WaitOne();\n         }\n         else\n         {\n            Console::WriteLine( &quot;Sorry.  You cannot read from this NetworkStream.&quot; );\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_BeginWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous write to a stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> that contains the data to write to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in <code>buffer</code> to begin sending the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>size</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that is executed when BeginWrite completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that contains any additional user-defined data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents the asynchronous call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is closed.  </p>\n<p> -or-  </p>\n<p> There was a failure while writing to the network.  </p>\n<p> -or-  </p>\n<p> An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginWrite method starts an asynchronous send operation to the remote host. Calling the BeginWrite method gives you the ability to send data within a separate execution thread.  </p>\n<p> You must create a callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate and pass its name to the BeginWrite method. At the very minimum, your <code>state</code> parameter must contain the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. If your callback needs more information, you can create a small class or structure to hold the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> and the other required information. Pass the structure or class instance to the BeginWrite method through the <code>state</code> parameter.  </p>\n<p> Your callback method should implement the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> method. When your application calls BeginWrite, the system uses a separate thread to execute the specified callback method, and blocks on <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> until the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> sends the number of bytes requested or throws an exception. If you want the original thread to block after you call the BeginWrite method, use the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_WaitOne_\" data-linktype=\"relative-path\">WaitOne</a> method. Call <a class=\"xref\" href=\"system.threading.eventwaithandle#System_Threading_EventWaitHandle_Set_\" data-linktype=\"relative-path\">Set</a> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see <a href=\"../Topic/Marshaling%20a%20Delegate%20as%20a%20Callback%20Method.md\" data-linktype=\"relative-path\">Marshaling a Delegate as a Callback Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>, check the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property to determine if it was caused by a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. If so, use the <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<p> Read and write operations can be performed simultaneously on an instance of the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses BeginWrite to write data asynchronously to a network stream. The <code>myWriteCallBack</code> method implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate and is called by the system when BeginWrite returns.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Async_SendAndReceive#2\">         &#39; Example of CanWrite, and BeginWrite.\n         &#39; Check to see if this NetworkStream is writable.\n         If myNetworkStream.CanWrite Then\n            \n            Dim myWriteBuffer As Byte() = Encoding.ASCII.GetBytes(&quot;Are you receiving this message?&quot;)\n            myNetworkStream.BeginWrite(myWriteBuffer, 0, myWriteBuffer.Length, New AsyncCallback(AddressOf NetworkStream_ASync_Send_Receive.myWriteCallBack), myNetworkStream)\n            allDone.WaitOne()\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot write to this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Async_SendAndReceive#2\">           //Example of CanWrite, and BeginWrite.\n           \n            // Check to see if this NetworkStream is writable.\n            if (myNetworkStream.CanWrite){\n               \n                 byte[] myWriteBuffer = Encoding.ASCII.GetBytes(&quot;Are you receiving this message?&quot;);\n                 myNetworkStream.BeginWrite(myWriteBuffer, 0, myWriteBuffer.Length, \n                                                              new AsyncCallback(NetworkStream_ASync_Send_Receive.myWriteCallBack), \n                                                              myNetworkStream);\n                 allDone.WaitOne();\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot write to this NetworkStream.&quot;);  \n            }\n           \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Async_SendAndReceive#2\">         // Example of CanWrite, and BeginWrite.\n         // Check to see if this NetworkStream is writable.\n         if ( myNetworkStream-&gt;CanWrite )\n         {\n            array&lt;Byte&gt;^myWriteBuffer = Encoding::ASCII-&gt;GetBytes( &quot;Are you receiving this message?&quot; );\n            myNetworkStream-&gt;BeginWrite( myWriteBuffer, 0, myWriteBuffer-&gt;Length, gcnew AsyncCallback( &amp;MyNetworkStreamClass::myWriteCallBack ), myNetworkStream );\n            allDone-&gt;WaitOne();\n         }\n         else\n         {\n            Console::WriteLine( &quot;Sorry.  You cannot write to this NetworkStream.&quot; );\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Close_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Closes the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> after waiting the specified time to allow data to be sent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close (int timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>timeout</code> parameter is less than -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Close method frees both unmanaged and managed resources associated with the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. If the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> owns the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>, it is closed as well.  </p>\n<p> If a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> was associated with a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>, the Close method will close the TCP connection, but not dispose of the associated <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> references. This method invokes the <code>Dispose</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_EndRead_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_EndRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndRead(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Handles the end of an asynchronous read.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int EndRead (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents an asynchronous call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>asyncResult</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is closed.  </p>\n<p> -or-  </p>\n<p> An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndRead method completes the asynchronous read operation started in the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method.  </p>\n<p> Before calling <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>, you need to create a callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate. This callback method executes in a separate thread and is called by the system after <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> returns. The callback method must accept the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> returned from the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method as a parameter.  </p>\n<p> Within the callback method, call the <a class=\"xref\" href=\"system.iasyncresult#System_IAsyncResult_AsyncState_\" data-linktype=\"relative-path\">AsyncState</a> property of the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> to obtain the state object passed to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method. Extract the receiving <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> from this state object. After obtaining the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>, call the EndRead method to successfully complete the read operation and return the number of bytes read.  </p>\n<p> The EndRead method blocks until data is available. The EndRead method reads as much data as is available up to the number of bytes specified in the <code>size</code> parameter of the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method. If the remote host shuts down the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> connection and all available data has been received, the EndRead method completes immediately and returns zero bytes.  </p>\n<p> To obtain the received data, call the <a class=\"xref\" href=\"system.iasyncresult#System_IAsyncResult_AsyncState_\" data-linktype=\"relative-path\">AsyncState</a> property of the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>, and extract the buffer contained in the resulting state object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>, check the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property to determine if it was caused by a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. If so, use the <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following code example, <code>myReadCallback</code> is provided to <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> as the callback method. EndRead is implemented in <code>myReadCallback</code> to complete the asynchronous read call started by <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Async_SendAndReceive#5\">   &#39; Example of EndRead, DataAvailable and BeginRead.\n   Public Shared Sub myReadCallBack(ar As IAsyncResult)\n      \n      Dim myNetworkStream As NetworkStream = CType(ar.AsyncState, NetworkStream)\n      Dim myReadBuffer(1024) As Byte\n      Dim myCompleteMessage As [String] = &quot;&quot;\n      Dim numberOfBytesRead As Integer\n      \n      numberOfBytesRead = myNetworkStream.EndRead(ar)\n      myCompleteMessage = [String].Concat(myCompleteMessage, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead))\n      \n      &#39; message received may be larger than buffer size so loop through until you have it all.\n      While myNetworkStream.DataAvailable\n         \n         myNetworkStream.BeginRead(myReadBuffer, 0, myReadBuffer.Length, New AsyncCallback(AddressOf NetworkStream_ASync_Send_Receive.myReadCallBack), myNetworkStream)\n      End While\n      \n      \n      &#39; Print out the received message to the console.\n      Console.WriteLine((&quot;You received the following message : &quot; + myCompleteMessage))\n   End Sub &#39;myReadCallBack\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Async_SendAndReceive#5\">// Example of EndRead, DataAvailable and BeginRead.\n\npublic static void myReadCallBack(IAsyncResult ar ){\n\n    NetworkStream myNetworkStream = (NetworkStream)ar.AsyncState;\n    byte[] myReadBuffer = new byte[1024];\n    String myCompleteMessage = &quot;&quot;;\n    int numberOfBytesRead;\n\n    numberOfBytesRead = myNetworkStream.EndRead(ar);\n    myCompleteMessage = \n        String.Concat(myCompleteMessage, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead));    \n    \n    // message received may be larger than buffer size so loop through until you have it all.\n    while(myNetworkStream.DataAvailable){\n    \t\n        myNetworkStream.BeginRead(myReadBuffer, 0, myReadBuffer.Length, \n        \t                                       new AsyncCallback(NetworkStream_ASync_Send_Receive.myReadCallBack), \n        \t                                       myNetworkStream);  \n\n    }\n\n    // Print out the received message to the console.\n    Console.WriteLine(&quot;You received the following message : &quot; +\n                                myCompleteMessage);\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Async_SendAndReceive#5\">   // Example of EndRead, DataAvailable and BeginRead.\n   static void myReadCallBack( IAsyncResult^ ar )\n   {\n      NetworkStream^ myNetworkStream = safe_cast&lt;NetworkStream^&gt;(ar-&gt;AsyncState);\n      array&lt;Byte&gt;^myReadBuffer = gcnew array&lt;Byte&gt;(1024);\n      String^ myCompleteMessage = &quot;&quot;;\n      int numberOfBytesRead;\n      numberOfBytesRead = myNetworkStream-&gt;EndRead( ar );\n      myCompleteMessage = String::Concat( myCompleteMessage, Encoding::ASCII-&gt;GetString( myReadBuffer, 0, numberOfBytesRead ) );\n      \n      // message received may be larger than buffer size so loop through until you have it all.\n      while ( myNetworkStream-&gt;DataAvailable )\n      {\n         AsyncCallback^ pasync = gcnew AsyncCallback( &amp;myReadCallBack );\n         myNetworkStream-&gt;BeginRead( myReadBuffer, 0, myReadBuffer-&gt;Length, pasync, myNetworkStream );\n      }\n\n      // Print out the received message to the console.\n      Console::WriteLine( &quot;You received the following message : {0}&quot;, myCompleteMessage );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_EndWrite_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_EndWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndWrite(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Handles the end of an asynchronous write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void EndWrite (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that represents the asynchronous call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>asyncResult</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is closed.  </p>\n<p> -or-  </p>\n<p> An error occurred while writing to the network.  </p>\n<p> -or-  </p>\n<p> An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>EndWrite completes the asynchronous send operation started in <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a>.  </p>\n<p> Before calling <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a>, you need to create a callback method that implements the <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate. This callback method executes in a separate thread and is called by the system after <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> returns. The callback method must accept the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> returned from the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> method as a parameter.  </p>\n<p> Within the callback method, call the <a class=\"xref\" href=\"system.iasyncresult#System_IAsyncResult_AsyncState_\" data-linktype=\"relative-path\">AsyncState</a> property of the <code>IAsyncResult</code> parameter to obtain the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. After obtaining the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>, you can call the EndWrite method to successfully complete the send operation and return the number of bytes sent.  </p>\n<p> The EndWrite method blocks until the requested number of bytes are sent.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>, check the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property to determine if it was caused by a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. If so, use the <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following code example, <code>myWriteCallback</code> is provided to <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> as the callback method. EndWrite is implemented in <code>myWriteCallback</code> to complete the asynchronous write call started by <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Async_SendAndReceive#4\">   &#39; Example of EndWrite\n   Public Shared Sub myWriteCallBack(ar As IAsyncResult)\n      \n      Dim myNetworkStream As NetworkStream = CType(ar.AsyncState, NetworkStream)\n      myNetworkStream.EndWrite(ar)\n   End Sub &#39;myWriteCallBack\n   \n   \n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Async_SendAndReceive#4\">// Example of EndWrite\npublic static void myWriteCallBack(IAsyncResult ar){\n\n     NetworkStream myNetworkStream = (NetworkStream)ar.AsyncState;\n     myNetworkStream.EndWrite(ar);\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Async_SendAndReceive#4\">\n   // Example of EndWrite\n   static void myWriteCallBack( IAsyncResult^ ar )\n   {\n      NetworkStream^ myNetworkStream = safe_cast&lt;NetworkStream^&gt;(ar-&gt;AsyncState);\n      myNetworkStream-&gt;EndWrite( ar );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Finalize\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~NetworkStream ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method overrides <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a>. Application code should not call this method; an object&#39;s <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> For more information about using the Finalize method, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Flush\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Flushes data from the stream. This method is reserved for future use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Flush method implements the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Flush_\" data-linktype=\"relative-path\">Flush</a> method; however, because <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is not buffered, it has no affect on network streams. Calling the Flush method does not throw an exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_FlushAsync_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_FlushAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlushAsync(CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Flushes data from the stream as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token used to propagate notification that this  operation should be canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after data has been flushed from the stream for the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> instance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Read_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Reads data from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Read (byte[] buffer, int offset, int size);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> that is the location in memory to store data read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in <code>buffer</code> to begin storing the data to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>size</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes read from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.  </p>\n<p> -or-  </p>\n<p> An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.  </p>\n<p> -or-  </p>\n<p> There is a failure reading from the network.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method reads data into the <code>buffer</code> parameter and returns the number of bytes successfully read. If no data is available for reading, the Read method returns 0. The Read operation reads as much data as is available, up to the number of bytes specified by the <code>size</code> parameter. If the remote host shuts down the connection, and all available data has been received, the Read method completes immediately and return zero bytes.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Check to see if the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is readable by calling the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> property. If you attempt to read from a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> that is not readable, you will get an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>, check the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property to determine if it was caused by a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. If so, use the <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_DataAvailable_\" data-linktype=\"relative-path\">DataAvailable</a> to determine if data is available to be read. If data is available, it reads from the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#4\">         &#39; Examples for CanRead, Read, and DataAvailable.\n         &#39; Check to see if this NetworkStream is readable.\n         If myNetworkStream.CanRead Then\n            Dim myReadBuffer(1024) As Byte\n                Dim myCompleteMessage As StringBuilder = New StringBuilder()\n            Dim numberOfBytesRead As Integer = 0\n            \n            &#39; Incoming message may be larger than the buffer size.\n            Do\n               numberOfBytesRead = myNetworkStream.Read(myReadBuffer, 0, myReadBuffer.Length)\n                    myCompleteMessage.AppendFormat(&quot;{0}&quot;, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead))\n            Loop While myNetworkStream.DataAvailable\n            \n            &#39; Print out the received message to the console.\n                Console.WriteLine((&quot;You received the following message : &quot; + myCompleteMessage.ToString()))\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#4\">      // Examples for CanRead, Read, and DataAvailable.\n      // Check to see if this NetworkStream is readable.\n      if ( myNetworkStream-&gt;CanRead )\n      {\n         array&lt;Byte&gt;^ myReadBuffer = gcnew array&lt;Byte&gt;(1024);\n         String^ myCompleteMessage = &quot;&quot;;\n         int numberOfBytesRead = 0;\n         \n         // Incoming message may be larger than the buffer size.\n         do\n         {\n            numberOfBytesRead = myNetworkStream-&gt;Read( myReadBuffer, 0,\n               myReadBuffer-&gt;Length );\n            myCompleteMessage = String::Concat( myCompleteMessage,\n               Encoding::ASCII-&gt;GetString( myReadBuffer, 0, numberOfBytesRead ) );\n         }\n         while ( myNetworkStream-&gt;DataAvailable );\n         \n         // Print out the received message to the console.\n         Console::WriteLine( &quot;You received the following message : {0}&quot;,\n            myCompleteMessage );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Sorry.  You cannot read from this NetworkStream.&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#4\">            // Examples for CanRead, Read, and DataAvailable.\n           \n            // Check to see if this NetworkStream is readable.\n            if(myNetworkStream.CanRead){\n                byte[] myReadBuffer = new byte[1024];\n                StringBuilder myCompleteMessage = new StringBuilder();\n                int numberOfBytesRead = 0;\n\n                // Incoming message may be larger than the buffer size.\n                do{\n                     numberOfBytesRead = myNetworkStream.Read(myReadBuffer, 0, myReadBuffer.Length);\n\n\t\t\t\t\t myCompleteMessage.AppendFormat(&quot;{0}&quot;, Encoding.ASCII.GetString(myReadBuffer, 0, numberOfBytesRead));\n\t\t\t\t \t\t\t\t\t\n                }\n                while(myNetworkStream.DataAvailable);\n\n                // Print out the received message to the console.\n                Console.WriteLine(&quot;You received the following message : &quot; +\n                                             myCompleteMessage);\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot read from this NetworkStream.&quot;);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Seek_System_Int64_System_IO_SeekOrigin_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Seek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Seek(Int64,SeekOrigin)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the current position of the stream to the given value. This method is not currently supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Seek (long offset, System.IO.SeekOrigin origin);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is not used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is not used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The position in the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Any use of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_SetLength_System_Int64_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_SetLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLength(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the length of the stream. This method always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SetLength (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is not used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Any use of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_NetworkStream_Write_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_NetworkStream_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes data to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (byte[] buffer, int offset, int size);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> that contains the data to write to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in <code>buffer</code> from which to start writing data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>size</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write to the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> parameter is less than 0.  </p>\n<p> -or-  </p>\n<p> The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>There was a failure while writing to the network.  </p>\n<p> -or-  </p>\n<p> An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is closed.  </p>\n<p> -or-  </p>\n<p> There was a failure reading from the network.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Write method starts at the specified <code>offset</code> and sends <code>size</code> bytes from the contents of <code>buffer</code> to the network. The Write method blocks until the requested number of bytes is sent or a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a> is thrown. If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use the <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Check to see if the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable by accessing the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_CanWrite_\" data-linktype=\"relative-path\">CanWrite</a> property. If you attempt to write to a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> that is not writable, you will get an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>. If you receive an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>, check the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property to determine if it was caused by a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example checks to see whether the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> is writable. If it is, then Write is used to write a small message.  </p>\n<pre><code class=\"lang-vb\" name=\"NetworkStream_Synch_SendAndReceive#3\">         &#39; Examples for CanWrite, and CanWrite  \n         &#39; Check to see if this NetworkStream is writable.\n         If myNetworkStream.CanWrite Then\n            \n            Dim myWriteBuffer As Byte() = Encoding.ASCII.GetBytes(&quot;Are you receiving this message?&quot;)\n            myNetworkStream.Write(myWriteBuffer, 0, myWriteBuffer.Length)\n         Else\n            Console.WriteLine(&quot;Sorry.  You cannot write to this NetworkStream.&quot;)\n         End If\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkStream_Synch_SendAndReceive#3\">      // Examples for CanWrite, and CanWrite  \n      // Check to see if this NetworkStream is writable.\n      if ( myNetworkStream-&gt;CanWrite )\n      {\n         array&lt;Byte&gt;^ myWriteBuffer = Encoding::ASCII-&gt;GetBytes(\n            &quot;Are you receiving this message?&quot; );\n         myNetworkStream-&gt;Write( myWriteBuffer, 0, myWriteBuffer-&gt;Length );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Sorry.  You cannot write to this NetworkStream.&quot; );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkStream_Synch_SendAndReceive#3\">            // Examples for CanWrite, and CanWrite  \n           \n            // Check to see if this NetworkStream is writable.\n            if (myNetworkStream.CanWrite){\n               \n                 byte[] myWriteBuffer = Encoding.ASCII.GetBytes(&quot;Are you receiving this message?&quot;);\n                 myNetworkStream.Write(myWriteBuffer, 0, myWriteBuffer.Length);\n            }\n            else{\n                 Console.WriteLine(&quot;Sorry.  You cannot write to this NetworkStream.&quot;);  \n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Sockets.NetworkStream.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Sockets.NetworkStream.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.BeginRead\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.BeginWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.CanRead\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.CanSeek\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.CanTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.CanWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Close\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.DataAvailable\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.EndRead\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.EndWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Flush\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.FlushAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Length\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Position\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Read\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Readable\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.ReadTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Seek\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.SetLength\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Socket\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Write\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.Writeable\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.NetworkStream.WriteTimeout\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e11746f8-e3db-c428-ef14-7d9ab8cbfb05\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the underlying stream of data for network access.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Sockets/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Sockets.NetworkStream\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Sockets.NetworkStream.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Sockets.NetworkStream.yml","open_to_public_contributors":true,"api_name":["System.Net.Sockets.NetworkStream","System.Net.Sockets.NetworkStream..ctor","System.Net.Sockets.NetworkStream.BeginRead","System.Net.Sockets.NetworkStream.BeginWrite","System.Net.Sockets.NetworkStream.CanRead","System.Net.Sockets.NetworkStream.CanSeek","System.Net.Sockets.NetworkStream.CanTimeout","System.Net.Sockets.NetworkStream.CanWrite","System.Net.Sockets.NetworkStream.Close","System.Net.Sockets.NetworkStream.DataAvailable","System.Net.Sockets.NetworkStream.Dispose","System.Net.Sockets.NetworkStream.EndRead","System.Net.Sockets.NetworkStream.EndWrite","System.Net.Sockets.NetworkStream.Finalize","System.Net.Sockets.NetworkStream.Flush","System.Net.Sockets.NetworkStream.FlushAsync","System.Net.Sockets.NetworkStream.Length","System.Net.Sockets.NetworkStream.Position","System.Net.Sockets.NetworkStream.Read","System.Net.Sockets.NetworkStream.Readable","System.Net.Sockets.NetworkStream.ReadTimeout","System.Net.Sockets.NetworkStream.Seek","System.Net.Sockets.NetworkStream.SetLength","System.Net.Sockets.NetworkStream.Socket","System.Net.Sockets.NetworkStream.Write","System.Net.Sockets.NetworkStream.Writeable","System.Net.Sockets.NetworkStream.WriteTimeout"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Sockets.NetworkStream","System::Net::Sockets::NetworkStream","System.Net.Sockets.NetworkStream.#ctor","System::Net::Sockets::NetworkStream::#ctor","System.Net.Sockets.NetworkStream.BeginRead","System::Net::Sockets::NetworkStream::BeginRead","System.Net.Sockets.NetworkStream.BeginWrite","System::Net::Sockets::NetworkStream::BeginWrite","System.Net.Sockets.NetworkStream.CanRead","System::Net::Sockets::NetworkStream::CanRead","System.Net.Sockets.NetworkStream.CanSeek","System::Net::Sockets::NetworkStream::CanSeek","System.Net.Sockets.NetworkStream.CanTimeout","System::Net::Sockets::NetworkStream::CanTimeout","System.Net.Sockets.NetworkStream.CanWrite","System::Net::Sockets::NetworkStream::CanWrite","System.Net.Sockets.NetworkStream.Close","System::Net::Sockets::NetworkStream::Close","System.Net.Sockets.NetworkStream.DataAvailable","System::Net::Sockets::NetworkStream::DataAvailable","System.Net.Sockets.NetworkStream.Dispose","System::Net::Sockets::NetworkStream::Dispose","System.Net.Sockets.NetworkStream.EndRead","System::Net::Sockets::NetworkStream::EndRead","System.Net.Sockets.NetworkStream.EndWrite","System::Net::Sockets::NetworkStream::EndWrite","System.Net.Sockets.NetworkStream.Finalize","System::Net::Sockets::NetworkStream::Finalize","System.Net.Sockets.NetworkStream.Flush","System::Net::Sockets::NetworkStream::Flush","System.Net.Sockets.NetworkStream.FlushAsync","System::Net::Sockets::NetworkStream::FlushAsync","System.Net.Sockets.NetworkStream.Length","System::Net::Sockets::NetworkStream::Length","System.Net.Sockets.NetworkStream.Position","System::Net::Sockets::NetworkStream::Position","System.Net.Sockets.NetworkStream.Read","System::Net::Sockets::NetworkStream::Read","System.Net.Sockets.NetworkStream.Readable","System::Net::Sockets::NetworkStream::Readable","System.Net.Sockets.NetworkStream.ReadTimeout","System::Net::Sockets::NetworkStream::ReadTimeout","System.Net.Sockets.NetworkStream.Seek","System::Net::Sockets::NetworkStream::Seek","System.Net.Sockets.NetworkStream.SetLength","System::Net::Sockets::NetworkStream::SetLength","System.Net.Sockets.NetworkStream.Socket","System::Net::Sockets::NetworkStream::Socket","System.Net.Sockets.NetworkStream.Write","System::Net::Sockets::NetworkStream::Write","System.Net.Sockets.NetworkStream.Writeable","System::Net::Sockets::NetworkStream::Writeable","System.Net.Sockets.NetworkStream.WriteTimeout","System::Net::Sockets::NetworkStream::WriteTimeout"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e11746f8-e3db-c428-ef14-7d9ab8cbfb05","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Sockets/NetworkStream.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NetworkStream class | Microsoft Docs","_op_ogTitle":"NetworkStream class","description":"Provides the underlying stream of data for network access.\n","toc_asset_id":"_splitted/System.Net.Sockets/toc.json","toc_rel":"_splitted/System.Net.Sockets/toc.json","source_url":"","ms.assetid":"System.Net.Sockets.NetworkStream","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.sockets.networkstream","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.sockets.networkstream","fileRelativePath":"System.Net.Sockets.NetworkStream.html"},"themesRelativePathToOutputRoot":"_themes/"}