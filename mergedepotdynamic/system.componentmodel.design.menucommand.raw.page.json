{"content":"    \r\n    <h1 id=\"System_ComponentModel_Design_MenuCommand\">\r\n      <span class=\"lang-csharp\">MenuCommand</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a Windows menu or toolbar command item.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class MenuCommand</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MenuCommand</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The MenuCommand class represents information about a Windows menu or toolbar command. The <a class=\"xref\" href=\"system.componentmodel.design.imenucommandservice\" data-linktype=\"relative-path\">IMenuCommandService</a> interface allows you to add MenuCommand objects to the Visual Studio menu.  </p>\n<p> This class provides the following members:  </p>\n<ul>\n<li><p>An event-handler property to which you can attach an event handler for the command.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> property that uniquely identifies the command.  </p>\n</li>\n<li><p>An <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Invoke_\" data-linktype=\"relative-path\">Invoke</a> method that executes the command.  </p>\n</li>\n<li><p>An <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_OnCommandChanged_\" data-linktype=\"relative-path\">OnCommandChanged</a> method that can be overridden to handle the event that occurs when a new command is selected.  </p>\n</li>\n<li><p>Boolean flag states that indicate whether the command is <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Checked_\" data-linktype=\"relative-path\">Checked</a>, <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Enabled_\" data-linktype=\"relative-path\">Enabled</a>, <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Supported_\" data-linktype=\"relative-path\">Supported</a>, or <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_Visible_\" data-linktype=\"relative-path\">Visible</a>.  </p>\n</li>\n<li><p>An <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_OleStatus_\" data-linktype=\"relative-path\">OleStatus</a> property that indicates the OLE command status code for the command.  </p>\n</li>\n<li><p>An override for the <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_ToString_\" data-linktype=\"relative-path\">ToString</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand__ctor_System_EventHandler_System_ComponentModel_Design_CommandID_\" data-linktype=\"self-bookmark\">MenuCommand(EventHandler,CommandID)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Checked\" data-linktype=\"self-bookmark\">Checked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this menu item is checked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_CommandID\" data-linktype=\"self-bookmark\">CommandID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> associated with this menu command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Enabled\" data-linktype=\"self-bookmark\">Enabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether this menu item is available.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_OleStatus\" data-linktype=\"self-bookmark\">OleStatus</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the OLE command status code for this menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Properties\" data-linktype=\"self-bookmark\">Properties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the public properties associated with the <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Supported\" data-linktype=\"self-bookmark\">Supported</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this menu item is supported.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Visible\" data-linktype=\"self-bookmark\">Visible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this menu item is visible.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Invoke\" data-linktype=\"self-bookmark\">Invoke()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes the command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_Invoke_System_Object_\" data-linktype=\"self-bookmark\">Invoke(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes the command with the given parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_OnCommandChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCommandChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_CommandChanged\" data-linktype=\"relative-path\">CommandChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of this menu command.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_MenuCommand_CommandChanged\" data-linktype=\"self-bookmark\">CommandChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the menu command changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand__ctor_System_EventHandler_System_ComponentModel_Design_CommandID_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuCommand(EventHandler,CommandID)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event to raise when the user selects the menu item or toolbar button.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unique command ID that links this menu command to the environment&#39;s menu.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a> object, configures its properties, and adds it to an <a class=\"xref\" href=\"system.componentmodel.design.imenucommandservice\" data-linktype=\"relative-path\">IMenuCommandService</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"MenuCommand Example#1\">   public ref class CDesigner: public ComponentDesigner\n   {\n   public:\n    [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n      virtual void Initialize( IComponent^ comp ) override\n      {\n         ComponentDesigner::Initialize( comp );\n         IMenuCommandService^ mcs = static_cast&lt;IMenuCommandService^&gt;(comp-&gt;Site-&gt;GetService( IMenuCommandService::typeid ));\n\t\t MenuCommand^ mc = gcnew MenuCommand( gcnew EventHandler( this, &amp;CDesigner::OnF1Help ),StandardCommands::F1Help );\n         mc-&gt;Enabled = true;\n         mc-&gt;Visible = true;\n         mc-&gt;Supported = true;\n         mcs-&gt;AddCommand( mc );\n         System::Windows::Forms::MessageBox::Show( &quot;Initialize() has been invoked.&quot; );\n      }\n\n   private:\n      void OnF1Help( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         System::Windows::Forms::MessageBox::Show( &quot;F1Help has been invoked.&quot; );\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"MenuCommand Example#1\">    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class CDesigner : System.ComponentModel.Design.ComponentDesigner \n    {\n        public override void Initialize(IComponent comp) \n        {\n            base.Initialize(comp);\n\n            IMenuCommandService mcs = (IMenuCommandService)comp.Site.\n                        GetService(typeof(IMenuCommandService));\n            MenuCommand mc = new MenuCommand(new EventHandler(OnF1Help), StandardCommands.F1Help);\n            mc.Enabled = true;\n            mc.Visible = true;\n            mc.Supported = true;\n            mcs.AddCommand(mc);\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;);\n        }\n\n        private void OnF1Help(object sender, EventArgs e) \n        {\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuCommand Example#1\">    &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Public Class CDesigner\n        Inherits System.ComponentModel.Design.ComponentDesigner\n\n        Public Overrides Sub Initialize(ByVal comp As IComponent)\n            MyBase.Initialize(comp)\n\n            Dim mcs As IMenuCommandService = CType(comp.Site.GetService(GetType(IMenuCommandService)), IMenuCommandService)\n            Dim mc As New MenuCommand(New EventHandler(AddressOf OnF1Help), StandardCommands.F1Help)\n            mc.Enabled = True\n            mc.Visible = True\n            mc.Supported = True\n            mcs.AddCommand(mc)\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;)\n        End Sub\n\n        Private Sub OnF1Help(ByVal sender As Object, ByVal e As EventArgs)\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;)\n        End Sub\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Checked\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Checked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Checked</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this menu item is checked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Checked { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item is checked; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_CommandID\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_CommandID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandID</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> associated with this menu command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ComponentModel.Design.CommandID CommandID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> associated with the menu command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Enabled\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Enabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Enabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether this menu item is available.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Enabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item is enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a> object, configures its properties, and adds it to <a class=\"xref\" href=\"system.componentmodel.design.imenucommandservice\" data-linktype=\"relative-path\">IMenuCommandService</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"MenuCommand Example#1\">   public ref class CDesigner: public ComponentDesigner\n   {\n   public:\n    [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n      virtual void Initialize( IComponent^ comp ) override\n      {\n         ComponentDesigner::Initialize( comp );\n         IMenuCommandService^ mcs = static_cast&lt;IMenuCommandService^&gt;(comp-&gt;Site-&gt;GetService( IMenuCommandService::typeid ));\n\t\t MenuCommand^ mc = gcnew MenuCommand( gcnew EventHandler( this, &amp;CDesigner::OnF1Help ),StandardCommands::F1Help );\n         mc-&gt;Enabled = true;\n         mc-&gt;Visible = true;\n         mc-&gt;Supported = true;\n         mcs-&gt;AddCommand( mc );\n         System::Windows::Forms::MessageBox::Show( &quot;Initialize() has been invoked.&quot; );\n      }\n\n   private:\n      void OnF1Help( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         System::Windows::Forms::MessageBox::Show( &quot;F1Help has been invoked.&quot; );\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"MenuCommand Example#1\">    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class CDesigner : System.ComponentModel.Design.ComponentDesigner \n    {\n        public override void Initialize(IComponent comp) \n        {\n            base.Initialize(comp);\n\n            IMenuCommandService mcs = (IMenuCommandService)comp.Site.\n                        GetService(typeof(IMenuCommandService));\n            MenuCommand mc = new MenuCommand(new EventHandler(OnF1Help), StandardCommands.F1Help);\n            mc.Enabled = true;\n            mc.Visible = true;\n            mc.Supported = true;\n            mcs.AddCommand(mc);\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;);\n        }\n\n        private void OnF1Help(object sender, EventArgs e) \n        {\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuCommand Example#1\">    &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Public Class CDesigner\n        Inherits System.ComponentModel.Design.ComponentDesigner\n\n        Public Overrides Sub Initialize(ByVal comp As IComponent)\n            MyBase.Initialize(comp)\n\n            Dim mcs As IMenuCommandService = CType(comp.Site.GetService(GetType(IMenuCommandService)), IMenuCommandService)\n            Dim mc As New MenuCommand(New EventHandler(AddressOf OnF1Help), StandardCommands.F1Help)\n            mc.Enabled = True\n            mc.Visible = True\n            mc.Supported = True\n            mcs.AddCommand(mc)\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;)\n        End Sub\n\n        Private Sub OnF1Help(ByVal sender As Object, ByVal e As EventArgs)\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;)\n        End Sub\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_OleStatus\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_OleStatus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OleStatus</div>        \r\n          </div>\r\n    \r\n            <p>Gets the OLE command status code for this menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int OleStatus { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer containing a mixture of status flags that reflect the state of this menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Properties\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Properties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Properties</div>        \r\n          </div>\r\n    \r\n            <p>Gets the public properties associated with the <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.IDictionary Properties { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> containing the public properties of the <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All menu commands store their public properties in the Properties collection. The key in the properties dictionary is the property name. This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Supported\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Supported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Supported</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this menu item is supported.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Supported { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item is supported, which is the default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a> object, configures its properties, and adds it to the <a class=\"xref\" href=\"system.componentmodel.design.imenucommandservice\" data-linktype=\"relative-path\">IMenuCommandService</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"MenuCommand Example#1\">   public ref class CDesigner: public ComponentDesigner\n   {\n   public:\n    [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n      virtual void Initialize( IComponent^ comp ) override\n      {\n         ComponentDesigner::Initialize( comp );\n         IMenuCommandService^ mcs = static_cast&lt;IMenuCommandService^&gt;(comp-&gt;Site-&gt;GetService( IMenuCommandService::typeid ));\n\t\t MenuCommand^ mc = gcnew MenuCommand( gcnew EventHandler( this, &amp;CDesigner::OnF1Help ),StandardCommands::F1Help );\n         mc-&gt;Enabled = true;\n         mc-&gt;Visible = true;\n         mc-&gt;Supported = true;\n         mcs-&gt;AddCommand( mc );\n         System::Windows::Forms::MessageBox::Show( &quot;Initialize() has been invoked.&quot; );\n      }\n\n   private:\n      void OnF1Help( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         System::Windows::Forms::MessageBox::Show( &quot;F1Help has been invoked.&quot; );\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"MenuCommand Example#1\">    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class CDesigner : System.ComponentModel.Design.ComponentDesigner \n    {\n        public override void Initialize(IComponent comp) \n        {\n            base.Initialize(comp);\n\n            IMenuCommandService mcs = (IMenuCommandService)comp.Site.\n                        GetService(typeof(IMenuCommandService));\n            MenuCommand mc = new MenuCommand(new EventHandler(OnF1Help), StandardCommands.F1Help);\n            mc.Enabled = true;\n            mc.Visible = true;\n            mc.Supported = true;\n            mcs.AddCommand(mc);\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;);\n        }\n\n        private void OnF1Help(object sender, EventArgs e) \n        {\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuCommand Example#1\">    &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Public Class CDesigner\n        Inherits System.ComponentModel.Design.ComponentDesigner\n\n        Public Overrides Sub Initialize(ByVal comp As IComponent)\n            MyBase.Initialize(comp)\n\n            Dim mcs As IMenuCommandService = CType(comp.Site.GetService(GetType(IMenuCommandService)), IMenuCommandService)\n            Dim mc As New MenuCommand(New EventHandler(AddressOf OnF1Help), StandardCommands.F1Help)\n            mc.Enabled = True\n            mc.Visible = True\n            mc.Supported = True\n            mcs.AddCommand(mc)\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;)\n        End Sub\n\n        Private Sub OnF1Help(ByVal sender As Object, ByVal e As EventArgs)\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;)\n        End Sub\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Visible\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Visible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this menu item is visible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Visible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item is visible; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.componentmodel.design.menucommand\" data-linktype=\"relative-path\">MenuCommand</a> object, configures its properties, and adds it to the <a class=\"xref\" href=\"system.componentmodel.design.imenucommandservice\" data-linktype=\"relative-path\">IMenuCommandService</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"MenuCommand Example#1\">   public ref class CDesigner: public ComponentDesigner\n   {\n   public:\n    [PermissionSetAttribute(SecurityAction::Demand, Name=&quot;FullTrust&quot;)]\n      virtual void Initialize( IComponent^ comp ) override\n      {\n         ComponentDesigner::Initialize( comp );\n         IMenuCommandService^ mcs = static_cast&lt;IMenuCommandService^&gt;(comp-&gt;Site-&gt;GetService( IMenuCommandService::typeid ));\n\t\t MenuCommand^ mc = gcnew MenuCommand( gcnew EventHandler( this, &amp;CDesigner::OnF1Help ),StandardCommands::F1Help );\n         mc-&gt;Enabled = true;\n         mc-&gt;Visible = true;\n         mc-&gt;Supported = true;\n         mcs-&gt;AddCommand( mc );\n         System::Windows::Forms::MessageBox::Show( &quot;Initialize() has been invoked.&quot; );\n      }\n\n   private:\n      void OnF1Help( Object^ /*sender*/, EventArgs^ /*e*/ )\n      {\n         System::Windows::Forms::MessageBox::Show( &quot;F1Help has been invoked.&quot; );\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"MenuCommand Example#1\">    [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)] \n    public class CDesigner : System.ComponentModel.Design.ComponentDesigner \n    {\n        public override void Initialize(IComponent comp) \n        {\n            base.Initialize(comp);\n\n            IMenuCommandService mcs = (IMenuCommandService)comp.Site.\n                        GetService(typeof(IMenuCommandService));\n            MenuCommand mc = new MenuCommand(new EventHandler(OnF1Help), StandardCommands.F1Help);\n            mc.Enabled = true;\n            mc.Visible = true;\n            mc.Supported = true;\n            mcs.AddCommand(mc);\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;);\n        }\n\n        private void OnF1Help(object sender, EventArgs e) \n        {\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuCommand Example#1\">    &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n    Public Class CDesigner\n        Inherits System.ComponentModel.Design.ComponentDesigner\n\n        Public Overrides Sub Initialize(ByVal comp As IComponent)\n            MyBase.Initialize(comp)\n\n            Dim mcs As IMenuCommandService = CType(comp.Site.GetService(GetType(IMenuCommandService)), IMenuCommandService)\n            Dim mc As New MenuCommand(New EventHandler(AddressOf OnF1Help), StandardCommands.F1Help)\n            mc.Enabled = True\n            mc.Visible = True\n            mc.Supported = True\n            mcs.AddCommand(mc)\n            System.Windows.Forms.MessageBox.Show(&quot;Initialize() has been invoked.&quot;)\n        End Sub\n\n        Private Sub OnF1Help(ByVal sender As Object, ByVal e As EventArgs)\n            System.Windows.Forms.MessageBox.Show(&quot;F1Help has been invoked.&quot;)\n        End Sub\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Invoke\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke()</div>        \r\n          </div>\r\n    \r\n            <p>Invokes the command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Invoke ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_Invoke_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Invokes the command with the given parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Invoke (object arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional argument for use by the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_OnCommandChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_OnCommandChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCommandChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.componentmodel.design.menucommand#System_ComponentModel_Design_MenuCommand_CommandChanged\" data-linktype=\"relative-path\">CommandChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCommandChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCommandChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_ToString\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_MenuCommand_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of this menu command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the value of the <span class=\"xref\">stem.ComponentModel.Design.MenuCommand.CommandID*</span> property appended with the names of any flags that are set, separated by pipe bars (|). These flag properties include <span class=\"xref\">stem.ComponentModel.Design.MenuCommand.Checked*</span>, <span class=\"xref\">stem.ComponentModel.Design.MenuCommand.Enabled*</span>, <span class=\"xref\">stem.ComponentModel.Design.MenuCommand.Supported*</span>, and <span class=\"xref\">stem.ComponentModel.Design.MenuCommand.Visible*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_MenuCommand_CommandChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the menu command changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CommandChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A command can change if it becomes checked or disabled.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.MenuCommand.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.MenuCommand.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.Checked\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.CommandChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.add_CommandChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.remove_CommandChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.CommandID\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.Enabled\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.Invoke\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.OleStatus\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.OnCommandChanged\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.Properties\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.Supported\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.ToString\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.MenuCommand.Visible\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e685ccb0-0387-9131-896b-35696b7124ed\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a Windows menu or toolbar command item.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel.Design/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.MenuCommand\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.MenuCommand.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.MenuCommand.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.Design.MenuCommand","System.ComponentModel.Design.MenuCommand..ctor","System.ComponentModel.Design.MenuCommand.Checked","System.ComponentModel.Design.MenuCommand.CommandChanged","System.ComponentModel.Design.MenuCommand.add_CommandChanged","System.ComponentModel.Design.MenuCommand.remove_CommandChanged","System.ComponentModel.Design.MenuCommand.CommandID","System.ComponentModel.Design.MenuCommand.Enabled","System.ComponentModel.Design.MenuCommand.Invoke","System.ComponentModel.Design.MenuCommand.OleStatus","System.ComponentModel.Design.MenuCommand.OnCommandChanged","System.ComponentModel.Design.MenuCommand.Properties","System.ComponentModel.Design.MenuCommand.Supported","System.ComponentModel.Design.MenuCommand.ToString","System.ComponentModel.Design.MenuCommand.Visible"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.MenuCommand","System::ComponentModel::Design::MenuCommand","System.ComponentModel.Design.MenuCommand.#ctor","System::ComponentModel::Design::MenuCommand::#ctor","System.ComponentModel.Design.MenuCommand.Checked","System::ComponentModel::Design::MenuCommand::Checked","System.ComponentModel.Design.MenuCommand.CommandChanged","System::ComponentModel::Design::MenuCommand::CommandChanged","System.ComponentModel.Design.MenuCommand.CommandID","System::ComponentModel::Design::MenuCommand::CommandID","System.ComponentModel.Design.MenuCommand.Enabled","System::ComponentModel::Design::MenuCommand::Enabled","System.ComponentModel.Design.MenuCommand.Invoke","System::ComponentModel::Design::MenuCommand::Invoke","System.ComponentModel.Design.MenuCommand.OleStatus","System::ComponentModel::Design::MenuCommand::OleStatus","System.ComponentModel.Design.MenuCommand.OnCommandChanged","System::ComponentModel::Design::MenuCommand::OnCommandChanged","System.ComponentModel.Design.MenuCommand.Properties","System::ComponentModel::Design::MenuCommand::Properties","System.ComponentModel.Design.MenuCommand.Supported","System::ComponentModel::Design::MenuCommand::Supported","System.ComponentModel.Design.MenuCommand.ToString","System::ComponentModel::Design::MenuCommand::ToString","System.ComponentModel.Design.MenuCommand.Visible","System::ComponentModel::Design::MenuCommand::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e685ccb0-0387-9131-896b-35696b7124ed","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel.Design/MenuCommand.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MenuCommand class | Microsoft Docs","_op_ogTitle":"MenuCommand class","description":"Represents a Windows menu or toolbar command item.\n","toc_asset_id":"_splitted/System.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.MenuCommand","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.menucommand","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.menucommand","fileRelativePath":"System.ComponentModel.Design.MenuCommand.html"},"themesRelativePathToOutputRoot":"_themes/"}