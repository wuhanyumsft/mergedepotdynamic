{"content":"    \r\n    <h1 id=\"System_Data_Linq_Table_1\">\r\n      <span class=\"lang-csharp\">Table&lt;TEntity&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a table for a particular type in the underlying database.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Table&lt;TEntity&gt; : System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.ComponentModel.IListSource, System.Data.Linq.ITable, System.Data.Linq.ITable&lt;TEntity&gt;, System.Linq.IQueryable&lt;TEntity&gt;, System.Linq.IQueryProvider where TEntity : class</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTEntity\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of the data in the table.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Table&lt;TEntity&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class enables you to query over the table and add, remove, and attach objects.  </p>\n<p> An application can access a Table(TEntity) instance via <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_GetTable_\" data-linktype=\"relative-path\">GetTable</a> or by using a strongly typed property for the strongly typed <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>. That is, when the designer generates a DataContext object, it generates properties to represent each Table. For example:  </p>\n<p><codecontentplaceholder>0</codecontentplaceholder><br> For this strongly typed DataContext, you can access the Users property to get <code>Table&lt;User&gt;</code>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_Context\" data-linktype=\"self-bookmark\">Context</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> that has been used to retrieve this <span class=\"xref\">stem.Data.Linq.Table`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the type of the entities contained in this <span class=\"xref\">stem.Data.Linq.Table`1</span> instance has a primary key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_Attach__0_\" data-linktype=\"self-bookmark\">Attach(TEntity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches a disconnected or &quot;detached&quot; entity to a new <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> when original values are required for optimistic concurrency checks.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_Attach__0_System_Boolean_\" data-linktype=\"self-bookmark\">Attach(TEntity,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_Attach__0__0_\" data-linktype=\"self-bookmark\">Attach(TEntity,TEntity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state by specifying both the entity and its original state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_AttachAll__1_System_Collections_Generic_IEnumerable___0__\" data-linktype=\"self-bookmark\">AttachAll&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_AttachAll__1_System_Collections_Generic_IEnumerable___0__System_Boolean_\" data-linktype=\"self-bookmark\">AttachAll&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_DeleteAllOnSubmit__1_System_Collections_Generic_IEnumerable___0__\" data-linktype=\"self-bookmark\">DeleteAllOnSubmit&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Puts all entities from the collection into a <code>pending delete</code> state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_DeleteOnSubmit__0_\" data-linktype=\"self-bookmark\">DeleteOnSubmit(TEntity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Puts an entity from this table into a <code>pending delete</code> state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an enumerator that iterates through the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_GetModifiedMembers__0_\" data-linktype=\"self-bookmark\">GetModifiedMembers(TEntity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of modified members that contain their current and original values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_GetNewBindingList\" data-linktype=\"self-bookmark\">GetNewBindingList()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new list for binding to a data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_GetOriginalEntityState__0_\" data-linktype=\"self-bookmark\">GetOriginalEntityState(TEntity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <span class=\"xref\">stem.Data.Linq.Table`1</span> instance that contains the original state of the entity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_InsertAllOnSubmit__1_System_Collections_Generic_IEnumerable___0__\" data-linktype=\"self-bookmark\">InsertAllOnSubmit&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in a <code>pending insert</code> state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_InsertOnSubmit__0_\" data-linktype=\"self-bookmark\">InsertOnSubmit(TEntity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an entity in a <code>pending insert</code> state to this <span class=\"xref\">stem.Data.Linq.Table`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string that represents the table.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Collections_Generic_IEnumerable_TEntity__GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable&lt;TEntity&gt;.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_ComponentModel_IListSource_ContainsListCollection\" data-linktype=\"self-bookmark\">IListSource.ContainsListCollection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the collection is a collection of <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_ComponentModel_IListSource_GetList\" data-linktype=\"self-bookmark\">IListSource.GetList()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> that can be bound to a data source from an object that does not implement an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> itself.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_System_Object_\" data-linktype=\"self-bookmark\">ITable.Attach(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in an unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">ITable.Attach(Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_System_Object_System_Object_\" data-linktype=\"self-bookmark\">ITable.Attach(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state by specifying both the entity and its original state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_AttachAll_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">ITable.AttachAll(IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_AttachAll_System_Collections_IEnumerable_System_Boolean_\" data-linktype=\"self-bookmark\">ITable.AttachAll(IEnumerable,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_DeleteAllOnSubmit_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">ITable.DeleteAllOnSubmit(IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Puts all entities from the collection into a <code>pending delete</code> state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_DeleteOnSubmit_System_Object_\" data-linktype=\"self-bookmark\">ITable.DeleteOnSubmit(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Puts an entity from this table into a <code>pending delete</code> state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_GetModifiedMembers_System_Object_\" data-linktype=\"self-bookmark\">ITable.GetModifiedMembers(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of modified members that contain their current and original values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_GetOriginalEntityState_System_Object_\" data-linktype=\"self-bookmark\">ITable.GetOriginalEntityState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves original values of a given entity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_InsertAllOnSubmit_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">ITable.InsertAllOnSubmit(IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in an <code>pending insert</code> state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Data_Linq_ITable_InsertOnSubmit_System_Object_\" data-linktype=\"self-bookmark\">ITable.InsertOnSubmit(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an entity in a <code>pending insert</code> state to this table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryable_ElementType\" data-linktype=\"self-bookmark\">IQueryable.ElementType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryable_Expression\" data-linktype=\"self-bookmark\">IQueryable.Expression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the expression tree that is associated with this instance of <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryable_Provider\" data-linktype=\"self-bookmark\">IQueryable.Provider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the query provider that is associated with this data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryProvider_CreateQuery_System_Linq_Expressions_Expression_\" data-linktype=\"self-bookmark\">IQueryProvider.CreateQuery(Expression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Constructs an <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a> object that can evaluate the query represented by a specified expression tree.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryProvider_CreateQuery__1_System_Linq_Expressions_Expression_\" data-linktype=\"self-bookmark\">IQueryProvider.CreateQuery&lt;TResult&gt;(Expression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Constructs an <span class=\"xref\">stem.Linq.IQueryable`1</span> object that can evaluate the query represented by a specified expression tree.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryProvider_Execute_System_Linq_Expressions_Expression_\" data-linktype=\"self-bookmark\">IQueryProvider.Execute(Expression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the query represented by a specified expression tree.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_Table_1_System_Linq_IQueryProvider_Execute__1_System_Linq_Expressions_Expression_\" data-linktype=\"self-bookmark\">IQueryProvider.Execute&lt;TResult&gt;(Expression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the strongly-typed query represented by a specified expression tree.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_Context\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_Context_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Context</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> that has been used to retrieve this <span class=\"xref\">stem.Data.Linq.Table`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.DataContext Context { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a></div>\r\n                  </div>\r\n                  <p>The data context that has been used to retrieve this table.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_IsReadOnly\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the type of the entities contained in this <span class=\"xref\">stem.Data.Linq.Table`1</span> instance has a primary key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the entity type does not have a primary key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_Attach__0_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_Attach_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attach(TEntity)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches a disconnected or &quot;detached&quot; entity to a new <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> when original values are required for optimistic concurrency checks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Attach (TEntity entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The original values of the entity to be attached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>Attach</code> methods with entities that have been created in one <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>, serialized to a client, and then deserialized back to perform an update or delete operation. Because the new <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values. In this version of Attach, the entity is assumed to be in its original value state. After calling this method, you can then update its fields, for example with additional data sent from the client.  </p>\n<p> When a new entity is attached, deferred loaders for any child collections (for example, <code>EntitySet</code> collections of entities from associated tables) are initialized. When <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called, members of the child collections are put into an <code>Unmodified</code> state. To update members of a child collection, you must explicitly call <code>Attach</code> and specify that entity.  </p>\n<p> For more information, see <a href=\"../Topic/Data%20Retrieval%20and%20CUD%20Operations%20in%20N-Tier%20Applications%20(LINQ%20to%20SQL).md\" data-linktype=\"relative-path\">Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)</a>.  </p>\n<p> Do not try to <code>Attach</code> an entity that has not been detached through serialization. Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_Attach__0_System_Boolean_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_Attach_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attach(TEntity,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Attach (TEntity entity, bool asModified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be attached.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asModified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to attach the entity as modified; <code>false</code> to attach the entity as unmodified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If attaching <em>as modified</em>, the entity must either declare a version member or must not participate in update conflict checking. When a new entity is attached, deferred loaders for any child collections (for example, <code>EntitySet</code> collections of entities from associated tables) are initialized. When <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called, members of the child collections are put into an <code>Unmodified</code> state. To update members of a child collection, you must explicitly call <code>Attach</code> and specify that entity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_Attach__0__0_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_Attach_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attach(TEntity,TEntity)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state by specifying both the entity and its original state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Attach (TEntity entity, TEntity original);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be attached.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>original</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the same entity type with data members that contain the original values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the following example, the <code>Customer</code> object is already correctly configured. You can call <code>Attach</code> without having to replay the updates.  </p>\n<p> When a new entity is attached, deferred loaders for any child collections (for example, <code>EntitySet</code> collections of entities from associated tables) are initialized. When <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called, members of the child collections are put into an <code>Unmodified</code> state. To update members of a child collection, you must explicitly call <code>Attach</code> and specify that entity.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"DLinqNTier#4\">Using db = New Northwnd(&quot;...&quot;)\n    Dim Cust_File As New Customer()\n    Dim xmlFile As String = &quot;&quot;\n\n    &#39;Get the original object from the deserializer.\n    Dim c As Customer = SerializeHelper.Deserialize(Of Customer)(xmlFile, Cust_File)\n\n    &#39; Set all the desired properties to the entity to be attached.\n    Dim c_updated As New Customer With {.CustomerID = c.CustomerID, _\n    .Phone = &quot;425-123-4567&quot;, .CompanyName = &quot;Microsoft&quot;}\n    db.Customers.Attach(c_updated, c)\n\n    &#39; Perform last minute updates, which will still take effect. \n    c_updated.Phone = &quot;425-765-4321&quot;\n\n    &#39; SubmitChanges()sets the phoneNumber and CompanyName of\n    &#39; customer with customerID=Cust. to &quot;425-765-4321&quot; and\n    &#39; &quot;Microsoft&quot; respectively.\n    db.SubmitChanges()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DLinqNTier#4\">using (Northwnd db2 = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;))\n{\n    Customer Cust_File = new Customer();\n    string xmlFile = &quot;&quot;;\n    \n    // Get the original object from the deserializer.\n    Customer c = SerializeHelper.Deserialize&lt;Customer&gt;\n        (xmlFile, Cust_File);\n\n    // Set all the desired properties to the entity to be attached.\n    Customer c_updated = new Customer() { CustomerID = c.CustomerID,\n        Phone = &quot;425-123-4567&quot;, CompanyName = &quot;Microsoft&quot; };\n    db2.Customers.Attach(c_updated, c);\n\n    // Perform last minute updates, which will still take effect. \n    c_updated.Phone = &quot;425-765-4321&quot;;\n\n    // SubmitChanges()sets the phoneNumber and CompanyName of\n    // customer with customerID=Cust. to &quot;425-765-4321&quot; and\n    // &quot;Microsoft&quot; respectively.\n    db2.SubmitChanges();  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_AttachAll__1_System_Collections_Generic_IEnumerable___0__\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_AttachAll_TSubEntity__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttachAll&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AttachAll&lt;TSubEntity&gt; (System.Collections.Generic.IEnumerable&lt;TSubEntity&gt; entities) where TSubEntity : TEntity;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TSubEntity</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of entities.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method attaches all entities of a collection to a new <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>. When a new entity is attached, deferred loaders for any child collections (for example, <code>EntitySet</code> collections of entities from associated tables) are initialized. When <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called, members of the child collections are put into an <code>Unmodified</code> state. To update members of a child collection, you must explicitly call <code>Attach</code> and specify that entity.  </p>\n<p> For more information, see <a href=\"../Topic/Data%20Retrieval%20and%20CUD%20Operations%20in%20N-Tier%20Applications%20(LINQ%20to%20SQL).md\" data-linktype=\"relative-path\">Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_AttachAll__1_System_Collections_Generic_IEnumerable___0__System_Boolean_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_AttachAll_TSubEntity__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttachAll&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AttachAll&lt;TSubEntity&gt; (System.Collections.Generic.IEnumerable&lt;TSubEntity&gt; entities, bool asModified) where TSubEntity : TEntity;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TSubEntity</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of entities.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asModified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the object has a timestamp or RowVersion member; <code>false</code> if original values are being used for the optimistic concurrency check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a <em>modified</em> or <em>unmodified</em> state. If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking. If attaching as unmodified, the entity is assumed to represent the original value. After calling this method, the entity&#39;s fields can be modified with other information from the client before <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called. For more information, see <a href=\"../Topic/Data%20Retrieval%20and%20CUD%20Operations%20in%20N-Tier%20Applications%20(LINQ%20to%20SQL).md\" data-linktype=\"relative-path\">Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)</a>.  </p>\n<p> When a new entity is attached, deferred loaders for any child collections (for example, <code>EntitySet</code> collections of entities from associated tables) are initialized. When <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called, members of the child collections are put into an <code>Unmodified</code> state. To update members of a child collection, you must explicitly call <code>Attach</code> and specify that entity.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how you can update an <code>Order</code> object on a different <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> instance. The example assumes that you have a connection to a database and have made a LINQ to SQL file for it (in this case, the Northwind sample database).  </p>\n<pre><code class=\"lang-vb\" name=\"DLinqNTier#1\">Using db As New Northwnd(&quot;&quot;)\n    &#39; Get original Customer from deserialization.\n    Dim q1 = db.Orders.First()\n    Dim serializedQ As String = SerializeHelper.Serialize(q1)\n    Dim q2 = SerializeHelper.Deserialize(serializedQ, q1)\n\n    &#39; Track this object for an update (not insert).\n    db.Orders.Attach(q2, False)\n\n    &#39; Replay the changes.\n    q2.ShipRegion = &quot;King&quot;\n    q2.ShipAddress = &quot;1 Microsoft Way&quot;\n\n    &#39; DataContext knows how to update the order.\n    db.SubmitChanges()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DLinqNTier#1\">using (Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;))\n{\n    // Get original Customer from deserialization.\n    var q1 = db.Orders.First();\n    string serializedQ = SerializeHelper.Serialize(q1);\n    var q2 = SerializeHelper.Deserialize(serializedQ, q1);\n\n    // Track this object for an update (not insert).\n    db.Orders.Attach(q2, false);\n\n    // Replay the changes.\n    q2.ShipRegion = &quot;King&quot;;\n    q2.ShipAddress = &quot;1 Microsoft Way&quot;;\n\n    // DataContext knows how to update the order.\n    db.SubmitChanges();\n                   \n}\n</code></pre><p> In the following example, an entity object to be attached has a foreign key relation with another object and is stored in the cache but not attached. When you call <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a>, the <code>ChangeProcessor</code> adds an <code>Insert</code> operation for all the foreign key objects. This is a side-effect when an entity instance is re-used in a different <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> instance. For this reason, LINQ to SQL does not support re-use of objects.  </p>\n<pre><code class=\"lang-vb\" name=\"DlinqNTier#7\">Sub method7()\n    Dim c As Customer = Nothing\n    Using db = New Northwnd(&quot;...&quot;)\n        &#39; Get both the customer c and the customer&#39;s order\n        &#39; into the cache.\n        c = db.Customers.First()\n        Dim sc = c.Orders.First().ShipCity\n    End Using\n\n    Using nw2 = New Northwnd(&quot;...&quot;)\n        &#39; Attach customers and update the address.\n        nw2.Customers.Attach(c, False)\n        c.Address = &quot;new&quot;\n        nw2.Log = Console.Out\n\n        &#39; At SubmitChanges, you will see INSERT requests for all\n        &#39; c&#39;s orders.\n        nw2.SubmitChanges()\n    End Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DlinqNTier#7\">Customer c = null;\nusing (Northwnd db = new Northwnd(&quot;&quot;))\n{\n    /* Get both the customer c and the customer&#39;s order\n    into the cache. */\n    c = db.Customers.First();\n    string sc = c.Orders.First().ShipCity;\n}\n\nusing (Northwnd nw2 = new Northwnd(&quot;&quot;))\n{\n    // Attach customers and update the address.\n    nw2.Customers.Attach(c, false);\n    c.Address = &quot;new&quot;;\n    nw2.Log = Console.Out;\n\n    /* At SubmitChanges, you will see INSERT requests for all\n    Customer c’s orders. */\n    nw2.SubmitChanges();\n}\n</code></pre><p> The following example shows a scenario in which Customer A has canceled all orders and Customer B has taken ownership of them. You can attach all orders of Customer A at the same time.  </p>\n<pre><code class=\"lang-vb\" name=\"DlinqNTier#3\">Dim custA_File = New Customer()\nDim custB_File = New Customer()\nDim xmlFileA As String = &quot;&quot;\nDim xmlFileB As String = &quot;&quot;\n\n&#39; Get the serialized objects.\nDim A As Customer = SerializeHelper.Deserialize(Of Customer)(xmlFileA, custA_File)\nDim B As Customer = SerializeHelper.Deserialize(Of Customer)(xmlFileB, custB_File)\n\nDim AOrders As List(Of Order) = A.Orders.ToList()\n\nUsing db As New Northwnd(&quot;...&quot;)\n    &#39;Attach all the orders belonging to Customer A all at once.\n    db.Orders.AttachAll(AOrders, False)\n\n    &#39; Update the orders belonging to Customer A to show them\n    &#39; as owned by Customer B\n    For Each o In AOrders\n        o.CustomerID = B.CustomerID\n    Next\n\n    &#39; DataContext can now apply the change of ownership to\n    &#39;the database\n    db.SubmitChanges()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"DlinqNTier#3\">Customer CustA_File = new Customer();\nCustomer CustB_File = new Customer();\nstring xmlFileA = &quot;&quot;;\nstring xmlFileB = &quot;&quot;;\n\n// Get the serialized objects.\nCustomer A = SerializeHelper.Deserialize&lt;Customer&gt;(xmlFileA, CustA_File);\nCustomer B = SerializeHelper.Deserialize&lt;Customer&gt;(xmlFileB, CustB_File);\nList&lt;Order&gt; AOrders = A.Orders.ToList();\n\nusing (Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;))\n\n{\n    //Attach all the orders belonging to Customer A all at once.\n    db.Orders.AttachAll(AOrders, false);\n\n    // Update the orders belonging to Customer A to show them\n    // as owned by Customer B.\n    foreach (Order o in AOrders)\n    {\n        o.CustomerID = B.CustomerID;\n    }\n\n    // DataContext can now apply the change of ownership to\n    // the database.\n    db.SubmitChanges();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_DeleteAllOnSubmit__1_System_Collections_Generic_IEnumerable___0__\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_DeleteAllOnSubmit_TSubEntity__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteAllOnSubmit&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Puts all entities from the collection into a <code>pending delete</code> state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DeleteAllOnSubmit&lt;TSubEntity&gt; (System.Collections.Generic.IEnumerable&lt;TSubEntity&gt; entities) where TSubEntity : TEntity;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TSubEntity</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entities to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Entities that are put into the pending delete state with this method do not disappear from query results until after <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called. Disconnected entities must be attached before they can be deleted. For more information, see <a href=\"../Topic/Data%20Retrieval%20and%20CUD%20Operations%20in%20N-Tier%20Applications%20(LINQ%20to%20SQL).md\" data-linktype=\"relative-path\">Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)</a>.  </p>\n<p> The following C# snippet shows one use for this method:  </p>\n<pre><code>IEnumerable&lt;Customer&gt; customersWithoutOrders = (from c in db.Customers  \n   where c.Orders.Count == 0  \n   select c).ToList();  \n\ndb.Customers.DeleteAllOnSubmit(customersWithoutOrders);  \ndb.SubmitChanges();  \n</code></pre><p> In Visual Basic:  </p>\n<pre><code>Dim customersWithoutOrders As IEnumerable(Of Customer) = (From c In db.Customers _   \n    Where c.Orders.Count = 0 _   \n    Select c).ToList()  \n\ndb.Customers.DeleteAllOnSubmit(customersWithoutOrders)  \ndb.SubmitChanges()  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_DeleteOnSubmit__0_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_DeleteOnSubmit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteOnSubmit(TEntity)</div>        \r\n          </div>\r\n    \r\n            <p>Puts an entity from this table into a <code>pending delete</code> state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DeleteOnSubmit (TEntity entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be deleted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The removed entity does not disappear from the query results until after <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called. Disconnected entities must first be attached before they can be deleted. For more information, see <a href=\"../Topic/Data%20Retrieval%20and%20CUD%20Operations%20in%20N-Tier%20Applications%20(LINQ%20to%20SQL).md\" data-linktype=\"relative-path\">Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> LINQ to SQL does not support or recognize cascade-delete operations. If you want to delete a row in a table that has constraints against it, you must either set the <code>ON DELETE CASCADE</code> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted. Otherwise, an exception is thrown.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"System.Data.Linq.Table#3\">// Query the database for the rows to be deleted.\nvar deleteOrderDetails =\n    from details in db.OrderDetails\n    where details.OrderID == 11000\n    select details;\n\nforeach (var detail in deleteOrderDetails)\n{\n    db.OrderDetails.DeleteOnSubmit(detail);\n}\n                        \ntry\n{\n    db.SubmitChanges();\n}\ncatch (Exception e)\n{\n    Console.WriteLine(e);\n    // Provide for exceptions.\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.Table#3\">&#39; Query the database for the rows to be deleted.\nDim deleteOrderDetails = _\n    From details In db.OrderDetails() _\n    Where details.OrderID = 11000 _\n    Select details\n\nFor Each detail As OrderDetail In deleteOrderDetails\n    db.OrderDetails.DeleteOnSubmit(detail)\nNext\n\nTry\n    db.SubmitChanges()\nCatch ex As Exception\n    Console.WriteLine(ex)\n    &#39; Provide for exceptions\nEnd Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_GetEnumerator\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Gets an enumerator that iterates through the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerator&lt;TEntity&gt; GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator</a>&lt;<span class=\"xref\">TEntity</span>&gt;</div>\r\n                  </div>\r\n                  <p>An enumerator that can be used to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_GetModifiedMembers__0_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_GetModifiedMembers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetModifiedMembers(TEntity)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of modified members that contain their current and original values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (TEntity entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity from which to get the array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.modifiedmemberinfo\" data-linktype=\"relative-path\">ModifiedMemberInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of modified members that contain their current and original values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_GetNewBindingList\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_GetNewBindingList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNewBindingList()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new list for binding to a data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.IBindingList GetNewBindingList ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> for binding to a data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_GetOriginalEntityState__0_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_GetOriginalEntityState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOriginalEntityState(TEntity)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <span class=\"xref\">stem.Data.Linq.Table`1</span> instance that contains the original state of the entity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TEntity GetOriginalEntityState (TEntity entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity whose original state is to be returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Data.Linq.Table`1</span> instance that contains the original state of the entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the original state of an entity since it was either created or attached to the current <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>. The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>. For more information, see <a href=\"../Topic/Data%20Retrieval%20and%20CUD%20Operations%20in%20N-Tier%20Applications%20(LINQ%20to%20SQL).md\" data-linktype=\"relative-path\">Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_InsertAllOnSubmit__1_System_Collections_Generic_IEnumerable___0__\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_InsertAllOnSubmit_TSubEntity__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertAllOnSubmit&lt;TSubEntity&gt;(IEnumerable&lt;TSubEntity&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in a <code>pending insert</code> state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InsertAllOnSubmit&lt;TSubEntity&gt; (System.Collections.Generic.IEnumerable&lt;TSubEntity&gt; entities) where TSubEntity : TEntity;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TSubEntity</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entities to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The added entities will not be in query results until after <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> has been called.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_InsertOnSubmit__0_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_InsertOnSubmit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertOnSubmit(TEntity)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an entity in a <code>pending insert</code> state to this <span class=\"xref\">stem.Data.Linq.Table`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InsertOnSubmit (TEntity entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TEntity</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The added entity will not appear in query results from this table until after <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> has been called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"System.Data.Linq.Table#1\">// Create a new Order object.\nOrder ord = new Order\n{\n    OrderID = 12000,\n    ShipCity = &quot;Seattle&quot;,\n    OrderDate = DateTime.Now\n    // …\n};\n\n// Add the new object to the Orders collection.\ndb.Orders.InsertOnSubmit(ord);\n\n// Submit the change to the database.\ntry\n{\n    db.SubmitChanges();\n}\ncatch (Exception e)\n{\n    Console.WriteLine(e);\n    // Make some adjustments.\n    // ...\n    // Try again.\n    db.SubmitChanges();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.Table#1\">&#39; Create a new Order object.\nDim ord As New Order With _\n{.OrderID = 12000, _\n .ShipCity = &quot;Seattle&quot;, _\n .OrderDate = DateTime.Now}\n\n&#39; Add the new object to the Orders collection.\ndb.Orders.InsertOnSubmit(ord)\n\n&#39; Submit the change to the database.\nTry\n    db.SubmitChanges()\nCatch e As Exception\n    Console.WriteLine(e)\n    &#39; Make some adjustments.\n    &#39; ...\n    &#39; Try again.\n    db.SubmitChanges()\nEnd Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_ToString\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string that represents the table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the table.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Collections_Generic_IEnumerable_TEntity__GetEnumerator\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Collections_Generic_IEnumerable_TEntity__GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable&lt;TEntity&gt;.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.Generic.IEnumerator&lt;TEntity&gt; IEnumerable&lt;TEntity&gt;.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator</a>&lt;<span class=\"xref\">TEntity</span>&gt;</div>\r\n                  </div>\r\n                  <p>An enumerator that can be used to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator that can be used to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_ComponentModel_IListSource_ContainsListCollection\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_ComponentModel_IListSource_ContainsListCollection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IListSource.ContainsListCollection</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the collection is a collection of <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.ComponentModel.IListSource.ContainsListCollection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the collection is a collection of <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> objects; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_ComponentModel_IListSource_GetList\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_ComponentModel_IListSource_GetList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IListSource.GetList()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> that can be bound to a data source from an object that does not implement an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> itself.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IList IListSource.GetList ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> that can be bound to a data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.Attach(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in an unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.Attach (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be attached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.Attach(Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.Attach (object entity, bool asModified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be attached.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asModified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to attach the entity as modified; <code>false</code> to attached the entity as unmodified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_Attach_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.Attach(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches an entity to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state by specifying both the entity and its original state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.Attach (object entity, object original);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be attached.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>original</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the same entity type with data members that contain the original values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_AttachAll_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_AttachAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.AttachAll(IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.AttachAll (System.Collections.IEnumerable entities);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of entities to be attached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_AttachAll_System_Collections_IEnumerable_System_Boolean_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_AttachAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.AttachAll(IEnumerable,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in either a modified or unmodified state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.AttachAll (System.Collections.IEnumerable entities, bool asModified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of entities to be attched.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asModified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to attach the entities as modified; <code>false</code> to attach the entities as unmodified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_DeleteAllOnSubmit_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_DeleteAllOnSubmit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.DeleteAllOnSubmit(IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Puts all entities from the collection into a <code>pending delete</code> state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.DeleteAllOnSubmit (System.Collections.IEnumerable entities);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entities being removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_DeleteOnSubmit_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_DeleteOnSubmit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.DeleteOnSubmit(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Puts an entity from this table into a <code>pending delete</code> state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.DeleteOnSubmit (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> LINQ to SQL does not support or recognize cascade-delete operations. If you want to delete a row in a table that has constraints against it, you must either set the <code>ON DELETE CASCADE</code> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted. Otherwise, an exception is thrown.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_GetModifiedMembers_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_GetModifiedMembers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.GetModifiedMembers(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of modified members that contain their current and original values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Data.Linq.ModifiedMemberInfo[] ITable.GetModifiedMembers (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity from which to obtain the modified members.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.modifiedmemberinfo\" data-linktype=\"relative-path\">ModifiedMemberInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of modified members.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_GetOriginalEntityState_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_GetOriginalEntityState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.GetOriginalEntityState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves original values of a given entity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object ITable.GetOriginalEntityState (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity whose original state is to be accessed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A copy of the original entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_InsertAllOnSubmit_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_InsertAllOnSubmit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.InsertAllOnSubmit(IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Adds all entities of a collection to the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> in an <code>pending insert</code> state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.InsertAllOnSubmit (System.Collections.IEnumerable entities);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of entities to be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_InsertOnSubmit_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Data_Linq_ITable_InsertOnSubmit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ITable.InsertOnSubmit(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an entity in a <code>pending insert</code> state to this table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ITable.InsertOnSubmit (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryable_ElementType\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryable_ElementType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryable.ElementType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">Type System.Linq.IQueryable.ElementType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type of the element(s) that are returned when the expression tree associated with this object is executed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryable_Expression\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryable_Expression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryable.Expression</div>        \r\n          </div>\r\n    \r\n            <p>Gets the expression tree that is associated with this instance of <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a> that is associated with this instance of <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryable_Provider\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryable_Provider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryable.Provider</div>        \r\n          </div>\r\n    \r\n            <p>Gets the query provider that is associated with this data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.iqueryprovider\" data-linktype=\"relative-path\">IQueryProvider</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.linq.iqueryprovider\" data-linktype=\"relative-path\">IQueryProvider</a> that is associated with this data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_CreateQuery_System_Linq_Expressions_Expression_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_CreateQuery_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryProvider.CreateQuery(Expression)</div>        \r\n          </div>\r\n    \r\n            <p>Constructs an <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a> object that can evaluate the query represented by a specified expression tree.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Linq.IQueryable IQueryProvider.CreateQuery (System.Linq.Expressions.Expression expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The query expression from which the evaluation is performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a> that can evaluate the query represented by the specified expression tree.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryprovider\" data-linktype=\"relative-path\">IQueryProvider</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_CreateQuery__1_System_Linq_Expressions_Expression_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_CreateQuery_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryProvider.CreateQuery&lt;TResult&gt;(Expression)</div>        \r\n          </div>\r\n    \r\n            <p>Constructs an <span class=\"xref\">stem.Linq.IQueryable`1</span> object that can evaluate the query represented by a specified expression tree.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Linq.IQueryable&lt;TResult&gt; IQueryProvider.CreateQuery&lt;TResult&gt; (System.Linq.Expressions.Expression expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The query expression from which the evaluation is performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.iqueryable-1\" data-linktype=\"relative-path\">IQueryable</a>&lt;<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Linq.IQueryable`1</span> that can evaluate the query represented by the specified expression tree.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryprovider\" data-linktype=\"relative-path\">IQueryProvider</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_Execute_System_Linq_Expressions_Expression_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_Execute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryProvider.Execute(Expression)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the query represented by a specified expression tree.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IQueryProvider.Execute (System.Linq.Expressions.Expression expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The query expression to execute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The value that results from executing the specified query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryprovider\" data-linktype=\"relative-path\">IQueryProvider</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_Execute__1_System_Linq_Expressions_Expression_\">\r\n    \r\n            <a id=\"System_Data_Linq_Table_1_System_Linq_IQueryProvider_Execute_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IQueryProvider.Execute&lt;TResult&gt;(Expression)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the strongly-typed query represented by a specified expression tree.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">TResult IQueryProvider.Execute&lt;TResult&gt; (System.Linq.Expressions.Expression expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The query expression to execute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <p>The value that results from executing the specified query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table&lt;TEntity&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.linq.iqueryprovider\" data-linktype=\"relative-path\">IQueryProvider</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.Table-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.Table-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.Attach\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.AttachAll&lt;TSubEntity&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.Context\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.DeleteAllOnSubmit&lt;TSubEntity&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.DeleteOnSubmit\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.GetModifiedMembers\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.GetNewBindingList\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.GetOriginalEntityState\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.InsertAllOnSubmit&lt;TSubEntity&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.InsertOnSubmit\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IEnumerable&lt;TEntity&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IListSource.ContainsListCollection\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IListSource.GetList\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.Attach\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.AttachAll\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.DeleteAllOnSubmit\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.DeleteOnSubmit\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.GetModifiedMembers\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.GetOriginalEntityState\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.InsertAllOnSubmit\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ITable.InsertOnSubmit\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryable.ElementType\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryable.Expression\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryable.Provider\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryProvider.CreateQuery\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryProvider.CreateQuery&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryProvider.Execute\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.IQueryProvider.Execute&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.Table&lt;TEntity&gt;.ToString\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ce638f0c-5cc0-ce23-2624-97f7ebd2a9f3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a table for a particular type in the underlying database.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.Linq/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.Table`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.Table-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.Table-1.yml","open_to_public_contributors":true,"api_name":["System.Data.Linq.Table<TEntity>","System.Data.Linq.Table<TEntity>.Attach","System.Data.Linq.Table<TEntity>.AttachAll<TSubEntity>","System.Data.Linq.Table<TEntity>.Context","System.Data.Linq.Table<TEntity>.DeleteAllOnSubmit<TSubEntity>","System.Data.Linq.Table<TEntity>.DeleteOnSubmit","System.Data.Linq.Table<TEntity>.GetEnumerator","System.Data.Linq.Table<TEntity>.GetModifiedMembers","System.Data.Linq.Table<TEntity>.GetNewBindingList","System.Data.Linq.Table<TEntity>.GetOriginalEntityState","System.Data.Linq.Table<TEntity>.InsertAllOnSubmit<TSubEntity>","System.Data.Linq.Table<TEntity>.InsertOnSubmit","System.Data.Linq.Table<TEntity>.IsReadOnly","System.Data.Linq.Table<TEntity>.IEnumerable<TEntity>.GetEnumerator","System.Data.Linq.Table<TEntity>.IEnumerable.GetEnumerator","System.Data.Linq.Table<TEntity>.IListSource.ContainsListCollection","System.Data.Linq.Table<TEntity>.IListSource.GetList","System.Data.Linq.Table<TEntity>.ITable.Attach","System.Data.Linq.Table<TEntity>.ITable.AttachAll","System.Data.Linq.Table<TEntity>.ITable.DeleteAllOnSubmit","System.Data.Linq.Table<TEntity>.ITable.DeleteOnSubmit","System.Data.Linq.Table<TEntity>.ITable.GetModifiedMembers","System.Data.Linq.Table<TEntity>.ITable.GetOriginalEntityState","System.Data.Linq.Table<TEntity>.ITable.InsertAllOnSubmit","System.Data.Linq.Table<TEntity>.ITable.InsertOnSubmit","System.Data.Linq.Table<TEntity>.IQueryable.ElementType","System.Data.Linq.Table<TEntity>.IQueryable.Expression","System.Data.Linq.Table<TEntity>.IQueryable.Provider","System.Data.Linq.Table<TEntity>.IQueryProvider.CreateQuery","System.Data.Linq.Table<TEntity>.IQueryProvider.CreateQuery<TResult>","System.Data.Linq.Table<TEntity>.IQueryProvider.Execute","System.Data.Linq.Table<TEntity>.IQueryProvider.Execute<TResult>","System.Data.Linq.Table<TEntity>.ToString"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.Table`1","System::Data::Linq::Table`1","System.Data.Linq.Table`1.Attach","System::Data::Linq::Table`1::Attach","System.Data.Linq.Table`1.AttachAll``1","System::Data::Linq::Table`1::AttachAll``1","System.Data.Linq.Table`1.Context","System::Data::Linq::Table`1::Context","System.Data.Linq.Table`1.DeleteAllOnSubmit``1","System::Data::Linq::Table`1::DeleteAllOnSubmit``1","System.Data.Linq.Table`1.DeleteOnSubmit","System::Data::Linq::Table`1::DeleteOnSubmit","System.Data.Linq.Table`1.GetEnumerator","System::Data::Linq::Table`1::GetEnumerator","System.Data.Linq.Table`1.GetModifiedMembers","System::Data::Linq::Table`1::GetModifiedMembers","System.Data.Linq.Table`1.GetNewBindingList","System::Data::Linq::Table`1::GetNewBindingList","System.Data.Linq.Table`1.GetOriginalEntityState","System::Data::Linq::Table`1::GetOriginalEntityState","System.Data.Linq.Table`1.InsertAllOnSubmit``1","System::Data::Linq::Table`1::InsertAllOnSubmit``1","System.Data.Linq.Table`1.InsertOnSubmit","System::Data::Linq::Table`1::InsertOnSubmit","System.Data.Linq.Table`1.IsReadOnly","System::Data::Linq::Table`1::IsReadOnly","System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator","System::Data::Linq::Table`1::System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator","System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator","System::Data::Linq::Table`1::System#Collections#IEnumerable#GetEnumerator","System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection","System::Data::Linq::Table`1::System#ComponentModel#IListSource#ContainsListCollection","System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList","System::Data::Linq::Table`1::System#ComponentModel#IListSource#GetList","System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach","System::Data::Linq::Table`1::System#Data#Linq#ITable#Attach","System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll","System::Data::Linq::Table`1::System#Data#Linq#ITable#AttachAll","System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit","System::Data::Linq::Table`1::System#Data#Linq#ITable#DeleteAllOnSubmit","System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit","System::Data::Linq::Table`1::System#Data#Linq#ITable#DeleteOnSubmit","System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers","System::Data::Linq::Table`1::System#Data#Linq#ITable#GetModifiedMembers","System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState","System::Data::Linq::Table`1::System#Data#Linq#ITable#GetOriginalEntityState","System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit","System::Data::Linq::Table`1::System#Data#Linq#ITable#InsertAllOnSubmit","System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit","System::Data::Linq::Table`1::System#Data#Linq#ITable#InsertOnSubmit","System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType","System::Data::Linq::Table`1::System#Linq#IQueryable#ElementType","System.Data.Linq.Table`1.System#Linq#IQueryable#Expression","System::Data::Linq::Table`1::System#Linq#IQueryable#Expression","System.Data.Linq.Table`1.System#Linq#IQueryable#Provider","System::Data::Linq::Table`1::System#Linq#IQueryable#Provider","System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery","System::Data::Linq::Table`1::System#Linq#IQueryProvider#CreateQuery","System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1","System::Data::Linq::Table`1::System#Linq#IQueryProvider#CreateQuery``1","System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute","System::Data::Linq::Table`1::System#Linq#IQueryProvider#Execute","System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1","System::Data::Linq::Table`1::System#Linq#IQueryProvider#Execute``1","System.Data.Linq.Table`1.ToString","System::Data::Linq::Table`1::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ce638f0c-5cc0-ce23-2624-97f7ebd2a9f3","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.Linq/Table`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Table<TEntity> class | Microsoft Docs","_op_ogTitle":"Table<TEntity> class","description":"Represents a table for a particular type in the underlying database.\n","toc_asset_id":"_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.Table`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.table-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.table-1","fileRelativePath":"System.Data.Linq.Table-1.html"},"themesRelativePathToOutputRoot":"_themes/"}