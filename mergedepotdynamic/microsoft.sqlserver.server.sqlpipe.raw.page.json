{"content":"    \r\n    <h1 id=\"Microsoft_SqlServer_Server_SqlPipe\">\r\n      <span class=\"lang-csharp\">SqlPipe</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class SqlPipe</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SqlPipe</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An instance of this class is made available to managed stored procedures through the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlcontext#Microsoft_SqlServer_Server_SqlContext_Pipe_\" data-linktype=\"relative-path\">Pipe</a> property of the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlcontext\" data-linktype=\"relative-path\">SqlContext</a> class.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_IsSendingResults\" data-linktype=\"self-bookmark\">IsSendingResults</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> is in the mode of sending single result sets back to the client. This property is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_ExecuteAndSend_System_Data_SqlClient_SqlCommand_\" data-linktype=\"self-bookmark\">ExecuteAndSend(SqlCommand)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the command passed as a parameter and sends the results to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_Send_Microsoft_SqlServer_Server_SqlDataRecord_\" data-linktype=\"self-bookmark\">Send(SqlDataRecord)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends a single-row result set directly to the client or current output consumer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_Send_System_Data_SqlClient_SqlDataReader_\" data-linktype=\"self-bookmark\">Send(SqlDataReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends a multirow result set directly to the client or current output consumer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_Send_System_String_\" data-linktype=\"self-bookmark\">Send(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends a string message directly to the client or current output consumer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd\" data-linktype=\"self-bookmark\">SendResultsEnd()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Marks the end of a result set, and returns the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> instance back to the initial state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_Microsoft_SqlServer_Server_SqlDataRecord_\" data-linktype=\"self-bookmark\">SendResultsRow(SqlDataRecord)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends a single row of data back to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_Microsoft_SqlServer_Server_SqlDataRecord_\" data-linktype=\"self-bookmark\">SendResultsStart(SqlDataRecord)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_IsSendingResults\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_IsSendingResults_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSendingResults</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> is in the mode of sending single result sets back to the client. This property is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSendingResults { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">crosoft.SqlServer.Server.SqlPipe.SendResultsStart*</span> method has been called and the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> is in the mode of sending single result sets back to the client; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_ExecuteAndSend_System_Data_SqlClient_SqlCommand_\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_ExecuteAndSend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteAndSend(SqlCommand)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the command passed as a parameter and sends the results to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object to be executed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>command</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported on commands bound to out-of-process connections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In addition to any actual results, other messages and errors are also sent directly to the client.  </p>\n<p> Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.  </p>\n<p> If the command is not bound to an in-process connection, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. This method is not supported on commands bound to out-of-process connections.  </p>\n<p> If there are errors in the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code. If the calling code doesn&#39;t catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice. If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> and <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> to select rows from a data source in a stored procedure. The example then uses a <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> to execute the command and send the results back to the client.  </p>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlPipe.ExecuteAndSend#1\">\t[Microsoft.SqlServer.Server.SqlProcedure()]\n\tpublic static void StoredProcExecuteCommand(int rating)\n\t{\n\t\t// Connect through the context connection.\n\t\tusing (SqlConnection connection = new SqlConnection(&quot;context connection=true&quot;))\n\t\t{\n\t\t\tconnection.Open();\n\n\t\t\tSqlCommand command = new SqlCommand(\n\t\t\t\t&quot;SELECT VendorID, AccountNumber, Name FROM Purchasing.Vendor &quot; +\n\t\t\t\t&quot;WHERE CreditRating &lt;= @rating&quot;, connection);\n\t\t\tcommand.Parameters.AddWithValue(&quot;@rating&quot;, rating);\n\n\t\t\t// Execute the command and send the results directly to the client.\n\t\t\tSqlContext.Pipe.ExecuteAndSend(command);\n\t\t\t\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlPipe.ExecuteAndSend#1\">    &lt;Microsoft.SqlServer.Server.SqlProcedure()&gt; _\n    Public Shared Sub StoredProcExecuteCommand(ByVal rating As Integer)\n        Dim command As SqlCommand\n\n        &#39; Connect through the context connection\n        Using connection As New SqlConnection(&quot;context connection=true&quot;)\n            connection.Open()\n\n            command = New SqlCommand( _\n                &quot;SELECT VendorID, AccountNumber, Name FROM Purchasing.Vendor &quot; &amp; _\n                &quot;WHERE CreditRating &lt;= @rating&quot;, connection)\n            command.Parameters.AddWithValue(&quot;@rating&quot;, rating)\n\n            &#39; Execute the command and send the results directly to the client\n            SqlContext.Pipe.ExecuteAndSend(command)\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_Send_Microsoft_SqlServer_Server_SqlDataRecord_\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(SqlDataRecord)</div>        \r\n          </div>\r\n    \r\n            <p>Sends a single-row result set directly to the client or current output consumer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>record</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The single-row result set sent to the client: a <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>record</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_Send_System_Data_SqlClient_SqlDataReader_\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(SqlDataReader)</div>        \r\n          </div>\r\n    \r\n            <p>Sends a multirow result set directly to the client or current output consumer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Send (System.Data.SqlClient.SqlDataReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The multirow result set to be sent to the client: a <a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>reader</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_Send_System_String_\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(String)</div>        \r\n          </div>\r\n    \r\n            <p>Sends a string message directly to the client or current output consumer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Send (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message string to be sent to the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>message</code> is greater than 4,000 characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>message</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The message string is sent as an informational message to the client. Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use. For example, if the client is using ADO.NET, the messages transmit through the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_InfoMessage\" data-linktype=\"relative-path\">InfoMessage</a> event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Send method to send a message string directly to the client.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlPipe.Send#1\">    &lt;Microsoft.SqlServer.Server.SqlProcedure()&gt; _\n    Public Shared Sub StoredProcSendMessage()\n\n        &#39; Send a message string back to the client.\n        SqlContext.Pipe.Send(&quot;Hello world!&quot;)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlPipe.Send#1\">\t[Microsoft.SqlServer.Server.SqlProcedure]\n\tpublic static void StoredProcSendMessage()\n\t{\n\t\t// Send a message string back to the client.\n\t\tSqlContext.Pipe.Send(&quot;Hello World!&quot;);\n\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendResultsEnd()</div>        \r\n          </div>\r\n    \r\n            <p>Marks the end of a result set, and returns the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> instance back to the initial state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendResultsEnd ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">crosoft.SqlServer.Server.SqlPipe.SendResultsStart*</span> method was not previously called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Managed stored procedures can send result sets to clients that are not implementing a <a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a>. This method, along with <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_\" data-linktype=\"relative-path\">SendResultsStart</a> and <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\" data-linktype=\"relative-path\">SendResultsRow</a>, allow stored procedures to send custom result sets to the client.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> and its <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlmetadata\" data-linktype=\"relative-path\">SqlMetaData</a>. The example then marks the beginning of a result set using the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_\" data-linktype=\"relative-path\">SendResultsStart</a> method, sends records with example data back to the client using the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\" data-linktype=\"relative-path\">SendResultsRow</a> method, and marks the end of the result set with the SendResultsEnd method.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlPipe.SendResultsEnd#1\">    &lt;Microsoft.SqlServer.Server.SqlProcedure()&gt; _\n    Public Shared Sub StoredProcReturnResultSet()\n\n        &#39; Create the record and specify the metadata for the columns.\n        Dim record As New SqlDataRecord( _\n            New SqlMetaData(&quot;col1&quot;, SqlDbType.NVarChar, 100), _\n            New SqlMetaData(&quot;col2&quot;, SqlDbType.Int))\n\n        &#39; Mark the begining of the result-set.\n        SqlContext.Pipe.SendResultsStart(record)\n\n        &#39; Send 10 rows back to the client.\n        Dim i As Integer\n        For i = 0 To 9\n\n            &#39; Set values for each column in the row.\n            record.SetString(0, &quot;row &quot; &amp; i.ToString())\n            record.SetInt32(1, i)\n\n            &#39; Send the row back to the client.\n            SqlContext.Pipe.SendResultsRow(record)\n        Next\n\n        &#39; Mark the end of the result-set.\n        SqlContext.Pipe.SendResultsEnd()\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlPipe.SendResultsEnd#1\">\t[Microsoft.SqlServer.Server.SqlProcedure]\n\tpublic static void StoredProcReturnResultSet()\n\t{\n\t\t// Create the record and specify the metadata for the columns.\n\t\tSqlDataRecord record = new SqlDataRecord(\n\t\t\tnew SqlMetaData(&quot;col1&quot;, SqlDbType.NVarChar, 100),\n\t\t\tnew SqlMetaData(&quot;col2&quot;, SqlDbType.Int));\n\n\t\t// Mark the begining of the result-set.\n\t\tSqlContext.Pipe.SendResultsStart(record);\n\n\t\t// Send 10 rows back to the client.\n\t\tfor (int i = 0; i &lt; 10; i++)\n\t\t{\n\t\t\t// Set values for each column in the row.\n\t\t\trecord.SetString(0, &quot;row &quot; + i.ToString());\n\t\t\trecord.SetInt32(1, i);\n\n\t\t\t// Send the row back to the client.\n\t\t\tSqlContext.Pipe.SendResultsRow(record);\n\t\t}\n\n\t\t// Mark the end of the result-set.\n\t\tSqlContext.Pipe.SendResultsEnd();\n\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_Microsoft_SqlServer_Server_SqlDataRecord_\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendResultsRow(SqlDataRecord)</div>        \r\n          </div>\r\n    \r\n            <p>Sends a single row of data back to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>record</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> object with the column values for the row to be sent to the client. The schema for the record must match the schema described by the metadata of the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> passed to the <span class=\"xref\">crosoft.SqlServer.Server.SqlPipe.SendResultsStart*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>record</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">crosoft.SqlServer.Server.SqlPipe.SendResultsStart*</span> method was not previously called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Managed stored procedures can send result sets to clients that are not implementing a <a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a>. This method, along with <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_\" data-linktype=\"relative-path\">SendResultsStart</a> and <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a>, allows stored procedures to send custom result sets to the client.  </p>\n<p> The SendResultsRow method sends a single row of data back to the client. Rows can subsequently be returned to the caller by calling SendResultsRow, one time for each row being sent. After all the rows have been sent, a call to the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a> method is required to mark the end of the result set.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> and its <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlmetadata\" data-linktype=\"relative-path\">SqlMetaData</a>. The example then marks the beginning of a result set using the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_\" data-linktype=\"relative-path\">SendResultsStart</a> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlPipe.SendResultsRow#1\">    &lt;Microsoft.SqlServer.Server.SqlProcedure()&gt; _\n    Public Shared Sub StoredProcReturnResultSet()\n\n        &#39; Create the record and specify the metadata for the columns.\n        Dim record As New SqlDataRecord( _\n            New SqlMetaData(&quot;col1&quot;, SqlDbType.NVarChar, 100), _\n            New SqlMetaData(&quot;col2&quot;, SqlDbType.Int))\n\n        &#39; Mark the begining of the result-set.\n        SqlContext.Pipe.SendResultsStart(record)\n\n        &#39; Send 10 rows back to the client.\n        Dim i As Integer\n        For i = 0 To 9\n\n            &#39; Set values for each column in the row.\n            record.SetString(0, &quot;row &quot; &amp; i.ToString())\n            record.SetInt32(1, i)\n\n            &#39; Send the row back to the client.\n            SqlContext.Pipe.SendResultsRow(record)\n        Next\n\n        &#39; Mark the end of the result-set.\n        SqlContext.Pipe.SendResultsEnd()\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlPipe.SendResultsRow#1\">\t[Microsoft.SqlServer.Server.SqlProcedure]\n\tpublic static void StoredProcReturnResultSet()\n\t{\n\t\t// Create the record and specify the metadata for the columns.\n\t\tSqlDataRecord record = new SqlDataRecord(\n\t\t\tnew SqlMetaData(&quot;col1&quot;, SqlDbType.NVarChar, 100),\n\t\t\tnew SqlMetaData(&quot;col2&quot;, SqlDbType.Int));\n\n\t\t// Mark the begining of the result-set.\n\t\tSqlContext.Pipe.SendResultsStart(record);\n\n\t\t// Send 10 rows back to the client.\n\t\tfor (int i = 0; i &lt; 10; i++)\n\t\t{\n\t\t\t// Set values for each column in the row.\n\t\t\trecord.SetString(0, &quot;row &quot; + i.ToString());\n\t\t\trecord.SetInt32(1, i);\n\n\t\t\t// Send the row back to the client.\n\t\t\tSqlContext.Pipe.SendResultsRow(record);\n\t\t}\n\n\t\t// Mark the end of the result-set.\n\t\tSqlContext.Pipe.SendResultsEnd();\n\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_Microsoft_SqlServer_Server_SqlDataRecord_\">\r\n    \r\n            <a id=\"Microsoft_SqlServer_Server_SqlPipe_SendResultsStart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendResultsStart(SqlDataRecord)</div>        \r\n          </div>\r\n    \r\n            <p>Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>record</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> object from which metadata is extracted and used to describe the result set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>record</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>record</code> has no columns or has not been initialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A method other than <span class=\"xref\">crosoft.SqlServer.Server.SqlPipe.SendResultsRow*</span> or <span class=\"xref\">crosoft.SqlServer.Server.SqlPipe.SendResultsEnd*</span> was called after the SendResultsStart method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Managed stored procedures can send result sets to clients that are not implementing a <a class=\"xref\" href=\"system.data.sqlclient.sqldatareader\" data-linktype=\"relative-path\">SqlDataReader</a>. This method, along with <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\" data-linktype=\"relative-path\">SendResultsRow</a> and <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a>, allow stored procedures to send custom result sets to the client.  </p>\n<p> The SendResultsStart method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set. All the subsequent rows, sent using the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\" data-linktype=\"relative-path\">SendResultsRow</a> method, must match that metadata definition.  </p>\n<p> Note that after calling SendResultsStart, only <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\" data-linktype=\"relative-path\">SendResultsRow</a> and <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a> can be called. Any other method in the same instance of <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a> sets <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe\" data-linktype=\"relative-path\">SqlPipe</a> back to the initial state where other methods can be called.  </p>\n<p> After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory. For example, do not store an instance of an in process class, for example <code>SQLDataRecord</code>, which will be used after control returns from CLR. One exception is the <code>SQLMetaData</code> in process class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"microsoft.sqlserver.server.sqldatarecord\" data-linktype=\"relative-path\">SqlDataRecord</a> and its <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlmetadata\" data-linktype=\"relative-path\">SqlMetaData</a>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsRow_\" data-linktype=\"relative-path\">SendResultsRow</a> method, and marks the end of the result set with the <a class=\"xref\" href=\"microsoft.sqlserver.server.sqlpipe#Microsoft_SqlServer_Server_SqlPipe_SendResultsEnd_\" data-linktype=\"relative-path\">SendResultsEnd</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlPipe.SendResultsStart#1\">    &lt;Microsoft.SqlServer.Server.SqlProcedure()&gt; _\n    Public Shared Sub StoredProcReturnResultSet()\n\n        &#39; Create the record and specify the metadata for the columns.\n        Dim record As New SqlDataRecord( _\n            New SqlMetaData(&quot;col1&quot;, SqlDbType.NVarChar, 100), _\n            New SqlMetaData(&quot;col2&quot;, SqlDbType.Int))\n\n        &#39; Mark the begining of the result-set.\n        SqlContext.Pipe.SendResultsStart(record)\n\n        &#39; Send 10 rows back to the client.\n        Dim i As Integer\n        For i = 0 To 9\n\n            &#39; Set values for each column in the row.\n            record.SetString(0, &quot;row &quot; &amp; i.ToString())\n            record.SetInt32(1, i)\n\n            &#39; Send the row back to the client.\n            SqlContext.Pipe.SendResultsRow(record)\n        Next\n\n        &#39; Mark the end of the result-set.\n        SqlContext.Pipe.SendResultsEnd()\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlPipe.SendResultsStart#1\">\t[Microsoft.SqlServer.Server.SqlProcedure]\n\tpublic static void StoredProcReturnResultSet()\n\t{\n\t\t// Create the record and specify the metadata for the columns.\n\t\tSqlDataRecord record = new SqlDataRecord(\n\t\t\tnew SqlMetaData(&quot;col1&quot;, SqlDbType.NVarChar, 100),\n\t\t\tnew SqlMetaData(&quot;col2&quot;, SqlDbType.Int));\n\n\t\t// Mark the begining of the result-set.\n\t\tSqlContext.Pipe.SendResultsStart(record);\n\n\t\t// Send 10 rows back to the client.\n\t\tfor (int i = 0; i &lt; 10; i++)\n\t\t{\n\t\t\t// Set values for each column in the row.\n\t\t\trecord.SetString(0, &quot;row &quot; + i.ToString());\n\t\t\trecord.SetInt32(1, i);\n\n\t\t\t// Send the row back to the client.\n\t\t\tSqlContext.Pipe.SendResultsRow(record);\n\t\t}\n\n\t\t// Mark the end of the result-set.\n\t\tSqlContext.Pipe.SendResultsEnd();\n\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.SqlServer.Server.SqlPipe.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.SqlServer.Server.SqlPipe.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe.IsSendingResults\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe.Send\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe.SendResultsRow\">\r\n<meta name=\"APIName\" content=\"Microsoft.SqlServer.Server.SqlPipe.SendResultsStart\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ff63fe3b-03b4-9246-be3a-0f3787d93fe9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.SqlServer.Server/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.SqlServer.Server.SqlPipe\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.SqlServer.Server.SqlPipe.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.SqlServer.Server.SqlPipe.yml","open_to_public_contributors":true,"api_name":["Microsoft.SqlServer.Server.SqlPipe","Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend","Microsoft.SqlServer.Server.SqlPipe.IsSendingResults","Microsoft.SqlServer.Server.SqlPipe.Send","Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd","Microsoft.SqlServer.Server.SqlPipe.SendResultsRow","Microsoft.SqlServer.Server.SqlPipe.SendResultsStart"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.SqlServer.Server.SqlPipe","Microsoft::SqlServer::Server::SqlPipe","Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend","Microsoft::SqlServer::Server::SqlPipe::ExecuteAndSend","Microsoft.SqlServer.Server.SqlPipe.IsSendingResults","Microsoft::SqlServer::Server::SqlPipe::IsSendingResults","Microsoft.SqlServer.Server.SqlPipe.Send","Microsoft::SqlServer::Server::SqlPipe::Send","Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd","Microsoft::SqlServer::Server::SqlPipe::SendResultsEnd","Microsoft.SqlServer.Server.SqlPipe.SendResultsRow","Microsoft::SqlServer::Server::SqlPipe::SendResultsRow","Microsoft.SqlServer.Server.SqlPipe.SendResultsStart","Microsoft::SqlServer::Server::SqlPipe::SendResultsStart"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ff63fe3b-03b4-9246-be3a-0f3787d93fe9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.SqlServer.Server/SqlPipe.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SqlPipe class | Microsoft Docs","_op_ogTitle":"SqlPipe class","description":"Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.\n","toc_asset_id":"_splitted/Microsoft.SqlServer.Server/toc.json","toc_rel":"_splitted/Microsoft.SqlServer.Server/toc.json","source_url":"","ms.assetid":"Microsoft.SqlServer.Server.SqlPipe","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.sqlserver.server.sqlpipe","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.sqlserver.server.sqlpipe","fileRelativePath":"Microsoft.SqlServer.Server.SqlPipe.html"},"themesRelativePathToOutputRoot":"_themes/"}