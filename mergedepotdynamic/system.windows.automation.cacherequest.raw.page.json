{"content":"    \r\n    <h1 id=\"System_Windows_Automation_CacheRequest\">\r\n      <span class=\"lang-csharp\">CacheRequest</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies properties and patterns that the UI Automation framework caches when an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> is obtained.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class CacheRequest</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CacheRequest</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Retrieving properties and patterns through UI Automation requires cross-process calls that can slow down performance. By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.  </p>\n<p> Create a new cache request by calling the class constructor. The request is populated by repeated calls to the <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Add_\" data-linktype=\"relative-path\">Add</a> method.  </p>\n<p> Only a single CacheRequest can be active. There are two ways to activate a request:  </p>\n<ul>\n<li><p>Call <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Activate_\" data-linktype=\"relative-path\">Activate</a> on the request. This pushes the request onto the stack, and the request is popped when the object is disposed. To ensure disposal even if an exception is raised, use the return value from <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Activate_\" data-linktype=\"relative-path\">Activate</a> within a <code>using</code> block (<code>Using</code> in Microsoft Visual Basic .NET).  </p>\n</li>\n<li><p>Put the request onto the internal stack by calling <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Push_\" data-linktype=\"relative-path\">Push</a>. Only the topmost request on the stack is active, and it must be the next one removed from the stack by <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Pop_\" data-linktype=\"relative-path\">Pop</a>. Popping the request deactivates it.  </p>\n<p>UI Automation elements obtained while the request is active will have cached values for the properties and patterns specified.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest__ctor\" data-linktype=\"self-bookmark\">CacheRequest()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_AutomationElementMode\" data-linktype=\"self-bookmark\">AutomationElementMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies whether returned elements should contain full references to the underlying user interface (UI), or only cached information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> that is active on the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_TreeFilter\" data-linktype=\"self-bookmark\">TreeFilter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value specifying the view of the UI Automation element tree to use when caching.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_TreeScope\" data-linktype=\"self-bookmark\">TreeScope</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Activate\" data-linktype=\"self-bookmark\">Activate()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> as the active specification for the items that are returned when an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> is requested on the same thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Add_System_Windows_Automation_AutomationPattern_\" data-linktype=\"self-bookmark\">Add(AutomationPattern)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified <a class=\"xref\" href=\"system.windows.automation.automationpattern\" data-linktype=\"relative-path\">AutomationPattern</a> identifier to this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Add_System_Windows_Automation_AutomationProperty_\" data-linktype=\"self-bookmark\">Add(AutomationProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified <a class=\"xref\" href=\"system.windows.automation.automationproperty\" data-linktype=\"relative-path\">AutomationProperty</a> identifier to this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Pop\" data-linktype=\"self-bookmark\">Pop()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the active <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> from the internal stack for the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_CacheRequest_Push\" data-linktype=\"self-bookmark\">Push()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Places the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> on the internal state stack, making it the active request on the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest__ctor\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheRequest()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheRequest ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> is created, the <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_RuntimeIdProperty\" data-linktype=\"relative-path\">RuntimeIdProperty</a> identifier is added as a default property to cache.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_AutomationElementMode\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_AutomationElementMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutomationElementMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies whether returned elements should contain full references to the underlying user interface (UI), or only cached information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a> if the returned elements have a full reference to the underlying user interface (UI); otherwise <a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a> is the default value, and specifies that returned elements contain a full reference to the underlying UI. <a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a> specifies that the returned elements have no reference to the underlying UI, and contain only cached information.  </p>\n<p> Certain operations on elements, including <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_GetCurrentPropertyValue_\" data-linktype=\"relative-path\">GetCurrentPropertyValue</a>, <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_GetCurrentPattern_\" data-linktype=\"relative-path\">GetCurrentPattern</a>, and <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_SetFocus_\" data-linktype=\"relative-path\">SetFocus</a>, require a full reference; attempting to perform these on an element that has none results in an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> Using <a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, AutomationElementMode is set to <a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a>, with the result that only cached properties and patterns are available for the retrieved object.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#108\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Caches and retrieves properties for a list item by using CacheRequest.Push.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementList&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; This code demonstrates various aspects of caching. It is not intended to be \n&#39;&#39;&#39; an example of a useful method.\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub CachePropertiesByPush(ByVal elementList As AutomationElement)\n    &#39; Set up the request.\n    Dim cacheRequest As New CacheRequest()\n\n    &#39; Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None\n\n    &#39; Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition\n\n    &#39; Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty)\n    cacheRequest.Add(SelectionItemPattern.Pattern)\n\n    &#39; Activate the request.\n    cacheRequest.Push()\n\n    &#39; Obtain an element and cache the requested items.\n    Dim myCondition As New PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, _\n        True)\n    Dim elementListItem As AutomationElement = elementList.FindFirst(TreeScope.Children, myCondition)\n\n    &#39; At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    &#39; While that method was retrieving automation elements, the CacheRequest set in this method \n    &#39; would not be active. \n    &#39; Deactivate the request.\n    cacheRequest.Pop()\n\n    &#39; Retrieve the cached property and pattern.\n    Dim itemName As String = elementListItem.Cached.Name\n    Dim pattern As SelectionItemPattern = _\n        DirectCast(elementListItem.GetCachedPattern(SelectionItemPattern.Pattern), SelectionItemPattern)\n\n    &#39; The following is an alternative way of retrieving the Name property.\n    itemName = CStr(elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty))\n\n    &#39; This is yet another way, which returns AutomationElement.NotSupported if the element does\n    &#39; not supply a value. If the second parameter is false, a default name is returned.\n    Dim objName As Object = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, True)\n    If objName Is AutomationElement.NotSupported Then\n        itemName = &quot;Unknown&quot;\n    Else\n        itemName = CStr(objName)\n    End If\n    &#39; The following call raises an exception, because only the cached properties are available, \n    &#39;  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    &#39;  default value (Full), this call would be valid.\n    &#39;** bool enabled = elementListItem.Current.IsEnabled; **\n\nEnd Sub &#39;CachePropertiesByPush\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#108\">/// &lt;summary&gt;\n/// Caches and retrieves properties for a list item by using CacheRequest.Push.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;autoElement&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n/// &lt;remarks&gt;\n/// This code demonstrates various aspects of caching. It is not intended to be \n/// an example of a useful method.\n/// &lt;/remarks&gt;\nprivate void CachePropertiesByPush(AutomationElement elementList)\n{\n    // Set up the request.\n    CacheRequest cacheRequest = new CacheRequest();\n\n    // Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None;\n\n    // Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition;\n\n    // Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty);\n    cacheRequest.Add(SelectionItemPattern.Pattern);\n\n    // Activate the request.\n    cacheRequest.Push();\n\n    // Obtain an element and cache the requested items.\n    Condition cond = new PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, true);\n    AutomationElement elementListItem = elementList.FindFirst(TreeScope.Children, cond);\n\n    // At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    // While that method was retrieving automation elements, the CacheRequest set in this method \n    // would not be active. \n\n    // Deactivate the request.\n    cacheRequest.Pop();\n\n    // Retrieve the cached property and pattern.\n    String itemName = elementListItem.Cached.Name;\n    SelectionItemPattern pattern = elementListItem.GetCachedPattern(SelectionItemPattern.Pattern) as SelectionItemPattern;\n\n    // The following is an alternative way of retrieving the Name property.\n    itemName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty) as String;\n\n    // This is yet another way, which returns AutomationElement.NotSupported if the element does\n    // not supply a value. If the second parameter is false, a default name is returned.\n    object objName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, true);\n    if (objName == AutomationElement.NotSupported)\n    {\n        itemName = &quot;Unknown&quot;;\n    }\n    else\n    {\n        itemName = objName as String;\n    }\n\n    // The following call raises an exception, because only the cached properties are available, \n    //  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    //  default value (Full), this call would be valid.\n    /*** bool enabled = elementListItem.Current.IsEnabled; ***/\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Current\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> that is active on the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Automation.CacheRequest Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a></div>\r\n                  </div>\r\n                  <p>The active <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_TreeFilter\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_TreeFilter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TreeFilter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value specifying the view of the UI Automation element tree to use when caching.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.Condition TreeFilter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.condition\" data-linktype=\"relative-path\">Condition</a></div>\r\n                  </div>\r\n                  <p>The view of the UI Automation element tree. The default view is <a class=\"xref\" href=\"system.windows.automation.automation#System_Windows_Automation_Automation_ControlViewCondition\" data-linktype=\"relative-path\">ControlViewCondition</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For additional information on views of the UI Automation element tree, see <a href=\"../Topic/UI%20Automation%20Tree%20Overview.md\" data-linktype=\"relative-path\">UI Automation Tree Overview</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, TreeFilter is set to <a class=\"xref\" href=\"system.windows.automation.automation#System_Windows_Automation_Automation_RawViewCondition\" data-linktype=\"relative-path\">RawViewCondition</a> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#108\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Caches and retrieves properties for a list item by using CacheRequest.Push.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementList&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; This code demonstrates various aspects of caching. It is not intended to be \n&#39;&#39;&#39; an example of a useful method.\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub CachePropertiesByPush(ByVal elementList As AutomationElement)\n    &#39; Set up the request.\n    Dim cacheRequest As New CacheRequest()\n\n    &#39; Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None\n\n    &#39; Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition\n\n    &#39; Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty)\n    cacheRequest.Add(SelectionItemPattern.Pattern)\n\n    &#39; Activate the request.\n    cacheRequest.Push()\n\n    &#39; Obtain an element and cache the requested items.\n    Dim myCondition As New PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, _\n        True)\n    Dim elementListItem As AutomationElement = elementList.FindFirst(TreeScope.Children, myCondition)\n\n    &#39; At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    &#39; While that method was retrieving automation elements, the CacheRequest set in this method \n    &#39; would not be active. \n    &#39; Deactivate the request.\n    cacheRequest.Pop()\n\n    &#39; Retrieve the cached property and pattern.\n    Dim itemName As String = elementListItem.Cached.Name\n    Dim pattern As SelectionItemPattern = _\n        DirectCast(elementListItem.GetCachedPattern(SelectionItemPattern.Pattern), SelectionItemPattern)\n\n    &#39; The following is an alternative way of retrieving the Name property.\n    itemName = CStr(elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty))\n\n    &#39; This is yet another way, which returns AutomationElement.NotSupported if the element does\n    &#39; not supply a value. If the second parameter is false, a default name is returned.\n    Dim objName As Object = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, True)\n    If objName Is AutomationElement.NotSupported Then\n        itemName = &quot;Unknown&quot;\n    Else\n        itemName = CStr(objName)\n    End If\n    &#39; The following call raises an exception, because only the cached properties are available, \n    &#39;  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    &#39;  default value (Full), this call would be valid.\n    &#39;** bool enabled = elementListItem.Current.IsEnabled; **\n\nEnd Sub &#39;CachePropertiesByPush\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#108\">/// &lt;summary&gt;\n/// Caches and retrieves properties for a list item by using CacheRequest.Push.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;autoElement&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n/// &lt;remarks&gt;\n/// This code demonstrates various aspects of caching. It is not intended to be \n/// an example of a useful method.\n/// &lt;/remarks&gt;\nprivate void CachePropertiesByPush(AutomationElement elementList)\n{\n    // Set up the request.\n    CacheRequest cacheRequest = new CacheRequest();\n\n    // Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None;\n\n    // Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition;\n\n    // Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty);\n    cacheRequest.Add(SelectionItemPattern.Pattern);\n\n    // Activate the request.\n    cacheRequest.Push();\n\n    // Obtain an element and cache the requested items.\n    Condition cond = new PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, true);\n    AutomationElement elementListItem = elementList.FindFirst(TreeScope.Children, cond);\n\n    // At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    // While that method was retrieving automation elements, the CacheRequest set in this method \n    // would not be active. \n\n    // Deactivate the request.\n    cacheRequest.Pop();\n\n    // Retrieve the cached property and pattern.\n    String itemName = elementListItem.Cached.Name;\n    SelectionItemPattern pattern = elementListItem.GetCachedPattern(SelectionItemPattern.Pattern) as SelectionItemPattern;\n\n    // The following is an alternative way of retrieving the Name property.\n    itemName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty) as String;\n\n    // This is yet another way, which returns AutomationElement.NotSupported if the element does\n    // not supply a value. If the second parameter is false, a default name is returned.\n    object objName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, true);\n    if (objName == AutomationElement.NotSupported)\n    {\n        itemName = &quot;Unknown&quot;;\n    }\n    else\n    {\n        itemName = objName as String;\n    }\n\n    // The following call raises an exception, because only the cached properties are available, \n    //  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    //  default value (Full), this call would be valid.\n    /*** bool enabled = elementListItem.Current.IsEnabled; ***/\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_TreeScope\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_TreeScope_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TreeScope</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.TreeScope TreeScope { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a></div>\r\n                  </div>\r\n                  <p>One or more of <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>, <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>, <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>, or <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>. The default value is <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An attempt was made to set the property to <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a> or <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_FindFirst_\" data-linktype=\"relative-path\">FindFirst</a> or <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_FindAll_\" data-linktype=\"relative-path\">FindAll</a> is called. See the example.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a list box element is obtained from the parent window element while a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> is active and TreeScope is <a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_CachedChildren_\" data-linktype=\"relative-path\">CachedChildren</a> of the list box.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#119\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Gets a list box element and caches the Name property of its children (the list items).\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementMain&quot;&gt;The UI Automation element for the parent window.&lt;/param&gt;\nSub CachePropertiesWithScope(ByVal elementMain As AutomationElement)\n    Dim elementList As AutomationElement\n\n    &#39; Set up the CacheRequest.\n    Dim cacheRequest As New CacheRequest()\n    cacheRequest.Add(AutomationElement.NameProperty)\n    cacheRequest.TreeScope = TreeScope.Element Or TreeScope.Children\n\n    &#39; Activate the CacheRequest and get the element. Note that the scope of the CacheRequest\n    &#39; is in relation to the object being retrieved: the list box and its children are \n    &#39; cached, not the main window and its children.\n    Using cacheRequest.Activate()\n        &#39; Load the list element and cache the specified properties for its descendants.\n        Dim myCondition As New PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.List)\n        elementList = elementMain.FindFirst(TreeScope.Children, myCondition)\n\n        If elementList Is Nothing Then\n            Return\n        End If\n\n        &#39; The following illustrates that the children of the list are in the cache.\n        Dim listItem As AutomationElement\n        For Each listItem In elementList.CachedChildren\n            Console.WriteLine(listItem.Cached.Name)\n        Next listItem\n\n        &#39; The following call raises an exception, because the IsEnabled property was not cached.\n        &#39;** Console.WriteLine(listItem.Cached.IsEnabled) **\n\n        &#39; The following illustrates that because the list box itself was cached, it is now\n        &#39; available as the CachedParent of each list item.\n        Dim child As AutomationElement = elementList.CachedChildren(0)\n        Console.WriteLine(child.CachedParent.Cached.Name)\n    End Using\nEnd Sub &#39;CachePropertiesWithScope\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#119\">/// &lt;summary&gt;\n/// Gets a list box element and caches the Name property of its children (the list items).\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;elementMain&quot;&gt;The UI Automation element for the parent window.&lt;/param&gt;\nvoid CachePropertiesWithScope(AutomationElement elementMain)\n{\n    AutomationElement elementList;\n\n    // Set up the CacheRequest.\n    CacheRequest cacheRequest = new CacheRequest();\n    cacheRequest.Add(AutomationElement.NameProperty);\n    cacheRequest.TreeScope = TreeScope.Element | TreeScope.Children;\n\n    // Activate the CacheRequest and get the element. Note that the scope of the CacheRequest\n    // is in relation to the object being retrieved: the list box and its children are \n    // cached, not the main window and its children.\n    using (cacheRequest.Activate())\n    {\n        // Load the list element and cache the specified properties for its descendants.\n        Condition cond = new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.List);\n        elementList = elementMain.FindFirst(TreeScope.Children, cond);\n    }\n    if (elementList == null) return;\n\n    // The following illustrates that the children of the list are in the cache.\n    foreach (AutomationElement listItem in elementList.CachedChildren)\n    {\n        Console.WriteLine(listItem.Cached.Name);\n    }\n\n    // The following call raises an exception, because the IsEnabled property was not cached.\n    /*** Console.WriteLine(listItem.Cached.IsEnabled); ***/\n\n    // The following illustrates that because the list box itself was cached, it is now\n    // available as the CachedParent of each list item.\n    AutomationElement child = elementList.CachedChildren[0];\n    Console.WriteLine(child.CachedParent.Cached.Name);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Activate\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Activate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate()</div>        \r\n          </div>\r\n    \r\n            <p>Sets this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> as the active specification for the items that are returned when an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> is requested on the same thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IDisposable Activate ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a></div>\r\n                  </div>\r\n                  <p>The object that can be used to dispose the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Using this method is usually preferable to using <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Push_\" data-linktype=\"relative-path\">Push</a> and <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Pop_\" data-linktype=\"relative-path\">Pop</a> as a means of activating the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>. The object is pushed onto the stack when Activate is called, and then popped off when it is disposed. To ensure disposal, place the return value within a <code>using</code> block (<code>Using</code> in Microsoft Visual Basic .NET).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use Activate to cache patterns and properties.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#107\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Caches and retrieves properties for a list item by using CacheRequest.Activate.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementList&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; This code demonstrates various aspects of caching. It is not intended to be \n&#39;&#39;&#39; an example of a useful method.\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub CachePropertiesByActivate(ByVal elementList As AutomationElement)\n\n    &#39; Set up the request.\n    Dim myCacheRequest As New CacheRequest()\n    myCacheRequest.Add(AutomationElement.NameProperty)\n    myCacheRequest.Add(AutomationElement.IsEnabledProperty)\n    myCacheRequest.Add(SelectionItemPattern.Pattern)\n    myCacheRequest.Add(SelectionItemPattern.SelectionContainerProperty)\n\n    Dim elementListItem As AutomationElement\n\n    &#39; Obtain an element and cache the requested items.\n    Using myCacheRequest.Activate()\n        Dim myCondition As New PropertyCondition( _\n            AutomationElement.IsSelectionItemPatternAvailableProperty, True)\n        elementListItem = elementList.FindFirst(TreeScope.Children, myCondition)\n    End Using\n\n\n    &#39; The CacheRequest is now inactive.\n    &#39; Retrieve the cached property and pattern.\n    Dim pattern As SelectionItemPattern\n    Dim itemName As String\n    Try\n        itemName = elementListItem.Cached.Name\n        pattern = DirectCast(elementListItem.GetCachedPattern(SelectionItemPattern.Pattern), _\n            SelectionItemPattern)\n    Catch ex As InvalidOperationException\n        Console.WriteLine(&quot;Object was not in cache.&quot;)\n        Return\n    End Try\n    &#39; Alternatively, you can use TryGetCachedPattern to retrieve the cached pattern.\n    Dim cachedPattern As Object = Nothing\n    If True = elementListItem.TryGetCachedPattern(SelectionItemPattern.Pattern, cachedPattern) Then\n        pattern = DirectCast(cachedPattern, SelectionItemPattern)\n    End If\n\n    &#39; Specified pattern properties are also in the cache.\n    Dim parentList As AutomationElement = pattern.Cached.SelectionContainer\n\n    &#39; The following line will raise an exception, because the HelpText property was not cached.\n    &#39;** String itemHelp = elementListItem.Cached.HelpText; **\n\n    &#39; Similarly, pattern properties that were not specified in the CacheRequest cannot be \n    &#39; retrieved from the cache. This would raise an exception.\n    &#39;** bool selected = pattern.Cached.IsSelected; **\n\n    &#39; This is still a valid call, even though the property is in the cache.\n    &#39; Of course, the cached value and the current value are not guaranteed to be the same.\n    itemName = elementListItem.Current.Name\nEnd Sub &#39;CachePropertiesByActivate\n\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#107\">/// &lt;summary&gt;\n/// Caches and retrieves properties for a list item by using CacheRequest.Activate.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;elementList&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n/// &lt;remarks&gt;\n/// This code demonstrates various aspects of caching. It is not intended to be \n/// an example of a useful method.\n/// &lt;/remarks&gt;\nprivate void CachePropertiesByActivate(AutomationElement elementList)\n{\n    AutomationElement elementListItem;\n\n    // Set up the request.\n    CacheRequest cacheRequest = new CacheRequest();\n    cacheRequest.Add(AutomationElement.NameProperty);\n    cacheRequest.Add(AutomationElement.IsEnabledProperty);\n    cacheRequest.Add(SelectionItemPattern.Pattern);\n    cacheRequest.Add(SelectionItemPattern.SelectionContainerProperty);\n\n    // Obtain an element and cache the requested items.\n    using (cacheRequest.Activate())\n    {\n        Condition cond = new PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, true);\n        elementListItem = elementList.FindFirst(TreeScope.Children, cond);\n    }\n    // The CacheRequest is now inactive.\n\n    // Retrieve the cached property and pattern.\n    SelectionItemPattern pattern;\n    String itemName;\n    try\n    {\n        itemName = elementListItem.Cached.Name;\n        pattern = elementListItem.GetCachedPattern(SelectionItemPattern.Pattern) as SelectionItemPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        Console.WriteLine(&quot;Object was not in cache.&quot;);\n        return;\n    }\n    // Alternatively, you can use TryGetCachedPattern to retrieve the cached pattern.\n    object cachedPattern;\n    if (true == elementListItem.TryGetCachedPattern(SelectionItemPattern.Pattern, out cachedPattern))\n    {\n        pattern = cachedPattern as SelectionItemPattern;\n    }\n\n    // Specified pattern properties are also in the cache.\n    AutomationElement parentList = pattern.Cached.SelectionContainer;\n\n    // The following line will raise an exception, because the HelpText property was not cached.\n    /*** String itemHelp = elementListItem.Cached.HelpText; ***/\n\n    // Similarly, pattern properties that were not specified in the CacheRequest cannot be \n    // retrieved from the cache. This would raise an exception.\n    /*** bool selected = pattern.Cached.IsSelected; ***/\n\n    // This is still a valid call, even though the property is in the cache.\n    // Of course, the cached value and the current value are not guaranteed to be the same.\n    itemName = elementListItem.Current.Name;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Add_System_Windows_Automation_AutomationPattern_\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(AutomationPattern)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified <a class=\"xref\" href=\"system.windows.automation.automationpattern\" data-linktype=\"relative-path\">AutomationPattern</a> identifier to this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Add (System.Windows.Automation.AutomationPattern pattern);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pattern</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationpattern\" data-linktype=\"relative-path\">AutomationPattern</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An identifier specifying a pattern to cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> is active.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Adding a pattern that is already in the cache request has no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to construct a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> and add a pattern to be cached.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#202\">Dim myCacheRequest As New CacheRequest()\nmyCacheRequest.Add(AutomationElement.NameProperty)\nmyCacheRequest.Add(AutomationElement.IsEnabledProperty)\nmyCacheRequest.Add(SelectionItemPattern.Pattern)\nmyCacheRequest.Add(SelectionItemPattern.SelectionContainerProperty)\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#202\">CacheRequest cacheRequest = new CacheRequest();\ncacheRequest.Add(AutomationElement.NameProperty);\ncacheRequest.Add(AutomationElement.IsEnabledProperty);\ncacheRequest.Add(SelectionItemPattern.Pattern);\ncacheRequest.Add(SelectionItemPattern.SelectionContainerProperty);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Add_System_Windows_Automation_AutomationProperty_\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(AutomationProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified <a class=\"xref\" href=\"system.windows.automation.automationproperty\" data-linktype=\"relative-path\">AutomationProperty</a> identifier to this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Add (System.Windows.Automation.AutomationProperty property);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>property</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationproperty\" data-linktype=\"relative-path\">AutomationProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An identifier specifying a property value to cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> is active.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> is created, the <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_RuntimeIdProperty\" data-linktype=\"relative-path\">RuntimeIdProperty</a> identifier is added as a default property to cache.  </p>\n<p> Adding a property that is already in the cache request has no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to construct a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> and add a property to be cached.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#202\">Dim myCacheRequest As New CacheRequest()\nmyCacheRequest.Add(AutomationElement.NameProperty)\nmyCacheRequest.Add(AutomationElement.IsEnabledProperty)\nmyCacheRequest.Add(SelectionItemPattern.Pattern)\nmyCacheRequest.Add(SelectionItemPattern.SelectionContainerProperty)\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#202\">CacheRequest cacheRequest = new CacheRequest();\ncacheRequest.Add(AutomationElement.NameProperty);\ncacheRequest.Add(AutomationElement.IsEnabledProperty);\ncacheRequest.Add(SelectionItemPattern.Pattern);\ncacheRequest.Add(SelectionItemPattern.SelectionContainerProperty);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Clone\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of this <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.CacheRequest Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a></div>\r\n                  </div>\r\n                  <p>A modifiable copy of the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Pop\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Pop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pop()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the active <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> from the internal stack for the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Pop ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An attempt was made to remove a cache request that was not the last one pushed onto the stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only the currently active request can be removed using the Pop method. Attempting to remove a request that is not the current one results in an exception.  </p>\n<p> Unless you are nesting cache requests, it is preferable to use <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Activate_\" data-linktype=\"relative-path\">Activate</a> to place the request on the stack. The reason is that you can use <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Activate_\" data-linktype=\"relative-path\">Activate</a> within a <code>using</code> block (<code>Using</code> in Microsoft Visual Basic .NET), ensuring that the request is popped off the stack even if an exception is raised.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to deactivate a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> by using Pop.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#108\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Caches and retrieves properties for a list item by using CacheRequest.Push.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementList&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; This code demonstrates various aspects of caching. It is not intended to be \n&#39;&#39;&#39; an example of a useful method.\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub CachePropertiesByPush(ByVal elementList As AutomationElement)\n    &#39; Set up the request.\n    Dim cacheRequest As New CacheRequest()\n\n    &#39; Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None\n\n    &#39; Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition\n\n    &#39; Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty)\n    cacheRequest.Add(SelectionItemPattern.Pattern)\n\n    &#39; Activate the request.\n    cacheRequest.Push()\n\n    &#39; Obtain an element and cache the requested items.\n    Dim myCondition As New PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, _\n        True)\n    Dim elementListItem As AutomationElement = elementList.FindFirst(TreeScope.Children, myCondition)\n\n    &#39; At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    &#39; While that method was retrieving automation elements, the CacheRequest set in this method \n    &#39; would not be active. \n    &#39; Deactivate the request.\n    cacheRequest.Pop()\n\n    &#39; Retrieve the cached property and pattern.\n    Dim itemName As String = elementListItem.Cached.Name\n    Dim pattern As SelectionItemPattern = _\n        DirectCast(elementListItem.GetCachedPattern(SelectionItemPattern.Pattern), SelectionItemPattern)\n\n    &#39; The following is an alternative way of retrieving the Name property.\n    itemName = CStr(elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty))\n\n    &#39; This is yet another way, which returns AutomationElement.NotSupported if the element does\n    &#39; not supply a value. If the second parameter is false, a default name is returned.\n    Dim objName As Object = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, True)\n    If objName Is AutomationElement.NotSupported Then\n        itemName = &quot;Unknown&quot;\n    Else\n        itemName = CStr(objName)\n    End If\n    &#39; The following call raises an exception, because only the cached properties are available, \n    &#39;  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    &#39;  default value (Full), this call would be valid.\n    &#39;** bool enabled = elementListItem.Current.IsEnabled; **\n\nEnd Sub &#39;CachePropertiesByPush\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#108\">/// &lt;summary&gt;\n/// Caches and retrieves properties for a list item by using CacheRequest.Push.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;autoElement&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n/// &lt;remarks&gt;\n/// This code demonstrates various aspects of caching. It is not intended to be \n/// an example of a useful method.\n/// &lt;/remarks&gt;\nprivate void CachePropertiesByPush(AutomationElement elementList)\n{\n    // Set up the request.\n    CacheRequest cacheRequest = new CacheRequest();\n\n    // Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None;\n\n    // Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition;\n\n    // Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty);\n    cacheRequest.Add(SelectionItemPattern.Pattern);\n\n    // Activate the request.\n    cacheRequest.Push();\n\n    // Obtain an element and cache the requested items.\n    Condition cond = new PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, true);\n    AutomationElement elementListItem = elementList.FindFirst(TreeScope.Children, cond);\n\n    // At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    // While that method was retrieving automation elements, the CacheRequest set in this method \n    // would not be active. \n\n    // Deactivate the request.\n    cacheRequest.Pop();\n\n    // Retrieve the cached property and pattern.\n    String itemName = elementListItem.Cached.Name;\n    SelectionItemPattern pattern = elementListItem.GetCachedPattern(SelectionItemPattern.Pattern) as SelectionItemPattern;\n\n    // The following is an alternative way of retrieving the Name property.\n    itemName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty) as String;\n\n    // This is yet another way, which returns AutomationElement.NotSupported if the element does\n    // not supply a value. If the second parameter is false, a default name is returned.\n    object objName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, true);\n    if (objName == AutomationElement.NotSupported)\n    {\n        itemName = &quot;Unknown&quot;;\n    }\n    else\n    {\n        itemName = objName as String;\n    }\n\n    // The following call raises an exception, because only the cached properties are available, \n    //  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    //  default value (Full), this call would be valid.\n    /*** bool enabled = elementListItem.Current.IsEnabled; ***/\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_CacheRequest_Push\">\r\n    \r\n            <a id=\"System_Windows_Automation_CacheRequest_Push_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Push()</div>        \r\n          </div>\r\n    \r\n            <p>Places the <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> on the internal state stack, making it the active request on the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Push ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Multiple <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> objects can be placed onto the state stack. Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> exception is raised.  </p>\n<p> Unless you are nesting cache requests, it is preferable to use <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Activate_\" data-linktype=\"relative-path\">Activate</a> to place the request on the stack. The reason is that you can use <a class=\"xref\" href=\"system.windows.automation.cacherequest#System_Windows_Automation_CacheRequest_Activate_\" data-linktype=\"relative-path\">Activate</a> within a <code>using</code> block (<code>Using</code> in Microsoft Visual Basic .NET), ensuring that the request is popped off the stack even if an exception is raised.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to activate a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a> by using Push.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#108\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Caches and retrieves properties for a list item by using CacheRequest.Push.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementList&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; This code demonstrates various aspects of caching. It is not intended to be \n&#39;&#39;&#39; an example of a useful method.\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub CachePropertiesByPush(ByVal elementList As AutomationElement)\n    &#39; Set up the request.\n    Dim cacheRequest As New CacheRequest()\n\n    &#39; Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None\n\n    &#39; Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition\n\n    &#39; Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty)\n    cacheRequest.Add(SelectionItemPattern.Pattern)\n\n    &#39; Activate the request.\n    cacheRequest.Push()\n\n    &#39; Obtain an element and cache the requested items.\n    Dim myCondition As New PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, _\n        True)\n    Dim elementListItem As AutomationElement = elementList.FindFirst(TreeScope.Children, myCondition)\n\n    &#39; At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    &#39; While that method was retrieving automation elements, the CacheRequest set in this method \n    &#39; would not be active. \n    &#39; Deactivate the request.\n    cacheRequest.Pop()\n\n    &#39; Retrieve the cached property and pattern.\n    Dim itemName As String = elementListItem.Cached.Name\n    Dim pattern As SelectionItemPattern = _\n        DirectCast(elementListItem.GetCachedPattern(SelectionItemPattern.Pattern), SelectionItemPattern)\n\n    &#39; The following is an alternative way of retrieving the Name property.\n    itemName = CStr(elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty))\n\n    &#39; This is yet another way, which returns AutomationElement.NotSupported if the element does\n    &#39; not supply a value. If the second parameter is false, a default name is returned.\n    Dim objName As Object = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, True)\n    If objName Is AutomationElement.NotSupported Then\n        itemName = &quot;Unknown&quot;\n    Else\n        itemName = CStr(objName)\n    End If\n    &#39; The following call raises an exception, because only the cached properties are available, \n    &#39;  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    &#39;  default value (Full), this call would be valid.\n    &#39;** bool enabled = elementListItem.Current.IsEnabled; **\n\nEnd Sub &#39;CachePropertiesByPush\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#108\">/// &lt;summary&gt;\n/// Caches and retrieves properties for a list item by using CacheRequest.Push.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;autoElement&quot;&gt;Element from which to retrieve a child element.&lt;/param&gt;\n/// &lt;remarks&gt;\n/// This code demonstrates various aspects of caching. It is not intended to be \n/// an example of a useful method.\n/// &lt;/remarks&gt;\nprivate void CachePropertiesByPush(AutomationElement elementList)\n{\n    // Set up the request.\n    CacheRequest cacheRequest = new CacheRequest();\n\n    // Do not get a full reference to the cached objects, only to their cached properties and patterns.\n    cacheRequest.AutomationElementMode = AutomationElementMode.None;\n\n    // Cache all elements, regardless of whether they are control or content elements.\n    cacheRequest.TreeFilter = Automation.RawViewCondition;\n\n    // Property and pattern to cache.\n    cacheRequest.Add(AutomationElement.NameProperty);\n    cacheRequest.Add(SelectionItemPattern.Pattern);\n\n    // Activate the request.\n    cacheRequest.Push();\n\n    // Obtain an element and cache the requested items.\n    Condition cond = new PropertyCondition(AutomationElement.IsSelectionItemPatternAvailableProperty, true);\n    AutomationElement elementListItem = elementList.FindFirst(TreeScope.Children, cond);\n\n    // At this point, you could call another method that creates a CacheRequest and calls Push/Pop.\n    // While that method was retrieving automation elements, the CacheRequest set in this method \n    // would not be active. \n\n    // Deactivate the request.\n    cacheRequest.Pop();\n\n    // Retrieve the cached property and pattern.\n    String itemName = elementListItem.Cached.Name;\n    SelectionItemPattern pattern = elementListItem.GetCachedPattern(SelectionItemPattern.Pattern) as SelectionItemPattern;\n\n    // The following is an alternative way of retrieving the Name property.\n    itemName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty) as String;\n\n    // This is yet another way, which returns AutomationElement.NotSupported if the element does\n    // not supply a value. If the second parameter is false, a default name is returned.\n    object objName = elementListItem.GetCachedPropertyValue(AutomationElement.NameProperty, true);\n    if (objName == AutomationElement.NotSupported)\n    {\n        itemName = &quot;Unknown&quot;;\n    }\n    else\n    {\n        itemName = objName as String;\n    }\n\n    // The following call raises an exception, because only the cached properties are available, \n    //  as specified by cacheRequest.AutomationElementMode. If AutomationElementMode had its\n    //  default value (Full), this call would be valid.\n    /*** bool enabled = elementListItem.Current.IsEnabled; ***/\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.CacheRequest.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.CacheRequest.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.Activate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.Add\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.AutomationElementMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.Current\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.Pop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.Push\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.TreeFilter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.CacheRequest.TreeScope\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9f9d1af4-ad29-5996-00b4-a57c4a909ae8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies properties and patterns that the UI Automation framework caches when an  is obtained.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.CacheRequest\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.CacheRequest.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.CacheRequest.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.CacheRequest","System.Windows.Automation.CacheRequest..ctor","System.Windows.Automation.CacheRequest.Activate","System.Windows.Automation.CacheRequest.Add","System.Windows.Automation.CacheRequest.AutomationElementMode","System.Windows.Automation.CacheRequest.Clone","System.Windows.Automation.CacheRequest.Current","System.Windows.Automation.CacheRequest.Pop","System.Windows.Automation.CacheRequest.Push","System.Windows.Automation.CacheRequest.TreeFilter","System.Windows.Automation.CacheRequest.TreeScope"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.CacheRequest","System::Windows::Automation::CacheRequest","System.Windows.Automation.CacheRequest.#ctor","System::Windows::Automation::CacheRequest::#ctor","System.Windows.Automation.CacheRequest.Activate","System::Windows::Automation::CacheRequest::Activate","System.Windows.Automation.CacheRequest.Add","System::Windows::Automation::CacheRequest::Add","System.Windows.Automation.CacheRequest.AutomationElementMode","System::Windows::Automation::CacheRequest::AutomationElementMode","System.Windows.Automation.CacheRequest.Clone","System::Windows::Automation::CacheRequest::Clone","System.Windows.Automation.CacheRequest.Current","System::Windows::Automation::CacheRequest::Current","System.Windows.Automation.CacheRequest.Pop","System::Windows::Automation::CacheRequest::Pop","System.Windows.Automation.CacheRequest.Push","System::Windows::Automation::CacheRequest::Push","System.Windows.Automation.CacheRequest.TreeFilter","System::Windows::Automation::CacheRequest::TreeFilter","System.Windows.Automation.CacheRequest.TreeScope","System::Windows::Automation::CacheRequest::TreeScope"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9f9d1af4-ad29-5996-00b4-a57c4a909ae8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/CacheRequest.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CacheRequest class | Microsoft Docs","_op_ogTitle":"CacheRequest class","description":"Specifies properties and patterns that the UI Automation framework caches when an  is obtained.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.CacheRequest","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.cacherequest","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.cacherequest","fileRelativePath":"System.Windows.Automation.CacheRequest.html"},"themesRelativePathToOutputRoot":"_themes/"}