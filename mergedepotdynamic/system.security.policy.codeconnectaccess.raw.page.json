{"content":"    \r\n    <h1 id=\"System_Security_Policy_CodeConnectAccess\">\r\n      <span class=\"lang-csharp\">CodeConnectAccess</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies the network resource access that is granted to code.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class CodeConnectAccess</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CodeConnectAccess</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class is used in conjunction with the <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> class to control how executing code can connect back to the site it was downloaded from. These classes provide programmatic control of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> granted to executing code that controls what schemes and ports the code can use access its origin site. You can specify scheme and port pairs that are permitted based on the scheme in the URL where the code originates.  </p>\n<p> To create a CodeConnectAccess object based on the code&#39;s origin scheme, use the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_CreateOriginSchemeAccess_\" data-linktype=\"relative-path\">CreateOriginSchemeAccess</a> method.  </p>\n<p> To create a CodeConnectAccess object that can use any scheme but is restricted by port, use the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_CreateAnySchemeAccess_\" data-linktype=\"relative-path\">CreateAnySchemeAccess</a> method.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess__ctor_System_String_System_Int32_\" data-linktype=\"self-bookmark\">CodeConnectAccess(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_AnyScheme\" data-linktype=\"self-bookmark\">AnyScheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains the string value that represents the scheme wildcard.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_DefaultPort\" data-linktype=\"self-bookmark\">DefaultPort</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains the value used to represent the default port.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_OriginPort\" data-linktype=\"self-bookmark\">OriginPort</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains the value used to represent the port value in the URI where code originated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_OriginScheme\" data-linktype=\"self-bookmark\">OriginScheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains the value used to represent the scheme in the URL where the code originated.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_Port\" data-linktype=\"self-bookmark\">Port</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the port represented by the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_Scheme\" data-linktype=\"self-bookmark\">Scheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URI scheme represented by the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_CreateAnySchemeAccess_System_Int32_\" data-linktype=\"self-bookmark\">CreateAnySchemeAccess(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance that represents access to the specified port using any scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_CreateOriginSchemeAccess_System_Int32_\" data-linktype=\"self-bookmark\">CreateOriginSchemeAccess(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance that represents access to the specified port using the code&#39;s scheme of origin.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether two <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects represent the same scheme and port.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_CodeConnectAccess_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serves as a hash function for a particular type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess__ctor_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeConnectAccess(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeConnectAccess (string allowScheme, int allowPort);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowScheme</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI scheme represented by the current instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowPort</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port represented by the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>allowScheme</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>allowScheme</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>allowScheme</code> contains characters that are not permitted in schemes.  </p>\n<p> -or-  </p>\n<p> <code>allowPort</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>allowPort</code> is greater than 65,535.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Scheme_\" data-linktype=\"relative-path\">Scheme</a> property is set using the <code>allowScheme</code> parameter. The scheme is converted to lowercase. The value of <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Scheme_\" data-linktype=\"relative-path\">Scheme</a> controls the scheme that executing code can use to connect to a network resource.  </p>\n<p> The <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Port_\" data-linktype=\"relative-path\">Port</a> property is set using the <code>allowPort</code> parameter. The value of <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Port_\" data-linktype=\"relative-path\">Port</a> controls the port that executing code can use to connect to a network resource.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object that permits downloaded code to connect back to its origin server using the HTTP protocol and the same port it was downloaded on. For an example that demonstrates using <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects to create a code group and adding the code group to a policy level, see the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> class overview.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#2\">\n        public static CodeConnectAccess CreateHttpAndOriginPortAccess()\n    {\n        return new CodeConnectAccess(Uri.UriSchemeHttp, CodeConnectAccess.OriginPort);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#2\">\n\nstatic CodeConnectAccess^ CreateHttpAndOriginPortAccess()\n{\n    return gcnew CodeConnectAccess(Uri::UriSchemeHttp, \n        CodeConnectAccess::OriginPort);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_AnyScheme\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AnyScheme</div>        \r\n          </div>\r\n    \r\n            <p>Contains the string value that represents the scheme wildcard.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string AnyScheme;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As an alternative to constructing a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object using this value, you can call the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_CreateAnySchemeAccess_\" data-linktype=\"relative-path\">CreateAnySchemeAccess</a> method to obtain a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object that represents a specified port and any scheme.  </p>\n<p> The value of this field is &quot;*&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of this field.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#6\">    public static void DisplayFields ()\n    {\n        Console.WriteLine(&quot;Origin scheme value:{0} AnyScheme value: {1}&quot;, \n            CodeConnectAccess.OriginScheme, CodeConnectAccess.AnyScheme);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#6\">\nstatic void DisplayFields ()\n{\n    Console::WriteLine(&quot;Origin scheme value:{0} AnyScheme value: {1}&quot;, \n        CodeConnectAccess::OriginScheme, CodeConnectAccess::AnyScheme);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_DefaultPort\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultPort</div>        \r\n          </div>\r\n    \r\n            <p>Contains the value used to represent the default port.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int DefaultPort;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object that has the default port for a specified scheme, use this field as the <code>allowPort</code> parameter of the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess__ctor_\" data-linktype=\"relative-path\">CodeConnectAccess</a> constructor.  </p>\n<p> The value of this field is -3.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object that specifies FTP for the scheme and the default port for FTP.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#1\">    public static CodeConnectAccess CreateFtpAndDefaultPortAccess()\n    {\n        return new CodeConnectAccess(Uri.UriSchemeFtp, CodeConnectAccess.DefaultPort);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#1\">\n\nstatic CodeConnectAccess^ CreateFtpAndDefaultPortAccess()\n{\n    return gcnew CodeConnectAccess(Uri::UriSchemeFtp, \n        CodeConnectAccess::DefaultPort);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_OriginPort\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OriginPort</div>        \r\n          </div>\r\n    \r\n            <p>Contains the value used to represent the port value in the URI where code originated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int OriginPort;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object that has the same port as the port in the executing code&#39;s URL evidence, use this field as the <code>allowPort</code> parameter of the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess__ctor_\" data-linktype=\"relative-path\">CodeConnectAccess</a> constructor.  </p>\n<p> The value of this field is -4.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object that specifies the HTTP scheme and origin port.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#2\">\n        public static CodeConnectAccess CreateHttpAndOriginPortAccess()\n    {\n        return new CodeConnectAccess(Uri.UriSchemeHttp, CodeConnectAccess.OriginPort);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#2\">\n\nstatic CodeConnectAccess^ CreateHttpAndOriginPortAccess()\n{\n    return gcnew CodeConnectAccess(Uri::UriSchemeHttp, \n        CodeConnectAccess::OriginPort);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_OriginScheme\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OriginScheme</div>        \r\n          </div>\r\n    \r\n            <p>Contains the value used to represent the scheme in the URL where the code originated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string OriginScheme;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not use this field with the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess__ctor_\" data-linktype=\"relative-path\">CodeConnectAccess</a> constructor. Instead, use the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_CreateOriginSchemeAccess_\" data-linktype=\"relative-path\">CreateOriginSchemeAccess</a> method.  </p>\n<p> The value of this field is &quot;$origin&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of this field.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#6\">    public static void DisplayFields ()\n    {\n        Console.WriteLine(&quot;Origin scheme value:{0} AnyScheme value: {1}&quot;, \n            CodeConnectAccess.OriginScheme, CodeConnectAccess.AnyScheme);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#6\">\nstatic void DisplayFields ()\n{\n    Console::WriteLine(&quot;Origin scheme value:{0} AnyScheme value: {1}&quot;, \n        CodeConnectAccess::OriginScheme, CodeConnectAccess::AnyScheme);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_Port\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess_Port_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Port</div>        \r\n          </div>\r\n    \r\n            <p>Gets the port represented by the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Port { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that identifies a computer port used in conjunction with the <span class=\"xref\">stem.Security.Policy.CodeConnectAccess.Scheme*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Port values are between 0 and 65,535. The port value is specified when you create an instance of <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#4\">    public static void DisplayProperties (CodeConnectAccess access)\n    {\n        Console.WriteLine(&quot;Scheme:{0} Port: {1}&quot;, access.Scheme, access.Port);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#4\">\nstatic void DisplayProperties (CodeConnectAccess^ access)\n{\n    Console::WriteLine(&quot;Scheme:{0} Port: {1}&quot;, \n        access-&gt;Scheme, access-&gt;Port);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_Scheme\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess_Scheme_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scheme</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URI scheme represented by the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Scheme { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies a URI scheme, converted to lowercase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The scheme value is specified when you create an instance of <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#4\">    public static void DisplayProperties (CodeConnectAccess access)\n    {\n        Console.WriteLine(&quot;Scheme:{0} Port: {1}&quot;, access.Scheme, access.Port);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#4\">\nstatic void DisplayProperties (CodeConnectAccess^ access)\n{\n    Console::WriteLine(&quot;Scheme:{0} Port: {1}&quot;, \n        access-&gt;Scheme, access-&gt;Port);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_CreateAnySchemeAccess_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess_CreateAnySchemeAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAnySchemeAccess(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance that represents access to the specified port using any scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess (int allowPort);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowPort</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port represented by the returned instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance for the specified port.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>allowPort</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>allowPort</code> is greater than 65,535.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance returned by this method uses the scheme wildcard value <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> (&quot;*&quot;) to represent the scheme.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method. For an example that demonstrates using <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects to create a code group and adding the code group to a policy level, see the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> class overview.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#5\">    public static CodeConnectAccess CreateAnySchemeOriginPortAccess()\n{\n    return CodeConnectAccess.CreateAnySchemeAccess(CodeConnectAccess.OriginPort);\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#5\">\nstatic CodeConnectAccess^ CreateAnySchemeOriginPortAccess()\n{\n    return CodeConnectAccess::CreateAnySchemeAccess\n        (CodeConnectAccess::OriginPort);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_CreateOriginSchemeAccess_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess_CreateOriginSchemeAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateOriginSchemeAccess(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance that represents access to the specified port using the code&#39;s scheme of origin.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess (int allowPort);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowPort</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port represented by the returned instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance for the specified port.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>allowPort</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>allowPort</code> is greater than 65,535.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> instance returned by this method has the scheme value <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a>. The origin scheme is the scheme value from the URI where the code originated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects to create a code group and adding the code group to a policy level.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#3\">    public static void SetNetCodeGroupAccess()\n    {\n        const string userPolicyLevel = &quot;User&quot;;\n        // Locate the User policy level.\n        PolicyLevel level = null;\n        System.Collections.IEnumerator ph = \n            System.Security.SecurityManager.PolicyHierarchy();\n        while(ph.MoveNext())\n        {\n            level = (PolicyLevel)ph.Current;\n            if( level.Label == userPolicyLevel )\n            {\n                break;\n            }\n        }\n        if (level.Label != userPolicyLevel)\n            throw new ApplicationException(&quot;Could not find User policy level.&quot;);\n\n        IMembershipCondition membership =\n            new UrlMembershipCondition(@&quot;http://www.contoso.com/*&quot;);\n        NetCodeGroup codeGroup = new NetCodeGroup(membership);\n        // Delete default settings.\n        codeGroup.ResetConnectAccess();\n        // Create an object that represents access to the FTP scheme and default port.\n        CodeConnectAccess a1 = new CodeConnectAccess(Uri.UriSchemeFtp, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the HTTPS scheme and default port.\n        CodeConnectAccess a2 = new CodeConnectAccess(Uri.UriSchemeHttps, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the origin scheme and port.\n        CodeConnectAccess a3 = CodeConnectAccess.CreateOriginSchemeAccess(CodeConnectAccess.OriginPort);\n        // Add connection access objects to the NetCodeGroup object.\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a1);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a2);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a3);\n        // Provide name and description information for caspol.exe tool.\n        codeGroup.Name = &quot;ContosoHttpCodeGroup&quot;;\n        codeGroup.Description = &quot;Code originating from contoso.com can connect back using the FTP or HTTPS.&quot;;\n        // Add the code group to the User policy&#39;s root node.\n        level.RootCodeGroup.AddChild(codeGroup);\n        // Save the changes to the policy level.\n        System.Security.SecurityManager.SavePolicy();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#3\">\nstatic void SetNetCodeGroupAccess()\n{\n    String^ userPolicyLevel = &quot;User&quot;;\n    // Locate the User policy level.\n    PolicyLevel^ level = nullptr;\n    System::Collections::IEnumerator^ ph = \n        System::Security::SecurityManager::PolicyHierarchy();\n    while(ph-&gt;MoveNext())\n    {\n        level = (PolicyLevel^)ph-&gt;Current;\n        if (level-&gt;Label == userPolicyLevel)\n        {\n            break;       \n        }\n    }\n    if (level-&gt;Label != userPolicyLevel)\n        throw gcnew ApplicationException(&quot;Could not find User policy level.&quot;);\n\n    IMembershipCondition^ membership =\n        gcnew UrlMembershipCondition(&quot;http://www.contoso.com/*&quot;);\n    NetCodeGroup^ codeGroup = gcnew NetCodeGroup(membership);\n    // Delete default settings.\n    codeGroup-&gt;ResetConnectAccess();\n    // Create an object that represents access to the FTP scheme and \n    // default port.\n    CodeConnectAccess^ CodeAccessFtp = \n        gcnew CodeConnectAccess(Uri::UriSchemeFtp, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the HTTPS scheme \n    // and default port.\n    CodeConnectAccess^ CodeAccessHttps = \n        gcnew CodeConnectAccess(Uri::UriSchemeHttps, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the origin \n    // scheme and port.\n    CodeConnectAccess^ CodeAccessOrigin = \n        CodeConnectAccess::CreateOriginSchemeAccess\n        (CodeConnectAccess::OriginPort);\n    // Add connection access objects to the NetCodeGroup object.\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessFtp);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessHttps);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessOrigin);\n    // Provide name and description information for caspol.exe tool.\n    codeGroup-&gt;Name = &quot;ContosoHttpCodeGroup&quot;;\n    codeGroup-&gt;Description = &quot;Code originating from contoso.com can&quot; +\n        &quot; connect back using the FTP or HTTPS.&quot;;\n    // Add the code group to the User policy&#39;s root node.\n    level-&gt;RootCodeGroup-&gt;AddChild(codeGroup);\n    // Save the changes to the policy level.\n    System::Security::SecurityManager::SavePolicy();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether two <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects represent the same scheme and port.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare to the current <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two objects represent the same scheme and port; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects are equal if their <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Scheme_\" data-linktype=\"relative-path\">Scheme</a> and <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Port_\" data-linktype=\"relative-path\">Port</a> property values are equal.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_CodeConnectAccess_GetHashCode\">\r\n    \r\n            <a id=\"System_Security_Policy_CodeConnectAccess_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Serves as a hash function for a particular type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the current <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Policy.CodeConnectAccess.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Policy.CodeConnectAccess.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.AnyScheme\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.DefaultPort\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.Equals\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.OriginPort\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.OriginScheme\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.Port\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.CodeConnectAccess.Scheme\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"185aaab9-5ec0-28b8-9f7b-a0a6a49d7d5d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the network resource access that is granted to code.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Policy/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Policy.CodeConnectAccess\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Policy.CodeConnectAccess.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Policy.CodeConnectAccess.yml","open_to_public_contributors":true,"api_name":["System.Security.Policy.CodeConnectAccess","System.Security.Policy.CodeConnectAccess..ctor","System.Security.Policy.CodeConnectAccess.AnyScheme","System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess","System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess","System.Security.Policy.CodeConnectAccess.DefaultPort","System.Security.Policy.CodeConnectAccess.Equals","System.Security.Policy.CodeConnectAccess.GetHashCode","System.Security.Policy.CodeConnectAccess.OriginPort","System.Security.Policy.CodeConnectAccess.OriginScheme","System.Security.Policy.CodeConnectAccess.Port","System.Security.Policy.CodeConnectAccess.Scheme"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Policy.CodeConnectAccess","System::Security::Policy::CodeConnectAccess","System.Security.Policy.CodeConnectAccess.#ctor","System::Security::Policy::CodeConnectAccess::#ctor","System.Security.Policy.CodeConnectAccess.AnyScheme","System::Security::Policy::CodeConnectAccess::AnyScheme","System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess","System::Security::Policy::CodeConnectAccess::CreateAnySchemeAccess","System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess","System::Security::Policy::CodeConnectAccess::CreateOriginSchemeAccess","System.Security.Policy.CodeConnectAccess.DefaultPort","System::Security::Policy::CodeConnectAccess::DefaultPort","System.Security.Policy.CodeConnectAccess.Equals","System::Security::Policy::CodeConnectAccess::Equals","System.Security.Policy.CodeConnectAccess.GetHashCode","System::Security::Policy::CodeConnectAccess::GetHashCode","System.Security.Policy.CodeConnectAccess.OriginPort","System::Security::Policy::CodeConnectAccess::OriginPort","System.Security.Policy.CodeConnectAccess.OriginScheme","System::Security::Policy::CodeConnectAccess::OriginScheme","System.Security.Policy.CodeConnectAccess.Port","System::Security::Policy::CodeConnectAccess::Port","System.Security.Policy.CodeConnectAccess.Scheme","System::Security::Policy::CodeConnectAccess::Scheme"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"185aaab9-5ec0-28b8-9f7b-a0a6a49d7d5d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Policy/CodeConnectAccess.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeConnectAccess class | Microsoft Docs","_op_ogTitle":"CodeConnectAccess class","description":"Specifies the network resource access that is granted to code.\n","toc_asset_id":"_splitted/System.Security.Policy/toc.json","toc_rel":"_splitted/System.Security.Policy/toc.json","source_url":"","ms.assetid":"System.Security.Policy.CodeConnectAccess","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.policy.codeconnectaccess","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.policy.codeconnectaccess","fileRelativePath":"System.Security.Policy.CodeConnectAccess.html"},"themesRelativePathToOutputRoot":"_themes/"}