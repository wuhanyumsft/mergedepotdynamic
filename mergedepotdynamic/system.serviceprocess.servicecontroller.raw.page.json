{"content":"    \r\n    <h1 id=\"System_ServiceProcess_ServiceController\">\r\n      <span class=\"lang-csharp\">ServiceController</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.Designer(&quot;System.ServiceProcess.Design.ServiceControllerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ServiceProcess.ServiceProcessDescription(&quot;ServiceControllerDesc&quot;)]\npublic class ServiceController : System.ComponentModel.Component</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ServiceController</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You can use the ServiceController class to connect to and control the behavior of existing services. When you create an instance of the ServiceController class, you set its properties so it interacts with a specific Windows service. You can then use the class to start, stop, and otherwise manipulate the service.  </p>\n<p> You will most likely use the ServiceController component in an administrative capacity. For example, you could create a Windows or Web application that sends custom commands to a service through the ServiceController instance. This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.  </p>\n<p> After you create an instance of ServiceController, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> By default, <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_MachineName_\" data-linktype=\"relative-path\">MachineName</a> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.  </p>\n</div>\n<p> Generally, the service author writes code that customizes the action associated with a specific command. For example, a service can contain code to respond to an <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_OnPause_\" data-linktype=\"relative-path\">OnPause</a> command. In that case, the custom processing for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_Pause_\" data-linktype=\"relative-path\">Pause</a> task runs before the system pauses the service.  </p>\n<p> The set of commands a service can process depends on its properties; for example, you can set the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_CanStop_\" data-linktype=\"relative-path\">CanStop</a> property for a service to <code>false</code>. This setting renders the <code>Stop</code> command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button. If you try to stop the service from your code, the system raises an error and displays the error message &quot;Failed to stop <code>servicename</code>.&quot;</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController__ctor\" data-linktype=\"self-bookmark\">ServiceController()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class that is not associated with a specific service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController__ctor_System_String_\" data-linktype=\"self-bookmark\">ServiceController(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class that is associated with an existing service on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">ServiceController(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class that is associated with an existing service on the specified computer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_CanPauseAndContinue\" data-linktype=\"self-bookmark\">CanPauseAndContinue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the service can be paused and resumed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_CanShutdown\" data-linktype=\"self-bookmark\">CanShutdown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the service should be notified when the system is shutting down.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_CanStop\" data-linktype=\"self-bookmark\">CanStop</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the service can be stopped after it has started.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_DependentServices\" data-linktype=\"self-bookmark\">DependentServices</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the set of services that depends on the service associated with this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_DisplayName\" data-linktype=\"self-bookmark\">DisplayName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a friendly name for the service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_MachineName\" data-linktype=\"self-bookmark\">MachineName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the computer on which this service resides.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_ServiceHandle\" data-linktype=\"self-bookmark\">ServiceHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the handle for the service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_ServiceName\" data-linktype=\"self-bookmark\">ServiceName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name that identifies the service that this instance references.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_ServicesDependedOn\" data-linktype=\"self-bookmark\">ServicesDependedOn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The set of services that this service depends on.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_ServiceType\" data-linktype=\"self-bookmark\">ServiceType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of service that this object references.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_StartType\" data-linktype=\"self-bookmark\">StartType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates how the service represented by the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> object starts.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Status\" data-linktype=\"self-bookmark\">Status</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the status of the service that is referenced by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disconnects this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance from the service and frees all the resources that the instance allocated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Continue\" data-linktype=\"self-bookmark\">Continue()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Continues a service after it has been paused.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_ExecuteCommand_System_Int32_\" data-linktype=\"self-bookmark\">ExecuteCommand(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes a custom command on the service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_GetDevices\" data-linktype=\"self-bookmark\">GetDevices()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the device driver services on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_GetDevices_System_String_\" data-linktype=\"self-bookmark\">GetDevices(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the device driver services on the specified computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_GetServices\" data-linktype=\"self-bookmark\">GetServices()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves all the services on the local computer, except for the device driver services.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_GetServices_System_String_\" data-linktype=\"self-bookmark\">GetServices(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves all the services on the specified computer, except for the device driver services.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Pause\" data-linktype=\"self-bookmark\">Pause()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Suspends a service&#39;s operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Refresh\" data-linktype=\"self-bookmark\">Refresh()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Refreshes property values by resetting the properties to their current values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Start\" data-linktype=\"self-bookmark\">Start()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts the service, passing no arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Start_System_String___\" data-linktype=\"self-bookmark\">Start(String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts a service, passing the specified arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_Stop\" data-linktype=\"self-bookmark\">Stop()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Stops this service and any services that are dependent on this service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_WaitForStatus_System_ServiceProcess_ServiceControllerStatus_\" data-linktype=\"self-bookmark\">WaitForStatus(ServiceControllerStatus)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Infinitely waits for the service to reach the specified status.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceProcess_ServiceController_WaitForStatus_System_ServiceProcess_ServiceControllerStatus_System_TimeSpan_\" data-linktype=\"self-bookmark\">WaitForStatus(ServiceControllerStatus,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Waits for the service to reach the specified status or for the specified time-out to expire.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController__ctor\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServiceController()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class that is not associated with a specific service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ServiceController ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController__ctor_System_String_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServiceController(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class that is associated with an existing service on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ServiceController (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name that identifies the service to the system. This can also be the display name for the service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the ServiceController constructor to create a <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> object that is used to control a sample service. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#2\">                    // Display properties for the Simple Service sample\n                    // from the ServiceBase example.\n                    ServiceController sc = new ServiceController(&quot;Simple Service&quot;);\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n                    Console.WriteLine(&quot;Can Pause and Continue = &quot; + sc.CanPauseAndContinue);\n                    Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown);\n                    Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#2\">                &#39; Display properties for the Simple Service sample \n                &#39; from the ServiceBase example\n                Dim sc As New ServiceController(&quot;Simple Service&quot;)\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n                Console.WriteLine(&quot;Can Pause and Continue = &quot; + _\n                    sc.CanPauseAndContinue.ToString())\n                Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown.ToString())\n                Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServiceController(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class that is associated with an existing service on the specified computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ServiceController (string name, string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name that identifies the service to the system. This can also be the display name for the service.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer on which the service resides.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>machineName</code> is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the <code>machineName</code> parameter, you can use &quot;.&quot; to represent the local computer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_CanPauseAndContinue\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_CanPauseAndContinue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanPauseAndContinue</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the service can be paused and resumed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanPauseAndContinue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the service can be paused; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the CanPauseAndContinue property to determine whether a service can pause and continue. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#2\">                    // Display properties for the Simple Service sample\n                    // from the ServiceBase example.\n                    ServiceController sc = new ServiceController(&quot;Simple Service&quot;);\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n                    Console.WriteLine(&quot;Can Pause and Continue = &quot; + sc.CanPauseAndContinue);\n                    Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown);\n                    Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#2\">                &#39; Display properties for the Simple Service sample \n                &#39; from the ServiceBase example\n                Dim sc As New ServiceController(&quot;Simple Service&quot;)\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n                Console.WriteLine(&quot;Can Pause and Continue = &quot; + _\n                    sc.CanPauseAndContinue.ToString())\n                Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown.ToString())\n                Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_CanShutdown\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_CanShutdown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanShutdown</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the service should be notified when the system is shutting down.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanShutdown { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the service should be notified when the system is shutting down; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the CanShutdown property to determine whether a service provides a handler for a shutdown event. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#2\">                    // Display properties for the Simple Service sample\n                    // from the ServiceBase example.\n                    ServiceController sc = new ServiceController(&quot;Simple Service&quot;);\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n                    Console.WriteLine(&quot;Can Pause and Continue = &quot; + sc.CanPauseAndContinue);\n                    Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown);\n                    Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#2\">                &#39; Display properties for the Simple Service sample \n                &#39; from the ServiceBase example\n                Dim sc As New ServiceController(&quot;Simple Service&quot;)\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n                Console.WriteLine(&quot;Can Pause and Continue = &quot; + _\n                    sc.CanPauseAndContinue.ToString())\n                Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown.ToString())\n                Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_CanStop\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_CanStop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanStop</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the service can be stopped after it has started.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanStop { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the service can be stopped and the <span class=\"xref\">stem.ServiceProcess.ServiceBase.OnStop*</span> method called; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the CanStop property to determine whether a service provides a handler for a stop event. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#2\">                    // Display properties for the Simple Service sample\n                    // from the ServiceBase example.\n                    ServiceController sc = new ServiceController(&quot;Simple Service&quot;);\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n                    Console.WriteLine(&quot;Can Pause and Continue = &quot; + sc.CanPauseAndContinue);\n                    Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown);\n                    Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#2\">                &#39; Display properties for the Simple Service sample \n                &#39; from the ServiceBase example\n                Dim sc As New ServiceController(&quot;Simple Service&quot;)\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n                Console.WriteLine(&quot;Can Pause and Continue = &quot; + _\n                    sc.CanPauseAndContinue.ToString())\n                Console.WriteLine(&quot;Can ShutDown = &quot; + sc.CanShutdown.ToString())\n                Console.WriteLine(&quot;Can Stop = &quot; + sc.CanStop.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_DependentServices\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_DependentServices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DependentServices</div>        \r\n          </div>\r\n    \r\n            <p>Gets the set of services that depends on the service associated with this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceProcess.ServiceController[] DependentServices { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instances, each of which is associated with a service that depends on this service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DependentServices array represents the services that the system stops if your application calls <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_Stop_\" data-linktype=\"relative-path\">Stop</a> for this service.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to display the set of services that are dependent on the Event Log service.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#3\">\n         ServiceController sc =  new ServiceController(&quot;Event Log&quot;);\n         ServiceController[] scServices = sc.DependentServices;\n       \n         // Display the list of services dependent on the Event Log service.\n         if (scServices.Length == 0)\n         {\n            Console.WriteLine(&quot;There are no services dependent on {0}&quot;, \n                               sc.ServiceName);\n         }\n         else \n         {\n            Console.WriteLine(&quot;Services dependent on {0}:&quot;,\n                               sc.ServiceName);\n\n            foreach (ServiceController scTemp in scServices)\n            {\n               Console.WriteLine(&quot; {0}&quot;, scTemp.DisplayName);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#3\">         ServiceController^ sc = gcnew ServiceController(  &quot;Event Log&quot; );\n         array&lt;ServiceController^&gt;^scServices = nullptr;\n         if ( sc )\n         {\n            scServices = sc-&gt;DependentServices;\n         }\n\n         if ( sc &amp;&amp; scServices )\n         {\n            // Display the list of services dependent on the Event Log service.\n            if ( scServices-&gt;Length == 0 )\n            {\n               Console::WriteLine(  &quot;There are no services dependent on {0}&quot;, sc-&gt;ServiceName );\n            }\n            else\n            {\n               Console::WriteLine(  &quot;Services dependent on {0}:&quot;, sc-&gt;ServiceName );\n               for each (ServiceController^ scTemp in scServices)\n               {\n                  Console::WriteLine(&quot; {0}&quot;, scTemp-&gt;DisplayName);\n               }\n            }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#3\">\n         Dim sc As New ServiceController(&quot;Event Log&quot;)\n         Dim scServices As ServiceController() = sc.DependentServices\n         \n         &#39; Display the list of services dependent on the Event Log service.\n         If scServices.Length = 0 Then\n            Console.WriteLine(&quot;There are no services dependent on {0}&quot;, sc.ServiceName)\n         Else\n            Console.WriteLine(&quot;Services dependent on {0}:&quot;, sc.ServiceName)\n            \n            Dim scTemp As ServiceController\n            For Each scTemp In  scServices\n               Console.WriteLine(&quot; {0}&quot;, scTemp.DisplayName)\n            Next scTemp\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_DisplayName\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_DisplayName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a friendly name for the service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DisplayName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The friendly name of the service, which can be used to identify the service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The DisplayName is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can set the DisplayName to an empty string (&quot;&quot;), but setting the property to <code>null</code> throws an exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to display the set of services that are dependent on the Event Log service.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#3\">\n         ServiceController sc =  new ServiceController(&quot;Event Log&quot;);\n         ServiceController[] scServices = sc.DependentServices;\n       \n         // Display the list of services dependent on the Event Log service.\n         if (scServices.Length == 0)\n         {\n            Console.WriteLine(&quot;There are no services dependent on {0}&quot;, \n                               sc.ServiceName);\n         }\n         else \n         {\n            Console.WriteLine(&quot;Services dependent on {0}:&quot;,\n                               sc.ServiceName);\n\n            foreach (ServiceController scTemp in scServices)\n            {\n               Console.WriteLine(&quot; {0}&quot;, scTemp.DisplayName);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#3\">         ServiceController^ sc = gcnew ServiceController(  &quot;Event Log&quot; );\n         array&lt;ServiceController^&gt;^scServices = nullptr;\n         if ( sc )\n         {\n            scServices = sc-&gt;DependentServices;\n         }\n\n         if ( sc &amp;&amp; scServices )\n         {\n            // Display the list of services dependent on the Event Log service.\n            if ( scServices-&gt;Length == 0 )\n            {\n               Console::WriteLine(  &quot;There are no services dependent on {0}&quot;, sc-&gt;ServiceName );\n            }\n            else\n            {\n               Console::WriteLine(  &quot;Services dependent on {0}:&quot;, sc-&gt;ServiceName );\n               for each (ServiceController^ scTemp in scServices)\n               {\n                  Console::WriteLine(&quot; {0}&quot;, scTemp-&gt;DisplayName);\n               }\n            }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#3\">\n         Dim sc As New ServiceController(&quot;Event Log&quot;)\n         Dim scServices As ServiceController() = sc.DependentServices\n         \n         &#39; Display the list of services dependent on the Event Log service.\n         If scServices.Length = 0 Then\n            Console.WriteLine(&quot;There are no services dependent on {0}&quot;, sc.ServiceName)\n         Else\n            Console.WriteLine(&quot;Services dependent on {0}:&quot;, sc.ServiceName)\n            \n            Dim scTemp As ServiceController\n            For Each scTemp In  scServices\n               Console.WriteLine(&quot; {0}&quot;, scTemp.DisplayName)\n            Next scTemp\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_MachineName\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_MachineName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MachineName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the computer on which this service resides.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MachineName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the computer that is running the service associated with this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance. The default is the local computer (&quot;.&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The MachineName syntax is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The computer name is the name of the server that is running this service, without the preceding backslash characters (\\\\).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_ServiceHandle\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_ServiceHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServiceHandle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the handle for the service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.InteropServices.SafeHandle ServiceHandle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle\" data-linktype=\"relative-path\">SafeHandle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.interopservices.safehandle\" data-linktype=\"relative-path\">SafeHandle</a> that contains the handle for the service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_ServiceName\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_ServiceName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServiceName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name that identifies the service that this instance references.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ServiceName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name that identifies the service that this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance references. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The ServiceName is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The syntax of the ServiceName property is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ServiceName identifies the service to the Service Control Manager. Changing this property causes the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance to bind to another service, it does not change what the Service Control Manager&#39;s Microsoft Management Console snap-in displays.  </p>\n<p> When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller#System_ServiceProcess_ServiceInstaller_ServiceName_\" data-linktype=\"relative-path\">ServiceName</a> property of the corresponding <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a> class. In code, the ServiceName is usually set in the <code>main()</code> function of the executable.  </p>\n<p> When you reset the ServiceName property, the method that sets the property sets this instance&#39;s <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> to an empty string (&quot;&quot;).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_ServicesDependedOn\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_ServicesDependedOn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServicesDependedOn</div>        \r\n          </div>\r\n    \r\n            <p>The set of services that this service depends on.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceProcess.ServiceController[] ServicesDependedOn { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instances, each of which is associated with a service that must be running for this service to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If any service in the ServicesDependedOn array is not running, you will not be able to start this service.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to display the set of services that the Messenger service is dependent on.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#4\">         ServiceController sc = new ServiceController(&quot;Messenger&quot;);\n         ServiceController[] scServices= sc.ServicesDependedOn;\n\n         // Display the services that the Messenger service is dependent on.\n         if (scServices.Length == 0)\n         {\n            Console.WriteLine(&quot;{0} service is not dependent on any other services.&quot;, \n                               sc.ServiceName);\n         }\n         else \n         {\n            Console.WriteLine(&quot;{0} service is dependent on the following:&quot;,\n                               sc.ServiceName);\n\n            foreach (ServiceController scTemp in scServices)\n            {\n               Console.WriteLine(&quot; {0}&quot;, scTemp.DisplayName);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#4\">         ServiceController^ sc = gcnew ServiceController(  &quot;Messenger&quot; );\n         array&lt;ServiceController^&gt;^scServices = nullptr;\n         if ( sc )\n         {\n            scServices = sc-&gt;ServicesDependedOn;\n         }\n\n         if ( sc &amp;&amp; scServices )\n         {\n            // Display the services that the Messenger service is dependent on.\n            if ( scServices-&gt;Length == 0 )\n            {\n               Console::WriteLine(  &quot;{0} service is not dependent on any other services.&quot;, sc-&gt;ServiceName );\n            }\n            else\n            {\n               Console::WriteLine(  &quot;{0} service is dependent on the following:&quot;, sc-&gt;ServiceName );\n               for each (ServiceController^ scTemp in scServices)\n               {\n                  Console::WriteLine(&quot; {0}&quot;, scTemp-&gt;DisplayName);\n               }\n            }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#4\">\n         Dim sc As New ServiceController(&quot;Messenger&quot;)\n         Dim scServices As ServiceController() = sc.ServicesDependedOn\n         \n         &#39; Display the services that the Messenger service is dependent on.\n         If scServices.Length = 0 Then\n            Console.WriteLine(&quot;{0} service is not dependent on any other services.&quot;, sc.ServiceName)\n         Else\n            Console.WriteLine(&quot;{0} service is dependent on the following:&quot;, sc.ServiceName)\n            \n            Dim scTemp As ServiceController\n            For Each scTemp In  scServices\n               Console.WriteLine(&quot; {0}&quot;, scTemp.DisplayName)\n            Next scTemp\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_ServiceType\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_ServiceType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServiceType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of service that this object references.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceProcess.ServiceType ServiceType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicetype\" data-linktype=\"relative-path\">ServiceType</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.serviceprocess.servicetype\" data-linktype=\"relative-path\">ServiceType</a> values, used to indicate the network service type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The service type indicates how the service is used by the system. The value of the ServiceType property represents a set of flags combined using the bitwise OR operator.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to display the device driver services on the local computer.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#5\">         ServiceController[] scDevices;\n         scDevices = ServiceController.GetDevices();\n\n         int numAdapter = 0,\n             numFileSystem = 0, \n             numKernel = 0, \n             numRecognizer = 0;\n       \n         // Display the list of device driver services.\n         Console.WriteLine(&quot;Device driver services on the local computer:&quot;);\n\n         foreach (ServiceController scTemp in scDevices)\n         {\n            // Display the status and the service name, for example,\n            //   [Running] PCI Bus Driver\n            //             Type = KernelDriver\n\n            Console.WriteLine(&quot; [{0}] {1}&quot;, \n                              scTemp.Status, scTemp.DisplayName);\n            Console.WriteLine(&quot;           Type = {0}&quot;, scTemp.ServiceType); \n\n            // Update counters using the service type bit flags.\n            if ((scTemp.ServiceType &amp; ServiceType.Adapter) != 0)\n            {\n               numAdapter++;\n            } \n            if ((scTemp.ServiceType &amp; ServiceType.FileSystemDriver) != 0)\n            {\n               numFileSystem++;\n            }  \n            if ((scTemp.ServiceType &amp; ServiceType.KernelDriver) != 0)\n            {\n               numKernel++;\n            } \n            if ((scTemp.ServiceType &amp; ServiceType.RecognizerDriver) != 0)\n            {\n               numRecognizer++;\n            }\n\n         }\n\n         Console.WriteLine();\n         Console.WriteLine(&quot;Total of {0} device driver services&quot;, scDevices.Length);\n         Console.WriteLine(&quot;  {0} are adapter drivers&quot;, numAdapter);\n         Console.WriteLine(&quot;  {0} are file system drivers&quot;, numFileSystem);\n         Console.WriteLine(&quot;  {0} are kernel drivers&quot;, numKernel);\n         Console.WriteLine(&quot;  {0} are file system recognizer drivers&quot;, numRecognizer);\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#5\">         array&lt;ServiceController^&gt;^scDevices = ServiceController::GetDevices();\n         if ( scDevices-&gt;Length )\n         {\n            int numAdapter = 0,numFileSystem = 0,numKernel = 0,numRecognizer = 0;\n\n            // Display the list of device driver services.\n            Console::WriteLine(  &quot;Device driver services on the local computer:&quot; );\n\n            for each (ServiceController^ scTemp in scDevices)\n            {\n               // Display the status and the service name, for example,\n               //   [Running] PCI Bus Driver\n               //             Type = KernelDriver\n               Console::WriteLine(  &quot; [{0}] {1}&quot;, scTemp-&gt;Status, scTemp-&gt;DisplayName );\n               Console::WriteLine(  &quot;           Type = {0}&quot;, scTemp-&gt;ServiceType );\n\n               // Update counters using the service type bit flags.\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::Adapter) != (ServiceType)0 )\n               {\n                  numAdapter++;\n               }\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::FileSystemDriver) != (ServiceType)0 )\n               {\n                  numFileSystem++;\n               }\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::KernelDriver) != (ServiceType)0 )\n               {\n                  numKernel++;\n               }\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::RecognizerDriver) != (ServiceType)0 )\n               {\n                  numRecognizer++;\n               }\n            }\n            Console::WriteLine();\n            Console::WriteLine(  &quot;Total of {0} device driver services&quot;, scDevices-&gt;Length.ToString() );\n            Console::WriteLine(  &quot;  {0} are adapter drivers&quot;, numAdapter.ToString() );\n            Console::WriteLine(  &quot;  {0} are file system drivers&quot;, numFileSystem.ToString() );\n            Console::WriteLine(  &quot;  {0} are kernel drivers&quot;, numKernel.ToString() );\n            Console::WriteLine(  &quot;  {0} are file system recognizer drivers&quot;, numRecognizer.ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#5\">\n         Dim scDevices() As ServiceController\n         scDevices = ServiceController.GetDevices()\n\n         Dim numAdapter As Integer\n         Dim numFileSystem As Integer\n         Dim numKernel As Integer\n         Dim numRecognizer As Integer\n         \n         &#39; Display the list of device driver services.\n         Console.WriteLine(&quot;Device driver services on the local computer:&quot;)\n         \n         Dim scTemp As ServiceController\n         For Each scTemp In  scDevices\n            &#39; Display the status and the service name, for example,\n            &#39;   [Running] PCI Bus Driver\n            &#39;             Type = KernelDriver\n\n            Console.WriteLine(&quot; [{0}] {1}&quot;, scTemp.Status, scTemp.DisplayName)\n            Console.WriteLine(&quot;           Type = {0}&quot;, scTemp.ServiceType)\n\n            &#39; Update counters using the service type bit flags.\n            If (scTemp.ServiceType And ServiceType.Adapter) &lt;&gt; 0 Then\n               numAdapter = numAdapter + 1\n            End If\n            If (scTemp.ServiceType And ServiceType.FileSystemDriver) &lt;&gt; 0 Then\n               numFileSystem = numFileSystem + 1\n            End If\n            If (scTemp.ServiceType And ServiceType.KernelDriver) &lt;&gt; 0 Then\n               numKernel = numKernel + 1\n            End If\n            If (scTemp.ServiceType And ServiceType.RecognizerDriver) &lt;&gt; 0 Then\n               numRecognizer = numRecognizer + 1\n            End If\n\n         Next scTemp\n\n         Console.WriteLine()\n         Console.WriteLine(&quot;Total of {0} device driver services&quot;, scDevices.Length)\n         Console.WriteLine(&quot;  {0} are adapter drivers&quot;, numAdapter)\n         Console.WriteLine(&quot;  {0} are file system drivers&quot;, numFileSystem)\n         Console.WriteLine(&quot;  {0} are kernel drivers&quot;, numKernel)\n         Console.WriteLine(&quot;  {0} are file system recognizer drivers&quot;, numRecognizer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_StartType\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_StartType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartType</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates how the service represented by the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> object starts.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceProcess.ServiceStartMode StartType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicestartmode\" data-linktype=\"relative-path\">ServiceStartMode</a></div>\r\n                  </div>\r\n                  <p>A value that indicates how the service starts.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Status\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Status_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Status</div>        \r\n          </div>\r\n    \r\n            <p>Gets the status of the service that is referenced by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ServiceProcess.ServiceControllerStatus Status { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The status indicates the current state of the service. The set of possible values includes several that indicate whether a state-changing command is pending.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to check the current status of the Telnet service. If the service is stopped, the example starts the service. If the service is running, the example stops the service.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#2\">\n         // Toggle the Telnet service - \n         // If it is started (running, paused, etc), stop the service.\n         // If it is stopped, start the service.\n         ServiceController sc = new ServiceController(&quot;Telnet&quot;);\n         Console.WriteLine(&quot;The Telnet service status is currently set to {0}&quot;, \n                           sc.Status.ToString());\n\n         if  ((sc.Status.Equals(ServiceControllerStatus.Stopped)) ||\n              (sc.Status.Equals(ServiceControllerStatus.StopPending)))\n         {\n            // Start the service if the current status is stopped.\n\n            Console.WriteLine(&quot;Starting the Telnet service...&quot;);\n            sc.Start();\n         }  \n         else\n         {\n            // Stop the service if its status is not set to &quot;Stopped&quot;.\n\n            Console.WriteLine(&quot;Stopping the Telnet service...&quot;);\n            sc.Stop();\n         }  \n\n         // Refresh and display the current service status.\n         sc.Refresh();\n         Console.WriteLine(&quot;The Telnet service status is now set to {0}.&quot;, \n                            sc.Status.ToString());\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#2\">         // Toggle the Telnet service - \n         // If it is started (running, paused, etc), stop the service.\n         // If it is stopped, start the service.\n         ServiceController^ sc = gcnew ServiceController(  &quot;Telnet&quot; );\n         if ( sc )\n         {\n            Console::WriteLine(  &quot;The Telnet service status is currently set to {0}&quot;, sc-&gt;Status );\n            if ( (sc-&gt;Status == (ServiceControllerStatus::Stopped) ) || (sc-&gt;Status == (ServiceControllerStatus::StopPending) ) )\n            {\n               // Start the service if the current status is stopped.\n               Console::WriteLine(  &quot;Starting the Telnet service...&quot; );\n               sc-&gt;Start();\n            }\n            else\n            {\n               // Stop the service if its status is not set to &quot;Stopped&quot;.\n               Console::WriteLine(  &quot;Stopping the Telnet service...&quot; );\n               sc-&gt;Stop();\n            }\n\n            // Refresh and display the current service status.\n            sc-&gt;Refresh();\n            Console::WriteLine(  &quot;The Telnet service status is now set to {0}.&quot;, sc-&gt;Status );\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#2\">\n         &#39; Toggle the Telnet service - \n         &#39; If it is started (running, paused, etc), stop the service.\n         &#39; If it is stopped, start the service.\n         Dim sc As New ServiceController(&quot;Telnet&quot;)\n         Console.WriteLine(&quot;The Telnet service status is currently set to {0}&quot;, sc.Status)\n         \n         If sc.Status.Equals(ServiceControllerStatus.Stopped) Or sc.Status.Equals(ServiceControllerStatus.StopPending) Then\n            &#39; Start the service if the current status is stopped.\n            Console.WriteLine(&quot;Starting the Telnet service...&quot;)\n            sc.Start()\n         Else\n            &#39; Stop the service if its status is not set to &quot;Stopped&quot;.\n            Console.WriteLine(&quot;Stopping the Telnet service...&quot;)\n            sc.Stop()\n         End If\n         \n         &#39; Refresh and display the current service status.\n         sc.Refresh()\n         Console.WriteLine(&quot;The Telnet service status is now set to {0}.&quot;, sc.Status)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Close\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Disconnects this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance from the service and frees all the resources that the instance allocated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Close releases all the handles associated with the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> instance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Continue\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Continue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Continue()</div>        \r\n          </div>\r\n    \r\n            <p>Continues a service after it has been paused.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Continue ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call Continue for a service, its status is first changed to <code>ContinuePending</code> and then, when the Continue method returns, it is changed to <code>Running</code>.  </p>\n<p> You cannot call Continue for the service until the service controller status is <code>Paused</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Continue method to continue a paused service. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#5\">                    sc.Continue();\n                    while (sc.Status == ServiceControllerStatus.Paused)\n                    {\n                        Thread.Sleep(1000);\n                        sc.Refresh();\n                    }\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#5\">                sc.Continue()\n                While sc.Status = ServiceControllerStatus.Paused\n                    Thread.Sleep(1000)\n                    sc.Refresh()\n                End While\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code>method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_ExecuteCommand_System_Int32_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_ExecuteCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteCommand(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Executes a custom command on the service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ExecuteCommand (int command);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An application-defined command flag that indicates which custom command to execute. The value must be between 128 and 256, inclusive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call ExecuteCommand, the status of the service does not change. If the service was started, the status remains <code>Running</code>. If the service was stopped, the status remains <code>Stopped</code>, and so on. To process the custom command, the service must override the <a class=\"xref\" href=\"system.serviceprocess.servicebase#System_ServiceProcess_ServiceBase_OnCustomCommand_\" data-linktype=\"relative-path\">OnCustomCommand</a> method and provide a handler for the command identified by the <code>command</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the ExecuteCommand method to execute custom commands in the <code>SimpleService</code> service example.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceContoller_ExecuteCommand#1\">using System;\nusing System.ServiceProcess;\n\nnamespace test_exec_cmnd\n{\n    class Program\n    {\n        private enum SimpleServiceCustomCommands { StopWorker = 128, RestartWorker, CheckWorker };\n        static void Main(string[] args)\n        {\n            ServiceController myService = new ServiceController(&quot;SimpleService&quot;);\n            myService.ExecuteCommand((int)SimpleServiceCustomCommands.StopWorker);\n            myService.ExecuteCommand((int)SimpleServiceCustomCommands.RestartWorker);\n            myService.ExecuteCommand((int)SimpleServiceCustomCommands.CheckWorker);\n\n\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceContoller_ExecuteCommand#1\">Imports System\nImports System.ServiceProcess\n\n\n\nClass Program\n    \n    Private Enum SimpleServiceCustomCommands\n        StopWorker = 128\n        RestartWorker\n        CheckWorker &#39;\n    End Enum &#39;SimpleServiceCustomCommands\n\n    Shared Sub Main(ByVal args() As String) \n        Dim myService As New ServiceController(&quot;SimpleService&quot;)\n        myService.ExecuteCommand(Fix(SimpleServiceCustomCommands.StopWorker))\n        myService.ExecuteCommand(Fix(SimpleServiceCustomCommands.RestartWorker))\n        myService.ExecuteCommand(Fix(SimpleServiceCustomCommands.CheckWorker))\n    \n    End Sub &#39;Main \nEnd Class &#39;Program \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_GetDevices\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_GetDevices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDevices()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the device driver services on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.ServiceProcess.ServiceController[] GetDevices ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> in which each element is associated with a device driver service on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetDevices returns only the device driver services from the local computer. To retrieve the non-device driver services or services that are not drivers, call the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_GetServices_\" data-linktype=\"relative-path\">GetServices</a> method. Together, the two methods provide access to all the services on a computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to display the device driver services on the local computer.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#5\">         ServiceController[] scDevices;\n         scDevices = ServiceController.GetDevices();\n\n         int numAdapter = 0,\n             numFileSystem = 0, \n             numKernel = 0, \n             numRecognizer = 0;\n       \n         // Display the list of device driver services.\n         Console.WriteLine(&quot;Device driver services on the local computer:&quot;);\n\n         foreach (ServiceController scTemp in scDevices)\n         {\n            // Display the status and the service name, for example,\n            //   [Running] PCI Bus Driver\n            //             Type = KernelDriver\n\n            Console.WriteLine(&quot; [{0}] {1}&quot;, \n                              scTemp.Status, scTemp.DisplayName);\n            Console.WriteLine(&quot;           Type = {0}&quot;, scTemp.ServiceType); \n\n            // Update counters using the service type bit flags.\n            if ((scTemp.ServiceType &amp; ServiceType.Adapter) != 0)\n            {\n               numAdapter++;\n            } \n            if ((scTemp.ServiceType &amp; ServiceType.FileSystemDriver) != 0)\n            {\n               numFileSystem++;\n            }  \n            if ((scTemp.ServiceType &amp; ServiceType.KernelDriver) != 0)\n            {\n               numKernel++;\n            } \n            if ((scTemp.ServiceType &amp; ServiceType.RecognizerDriver) != 0)\n            {\n               numRecognizer++;\n            }\n\n         }\n\n         Console.WriteLine();\n         Console.WriteLine(&quot;Total of {0} device driver services&quot;, scDevices.Length);\n         Console.WriteLine(&quot;  {0} are adapter drivers&quot;, numAdapter);\n         Console.WriteLine(&quot;  {0} are file system drivers&quot;, numFileSystem);\n         Console.WriteLine(&quot;  {0} are kernel drivers&quot;, numKernel);\n         Console.WriteLine(&quot;  {0} are file system recognizer drivers&quot;, numRecognizer);\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#5\">         array&lt;ServiceController^&gt;^scDevices = ServiceController::GetDevices();\n         if ( scDevices-&gt;Length )\n         {\n            int numAdapter = 0,numFileSystem = 0,numKernel = 0,numRecognizer = 0;\n\n            // Display the list of device driver services.\n            Console::WriteLine(  &quot;Device driver services on the local computer:&quot; );\n\n            for each (ServiceController^ scTemp in scDevices)\n            {\n               // Display the status and the service name, for example,\n               //   [Running] PCI Bus Driver\n               //             Type = KernelDriver\n               Console::WriteLine(  &quot; [{0}] {1}&quot;, scTemp-&gt;Status, scTemp-&gt;DisplayName );\n               Console::WriteLine(  &quot;           Type = {0}&quot;, scTemp-&gt;ServiceType );\n\n               // Update counters using the service type bit flags.\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::Adapter) != (ServiceType)0 )\n               {\n                  numAdapter++;\n               }\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::FileSystemDriver) != (ServiceType)0 )\n               {\n                  numFileSystem++;\n               }\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::KernelDriver) != (ServiceType)0 )\n               {\n                  numKernel++;\n               }\n               if ( (scTemp-&gt;ServiceType &amp; ServiceType::RecognizerDriver) != (ServiceType)0 )\n               {\n                  numRecognizer++;\n               }\n            }\n            Console::WriteLine();\n            Console::WriteLine(  &quot;Total of {0} device driver services&quot;, scDevices-&gt;Length.ToString() );\n            Console::WriteLine(  &quot;  {0} are adapter drivers&quot;, numAdapter.ToString() );\n            Console::WriteLine(  &quot;  {0} are file system drivers&quot;, numFileSystem.ToString() );\n            Console::WriteLine(  &quot;  {0} are kernel drivers&quot;, numKernel.ToString() );\n            Console::WriteLine(  &quot;  {0} are file system recognizer drivers&quot;, numRecognizer.ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#5\">\n         Dim scDevices() As ServiceController\n         scDevices = ServiceController.GetDevices()\n\n         Dim numAdapter As Integer\n         Dim numFileSystem As Integer\n         Dim numKernel As Integer\n         Dim numRecognizer As Integer\n         \n         &#39; Display the list of device driver services.\n         Console.WriteLine(&quot;Device driver services on the local computer:&quot;)\n         \n         Dim scTemp As ServiceController\n         For Each scTemp In  scDevices\n            &#39; Display the status and the service name, for example,\n            &#39;   [Running] PCI Bus Driver\n            &#39;             Type = KernelDriver\n\n            Console.WriteLine(&quot; [{0}] {1}&quot;, scTemp.Status, scTemp.DisplayName)\n            Console.WriteLine(&quot;           Type = {0}&quot;, scTemp.ServiceType)\n\n            &#39; Update counters using the service type bit flags.\n            If (scTemp.ServiceType And ServiceType.Adapter) &lt;&gt; 0 Then\n               numAdapter = numAdapter + 1\n            End If\n            If (scTemp.ServiceType And ServiceType.FileSystemDriver) &lt;&gt; 0 Then\n               numFileSystem = numFileSystem + 1\n            End If\n            If (scTemp.ServiceType And ServiceType.KernelDriver) &lt;&gt; 0 Then\n               numKernel = numKernel + 1\n            End If\n            If (scTemp.ServiceType And ServiceType.RecognizerDriver) &lt;&gt; 0 Then\n               numRecognizer = numRecognizer + 1\n            End If\n\n         Next scTemp\n\n         Console.WriteLine()\n         Console.WriteLine(&quot;Total of {0} device driver services&quot;, scDevices.Length)\n         Console.WriteLine(&quot;  {0} are adapter drivers&quot;, numAdapter)\n         Console.WriteLine(&quot;  {0} are file system drivers&quot;, numFileSystem)\n         Console.WriteLine(&quot;  {0} are kernel drivers&quot;, numKernel)\n         Console.WriteLine(&quot;  {0} are file system recognizer drivers&quot;, numRecognizer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_GetDevices_System_String_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_GetDevices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDevices(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the device driver services on the specified computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.ServiceProcess.ServiceController[] GetDevices (string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer from which to retrieve the device driver services.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> in which each element is associated with a device driver service on the specified computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>machineName</code> parameter has invalid syntax.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_GetDevices_\" data-linktype=\"relative-path\">GetDevices</a> returns only the device driver services from the specified computer. To retrieve the non-device driver services or services that are not drivers, call the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_GetServices_\" data-linktype=\"relative-path\">GetServices</a> method. Together, the two methods provide access to all the services on a computer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_GetServices\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_GetServices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetServices()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves all the services on the local computer, except for the device driver services.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.ServiceProcess.ServiceController[] GetServices ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> in which each element is associated with a service on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetServices returns only the non-device driver services and the services that are not drivers from the local computer. To retrieve device driver services, call the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_GetDevices_\" data-linktype=\"relative-path\">GetDevices</a> method. Together, the two methods provide access to all the services on a computer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to display the services that are running on the local computer.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#6\">         ServiceController[] scServices;\n         scServices = ServiceController.GetServices();\n\n         // Display the list of services currently running on this computer.\n\n         Console.WriteLine(&quot;Services running on the local computer:&quot;);\n         foreach (ServiceController scTemp in scServices)\n         {\n            if (scTemp.Status == ServiceControllerStatus.Running)\n            {\n               // Write the service name and the display name\n               // for each running service.\n               Console.WriteLine();\n               Console.WriteLine(&quot;  Service :        {0}&quot;, scTemp.ServiceName);\n               Console.WriteLine(&quot;    Display name:    {0}&quot;, scTemp.DisplayName);\n\n               // Query WMI for additional information about this service.\n               // Display the start name (LocalSytem, etc) and the service\n               // description.\n               ManagementObject wmiService;\n               wmiService = new ManagementObject(&quot;Win32_Service.Name=&#39;&quot; + scTemp.ServiceName + &quot;&#39;&quot;);\n               wmiService.Get();\n               Console.WriteLine(&quot;    Start name:      {0}&quot;, wmiService[&quot;StartName&quot;]);\n               Console.WriteLine(&quot;    Description:     {0}&quot;, wmiService[&quot;Description&quot;]);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#6\">         array&lt;ServiceController^&gt;^scServices = ServiceController::GetServices();\n\n         // Display the list of services currently running on this computer.\n         Console::WriteLine(  &quot;Services running on the local computer:&quot; );\n         for each (ServiceController^ scTemp in scServices)\n         {\n            if ( scTemp-&gt;Status == ServiceControllerStatus::Running )\n            {\n               // Write the service name and the display name\n               // for each running service.\n               Console::WriteLine();\n               Console::WriteLine(  &quot;  Service :        {0}&quot;, scTemp-&gt;ServiceName );\n               Console::WriteLine(  &quot;    Display name:    {0}&quot;, scTemp-&gt;DisplayName );\n\n               // Query WMI for additional information about this service.\n               // Display the start name (LocalSytem, etc) and the service\n               // description.\n               ManagementObject^ wmiService;\n               String^ objPath;\n               objPath = String::Format( &quot;Win32_Service.Name=&#39;{0}&#39;&quot;, scTemp-&gt;ServiceName );\n               wmiService = gcnew ManagementObject( objPath );\n               if ( wmiService )\n               {\n                  wmiService-&gt;Get();\n                  Object^ objStartName = wmiService[&quot;StartName&quot;];\n                  Object^ objDescription = wmiService[&quot;Description&quot;];\n                  if ( objStartName )\n                  {\n                     Console::WriteLine(  &quot;    Start name:      {0}&quot;, objStartName-&gt;ToString() );\n                  }\n                  if ( objDescription )\n                  {\n                     Console::WriteLine(  &quot;    Description:     {0}&quot;, objDescription-&gt;ToString() );\n                  }\n               }\n            }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#6\">\n         Dim scServices() As ServiceController\n         scServices = ServiceController.GetServices()\n       \n         &#39; Display the list of services currently running on this computer.\n         Console.WriteLine(&quot;Services running on the local computer:&quot;)\n\n         Dim scTemp As ServiceController\n         For Each scTemp In  scServices\n\n            If scTemp.Status = ServiceControllerStatus.Running Then\n               &#39; Write the service name and the display name\n               &#39; for each running service.\n               Console.WriteLine()\n               Console.WriteLine(&quot;  Service :        {0}&quot;, scTemp.ServiceName)\n               Console.WriteLine(&quot;    Display name:    {0}&quot;, scTemp.DisplayName)\n               \n               &#39; Query WMI for additional information about this service.\n               &#39; Display the start name (LocalSytem, etc) and the service\n               &#39; description.\n               Dim wmiService As ManagementObject\n               wmiService = New ManagementObject(&quot;Win32_Service.Name=&#39;&quot; + scTemp.ServiceName + &quot;&#39;&quot;)\n               wmiService.Get()\n               Console.WriteLine(&quot;    Start name:      {0}&quot;, wmiService(&quot;StartName&quot;))\n               Console.WriteLine(&quot;    Description:     {0}&quot;, wmiService(&quot;Description&quot;))\n            End If\n\n         Next scTemp\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_GetServices_System_String_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_GetServices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetServices(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves all the services on the specified computer, except for the device driver services.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.ServiceProcess.ServiceController[] GetServices (string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer from which to retrieve the services.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> in which each element is associated with a service on the specified computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>machineName</code> parameter has invalid syntax.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_GetServices_\" data-linktype=\"relative-path\">GetServices</a> returns only the non-device driver services and the services that are not drivers from the specified computer. To retrieve device driver services, call the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_GetDevices_\" data-linktype=\"relative-path\">GetDevices</a> method. Together, the two methods provide access to all the services on a computer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Pause\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Pause_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pause()</div>        \r\n          </div>\r\n    \r\n            <p>Suspends a service&#39;s operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Pause ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot call <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_Continue_\" data-linktype=\"relative-path\">Continue</a> for the service until the service controller status is <code>Paused</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Pause method to pause a service. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#4\">                    sc.Pause();\n                    while (sc.Status != ServiceControllerStatus.Paused)\n                    {\n                        Thread.Sleep(1000);\n                        sc.Refresh();\n                    }\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#4\">                sc.Pause()\n                While sc.Status &lt;&gt; ServiceControllerStatus.Paused\n                    Thread.Sleep(1000)\n                    sc.Refresh()\n                End While\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Refresh\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh()</div>        \r\n          </div>\r\n    \r\n            <p>Refreshes property values by resetting the properties to their current values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Refresh ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Refresh method causes the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_ServicesDependedOn_\" data-linktype=\"relative-path\">ServicesDependedOn</a>, <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_DependentServices_\" data-linktype=\"relative-path\">DependentServices</a>, and <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_Status_\" data-linktype=\"relative-path\">Status</a> properties to be reset to their current values when they are next referenced.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the Refresh method to obtain the status of a service. The code instructs a service to pause, and then waits for the status to reflect the change. This example is part of a larger example that is provided for the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceControllerClass#4\">                    sc.Pause();\n                    while (sc.Status != ServiceControllerStatus.Paused)\n                    {\n                        Thread.Sleep(1000);\n                        sc.Refresh();\n                    }\n                    Console.WriteLine(&quot;Status = &quot; + sc.Status);\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceControllerClass#4\">                sc.Pause()\n                While sc.Status &lt;&gt; ServiceControllerStatus.Paused\n                    Thread.Sleep(1000)\n                    sc.Refresh()\n                End While\n                Console.WriteLine(&quot;Status = &quot; + sc.Status.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Start\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Start_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Start()</div>        \r\n          </div>\r\n    \r\n            <p>Starts the service, passing no arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Start ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot call <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_Stop_\" data-linktype=\"relative-path\">Stop</a> for the service until the service controller status is <code>Running</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to check whether the Alerter service is stopped. If the service is stopped, the example starts the service and waits until the service status is set to <a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#1\">\n         // Check whether the Alerter service is started.\n\n         ServiceController sc  = new ServiceController();\n         sc.ServiceName = &quot;Alerter&quot;;\n         Console.WriteLine(&quot;The Alerter service status is currently set to {0}&quot;, \n                            sc.Status.ToString());\n\n         if (sc.Status == ServiceControllerStatus.Stopped)\n         {\n            // Start the service if the current status is stopped.\n\n            Console.WriteLine(&quot;Starting the Alerter service...&quot;);\n            try \n            {\n               // Start the service, and wait until its status is &quot;Running&quot;.\n               sc.Start();\n               sc.WaitForStatus(ServiceControllerStatus.Running);\n            \n               // Display the current service status.\n               Console.WriteLine(&quot;The Alerter service status is now set to {0}.&quot;, \n                                  sc.Status.ToString());\n            }\n            catch (InvalidOperationException)\n            {\n               Console.WriteLine(&quot;Could not start the Alerter service.&quot;);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#1\">         // Check whether the Alerter service is started.\n         ServiceController^ sc = gcnew ServiceController;\n         if ( sc )\n         {\n            sc-&gt;ServiceName =  &quot;Alerter&quot;;\n            Console::WriteLine(  &quot;The Alerter service status is currently set to {0}&quot;, sc-&gt;Status );\n            if ( sc-&gt;Status == (ServiceControllerStatus::Stopped) )\n            {\n               // Start the service if the current status is stopped.\n               Console::WriteLine(  &quot;Starting the Alerter service...&quot; );\n               try\n               {\n                  // Start the service, and wait until its status is &quot;Running&quot;.\n                  sc-&gt;Start();\n                  sc-&gt;WaitForStatus( ServiceControllerStatus::Running );\n                  \n                  // Display the current service status.\n                  Console::WriteLine(  &quot;The Alerter service status is now set to {0}.&quot;, sc-&gt;Status );\n               }\n               catch ( InvalidOperationException^ e ) \n               {\n                  Console::WriteLine(  &quot;Could not start the Alerter service.&quot; );\n               }\n            }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#1\">\n         &#39; Check whether the Alerter service is started.\n\n         Dim sc As New ServiceController()\n         sc.ServiceName = &quot;Alerter&quot;\n         Console.WriteLine(&quot;The Alerter service status is currently set to {0}&quot;, sc.Status)\n         \n         If sc.Status = ServiceControllerStatus.Stopped Then\n            &#39; Start the service if the current status is stopped.\n            Console.WriteLine(&quot;Starting the Alerter service...&quot;)\n\n            Try\n               &#39; Start the service, and wait until its status is &quot;Running&quot;.\n               sc.Start()\n               sc.WaitForStatus(ServiceControllerStatus.Running)\n               \n               &#39; Display the current service status.\n               Console.WriteLine(&quot;The Alerter service status is now set to {0}.&quot;, sc.Status)\n            Catch \n               Console.WriteLine(&quot;Could not start the Alerter service.&quot;)\n            End Try\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Start_System_String___\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Start_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Start(String[])</div>        \r\n          </div>\r\n    \r\n            <p>Starts a service, passing the specified arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Start (string[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of arguments to pass to the service when it starts.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service cannot be started.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>args</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> A member of the array is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot call <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_Stop_\" data-linktype=\"relative-path\">Stop</a> for the service until the service controller status is <code>Running</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_Stop\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_Stop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Stop()</div>        \r\n          </div>\r\n    \r\n            <p>Stops this service and any services that are dependent on this service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Stop ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The service was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If any services depend on this service for their operation, they will be stopped before this service is stopped. The <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_DependentServices_\" data-linktype=\"relative-path\">DependentServices</a> property contains the set of services that depend on this one.  </p>\n<p> If you stop a service that this service depends on, call the Stop method on this service within the Stop method of the parent service. The <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_ServicesDependedOn_\" data-linktype=\"relative-path\">ServicesDependedOn</a> property contains the services that this service depends on.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to check the current status of the Telnet service. If the service is stopped, the example starts the service. If the service is running, the example stops the service.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#2\">\n         // Toggle the Telnet service - \n         // If it is started (running, paused, etc), stop the service.\n         // If it is stopped, start the service.\n         ServiceController sc = new ServiceController(&quot;Telnet&quot;);\n         Console.WriteLine(&quot;The Telnet service status is currently set to {0}&quot;, \n                           sc.Status.ToString());\n\n         if  ((sc.Status.Equals(ServiceControllerStatus.Stopped)) ||\n              (sc.Status.Equals(ServiceControllerStatus.StopPending)))\n         {\n            // Start the service if the current status is stopped.\n\n            Console.WriteLine(&quot;Starting the Telnet service...&quot;);\n            sc.Start();\n         }  \n         else\n         {\n            // Stop the service if its status is not set to &quot;Stopped&quot;.\n\n            Console.WriteLine(&quot;Stopping the Telnet service...&quot;);\n            sc.Stop();\n         }  \n\n         // Refresh and display the current service status.\n         sc.Refresh();\n         Console.WriteLine(&quot;The Telnet service status is now set to {0}.&quot;, \n                            sc.Status.ToString());\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#2\">         // Toggle the Telnet service - \n         // If it is started (running, paused, etc), stop the service.\n         // If it is stopped, start the service.\n         ServiceController^ sc = gcnew ServiceController(  &quot;Telnet&quot; );\n         if ( sc )\n         {\n            Console::WriteLine(  &quot;The Telnet service status is currently set to {0}&quot;, sc-&gt;Status );\n            if ( (sc-&gt;Status == (ServiceControllerStatus::Stopped) ) || (sc-&gt;Status == (ServiceControllerStatus::StopPending) ) )\n            {\n               // Start the service if the current status is stopped.\n               Console::WriteLine(  &quot;Starting the Telnet service...&quot; );\n               sc-&gt;Start();\n            }\n            else\n            {\n               // Stop the service if its status is not set to &quot;Stopped&quot;.\n               Console::WriteLine(  &quot;Stopping the Telnet service...&quot; );\n               sc-&gt;Stop();\n            }\n\n            // Refresh and display the current service status.\n            sc-&gt;Refresh();\n            Console::WriteLine(  &quot;The Telnet service status is now set to {0}.&quot;, sc-&gt;Status );\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#2\">\n         &#39; Toggle the Telnet service - \n         &#39; If it is started (running, paused, etc), stop the service.\n         &#39; If it is stopped, start the service.\n         Dim sc As New ServiceController(&quot;Telnet&quot;)\n         Console.WriteLine(&quot;The Telnet service status is currently set to {0}&quot;, sc.Status)\n         \n         If sc.Status.Equals(ServiceControllerStatus.Stopped) Or sc.Status.Equals(ServiceControllerStatus.StopPending) Then\n            &#39; Start the service if the current status is stopped.\n            Console.WriteLine(&quot;Starting the Telnet service...&quot;)\n            sc.Start()\n         Else\n            &#39; Stop the service if its status is not set to &quot;Stopped&quot;.\n            Console.WriteLine(&quot;Stopping the Telnet service...&quot;)\n            sc.Stop()\n         End If\n         \n         &#39; Refresh and display the current service status.\n         sc.Refresh()\n         Console.WriteLine(&quot;The Telnet service status is now set to {0}.&quot;, sc.Status)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_WaitForStatus_System_ServiceProcess_ServiceControllerStatus_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_WaitForStatus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitForStatus(ServiceControllerStatus)</div>        \r\n          </div>\r\n    \r\n            <p>Infinitely waits for the service to reach the specified status.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>desiredStatus</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The status to wait for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>desiredStatus</code> parameter is not any of the values defined in the <a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use WaitForStatus to suspend an application&#39;s processing until the service has reached the required status.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_WaitForStatus_\" data-linktype=\"relative-path\">WaitForStatus</a> method waits approximately 250 milliseconds between each status check.  <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_WaitForStatus_\" data-linktype=\"relative-path\">WaitForStatus</a> cannot detect the case of the observed service changing to the <code>desiredStatus</code> and then immediately to another status in that interval.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.serviceprocess.servicecontroller\" data-linktype=\"relative-path\">ServiceController</a> class to check whether the Alerter service is stopped. If the service is stopped, the example starts the service and waits until the service status is set to <a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"ServiceController#1\">\n         // Check whether the Alerter service is started.\n\n         ServiceController sc  = new ServiceController();\n         sc.ServiceName = &quot;Alerter&quot;;\n         Console.WriteLine(&quot;The Alerter service status is currently set to {0}&quot;, \n                            sc.Status.ToString());\n\n         if (sc.Status == ServiceControllerStatus.Stopped)\n         {\n            // Start the service if the current status is stopped.\n\n            Console.WriteLine(&quot;Starting the Alerter service...&quot;);\n            try \n            {\n               // Start the service, and wait until its status is &quot;Running&quot;.\n               sc.Start();\n               sc.WaitForStatus(ServiceControllerStatus.Running);\n            \n               // Display the current service status.\n               Console.WriteLine(&quot;The Alerter service status is now set to {0}.&quot;, \n                                  sc.Status.ToString());\n            }\n            catch (InvalidOperationException)\n            {\n               Console.WriteLine(&quot;Could not start the Alerter service.&quot;);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"ServiceController#1\">         // Check whether the Alerter service is started.\n         ServiceController^ sc = gcnew ServiceController;\n         if ( sc )\n         {\n            sc-&gt;ServiceName =  &quot;Alerter&quot;;\n            Console::WriteLine(  &quot;The Alerter service status is currently set to {0}&quot;, sc-&gt;Status );\n            if ( sc-&gt;Status == (ServiceControllerStatus::Stopped) )\n            {\n               // Start the service if the current status is stopped.\n               Console::WriteLine(  &quot;Starting the Alerter service...&quot; );\n               try\n               {\n                  // Start the service, and wait until its status is &quot;Running&quot;.\n                  sc-&gt;Start();\n                  sc-&gt;WaitForStatus( ServiceControllerStatus::Running );\n                  \n                  // Display the current service status.\n                  Console::WriteLine(  &quot;The Alerter service status is now set to {0}.&quot;, sc-&gt;Status );\n               }\n               catch ( InvalidOperationException^ e ) \n               {\n                  Console::WriteLine(  &quot;Could not start the Alerter service.&quot; );\n               }\n            }\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"ServiceController#1\">\n         &#39; Check whether the Alerter service is started.\n\n         Dim sc As New ServiceController()\n         sc.ServiceName = &quot;Alerter&quot;\n         Console.WriteLine(&quot;The Alerter service status is currently set to {0}&quot;, sc.Status)\n         \n         If sc.Status = ServiceControllerStatus.Stopped Then\n            &#39; Start the service if the current status is stopped.\n            Console.WriteLine(&quot;Starting the Alerter service...&quot;)\n\n            Try\n               &#39; Start the service, and wait until its status is &quot;Running&quot;.\n               sc.Start()\n               sc.WaitForStatus(ServiceControllerStatus.Running)\n               \n               &#39; Display the current service status.\n               Console.WriteLine(&quot;The Alerter service status is now set to {0}.&quot;, sc.Status)\n            Catch \n               Console.WriteLine(&quot;Could not start the Alerter service.&quot;)\n            End Try\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceProcess_ServiceController_WaitForStatus_System_ServiceProcess_ServiceControllerStatus_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_ServiceProcess_ServiceController_WaitForStatus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitForStatus(ServiceControllerStatus,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Waits for the service to reach the specified status or for the specified time-out to expire.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus, TimeSpan timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>desiredStatus</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The status to wait for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object specifying the amount of time to wait for the service to reach the specified status.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>desiredStatus</code> parameter is not any of the values defined in the <a class=\"xref\" href=\"system.serviceprocess.servicecontrollerstatus\" data-linktype=\"relative-path\">ServiceControllerStatus</a> enumeration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The value specified for the <code>timeout</code> parameter expires.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_WaitForStatus_\" data-linktype=\"relative-path\">WaitForStatus</a> to suspend an application&#39;s processing until the service has reached the required status.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_WaitForStatus_\" data-linktype=\"relative-path\">WaitForStatus</a> method waits approximately 250 milliseconds between each status check.  <a class=\"xref\" href=\"system.serviceprocess.servicecontroller#System_ServiceProcess_ServiceController_WaitForStatus_\" data-linktype=\"relative-path\">WaitForStatus</a> cannot detect the case of the observed service changing to the <code>desiredStatus</code> and then immediately to another status in that interval.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceProcess.ServiceController.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceProcess.ServiceController.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.CanPauseAndContinue\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.CanShutdown\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.CanStop\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Close\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Continue\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.DependentServices\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.DisplayName\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Dispose\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.ExecuteCommand\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.GetDevices\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.GetServices\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.MachineName\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Pause\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Refresh\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.ServiceHandle\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.ServiceName\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.ServicesDependedOn\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.ServiceType\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Start\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.StartType\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Status\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.Stop\">\r\n<meta name=\"APIName\" content=\"System.ServiceProcess.ServiceController.WaitForStatus\">\r\n<meta name=\"APILocation\" content=\"System.ServiceProcess.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"976bf693-c1c5-d9ea-21ea-302d5c0dd107\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.ServiceProcess\\ServiceController.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceProcess/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceProcess.ServiceController\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceProcess.ServiceController.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceProcess.ServiceController.yml","open_to_public_contributors":true,"api_name":["System.ServiceProcess.ServiceController","System.ServiceProcess.ServiceController..ctor","System.ServiceProcess.ServiceController.CanPauseAndContinue","System.ServiceProcess.ServiceController.CanShutdown","System.ServiceProcess.ServiceController.CanStop","System.ServiceProcess.ServiceController.Close","System.ServiceProcess.ServiceController.Continue","System.ServiceProcess.ServiceController.DependentServices","System.ServiceProcess.ServiceController.DisplayName","System.ServiceProcess.ServiceController.Dispose","System.ServiceProcess.ServiceController.ExecuteCommand","System.ServiceProcess.ServiceController.GetDevices","System.ServiceProcess.ServiceController.GetServices","System.ServiceProcess.ServiceController.MachineName","System.ServiceProcess.ServiceController.Pause","System.ServiceProcess.ServiceController.Refresh","System.ServiceProcess.ServiceController.ServiceHandle","System.ServiceProcess.ServiceController.ServiceName","System.ServiceProcess.ServiceController.ServicesDependedOn","System.ServiceProcess.ServiceController.ServiceType","System.ServiceProcess.ServiceController.Start","System.ServiceProcess.ServiceController.StartType","System.ServiceProcess.ServiceController.Status","System.ServiceProcess.ServiceController.Stop","System.ServiceProcess.ServiceController.WaitForStatus"],"api_location":["System.ServiceProcess.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceProcess.ServiceController","System::ServiceProcess::ServiceController","System.ServiceProcess.ServiceController.#ctor","System::ServiceProcess::ServiceController::#ctor","System.ServiceProcess.ServiceController.CanPauseAndContinue","System::ServiceProcess::ServiceController::CanPauseAndContinue","System.ServiceProcess.ServiceController.CanShutdown","System::ServiceProcess::ServiceController::CanShutdown","System.ServiceProcess.ServiceController.CanStop","System::ServiceProcess::ServiceController::CanStop","System.ServiceProcess.ServiceController.Close","System::ServiceProcess::ServiceController::Close","System.ServiceProcess.ServiceController.Continue","System::ServiceProcess::ServiceController::Continue","System.ServiceProcess.ServiceController.DependentServices","System::ServiceProcess::ServiceController::DependentServices","System.ServiceProcess.ServiceController.DisplayName","System::ServiceProcess::ServiceController::DisplayName","System.ServiceProcess.ServiceController.Dispose","System::ServiceProcess::ServiceController::Dispose","System.ServiceProcess.ServiceController.ExecuteCommand","System::ServiceProcess::ServiceController::ExecuteCommand","System.ServiceProcess.ServiceController.GetDevices","System::ServiceProcess::ServiceController::GetDevices","System.ServiceProcess.ServiceController.GetServices","System::ServiceProcess::ServiceController::GetServices","System.ServiceProcess.ServiceController.MachineName","System::ServiceProcess::ServiceController::MachineName","System.ServiceProcess.ServiceController.Pause","System::ServiceProcess::ServiceController::Pause","System.ServiceProcess.ServiceController.Refresh","System::ServiceProcess::ServiceController::Refresh","System.ServiceProcess.ServiceController.ServiceHandle","System::ServiceProcess::ServiceController::ServiceHandle","System.ServiceProcess.ServiceController.ServiceName","System::ServiceProcess::ServiceController::ServiceName","System.ServiceProcess.ServiceController.ServicesDependedOn","System::ServiceProcess::ServiceController::ServicesDependedOn","System.ServiceProcess.ServiceController.ServiceType","System::ServiceProcess::ServiceController::ServiceType","System.ServiceProcess.ServiceController.Start","System::ServiceProcess::ServiceController::Start","System.ServiceProcess.ServiceController.StartType","System::ServiceProcess::ServiceController::StartType","System.ServiceProcess.ServiceController.Status","System::ServiceProcess::ServiceController::Status","System.ServiceProcess.ServiceController.Stop","System::ServiceProcess::ServiceController::Stop","System.ServiceProcess.ServiceController.WaitForStatus","System::ServiceProcess::ServiceController::WaitForStatus"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"976bf693-c1c5-d9ea-21ea-302d5c0dd107","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.ServiceProcess\\ServiceController.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceProcess/ServiceController.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ServiceController class | Microsoft Docs","_op_ogTitle":"ServiceController class","description":"Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.\n","toc_asset_id":"_splitted/System.ServiceProcess/toc.json","toc_rel":"_splitted/System.ServiceProcess/toc.json","source_url":"","ms.assetid":"System.ServiceProcess.ServiceController","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.serviceprocess.servicecontroller","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.serviceprocess.servicecontroller","fileRelativePath":"System.ServiceProcess.ServiceController.html"},"themesRelativePathToOutputRoot":"_themes/"}