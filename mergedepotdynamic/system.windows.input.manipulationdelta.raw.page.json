{"content":"    \r\n    <h1 id=\"System_Windows_Input_ManipulationDelta\">\r\n      <span class=\"lang-csharp\">ManipulationDelta</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains transformation data that is accumulated when manipulation events occur.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ManipulationDelta</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ManipulationDelta</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ManipulationDelta class contains information about the changes in the position of a manipulation.  <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> interprets the changes as a <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Translation_\" data-linktype=\"relative-path\">Translation</a>, <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Expansion_\" data-linktype=\"relative-path\">Expansion</a>, or <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Rotation_\" data-linktype=\"relative-path\">Rotation</a>. When the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationDelta\" data-linktype=\"relative-path\">ManipulationDelta</a> event occurs on a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>, use the properties on a ManipulationDelta object to transform the object that should be manipulated.  The <a class=\"xref\" href=\"system.windows.input.manipulationdeltaeventargs\" data-linktype=\"relative-path\">ManipulationDeltaEventArgs</a> class provides two properties of type ManipulationDelta: <a class=\"xref\" href=\"system.windows.input.manipulationdeltaeventargs#System_Windows_Input_ManipulationDeltaEventArgs_DeltaManipulation_\" data-linktype=\"relative-path\">DeltaManipulation</a> and <a class=\"xref\" href=\"system.windows.input.manipulationdeltaeventargs#System_Windows_Input_ManipulationDeltaEventArgs_CumulativeManipulation_\" data-linktype=\"relative-path\">CumulativeManipulation</a>.  </p>\n<p> For more information about manipulations, see the <a href=\"../Topic/Input%20Overview.md\" data-linktype=\"relative-path\">Input Overview</a>.  For an example of an application that responds to manipulations, see <a href=\"../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md\" data-linktype=\"relative-path\">Walkthrough: Creating Your First Touch Application</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ManipulationDelta__ctor_System_Windows_Vector_System_Double_System_Windows_Vector_System_Windows_Vector_\" data-linktype=\"self-bookmark\">ManipulationDelta(Vector,Double,Vector,Vector)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.manipulationdelta\" data-linktype=\"relative-path\">ManipulationDelta</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ManipulationDelta_Expansion\" data-linktype=\"self-bookmark\">Expansion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount the manipulation has resized in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ManipulationDelta_Rotation\" data-linktype=\"self-bookmark\">Rotation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rotation of the manipulation in degrees.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ManipulationDelta_Scale\" data-linktype=\"self-bookmark\">Scale</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount the manipulation has resized as a multiplier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Input_ManipulationDelta_Translation\" data-linktype=\"self-bookmark\">Translation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the linear motion of the manipulation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ManipulationDelta__ctor_System_Windows_Vector_System_Double_System_Windows_Vector_System_Windows_Vector_\">\r\n    \r\n            <a id=\"System_Windows_Input_ManipulationDelta__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ManipulationDelta(Vector,Double,Vector,Vector)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.manipulationdelta\" data-linktype=\"relative-path\">ManipulationDelta</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>translation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The linear motion of the manipulation in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rotation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The rotation of the manipulation in degrees.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scale</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount the manipulation has resized as a multiplier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expansion</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount the manipulation has resized in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ManipulationDelta_Expansion\">\r\n    \r\n            <a id=\"System_Windows_Input_ManipulationDelta_Expansion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Expansion</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount the manipulation has resized in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Vector Expansion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </div>\r\n                  <p>The amount the manipulation has resized in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Scale_\" data-linktype=\"relative-path\">Scale</a> and Expansion properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Expansion property reports the resizing manipulation in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->. The <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Scale_\" data-linktype=\"relative-path\">Scale</a> property reports the value as a multiplier.  If <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Scale_\" data-linktype=\"relative-path\">Scale</a> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Scale_\" data-linktype=\"relative-path\">Scale</a> is 2, the manipulation is interpreted as increasing the size by 100 percent.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ManipulationDelta_Rotation\">\r\n    \r\n            <a id=\"System_Windows_Input_ManipulationDelta_Rotation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rotation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rotation of the manipulation in degrees.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double Rotation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The rotation of the manipulation in degrees.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Rotation property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an event handler for the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationDelta\" data-linktype=\"relative-path\">ManipulationDelta</a> event.  The example applies the <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Translation_\" data-linktype=\"relative-path\">Translation</a>, <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Scale_\" data-linktype=\"relative-path\">Scale</a>, and Rotation properties to move, resize, and rotate a <a class=\"xref\" href=\"system.windows.shapes.rectangle\" data-linktype=\"relative-path\">Rectangle</a>. This example is part of a larger example in <a href=\"../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md\" data-linktype=\"relative-path\">Walkthrough: Creating Your First Touch Application</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"BasicManipulation#ManipulationDelta\">void Window_ManipulationDelta(object sender, ManipulationDeltaEventArgs e)\n{\n    \n    // Get the Rectangle and its RenderTransform matrix.\n    Rectangle rectToMove = e.OriginalSource as Rectangle;\n    Matrix rectsMatrix = ((MatrixTransform)rectToMove.RenderTransform).Matrix;\n\n    // Rotate the Rectangle.\n    rectsMatrix.RotateAt(e.DeltaManipulation.Rotation, \n                         e.ManipulationOrigin.X, \n                         e.ManipulationOrigin.Y);\n\n    // Resize the Rectangle.  Keep it square \n    // so use only the X value of Scale.\n    rectsMatrix.ScaleAt(e.DeltaManipulation.Scale.X, \n                        e.DeltaManipulation.Scale.X, \n                        e.ManipulationOrigin.X,\n                        e.ManipulationOrigin.Y);\n\n    // Move the Rectangle.\n    rectsMatrix.Translate(e.DeltaManipulation.Translation.X,\n                          e.DeltaManipulation.Translation.Y);\n\n    // Apply the changes to the Rectangle.\n    rectToMove.RenderTransform = new MatrixTransform(rectsMatrix);\n\n    Rect containingRect =\n        new Rect(((FrameworkElement)e.ManipulationContainer).RenderSize);\n\n    Rect shapeBounds =\n        rectToMove.RenderTransform.TransformBounds(\n            new Rect(rectToMove.RenderSize));\n\n    // Check if the rectangle is completely in the window.\n    // If it is not and intertia is occuring, stop the manipulation.\n    if (e.IsInertial &amp;&amp; !containingRect.Contains(shapeBounds))\n    {\n        e.Complete();\n    }\n\n    \n    e.Handled = true;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BasicManipulation#ManipulationDelta\">Private Sub Window_ManipulationDelta(ByVal sender As Object, ByVal e As ManipulationDeltaEventArgs)\n\n    &#39; Get the Rectangle and its RenderTransform matrix.\n    Dim rectToMove As Rectangle = e.OriginalSource\n    Dim rectTransform As MatrixTransform = rectToMove.RenderTransform\n    Dim rectsMatrix As Matrix = rectTransform.Matrix\n\n\n    &#39; Rotate the shape\n    rectsMatrix.RotateAt(e.DeltaManipulation.Rotation,\n                         e.ManipulationOrigin.X,\n                         e.ManipulationOrigin.Y)\n\n    &#39; Resize the Rectangle. Keep it square \n    &#39; so use only the X value of Scale.\n    rectsMatrix.ScaleAt(e.DeltaManipulation.Scale.X,\n                        e.DeltaManipulation.Scale.X,\n                        e.ManipulationOrigin.X,\n                        e.ManipulationOrigin.Y)\n\n    &#39;move the center\n    rectsMatrix.Translate(e.DeltaManipulation.Translation.X,\n                          e.DeltaManipulation.Translation.Y)\n\n    &#39; Apply the changes to the Rectangle.\n    rectTransform = New MatrixTransform(rectsMatrix)\n    rectToMove.RenderTransform = rectTransform\n\n    Dim container As FrameworkElement = e.ManipulationContainer\n    Dim containingRect As New Rect(container.RenderSize)\n\n    Dim shapeBounds As Rect = rectTransform.TransformBounds(\n                                New Rect(rectToMove.RenderSize))\n\n    &#39; Check if the rectangle is completely in the window.\n    &#39; If it is not and intertia is occuring, stop the manipulation.\n    If e.IsInertial AndAlso Not containingRect.Contains(shapeBounds) Then\n        e.Complete()\n    End If\n\n    e.Handled = True\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ManipulationDelta_Scale\">\r\n    \r\n            <a id=\"System_Windows_Input_ManipulationDelta_Scale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scale</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount the manipulation has resized as a multiplier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Vector Scale { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </div>\r\n                  <p>The amount the manipulation has resized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Scale and <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Expansion_\" data-linktype=\"relative-path\">Expansion</a> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Scale property reports the value as a multiplier.  If Scale is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If Scale is 2, the manipulation is interpreted as increasing the size by 100 percent. The <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Expansion_\" data-linktype=\"relative-path\">Expansion</a> property reports the resizing manipulation in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an event handler for the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationDelta\" data-linktype=\"relative-path\">ManipulationDelta</a> event.  The example applies the <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Translation_\" data-linktype=\"relative-path\">Translation</a>, Scale, and <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Rotation_\" data-linktype=\"relative-path\">Rotation</a> properties to move, resize, and rotate a <a class=\"xref\" href=\"system.windows.shapes.rectangle\" data-linktype=\"relative-path\">Rectangle</a>. This example is part of a larger example in <a href=\"../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md\" data-linktype=\"relative-path\">Walkthrough: Creating Your First Touch Application</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"BasicManipulation#ManipulationDelta\">void Window_ManipulationDelta(object sender, ManipulationDeltaEventArgs e)\n{\n    \n    // Get the Rectangle and its RenderTransform matrix.\n    Rectangle rectToMove = e.OriginalSource as Rectangle;\n    Matrix rectsMatrix = ((MatrixTransform)rectToMove.RenderTransform).Matrix;\n\n    // Rotate the Rectangle.\n    rectsMatrix.RotateAt(e.DeltaManipulation.Rotation, \n                         e.ManipulationOrigin.X, \n                         e.ManipulationOrigin.Y);\n\n    // Resize the Rectangle.  Keep it square \n    // so use only the X value of Scale.\n    rectsMatrix.ScaleAt(e.DeltaManipulation.Scale.X, \n                        e.DeltaManipulation.Scale.X, \n                        e.ManipulationOrigin.X,\n                        e.ManipulationOrigin.Y);\n\n    // Move the Rectangle.\n    rectsMatrix.Translate(e.DeltaManipulation.Translation.X,\n                          e.DeltaManipulation.Translation.Y);\n\n    // Apply the changes to the Rectangle.\n    rectToMove.RenderTransform = new MatrixTransform(rectsMatrix);\n\n    Rect containingRect =\n        new Rect(((FrameworkElement)e.ManipulationContainer).RenderSize);\n\n    Rect shapeBounds =\n        rectToMove.RenderTransform.TransformBounds(\n            new Rect(rectToMove.RenderSize));\n\n    // Check if the rectangle is completely in the window.\n    // If it is not and intertia is occuring, stop the manipulation.\n    if (e.IsInertial &amp;&amp; !containingRect.Contains(shapeBounds))\n    {\n        e.Complete();\n    }\n\n    \n    e.Handled = true;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BasicManipulation#ManipulationDelta\">Private Sub Window_ManipulationDelta(ByVal sender As Object, ByVal e As ManipulationDeltaEventArgs)\n\n    &#39; Get the Rectangle and its RenderTransform matrix.\n    Dim rectToMove As Rectangle = e.OriginalSource\n    Dim rectTransform As MatrixTransform = rectToMove.RenderTransform\n    Dim rectsMatrix As Matrix = rectTransform.Matrix\n\n\n    &#39; Rotate the shape\n    rectsMatrix.RotateAt(e.DeltaManipulation.Rotation,\n                         e.ManipulationOrigin.X,\n                         e.ManipulationOrigin.Y)\n\n    &#39; Resize the Rectangle. Keep it square \n    &#39; so use only the X value of Scale.\n    rectsMatrix.ScaleAt(e.DeltaManipulation.Scale.X,\n                        e.DeltaManipulation.Scale.X,\n                        e.ManipulationOrigin.X,\n                        e.ManipulationOrigin.Y)\n\n    &#39;move the center\n    rectsMatrix.Translate(e.DeltaManipulation.Translation.X,\n                          e.DeltaManipulation.Translation.Y)\n\n    &#39; Apply the changes to the Rectangle.\n    rectTransform = New MatrixTransform(rectsMatrix)\n    rectToMove.RenderTransform = rectTransform\n\n    Dim container As FrameworkElement = e.ManipulationContainer\n    Dim containingRect As New Rect(container.RenderSize)\n\n    Dim shapeBounds As Rect = rectTransform.TransformBounds(\n                                New Rect(rectToMove.RenderSize))\n\n    &#39; Check if the rectangle is completely in the window.\n    &#39; If it is not and intertia is occuring, stop the manipulation.\n    If e.IsInertial AndAlso Not containingRect.Contains(shapeBounds) Then\n        e.Complete()\n    End If\n\n    e.Handled = True\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Input_ManipulationDelta_Translation\">\r\n    \r\n            <a id=\"System_Windows_Input_ManipulationDelta_Translation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the linear motion of the manipulation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Vector Translation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </div>\r\n                  <p>The linear motion of the manipulation in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-dipixelsharpplural-md.md&quot; -->device-independent units (1/96th inch per unit)<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Translation property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an event handler for the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationDelta\" data-linktype=\"relative-path\">ManipulationDelta</a> event.  The example applies the Translation, <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Scale_\" data-linktype=\"relative-path\">Scale</a>, and <a class=\"xref\" href=\"system.windows.input.manipulationdelta#System_Windows_Input_ManipulationDelta_Rotation_\" data-linktype=\"relative-path\">Rotation</a> properties to move, resize, and rotate a <a class=\"xref\" href=\"system.windows.shapes.rectangle\" data-linktype=\"relative-path\">Rectangle</a>. This example is part of a larger example in <a href=\"../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md\" data-linktype=\"relative-path\">Walkthrough: Creating Your First Touch Application</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"BasicManipulation#ManipulationDelta\">void Window_ManipulationDelta(object sender, ManipulationDeltaEventArgs e)\n{\n    \n    // Get the Rectangle and its RenderTransform matrix.\n    Rectangle rectToMove = e.OriginalSource as Rectangle;\n    Matrix rectsMatrix = ((MatrixTransform)rectToMove.RenderTransform).Matrix;\n\n    // Rotate the Rectangle.\n    rectsMatrix.RotateAt(e.DeltaManipulation.Rotation, \n                         e.ManipulationOrigin.X, \n                         e.ManipulationOrigin.Y);\n\n    // Resize the Rectangle.  Keep it square \n    // so use only the X value of Scale.\n    rectsMatrix.ScaleAt(e.DeltaManipulation.Scale.X, \n                        e.DeltaManipulation.Scale.X, \n                        e.ManipulationOrigin.X,\n                        e.ManipulationOrigin.Y);\n\n    // Move the Rectangle.\n    rectsMatrix.Translate(e.DeltaManipulation.Translation.X,\n                          e.DeltaManipulation.Translation.Y);\n\n    // Apply the changes to the Rectangle.\n    rectToMove.RenderTransform = new MatrixTransform(rectsMatrix);\n\n    Rect containingRect =\n        new Rect(((FrameworkElement)e.ManipulationContainer).RenderSize);\n\n    Rect shapeBounds =\n        rectToMove.RenderTransform.TransformBounds(\n            new Rect(rectToMove.RenderSize));\n\n    // Check if the rectangle is completely in the window.\n    // If it is not and intertia is occuring, stop the manipulation.\n    if (e.IsInertial &amp;&amp; !containingRect.Contains(shapeBounds))\n    {\n        e.Complete();\n    }\n\n    \n    e.Handled = true;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BasicManipulation#ManipulationDelta\">Private Sub Window_ManipulationDelta(ByVal sender As Object, ByVal e As ManipulationDeltaEventArgs)\n\n    &#39; Get the Rectangle and its RenderTransform matrix.\n    Dim rectToMove As Rectangle = e.OriginalSource\n    Dim rectTransform As MatrixTransform = rectToMove.RenderTransform\n    Dim rectsMatrix As Matrix = rectTransform.Matrix\n\n\n    &#39; Rotate the shape\n    rectsMatrix.RotateAt(e.DeltaManipulation.Rotation,\n                         e.ManipulationOrigin.X,\n                         e.ManipulationOrigin.Y)\n\n    &#39; Resize the Rectangle. Keep it square \n    &#39; so use only the X value of Scale.\n    rectsMatrix.ScaleAt(e.DeltaManipulation.Scale.X,\n                        e.DeltaManipulation.Scale.X,\n                        e.ManipulationOrigin.X,\n                        e.ManipulationOrigin.Y)\n\n    &#39;move the center\n    rectsMatrix.Translate(e.DeltaManipulation.Translation.X,\n                          e.DeltaManipulation.Translation.Y)\n\n    &#39; Apply the changes to the Rectangle.\n    rectTransform = New MatrixTransform(rectsMatrix)\n    rectToMove.RenderTransform = rectTransform\n\n    Dim container As FrameworkElement = e.ManipulationContainer\n    Dim containingRect As New Rect(container.RenderSize)\n\n    Dim shapeBounds As Rect = rectTransform.TransformBounds(\n                                New Rect(rectToMove.RenderSize))\n\n    &#39; Check if the rectangle is completely in the window.\n    &#39; If it is not and intertia is occuring, stop the manipulation.\n    If e.IsInertial AndAlso Not containingRect.Contains(shapeBounds) Then\n        e.Complete()\n    End If\n\n    e.Handled = True\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.ManipulationDelta.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.ManipulationDelta.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ManipulationDelta\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ManipulationDelta..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ManipulationDelta.Expansion\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ManipulationDelta.Rotation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ManipulationDelta.Scale\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ManipulationDelta.Translation\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f5d7b0fd-fdd4-fded-806e-fce1ec0f8bc3\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Input\\ManipulationDelta.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains transformation data that is accumulated when manipulation events occur.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.ManipulationDelta\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.ManipulationDelta.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.ManipulationDelta.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.ManipulationDelta","System.Windows.Input.ManipulationDelta..ctor","System.Windows.Input.ManipulationDelta.Expansion","System.Windows.Input.ManipulationDelta.Rotation","System.Windows.Input.ManipulationDelta.Scale","System.Windows.Input.ManipulationDelta.Translation"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.ManipulationDelta","System::Windows::Input::ManipulationDelta","System.Windows.Input.ManipulationDelta.#ctor","System::Windows::Input::ManipulationDelta::#ctor","System.Windows.Input.ManipulationDelta.Expansion","System::Windows::Input::ManipulationDelta::Expansion","System.Windows.Input.ManipulationDelta.Rotation","System::Windows::Input::ManipulationDelta::Rotation","System.Windows.Input.ManipulationDelta.Scale","System::Windows::Input::ManipulationDelta::Scale","System.Windows.Input.ManipulationDelta.Translation","System::Windows::Input::ManipulationDelta::Translation"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f5d7b0fd-fdd4-fded-806e-fce1ec0f8bc3","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Input\\ManipulationDelta.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/ManipulationDelta.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ManipulationDelta class | Microsoft Docs","_op_ogTitle":"ManipulationDelta class","description":"Contains transformation data that is accumulated when manipulation events occur.\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.ManipulationDelta","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.manipulationdelta","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.manipulationdelta","fileRelativePath":"System.Windows.Input.ManipulationDelta.html"},"themesRelativePathToOutputRoot":"_themes/"}