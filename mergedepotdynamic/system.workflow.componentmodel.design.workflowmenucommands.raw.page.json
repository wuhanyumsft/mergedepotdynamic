{"content":"    \r\n    <h1 id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands\">\r\n      <span class=\"lang-csharp\">WorkflowMenuCommands</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a set of <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> fields that each corresponds to a command function provided by the workflow designers. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*&quot;)]\npublic sealed class WorkflowMenuCommands : System.ComponentModel.Design.StandardCommands</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands\" data-linktype=\"relative-path\">System.ComponentModel.Design.StandardCommands</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WorkflowMenuCommands</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignBottom\" data-linktype=\"relative-path\">AlignBottom</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignHorizontalCenters\" data-linktype=\"relative-path\">AlignHorizontalCenters</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignLeft\" data-linktype=\"relative-path\">AlignLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignRight\" data-linktype=\"relative-path\">AlignRight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignToGrid\" data-linktype=\"relative-path\">AlignToGrid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignTop\" data-linktype=\"relative-path\">AlignTop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_AlignVerticalCenters\" data-linktype=\"relative-path\">AlignVerticalCenters</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ArrangeBottom\" data-linktype=\"relative-path\">ArrangeBottom</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ArrangeIcons\" data-linktype=\"relative-path\">ArrangeIcons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ArrangeRight\" data-linktype=\"relative-path\">ArrangeRight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_BringForward\" data-linktype=\"relative-path\">BringForward</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_BringToFront\" data-linktype=\"relative-path\">BringToFront</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_CenterHorizontally\" data-linktype=\"relative-path\">CenterHorizontally</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_CenterVertically\" data-linktype=\"relative-path\">CenterVertically</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Copy\" data-linktype=\"relative-path\">Copy</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Cut\" data-linktype=\"relative-path\">Cut</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Delete\" data-linktype=\"relative-path\">Delete</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_DocumentOutline\" data-linktype=\"relative-path\">DocumentOutline</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_F1Help\" data-linktype=\"relative-path\">F1Help</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Group\" data-linktype=\"relative-path\">Group</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_HorizSpaceConcatenate\" data-linktype=\"relative-path\">HorizSpaceConcatenate</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_HorizSpaceDecrease\" data-linktype=\"relative-path\">HorizSpaceDecrease</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_HorizSpaceIncrease\" data-linktype=\"relative-path\">HorizSpaceIncrease</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_HorizSpaceMakeEqual\" data-linktype=\"relative-path\">HorizSpaceMakeEqual</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_LineupIcons\" data-linktype=\"relative-path\">LineupIcons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_LockControls\" data-linktype=\"relative-path\">LockControls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_MultiLevelRedo\" data-linktype=\"relative-path\">MultiLevelRedo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_MultiLevelUndo\" data-linktype=\"relative-path\">MultiLevelUndo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Paste\" data-linktype=\"relative-path\">Paste</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Properties\" data-linktype=\"relative-path\">Properties</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_PropertiesWindow\" data-linktype=\"relative-path\">PropertiesWindow</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Redo\" data-linktype=\"relative-path\">Redo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Replace\" data-linktype=\"relative-path\">Replace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SelectAll\" data-linktype=\"relative-path\">SelectAll</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SendBackward\" data-linktype=\"relative-path\">SendBackward</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SendToBack\" data-linktype=\"relative-path\">SendToBack</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ShowGrid\" data-linktype=\"relative-path\">ShowGrid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ShowLargeIcons\" data-linktype=\"relative-path\">ShowLargeIcons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SizeToControl\" data-linktype=\"relative-path\">SizeToControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SizeToControlHeight\" data-linktype=\"relative-path\">SizeToControlHeight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SizeToControlWidth\" data-linktype=\"relative-path\">SizeToControlWidth</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SizeToFit\" data-linktype=\"relative-path\">SizeToFit</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SizeToGrid\" data-linktype=\"relative-path\">SizeToGrid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_SnapToGrid\" data-linktype=\"relative-path\">SnapToGrid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_TabOrder\" data-linktype=\"relative-path\">TabOrder</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Undo\" data-linktype=\"relative-path\">Undo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_Ungroup\" data-linktype=\"relative-path\">Ungroup</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_VerbFirst\" data-linktype=\"relative-path\">VerbFirst</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_VerbLast\" data-linktype=\"relative-path\">VerbLast</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_VertSpaceConcatenate\" data-linktype=\"relative-path\">VertSpaceConcatenate</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_VertSpaceDecrease\" data-linktype=\"relative-path\">VertSpaceDecrease</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_VertSpaceIncrease\" data-linktype=\"relative-path\">VertSpaceIncrease</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_VertSpaceMakeEqual\" data-linktype=\"relative-path\">VertSpaceMakeEqual</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ViewCode\" data-linktype=\"relative-path\">ViewCode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.design.standardcommands#System_ComponentModel_Design_StandardCommands_ViewGrid\" data-linktype=\"relative-path\">ViewGrid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/deprecatedcontent-md.md&quot; -->This material discusses types and namespaces that are obsolete. For more information, see <a href=\"http://aka.ms/wfdeprecatedtypes\" data-linktype=\"external\">Deprecated Types in Windows Workflow Foundation 4.5</a>.<!--END INCLUDE -->  </p>\n</div>\n<p> WorkflowMenuCommands contains a set of <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> fields that can be used to specify a command to link when adding a command using the <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice#System_ComponentModel_Design_MenuCommandService_AddCommand_\" data-linktype=\"relative-path\">AddCommand</a> method of the <a class=\"xref\" href=\"system.componentmodel.design.imenucommandservice\" data-linktype=\"relative-path\">IMenuCommandService</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands__ctor\" data-linktype=\"self-bookmark\">WorkflowMenuCommands()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointActionMenu\" data-linktype=\"self-bookmark\">BreakpointActionMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint action menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointConditionMenu\" data-linktype=\"self-bookmark\">BreakpointConditionMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint condition menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointConstraintsMenu\" data-linktype=\"self-bookmark\">BreakpointConstraintsMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint constraints menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointHitCountMenu\" data-linktype=\"self-bookmark\">BreakpointHitCountMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint hit count menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointLocationMenu\" data-linktype=\"self-bookmark\">BreakpointLocationMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint location menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ChangeTheme\" data-linktype=\"self-bookmark\">ChangeTheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the change theme menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ClearBreakpointsMenu\" data-linktype=\"self-bookmark\">ClearBreakpointsMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the clear breakpoints menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Collapse\" data-linktype=\"self-bookmark\">Collapse</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the collapse menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_CopyToClipboard\" data-linktype=\"self-bookmark\">CopyToClipboard</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the copy menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_CreateTheme\" data-linktype=\"self-bookmark\">CreateTheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the create theme menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugCommandSetId\" data-linktype=\"self-bookmark\">DebugCommandSetId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a unique identifier for the debug command set. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugStepBranchMenu\" data-linktype=\"self-bookmark\">DebugStepBranchMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the debug step branch menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugStepInstanceMenu\" data-linktype=\"self-bookmark\">DebugStepInstanceMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the debug step instance menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugWorkflowGroupId\" data-linktype=\"self-bookmark\">DebugWorkflowGroupId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a unique identifier for the debug workflow group of menus. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DefaultFilter\" data-linktype=\"self-bookmark\">DefaultFilter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the default filter menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DefaultPage\" data-linktype=\"self-bookmark\">DefaultPage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the default page menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DesignerActionsMenu\" data-linktype=\"self-bookmark\">DesignerActionsMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the designer actions menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DesignerProperties\" data-linktype=\"self-bookmark\">DesignerProperties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the designer properties menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Disable\" data-linktype=\"self-bookmark\">Disable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the disable menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Enable\" data-linktype=\"self-bookmark\">Enable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the enable menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_EnableBreakpointMenu\" data-linktype=\"self-bookmark\">EnableBreakpointMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the enable breakpoint menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ExecutionStateMenu\" data-linktype=\"self-bookmark\">ExecutionStateMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the execution state menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Expand\" data-linktype=\"self-bookmark\">Expand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the expand menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_FirstZoomCommand\" data-linktype=\"self-bookmark\">FirstZoomCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom first menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_GotoDisassemblyMenu\" data-linktype=\"self-bookmark\">GotoDisassemblyMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the goto disassembly menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_InsertBreakpointMenu\" data-linktype=\"self-bookmark\">InsertBreakpointMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the insert breakpoint menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_InsertTracePointMenu\" data-linktype=\"self-bookmark\">InsertTracePointMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the insert tracepoint menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_LastZoomCommand\" data-linktype=\"self-bookmark\">LastZoomCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom last menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_MenuGuid\" data-linktype=\"self-bookmark\">MenuGuid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a unique identifier for the menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_NewDataBreakpointMenu\" data-linktype=\"self-bookmark\">NewDataBreakpointMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the new data breakpoint menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_NewFileTracePointMenu\" data-linktype=\"self-bookmark\">NewFileTracePointMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the new file tracepoint menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageDown\" data-linktype=\"self-bookmark\">PageDown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the PageDown menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageLayoutMenu\" data-linktype=\"self-bookmark\">PageLayoutMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the page layout menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageSetup\" data-linktype=\"self-bookmark\">PageSetup</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the page setup menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageUp\" data-linktype=\"self-bookmark\">PageUp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the PageUp menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Pan\" data-linktype=\"self-bookmark\">Pan</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the pan menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PanMenu\" data-linktype=\"self-bookmark\">PanMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the pan menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Print\" data-linktype=\"self-bookmark\">Print</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the print menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PrintPreview\" data-linktype=\"self-bookmark\">PrintPreview</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the print preview menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PrintPreviewPage\" data-linktype=\"self-bookmark\">PrintPreviewPage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the print preview page menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_RunToCursorMenu\" data-linktype=\"self-bookmark\">RunToCursorMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the run to cursor menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_SaveAsImage\" data-linktype=\"self-bookmark\">SaveAsImage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the save as image menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_SelectionMenu\" data-linktype=\"self-bookmark\">SelectionMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the selection menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_SetNextStatementMenu\" data-linktype=\"self-bookmark\">SetNextStatementMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the set next statement menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ShowAll\" data-linktype=\"self-bookmark\">ShowAll</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the show all menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ShowNextStatementMenu\" data-linktype=\"self-bookmark\">ShowNextStatementMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the show next statement menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ToggleBreakpointMenu\" data-linktype=\"self-bookmark\">ToggleBreakpointMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the toggle breakpoint menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupActions\" data-linktype=\"self-bookmark\">VerbGroupActions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the verb group actions menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupDesignerActions\" data-linktype=\"self-bookmark\">VerbGroupDesignerActions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the verb group designer actions menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupEdit\" data-linktype=\"self-bookmark\">VerbGroupEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the edit verb group menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupGeneral\" data-linktype=\"self-bookmark\">VerbGroupGeneral</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the general verb group menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupMisc\" data-linktype=\"self-bookmark\">VerbGroupMisc</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the miscellaneous verb group menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupOptions\" data-linktype=\"self-bookmark\">VerbGroupOptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the options verb group menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupView\" data-linktype=\"self-bookmark\">VerbGroupView</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the view verb group menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_WorkflowCommandSetId\" data-linktype=\"self-bookmark\">WorkflowCommandSetId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a unique identifier for the workflow command set. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_WorkflowToolBar\" data-linktype=\"self-bookmark\">WorkflowToolBar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the workflow toolbar menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom100Mode\" data-linktype=\"self-bookmark\">Zoom100Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 100% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom150Mode\" data-linktype=\"self-bookmark\">Zoom150Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 150% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom200Mode\" data-linktype=\"self-bookmark\">Zoom200Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 200% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom300Mode\" data-linktype=\"self-bookmark\">Zoom300Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 300% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom400Mode\" data-linktype=\"self-bookmark\">Zoom400Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 400% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom50Mode\" data-linktype=\"self-bookmark\">Zoom50Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 50% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom75Mode\" data-linktype=\"self-bookmark\">Zoom75Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 75% menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomIn\" data-linktype=\"self-bookmark\">ZoomIn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom in menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomLevelCombo\" data-linktype=\"self-bookmark\">ZoomLevelCombo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom level combo menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomLevelListHandler\" data-linktype=\"self-bookmark\">ZoomLevelListHandler</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom level list handler menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomMenu\" data-linktype=\"self-bookmark\">ZoomMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomOut\" data-linktype=\"self-bookmark\">ZoomOut</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom out menu. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands__ctor\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WorkflowMenuCommands()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WorkflowMenuCommands ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice\" data-linktype=\"relative-path\">MenuCommandService</a>. In this example, a context menu is created when the <code>ShowContextMenu</code> is called. In the <code>GetSelectionMenuItems</code> method, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate <code>MenuCommand</code> is invoked.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#44\">internal sealed class WorkflowMenuCommandService : MenuCommandService\n{\n    public WorkflowMenuCommandService(IServiceProvider serviceProvider)\n        : base(serviceProvider)\n    {\n    }\n\n    public override void ShowContextMenu(CommandID menuID, int x, int y)\n    {\n        if (menuID == WorkflowMenuCommands.SelectionMenu)\n        {\n            ContextMenu contextMenu = new ContextMenu();\n\n            foreach (DesignerVerb verb in Verbs)\n            {\n                MenuItem menuItem = new MenuItem(verb.Text, new EventHandler(OnMenuClicked));\n                menuItem.Tag = verb;\n                contextMenu.MenuItems.Add(menuItem);\n            }\n\n            MenuItem[] items = GetSelectionMenuItems();\n            if (items.Length &gt; 0)\n            {\n                contextMenu.MenuItems.Add(new MenuItem(&quot;-&quot;));\n                foreach (MenuItem item in items)\n                    contextMenu.MenuItems.Add(item);\n            }\n\n            WorkflowView workflowView = GetService(typeof(WorkflowView)) as WorkflowView;\n            if (workflowView != null)\n                contextMenu.Show(workflowView, workflowView.PointToClient(new Point(x, y)));\n        }\n    }\n\n    private MenuItem[] GetSelectionMenuItems()\n    {\n        List&lt;MenuItem&gt; menuItems = new List&lt;MenuItem&gt;();\n\n        bool addMenuItems = true;\n        ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n        if (selectionService != null)\n        {\n            foreach (object obj in selectionService.GetSelectedComponents())\n            {\n                if (!(obj is Activity))\n                {\n                    addMenuItems = false;\n                    break;\n                }\n            }\n        }\n\n        if (addMenuItems)\n        {\n            Dictionary&lt;CommandID, string&gt; selectionCommands = new Dictionary&lt;CommandID, string&gt;();\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;);\n\n            foreach (CommandID id in selectionCommands.Keys)\n            {\n                MenuCommand command = FindCommand(id);\n                if (command != null)\n                {\n                    MenuItem menuItem = new MenuItem(selectionCommands[id], new EventHandler(OnMenuClicked));\n                    menuItem.Tag = command;\n                    menuItems.Add(menuItem);\n                }\n            }\n        }\n\n        return menuItems.ToArray();\n    }\n\n    private void OnMenuClicked(object sender, EventArgs e)\n    {\n        MenuItem menuItem = sender as MenuItem;\n        if (menuItem != null &amp;&amp; menuItem.Tag is MenuCommand)\n        {\n            MenuCommand command = menuItem.Tag as MenuCommand;\n            command.Invoke();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#44\">Friend NotInheritable Class WorkflowMenuCommandService\n    Inherits MenuCommandService\n    Public Sub New(ByVal serviceProvider As IServiceProvider)\n        MyBase.new(serviceProvider)\n    End Sub\n    Public Overrides Sub ShowContextMenu(ByVal menuID As CommandID, ByVal x As Integer, ByVal y As Integer)\n\n        If menuID.ID = WorkflowMenuCommands.SelectionMenu.ID Then\n            Dim contextMenu As New ContextMenu()\n\n            For Each verb As DesignerVerb In Verbs\n                Dim MenuItem As New MenuItem(verb.Text, AddressOf OnMenuClicked)\n                MenuItem.Tag = verb\n                contextMenu.MenuItems.Add(MenuItem)\n            Next\n\n            Dim items As MenuItem() = GetSelectionMenuItems()\n            If (items.Length &gt; 0) Then\n\n                contextMenu.MenuItems.Add(New MenuItem(&quot;-&quot;))\n                For Each item As MenuItem In items\n                    contextMenu.MenuItems.Add(item)\n                Next\n\n                Dim workflowView As WorkflowView = CType(GetService(GetType(WorkflowView)), WorkflowView)\n                If workflowView Is Nothing Then\n                    contextMenu.Show(workflowView, workflowView.PointToClient(New Point(x, y)))\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Function GetSelectionMenuItems() As MenuItem()\n\n        Dim menuItems As New List(Of MenuItem)()\n\n        Dim addMenuItems As Boolean = True\n        Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n        If selectionService IsNot Nothing Then\n\n            For Each obj As Object In selectionService.GetSelectedComponents()\n                If Not TypeOf obj Is Activity Then\n                    addMenuItems = False\n                    Exit For\n                End If\n            Next\n        End If\n\n\n        If (addMenuItems) Then\n\n            Dim selectionCommands As New Dictionary(Of CommandID, String)()\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;)\n\n            For Each id As CommandID In selectionCommands.Keys\n\n                Dim command As MenuCommand = FindCommand(id)\n                If command IsNot Nothing Then\n                    Dim menuItem As New MenuItem(selectionCommands(id), AddressOf OnMenuClicked)\n                    menuItem.Tag = command\n                    menuItems.Add(menuItem)\n                End If\n            Next\n        End If\n\n        Return menuItems.ToArray()\n    End Function\n\n    Private Sub OnMenuClicked(ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim menuItem As MenuItem = CType(sender, MenuItem)\n        If menuItem IsNot Nothing And TypeOf menuItem.Tag Is MenuCommand Then\n            Dim command As MenuCommand = CType(menuItem.Tag, MenuCommand)\n            command.Invoke()\n        End If\n    End Sub\nEnd Class\n</code></pre><p> To enable this service, call the <code>AddService</code> method of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost_\" data-linktype=\"relative-path\">LoaderHost</a> property in a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointActionMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BreakpointActionMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint action menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID BreakpointActionMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The breakpoint action menu is typically used to set, remove, or change breakpoints.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointConditionMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BreakpointConditionMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint condition menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID BreakpointConditionMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The breakpoint condition menu is typically used to set, remove, or change conditional breakpoints.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointConstraintsMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BreakpointConstraintsMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint constraints menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID BreakpointConstraintsMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The breakpoint constraints menu is typically used to set, remove or change constraints on breakpoints.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointHitCountMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BreakpointHitCountMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint hit count menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID BreakpointHitCountMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The breakpoint hit count menu typically displays the hit count for breakpoints.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_BreakpointLocationMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BreakpointLocationMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the breakpoint location menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID BreakpointLocationMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The breakpoint location menu is typically used to modify the location of breakpoints.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ChangeTheme\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ChangeTheme</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> for the change theme menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ChangeTheme;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The theme change menu is typically used to change the theme for the designer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ClearBreakpointsMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearBreakpointsMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the clear breakpoints menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ClearBreakpointsMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The clear breakpoints menu is typically used to clear all breakpoints set in the debugger.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Collapse\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Collapse</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the collapse menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Collapse;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The collapse menu is typically used to collapse composite activities.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice\" data-linktype=\"relative-path\">MenuCommandService</a>. In this example, a context menu is created when the <code>ShowContextMenu</code> is called. In the <code>GetSelectionMenuItems</code> method, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate <code>MenuCommand</code> is invoked.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#44\">internal sealed class WorkflowMenuCommandService : MenuCommandService\n{\n    public WorkflowMenuCommandService(IServiceProvider serviceProvider)\n        : base(serviceProvider)\n    {\n    }\n\n    public override void ShowContextMenu(CommandID menuID, int x, int y)\n    {\n        if (menuID == WorkflowMenuCommands.SelectionMenu)\n        {\n            ContextMenu contextMenu = new ContextMenu();\n\n            foreach (DesignerVerb verb in Verbs)\n            {\n                MenuItem menuItem = new MenuItem(verb.Text, new EventHandler(OnMenuClicked));\n                menuItem.Tag = verb;\n                contextMenu.MenuItems.Add(menuItem);\n            }\n\n            MenuItem[] items = GetSelectionMenuItems();\n            if (items.Length &gt; 0)\n            {\n                contextMenu.MenuItems.Add(new MenuItem(&quot;-&quot;));\n                foreach (MenuItem item in items)\n                    contextMenu.MenuItems.Add(item);\n            }\n\n            WorkflowView workflowView = GetService(typeof(WorkflowView)) as WorkflowView;\n            if (workflowView != null)\n                contextMenu.Show(workflowView, workflowView.PointToClient(new Point(x, y)));\n        }\n    }\n\n    private MenuItem[] GetSelectionMenuItems()\n    {\n        List&lt;MenuItem&gt; menuItems = new List&lt;MenuItem&gt;();\n\n        bool addMenuItems = true;\n        ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n        if (selectionService != null)\n        {\n            foreach (object obj in selectionService.GetSelectedComponents())\n            {\n                if (!(obj is Activity))\n                {\n                    addMenuItems = false;\n                    break;\n                }\n            }\n        }\n\n        if (addMenuItems)\n        {\n            Dictionary&lt;CommandID, string&gt; selectionCommands = new Dictionary&lt;CommandID, string&gt;();\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;);\n\n            foreach (CommandID id in selectionCommands.Keys)\n            {\n                MenuCommand command = FindCommand(id);\n                if (command != null)\n                {\n                    MenuItem menuItem = new MenuItem(selectionCommands[id], new EventHandler(OnMenuClicked));\n                    menuItem.Tag = command;\n                    menuItems.Add(menuItem);\n                }\n            }\n        }\n\n        return menuItems.ToArray();\n    }\n\n    private void OnMenuClicked(object sender, EventArgs e)\n    {\n        MenuItem menuItem = sender as MenuItem;\n        if (menuItem != null &amp;&amp; menuItem.Tag is MenuCommand)\n        {\n            MenuCommand command = menuItem.Tag as MenuCommand;\n            command.Invoke();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#44\">Friend NotInheritable Class WorkflowMenuCommandService\n    Inherits MenuCommandService\n    Public Sub New(ByVal serviceProvider As IServiceProvider)\n        MyBase.new(serviceProvider)\n    End Sub\n    Public Overrides Sub ShowContextMenu(ByVal menuID As CommandID, ByVal x As Integer, ByVal y As Integer)\n\n        If menuID.ID = WorkflowMenuCommands.SelectionMenu.ID Then\n            Dim contextMenu As New ContextMenu()\n\n            For Each verb As DesignerVerb In Verbs\n                Dim MenuItem As New MenuItem(verb.Text, AddressOf OnMenuClicked)\n                MenuItem.Tag = verb\n                contextMenu.MenuItems.Add(MenuItem)\n            Next\n\n            Dim items As MenuItem() = GetSelectionMenuItems()\n            If (items.Length &gt; 0) Then\n\n                contextMenu.MenuItems.Add(New MenuItem(&quot;-&quot;))\n                For Each item As MenuItem In items\n                    contextMenu.MenuItems.Add(item)\n                Next\n\n                Dim workflowView As WorkflowView = CType(GetService(GetType(WorkflowView)), WorkflowView)\n                If workflowView Is Nothing Then\n                    contextMenu.Show(workflowView, workflowView.PointToClient(New Point(x, y)))\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Function GetSelectionMenuItems() As MenuItem()\n\n        Dim menuItems As New List(Of MenuItem)()\n\n        Dim addMenuItems As Boolean = True\n        Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n        If selectionService IsNot Nothing Then\n\n            For Each obj As Object In selectionService.GetSelectedComponents()\n                If Not TypeOf obj Is Activity Then\n                    addMenuItems = False\n                    Exit For\n                End If\n            Next\n        End If\n\n\n        If (addMenuItems) Then\n\n            Dim selectionCommands As New Dictionary(Of CommandID, String)()\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;)\n\n            For Each id As CommandID In selectionCommands.Keys\n\n                Dim command As MenuCommand = FindCommand(id)\n                If command IsNot Nothing Then\n                    Dim menuItem As New MenuItem(selectionCommands(id), AddressOf OnMenuClicked)\n                    menuItem.Tag = command\n                    menuItems.Add(menuItem)\n                End If\n            Next\n        End If\n\n        Return menuItems.ToArray()\n    End Function\n\n    Private Sub OnMenuClicked(ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim menuItem As MenuItem = CType(sender, MenuItem)\n        If menuItem IsNot Nothing And TypeOf menuItem.Tag Is MenuCommand Then\n            Dim command As MenuCommand = CType(menuItem.Tag, MenuCommand)\n            command.Invoke()\n        End If\n    End Sub\nEnd Class\n</code></pre><p> To enable this service, call the <code>AddService</code> method of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost_\" data-linktype=\"relative-path\">LoaderHost</a> property in a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_CopyToClipboard\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyToClipboard</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the copy menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID CopyToClipboard;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_CreateTheme\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateTheme</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the create theme menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID CreateTheme;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The create theme menu is typically used to create a new theme for the designer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugCommandSetId\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DebugCommandSetId</div>        \r\n          </div>\r\n    \r\n            <p>Provides a unique identifier for the debug command set. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly Guid DebugCommandSetId;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugStepBranchMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DebugStepBranchMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the debug step branch menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID DebugStepBranchMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The debug step branch menu is typically used to step into a branch in the debugger.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugStepInstanceMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DebugStepInstanceMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the debug step instance menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID DebugStepInstanceMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The debug step instance menu is typically used to step into an instance of an object in the debugger.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DebugWorkflowGroupId\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DebugWorkflowGroupId</div>        \r\n          </div>\r\n    \r\n            <p>Provides a unique identifier for the debug workflow group of menus. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly Guid DebugWorkflowGroupId;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DefaultFilter\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultFilter</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the default filter menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID DefaultFilter;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default filter menu is typically used to set or modify the default filter for the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DefaultPage\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultPage</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the default page menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID DefaultPage;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default page menu is typically used to set or modify the default page for the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DesignerActionsMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesignerActionsMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the designer actions menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID DesignerActionsMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The designer actions menu is typically used to access actions available to the designer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_DesignerProperties\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesignerProperties</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the designer properties menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID DesignerProperties;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The designer properties menu typically provides a dialog to set designer properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Disable\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Disable</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the disable menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Disable;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The disable menu typically disables an activity on a workflow.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice\" data-linktype=\"relative-path\">MenuCommandService</a>. In this example, a context menu is created when the <code>ShowContextMenu</code> is called. In the <code>GetSelectionMenuItems</code> method, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate <code>MenuCommand</code> is invoked.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#44\">internal sealed class WorkflowMenuCommandService : MenuCommandService\n{\n    public WorkflowMenuCommandService(IServiceProvider serviceProvider)\n        : base(serviceProvider)\n    {\n    }\n\n    public override void ShowContextMenu(CommandID menuID, int x, int y)\n    {\n        if (menuID == WorkflowMenuCommands.SelectionMenu)\n        {\n            ContextMenu contextMenu = new ContextMenu();\n\n            foreach (DesignerVerb verb in Verbs)\n            {\n                MenuItem menuItem = new MenuItem(verb.Text, new EventHandler(OnMenuClicked));\n                menuItem.Tag = verb;\n                contextMenu.MenuItems.Add(menuItem);\n            }\n\n            MenuItem[] items = GetSelectionMenuItems();\n            if (items.Length &gt; 0)\n            {\n                contextMenu.MenuItems.Add(new MenuItem(&quot;-&quot;));\n                foreach (MenuItem item in items)\n                    contextMenu.MenuItems.Add(item);\n            }\n\n            WorkflowView workflowView = GetService(typeof(WorkflowView)) as WorkflowView;\n            if (workflowView != null)\n                contextMenu.Show(workflowView, workflowView.PointToClient(new Point(x, y)));\n        }\n    }\n\n    private MenuItem[] GetSelectionMenuItems()\n    {\n        List&lt;MenuItem&gt; menuItems = new List&lt;MenuItem&gt;();\n\n        bool addMenuItems = true;\n        ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n        if (selectionService != null)\n        {\n            foreach (object obj in selectionService.GetSelectedComponents())\n            {\n                if (!(obj is Activity))\n                {\n                    addMenuItems = false;\n                    break;\n                }\n            }\n        }\n\n        if (addMenuItems)\n        {\n            Dictionary&lt;CommandID, string&gt; selectionCommands = new Dictionary&lt;CommandID, string&gt;();\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;);\n\n            foreach (CommandID id in selectionCommands.Keys)\n            {\n                MenuCommand command = FindCommand(id);\n                if (command != null)\n                {\n                    MenuItem menuItem = new MenuItem(selectionCommands[id], new EventHandler(OnMenuClicked));\n                    menuItem.Tag = command;\n                    menuItems.Add(menuItem);\n                }\n            }\n        }\n\n        return menuItems.ToArray();\n    }\n\n    private void OnMenuClicked(object sender, EventArgs e)\n    {\n        MenuItem menuItem = sender as MenuItem;\n        if (menuItem != null &amp;&amp; menuItem.Tag is MenuCommand)\n        {\n            MenuCommand command = menuItem.Tag as MenuCommand;\n            command.Invoke();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#44\">Friend NotInheritable Class WorkflowMenuCommandService\n    Inherits MenuCommandService\n    Public Sub New(ByVal serviceProvider As IServiceProvider)\n        MyBase.new(serviceProvider)\n    End Sub\n    Public Overrides Sub ShowContextMenu(ByVal menuID As CommandID, ByVal x As Integer, ByVal y As Integer)\n\n        If menuID.ID = WorkflowMenuCommands.SelectionMenu.ID Then\n            Dim contextMenu As New ContextMenu()\n\n            For Each verb As DesignerVerb In Verbs\n                Dim MenuItem As New MenuItem(verb.Text, AddressOf OnMenuClicked)\n                MenuItem.Tag = verb\n                contextMenu.MenuItems.Add(MenuItem)\n            Next\n\n            Dim items As MenuItem() = GetSelectionMenuItems()\n            If (items.Length &gt; 0) Then\n\n                contextMenu.MenuItems.Add(New MenuItem(&quot;-&quot;))\n                For Each item As MenuItem In items\n                    contextMenu.MenuItems.Add(item)\n                Next\n\n                Dim workflowView As WorkflowView = CType(GetService(GetType(WorkflowView)), WorkflowView)\n                If workflowView Is Nothing Then\n                    contextMenu.Show(workflowView, workflowView.PointToClient(New Point(x, y)))\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Function GetSelectionMenuItems() As MenuItem()\n\n        Dim menuItems As New List(Of MenuItem)()\n\n        Dim addMenuItems As Boolean = True\n        Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n        If selectionService IsNot Nothing Then\n\n            For Each obj As Object In selectionService.GetSelectedComponents()\n                If Not TypeOf obj Is Activity Then\n                    addMenuItems = False\n                    Exit For\n                End If\n            Next\n        End If\n\n\n        If (addMenuItems) Then\n\n            Dim selectionCommands As New Dictionary(Of CommandID, String)()\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;)\n\n            For Each id As CommandID In selectionCommands.Keys\n\n                Dim command As MenuCommand = FindCommand(id)\n                If command IsNot Nothing Then\n                    Dim menuItem As New MenuItem(selectionCommands(id), AddressOf OnMenuClicked)\n                    menuItem.Tag = command\n                    menuItems.Add(menuItem)\n                End If\n            Next\n        End If\n\n        Return menuItems.ToArray()\n    End Function\n\n    Private Sub OnMenuClicked(ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim menuItem As MenuItem = CType(sender, MenuItem)\n        If menuItem IsNot Nothing And TypeOf menuItem.Tag Is MenuCommand Then\n            Dim command As MenuCommand = CType(menuItem.Tag, MenuCommand)\n            command.Invoke()\n        End If\n    End Sub\nEnd Class\n</code></pre><p> To enable this service, call the <code>AddService</code> method of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost_\" data-linktype=\"relative-path\">LoaderHost</a> property in a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Enable\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Enable</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the enable menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Enable;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The enable menu typically enables an activity on a workflow.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice\" data-linktype=\"relative-path\">MenuCommandService</a>. In this example, a context menu is created when the <code>ShowContextMenu</code> is called. In the <code>GetSelectionMenuItems</code> method, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate <code>MenuCommand</code> is invoked.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#44\">internal sealed class WorkflowMenuCommandService : MenuCommandService\n{\n    public WorkflowMenuCommandService(IServiceProvider serviceProvider)\n        : base(serviceProvider)\n    {\n    }\n\n    public override void ShowContextMenu(CommandID menuID, int x, int y)\n    {\n        if (menuID == WorkflowMenuCommands.SelectionMenu)\n        {\n            ContextMenu contextMenu = new ContextMenu();\n\n            foreach (DesignerVerb verb in Verbs)\n            {\n                MenuItem menuItem = new MenuItem(verb.Text, new EventHandler(OnMenuClicked));\n                menuItem.Tag = verb;\n                contextMenu.MenuItems.Add(menuItem);\n            }\n\n            MenuItem[] items = GetSelectionMenuItems();\n            if (items.Length &gt; 0)\n            {\n                contextMenu.MenuItems.Add(new MenuItem(&quot;-&quot;));\n                foreach (MenuItem item in items)\n                    contextMenu.MenuItems.Add(item);\n            }\n\n            WorkflowView workflowView = GetService(typeof(WorkflowView)) as WorkflowView;\n            if (workflowView != null)\n                contextMenu.Show(workflowView, workflowView.PointToClient(new Point(x, y)));\n        }\n    }\n\n    private MenuItem[] GetSelectionMenuItems()\n    {\n        List&lt;MenuItem&gt; menuItems = new List&lt;MenuItem&gt;();\n\n        bool addMenuItems = true;\n        ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n        if (selectionService != null)\n        {\n            foreach (object obj in selectionService.GetSelectedComponents())\n            {\n                if (!(obj is Activity))\n                {\n                    addMenuItems = false;\n                    break;\n                }\n            }\n        }\n\n        if (addMenuItems)\n        {\n            Dictionary&lt;CommandID, string&gt; selectionCommands = new Dictionary&lt;CommandID, string&gt;();\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;);\n\n            foreach (CommandID id in selectionCommands.Keys)\n            {\n                MenuCommand command = FindCommand(id);\n                if (command != null)\n                {\n                    MenuItem menuItem = new MenuItem(selectionCommands[id], new EventHandler(OnMenuClicked));\n                    menuItem.Tag = command;\n                    menuItems.Add(menuItem);\n                }\n            }\n        }\n\n        return menuItems.ToArray();\n    }\n\n    private void OnMenuClicked(object sender, EventArgs e)\n    {\n        MenuItem menuItem = sender as MenuItem;\n        if (menuItem != null &amp;&amp; menuItem.Tag is MenuCommand)\n        {\n            MenuCommand command = menuItem.Tag as MenuCommand;\n            command.Invoke();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#44\">Friend NotInheritable Class WorkflowMenuCommandService\n    Inherits MenuCommandService\n    Public Sub New(ByVal serviceProvider As IServiceProvider)\n        MyBase.new(serviceProvider)\n    End Sub\n    Public Overrides Sub ShowContextMenu(ByVal menuID As CommandID, ByVal x As Integer, ByVal y As Integer)\n\n        If menuID.ID = WorkflowMenuCommands.SelectionMenu.ID Then\n            Dim contextMenu As New ContextMenu()\n\n            For Each verb As DesignerVerb In Verbs\n                Dim MenuItem As New MenuItem(verb.Text, AddressOf OnMenuClicked)\n                MenuItem.Tag = verb\n                contextMenu.MenuItems.Add(MenuItem)\n            Next\n\n            Dim items As MenuItem() = GetSelectionMenuItems()\n            If (items.Length &gt; 0) Then\n\n                contextMenu.MenuItems.Add(New MenuItem(&quot;-&quot;))\n                For Each item As MenuItem In items\n                    contextMenu.MenuItems.Add(item)\n                Next\n\n                Dim workflowView As WorkflowView = CType(GetService(GetType(WorkflowView)), WorkflowView)\n                If workflowView Is Nothing Then\n                    contextMenu.Show(workflowView, workflowView.PointToClient(New Point(x, y)))\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Function GetSelectionMenuItems() As MenuItem()\n\n        Dim menuItems As New List(Of MenuItem)()\n\n        Dim addMenuItems As Boolean = True\n        Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n        If selectionService IsNot Nothing Then\n\n            For Each obj As Object In selectionService.GetSelectedComponents()\n                If Not TypeOf obj Is Activity Then\n                    addMenuItems = False\n                    Exit For\n                End If\n            Next\n        End If\n\n\n        If (addMenuItems) Then\n\n            Dim selectionCommands As New Dictionary(Of CommandID, String)()\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;)\n\n            For Each id As CommandID In selectionCommands.Keys\n\n                Dim command As MenuCommand = FindCommand(id)\n                If command IsNot Nothing Then\n                    Dim menuItem As New MenuItem(selectionCommands(id), AddressOf OnMenuClicked)\n                    menuItem.Tag = command\n                    menuItems.Add(menuItem)\n                End If\n            Next\n        End If\n\n        Return menuItems.ToArray()\n    End Function\n\n    Private Sub OnMenuClicked(ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim menuItem As MenuItem = CType(sender, MenuItem)\n        If menuItem IsNot Nothing And TypeOf menuItem.Tag Is MenuCommand Then\n            Dim command As MenuCommand = CType(menuItem.Tag, MenuCommand)\n            command.Invoke()\n        End If\n    End Sub\nEnd Class\n</code></pre><p> To enable this service, call the <code>AddService</code> method of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost_\" data-linktype=\"relative-path\">LoaderHost</a> property in a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_EnableBreakpointMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableBreakpointMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the enable breakpoint menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID EnableBreakpointMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The enable breakpoint menu typically enables a previously set breakpoint.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ExecutionStateMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecutionStateMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the execution state menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ExecutionStateMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The execution state menu typically indicates the state of the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Expand\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Expand</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the expand menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Expand;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The expand menu typically causes collapsed sections of code to expand.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice\" data-linktype=\"relative-path\">MenuCommandService</a>. In this example, a context menu is created when the <code>ShowContextMenu</code> is called. In the <code>GetSelectionMenuItems</code> method, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate <code>MenuCommand</code> is invoked.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#44\">internal sealed class WorkflowMenuCommandService : MenuCommandService\n{\n    public WorkflowMenuCommandService(IServiceProvider serviceProvider)\n        : base(serviceProvider)\n    {\n    }\n\n    public override void ShowContextMenu(CommandID menuID, int x, int y)\n    {\n        if (menuID == WorkflowMenuCommands.SelectionMenu)\n        {\n            ContextMenu contextMenu = new ContextMenu();\n\n            foreach (DesignerVerb verb in Verbs)\n            {\n                MenuItem menuItem = new MenuItem(verb.Text, new EventHandler(OnMenuClicked));\n                menuItem.Tag = verb;\n                contextMenu.MenuItems.Add(menuItem);\n            }\n\n            MenuItem[] items = GetSelectionMenuItems();\n            if (items.Length &gt; 0)\n            {\n                contextMenu.MenuItems.Add(new MenuItem(&quot;-&quot;));\n                foreach (MenuItem item in items)\n                    contextMenu.MenuItems.Add(item);\n            }\n\n            WorkflowView workflowView = GetService(typeof(WorkflowView)) as WorkflowView;\n            if (workflowView != null)\n                contextMenu.Show(workflowView, workflowView.PointToClient(new Point(x, y)));\n        }\n    }\n\n    private MenuItem[] GetSelectionMenuItems()\n    {\n        List&lt;MenuItem&gt; menuItems = new List&lt;MenuItem&gt;();\n\n        bool addMenuItems = true;\n        ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n        if (selectionService != null)\n        {\n            foreach (object obj in selectionService.GetSelectedComponents())\n            {\n                if (!(obj is Activity))\n                {\n                    addMenuItems = false;\n                    break;\n                }\n            }\n        }\n\n        if (addMenuItems)\n        {\n            Dictionary&lt;CommandID, string&gt; selectionCommands = new Dictionary&lt;CommandID, string&gt;();\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;);\n\n            foreach (CommandID id in selectionCommands.Keys)\n            {\n                MenuCommand command = FindCommand(id);\n                if (command != null)\n                {\n                    MenuItem menuItem = new MenuItem(selectionCommands[id], new EventHandler(OnMenuClicked));\n                    menuItem.Tag = command;\n                    menuItems.Add(menuItem);\n                }\n            }\n        }\n\n        return menuItems.ToArray();\n    }\n\n    private void OnMenuClicked(object sender, EventArgs e)\n    {\n        MenuItem menuItem = sender as MenuItem;\n        if (menuItem != null &amp;&amp; menuItem.Tag is MenuCommand)\n        {\n            MenuCommand command = menuItem.Tag as MenuCommand;\n            command.Invoke();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#44\">Friend NotInheritable Class WorkflowMenuCommandService\n    Inherits MenuCommandService\n    Public Sub New(ByVal serviceProvider As IServiceProvider)\n        MyBase.new(serviceProvider)\n    End Sub\n    Public Overrides Sub ShowContextMenu(ByVal menuID As CommandID, ByVal x As Integer, ByVal y As Integer)\n\n        If menuID.ID = WorkflowMenuCommands.SelectionMenu.ID Then\n            Dim contextMenu As New ContextMenu()\n\n            For Each verb As DesignerVerb In Verbs\n                Dim MenuItem As New MenuItem(verb.Text, AddressOf OnMenuClicked)\n                MenuItem.Tag = verb\n                contextMenu.MenuItems.Add(MenuItem)\n            Next\n\n            Dim items As MenuItem() = GetSelectionMenuItems()\n            If (items.Length &gt; 0) Then\n\n                contextMenu.MenuItems.Add(New MenuItem(&quot;-&quot;))\n                For Each item As MenuItem In items\n                    contextMenu.MenuItems.Add(item)\n                Next\n\n                Dim workflowView As WorkflowView = CType(GetService(GetType(WorkflowView)), WorkflowView)\n                If workflowView Is Nothing Then\n                    contextMenu.Show(workflowView, workflowView.PointToClient(New Point(x, y)))\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Function GetSelectionMenuItems() As MenuItem()\n\n        Dim menuItems As New List(Of MenuItem)()\n\n        Dim addMenuItems As Boolean = True\n        Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n        If selectionService IsNot Nothing Then\n\n            For Each obj As Object In selectionService.GetSelectedComponents()\n                If Not TypeOf obj Is Activity Then\n                    addMenuItems = False\n                    Exit For\n                End If\n            Next\n        End If\n\n\n        If (addMenuItems) Then\n\n            Dim selectionCommands As New Dictionary(Of CommandID, String)()\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;)\n\n            For Each id As CommandID In selectionCommands.Keys\n\n                Dim command As MenuCommand = FindCommand(id)\n                If command IsNot Nothing Then\n                    Dim menuItem As New MenuItem(selectionCommands(id), AddressOf OnMenuClicked)\n                    menuItem.Tag = command\n                    menuItems.Add(menuItem)\n                End If\n            Next\n        End If\n\n        Return menuItems.ToArray()\n    End Function\n\n    Private Sub OnMenuClicked(ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim menuItem As MenuItem = CType(sender, MenuItem)\n        If menuItem IsNot Nothing And TypeOf menuItem.Tag Is MenuCommand Then\n            Dim command As MenuCommand = CType(menuItem.Tag, MenuCommand)\n            command.Invoke()\n        End If\n    End Sub\nEnd Class\n</code></pre><p> To enable this service, call the <code>AddService</code> method of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost_\" data-linktype=\"relative-path\">LoaderHost</a> property in a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_FirstZoomCommand\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FirstZoomCommand</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom first menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const int FirstZoomCommand = 12544;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom first command typically restores the workflow view to the first zoom level.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_GotoDisassemblyMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GotoDisassemblyMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the goto disassembly menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID GotoDisassemblyMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The goto disassembly menu is typically used to navigate to disassembled code in the debugger.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_InsertBreakpointMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertBreakpointMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the insert breakpoint menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID InsertBreakpointMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The insert breakpoint menu is typically used to insert a breakpoint into the workflow at the cursor or before the current selection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_InsertTracePointMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertTracePointMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the insert tracepoint menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID InsertTracePointMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The insert tracepoint menu is typically used to insert a tracepoint at the cursor or before the current selection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_LastZoomCommand\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LastZoomCommand</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom last menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const int LastZoomCommand = 12551;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The last zoom command typically restores the workflow view to the last zoom level.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_MenuGuid\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuGuid</div>        \r\n          </div>\r\n    \r\n            <p>Provides a unique identifier for the menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly Guid MenuGuid;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_NewDataBreakpointMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewDataBreakpointMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the new data breakpoint menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID NewDataBreakpointMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The new data breakpoint menu typically inserts a new data-driven breakpoint.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_NewFileTracePointMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewFileTracePointMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the new file tracepoint menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID NewFileTracePointMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The new file tracepoint menu typically inserts a new tracepoint.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageDown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageDown</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the PageDown menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PageDown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page down menu is typically used to scroll the workflow down one page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageLayoutMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageLayoutMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the page layout menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PageLayoutMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page layout menu is typically used to adjust the page layout options.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageSetup\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageSetup</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the page setup menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PageSetup;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page setup menu is typically used to bring forward the page setup dialog.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PageUp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageUp</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the PageUp menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PageUp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page up menu is typically used to scroll the workflow up one page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Pan\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pan</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the pan menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Pan;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The pan menu is typically used to scroll the visible area of the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PanMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PanMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the pan menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PanMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The pan menu is typically used to scroll the visible area of the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Print\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Print</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the print menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Print;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The print menu is typically used to print the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PrintPreview\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrintPreview</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the print preview menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PrintPreview;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The print preview menu is typically used to preview the printing of a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_PrintPreviewPage\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrintPreviewPage</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the print preview page menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID PrintPreviewPage;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The print preview page menu is typically used to page through a print preview.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_RunToCursorMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunToCursorMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the run to cursor menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID RunToCursorMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The run to cursor menu is typically used to place a breakpoint in the workflow at the location of the cursor and resume execution until that breakpoint is reached.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_SaveAsImage\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveAsImage</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the save as image menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID SaveAsImage;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The save as image menu saves the workflow as an image.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_SelectionMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the selection menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID SelectionMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The selection menu is typically used to manage a selection within the workflow.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom <a class=\"xref\" href=\"system.componentmodel.design.menucommandservice\" data-linktype=\"relative-path\">MenuCommandService</a>. In this example, a context menu is created when the <code>ShowContextMenu</code> is called. In the <code>GetSelectionMenuItems</code> method, the <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowmenucommands\" data-linktype=\"relative-path\">WorkflowMenuCommands</a> class is utilized to associate the proper menu commands provided by the workflow designer with their corresponding text. When this is finished, an event handler is associated with each command so that when the command is selected, the appropriate <code>MenuCommand</code> is invoked.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#44\">internal sealed class WorkflowMenuCommandService : MenuCommandService\n{\n    public WorkflowMenuCommandService(IServiceProvider serviceProvider)\n        : base(serviceProvider)\n    {\n    }\n\n    public override void ShowContextMenu(CommandID menuID, int x, int y)\n    {\n        if (menuID == WorkflowMenuCommands.SelectionMenu)\n        {\n            ContextMenu contextMenu = new ContextMenu();\n\n            foreach (DesignerVerb verb in Verbs)\n            {\n                MenuItem menuItem = new MenuItem(verb.Text, new EventHandler(OnMenuClicked));\n                menuItem.Tag = verb;\n                contextMenu.MenuItems.Add(menuItem);\n            }\n\n            MenuItem[] items = GetSelectionMenuItems();\n            if (items.Length &gt; 0)\n            {\n                contextMenu.MenuItems.Add(new MenuItem(&quot;-&quot;));\n                foreach (MenuItem item in items)\n                    contextMenu.MenuItems.Add(item);\n            }\n\n            WorkflowView workflowView = GetService(typeof(WorkflowView)) as WorkflowView;\n            if (workflowView != null)\n                contextMenu.Show(workflowView, workflowView.PointToClient(new Point(x, y)));\n        }\n    }\n\n    private MenuItem[] GetSelectionMenuItems()\n    {\n        List&lt;MenuItem&gt; menuItems = new List&lt;MenuItem&gt;();\n\n        bool addMenuItems = true;\n        ISelectionService selectionService = GetService(typeof(ISelectionService)) as ISelectionService;\n        if (selectionService != null)\n        {\n            foreach (object obj in selectionService.GetSelectedComponents())\n            {\n                if (!(obj is Activity))\n                {\n                    addMenuItems = false;\n                    break;\n                }\n            }\n        }\n\n        if (addMenuItems)\n        {\n            Dictionary&lt;CommandID, string&gt; selectionCommands = new Dictionary&lt;CommandID, string&gt;();\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;);\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;);\n\n            foreach (CommandID id in selectionCommands.Keys)\n            {\n                MenuCommand command = FindCommand(id);\n                if (command != null)\n                {\n                    MenuItem menuItem = new MenuItem(selectionCommands[id], new EventHandler(OnMenuClicked));\n                    menuItem.Tag = command;\n                    menuItems.Add(menuItem);\n                }\n            }\n        }\n\n        return menuItems.ToArray();\n    }\n\n    private void OnMenuClicked(object sender, EventArgs e)\n    {\n        MenuItem menuItem = sender as MenuItem;\n        if (menuItem != null &amp;&amp; menuItem.Tag is MenuCommand)\n        {\n            MenuCommand command = menuItem.Tag as MenuCommand;\n            command.Invoke();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#44\">Friend NotInheritable Class WorkflowMenuCommandService\n    Inherits MenuCommandService\n    Public Sub New(ByVal serviceProvider As IServiceProvider)\n        MyBase.new(serviceProvider)\n    End Sub\n    Public Overrides Sub ShowContextMenu(ByVal menuID As CommandID, ByVal x As Integer, ByVal y As Integer)\n\n        If menuID.ID = WorkflowMenuCommands.SelectionMenu.ID Then\n            Dim contextMenu As New ContextMenu()\n\n            For Each verb As DesignerVerb In Verbs\n                Dim MenuItem As New MenuItem(verb.Text, AddressOf OnMenuClicked)\n                MenuItem.Tag = verb\n                contextMenu.MenuItems.Add(MenuItem)\n            Next\n\n            Dim items As MenuItem() = GetSelectionMenuItems()\n            If (items.Length &gt; 0) Then\n\n                contextMenu.MenuItems.Add(New MenuItem(&quot;-&quot;))\n                For Each item As MenuItem In items\n                    contextMenu.MenuItems.Add(item)\n                Next\n\n                Dim workflowView As WorkflowView = CType(GetService(GetType(WorkflowView)), WorkflowView)\n                If workflowView Is Nothing Then\n                    contextMenu.Show(workflowView, workflowView.PointToClient(New Point(x, y)))\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Function GetSelectionMenuItems() As MenuItem()\n\n        Dim menuItems As New List(Of MenuItem)()\n\n        Dim addMenuItems As Boolean = True\n        Dim selectionService As ISelectionService = CType(GetService(GetType(ISelectionService)), ISelectionService)\n        If selectionService IsNot Nothing Then\n\n            For Each obj As Object In selectionService.GetSelectedComponents()\n                If Not TypeOf obj Is Activity Then\n                    addMenuItems = False\n                    Exit For\n                End If\n            Next\n        End If\n\n\n        If (addMenuItems) Then\n\n            Dim selectionCommands As New Dictionary(Of CommandID, String)()\n            selectionCommands.Add(WorkflowMenuCommands.Cut, &quot;Cut&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Copy, &quot;Copy&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Paste, &quot;Paste&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Delete, &quot;Delete&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Collapse, &quot;Collapse&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Expand, &quot;Expand&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Disable, &quot;Disable&quot;)\n            selectionCommands.Add(WorkflowMenuCommands.Enable, &quot;Enable&quot;)\n\n            For Each id As CommandID In selectionCommands.Keys\n\n                Dim command As MenuCommand = FindCommand(id)\n                If command IsNot Nothing Then\n                    Dim menuItem As New MenuItem(selectionCommands(id), AddressOf OnMenuClicked)\n                    menuItem.Tag = command\n                    menuItems.Add(menuItem)\n                End If\n            Next\n        End If\n\n        Return menuItems.ToArray()\n    End Function\n\n    Private Sub OnMenuClicked(ByVal sender As Object, ByVal e As EventArgs)\n\n        Dim menuItem As MenuItem = CType(sender, MenuItem)\n        If menuItem IsNot Nothing And TypeOf menuItem.Tag Is MenuCommand Then\n            Dim command As MenuCommand = CType(menuItem.Tag, MenuCommand)\n            command.Invoke()\n        End If\n    End Sub\nEnd Class\n</code></pre><p> To enable this service, call the <code>AddService</code> method of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.basicdesignerloader#System_ComponentModel_Design_Serialization_BasicDesignerLoader_LoaderHost_\" data-linktype=\"relative-path\">LoaderHost</a> property in a <a class=\"xref\" href=\"system.workflow.componentmodel.design.workflowdesignerloader\" data-linktype=\"relative-path\">WorkflowDesignerLoader</a> class as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#31\">protected override void Initialize()\n{\n    base.Initialize();\n\n    IDesignerLoaderHost host = this.LoaderHost;\n    if (host != null)\n    {\n        host.RemoveService(typeof(IIdentifierCreationService));\n        host.AddService(typeof(IIdentifierCreationService), new IdentifierCreationService(host));\n        host.AddService(typeof(IMenuCommandService), new WorkflowMenuCommandService(host));\n        host.AddService(typeof(IToolboxService), new Toolbox(host));\n        TypeProvider typeProvider = new TypeProvider(host);\n        typeProvider.AddAssemblyReference(typeof(string).Assembly.Location);\n        host.AddService(typeof(ITypeProvider), typeProvider, true);\n        host.AddService(typeof(IEventBindingService), new EventBindingService());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#31\">Protected Overrides Sub Initialize()\n    MyBase.Initialize()\n\n    Dim host As IDesignerLoaderHost = Me.LoaderHost\n    If host IsNot Nothing Then\n        host.RemoveService(GetType(IIdentifierCreationService))\n        host.AddService(GetType(IIdentifierCreationService), New IdentifierCreationService(host))\n        host.AddService(GetType(IMenuCommandService), New WorkflowMenuCommandService(host))\n        host.AddService(GetType(IToolboxService), New Toolbox(host))\n        Dim typeProvider As New TypeProvider(host)\n        typeProvider.AddAssemblyReference(GetType(String).Assembly.Location)\n        host.AddService(GetType(ITypeProvider), typeProvider, True)\n        host.AddService(GetType(IEventBindingService), New EventBindingService())\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_SetNextStatementMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetNextStatementMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the set next statement menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID SetNextStatementMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The set next statement menu is typically used to set the next statement to execute while stepping through the execution of a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ShowAll\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowAll</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the show all menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ShowAll;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The show all menu is typically used to show all child objects in the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ShowNextStatementMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowNextStatementMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the show next statement menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ShowNextStatementMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The show next statement menu is typically used to highlight the next statement to be executed while stepping through the execution of a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ToggleBreakpointMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToggleBreakpointMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the toggle breakpoint menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ToggleBreakpointMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The toggle breakpoint menu is typically used to turn on or off a breakpoint.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupActions\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupActions</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the verb group actions menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupActions;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The verb group actions menu is typically used to access actions arranged by verb group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupDesignerActions\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupDesignerActions</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the verb group designer actions menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupDesignerActions;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The verb group designer actions menu is typically used to access designer actions arranged by verb group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupEdit</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the edit verb group menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The edit verb group is typically used to access the verbs in the edit group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupGeneral\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupGeneral</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the general verb group menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupGeneral;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The general verb group menu is typically used to access verbs in the general group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupMisc\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupMisc</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the miscellaneous verb group menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupMisc;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The miscellaneous verb group menu is typically used to access verbs in the miscellaneous group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupOptions\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupOptions</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the options verb group menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupOptions;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The options very group menu is typically used to access verbs in the options group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_VerbGroupView\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerbGroupView</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the view verb group menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly int VerbGroupView;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The view verb group menu is typically used to access verbs in the view group.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_WorkflowCommandSetId\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WorkflowCommandSetId</div>        \r\n          </div>\r\n    \r\n            <p>Provides a unique identifier for the workflow command set. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly Guid WorkflowCommandSetId;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_WorkflowToolBar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WorkflowToolBar</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the workflow toolbar menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const int WorkflowToolBar = 1292;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The workflow toolbar menu appears at the bottom of the workflow design surface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom100Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom100Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 100% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom100Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 100% menu is typically used to set the zoom level to 100% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom150Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom150Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 150% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom150Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 150% menu is typically used to set the zoom level to 150% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom200Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom200Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 200% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom200Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 200% menu is typically used to set the zoom level to 200% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom300Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom300Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 300% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom300Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 300% menu is typically used to set the zoom level to 300% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom400Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom400Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 400% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom400Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 400% menu is typically used to set the zoom level to 400% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom50Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom50Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 50% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom50Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 50% menu is typically used to set the zoom level to 50% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_Zoom75Mode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Zoom75Mode</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom 75% menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID Zoom75Mode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom 75% menu is typically used to set the zoom level to 75% on a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomIn\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ZoomIn</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom in menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ZoomIn;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom in menu is typically used to increase the magnification of a workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomLevelCombo\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ZoomLevelCombo</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom level combo menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ZoomLevelCombo;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom level combo menu is typically used to bring forward a dialog from which the user can select a zoom level from a combo box.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomLevelListHandler\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ZoomLevelListHandler</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom level list handler menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ZoomLevelListHandler;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom level list handler typically provides a mechanism to switch between different view levels.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomMenu\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ZoomMenu</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ZoomMenu;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom menu typically provides a choice of zoom levels for the workflow view.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_WorkflowMenuCommands_ZoomOut\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ZoomOut</div>        \r\n          </div>\r\n    \r\n            <p>A <a class=\"xref\" href=\"system.componentmodel.design.commandid\" data-linktype=\"relative-path\">CommandID</a> that can be used to access the zoom out menu. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.Design.CommandID ZoomOut;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The zoom out menu is typically used to decrease the magnification of the workflow.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.ComponentModel.Design.WorkflowMenuCommands.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.ComponentModel.Design.WorkflowMenuCommands.yml\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands..ctor\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointActionMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConditionMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConstraintsMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointHitCountMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointLocationMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ChangeTheme\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ClearBreakpointsMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Collapse\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CopyToClipboard\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CreateTheme\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugCommandSetId\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepBranchMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepInstanceMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugWorkflowGroupId\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultFilter\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultPage\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerActionsMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerProperties\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Disable\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Enable\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.EnableBreakpointMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ExecutionStateMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Expand\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.FirstZoomCommand\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.GotoDisassemblyMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertBreakpointMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertTracePointMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.LastZoomCommand\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.MenuGuid\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewDataBreakpointMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewFileTracePointMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageDown\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageLayoutMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageSetup\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageUp\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Pan\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PanMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Print\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreview\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreviewPage\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.RunToCursorMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SaveAsImage\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SelectionMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SetNextStatementMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowAll\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowNextStatementMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ToggleBreakpointMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupActions\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupDesignerActions\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupEdit\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupGeneral\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupMisc\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupOptions\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupView\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowCommandSetId\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowToolBar\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom100Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom150Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom200Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom300Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom400Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom50Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom75Mode\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomIn\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelCombo\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelListHandler\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomMenu\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomOut\">\r\n<meta name=\"APILocation\" content=\"System.Workflow.ComponentModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b5ec76c1-68d2-3b35-d845-b98d7b94e472\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Workflow.ComponentModel.Design\\WorkflowMenuCommands.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a set of  fields that each corresponds to a command function provided by the workflow designers. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Workflow.ComponentModel.Design/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Workflow.ComponentModel.Design.WorkflowMenuCommands\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.ComponentModel.Design.WorkflowMenuCommands.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.ComponentModel.Design.WorkflowMenuCommands.yml","open_to_public_contributors":true,"api_name":["System.Workflow.ComponentModel.Design.WorkflowMenuCommands","System.Workflow.ComponentModel.Design.WorkflowMenuCommands..ctor","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointActionMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConditionMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConstraintsMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointHitCountMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointLocationMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ChangeTheme","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ClearBreakpointsMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Collapse","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CopyToClipboard","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CreateTheme","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugCommandSetId","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepBranchMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepInstanceMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugWorkflowGroupId","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultFilter","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultPage","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerActionsMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerProperties","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Disable","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Enable","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.EnableBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ExecutionStateMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Expand","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.FirstZoomCommand","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.GotoDisassemblyMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertTracePointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.LastZoomCommand","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.MenuGuid","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewDataBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewFileTracePointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageDown","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageLayoutMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageSetup","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageUp","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Pan","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PanMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Print","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreview","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreviewPage","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.RunToCursorMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SaveAsImage","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SelectionMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SetNextStatementMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowAll","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowNextStatementMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ToggleBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupActions","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupDesignerActions","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupEdit","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupGeneral","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupMisc","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupOptions","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupView","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowCommandSetId","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowToolBar","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom100Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom150Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom200Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom300Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom400Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom50Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom75Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomIn","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelCombo","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelListHandler","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomOut"],"api_location":["System.Workflow.ComponentModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Workflow.ComponentModel.Design.WorkflowMenuCommands","System::Workflow::ComponentModel::Design::WorkflowMenuCommands","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.#ctor","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::#ctor","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointActionMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::BreakpointActionMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConditionMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::BreakpointConditionMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConstraintsMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::BreakpointConstraintsMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointHitCountMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::BreakpointHitCountMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointLocationMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::BreakpointLocationMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ChangeTheme","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ChangeTheme","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ClearBreakpointsMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ClearBreakpointsMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Collapse","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Collapse","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CopyToClipboard","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::CopyToClipboard","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CreateTheme","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::CreateTheme","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugCommandSetId","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DebugCommandSetId","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepBranchMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DebugStepBranchMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepInstanceMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DebugStepInstanceMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugWorkflowGroupId","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DebugWorkflowGroupId","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultFilter","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DefaultFilter","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultPage","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DefaultPage","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerActionsMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DesignerActionsMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerProperties","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::DesignerProperties","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Disable","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Disable","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Enable","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Enable","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.EnableBreakpointMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::EnableBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ExecutionStateMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ExecutionStateMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Expand","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Expand","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.FirstZoomCommand","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::FirstZoomCommand","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.GotoDisassemblyMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::GotoDisassemblyMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertBreakpointMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::InsertBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertTracePointMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::InsertTracePointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.LastZoomCommand","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::LastZoomCommand","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.MenuGuid","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::MenuGuid","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewDataBreakpointMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::NewDataBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewFileTracePointMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::NewFileTracePointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageDown","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PageDown","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageLayoutMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PageLayoutMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageSetup","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PageSetup","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageUp","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PageUp","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Pan","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Pan","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PanMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PanMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Print","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Print","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreview","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PrintPreview","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreviewPage","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::PrintPreviewPage","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.RunToCursorMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::RunToCursorMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SaveAsImage","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::SaveAsImage","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SelectionMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::SelectionMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SetNextStatementMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::SetNextStatementMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowAll","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ShowAll","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowNextStatementMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ShowNextStatementMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ToggleBreakpointMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ToggleBreakpointMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupActions","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupActions","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupDesignerActions","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupDesignerActions","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupEdit","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupEdit","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupGeneral","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupGeneral","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupMisc","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupMisc","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupOptions","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupOptions","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupView","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::VerbGroupView","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowCommandSetId","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::WorkflowCommandSetId","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowToolBar","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::WorkflowToolBar","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom100Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom100Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom150Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom150Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom200Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom200Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom300Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom300Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom400Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom400Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom50Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom50Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom75Mode","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::Zoom75Mode","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomIn","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ZoomIn","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelCombo","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ZoomLevelCombo","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelListHandler","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ZoomLevelListHandler","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomMenu","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ZoomMenu","System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomOut","System::Workflow::ComponentModel::Design::WorkflowMenuCommands::ZoomOut"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b5ec76c1-68d2-3b35-d845-b98d7b94e472","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Workflow.ComponentModel.Design\\WorkflowMenuCommands.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Workflow.ComponentModel.Design/WorkflowMenuCommands.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WorkflowMenuCommands class | Microsoft Docs","_op_ogTitle":"WorkflowMenuCommands class","description":"Defines a set of  fields that each corresponds to a command function provided by the workflow designers. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Workflow.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.Workflow.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.Workflow.ComponentModel.Design.WorkflowMenuCommands","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.componentmodel.design.workflowmenucommands","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.componentmodel.design.workflowmenucommands","fileRelativePath":"System.Workflow.ComponentModel.Design.WorkflowMenuCommands.html"},"themesRelativePathToOutputRoot":"_themes/"}