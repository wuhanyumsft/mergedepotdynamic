{"content":"    \r\n    <h1 id=\"System_Web_UI_Control\">\r\n      <span class=\"lang-csharp\">Control</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the properties, methods, and events that are shared by all ASP.NET server controls.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.Bindable(true)]\n[System.ComponentModel.DefaultProperty(&quot;ID&quot;)]\n[System.ComponentModel.Design.Serialization.DesignerSerializer(&quot;Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;, &quot;System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.Designer(&quot;System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.DesignerCategory(&quot;Code&quot;)]\n[System.ComponentModel.ToolboxItem(&quot;System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItemFilter(&quot;System.Web.UI&quot;, System.ComponentModel.ToolboxItemFilterType.Require)]\n[System.Web.UI.Themeable(false)]\npublic class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Control</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This is the primary class that you derive from when you develop custom ASP.NET server controls. Control does not have any user interface (UI) specific features. If you are authoring a control that does not have a UI, or combines other controls that render their own UI, derive from Control. If you are authoring a control that does have a UI, derive from <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a> or any control in the <a class=\"xref\" href=\"system.web.ui.webcontrols\" data-linktype=\"relative-path\">System.Web.UI.WebControls</a> namespace that provides an appropriate starting point for your custom control.  </p>\n<p> The Control class is the base class for all ASP.NET server controls, including custom controls, user controls, and pages. ASP.NET pages are instances of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> class, which inherits from the Control class, and that handle requests for files that have an .aspx extension.  </p>\n<p> The Control class can directly or indirectly be used as part of the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.  </p>\n<p> For general information on these topics, see <a href=\"../Topic/Overview%20of%20Web%20Application%20Security%20Threats.md\" data-linktype=\"relative-path\">Overview of Web Application Security Threats</a>, <a href=\"http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05\" data-linktype=\"external\">NIB: Security Policy Best Practices</a>, and <a href=\"../Topic/Key%20Security%20Concepts.md\" data-linktype=\"relative-path\">Key Security Concepts</a>. For more specific information, see <a href=\"../Topic/Securing%20Standard%20Controls.md\" data-linktype=\"relative-path\">Securing Standard Controls</a>, <a href=\"../Topic/How%20to:%20Display%20Safe%20Error%20Messages.md\" data-linktype=\"relative-path\">How to: Display Safe Error Messages</a>, <a href=\"../Topic/How%20to:%20Protect%20Against%20Script%20Exploits%20in%20a%20Web%20Application%20by%20Applying%20HTML%20Encoding%20to%20Strings.md\" data-linktype=\"relative-path\">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</a>, and <a href=\"http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190\" data-linktype=\"external\">Introduction to the Validation Controls</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control__ctor\" data-linktype=\"self-bookmark\">Control()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Adapter\" data-linktype=\"self-bookmark\">Adapter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the browser-specific adapter for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_AppRelativeTemplateSourceDirectory\" data-linktype=\"self-bookmark\">AppRelativeTemplateSourceDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the application-relative virtual directory of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> or <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> object that contains this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_BindingContainer\" data-linktype=\"self-bookmark\">BindingContainer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the control that contains this control&#39;s data binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ChildControlsCreated\" data-linktype=\"self-bookmark\">ChildControlsCreated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the server control&#39;s child controls have been created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClientID\" data-linktype=\"self-bookmark\">ClientID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the control ID for HTML markup that is generated by ASP.NET.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClientIDMode\" data-linktype=\"self-bookmark\">ClientIDMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the algorithm that is used to generate the value of the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClientIDSeparator\" data-linktype=\"self-bookmark\">ClientIDSeparator</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a character value representing the separator character used in the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Context\" data-linktype=\"self-bookmark\">Context</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object associated with the server control for the current Web request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Controls\" data-linktype=\"self-bookmark\">Controls</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object that represents the child controls for a specified server control in the UI hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DataItemContainer\" data-linktype=\"self-bookmark\">DataItemContainer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the naming container if the naming container implements <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DataKeysContainer\" data-linktype=\"self-bookmark\">DataKeysContainer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the naming container if the naming container implements <a class=\"xref\" href=\"system.web.ui.idatakeyscontrol\" data-linktype=\"relative-path\">IDataKeysControl</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DesignMode\" data-linktype=\"self-bookmark\">DesignMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether a control is being used on a design surface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_EnableTheming\" data-linktype=\"self-bookmark\">EnableTheming</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether themes apply to this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_EnableViewState\" data-linktype=\"self-bookmark\">EnableViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Events\" data-linktype=\"self-bookmark\">Events</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of event handler delegates for the control. This property is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_HasChildViewState\" data-linktype=\"self-bookmark\">HasChildViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current server control&#39;s child controls have any saved view-state settings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ID\" data-linktype=\"self-bookmark\">ID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the programmatic identifier assigned to the server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_IdSeparator\" data-linktype=\"self-bookmark\">IdSeparator</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the character used to separate control identifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_IsChildControlStateCleared\" data-linktype=\"self-bookmark\">IsChildControlStateCleared</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether controls contained within this control have control state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_IsTrackingViewState\" data-linktype=\"self-bookmark\">IsTrackingViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the server control is saving changes to its view state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_IsViewStateEnabled\" data-linktype=\"self-bookmark\">IsViewStateEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether view state is enabled for this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_LoadViewStateByID\" data-linktype=\"self-bookmark\">LoadViewStateByID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the control participates in loading its view state by <span class=\"xref\">stem.Web.UI.Control.ID*</span> instead of index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_NamingContainer\" data-linktype=\"self-bookmark\">NamingContainer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the server control&#39;s naming container, which creates a unique namespace for differentiating between server controls with the same <span class=\"xref\">stem.Web.UI.Control.ID*</span> property value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Page\" data-linktype=\"self-bookmark\">Page</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> instance that contains the server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Parent\" data-linktype=\"self-bookmark\">Parent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the server control&#39;s parent control in the page control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_RenderingCompatibility\" data-linktype=\"self-bookmark\">RenderingCompatibility</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies the ASP.NET version that rendered HTML will be compatible with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Site\" data-linktype=\"self-bookmark\">Site</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets information about the container that hosts the current control when rendered on a design surface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SkinID\" data-linktype=\"self-bookmark\">SkinID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the skin to apply to the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_TemplateControl\" data-linktype=\"self-bookmark\">TemplateControl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a reference to the template that contains this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_TemplateSourceDirectory\" data-linktype=\"self-bookmark\">TemplateSourceDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the virtual directory of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> or <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> that contains the current server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_UniqueID\" data-linktype=\"self-bookmark\">UniqueID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the unique, hierarchically qualified identifier for the server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ValidateRequestMode\" data-linktype=\"self-bookmark\">ValidateRequestMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the control checks client input from the browser for potentially dangerous values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ViewState\" data-linktype=\"self-bookmark\">ViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ViewStateIgnoresCase\" data-linktype=\"self-bookmark\">ViewStateIgnoresCase</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object is case-insensitive.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ViewStateMode\" data-linktype=\"self-bookmark\">ViewStateMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the view-state mode of this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Visible\" data-linktype=\"self-bookmark\">Visible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether a server control is rendered as UI on the page.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_AddedControl_System_Web_UI_Control_System_Int32_\" data-linktype=\"self-bookmark\">AddedControl(Control,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called after a child control is added to the <span class=\"xref\">stem.Web.UI.Control.Controls*</span> collection of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_AddParsedSubObject_System_Object_\" data-linktype=\"self-bookmark\">AddParsedSubObject(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ApplyStyleSheetSkin_System_Web_UI_Page_\" data-linktype=\"self-bookmark\">ApplyStyleSheetSkin(Page)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the style properties defined in the page style sheet to the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_BeginRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"self-bookmark\">BeginRenderTracing(TextWriter,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins design-time tracing of rendering data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_BuildProfileTree_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">BuildProfileTree(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gathers information about the server control and delivers it to the <span class=\"xref\">stem.Web.UI.Page.Trace*</span> property to be displayed when tracing is enabled for the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClearCachedClientID\" data-linktype=\"self-bookmark\">ClearCachedClientID()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the cached <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value to <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClearChildControlState\" data-linktype=\"self-bookmark\">ClearChildControlState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the control-state information for the server control&#39;s child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClearChildState\" data-linktype=\"self-bookmark\">ClearChildState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the view-state and control-state information for all the server control&#39;s child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClearChildViewState\" data-linktype=\"self-bookmark\">ClearChildViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the view-state information for all the server control&#39;s child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ClearEffectiveClientIDMode\" data-linktype=\"self-bookmark\">ClearEffectiveClientIDMode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <span class=\"xref\">stem.Web.UI.Control.ClientIDMode*</span> property of the current control instance and of any child controls to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_CreateChildControls\" data-linktype=\"self-bookmark\">CreateChildControls()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_CreateControlCollection\" data-linktype=\"self-bookmark\">CreateControlCollection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object to hold the child controls (both literal and server) of the server control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DataBind\" data-linktype=\"self-bookmark\">DataBind()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Binds a data source to the invoked server control and all its child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DataBind_System_Boolean_\" data-linktype=\"self-bookmark\">DataBind(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Binds a data source to the invoked server control and all its child controls with an option to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DataBindChildren\" data-linktype=\"self-bookmark\">DataBindChildren()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Binds a data source to the server control&#39;s child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables a server control to perform final clean up before it is released from memory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_EndRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"self-bookmark\">EndRenderTracing(TextWriter,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends design-time tracing of rendering data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_EnsureChildControls\" data-linktype=\"self-bookmark\">EnsureChildControls()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the server control contains child controls. If it does not, it creates child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_EnsureID\" data-linktype=\"self-bookmark\">EnsureID()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an identifier for controls that do not have an identifier assigned.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_FindControl_System_String_\" data-linktype=\"self-bookmark\">FindControl(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Searches the current naming container for a server control with the specified <code>id</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_FindControl_System_String_System_Int32_\" data-linktype=\"self-bookmark\">FindControl(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Searches the current naming container for a server control with the specified <code>id</code> and an integer, specified in the <code>pathOffset</code> parameter, which aids in the search. You should not override this version of the <span class=\"xref\">stem.Web.UI.Control.FindControl*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Focus\" data-linktype=\"self-bookmark\">Focus()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets input focus to a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_GetDesignModeState\" data-linktype=\"self-bookmark\">GetDesignModeState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets design-time data for a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_GetRouteUrl_System_Object_\" data-linktype=\"self-bookmark\">GetRouteUrl(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URL that corresponds to a set of route parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_GetRouteUrl_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"self-bookmark\">GetRouteUrl(RouteValueDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URL that corresponds to a set of route parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_GetRouteUrl_System_String_System_Object_\" data-linktype=\"self-bookmark\">GetRouteUrl(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URL that corresponds to a set of route parameters and a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_GetRouteUrl_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"self-bookmark\">GetRouteUrl(String,RouteValueDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URL that corresponds to a set of route parameters and a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_GetUniqueIDRelativeTo_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">GetUniqueIDRelativeTo(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the prefixed portion of the <span class=\"xref\">stem.Web.UI.Control.UniqueID*</span> property of the specified control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_HasControls\" data-linktype=\"self-bookmark\">HasControls()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines if the server control contains any child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_HasEvents\" data-linktype=\"self-bookmark\">HasEvents()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether events are registered for the control or any child controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_IsLiteralContent\" data-linktype=\"self-bookmark\">IsLiteralContent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines if the server control holds only literal content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_LoadControlState_System_Object_\" data-linktype=\"self-bookmark\">LoadControlState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Restores control-state information from a previous page request that was saved by the <span class=\"xref\">stem.Web.UI.Control.SaveControlState*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Restores view-state information from a previous page request that was saved by the <span class=\"xref\">stem.Web.UI.Control.SaveViewState*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_MapPathSecure_System_String_\" data-linktype=\"self-bookmark\">MapPathSecure(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the physical path that a virtual path, either absolute or relative, maps to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OnBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBubbleEvent(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the event for the server control is passed up the page&#39;s UI server control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OnDataBinding_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDataBinding(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OnInit_System_EventArgs_\" data-linktype=\"self-bookmark\">OnInit(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OnLoad_System_EventArgs_\" data-linktype=\"self-bookmark\">OnLoad(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OnPreRender_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPreRender(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OnUnload_System_EventArgs_\" data-linktype=\"self-bookmark\">OnUnload(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Unload\" data-linktype=\"relative-path\">Unload</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_OpenFile_System_String_\" data-linktype=\"self-bookmark\">OpenFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read a file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_RaiseBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">RaiseBubbleEvent(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Assigns any sources of the event and its information to the control&#39;s parent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_RemovedControl_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">RemovedControl(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called after a child control is removed from the <span class=\"xref\">stem.Web.UI.Control.Controls*</span> collection of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Render_System_Web_UI_HtmlTextWriter_\" data-linktype=\"self-bookmark\">Render(HtmlTextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends server control content to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, which writes the content to be rendered on the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_RenderChildren_System_Web_UI_HtmlTextWriter_\" data-linktype=\"self-bookmark\">RenderChildren(HtmlTextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Outputs the content of a server control&#39;s children to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, which writes the content to be rendered on the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_\" data-linktype=\"self-bookmark\">RenderControl(HtmlTextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Outputs server control content to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object and stores tracing information about the control if tracing is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_System_Web_UI_Adapters_ControlAdapter_\" data-linktype=\"self-bookmark\">RenderControl(HtmlTextWriter,ControlAdapter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Outputs server control content to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object using a provided <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ResolveAdapter\" data-linktype=\"self-bookmark\">ResolveAdapter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the control adapter responsible for rendering the specified control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ResolveClientUrl_System_String_\" data-linktype=\"self-bookmark\">ResolveClientUrl(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a URL that can be used by the browser.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_ResolveUrl_System_String_\" data-linktype=\"self-bookmark\">ResolveUrl(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a URL into one that is usable on the requesting client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SaveControlState\" data-linktype=\"self-bookmark\">SaveControlState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves any server control state changes that have occurred since the time the page was posted back to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SaveViewState\" data-linktype=\"self-bookmark\">SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves any server control view-state changes that have occurred since the time the page was posted back to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"self-bookmark\">SetDesignModeState(IDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets design-time data for a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SetRenderMethodDelegate_System_Web_UI_RenderMethod_\" data-linktype=\"self-bookmark\">SetRenderMethodDelegate(RenderMethod)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Assigns an event handler delegate to render the server control and its content into its parent control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SetTraceData_System_Object_System_Object_\" data-linktype=\"self-bookmark\">SetTraceData(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets trace data for design-time tracing of rendering data, using the trace data key and the trace data value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_SetTraceData_System_Object_System_Object_System_Object_\" data-linktype=\"self-bookmark\">SetTraceData(Object,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets trace data for design-time tracing of rendering data, using the traced object, the trace data key, and the trace data value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_TrackViewState\" data-linktype=\"self-bookmark\">TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes tracking of view-state changes to the server control so they can be stored in the server control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object. This object is accessible through the <span class=\"xref\">stem.Web.UI.Control.ViewState*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_DataBinding\" data-linktype=\"self-bookmark\">DataBinding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the server control binds to a data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Disposed\" data-linktype=\"self-bookmark\">Disposed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a server control is released from memory, which is the last stage of the server control lifecycle when an ASP.NET page is requested.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Init\" data-linktype=\"self-bookmark\">Init</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the server control is initialized, which is the first step in its lifecycle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Load\" data-linktype=\"self-bookmark\">Load</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the server control is loaded into the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_PreRender\" data-linktype=\"self-bookmark\">PreRender</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object is loaded but prior to rendering.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_Unload\" data-linktype=\"self-bookmark\">Unload</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the server control is unloaded from memory.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IControlBuilderAccessor_ControlBuilder\" data-linktype=\"self-bookmark\">IControlBuilderAccessor.ControlBuilder</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlBuilderAccessor.ControlBuilder*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_GetDesignModeState\" data-linktype=\"self-bookmark\">IControlDesignerAccessor.GetDesignModeState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.GetDesignModeState*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"self-bookmark\">IControlDesignerAccessor.SetDesignModeState(IDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.SetDesignModeState*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetOwnerControl_System_Web_UI_Control_\" data-linktype=\"self-bookmark\">IControlDesignerAccessor.SetOwnerControl(Control)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.SetOwnerControl*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_UserData\" data-linktype=\"self-bookmark\">IControlDesignerAccessor.UserData</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.UserData*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_DataBindings\" data-linktype=\"self-bookmark\">IDataBindingsAccessor.DataBindings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IDataBindingsAccessor.DataBindings*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_HasDataBindings\" data-linktype=\"self-bookmark\">IDataBindingsAccessor.HasDataBindings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IDataBindingsAccessor.HasDataBindings*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_Expressions\" data-linktype=\"self-bookmark\">IExpressionsAccessor.Expressions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IExpressionsAccessor.Expressions*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_HasExpressions\" data-linktype=\"self-bookmark\">IExpressionsAccessor.HasExpressions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IExpressionsAccessor.HasExpressions*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_Control_System_Web_UI_IParserAccessor_AddParsedSubObject_System_Object_\" data-linktype=\"self-bookmark\">IParserAccessor.AddParsedSubObject(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IParserAccessor.AddParsedSubObject*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control__ctor\">\r\n    \r\n            <a id=\"System_Web_UI_Control__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Control()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Control ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Adapter\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Adapter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Adapter</div>        \r\n          </div>\r\n    \r\n            <p>Gets the browser-specific adapter for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> for this control. If the target browser does not require an adapter, returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET Web pages are usable across a wide range of devices and browsers that can request information from the Web. The Adapter property returns the <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> object that renders the control on the requesting device or browser&#39;s screen.  </p>\n<p> For more information about adapters, see <a href=\"../Topic/Architectural%20Overview%20of%20Adaptive%20Control%20Behavior.md\" data-linktype=\"relative-path\">Architectural Overview of Adaptive Control Behavior</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_AppRelativeTemplateSourceDirectory\">\r\n    \r\n            <a id=\"System_Web_UI_Control_AppRelativeTemplateSourceDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppRelativeTemplateSourceDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the application-relative virtual directory of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> or <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> object that contains this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AppRelativeTemplateSourceDirectory { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The application-relative virtual directory of the page or user control that contains this control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AppRelativeTemplateSourceDirectory property contains the application-relative path to the page or user control that contains the current control. For example, if the Web page resides at <a href=\"http://www.contoso.com/application/subdirectory\" data-linktype=\"external\">http://www.contoso.com/application/subdirectory</a>, the AppRelativeTemplateSourceDirectory property returns &quot;~/subdirectory&quot;.  </p>\n<p> To return the virtual path (&quot;application/subdirectory&quot;), use the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateSourceDirectory_\" data-linktype=\"relative-path\">TemplateSourceDirectory</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_BindingContainer\">\r\n    \r\n            <a id=\"System_Web_UI_Control_BindingContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindingContainer</div>        \r\n          </div>\r\n    \r\n            <p>Gets the control that contains this control&#39;s data binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.Control BindingContainer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> that contains this control&#39;s data binding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BindingContainer property contains a reference to the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object that contains the data-binding information for the current control.  </p>\n<p> The BindingContainer property is the same as the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_NamingContainer_\" data-linktype=\"relative-path\">NamingContainer</a> property, except when the control is part of a template. In that case, the BindingContainer property is set to the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> that defines the template.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ChildControlsCreated\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ChildControlsCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ChildControlsCreated</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the server control&#39;s child controls have been created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ChildControlsCreated { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if child controls have been created; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an override of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_\" data-linktype=\"relative-path\">OnDataBinding</a> method of a custom <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a> control. To ensure that child controls are not created until data binding occurs again, the ChildControlsCreated property is set to <code>true</code> after the <a class=\"xref\" href=\"system.web.ui.webcontrols.repeateritem\" data-linktype=\"relative-path\">RepeaterItem</a> objects are created and added to the control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"TemplatedDataBoundControl3#1\">using System;\nusing System.Collections;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n\nnamespace TemplateControlSamples\n{\n    [ParseChildren(true)]\n    public class CustomRepeater : Repeater\n    {\n\n        // Override to prevent LiteralControls from being added as children.\n        protected override void AddParsedSubObject(object o)\n        {\n        }\n\n        // Override to create repeated items.\n        protected override void CreateChildControls()\n        {\n            object o = ViewState[&quot;NumItems&quot;];\n            if (o != null)\n            {\n                // Clear any existing child controls.\n                Controls.Clear();\n\n                int numItems = (int)o;\n                for (int i = 0; i &lt; numItems; i++)\n                {\n                    // Create an item.\n                    RepeaterItem item = new RepeaterItem(i, ListItemType.Item);\n                    // Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(item);\n                    // Add the item to the ControlCollection.\n                    Controls.Add(item);\n                }\n            }\n        }\n\n        // Override to create the repeated items from the DataSource.\n        protected override void OnDataBinding(EventArgs e)\n        {\n            base.OnDataBinding(e);\n            if (DataSource != null)\n            {\n                // Iterate over an ICollection DataSource, creating a new item for each data item.\n                IEnumerator dataEnum = ((ICollection)base.DataSource).GetEnumerator();\n                int i = 0;\n                while (dataEnum.MoveNext())\n                {\n                    // Create an item.\n                    RepeaterItem item = new RepeaterItem(i, ListItemType.Item);\n                    item.DataItem = dataEnum.Current;\n                    // Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(this);\n                    // Add the item to the ControlCollection.\n                    Controls.Add(item);\n\n                    i++;\n                }\n\n                // Prevent child controls from being created again.\n                ChildControlsCreated = true;\n                // Store the number of items created in view state for postback scenarios.\n                ViewState[&quot;NumItems&quot;] = i;\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"TemplatedDataBoundControl3#1\">Imports System\nImports System.Collections\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\nNamespace TemplateControlSamplesVB\n\n    &lt;ParseChildren(True)&gt; _\n    Public Class CustomRepeaterVB : Inherits Repeater\n\n        &#39; Override to prevent LiteralControls from being added as children.\n        Protected Overrides Sub AddParsedSubObject(ByVal O As Object)\n        End Sub\n\n        &#39; Override to create repeated items.\n        Protected Overrides Sub CreateChildControls()\n            Dim O As Object = ViewState(&quot;NumItems&quot;)\n            If Not (O Is Nothing) Then\n                &#39; Clear any existing child controls.\n                Controls.Clear()\n\n                Dim i As Integer\n                Dim NumItems As Integer = CInt(O)\n                For i = 0 To NumItems - 1\n                    &#39; Create an item.\n                    Dim Item As RepeaterItem = New RepeaterItem(i, ListItemType.Item)\n                    &#39; Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(Item)\n                    &#39; Add the item to the ControlCollection.\n                    Controls.Add(Item)\n                Next\n            End If\n        End Sub\n\n        &#39; Override to create the repeated items from the DataSource.\n        Protected Overrides Sub OnDataBinding(ByVal E As EventArgs)\n            MyBase.OnDataBinding(E)\n\n            If Not DataSource Is Nothing Then\n\n                &#39; Iterate over the DataSource, creating a new item for each data item.\n                Dim DataEnum As IEnumerator = DataSource.GetEnumerator()\n                Dim i As Integer = 0\n                Do While (DataEnum.MoveNext())\n\n                    &#39; Create an item.\n                    Dim Item As RepeaterItem = New RepeaterItem(i, ListItemType.Item)\n                    &#39; Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(Item)\n                    &#39; Add the item to the ControlCollection.\n                    Controls.Add(Item)\n\n                    i = i + 1\n                Loop\n\n                &#39; Prevent child controls from being created again.\n                ChildControlsCreated = True\n                &#39; Store the number of items created in view state for postback scenarios.\n                ViewState(&quot;NumItems&quot;) = i\n            End If\n        End Sub\n    End Class\n\nEnd Namespace\n</code></pre><p> The following example demonstrates how to use the custom repeater control in a Web page.  </p>\n<pre><code class=\"lang-cs\" name=\"TemplatedDataBoundControl3#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Register TagPrefix=&quot;Samples&quot; Namespace=&quot;TemplateControlSamples&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        ArrayList a = new ArrayList();\n        a.Add(&quot;data item 1&quot;);\n        a.Add(&quot;data item 2&quot;);\n        Repeater1.DataSource = a;\n        Page.DataBind();\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ChildControlsCreated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;Samples:CustomRepeater ID=&quot;Repeater1&quot; runat=&quot;server&quot;&gt;\n        &lt;ItemTemplate&gt;&lt;%# Container.DataItem %&gt; &lt;br /&gt;&lt;/ItemTemplate&gt;\n        &lt;/Samples:CustomRepeater&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"TemplatedDataBoundControl3#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Register TagPrefix=&quot;Samples&quot; Namespace=&quot;TemplateControlSamplesVB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n        \n        Dim a As New ArrayList()\n        a.Add(&quot;data item 1&quot;)\n        a.Add(&quot;data item 2&quot;)\n        Repeater1.DataSource = a\n        Page.DataBind()\n\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ChildControlsCreated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        &lt;Samples:CustomRepeaterVB ID=&quot;Repeater1&quot; runat=&quot;server&quot;&gt;\n        &lt;ItemTemplate&gt;&lt;%# Container.DataItem %&gt; &lt;br /&gt;&lt;/ItemTemplate&gt;\n        &lt;/Samples:CustomRepeaterVB&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClientID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClientID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientID</div>        \r\n          </div>\r\n    \r\n            <p>Gets the control ID for HTML markup that is generated by ASP.NET.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ClientID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The control ID for HTML markup that is generated by ASP.NET.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a Web server control is rendered as an HTML element, the <code>id</code> attribute of the HTML element is set to the value of the ClientID property. The ClientID value is often used to access the HTML element in client script by using the <code>document.getElementById</code> method. The ID is also often used in CSS rules to specify elements to style. For example, the following CSS style rule selects all <code>span</code> elements that have the <code>id</code> attribute value of <code>ProductIDLabel</code> and sets their <code>background-color</code> attribute to <code>white</code>:  </p>\n<pre><code>span#ProductIDLabel { background-color: white; }  \n</code></pre><p> ASP.NET provides multiple algorithms for how to generate the ClientID property value. You select which algorithm to use for a control by setting its <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> property. The algorithms are identified by the <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> enumeration values that are listed in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>The ClientID value is generated by concatenating the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> values of each parent naming container with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the control. In data-binding scenarios where multiple instances of a control are rendered, an incrementing value is inserted in front of the control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value. Each segment is separated by an underscore character (_). This algorithm was used in versions of ASP.NET earlier than ASP.NET 4.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>The ClientID value is set to the value of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property. If the control is a naming container, the control is used as the top of the hierarchy of naming containers for any controls that it contains.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>This algorithm is used for controls that are in data-bound controls. The ClientID value is generated by concatenating the ClientID value of the parent naming container with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the control. If the control is a data-bound control that generates multiple rows, the value of the data field specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol#System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix_\" data-linktype=\"relative-path\">ClientIDRowSuffix</a> property is added at the end. For the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, multiple data fields can be specified. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol#System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix_\" data-linktype=\"relative-path\">ClientIDRowSuffix</a> property is blank, a sequential number is added at the end instead of a data-field value. Each segment is separated by an underscore character (_).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>The control inherits the <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> setting of its <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_NamingContainer_\" data-linktype=\"relative-path\">NamingContainer</a> control.</td>\n</tr>\n</tbody>\n</table>\n<p> The default value of <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> for a page is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>. The default value of <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> for a control is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>. Because the default for controls is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>, the default generation mode is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>. (However, if you use Visual Studio to convert a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the site default to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> in the Web.config file.)  </p>\n<p> For more information, see <a href=\"../Topic/ASP.NET%20Web%20Server%20Control%20Identification.md\" data-linktype=\"relative-path\">ASP.NET Web Server Control Identification</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following examples show a Web user control that is inside a content page for a master page. The user control contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control and a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control. The text that is displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control is determined by the value that the user selects from the <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control. The text value is set through client script so that the Web page does not have to post back to the server in order to set this value. To get a reference to the HTML element that is rendered for the <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control in client script, you must know the value of the control&#39;s ClientID property. However, because the user control can be put anywhere in a Web page, it is impossible to know in advance which naming containers will contain the controls. To make sure that the ClientID value will be the same as the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value, the code sets the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> value to <a class=\"xref\" href=\"system.web.ui.webcontrols.validatordisplay\" data-linktype=\"relative-path\">ValidatorDisplay</a>.  </p>\n<p> The following example shows the user control.  </p>\n<p> The following example shows the content page that contains the user control.  </p>\n<p> The following example shows the master page that contains the content page.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClientIDMode\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClientIDMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientIDMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the algorithm that is used to generate the value of the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></div>\r\n                  </div>\r\n                  <p>A value that indicates how the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property is generated. The default is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET provides multiple algorithms for how to generate the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> property value. You select which algorithm to use for a control by setting its ClientIDMode property. The algorithms are identified by the <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> enumeration values that are listed in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value is generated by concatenating the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> values of each parent naming container with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the control. In data-binding scenarios where multiple instances of a control are rendered, an incrementing value is inserted in front of the control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value. Each segment is separated by an underscore character (_). This algorithm was used in versions of ASP.NET earlier than ASP.NET 4.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value is set to the value of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property. If the control is a naming container, the control is used as the top of the hierarchy of naming containers for any controls that it contains.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>This algorithm is used for controls that are in data-bound controls. The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value is generated by concatenating the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value of the parent naming container with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the control. If the control is a data-bound control that generates multiple rows, the value of the data field specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol#System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix_\" data-linktype=\"relative-path\">ClientIDRowSuffix</a> property is added at the end. For the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, multiple data fields can be specified. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol#System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix_\" data-linktype=\"relative-path\">ClientIDRowSuffix</a> property is blank, a sequential number is added at the end instead of a data-field value. This number begins at zero and is incremented by 1 for each row. Each segment is separated by an underscore character (_).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a></td>\n<td>The control inherits the <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> setting of its <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_NamingContainer_\" data-linktype=\"relative-path\">NamingContainer</a> control.</td>\n</tr>\n</tbody>\n</table>\n<p> The default value of ClientIDMode for a page is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>. The default value of ClientIDMode for a control is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>. Because the default for controls is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>, the default generation mode is <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>. (However, if you use Visual Studio to convert a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the site default to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> in the Web.config file.)  </p>\n<p> For more information, see <a href=\"../Topic/ASP.NET%20Web%20Server%20Control%20Identification.md\" data-linktype=\"relative-path\">ASP.NET Web Server Control Identification</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> controls that are contained in a <a class=\"xref\" href=\"system.web.ui.webcontrols.listview\" data-linktype=\"relative-path\">ListView</a> control. On the <a class=\"xref\" href=\"system.web.ui.webcontrols.listview\" data-linktype=\"relative-path\">ListView</a> control, the ClientIDMode property is set to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> and the <a class=\"xref\" href=\"system.web.ui.webcontrols.listview#System_Web_UI_WebControls_ListView_ClientIDRowSuffix_\" data-linktype=\"relative-path\">ClientIDRowSuffix</a> property is set to <code>ProductID</code>. In the rendered HTML, this creates three <code>span</code> elements that correspond to three <code>ProductIDLabel</code> controls. When the page runs, the <code>id</code> attributes for the <code>span</code> elements are set to the following values:  </p>\n<ul>\n<li><p><code>ListView1_ProductIDLabel_1</code>  </p>\n</li>\n<li><p><code>ListView1_ProductIDLabel_34</code>  </p>\n</li>\n<li><p><code>ListView1_ProductIDLabel_43</code></p>\n</li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClientIDSeparator\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClientIDSeparator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientIDSeparator</div>        \r\n          </div>\r\n    \r\n            <p>Gets a character value representing the separator character used in the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected char ClientIDSeparator { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>Always returns the underscore character (_).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value is generated by concatenating the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the control and the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID_\" data-linktype=\"relative-path\">UniqueID</a> value of its parent control. Each part of the generated <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property is separated by the ClientIDSeparator property value. The value always returns an underscore (_).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Context\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Context_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Context</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object associated with the server control for the current Web request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.HttpContext Context { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </div>\r\n                  <p>The specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object associated with the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gives you access to the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object for the current Web request. The object provides properties that access the <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Application_\" data-linktype=\"relative-path\">Application</a>, <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Session_\" data-linktype=\"relative-path\">Session</a>, <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Request_\" data-linktype=\"relative-path\">Request</a>, <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Response_\" data-linktype=\"relative-path\">Response</a> and other objects that contain information about the current HTTP request. It also provides methods that allow you to obtain configuration information and set or clear errors for the request.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"System.Web.UI.Control_Context_OnInit_ResolveUrl#1\">        &lt;System.Security.Permissions.PermissionSetAttribute( _\n            System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n        Protected Overrides Function OnBubbleEvent(ByVal sender As Object, ByVal e As EventArgs) As Boolean\n\n            &#39; Use the Context property to write text to the TraceContext object\n            &#39; associated with the current request.         \n            Context.Trace.Write(&quot;The ParentControl&#39;s OnBubbleEvent method is called.&quot;)\n            Context.Trace.Write(&quot;The Source of event is: &quot; + sender.ToString())\n\n            Return True\n        End Function &#39;OnBubbleEvent\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.Control_Context_OnInit_ResolveUrl#1\">   protected override bool OnBubbleEvent(object sender, EventArgs e)\n   {\n\n      // Use the Context property to write text to the TraceContext object\n      // associated with the current request.\n      Context.Trace.Write(&quot;The ParentControl&#39;s OnBubbleEvent method is called.&quot;);\n      Context.Trace.Write(&quot;The Source of event is: &quot; + sender.ToString());\n\n      return true;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Controls\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Controls_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Controls</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object that represents the child controls for a specified server control in the UI hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ControlCollection Controls { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a></div>\r\n                  </div>\r\n                  <p>The collection of child controls for the specified server control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>On an ASP.NET page, when controls are added declaratively between the opening and closing tags of a server control, ASP.NET automatically adds the controls to the containing server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a>. Any HTML tags or text strings that are not processed on the server are treated as <a class=\"xref\" href=\"system.web.ui.literalcontrol\" data-linktype=\"relative-path\">LiteralControl</a> objects. These are added to the collection like other server controls.  </p>\n<p> The Controls property allows you programmatic access to the instance of the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class for any server control. You can add controls to the collection, remove controls from the collection, or iterate through the server controls in the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to add child controls to a server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object through its Controls property.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Control.Controls Example#1\">Controls.Add(new LiteralControl(&quot;&lt;h3&gt;Value: &quot;));\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Control.Controls Example#1\"> Controls.Add(New LiteralControl(&quot;&lt;h3&gt;Value: &quot;))\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DataItemContainer\">\r\n    \r\n            <a id=\"System_Web_UI_Control_DataItemContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataItemContainer</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the naming container if the naming container implements <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.Control DataItemContainer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The naming container. In a hierarchy of naming containers that implement <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a>, this property returns the naming container at the top of the hierarchy, or <code>null</code> if the current <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object is not in a naming container that implements <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DataKeysContainer\">\r\n    \r\n            <a id=\"System_Web_UI_Control_DataKeysContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataKeysContainer</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the naming container if the naming container implements <a class=\"xref\" href=\"system.web.ui.idatakeyscontrol\" data-linktype=\"relative-path\">IDataKeysControl</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.Control DataKeysContainer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The naming container. In a hierarchy of naming containers that implement <a class=\"xref\" href=\"system.web.ui.idatakeyscontrol\" data-linktype=\"relative-path\">IDataKeysControl</a>, the property returns the naming container at the top of the hierarchy, or <code>null</code> if the current <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object is not in a naming container that implements <a class=\"xref\" href=\"system.web.ui.idatakeyscontrol\" data-linktype=\"relative-path\">IDataKeysControl</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DesignMode\">\r\n    \r\n            <a id=\"System_Web_UI_Control_DesignMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesignMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether a control is being used on a design surface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool DesignMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control is being used in a designer; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DesignMode property returns <code>true</code> to indicate that the control is being used in the context of a designer. Your custom controls can use this property when design-time behavior is different than run-time behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_EnableTheming\">\r\n    \r\n            <a id=\"System_Web_UI_Control_EnableTheming_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableTheming</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether themes apply to this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnableTheming { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to use themes; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <code>Page_PreInit</code> event has already occurred.  </p>\n<p> - or -  </p>\n<p> The control has already been added to the <code>Controls</code> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EnableTheming property indicates whether themes are enabled for a specified control. When the EnableTheming property is <code>true</code>, the application&#39;s theme directory is searched for control skins to apply. If no skin for the particular control exists in the theme directory, skins are not applied.  </p>\n<p> When the EnableTheming property is <code>false</code>, the theme directory is not searched and the content of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SkinID_\" data-linktype=\"relative-path\">SkinID</a> property is not used.  </p>\n<p> Themes can be enabled at the page, container, or control level. A control can override the EnableTheming value set by its parent control, or by the containing page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_EnableViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_EnableViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnableViewState { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the server control maintains its view state; otherwise <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>View state enables a server control to maintain its state across HTTP requests. View state for a control is enabled if all of the following conditions are met:  </p>\n<ul>\n<li><p>The EnableViewState property for the page is set to <code>true</code>.  </p>\n</li>\n<li><p>The EnableViewState property for the control is set to <code>true</code>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateMode_\" data-linktype=\"relative-path\">ViewStateMode</a> property for the control is set to <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a> or inherits the <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a> setting.  </p>\n<p>For more information, see the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateMode_\" data-linktype=\"relative-path\">ViewStateMode</a> property.  </p>\n<p>A server control&#39;s view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET uses an instance of the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> class to store the property values. The values are then passed as a variable to a hidden field when subsequent requests are processed. For more information about view state, see <a href=\"../Topic/ASP.NET%20View%20State%20Overview.md\" data-linktype=\"relative-path\">ASP.NET View State Overview</a>.  </p>\n<p>There are times when it is appropriate to disable view state, particularly to improve application performance. For example, if you are loading a database request into a server control, set this property to <code>false</code>. If you do not, processor time will be wasted loading view state into the server control that will only be overridden by the database query. If EnableViewState is <code>false</code>, you can use the control state to persist property information that is specific to a control and cannot be turned off like the view state property. For more information on the difference between control state and view state, see <a href=\"../Topic/Control%20State%20vs.%20View%20State%20Example.md\" data-linktype=\"relative-path\">Control State vs. View State Example</a>.  </p>\n<p>For information about how to enable or disable view state declaratively for an ASP.NET page, see .</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the EnableViewState property to <code>false</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"Control_StateManagement#7\">      Sub Page_Load(sender As Object, e As System.EventArgs)\n         DataBind()\n         &#39; Set EnableViewState to false to disable saving of view state \n         &#39; information.\n         myControl.EnableViewState = False\n         If Not IsPostBack Then\n            display.Enabled = False\n         End If \n      End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Control_StateManagement#7\">void Page_Load(object sender, System.EventArgs e)\n{\n      DataBind();\n      // Set EnableViewState to false to disable saving of view state \n      // information.\n      myControl.EnableViewState = false;\n      if (!IsPostBack)\n         display.Enabled = false;\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Events\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Events_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Events</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of event handler delegates for the control. This property is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.ComponentModel.EventHandlerList Events { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.eventhandlerlist\" data-linktype=\"relative-path\">EventHandlerList</a></div>\r\n                  </div>\r\n                  <p>The list of event handler delegates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is of type <a class=\"xref\" href=\"system.componentmodel.eventhandlerlist\" data-linktype=\"relative-path\">EventHandlerList</a>, which uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries with this property will be slow.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an event, named <code>Click</code>, that adds and removes handlers from the control&#39;s <a class=\"xref\" href=\"system.componentmodel.eventhandlerlist\" data-linktype=\"relative-path\">EventHandlerList</a> collection when the event is called from a page.  </p>\n<p> <strong>Note</strong> This example optimizes how a control adds and removes events from the list of them that the control maintains. If you create custom control and want to define an event, use code similar to this. This technique can be used in C#, but not in Visual Basic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.Page_VerifyRenderingInServerForm#1\">        // Create an event that adds and removes handlers from the\n        // Control.Events collection when this event is called from\n        // a participating page.\n        public event EventHandler Click {\n            add {\n                Events.AddHandler(EventClick, value);\n            }\n            remove {\n                Events.RemoveHandler(EventClick, value);\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_HasChildViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_HasChildViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasChildViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current server control&#39;s child controls have any saved view-state settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool HasChildViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if any child controls have saved view state information; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can avoid unnecessary calls to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState_\" data-linktype=\"relative-path\">ClearChildViewState</a> method by using this property to verify that any child controls of the server control are storing view-state information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"Control_StateManagement#5\">      public override void DataBind() \n      {\n         base.OnDataBinding(EventArgs.Empty);\n         // Reset the control&#39;s state.\n         Controls.Clear();\n         // Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         if (HasChildViewState)\n            ClearChildViewState();\n         ChildControlsCreated = true;\n         if (!IsTrackingViewState)\n            TrackViewState();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_StateManagement#5\">      Public Overrides Sub DataBind()\n         MyBase.OnDataBinding(EventArgs.Empty)\n         &#39; Reset the control&#39;s state.\n         Controls.Clear()\n         &#39; Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         If HasChildViewState Then\n            ClearChildViewState()\n         End If\n         ChildControlsCreated = True\n         If Not IsTrackingViewState Then\n            TrackViewState()\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ID</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the programmatic identifier assigned to the server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The programmatic identifier assigned to the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property on a server control provides you with programmatic access to the server control&#39;s properties, events, and methods. This property can be set by Web developers by declaring an ID attribute in the opening tag of an ASP.NET server control.  </p>\n<p> If this property is not specified for a server control, either declaratively or programmatically, you can obtain a reference to the control through its parent control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Only combinations of alphanumeric characters and the underscore character ( _ ) are valid values for this property. Including spaces or other invalid characters will cause an ASP.NET page parser error.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"Control_Sample#2\">void Page_Init(object sender,EventArgs e)\n{\n   // Add a event Handler for &#39;Init&#39;.\n   myControl.Init += new System.EventHandler(Control_Init);\n}\n\nvoid Control_Init(object sender,EventArgs e)\n{ \n  Response.Write(&quot;The ID of the object initially : &quot; + myControl.ID);      \n  // Change the ID property.\n   myControl.ID=&quot;TestControl&quot;;\n   Response.Write(&quot;&lt;br /&gt;The changed ID : &quot; + myControl.ID);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_Sample#2\">Sub Page_Init(sender As Object, e As EventArgs)\n   &#39; Add a event Handler for &#39;Init&#39;.\n   AddHandler myControl.Init, AddressOf Control_Init\nEnd Sub\n\nSub Control_Init(sender As Object, e As EventArgs)\n   Response.Write((&quot;The ID of the object initially : &quot; + myControl.ID))\n   &#39; Change the ID property.\n   myControl.ID = &quot;TestControl&quot;\n   Response.Write((&quot;&lt;br /&gt;The changed ID : &quot; + myControl.ID))\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_IdSeparator\">\r\n    \r\n            <a id=\"System_Web_UI_Control_IdSeparator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IdSeparator</div>        \r\n          </div>\r\n    \r\n            <p>Gets the character used to separate control identifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected char IdSeparator { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The separator character. The default is &quot;$&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The character contained in the IdSeparator property is used to separate the control identifiers for child controls. The ID separator character is appended to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_IsChildControlStateCleared\">\r\n    \r\n            <a id=\"System_Web_UI_Control_IsChildControlStateCleared_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsChildControlStateCleared</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether controls contained within this control have control state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsChildControlStateCleared { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if children of this control do not use control state; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_IsTrackingViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_IsTrackingViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsTrackingViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the server control is saving changes to its view state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsTrackingViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control is marked to save its state; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a sample custom server control that uses this property, see <a href=\"../Topic/Templated%20Server%20Control%20Example.md\" data-linktype=\"relative-path\">Templated Server Control Example</a></p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method in a custom ASP.NET server control. It begins by calling the base <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_\" data-linktype=\"relative-path\">OnDataBinding</a> method and then uses the <code>ControlCollection</code> object. <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method to delete all the child controls and the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState_\" data-linktype=\"relative-path\">ClearChildViewState</a> method to delete any saved view-state settings for those child controls. Finally, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated_\" data-linktype=\"relative-path\">ChildControlsCreated</a> property is set to <code>true</code>. The control then uses the IsTrackingViewState property to determine whether view-state change tracking is enabled for the control. If it is not enabled, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TrackViewState_\" data-linktype=\"relative-path\">TrackViewState</a> method is called.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_StateManagement#4\">      public override void DataBind() \n      {\n         base.OnDataBinding(EventArgs.Empty);\n         // Reset the control&#39;s state.\n         Controls.Clear();\n         // Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         if (HasChildViewState)\n            ClearChildViewState();\n         ChildControlsCreated = true;\n         if (!IsTrackingViewState)\n            TrackViewState();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_StateManagement#4\">      Public Overrides Sub DataBind()\n         MyBase.OnDataBinding(EventArgs.Empty)\n         &#39; Reset the control&#39;s state.\n         Controls.Clear()\n         &#39; Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         If HasChildViewState Then\n            ClearChildViewState()\n         End If\n         ChildControlsCreated = True\n         If Not IsTrackingViewState Then\n            TrackViewState()\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_IsViewStateEnabled\">\r\n    \r\n            <a id=\"System_Web_UI_Control_IsViewStateEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsViewStateEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether view state is enabled for this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsViewStateEnabled { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if view state is enabled for the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>View state can be enabled at the page, container, or control level. When view state is disabled at the page or container level, view state is disabled for all controls contained by the page or container. The IsViewStateEnabled property indicates whether view state is enabled by pages, containers, or controls.  </p>\n<p> It is possible for the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property and the IsViewStateEnabled property to be different. For example, if the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> containing the control has view state disabled, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property can be <code>true</code> while the IsViewStateEnabled property is <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_LoadViewStateByID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_LoadViewStateByID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadViewStateByID</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the control participates in loading its view state by <span class=\"xref\">stem.Web.UI.Control.ID*</span> instead of index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool LoadViewStateByID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control loads its view state by <span class=\"xref\">stem.Web.UI.Control.ID*</span>; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, when a parent control loads view state into child controls it creates, it does this by the position of each child control in the parent control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection. When view state is initially applied, all child controls might not have been created. In this case, the view state for controls not yet created is saved, and applied when the child controls are created later.  </p>\n<p> For a parent control to apply view state to its child controls, two conditions must be met:  </p>\n<ul>\n<li><p>On postback, the parent control must create the child controls in exactly the same order as the previous request so that the order of the controls remains consistent.  </p>\n</li>\n<li><p>After postback, any child controls created must be added to the end of the parent control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection.  </p>\n<p>If these two conditions cannot be met, as in the case of the delayed creation of a child control, the parent control can load view state by using <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a>. To set the LoadViewStateByID property to <code>true</code>, use the <a class=\"xref\" href=\"system.web.ui.viewstatemodebyidattribute\" data-linktype=\"relative-path\">ViewStateModeByIdAttribute</a> metadata attribute for the parent control.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_NamingContainer\">\r\n    \r\n            <a id=\"System_Web_UI_Control_NamingContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NamingContainer</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the server control&#39;s naming container, which creates a unique namespace for differentiating between server controls with the same <span class=\"xref\">stem.Web.UI.Control.ID*</span> property value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.Control NamingContainer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The server control&#39;s naming container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each page in an ASP.NET Web application contains a hierarchy of controls. This hierarchy is not dependent on whether a control generates UI visible to the user. The naming container for a given control is the parent control above it in the hierarchy that implements the <a class=\"xref\" href=\"system.web.ui.inamingcontainer\" data-linktype=\"relative-path\">INamingContainer</a> interface. A server control that implements this interface creates a unique namespace for the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property values of its child server controls. You can use the NamingContainer property of a naming container&#39;s child control to get a reference to its parent container.  </p>\n<p> Creating a unique namespace for server controls is particularly important when you bind Web server controls to data, such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> server controls. When multiple entries in the data source create multiple instances of a server control that is a child of the repeating control, the naming container ensures that each instance of these child controls have <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID_\" data-linktype=\"relative-path\">UniqueID</a> property values that do not conflict. The default naming container for a page is the instance of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> class that is generated when that page is requested.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> property contains the value that is rendered as the element&#39;s <code>id</code> attribute in the HTML markup. Depending on the value that you assign to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> property, the value that is generated for the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> property might include the ID of the NamingContainer object. When you set <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value does not include the ID of the NamingContainer object. When you set <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> to either <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a> or <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value will include the ID from the NamingContainer object. For more information, see <a href=\"../Topic/ASP.NET%20Web%20Server%20Control%20Identification.md\" data-linktype=\"relative-path\">ASP.NET Web Server Control Identification</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates using the NamingContainer property.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_NamingContainer#1\">&lt;% @ Import Namespace = &quot;System.Data&quot;  %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;head&gt;\n    &lt;title&gt;\n            Control NamingContainer Example\n         &lt;/title&gt;\n&lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n      // Build the DataSource.\n      ICollection CreateDataSource()\n      {\n         DataTable myDataTable = new DataTable();\n         DataRow myDataRow;\n         myDataTable.Columns.Add(new DataColumn(&quot;EmployeeName&quot;, typeof(string)));\n         for (int i = 0; i &lt; 10; i++) \n         {\n            myDataRow = myDataTable.NewRow();\n            myDataRow[0] = &quot;somename&quot; + i.ToString();\n            myDataTable.Rows.Add(myDataRow);\n         }\n         DataView myDataView = new DataView(myDataTable);\n         return myDataView;\n      }\n\n      void Page_Load(Object sender, EventArgs e) \n      {\n         if (!IsPostBack) \n         {\n            // Bind &#39;DataView&#39; to the DataSource.\n            myDataList.DataSource = CreateDataSource();\n            myDataList.DataBind();\n         }\n         // Attach EventHandler for SelectedIndexChanged event.\n         myDataList.SelectedIndexChanged += new EventHandler(selectedItemChanged);\n      }\n\n      // Handler function for &#39;SelectedIndexChanged&#39; event.\n      void selectedItemChanged(Object sender,EventArgs e)\n      {\n         DataListItem myCurrentItem = myDataList.SelectedItem;\n         Control myNamingContainer = myCurrentItem.Controls[0].NamingContainer;\n         // Display the NamingContainer.\n         myLabel1.Text = &quot;The NamingContainer is : &quot; + myNamingContainer.UniqueID;\n         // Display the UniqueID.\n         myLabel2.Text = &quot;The UniqueID is : &quot; + ((Control)(myCurrentItem.Controls[0])).UniqueID;\n      }      \n\n    &lt;/script&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n      &lt;form runat=&quot;server&quot; id=&quot;Form1&quot;&gt;\n         &lt;h3&gt;\n            Control NamingContainer Example\n         &lt;/h3&gt;\n         &lt;h4&gt;\n            Click an item to view it&#39;s Naming Container and UniqueID\n         &lt;/h4&gt;\n         &lt;asp:Label ID=&quot;myLabel1&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n         &lt;br /&gt;\n         &lt;asp:Label ID=&quot;myLabel2&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n         &lt;br /&gt;\n         &lt;asp:DataList id=&quot;myDataList&quot; runat=&quot;server&quot; BorderColor=&quot;black&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;&lt;/HeaderStyle&gt;\n            &lt;SelectedItemStyle BackColor=&quot;lightgreen&quot;&gt;&lt;/SelectedItemStyle&gt;\n            &lt;HeaderTemplate&gt;\n               EmployeeName\n            &lt;/HeaderTemplate&gt;\n            &lt;ItemTemplate&gt;\n               &lt;asp:LinkButton id=&quot;button1&quot; Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;EmployeeName&quot;) %&gt;&#39; CommandName=&quot;select&quot; runat=&quot;server&quot; /&gt;\n               &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n            &lt;/ItemTemplate&gt;\n         &lt;/asp:DataList&gt;\n      &lt;/form&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_NamingContainer#1\">&lt;%@ Import Namespace = &quot;System.Data&quot;  %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;head&gt;\n    &lt;title&gt;\n            Control NamingContainer Example\n         &lt;/title&gt;\n&lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n      &#39; Build the DataSource.\n      Function CreateDataSource() As ICollection\n         Dim myDataTable As New DataTable()\n         Dim myDataRow As DataRow\n         myDataTable.Columns.Add(New DataColumn(&quot;EmployeeName&quot;, GetType(String)))\n         Dim i As Integer\n         For i = 0 To 9\n            myDataRow = myDataTable.NewRow()\n            myDataRow(0) = &quot;somename&quot; + i.ToString()\n            myDataTable.Rows.Add(myDataRow)\n         Next i\n         Dim myDataView As New DataView(myDataTable)\n         Return myDataView\n      End Function\n\n      Sub Page_Load(sender As Object, e As EventArgs)\n         If Not IsPostBack Then\n            &#39; Bind &#39;DataView&#39; to the DataSource.\n            myDataList.DataSource = CreateDataSource()\n            myDataList.DataBind()\n         End If\n         &#39; Attach EventHandler for SelectedIndexChanged event.\n         AddHandler myDataList.SelectedIndexChanged, AddressOf selectedItemChanged\n      End Sub\n\n      &#39; Handler function for &#39;SelectedIndexChanged&#39; event.\n      Sub selectedItemChanged(sender As Object, e As EventArgs)\n         Dim myCurrentItem As DataListItem = myDataList.SelectedItem\n         Dim myNamingContainer As Control = myCurrentItem.Controls(0).NamingContainer\n         &#39; Display the NamingContainer.\n         myLabel1.Text = &quot;The NamingContainer is : &quot; + myNamingContainer.UniqueID\n         &#39; Display the UniqueID.\n         myLabel2.Text = &quot;The UniqueID is : &quot; + CType(myCurrentItem.Controls(0), Control).UniqueID\n      End Sub\n    &lt;/script&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n      &lt;form runat=&quot;server&quot; id=&quot;Form1&quot;&gt;\n         &lt;h3&gt;\n            Control NamingContainer Example\n         &lt;/h3&gt;\n         &lt;h4&gt;\n            Click an item to view it&#39;s Naming Container and UniqueID\n         &lt;/h4&gt;\n         &lt;asp:Label ID=&quot;myLabel1&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n         &lt;br /&gt;\n         &lt;asp:Label ID=&quot;myLabel2&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n         &lt;br /&gt;\n         &lt;asp:DataList id=&quot;myDataList&quot; runat=&quot;server&quot; BorderColor=&quot;black&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;#aaaadd&quot;&gt;&lt;/HeaderStyle&gt;\n            &lt;SelectedItemStyle BackColor=&quot;lightgreen&quot;&gt;&lt;/SelectedItemStyle&gt;\n            &lt;HeaderTemplate&gt;\n               EmployeeName\n            &lt;/HeaderTemplate&gt;\n            &lt;ItemTemplate&gt;\n               &lt;asp:LinkButton id=&quot;button1&quot; Text=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;EmployeeName&quot;) %&gt;&#39; CommandName=&quot;select&quot; runat=&quot;server&quot; /&gt;\n               &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n            &lt;/ItemTemplate&gt;\n         &lt;/asp:DataList&gt;\n      &lt;/form&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Page\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Page_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Page</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> instance that contains the server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.Page Page { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> instance that contains the server control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The control is a <a class=\"xref\" href=\"system.web.ui.webcontrols.substitution\" data-linktype=\"relative-path\">Substitution</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property&#39;s value reflects the name of the .aspx file that contains the server control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Render_\" data-linktype=\"relative-path\">Render</a> method. It uses the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> property to access the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_IsPostBack_\" data-linktype=\"relative-path\">IsPostBack</a> property and determine whether the page that contains this control has just been loaded for the first time or is the result of a postback.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_Sample#1\">      protected override void Render(HtmlTextWriter output) \n\t   {\n         output.Write(&quot;Welcome to Control Development!&lt;br&gt;&quot;);\n\n\t\t\t// Test if the page is loaded for the first time\n\t\t\tif (!Page.IsPostBack)\n\t\t\t\toutput.Write(&quot;Page has just been loaded&quot;);\n\t\t   else\n\t\t\t\toutput.Write(&quot;Postback has occured&quot;);\n       }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_Sample#1\">      Protected Overrides Sub Render(output As HtmlTextWriter)\n         output.Write(&quot;Welcome to Control Development!&lt;br&gt;&quot;)\n         \n         &#39; Test if the page is loaded for the first time\n         If Not Page.IsPostBack Then\n            output.Write(&quot;Page has just been loaded&quot;)\n         Else\n            output.Write(&quot;Postback has occured&quot;)\n         End If\n      End Sub \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Parent\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Parent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parent</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the server control&#39;s parent control in the page control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.Control Parent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>A reference to the server control&#39;s parent control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Whenever a page is requested, a hierarchy of server controls on that page is built. This property allows you to determine the parent control of the current server control in that hierarchy, and to program against it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets a new <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object on a page, <code>myControl1</code>, to the control specified in a <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_\" data-linktype=\"relative-path\">FindControl</a> method call. If the call returns a control, the code uses the Parent property to identify the control that contains <code>myControl1</code>. If the parent control exists, the string &quot;The parent of the text box is&quot; is concatenated with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property of the parent control and written to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page_\" data-linktype=\"relative-path\">Page</a>. If no parent control is found, the string &quot;Control not found&quot; is written.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.Page.Parent_FindControl#1\">private void Button1_Click(object sender, EventArgs MyEventArgs)\n{\n      // Find control on page.\n      Control myControl1 = FindControl(&quot;TextBox2&quot;);\n      if(myControl1!=null)\n      {\n         // Get control&#39;s parent.\n         Control myControl2 = myControl1.Parent;\n         Response.Write(&quot;Parent of the text box is : &quot; + myControl2.ID);\n      }\n      else\n      {\n         Response.Write(&quot;Control not found&quot;);\n      }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.Page.Parent_FindControl#1\">\n   Private Sub Button1_Click(sender As Object, MyEventArgs As EventArgs)\n   &#39; Find control on page.\n   Dim myControl1 As Control = FindControl(&quot;TextBox2&quot;)\n   If (Not myControl1 Is Nothing)\n      &#39; Get control&#39;s parent.\n      Dim myControl2 As Control = myControl1.Parent\n      Response.Write(&quot;Parent of the text box is : &quot; &amp; myControl2.ID)\n   Else\n      Response.Write(&quot;Control not found.....&quot;)\n   End If\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_RenderingCompatibility\">\r\n    \r\n            <a id=\"System_Web_UI_Control_RenderingCompatibility_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderingCompatibility</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies the ASP.NET version that rendered HTML will be compatible with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Version RenderingCompatibility { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </div>\r\n                  <p>The ASP.NET version that rendered HTML will be compatible with.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET sets this property to the value of the <code>controlRenderingCompatibilityVersion</code> attribute of the <code>pages</code> element in the Web.config file. If the <code>controlRenderingCompatibilityVersion</code> attribute is not set in the Web.config file, the default value is the current version of ASP.NET.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> There is a public set accessor for this property, but the set accessor supports the .NET Framework infrastructure and is not intended to be used directly from your code. If you set this value in your code, the effect is unpredictable.  </p>\n</div>\n<p> Each release of ASP.NET might render HTML differently from earlier releases. For example, in ASP.NET 3.5, if the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_IsEnabled_\" data-linktype=\"relative-path\">IsEnabled</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control is <code>false</code>, by default, ASP.NET renders a <code>span</code> element whose <code>disabled</code> attribute is set to &quot;disabled&quot;. In ASP.NET 4, by default, the <code>span</code> element is rendered with a cascading style sheet (CSS) <code>class</code> attribute instead of the <code>disabled</code> attribute. This lets you specify the disabled appearance of the control and avoids rendering invalid HTML. (In HTML 4.0 and XHTML 1.1, the <code>span</code> element does not support the <code>disabled</code> attribute.)  </p>\n<p> A Web application might include code that would not function correctly if HTML rendering changes. To avoid this problem, you can set the <code>controlRenderingCompatibilityVersion</code> attribute of the <code>pages</code> element in the Web.config file to indicate which earlier version you want to maintain compatibility with. For example, if you set the RenderingCompatibility property to <code>3.5</code>, a disabled <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control will render a <code>disabled</code> attribute and not a CSS class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The earliest version that you can set this property to is <code>3.5</code>.  </p>\n</div>\n<p> To maintain backward compatibility, when you use Visual Studio to upgrade a Web project to ASP.NET 4 from an earlier version, Visual Studio automatically sets the <code>controlRenderingCompatibilityVersion</code> attribute in the Web.config file to <code>3.5</code>. If you want an upgraded Web site to render HTML using the algorithm that was introduced in ASP.NET 4, you can change or remove the <code>controlRenderingCompatibilityVersion</code> attribute.  </p>\n<p> Most of the time, the behavior controlled by this property is automatic and you do not have to check the RenderingCompatibility property in your code. However, if you are programming a custom control, you might have to include code that alters the control&#39;s behavior based on the setting of this property. For example, a custom control for ASP.NET 4 might be composed of <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> controls, and the custom control might specify the disabled appearance of the control by generating JavaScript code that alters the <code>aspNetDisabled</code> class. This will work as expected if RenderingCompatibility is <code>4.0</code> or later. But to get the same effect when RenderingCompatibility is <code>3.5</code>, the custom control&#39;s code must set the control&#39;s <code>CssClass</code> property to &quot;aspNetDisabled&quot; when the <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_IsEnabled_\" data-linktype=\"relative-path\">IsEnabled</a> property is <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Site\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Site_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Site</div>        \r\n          </div>\r\n    \r\n            <p>Gets information about the container that hosts the current control when rendered on a design surface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.ISite Site { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> that contains information about the container that the control is hosted in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The control is a <a class=\"xref\" href=\"system.web.ui.webcontrols.substitution\" data-linktype=\"relative-path\">Substitution</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A site binds a <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> object to a <a class=\"xref\" href=\"system.componentmodel.container\" data-linktype=\"relative-path\">Container</a> object and enables communication between the two. It also provides a way for the container to manage its components.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SkinID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SkinID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SkinID</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the skin to apply to the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string SkinID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the skin to apply to the control. The default is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The style sheet has already been applied.  </p>\n<p> - or -  </p>\n<p> The <code>Page_PreInit</code> event has already occurred.  </p>\n<p> - or -  </p>\n<p> The control was already added to the <code>Controls</code> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Skins available to a control are contained in one or more skin files in a theme directory. The SkinID property specifies which of these skins to apply to the control. A skin is specific to a particular control; you cannot share skin settings between controls of different types.  </p>\n<p> If you do not set the SkinID property, a control uses the default skin if one is defined. For example, if a skin without an ID is defined for an <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> control, then that skin applies to all <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> controls that do not explicitly reference a skin by ID and that are not set to disable themes. If a skin with an ID is defined for an <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> control, then that skin applies only to <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> controls whose SkinID property is set to that ID.  </p>\n<p> If the skin files in a theme directory do not contain a skin with the specified SkinID property, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> exception is thrown at run time.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_TemplateControl\">\r\n    \r\n            <a id=\"System_Web_UI_Control_TemplateControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TemplateControl</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a reference to the template that contains this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.TemplateControl TemplateControl { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.templatecontrol\" data-linktype=\"relative-path\">TemplateControl</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.templatecontrol\" data-linktype=\"relative-path\">TemplateControl</a> instance that contains this control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is part of a control template, the TemplateControl property contains a reference to the containing control. For more information, see the <a class=\"xref\" href=\"system.web.ui.templatecontrol\" data-linktype=\"relative-path\">System.Web.UI.TemplateControl</a> documentation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_TemplateSourceDirectory\">\r\n    \r\n            <a id=\"System_Web_UI_Control_TemplateSourceDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TemplateSourceDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Gets the virtual directory of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> or <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> that contains the current server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string TemplateSourceDirectory { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The virtual directory of the page or user control that contains the server control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TemplateSourceDirectory property specifies the path to the page or user control that contains the current control. For example, if the Web page resides at <a href=\"http://www.contoso.com/application/subdirectory\" data-linktype=\"external\">http://www.contoso.com/application/subdirectory</a>, the TemplateSourceDirectory property returns &quot;application/subdirectory&quot;.  </p>\n<p> To return the application-relative virtual path (&quot;~/subdirectory&quot;), use the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AppRelativeTemplateSourceDirectory_\" data-linktype=\"relative-path\">AppRelativeTemplateSourceDirectory</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the TemplateSourceDirectory property twice. The first time it is used in a <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_MapPathSecure_\" data-linktype=\"relative-path\">MapPathSecure</a> method call to obtain the path to the directory in which the control resides. The second time it is in a <a class=\"xref\" href=\"system.io.directory#System_IO_Directory_GetFiles_\" data-linktype=\"relative-path\">GetFiles</a> method call to obtain the list of all the files contained within that directory.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_TemplateSourceDirectory#2\">   // An HttpException occurs if the server control does not,;\n   // have permissions to read the resulting mapped file. \n        output.Write(&quot;The Actual Path of the virtual directory : &quot;+\n        MapPathSecure(TemplateSourceDirectory)+&quot;&lt;br&gt;&quot;);\n\n       // Get all the files from the absolute path of &#39;MyControl&#39;;\n       // using TemplateSourceDirectory which gives the virtual Directory.\n           string [] myFiles=\n           Directory.GetFiles(MapPathSecure(TemplateSourceDirectory));\n           output.Write(&quot;The files in this Directory are &lt;br&gt;&quot;);\n\n            // List all the files.\n            for (int i=0;i&lt;myFiles.Length;i++)\n               output.Write(myFiles[i]+&quot;&lt;br&gt;&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_TemplateSourceDirectory#2\">            &#39; An HttpException occurs if the server control does not,;\n            &#39; have permissions to read the resulting mapped file.\n            output.Write(&quot;The Actual Path of the virtual directory : &quot; &amp; _\n                        MapPathSecure(TemplateSourceDirectory) &amp; &quot;&lt;br&gt;&quot;)\n\n            &#39; Get all the files from the absolute path of &#39;MyControl&#39;;\n            &#39; using TemplateSourceDirectory which gives the virtual Directory.\n            Dim myFiles As String() = Directory.GetFiles(MapPathSecure(TemplateSourceDirectory))\n            output.Write(&quot;The files in this Directory are &lt;br&gt;&quot;)\n\n            &#39; List all the files.\n            Dim i As Integer\n            For i = 0 To myFiles.Length - 1\n               output.Write(myFiles(i) &amp; &quot;&lt;br&gt;&quot;)\n            Next i\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_UniqueID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_UniqueID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UniqueID</div>        \r\n          </div>\r\n    \r\n            <p>Gets the unique, hierarchically qualified identifier for the server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string UniqueID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The fully qualified identifier for the server control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property differs from the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property, in that the UniqueID property includes the identifier for the server control&#39;s naming container. This identifier is generated automatically when a page request is processed.  </p>\n<p> This property is particularly important in differentiating server controls contained within a data-binding server control that repeats. The repeating control, which are <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.formview\" data-linktype=\"relative-path\">FormView</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> Web server controls (or any custom server controls that you create that include repeating functionality when data bound), serves as the naming container for its child controls. This means that it creates a unique namespace for its child controls so that their <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property values do not conflict.  </p>\n<p> For example, if you include an ASP.NET <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> Web server control in a <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a> server control, and assign the <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control an <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property value of <code>MyLabel</code>, and the <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a> an <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> of <code>MyRepeater</code>. If you bind data to the <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a> to an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> object with three entries, the resulting UniqueID properties for each instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> server controls are <code>MyRepeater$ctl00$MyLabel</code>, <code>MyRepeater$ctl01$MyLabel</code>, and <code>MyRepeater$ctl02$MyLabel</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> object and populates it with three text strings, then binds a <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a> Web server control to the data in the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> when the page is loaded. The code gets the UniqueID property for each child control generated during data binding. The code generates three versions of the <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control and writes their <code>UniqueID</code> property values to the page.  </p>\n<pre><code class=\"lang-vb\" name=\"AccessingAspNetControlsProgramaticallyConcepts#2\">  &lt;script language=&quot;vb&quot; runat=&quot;server&quot;&gt;\n      \n      Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n          Dim sb As New StringBuilder()\n          sb.Append(&quot;Container: &quot; + _\n          MyDataList.NamingContainer.ToString() + &quot;&lt;p&gt;&quot;)\n\n          Dim a As New ArrayList()\n          a.Add(&quot;A&quot;)\n          a.Add(&quot;B&quot;)\n          a.Add(&quot;C&quot;)\n\n          MyDataList.DataSource = a\n          MyDataList.DataBind()\n    \n          Dim i As Integer\n          Dim l As Label\n          For i = 0 To MyDataList.Controls.Count - 1\n              l = CType(CType(MyDataList.Controls(i), RepeaterItem).FindControl(&quot;MyLabel&quot;), Label)\n              sb.Append(&quot;Container: &quot; &amp; _\n                 CType(MyDataList.Controls(i), RepeaterItem).NamingContainer.ToString() &amp; _\n                 &quot;&lt;p&gt;&quot;)\n              sb.Append(&quot;&lt;b&gt;&quot; &amp; l.UniqueID.ToString() &amp; &quot;&lt;/b&gt;&lt;p&gt;&quot;)\n          Next\n          ResultsLabel.Text = sb.ToString()\n      End Sub\n&lt;/script&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"AccessingAspNetControlsProgramaticallyConcepts#2\">&lt;script language=&quot;c#&quot; runat=&quot;server&quot;&gt;\n    \n  void Page_Load(Object sender, EventArgs e) \n  {\n      StringBuilder sb = new StringBuilder();\n      sb.Append(&quot;Container: &quot; + \n          MyDataList.NamingContainer.ToString() + &quot;&lt;p&gt;&quot;);\n\n      ArrayList a = new ArrayList();\n      a.Add(&quot;A&quot;);\n      a.Add(&quot;B&quot;);\n      a.Add(&quot;C&quot;);\n\n      MyDataList.DataSource = a;\n      MyDataList.DataBind();\n\n      for (int i = 0; i &lt; MyDataList.Controls.Count; i++)\n      {\n          Label l = \n              (Label)((RepeaterItem)MyDataList.Controls[i]).FindControl(&quot;MyLabel&quot;);\n          sb.Append(&quot;Container: &quot; + \n              ((RepeaterItem)MyDataList.Controls[i]).NamingContainer.ToString() + \n              &quot;&lt;p&gt;&quot;);\n          sb.Append(&quot;&lt;b&gt;&quot; + l.UniqueID + &quot;&lt;/b&gt;&lt;p&gt;&quot;);\n      }\n      ResultsLabel.Text = sb.ToString();\n}\n&lt;/script&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ValidateRequestMode\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ValidateRequestMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateRequestMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the control checks client input from the browser for potentially dangerous values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.validaterequestmode\" data-linktype=\"relative-path\">ValidateRequestMode</a></div>\r\n                  </div>\r\n                  <p>A value that determines whether the control checks client input. Values can include <a class=\"xref\" href=\"system.web.ui.validaterequestmode\" data-linktype=\"relative-path\">ValidateRequestMode</a>, <a class=\"xref\" href=\"system.web.ui.validaterequestmode\" data-linktype=\"relative-path\">ValidateRequestMode</a>, and <a class=\"xref\" href=\"system.web.ui.validaterequestmode\" data-linktype=\"relative-path\">ValidateRequestMode</a>. The default is <a class=\"xref\" href=\"system.web.ui.validaterequestmode\" data-linktype=\"relative-path\">ValidateRequestMode</a>, which means that the control gets the value from its parent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about request validation, see <a class=\"xref\" href=\"system.web.unvalidatedrequestvalues\" data-linktype=\"relative-path\">UnvalidatedRequestValues</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.StateBag ViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a></div>\r\n                  </div>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> class that contains the server control&#39;s view-state information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A server control&#39;s view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.  </p>\n<p> View state is enabled for all server controls by default, but there are circumstances in which you will want to disable it. For more information, see <a href=\"../Topic/ASP.NET%20Performance%20Overview.md\" data-linktype=\"relative-path\">ASP.NET Performance Overview</a>.  </p>\n<p> For information about dictionaries and how to use them, see <a href=\"../Topic/Collections%20and%20Data%20Structures.md\" data-linktype=\"relative-path\">Collections and Data Structures</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates implementing a <code>Text</code> property that stores and retrieves its value from its control&#39;s ViewState property.  </p>\n<pre><code class=\"lang-vb\" name=\"SysWebUIControlViewState#2\">        &#39; Add property values to view state with set; \n        &#39; retrieve them from view state with get.\n        Public Property [Text]() As String\n            Get\n                Dim o As Object = ViewState(&quot;Text&quot;)\n                If (IsNothing(o)) Then\n                    Return String.Empty\n                Else\n                    Return CStr(o)\n                End If\n            End Get\n            Set(ByVal value As String)\n                ViewState(&quot;Text&quot;) = value\n            End Set\n        End Property\n</code></pre><pre><code class=\"lang-cs\" name=\"SysWebUIControlViewState#2\">        // Add property values to view state with set;\n        // retrieve them from view state with get.\n        public String Text\n        {\n            get \n            { \n                object o = ViewState[&quot;Text&quot;]; \n                return (o == null)? String.Empty : (string)o;\n            }\n\n            set\n            {\n                ViewState[&quot;Text&quot;] = value;\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ViewStateIgnoresCase\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ViewStateIgnoresCase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ViewStateIgnoresCase</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object is case-insensitive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ViewStateIgnoresCase { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> instance is case-insensitive; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override this method if you create a custom server control that saves its view state without taking case into account. When you do so multiple objects with the same key, but with different casing, can be stored in the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> associated with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewState_\" data-linktype=\"relative-path\">ViewState</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the ViewStateIgnoresCase property to return <code>true</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.Control_ViewStateIgnoresCase#2\">      &#39; Override the ViewStateIgnoresCase property to allow the same\n      &#39; entries with different casing to be stored in the control&#39;s\n      &#39; ViewState property.\n      Overrides Protected ReadOnly Property ViewStateIgnoresCase As Boolean\n         Get\n            Return True\n         End Get\n      End Property\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.Control_ViewStateIgnoresCase#2\">                // Override the ViewStateIgnoresCase property to allow the same\n                // entries with different casing to be stored in the control&#39;s\n                // ViewState property.\n                protected override bool ViewStateIgnoresCase\n                {\n                        get\n                        { \n                                return true; \n                        }\n                }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ViewStateMode\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ViewStateMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ViewStateMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the view-state mode of this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a></div>\r\n                  </div>\r\n                  <p>The view-state mode of this control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>An attempt was made to set this property to a value that is not in the <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the ViewStateMode property to enable view state for an individual control even if view state is disabled for the page. For more information about view state and control state, see the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property.  </p>\n<p> To disable view state for a page and to enable it for a specific control on the page, set the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property of the page and the control to <code>true</code>, set the ViewStateMode property of the page to <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a>, and set the ViewStateMode property of the control to <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a>.  </p>\n<p> The default value of the ViewStateMode property for a page is <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a>. The default value of the ViewStateMode property for a Web server control in a page is <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a>. As a result, if you do not set this property at either the page or the control level, the value of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property determines view-state behavior.  </p>\n<p> The ViewStateMode property of a page or a control has an effect only if the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property is set to <code>true</code>. If the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property is set to <code>false</code>, view state will be turned off even if the ViewStateMode property is set to <a class=\"xref\" href=\"system.web.ui.viewstatemode\" data-linktype=\"relative-path\">ViewStateMode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Visible\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Visible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether a server control is rendered as UI on the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Visible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control is visible on the page; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this property is <code>false</code>, the server control is not rendered. You should take this into account when organizing the layout of your page.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a container control is not rendered, any controls that it contains will not be rendered even if you set the Visible property of an individual control to <code>true</code>. In that case, the individual control returns <code>false</code> for the Visible property even if you have explicitly set it to <code>true</code>. (That is, if the <code>Visible</code> property of the parent control is set to <code>false</code>, the child control inherits that setting and the setting takes precedence over any local setting.)</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_AddedControl_System_Web_UI_Control_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_AddedControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddedControl(Control,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Called after a child control is added to the <span class=\"xref\">stem.Web.UI.Control.Controls*</span> collection of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void AddedControl (System.Web.UI.Control control, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> that has been added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the control in the <span class=\"xref\">stem.Web.UI.Control.Controls*</span> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>control</code> is a <a class=\"xref\" href=\"system.web.ui.webcontrols.substitution\" data-linktype=\"relative-path\">Substitution</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AddedControl method is called immediately after a control is added to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_AddParsedSubObject_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_AddParsedSubObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddParsedSubObject(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void AddParsedSubObject (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the parsed element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unless you override it, this method automatically adds <a class=\"xref\" href=\"system.web.ui.literalcontrol\" data-linktype=\"relative-path\">LiteralControl</a> objects to the server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object. This collection is accessible through <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is a custom server control that uses the AddParsedSubObject method to determine if elements declared between the opening and closing tags of this control are <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> Web server controls. If they are, they are added to an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> object, <code>items</code>. When the overridden <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateChildControls_\" data-linktype=\"relative-path\">CreateChildControls</a> method is called, it iterates through the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and adds each object in it to the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> of the custom server control.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"Control_AddParsedSubObject#1\">   // Custom ControlBuilder class. Interprets nested tag name &quot;myitem&quot; as a textbox. \n   public class MyControlBuilder : ControlBuilder \n   {\n      public override Type GetChildControlType(String tagName,\n                                          IDictionary attributes)\n      {\n         if (String.Compare(tagName, &quot;myitem&quot;, true) == 0) \n         {\n            return typeof(TextBox);\n         }\n         return null;\n      }\n   }\n\n   [ \n   ControlBuilderAttribute(typeof(MyControlBuilder)) \n   ]\n   public class MyControl : Control\n   {\n      // Store all the controls specified as nested tags.\n      private ArrayList items = new ArrayList();\n      \n      // This function is internally invoked by IParserAccessor.AddParsedSubObject(Object).\n      protected override void AddParsedSubObject(Object obj) \n      {\n         if (obj is TextBox) \n         {\n            items.Add(obj);\n         }\n      }\n\n      // Override &#39;CreateChildControls&#39;. \n      protected override void CreateChildControls()\n      {\n         System.Collections.IEnumerator myEnumerator = items.GetEnumerator();\n         while(myEnumerator.MoveNext())\n             this.Controls.Add((TextBox)myEnumerator.Current);\n      }\n   }    \n</code></pre><pre><code class=\"lang-vb\" name=\"Control_AddParsedSubObject#1\">   &#39; Custom ControlBuilder class. Interprets nested tag name &quot;myitem&quot; as a textbox.\n   Public Class MyControlBuilder\n      Inherits ControlBuilder\n\n      Public Overrides Function GetChildControlType(tagName As String, _\n                                attributes As IDictionary) As Type\n         If String.Compare(tagName, &quot;myitem&quot;, True) = 0 Then\n            Return GetType(TextBox)\n         End If\n         Return Nothing\n      End Function\n   End Class\n\n   &lt;ControlBuilderAttribute(GetType(MyControlBuilder))&gt; Public Class MyControl\n      Inherits Control\n      &#39; Stores all the controls specified as nested tags.\n      Private items As New ArrayList()\n\n      &#39; This function is internally invoked by IParserAccessor.AddParsedSubObject(Object).\n      Protected Overrides Sub AddParsedSubObject(obj As Object)\n         If TypeOf obj Is TextBox Then\n            items.Add(obj)\n         End If\n      End Sub\n\n     &#39; Override &#39;CreateChildControls&#39;.\n      Protected Overrides Sub CreateChildControls()\n         Dim myEnumerator As System.Collections.IEnumerator = items.GetEnumerator()\n         While myEnumerator.MoveNext()\n            Me.Controls.Add(CType(myEnumerator.Current, TextBox))\n         End While\n      End Sub\n   End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ApplyStyleSheetSkin_System_Web_UI_Page_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ApplyStyleSheetSkin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplyStyleSheetSkin(Page)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the style properties defined in the page style sheet to the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>page</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> containing the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The style sheet is already applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ApplyStyleSheetSkin method sets style properties on the control based on skin properties defined in a theme directory. The skin applied is either the default skin for the control or the skin specified in the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SkinID_\" data-linktype=\"relative-path\">SkinID</a> property. The ApplyStyleSheetSkin method is called by ASP.NET for declarative controls placed on a page. You must call the ApplyStyleSheetSkin method on any controls created programmatically at run time for style sheet skins to apply to the control. Theme skins are applied automatically. For more information on the difference between themes and cascading style sheets, see <a href=\"../Topic/ASP.NET%20Themes%20and%20Skins.md\" data-linktype=\"relative-path\">ASP.NET Themes and Skins</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_BeginRenderTracing_System_IO_TextWriter_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_BeginRenderTracing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginRenderTracing(TextWriter,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins design-time tracing of rendering data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that writes trace data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traceObject</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The trace object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_BuildProfileTree_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_BuildProfileTree_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BuildProfileTree(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Gathers information about the server control and delivers it to the <span class=\"xref\">stem.Web.UI.Page.Trace*</span> property to be displayed when tracing is enabled for the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void BuildProfileTree (string parentId, bool calcViewState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parentId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the control&#39;s parent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>calcViewState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean that indicates whether the view-state size is calculated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gathers the information necessary about a page&#39;s UI hierarchy and passes it to the page&#39;s <a href=\"../Topic/%3Ctrace%3E%20Element.md\" data-linktype=\"relative-path\">&amp;lt;trace&amp;gt;</a> property. When you enable tracing, either for a page or for your application, this information is displayed in the <code>Control Tree</code> section of the trace output. Trace output for a page is appended to the end of the page; while trace output for an application can be viewed from the trace viewer (trace.axd file) which is stored in the application&#39;s root directory. For more information about tracing, see <a href=\"../Topic/ASP.NET%20Tracing%20Overview.md\" data-linktype=\"relative-path\">ASP.NET Tracing Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClearCachedClientID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClearCachedClientID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearCachedClientID()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the cached <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value to <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ClearCachedClientID ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClearChildControlState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClearChildControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearChildControlState()</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the control-state information for the server control&#39;s child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ClearChildControlState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ClearChildControlState method is used when child control-state information written to the parent control&#39;s control state is overridden as new child controls are created, such as when data-binding child controls in a templated data-bound server control. Calling the ClearChildControlState method to empty child controls before calling the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SaveControlState_\" data-linktype=\"relative-path\">SaveControlState</a> method reduces the size of the control-state information that must be stored or transmitted.  </p>\n<p> When recreating child controls of a <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object, use the ClearChildControlState method to clear child control state so that it does not get applied to the new controls inadvertently.  </p>\n<p> To clear both the child control state and view state, use the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildState_\" data-linktype=\"relative-path\">ClearChildState</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClearChildState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClearChildState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearChildState()</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the view-state and control-state information for all the server control&#39;s child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ClearChildState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ClearChildState method clears all view-state and control-state information for child controls. It is equivalent to calling both the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState_\" data-linktype=\"relative-path\">ClearChildViewState</a> method and the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildControlState_\" data-linktype=\"relative-path\">ClearChildControlState</a> method.  </p>\n<p> When recreating child controls of a <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object, use the ClearChildState method to clear child state so that it does not get applied to the new controls inadvertently.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_\" data-linktype=\"relative-path\">OnDataBinding</a> method for a templated data-bound control. If the data source that the control binds to is populated, the control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> collection is emptied using the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method, and the ClearChildState method is used to remove any state information that had been saved for the child controls.  </p>\n<pre><code class=\"lang-cs\" name=\"TemplatedDataBoundControl2#3\">        // Override to create the repeated items from the DataSource.\n        protected override void OnDataBinding(EventArgs e) {\n            base.OnDataBinding(e);\n\n            if (DataSource != null) {\n                // Clear any existing child controls.\n                Controls.Clear();\n                // Clear any previous state for the existing child controls.\n                ClearChildState();\n\n                // Iterate over the DataSource, creating a new item for each data item.\n                IEnumerator dataEnum = DataSource.GetEnumerator();\n                int i = 0;\n                while(dataEnum.MoveNext()) {\n\n                    // Create an item.\n                    RepeaterItem item = new RepeaterItem(i, dataEnum.Current);\n                    // Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(item);\n                    // Add the item to the ControlCollection.\n                    Controls.Add(item);\n\n                    i++;\n                }\n\n                // Prevent child controls from being created again.\n                ChildControlsCreated = true;\n                // Store the number of items created in view state for postback scenarios.\n                ViewState[&quot;NumItems&quot;] = i;\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"TemplatedDataBoundControl2#3\">        &#39; Override to create the repeated items from the DataSource.\n        Protected Overrides Sub OnDataBinding(E As EventArgs)\n            MyBase.OnDataBinding(e)\n\n            If Not DataSource Is Nothing\n                &#39; Clear any existing child controls.\n                Controls.Clear()\n                &#39; Clear any previous view state for the existing child controls.\n                ClearChildState()\n\n                &#39; Iterate over the DataSource, creating a new item for each data item.\n                Dim DataEnum As IEnumerator = DataSource.GetEnumerator()\n                Dim I As Integer = 0\n                Do While (DataEnum.MoveNext())\n\n                    &#39; Create an item.\n                    Dim Item As RepeaterItemVB = New RepeaterItemVB(I, DataEnum.Current)\n                    &#39; Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(Item)\n                    &#39; Add the item to the ControlCollection.\n                    Controls.Add(Item)\n\n                    I = I + 1\n                Loop\n\n                &#39; Prevent child controls from being created again.\n                ChildControlsCreated = true\n                &#39; Store the number of items created in view state for postback scenarios.\n                ViewState(&quot;NumItems&quot;) = I\n            End If\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClearChildViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClearChildViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearChildViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the view-state information for all the server control&#39;s child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ClearChildViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is commonly used when you override the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method when developing templated data-bound server controls. If you do not call this method, child control view–state information can be written to a parent server control, only to be overridden when the data is bound.  </p>\n<p> When recreating child controls of a <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a>, use the ClearChildViewState method to clear child view state so that it does not get applied to the new controls inadvertently.  </p>\n<p> For more information about using this method, see <a href=\"../Topic/How%20to:%20Create%20Templated%20ASP.NET%20User%20Controls.md\" data-linktype=\"relative-path\">How to: Create Templated ASP.NET User Controls</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ClearEffectiveClientIDMode\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ClearEffectiveClientIDMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearEffectiveClientIDMode()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <span class=\"xref\">stem.Web.UI.Control.ClientIDMode*</span> property of the current control instance and of any child controls to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ClearEffectiveClientIDMode ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_CreateChildControls\">\r\n    \r\n            <a id=\"System_Web_UI_Control_CreateChildControls_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateChildControls()</div>        \r\n          </div>\r\n    \r\n            <p>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void CreateChildControls ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you develop a composite or templated server control, you must override this method. Controls that override the CreateChildControls method should implement the <a class=\"xref\" href=\"system.web.ui.inamingcontainer\" data-linktype=\"relative-path\">INamingContainer</a> interface to avoid naming conflicts.  </p>\n<p> For more information, see <a href=\"../Topic/ASP.NET%20Web%20Server%20Controls%20Templates.md\" data-linktype=\"relative-path\">Web Server Controls Templates</a> and <a href=\"../Topic/Developing%20Custom%20ASP.NET%20Server%20Controls.md\" data-linktype=\"relative-path\">Developing Custom ASP.NET Server Controls</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an overridden version of the CreateChildControls method. In this implementation, the composite control displays a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control enclosed in two literal controls that render HTML.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"SystemWebUIControl CreateChildControls and EnsureChildControls#2\">       // Override CreateChildControls to create the control tree.\n        [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;Execution&quot;)]\n        protected override void CreateChildControls() {\n\n            // Add a LiteralControl to the current ControlCollection.\n            this.Controls.Add(new LiteralControl(&quot;&lt;h3&gt;Value: &quot;));\n\n\n            // Create a text box control, set the default Text property, \n            // and add it to the ControlCollection.\n            TextBox box = new TextBox();\n            box.Text = &quot;0&quot;;\n            this.Controls.Add(box);\n\n            this.Controls.Add(new LiteralControl(&quot;&lt;/h3&gt;&quot;));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"SystemWebUIControl CreateChildControls and EnsureChildControls#2\">      &#39; Override CreateChildControls to create the control tree.\n      &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;Execution&quot;)&gt; _\n      Protected Overrides Sub CreateChildControls()\n         \n         &#39; Add a LiteralControl to the current ControlCollection.\n         Me.Controls.Add(New LiteralControl(&quot;&lt;h3&gt;Value: &quot;))\n         \n         \n         &#39; Create a text box control, set the default Text property, \n         &#39; and add it to the ControlCollection.\n         Dim box As New TextBox()\n         box.Text = &quot;0&quot;\n         Me.Controls.Add(box)\n         \n         Me.Controls.Add(New LiteralControl(&quot;&lt;/h3&gt;&quot;))\n      End Sub &#39;CreateChildControls\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_CreateControlCollection\">\r\n    \r\n            <a id=\"System_Web_UI_Control_CreateControlCollection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateControlCollection()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object to hold the child controls (both literal and server) of the server control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.ControlCollection CreateControlCollection ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object to contain the current server control&#39;s child server controls.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override this method in a custom server control if you have created a collection object that is derived from the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class. You can then instantiate that collection class in the override of this method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example overrides the CreateControlCollection method to create an instance of a <code>CustomControlCollection</code> class, which inherits from the <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.ControlCollection_CTor_Owner#2\">\t\t// Override the CreateControlCollection method to \n\t\t// write to the Trace object when tracing is enabled\n\t\t// for the page or application in which this control\n\t\t// is included.   \n\t\tprotected override ControlCollection CreateControlCollection()\n\t\t{\n\t\t\treturn new CustomControlCollection(this);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.ControlCollection_CTor_Owner#2\">        &#39; Override the CreateControlCollection method to \n        &#39; write to the Trace object when tracing is enabled\n        &#39; for the page or application in which this control\n        &#39; is included.   \n        Protected Overrides Function CreateControlCollection() As ControlCollection\n            Return New CustomControlCollection(Me)\n        End Function\n</code></pre><p> The following code example uses the CreateControlCollection method in a custom server control override of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateChildControls_\" data-linktype=\"relative-path\">CreateChildControls</a> method. The new collection is created, and then populated with two child controls, <code>firstControl</code> and <code>secondControl</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"Control_Sample_1#1\">      Protected Overrides Sub CreateChildControls()\n         &#39; Creates a new ControlCollection. \n         Me.CreateControlCollection()\n         \n         &#39; Create child controls.\n         Dim firstControl As New ChildControl()\n         firstControl.Message = &quot;FirstChildControl&quot;\n         \n         Dim secondControl As New ChildControl()\n         secondControl.Message = &quot;SecondChildControl&quot;\n         \n         Controls.Add(firstControl)\n         Controls.Add(secondControl)\n         \n         &#39; Prevent child controls from being created again.\n         ChildControlsCreated = True\n      End Sub &#39;CreateChildControls\n      \n      \n</code></pre><pre><code class=\"lang-cs\" name=\"Control_Sample_1#1\">\n      protected override void CreateChildControls()\n      {               \n         // Creates a new ControlCollection. \n         this.CreateControlCollection();\n\n         // Create child controls.\n          ChildControl firstControl = new ChildControl();\n         firstControl.Message = &quot;FirstChildControl&quot;;\n\n         ChildControl secondControl = new ChildControl();\n         secondControl.Message = &quot;SecondChildControl&quot;;\n         \n         Controls.Add(firstControl);\n         Controls.Add(secondControl);\n\n         // Prevent child controls from being created again.\n         ChildControlsCreated = true;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DataBind\">\r\n    \r\n            <a id=\"System_Web_UI_Control_DataBind_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBind()</div>        \r\n          </div>\r\n    \r\n            <p>Binds a data source to the invoked server control and all its child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void DataBind ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to bind data from a source to a server control. This method is commonly used after retrieving a dataset through a database query. Most controls perform data binding automatically, which means that you typically do not need to call this method explicitly.  </p>\n<p> This method is commonly overridden when you create a custom templated data-bound control. For more information, see <a href=\"../Topic/How%20to:%20Create%20Templated%20ASP.NET%20User%20Controls.md\" data-linktype=\"relative-path\">How to: Create Templated ASP.NET User Controls</a> and <a href=\"../Topic/Developing%20Custom%20Data-Bound%20Web%20Server%20Controls.md\" data-linktype=\"relative-path\">Developing Custom Data-Bound Web Server Controls</a>. When called on a server control, this method resolves all data-binding expressions in the server control and in any of its child controls.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the DataBind method in a custom ASP.NET server control. It begins by calling the base <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_\" data-linktype=\"relative-path\">OnDataBinding</a> method and then uses the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method to delete all the child controls and the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState_\" data-linktype=\"relative-path\">ClearChildViewState</a> method to delete any saved view-state settings for those child controls. Finally, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated_\" data-linktype=\"relative-path\">ChildControlsCreated</a> property is set to <code>true</code> and the control is instructed to track any changes to the view state of the newly created controls with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TrackViewState_\" data-linktype=\"relative-path\">TrackViewState</a> method. This is a common technique when binding data to a control to ensure that new data does not conflict with data stored from a previous DataBind method call.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_StateManagement#6\">      public override void DataBind() \n      {\n         base.OnDataBinding(EventArgs.Empty);\n         // Reset the control&#39;s state.\n         Controls.Clear();\n         // Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         if (HasChildViewState)\n            ClearChildViewState();\n         ChildControlsCreated = true;\n         if (!IsTrackingViewState)\n            TrackViewState();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_StateManagement#6\">      Public Overrides Sub DataBind()\n         MyBase.OnDataBinding(EventArgs.Empty)\n         &#39; Reset the control&#39;s state.\n         Controls.Clear()\n         &#39; Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         If HasChildViewState Then\n            ClearChildViewState()\n         End If\n         ChildControlsCreated = True\n         If Not IsTrackingViewState Then\n            TrackViewState()\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DataBind_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_DataBind_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBind(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Binds a data source to the invoked server control and all its child controls with an option to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void DataBind (bool raiseOnDataBinding);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>raiseOnDataBinding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event is raised; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataBind method in a scenario when your custom control overrides the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method and implements the <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a> interface. In this scenario, the custom control calls the DataBind method with <code>raiseOnDataBinding</code> set to <code>false</code> to ensure that the base class&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method gets called.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind\" data-linktype=\"relative-path\">System.Web.UI.Control.DataBind()</a> method invokes the DataBind method with <code>raiseOnDataBinding</code> set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Calling the DataBind method with <code>raiseOnDataBinding</code> set to <code>false</code> causes any child controls to be data bound with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind\" data-linktype=\"relative-path\">System.Web.UI.Control.DataBind()</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DataBindChildren\">\r\n    \r\n            <a id=\"System_Web_UI_Control_DataBindChildren_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBindChildren()</div>        \r\n          </div>\r\n    \r\n            <p>Binds a data source to the server control&#39;s child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void DataBindChildren ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataBindChildren method to bind a data source to the child controls of a server control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When called on a server control, this method does not bind data to the control. To bind a server control and all its child controls, call the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Dispose\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Enables a server control to perform final clean up before it is released from memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> in an unusable state. After calling this method, you must release all references to the control so the memory it was occupying can be reclaimed by garbage collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example overrides the Dispose method to close the <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object associated with a control, and call the Dispose method on a <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control, named <code>myButton</code>. If an <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> is thrown when this version of the Dispose method is called, the control writes a message to the current <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_Dispose#1\">      public override void Dispose()\n      {\n         try\n         {\n            Context.Response.Write(&quot;Disposing &quot; + ToString());\n            // Perform resource cleanup.\n            myTextWriter.Close();\n            myButton.Dispose();\n         }\n         catch(Exception myException)\n         {\n            Context.Response.Write(&quot;Exception occurred: &quot;+myException.Message);\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_Dispose#1\">      Public Overrides Sub Dispose()\n         Try\n            Context.Response.Write(&quot;Disposing &quot; &amp; ToString())\n            &#39; Perform resource cleanup.\n            myTextWriter.Close()\n            myButton.Dispose()\n         Catch myException As Exception\n            Context.Response.Write(&quot;Exception occurred: &quot; &amp; myException.Message)\n         End Try\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_EndRenderTracing_System_IO_TextWriter_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_EndRenderTracing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndRenderTracing(TextWriter,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Ends design-time tracing of rendering data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that writes trace data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traceObject</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The trace object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_EnsureChildControls\">\r\n    \r\n            <a id=\"System_Web_UI_Control_EnsureChildControls_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureChildControls()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the server control contains child controls. If it does not, it creates child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void EnsureChildControls ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method first checks the current value of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated_\" data-linktype=\"relative-path\">ChildControlsCreated</a> property. If this value is <code>false</code>, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateChildControls_\" data-linktype=\"relative-path\">CreateChildControls</a> method is called.  </p>\n<p> The EnsureChildControls method is typically used in composite controls, which are controls that use child controls for some or all their functionality. The EnsureChildControls method is called in order to make sure that child controls have been created and are ready to process input, to perform data binding, or to perform other tasks.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is an example of a composite control. It creates child controls such as <a class=\"xref\" href=\"system.web.ui.webcontrols.table\" data-linktype=\"relative-path\">Table</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.tablerow\" data-linktype=\"relative-path\">TableRow</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecell\" data-linktype=\"relative-path\">TableCell</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> controls, which are used to render the HTML table that the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> generates.  </p>\n<p> In most cases, custom server control developers do not have to override this method. If you do override this method, use it in a way similar to the default behavior.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the EnsureChildControls method to ensure that the current server control has child controls. It then gets or sets a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox#System_Web_UI_WebControls_TextBox_Text_\" data-linktype=\"relative-path\">Text</a> property for a child <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> Web control in the current server control&#39;s <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"SystemWebUIControl CreateChildControls and EnsureChildControls#1\">       // Ensure the current control has children,\n       // then get or set the Text property.\n        public int Value {\n           get {\n               this.EnsureChildControls();\n               return Int32.Parse(((TextBox)Controls[1]).Text);\n           }\n           set {\n               this.EnsureChildControls();\n               ((TextBox)Controls[1]).Text = value.ToString();\n           }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"SystemWebUIControl CreateChildControls and EnsureChildControls#1\">      &#39; Ensure the current control has children,\n      &#39; then get or set the Text property.\n      \n      Public Property Value() As Integer\n         Get\n            Me.EnsureChildControls()\n            Return Int32.Parse(CType(Controls(1), TextBox).Text)\n         End Get\n         Set\n            Me.EnsureChildControls()\n            CType(Controls(1), TextBox).Text = value.ToString()\n         End Set\n      End Property\n      \n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_EnsureID\">\r\n    \r\n            <a id=\"System_Web_UI_Control_EnsureID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureID()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an identifier for controls that do not have an identifier assigned.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void EnsureID ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EnsureID method generates an identifier for controls that are contained in another control. Identifiers are generated only for controls that do not have a value assigned to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_FindControl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_FindControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindControl(String)</div>        \r\n          </div>\r\n    \r\n            <p>Searches the current naming container for a server control with the specified <code>id</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.Control FindControl (string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier for the control to be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The specified control, or <code>null</code> if the specified control does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use FindControl to access a control from a function in a code-behind page, to access a control that is inside another container, or in other circumstances where the target control is not directly accessible to the caller. This method will find a control only if the control is directly contained by the specified container; that is, the method does not search throughout a hierarchy of controls within controls. For information about how to find a control when you do not know its immediate container, see <a href=\"../Topic/How%20to:%20Access%20Server%20Controls%20by%20ID.md\" data-linktype=\"relative-path\">How to: Access Server Controls by ID</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a <code>Button1_Click</code> event handler. When invoked, this handler uses the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_\" data-linktype=\"relative-path\">FindControl</a> method to locate a control with an <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property of <code>TextBox2</code> on the containing page. If the control is found, its parent is determined using the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Parent_\" data-linktype=\"relative-path\">Parent</a> property and the parent control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> is written to the page. If <code>TextBox2</code> is not found, &quot;Control Not Found&quot; is written to the page.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"System.Web.UI.Page.Parent_FindControl#1\">private void Button1_Click(object sender, EventArgs MyEventArgs)\n{\n      // Find control on page.\n      Control myControl1 = FindControl(&quot;TextBox2&quot;);\n      if(myControl1!=null)\n      {\n         // Get control&#39;s parent.\n         Control myControl2 = myControl1.Parent;\n         Response.Write(&quot;Parent of the text box is : &quot; + myControl2.ID);\n      }\n      else\n      {\n         Response.Write(&quot;Control not found&quot;);\n      }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.Page.Parent_FindControl#1\">\n   Private Sub Button1_Click(sender As Object, MyEventArgs As EventArgs)\n   &#39; Find control on page.\n   Dim myControl1 As Control = FindControl(&quot;TextBox2&quot;)\n   If (Not myControl1 Is Nothing)\n      &#39; Get control&#39;s parent.\n      Dim myControl2 As Control = myControl1.Parent\n      Response.Write(&quot;Parent of the text box is : &quot; &amp; myControl2.ID)\n   Else\n      Response.Write(&quot;Control not found.....&quot;)\n   End If\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_FindControl_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_FindControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindControl(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Searches the current naming container for a server control with the specified <code>id</code> and an integer, specified in the <code>pathOffset</code> parameter, which aids in the search. You should not override this version of the <span class=\"xref\">stem.Web.UI.Control.FindControl*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier for the control to be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of controls up the page control hierarchy needed to reach a naming container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The specified control, or <code>null</code> if the specified control does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Focus\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Focus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Focus()</div>        \r\n          </div>\r\n    \r\n            <p>Sets input focus to a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Focus ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Focus method to set the initial focus of the Web page to the control. The page will be opened in the browser with the control selected.  </p>\n<p> The Focus method causes a call to the page focus script to be emitted on the rendered page. If the page does not contain a control with an HTML <code>ID</code> attribute that matches the control that the Focus method was invoked on, then page focus will not be set. An example where this can occur is when you set the focus on a user control instead of setting the focus on a child control of the user control. In this scenario, you can use the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_\" data-linktype=\"relative-path\">FindControl</a> method to find the child control of the user control and invoke its Focus method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_GetDesignModeState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_GetDesignModeState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDesignModeState()</div>        \r\n          </div>\r\n    \r\n            <p>Gets design-time data for a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Collections.IDictionary GetDesignModeState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> containing the design-time data for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetDesignModeState method returns design-time data for a control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_GetRouteUrl_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_GetRouteUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRouteUrl(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URL that corresponds to a set of route parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetRouteUrl (object routeParameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeParameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL that corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_System_Web_Routing_RequestContext_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">System.Web.Routing.RouteCollection.GetVirtualPath(RequestContext,RouteValueDictionary)</a> method. This method converts the object that is passed in <code>routeParameters</code> to a <a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a> object by using the <a class=\"xref\" href=\"system.web.routing.routevaluedictionary#System_Web_Routing_RouteValueDictionary__ctor_System_Object_\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call the GetRouteUrl method to get the URL of a route that has parameters that are named <code>productid</code> and <code>category</code>. This example assumes that you have created a <a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlink\" data-linktype=\"relative-path\">HyperLink</a> control that is named <code>HyperLink1</code>.  </p>\n<pre><code class=\"lang-vb#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  New With {.productid = &quot;1&quot;, .category = &quot;widgets&quot;})  \n</code></pre><pre><code class=\"lang-c#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  new { productid = &quot;1&quot;, category = &quot;widgets&quot; });  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_GetRouteUrl_System_Web_Routing_RouteValueDictionary_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_GetRouteUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRouteUrl(RouteValueDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URL that corresponds to a set of route parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeParameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL that corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_System_Web_Routing_RequestContext_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">System.Web.Routing.RouteCollection.GetVirtualPath(RequestContext,RouteValueDictionary)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to get the URL of a route that has parameters that are named <code>productid</code> and <code>category</code>. This example assumes that you have created a <a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlink\" data-linktype=\"relative-path\">HyperLink</a> control that is named <code>HyperLink1</code>.  </p>\n<pre><code class=\"lang-vb#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;})  \n</code></pre><pre><code class=\"lang-c#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  (new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;});  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_GetRouteUrl_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_GetRouteUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRouteUrl(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URL that corresponds to a set of route parameters and a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetRouteUrl (string routeName, object routeParameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeParameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL that corresponds to the specified route parameters and route name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_System_Web_Routing_RequestContext_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">System.Web.Routing.RouteCollection.GetVirtualPath(RequestContext,String,RouteValueDictionary)</a> method. This method converts the object that is passed in <code>routeParameters</code> to a <a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a> object by using the <a class=\"xref\" href=\"system.web.routing.routevaluedictionary#System_Web_Routing_RouteValueDictionary__ctor_System_Object_\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to get the URL of a route that is named <code>Product</code> and has parameters that are named <code>productid</code> and <code>category</code>. This example assumes that you have created a <a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlink\" data-linktype=\"relative-path\">HyperLink</a> control that is named <code>HyperLink1</code>.  </p>\n<pre><code class=\"lang-vb#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(&quot;Product&quot;,  \n  New With {.productid = &quot;1&quot;, .category = &quot;widgets&quot;})  \n</code></pre><pre><code class=\"lang-c#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(&quot;Product&quot;,  \n  new { productid = &quot;1&quot;, category = &quot;widgets&quot; });  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_GetRouteUrl_System_String_System_Web_Routing_RouteValueDictionary_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_GetRouteUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRouteUrl(String,RouteValueDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URL that corresponds to a set of route parameters and a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeParameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL that corresponds to the specified route parameters and route name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_System_Web_Routing_RequestContext_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">System.Web.Routing.RouteCollection.GetVirtualPath(RequestContext,String,RouteValueDictionary)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to get the URL of a route that is named <code>Product</code> and has parameters that are named <code>productid</code> and <code>category</code>. This example assumes that you have created a <a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlink\" data-linktype=\"relative-path\">HyperLink</a> control that is named <code>HyperLink1</code>.  </p>\n<pre><code class=\"lang-vb#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(&quot;Product&quot;,  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;})  \n</code></pre><pre><code class=\"lang-c#\">HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(&quot;Product&quot;,  \n  (new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;});  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_GetUniqueIDRelativeTo_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_GetUniqueIDRelativeTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUniqueIDRelativeTo(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the prefixed portion of the <span class=\"xref\">stem.Web.UI.Control.UniqueID*</span> property of the specified control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetUniqueIDRelativeTo (System.Web.UI.Control control);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A control that is within a naming container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The prefixed portion of the <span class=\"xref\">stem.Web.UI.Control.UniqueID*</span> property of the specified control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Web.UI.Control.NamingContainer*</span> property of <code>control</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>control</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID_\" data-linktype=\"relative-path\">UniqueID</a> property of a control is generated by adding a prefix to the control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> property. The prefix is composed of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID_\" data-linktype=\"relative-path\">UniqueID</a> property of the control&#39;s naming container concatenated with a separator character. If the naming container is the page, there is no prefix. This method returns the prefix string. If there is no prefix string, it returns the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID_\" data-linktype=\"relative-path\">UniqueID</a> value of the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_HasControls\">\r\n    \r\n            <a id=\"System_Web_UI_Control_HasControls_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasControls()</div>        \r\n          </div>\r\n    \r\n            <p>Determines if the server control contains any child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool HasControls ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control contains other controls; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Since this method simply determines if any child controls exist, it can enhance performance by allowing you to avoid an unnecessary <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Count_\" data-linktype=\"relative-path\">Count</a> property call. Calls to this property require a <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object to be instantiated. If there are no children, this object creation wastes server resources.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the HasControls method to determine if any controls exist before using the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Count_\" data-linktype=\"relative-path\">Count</a> property to iterate through a <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Control.HasControls Example#1\">        If HasControls() Then\n            Dim i As Integer\n            For i = 0 To Controls.Count - 1\n                Controls(i).RenderControl(writer)\n            Next i\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Control.HasControls Example#1\">if (HasControls()) {\n                 for (int i=0; i &lt; Controls.Count; i++) {\n                     Controls[i].RenderControl(writer);\n                 }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_HasEvents\">\r\n    \r\n            <a id=\"System_Web_UI_Control_HasEvents_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasEvents()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether events are registered for the control or any child controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool HasEvents ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if events are registered; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_IsLiteralContent\">\r\n    \r\n            <a id=\"System_Web_UI_Control_IsLiteralContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsLiteralContent()</div>        \r\n          </div>\r\n    \r\n            <p>Determines if the server control holds only literal content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsLiteralContent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the server control contains solely literal content; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method returns <code>true</code>, the server control&#39;s collection holds a single literal control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks whether the page that contains the server controls has posted back. If it has, it calls the IsLiteralContent method to determine whether the control contains just literal content, or is a parent control to other server controls. If it contains solely literal content, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID_\" data-linktype=\"relative-path\">UniqueID</a> property of the <a class=\"xref\" href=\"system.web.ui.literalcontrol\" data-linktype=\"relative-path\">LiteralControl</a> that represents that content is written to the response.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.Control_ViewStateIgnoresCase#1\">      &#39; Override the OnLoad method to check if the \n      &#39; page that uses this control has posted back.\n      &#39; If so, check whether this controls contains\n      &#39; only literal content, and if it does,\n      &#39; it gets the UniqueID property and writes it\n      &#39; to the page. Otherwise, it writes a message\n      &#39; that the control contains more than literal content.\n      Overrides Protected Sub OnLoad(ByVal e As EventArgs)\n\n         If Page.IsPostBack = True Then\n            Dim s As String\n\n            If Me.IsLiteralContent() = True Then\n               s = Controls(0).UniqueID\n               Context.Response.Write(s)\n            Else\n               Context.Response.Write( _\n               &quot;The control contains more than literal content.&quot;)\n            End If\n         End If\n      End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.Control_ViewStateIgnoresCase#1\">                // Override the OnLoad method to check if the \n                // page that uses this control has posted back.\n                // If so, check whether this controls contains\n                // only literal content, and if it does,\n                // it gets the UniqueID property and writes it\n                // to the page. Otherwise, it writes a message\n                // that the control contains more than literal content.\n                protected override void OnLoad(EventArgs e)\n                {\n                        if (Page.IsPostBack)\n                        {\n                                String s;\n\n                                if (this.IsLiteralContent())\n                                {\n                                        s = Controls[0].UniqueID;\n                                        Context.Response.Write(s);\n                                }\n                                else\n                                {\n                                        Context.Response.Write(\n                                                &quot;The control contains more than literal content.&quot;);\n                                }\n                        }\n                }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_LoadControlState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_LoadControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadControlState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Restores control-state information from a previous page request that was saved by the <span class=\"xref\">stem.Web.UI.Control.SaveControlState*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void LoadControlState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the control state to be restored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override this method when you need to specify how a custom server control restores its control state. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example overrides the LoadControlState method in a custom ASP.NET control. When this method is invoked, it determines whether control state was previously saved for the control and, if so, sets the internal property <code>currentIndex</code> to the saved value.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnInit_\" data-linktype=\"relative-path\">OnInit</a> method is overridden to call the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_RegisterRequiresControlState_\" data-linktype=\"relative-path\">RegisterRequiresControlState</a> method on the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page_\" data-linktype=\"relative-path\">Page</a> to indicate that the custom control uses control state.  </p>\n<pre><code class=\"lang-vb\" name=\"ControlState#1\">  Class Sample\n    Inherits Control\n    \n    Dim currentIndex As Integer\n    \n        Protected Overrides Sub OnInit(ByVal e As EventArgs)\n            Page.RegisterRequiresControlState(Me)\n            currentIndex = 0\n            MyBase.OnInit(e)\n        End Sub\n    \n        Protected Overrides Function SaveControlState() As Object\n            If currentIndex &lt;&gt; 0 Then\n                Return CType(currentIndex, Object)\n            Else\n                Return Nothing\n            End If\n        End Function\n    \n        Protected Overrides Sub LoadControlState(ByVal state As Object)\n            If (state &lt;&gt; Nothing) Then\n                currentIndex = CType(state, Integer)\n            End If\n        End Sub\n    \n  End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"ControlState#1\">public class Sample : Control {\n    private int currentIndex = 0;\n   \n    protected override void OnInit(EventArgs e) {\n        Page.RegisterRequiresControlState(this);\n        base.OnInit(e);\n    }\n\n    protected override object SaveControlState() {\n        return currentIndex != 0 ? (object)currentIndex : null;\n    }\n\n    protected override void LoadControlState(object state) {\n        if (state != null) {\n            currentIndex = (int)state;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Restores view-state information from a previous page request that was saved by the <span class=\"xref\">stem.Web.UI.Control.SaveViewState*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void LoadViewState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the control state to be restored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the LoadViewState method for a custom ASP.NET server control. It creates an <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> array to contain the view state information passed in the <code>savedState</code> parameter, and then calls the base implementation of the LoadViewState method for the first index location of the array. It assigns the values stored at the next two index locations to variables named <code>UserText</code> and <code>PasswordText</code>, respectively.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_StateManagement#1\">      protected override void LoadViewState(object savedState) \n      {\n         if (savedState != null)\n         {\n            // Load State from the array of objects that was saved at ;\n            // SavedViewState.\n            object[] myState = (object[])savedState;\n            if (myState[0] != null)\n               base.LoadViewState(myState[0]);\n            if (myState[1] != null)\n               UserText = (string)myState[1];\n            if (myState[2] != null)\n               PasswordText = (string)myState[2];\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_StateManagement#1\">      Protected Overrides Sub LoadViewState(savedState As Object)\n         If Not (savedState Is Nothing) Then\n            &#39; Load State from the array of objects that was saved at ;\n            &#39; SavedViewState.\n            Dim myState As Object() = CType(savedState, Object())\n            If Not (myState(0) Is Nothing) Then\n               MyBase.LoadViewState(myState(0))\n            End If\n            If Not (myState(1) Is Nothing) Then\n               UserText = CStr(myState(1))\n            End If\n            If Not (myState(2) Is Nothing) Then\n               PasswordText = CStr(myState(2))\n            End If\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_MapPathSecure_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_MapPathSecure_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MapPathSecure(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the physical path that a virtual path, either absolute or relative, maps to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected string MapPathSecure (string virtualPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>virtualPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A relative or root relative URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The physical path to the requested file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>virtualPath</code> is <code>null</code> or an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can only be used by server controls that have permissions to read files and which are part of fully trusted .dll files, such as System.Web.dll. This helps prevent security breaches.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the MapPathSecure method to obtain the physical path of a virtual directory of the containing <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> or <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_MapPathSecure#1\">   // An HttpException occurs if the server control does not,;\n   // have permissions to read the resulting mapped file. \n        output.Write(&quot;The Actual Path of the virtual directory : &quot;+\n        MapPathSecure(TemplateSourceDirectory)+&quot;&lt;br&gt;&quot;);\n\n       // Get all the files from the absolute path of &#39;MyControl&#39;;\n       // using TemplateSourceDirectory which gives the virtual Directory.\n           string [] myFiles=\n           Directory.GetFiles(MapPathSecure(TemplateSourceDirectory));\n           output.Write(&quot;The files in this Directory are &lt;br&gt;&quot;);\n\n            // List all the files.\n            for (int i=0;i&lt;myFiles.Length;i++)\n               output.Write(myFiles[i]+&quot;&lt;br&gt;&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_MapPathSecure#1\">            &#39; An HttpException occurs if the server control does not,;\n            &#39; have permissions to read the resulting mapped file.\n            output.Write(&quot;The Actual Path of the virtual directory : &quot; &amp; _\n                        MapPathSecure(TemplateSourceDirectory) &amp; &quot;&lt;br&gt;&quot;)\n\n            &#39; Get all the files from the absolute path of &#39;MyControl&#39;;\n            &#39; using TemplateSourceDirectory which gives the virtual Directory.\n            Dim myFiles As String() = Directory.GetFiles(MapPathSecure(TemplateSourceDirectory))\n            output.Write(&quot;The files in this Directory are &lt;br&gt;&quot;)\n\n            &#39; List all the files.\n            Dim i As Integer\n            For i = 0 To myFiles.Length - 1\n               output.Write(myFiles(i) &amp; &quot;&lt;br&gt;&quot;)\n            Next i\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OnBubbleEvent_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OnBubbleEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBubbleEvent(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the event for the server control is passed up the page&#39;s UI server control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool OnBubbleEvent (object source, EventArgs args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event has been canceled; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET server controls such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> Web controls can contain child controls that raise events. For example, each row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can contain one or more buttons created dynamically by templates. Rather than each button raising an event individually, events from the nested controls are &quot;bubbled&quot;—that is, they are sent to the naming container. The naming container in turn raises a generic event called <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> with parameter values. These values allow you to determine which individual control that raised the original event. By responding to this single event, you can avoid having to write individual event-handling methods for child controls.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the OnBubbleEvent method in a custom ASP.NET server control, <code>ParentControl</code>. This method is invoked when a child control of <code>ParentControl</code> calls the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RaiseBubbleEvent_\" data-linktype=\"relative-path\">RaiseBubbleEvent</a> method. When this happens, the <code>ParentControl</code> class writes two strings to the containing ASP.NET page, the first stating that its OnBubbleEvent method has been called, the second identifying the source control of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RaiseBubbleEvent_\" data-linktype=\"relative-path\">RaiseBubbleEvent</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1\">   Public Class ParentControl\n      Inherits Control\n      \n      &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n      Protected Overrides Function OnBubbleEvent(sender As Object, e As EventArgs) As Boolean\n         Context.Response.Write(&quot;&lt;br&gt;&lt;br&gt;ParentControl&#39;s OnBubbleEvent called.&quot;)\n         Context.Response.Write((&quot;&lt;br&gt;Source of event is: &quot; + sender.ToString()))\n         Return True\n      End Function &#39;OnBubbleEvent\n      \n      &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n      Protected Overrides Sub Render(myWriter As HtmlTextWriter)\n         myWriter.Write(&quot;ParentControl&quot;)\n         RenderChildren(myWriter)\n      End Sub &#39;Render\n   End Class &#39;ParentControl\n    _\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1\">  public class ParentControl : Control \n  {\n     [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \n     protected override bool OnBubbleEvent(object sender, EventArgs e)\n     {\n        Context.Response.Write(&quot;&lt;br&gt;&lt;br&gt;ParentControl&#39;s OnBubbleEvent called.&quot;);\n        Context.Response.Write(&quot;&lt;br&gt;Source of event is: &quot; + sender.ToString());\n        return true;\n     }\n     [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \n     protected override void Render( HtmlTextWriter myWriter)\n     {\n        myWriter.Write(&quot;ParentControl&quot;);\n        RenderChildren(myWriter);\n     }\n  }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OnDataBinding_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OnDataBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataBinding(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDataBinding (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method notifies a server control to perform any logic for binding data that is associated with it.  </p>\n<p> If you want to handle the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event, you should override this event-handling method. This ensures that all delegates attached to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a> event are invoked.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to override the OnDataBinding method to add child controls to the parent control from a data source.  </p>\n<pre><code class=\"lang-cs\" name=\"TemplatedDataBoundControl#3\">        // Override to create the repeated items from the DataSource.\n        protected override void OnDataBinding(EventArgs e) {\n            base.OnDataBinding(e);\n\n            if (DataSource != null) {\n                // Clear any existing child controls.\n                Controls.Clear();\n                // Clear any previous view state for the existing child controls.\n                ClearChildViewState();\n\n                // Iterate over the DataSource, creating a new item for each data item.\n                IEnumerator dataEnum = DataSource.GetEnumerator();\n                int i = 0;\n                while(dataEnum.MoveNext()) {\n\n                    // Create an item.\n                    RepeaterItem item = new RepeaterItem(i, dataEnum.Current);\n                    // Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(item);\n                    // Add the item to the ControlCollection.\n                    Controls.Add(item);\n\n                    i++;\n                }\n\n                // Prevent child controls from being created again.\n                ChildControlsCreated = true;\n                // Store the number of items created in view state for postback scenarios.\n                ViewState[&quot;NumItems&quot;] = i;\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"TemplatedDataBoundControl#3\">        &#39; Override to create the repeated items from the DataSource.\n        Protected Overrides Sub OnDataBinding(E As EventArgs)\n            MyBase.OnDataBinding(e)\n\n            If Not DataSource Is Nothing\n                &#39; Clear any existing child controls.\n                Controls.Clear()\n                &#39; Clear any previous view state for the existing child controls.\n                ClearChildViewState()\n\n                &#39; Iterate over the DataSource, creating a new item for each data item.\n                Dim DataEnum As IEnumerator = DataSource.GetEnumerator()\n                Dim I As Integer = 0\n                Do While (DataEnum.MoveNext())\n\n                    &#39; Create an item.\n                    Dim Item As RepeaterItemVB = New RepeaterItemVB(I, DataEnum.Current)\n                    &#39; Initialize the item from the template.\n                    ItemTemplate.InstantiateIn(Item)\n                    &#39; Add the item to the ControlCollection.\n                    Controls.Add(Item)\n\n                    I = I + 1\n                Loop\n\n                &#39; Prevent child controls from being created again.\n                ChildControlsCreated = true\n                &#39; Store the number of items created in view state for postback scenarios.\n                ViewState(&quot;NumItems&quot;) = I\n            End If\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OnInit_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OnInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInit(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnInit (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET calls this method to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event. If you are developing a custom control, you can override this method in order to provide additional processing. If you override this method, call the base control&#39;s OnInit method to notify subscribers to the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"System.Web.UI.Control_Context_OnInit_ResolveUrl#3\">        &#39; Override the OnInit method to set _text to \n        &#39; a default value if it is null.\n        &lt;System.Security.Permissions.PermissionSetAttribute( _\n          System.Security.Permissions.SecurityAction.Demand, _\n            Name:=&quot;FullTrust&quot;)&gt; _\n        Protected Overrides Sub OnInit(ByVal e As EventArgs)\n            MyBase.OnInit(e)\n            If _text Is Nothing Then\n                _text = &quot;Here is some default text.&quot;\n            End If\n        End Sub &#39;OnInit\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.Control_Context_OnInit_ResolveUrl#3\">   // Override the OnInit method to set _text to\n   // a default value if it is null.\n   [System.Security.Permissions.PermissionSet\n       (System.Security.Permissions.SecurityAction.Demand, \n        Name=&quot;FullTrust&quot;)] \n   protected override void OnInit(EventArgs e)\n   {\n      base.OnInit(e);\n      if ( _text == null)\n           _text = &quot;Here is some default text.&quot;;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OnLoad_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OnLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLoad(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnLoad (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET calls this method to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event. If you are developing a custom control, you can override this method in order to provide additional processing. If you override this method, call the base control&#39;s OnLoad method to notify subscribers to the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"Control_OnUnload#3\">        Protected Overrides Sub OnLoad(ByVal e As EventArgs)\n            MyBase.OnLoad(e)\n            If _text Is Nothing Then\n                _text = &quot;Here is some default text.&quot;\n            End If\n        End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Control_OnUnload#3\">        // Override the OnLoad method to set _text to\n        // a default value if it is null.\n        protected override void OnLoad(EventArgs e)\n        {\n            base.OnLoad(e);\n            if (_text == null)\n                _text = &quot;Here is some default text.&quot;;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OnPreRender_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OnPreRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPreRender(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPreRender (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET calls this method to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event. If you are developing a custom control, you can override this method in order to provide additional processing. If you override this method, call the base control&#39;s OnPreRender method to notify subscribers to the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"Control_Sample_1_snipper#1\">        &#39; Override the OnPreRender method to set _message to\n        &#39; a default value if it is null.\n        Protected Overrides Sub OnPreRender(ByVal e As EventArgs)\n            MyBase.OnPreRender(e)\n            If _message Is Nothing Then\n                _message = &quot;Here is some default text.&quot;\n            End If\n        End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Control_Sample_1_snipper#1\">        // Override the OnPreRender method to set _message to\n        // a default value if it is null.\n        protected override void OnPreRender(EventArgs e)\n        {\n            base.OnPreRender(e);\n            if (_message == null)\n                _message = &quot;Here is some default text.&quot;;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OnUnload_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OnUnload_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUnload(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Unload\" data-linktype=\"relative-path\">Unload</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUnload (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET calls this method to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Unload\" data-linktype=\"relative-path\">Unload</a> event. If you are developing a custom control, you can override this method in order to provide additional processing. If you override this method, call the base control&#39;s OnUnload method to notify subscribers to the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"Control_OnUnload#2\">        &#39; Override the OnUnLoad method to set _text to\n        &#39; a default value if it is null.\n        Protected Overrides Sub OnUnload(ByVal e As EventArgs)\n            MyBase.OnUnload(e)\n            If _text Is Nothing Then\n                _text = &quot;Here is some default text.&quot;\n            End If\n        End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Control_OnUnload#2\">        // Override the OnUnLoad method to set _text to\n        // a default value if it is null.\n        protected override void OnUnload(EventArgs e)\n        {\n            base.OnUnload(e);\n            if (_text == null)\n                _text = &quot;Here is some default text.&quot;;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_OpenFile_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_OpenFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read a file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.IO.Stream OpenFile (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the desired file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that references the desired file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Access to the specified file was denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OpenFile method returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the contents of the file specified in the <code>path</code> parameter. The path parameter can be either a relative or root URL without a protocol (such as &quot;~/mySite/myFile.txt), or a physical path, either local (&quot;c:\\mySite\\myFile.txt&quot;) or UNC (&quot;\\\\myServer\\myFile.txt&quot;).  </p>\n<p> The OpenFile method uses file access security to control access to the specified file. If the current ASP.NET user does not have access to the file, then the file is not opened and an <a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a> exception is thrown to indicate that access was denied. If the <code>path</code> parameter specified a relative path, the exception does not include information about the physical path to the requested file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_RaiseBubbleEvent_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_RaiseBubbleEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaiseBubbleEvent(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Assigns any sources of the event and its information to the control&#39;s parent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void RaiseBubbleEvent (object source, EventArgs args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET server controls such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.repeater\" data-linktype=\"relative-path\">Repeater</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.datalist\" data-linktype=\"relative-path\">DataList</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> Web controls can contain child controls that raise events. For example, each row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can contain one or more buttons created dynamically by templates. Rather than each button raising an event individually, events from the nested controls are &quot;bubbled&quot;—that is, they are sent to the control&#39;s parent. The parent in turn raises a generic event called <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> with parameter values. These values allow you to determine which individual control that raised the original event. By responding to this single event, you can avoid having to write individual event-handling methods for child controls.  </p>\n<p> While you cannot override this method, controls you author can handle or raise bubbled events by overriding the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnBubbleEvent_\" data-linktype=\"relative-path\">OnBubbleEvent</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrate how to create a custom class, <code>ChildControl</code>, overriding the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_OnClick_\" data-linktype=\"relative-path\">OnClick</a> method to call the RaiseBubbleEvent method that sends the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_Click\" data-linktype=\"relative-path\">System.Web.UI.WebControls.Button.Click</a> event to its parent ASP.NET server control. When the user clicks a button in an ASP.NET page that includes an instance of <code>ChildControl</code>, it raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnBubbleEvent_\" data-linktype=\"relative-path\">OnBubbleEvent</a> method on the parent control that contains the instance of <code>ChildControl</code> and writes the string &quot;The ChildControl class OnClick method is called&quot; to the page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2\">   Public Class ChildControl\n      Inherits Button\n      \n      &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n      Protected Overrides Sub OnClick(e As EventArgs)\n         MyBase.OnClick(e)\n         Context.Response.Write(&quot;&lt;br&gt;&lt;br&gt;ChildControl&#39;s OnClick called.&quot;)\n         &#39; Bubble this event to parent.\n         RaiseBubbleEvent(Me, e)\n      End Sub &#39;OnClick\n   End Class &#39;ChildControl \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2\">  public class ChildControl : Button\n  {\n     [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \n     protected override void OnClick(EventArgs e) \n     {\n        base.OnClick(e);\n        Context.Response.Write(&quot;&lt;br&gt;&lt;br&gt;ChildControl&#39;s OnClick called.&quot;);\n        // Bubble this event to parent.\n        RaiseBubbleEvent(this, e);\n     }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_RemovedControl_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_RemovedControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemovedControl(Control)</div>        \r\n          </div>\r\n    \r\n            <p>Called after a child control is removed from the <span class=\"xref\">stem.Web.UI.Control.Controls*</span> collection of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void RemovedControl (System.Web.UI.Control control);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> that has been removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The control is a <a class=\"xref\" href=\"system.web.ui.webcontrols.substitution\" data-linktype=\"relative-path\">Substitution</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RemovedControl method is called immediately after a control is removed from the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Render_System_Web_UI_HtmlTextWriter_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_Render_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Render(HtmlTextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Sends server control content to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, which writes the content to be rendered on the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Render (System.Web.UI.HtmlTextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object that receives the server control content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When developing custom server controls, you can override this method to generate content for an ASP.NET page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates overriding the Render method. The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasControls_\" data-linktype=\"relative-path\">HasControls</a> method is used to determine whether the server control has any child controls stored in its <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object, which is accessible through the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> property. If <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasControls_\" data-linktype=\"relative-path\">HasControls</a> returns true and the first server control in the collection is literal text, then the literal text is appended to an HTML string.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Control.Render Example#1\">[System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \nprotected override void Render(HtmlTextWriter output) {\n    if ( (HasControls()) &amp;&amp; (Controls[0] is LiteralControl) ) {\n        output.Write(&quot;&lt;H2&gt;Your Message: &quot; + ((LiteralControl) Controls[0]).Text + &quot;&lt;/H2&gt;&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Control.Render Example#1\">&lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nProtected Overrides Sub Render(Output As HtmlTextWriter)\n    If HasControls() And TypeOf Controls(0) Is LiteralControl\n        Dim Ctrl As LiteralControl = CType(Controls(0), LiteralControl)\n        Output.Write(&quot;&lt;H2&gt;Your Message: &quot; &amp; Ctrl.Text &amp; &quot;&lt;/H2&gt;&quot;)\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_RenderChildren_System_Web_UI_HtmlTextWriter_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_RenderChildren_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderChildren(HtmlTextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Outputs the content of a server control&#39;s children to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object, which writes the content to be rendered on the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object that receives the rendered content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method notifies ASP.NET to render any Active Server Pages (ASP) code on the page. If no ASP code exists on the page, this method renders any child controls for the server control. This method is called by the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Render_\" data-linktype=\"relative-path\">Render</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the RenderChildren method in a custom server control. It determines whether the current control has any child controls in its <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object. If it does, it uses the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Count_\" data-linktype=\"relative-path\">Count</a> property to iterate through the collection. As it encounters each child control, it uses the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderControl_\" data-linktype=\"relative-path\">RenderControl</a> method to render the parent control, and all of its child controls, to the containing page.  </p>\n<p> The overridden <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Render_\" data-linktype=\"relative-path\">Render</a> method then calls the overridden RenderChildren method.  </p>\n<pre><code class=\"lang-vb\" name=\"Control_Sample_1#4\">&#39; Override default implementation to Render children according to needs. \n      Protected Overrides Sub RenderChildren(output As HtmlTextWriter)\n         If HasControls() Then\n            &#39; Render Children in reverse order.\n            Dim i As Integer\n\n            For i = Controls.Count - 1 To 0 Step -1\n               Controls(i).RenderControl(output)\n            Next\n\n         End If\n      End Sub &#39;RenderChildren\n      \n      \n      Protected Overrides Sub Render(output As HtmlTextWriter)\n         output.Write((&quot;&lt;br&gt;Message from Control : &quot; + Message))\n         output.Write((&quot;Showing Custom controls created in reverse&quot; + &quot;order&quot;))\n         &#39; Render Controls.\n         RenderChildren(output)\n      End Sub\n   End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Control_Sample_1#4\">      // Override default implementation to Render children according to needs. \n      protected override void RenderChildren(HtmlTextWriter output)\n      {\n         if (HasControls())\n         {\n            // Render Children in reverse order.\n            for(int i = Controls.Count - 1; i &gt;= 0; --i)\n            {\n               Controls[i].RenderControl(output);\n            }\n         }         \n      }\n\n      protected override void Render(HtmlTextWriter output)\n      {       \n         output.Write(&quot;&lt;br&gt;Message from Control : &quot; + Message);       \n         output.Write(&quot;Showing Custom controls created in reverse&quot; +\n                                                          &quot;order&quot;);         \n         // Render Controls.\n         RenderChildren(output);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_RenderControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderControl(HtmlTextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Outputs server control content to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object and stores tracing information about the control if tracing is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object that receives the control content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a server control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property is set to <code>true</code>, this method determines whether tracing is enabled for the page. If so, it stores trace information associated with the control, and renders the server control content to the page.  </p>\n<p> This method is automatically called by the page during the rendering, but can be overridden by custom control developers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderChildren_\" data-linktype=\"relative-path\">RenderChildren</a> method in a custom server control. It determines whether the current control has any child controls in its <a class=\"xref\" href=\"system.web.ui.controlcollection\" data-linktype=\"relative-path\">ControlCollection</a> object. If it does, it uses the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Count_\" data-linktype=\"relative-path\">Count</a> property to iterate through the collection. As it encounters each child control, it uses the RenderControl method to render the child control, and all of its child controls, to the containing page. The <a class=\"xref\" href=\"system.web.ui.xhtmltextwriter\" data-linktype=\"relative-path\">XhtmlTextWriter</a> object that is passed to this method is instantiated by the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Render_\" data-linktype=\"relative-path\">Render</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"Control_Sample_1#3\">&#39; Override default implementation to Render children according to needs. \n      Protected Overrides Sub RenderChildren(output As HtmlTextWriter)\n         If HasControls() Then\n            &#39; Render Children in reverse order.\n            Dim i As Integer\n\n            For i = Controls.Count - 1 To 0 Step -1\n               Controls(i).RenderControl(output)\n            Next\n\n         End If\n      End Sub &#39;RenderChildren\n      \n      \n      Protected Overrides Sub Render(output As HtmlTextWriter)\n         output.Write((&quot;&lt;br&gt;Message from Control : &quot; + Message))\n         output.Write((&quot;Showing Custom controls created in reverse&quot; + &quot;order&quot;))\n         &#39; Render Controls.\n         RenderChildren(output)\n      End Sub\n   End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Control_Sample_1#3\">      // Override default implementation to Render children according to needs. \n      protected override void RenderChildren(HtmlTextWriter output)\n      {\n         if (HasControls())\n         {\n            // Render Children in reverse order.\n            for(int i = Controls.Count - 1; i &gt;= 0; --i)\n            {\n               Controls[i].RenderControl(output);\n            }\n         }         \n      }\n\n      protected override void Render(HtmlTextWriter output)\n      {       \n         output.Write(&quot;&lt;br&gt;Message from Control : &quot; + Message);       \n         output.Write(&quot;Showing Custom controls created in reverse&quot; +\n                                                          &quot;order&quot;);         \n         // Render Controls.\n         RenderChildren(output);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_System_Web_UI_Adapters_ControlAdapter_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_RenderControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderControl(HtmlTextWriter,ControlAdapter)</div>        \r\n          </div>\r\n    \r\n            <p>Outputs server control content to a provided <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object using a provided <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> that receives the control content.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>adapter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> that defines the rendering.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET Web pages are usable across a wide range of devices and browsers that can request information from the Web. The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Adapter_\" data-linktype=\"relative-path\">Adapter</a> property returns the <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> object that renders the control on the requesting device or browser&#39;s screen.  </p>\n<p> For more information about adapters, see <a href=\"../Topic/Architectural%20Overview%20of%20Adaptive%20Control%20Behavior.md\" data-linktype=\"relative-path\">Architectural Overview of Adaptive Control Behavior</a>.  </p>\n<p> If a server control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property is set to <code>true</code> and tracing is enabled for the page, then trace information associated with the control is captured.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ResolveAdapter\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ResolveAdapter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveAdapter()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the control adapter responsible for rendering the specified control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.adapters.controladapter\" data-linktype=\"relative-path\">ControlAdapter</a> that will render the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET Web pages are viewable across a wide range of devices that are capable of requesting pages from the Web. The ResolveAdapter method returns the control adapter responsible for rendering the control on the specific browser or device that requested the ASP.NET page.  </p>\n<p> The specific adapter type returned depends on the descendent type of the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> class that is being rendered.  </p>\n<p> For more information about adapters, see <a href=\"../Topic/Architectural%20Overview%20of%20Adaptive%20Control%20Behavior.md\" data-linktype=\"relative-path\">Architectural Overview of Adaptive Control Behavior</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ResolveClientUrl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ResolveClientUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveClientUrl(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a URL that can be used by the browser.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ResolveClientUrl (string relativeUrl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URL relative to the current page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A fully qualified URL to the specified resource suitable for use on the browser.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>relativeUrl</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ResolveClientUrl method to return a URL string suitable for use by the client to access resources on the Web server, such as image files, links to additional pages, and so on.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The URL returned by this method is relative to the folder containing the source file in which the control is instantiated. Controls that inherit this property, such as <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> and <a class=\"xref\" href=\"system.web.ui.masterpage\" data-linktype=\"relative-path\">MasterPage</a>, will return a fully qualified URL relative to the control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_ResolveUrl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_ResolveUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveUrl(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a URL into one that is usable on the requesting client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ResolveUrl (string relativeUrl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL associated with the <span class=\"xref\">stem.Web.UI.Control.TemplateSourceDirectory*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The converted URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Occurs if the <code>relativeUrl</code> parameter contains <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>relativeUrl</code> parameter contains an absolute URL, the URL is returned unchanged. If the <code>relativeUrl</code> parameter contains a relative URL, that URL is changed to a relative URL that is correct for the current request path, so that the browser can resolve the URL.  </p>\n<p> For example, consider the following scenario:  </p>\n<ul>\n<li><p>A client has requested an ASP.NET page that contains a user control that has an image associated with it.  </p>\n</li>\n<li><p>The ASP.NET page is located at /Store/page1.aspx.  </p>\n</li>\n<li><p>The user control is located at /Store/UserControls/UC1.ascx.  </p>\n</li>\n<li><p>The image file is located at /UserControls/Images/Image1.jpg.  </p>\n<p>If the user control passes the relative path to the image (that is, /Store/UserControls/Images/Image1.jpg) to the ResolveUrl method, the method will return the value /Images/Image1.jpg.  </p>\n<p>This method uses the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateSourceDirectory_\" data-linktype=\"relative-path\">TemplateSourceDirectory</a> property to resolve to the absolute URL. The returned URL is for client use.  </p>\n<p>For more information on resource paths in a Web site, see <a href=\"../Topic/ASP.NET%20Web%20Project%20Paths.md\" data-linktype=\"relative-path\">ASP.NET Web Project Paths</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> For mobile Web pages only, if your application relies on cookieless sessions or might receive requests from mobile browsers that require cookieless sessions, using a tilde (&quot;~&quot;) in a path can result in inadvertently creating a new session and potentially losing session data. To set a property with a path such as &quot;~/<em>path&quot;</em>, resolve the path by calling the <a class=\"xref\" href=\"system.web.ui.mobilecontrols.mobilecontrol#System_Web_UI_MobileControls_MobileControl_ResolveUrl_\" data-linktype=\"relative-path\">ResolveUrl</a> with an argument such as &quot;~/<em>path&quot;</em> before assigning it to the property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> Web server control object and uses the ResolveUrl method to set the path to the image, which is stored by the <a class=\"xref\" href=\"system.web.ui.webcontrols.image#System_Web_UI_WebControls_Image_ImageUrl_\" data-linktype=\"relative-path\">ImageUrl</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_ResolveUrl#1\">   public class MyResolveUrl:Control\n   {\n      private string _ImageUrl;     \n      public string ImageUrl\n      {\n         get\n         {\n            return _ImageUrl;\n         }\n         set\n         {\n            _ImageUrl = value;\n         }\n      }\n      protected override void Render(HtmlTextWriter output)\n      {           \n         Image myImage = new Image();\n         // Resolve Url.\n         myImage.ImageUrl = ResolveUrl(this.ImageUrl);\n         myImage.RenderControl(output);         \n      }     \n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_ResolveUrl#1\">   Public Class MyResolveUrl\n      Inherits Control\n      Private _ImageUrl As String\n\n      Public Property ImageUrl() As String\n         Get\n            Return _ImageUrl\n         End Get\n         Set\n            _ImageUrl = value\n         End Set\n      End Property\n\n      Protected Overrides Sub Render(output As HtmlTextWriter)\n         Dim myImage As New System.Web.UI.WebControls.Image()\n         &#39; Resolve Url.\n         myImage.ImageUrl = ResolveUrl(Me.ImageUrl)\n         myImage.RenderControl(output)\n      End Sub\n   End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SaveControlState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SaveControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveControlState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves any server control state changes that have occurred since the time the page was posted back to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object SaveControlState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>Returns the server control&#39;s current state. If there is no state associated with the control, this method returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SaveControlState method to save state information required for the operation of a specific control. This control-state data is stored separately from the control&#39;s view-state data.  </p>\n<p> Custom controls using control state must call the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_RegisterRequiresControlState_\" data-linktype=\"relative-path\">RegisterRequiresControlState</a> method on the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page_\" data-linktype=\"relative-path\">Page</a> before saving control state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example overrides the SaveControlState method in a custom ASP.NET control. When this method is invoked, it determines whether the internal property <code>currentIndex</code> is set to a non-default value and, if so, saves the value to control state.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnInit_\" data-linktype=\"relative-path\">OnInit</a> method is overridden to call the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_RegisterRequiresControlState_\" data-linktype=\"relative-path\">RegisterRequiresControlState</a> method on the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page_\" data-linktype=\"relative-path\">Page</a> to indicate that the custom control uses control state.  </p>\n<pre><code class=\"lang-vb\" name=\"ControlState#1\">  Class Sample\n    Inherits Control\n    \n    Dim currentIndex As Integer\n    \n        Protected Overrides Sub OnInit(ByVal e As EventArgs)\n            Page.RegisterRequiresControlState(Me)\n            currentIndex = 0\n            MyBase.OnInit(e)\n        End Sub\n    \n        Protected Overrides Function SaveControlState() As Object\n            If currentIndex &lt;&gt; 0 Then\n                Return CType(currentIndex, Object)\n            Else\n                Return Nothing\n            End If\n        End Function\n    \n        Protected Overrides Sub LoadControlState(ByVal state As Object)\n            If (state &lt;&gt; Nothing) Then\n                currentIndex = CType(state, Integer)\n            End If\n        End Sub\n    \n  End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"ControlState#1\">public class Sample : Control {\n    private int currentIndex = 0;\n   \n    protected override void OnInit(EventArgs e) {\n        Page.RegisterRequiresControlState(this);\n        base.OnInit(e);\n    }\n\n    protected override object SaveControlState() {\n        return currentIndex != 0 ? (object)currentIndex : null;\n    }\n\n    protected override void LoadControlState(object state) {\n        if (state != null) {\n            currentIndex = (int)state;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves any server control view-state changes that have occurred since the time the page was posted back to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>Returns the server control&#39;s current view state. If there is no view state associated with the control, this method returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>View state is the accumulation of the values of a server control&#39;s properties. These values are automatically placed in the server control&#39;s <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewState_\" data-linktype=\"relative-path\">ViewState</a> property, which is an instance of the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> class. This property&#39;s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see <a href=\"../Topic/ASP.NET%20Page%20Life%20Cycle%20Overview.md\" data-linktype=\"relative-path\">ASP.NET Page Life Cycle Overview</a>.  </p>\n<p> When view state is saved, this string object is returned to the client as a variable that is stored in an HTML <code>HIDDEN</code> element. When you author a custom server control with a custom view state, the view state can be managed explicitly with the SaveViewState and <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_LoadViewState_\" data-linktype=\"relative-path\">LoadViewState</a> methods. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>. For information on implementing a custom session-state provider, see <a href=\"../Topic/Implementing%20a%20Session-State%20Store%20Provider.md\" data-linktype=\"relative-path\">Implementing a Session-State Store Provider</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the SaveViewState method in a custom ASP.NET server control. When this method is invoked, it determines whether the control has any child controls and whether the containing <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> object is the result of a postback. If both are true, it changes the <a class=\"xref\" href=\"system.web.ui.webcontrols.label#System_Web_UI_WebControls_Label_Text_\" data-linktype=\"relative-path\">Text</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> Web server control to read <code>Custom Control Has Saved State</code>. It then saves the view state of the control as an array of objects, named <code>allStates</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_StateManagement#2\">      protected override object SaveViewState()\n      {  // Change Text Property of Label when this function is invoked.\n         if(HasControls() &amp;&amp; (Page.IsPostBack))\n         {\n            ((Label)(Controls[0])).Text = &quot;Custom Control Has Saved State&quot;;\n         }\n         // Save State as a cumulative array of objects.\n         object baseState = base.SaveViewState();\n         string userText = UserText;\n         string passwordText = PasswordText;\n         object[] allStates = new object[3];\n         allStates[0] = baseState;\n         allStates[1] = userText;\n         allStates[2] = PasswordText;\n         return allStates;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_StateManagement#2\">      Protected Overrides Function SaveViewState() As Object\n         &#39; Change Text Property of Label when this function is invoked.\n         If HasControls() And Page.IsPostBack Then\n            CType(Controls(0), Label).Text = &quot;Custom Control Has Saved State&quot;\n         End If\n         &#39; Save State as a cumulative array of objects.\n         Dim baseState As Object = MyBase.SaveViewState()\n         Dim _userText As String = UserText\n         Dim _passwordText As String = PasswordText\n         Dim allStates(3) As Object\n         allStates(0) = baseState\n         allStates(1) = _userText\n         allStates(2) = PasswordText\n         Return allStates\n      End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SetDesignModeState_System_Collections_IDictionary_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SetDesignModeState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetDesignModeState(IDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Sets design-time data for a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void SetDesignModeState (System.Collections.IDictionary data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> containing the design-time data for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SetDesignModeState method saves design-time data for a control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SetRenderMethodDelegate_System_Web_UI_RenderMethod_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SetRenderMethodDelegate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetRenderMethodDelegate(RenderMethod)</div>        \r\n          </div>\r\n    \r\n            <p>Assigns an event handler delegate to render the server control and its content into its parent control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>renderMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.rendermethod\" data-linktype=\"relative-path\">RenderMethod</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The information necessary to pass to the delegate so that it can render the server control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is supplied for implementation purposes only; you should never call it directly.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SetTraceData_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SetTraceData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetTraceData(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets trace data for design-time tracing of rendering data, using the trace data key and the trace data value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetTraceData (object traceDataKey, object traceDataValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>traceDataKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The trace data key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traceDataValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The trace data value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_SetTraceData_System_Object_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_SetTraceData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetTraceData(Object,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets trace data for design-time tracing of rendering data, using the traced object, the trace data key, and the trace data value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tracedObject</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The traced object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traceDataKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The trace data key.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traceDataValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The trace data value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Causes tracking of view-state changes to the server control so they can be stored in the server control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object. This object is accessible through the <span class=\"xref\">stem.Web.UI.Control.ViewState*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called automatically at the end of the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event in the server control&#39;s lifecycle.  </p>\n<p> Invoke this method when you develop templated data-bound controls. This method alerts ASP.NET to monitor changes to a server control&#39;s view state, which is required when you override the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example overrides the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method in a custom ASP.NET server control. It begins by calling the base <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_\" data-linktype=\"relative-path\">OnDataBinding</a> method and then uses the <a class=\"xref\" href=\"system.web.ui.controlcollection#System_Web_UI_ControlCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method to delete all the child controls and the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState_\" data-linktype=\"relative-path\">ClearChildViewState</a> method to delete any saved view-state settings for those child controls. Finally, the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated_\" data-linktype=\"relative-path\">ChildControlsCreated</a> property is set to <code>true</code>. The control then uses the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsTrackingViewState_\" data-linktype=\"relative-path\">IsTrackingViewState</a> property to determine whether view-state change tracking is enabled for the control. If it is not enabled, the TrackViewState method is called.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_StateManagement#5\">      public override void DataBind() \n      {\n         base.OnDataBinding(EventArgs.Empty);\n         // Reset the control&#39;s state.\n         Controls.Clear();\n         // Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         if (HasChildViewState)\n            ClearChildViewState();\n         ChildControlsCreated = true;\n         if (!IsTrackingViewState)\n            TrackViewState();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_StateManagement#5\">      Public Overrides Sub DataBind()\n         MyBase.OnDataBinding(EventArgs.Empty)\n         &#39; Reset the control&#39;s state.\n         Controls.Clear()\n         &#39; Check for HasChildViewState to avoid unnecessary calls to ClearChildViewState.\n         If HasChildViewState Then\n            ClearChildViewState()\n         End If\n         ChildControlsCreated = True\n         If Not IsTrackingViewState Then\n            TrackViewState()\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_DataBinding\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBinding</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the server control binds to a data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler DataBinding;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event notifies the server control to perform any data-binding logic that has been written for it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"ITemplate_Interface#1\">&#39; Create a class that implements the ITemplate interface.\n&#39; This class overrides the InstantiateIn method to always\n&#39; place templates in a Literal object. It also creates a \n&#39; custom BindData method that is used as the event handler\n&#39; associated with the Literal object&#39;s DataBinding event.  \n\nImports System\nImports System.Web\nImports System.Data\nImports System.Web.UI\nImports System.Web.UI.WebControls\n\n\nNamespace UsingItemTemplatesVB\n\n Public Class GenericItem\n   Implements ITemplate \n\n   Private column As String\n   \n   Public Sub New(column As String)\n      Me.column = column\n   End Sub &#39;New\n   \n   \n   &#39; Override the ITemplate.InstantiateIn method to ensure \n   &#39; that the templates are created in a Literal control and\n   &#39; that the Literal object&#39;s DataBinding event is associated\n   &#39; with the BindData method.\n   Public Sub InstantiateIn(container As Control) Implements ITemplate.InstantiateIn\n      Dim l As New Literal()\n      AddHandler l.DataBinding, AddressOf Me.BindData\n      container.Controls.Add(l)\n   End Sub &#39;InstantiateIn\n   \n   &#39; Create a public method that will handle the\n   &#39; DataBinding event called in the InstantiateIn method.\n   Public Sub BindData(sender As Object, e As EventArgs)\n      Dim l As Literal = CType(sender, Literal)\n      Dim container As DataGridItem = CType(l.NamingContainer, DataGridItem)\n      l.Text = CType(container.DataItem, DataRowView)(column).ToString()\n   End Sub &#39;BindData \n End Class &#39;GenericItem\nEnd Namespace &#39;UsingItemTemplatesVB\n</code></pre><pre><code class=\"lang-cs\" name=\"ITemplate_Interface#1\">/* Create a class that implements the ITemplate interface.\n   This class overrides the InstantiateIn method to always\n   place templates in a Literal object. It also creates a \n   custom BindData method that is used as the event handler\n   associated with the Literal object&#39;s DataBinding event.  \n*/\n  \nusing System;\nusing System.Web;\nusing System.Data;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n\nnamespace UsingItemTemplates\n{\n    public class GenericItem : ITemplate\n    {\n        private string column;\n      \n        public GenericItem(string column)\n        {\n            this.column = column;\n        }\n\n        // Override the ITemplate.InstantiateIn method to ensure \n        // that the templates are created in a Literal control and\n        // that the Literal object&#39;s DataBinding event is associated\n        // with the BindData method.\n        public void InstantiateIn(Control container)\n        {\n            Literal l = new Literal();\n            l.DataBinding += new EventHandler(this.BindData);\n            container.Controls.Add(l);\n        }\n        // Create a public method that will handle the\n        // DataBinding event called in the InstantiateIn method.\n        public void BindData(object sender, EventArgs e)\n        {\n            Literal l = (Literal) sender;\n            DataGridItem container = (DataGridItem) l.NamingContainer;\n            l.Text = ((DataRowView) container.DataItem)[column].ToString();\n    \n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Disposed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Disposed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a server control is released from memory, which is the last stage of the server control lifecycle when an ASP.NET page is requested.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Disposed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Resources that require significant processor time, such as database connections, should be released with this event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Init\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Init</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the server control is initialized, which is the first step in its lifecycle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Init;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Server controls should perform any initialization steps that are required to create and set up an instance. You cannot use view-state information within this event; it is not populated yet. You should not access another server control during this event, regardless of whether it is a child or parent to this control. Other server controls are not certain to be created and ready for access. For more information on server control events, see <a href=\"../Topic/ASP.NET%20Web%20Forms%20Server%20Control%20Event%20Model.md\" data-linktype=\"relative-path\">ASP.NET Web Forms Server Control Event Model</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example assigns a custom event handler, <code>Calendar_Init</code>, to the <code>Init</code> event of a <a class=\"xref\" href=\"system.web.ui.webcontrols.calendar\" data-linktype=\"relative-path\">Calendar</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"Control_Sample#4\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void Calendar_Init(object sender, EventArgs e)\n  {\n    // Do any related intialization work.\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Control Init Event Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n       &lt;asp:Calendar ID=&quot;Calendar1&quot;\n                     runat=&quot;server&quot; \n                     OnInit=&quot;Calendar_Init&quot;/&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Control_Sample#4\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub Calendar_Init(ByVal sender As Object, ByVal e As System.EventArgs)\n\n    &#39; Do any related intialization work.\n    \n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Control Init Event Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n       &lt;asp:Calendar ID=&quot;Calendar1&quot;\n                     runat=&quot;server&quot; \n                     OnInit=&quot;Calendar_Init&quot;/&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Load\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the server control is loaded into the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Load;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Notifies the server control to perform any processing steps that are set to occur on each page request. You can access view state information and Web form POST data from this event. You can also access other server controls within the page&#39;s control hierarchy.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you set a custom template in a control during the <code>Page_Load</code> event, the text values of child controls in the custom template will be lost. This occurs because the form values have already been loaded.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"System.Web.UI.Control_Load#2\">   // This is the constructor for a custom Page class. \n   // When this constructor is called, it associates the Control.Load event,\n   // which the Page class inherits from the Control class, with the Page_Load\n   // event handler for this version of the page.\n   public MyPage()\n   {\n      Load += new EventHandler(Page_Load);\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.UI.Control_Load#2\">   &#39; This is the constructor for a custom Page class. \n   &#39; When this constructor is called, it associates the Control.Load event,\n   &#39; which the Page class inherits from the Control class, with the Page_Load\n   &#39; event handler for this version of the page.\n   Public Sub New()\n      AddHandler Load, AddressOf Page_Load\n   End Sub &#39;New\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_PreRender\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreRender</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> object is loaded but prior to rendering.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PreRender;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this event to perform any updates before the server control is rendered to the page. Any changes in the view state of the server control can be saved during this event. Such changes made in the rendering phase will not be saved.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_Unload\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unload</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the server control is unloaded from memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Unload;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Server controls must perform any final clean-up, such as closing files, database connections and discarding objects, during this stage of the control lifecycle before the instance is unloaded.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IControlBuilderAccessor_ControlBuilder\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IControlBuilderAccessor_ControlBuilder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IControlBuilderAccessor.ControlBuilder</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlBuilderAccessor.ControlBuilder*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.controlbuilder\" data-linktype=\"relative-path\">ControlBuilder</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.controlbuilder\" data-linktype=\"relative-path\">ControlBuilder</a> that built the control; otherwise, <code>null</code> if no builder was used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.icontrolbuilderaccessor\" data-linktype=\"relative-path\">IControlBuilderAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_GetDesignModeState\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_GetDesignModeState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IControlDesignerAccessor.GetDesignModeState()</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.GetDesignModeState*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> of the control state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.icontroldesigneraccessor\" data-linktype=\"relative-path\">IControlDesignerAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetDesignModeState_System_Collections_IDictionary_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetDesignModeState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IControlDesignerAccessor.SetDesignModeState(IDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.SetDesignModeState*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> containing the design-time data for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.icontroldesigneraccessor\" data-linktype=\"relative-path\">IControlDesignerAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetOwnerControl_System_Web_UI_Control_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetOwnerControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IControlDesignerAccessor.SetOwnerControl(Control)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.SetOwnerControl*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>owner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The owner of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>owner</code> is set to the current control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.icontroldesigneraccessor\" data-linktype=\"relative-path\">IControlDesignerAccessor</a> interface.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.icontroldesigneraccessor\" data-linktype=\"relative-path\">IControlDesignerAccessor</a> interface is used by a control designer to perform design-time actions on the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_UserData\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_UserData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IControlDesignerAccessor.UserData</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IControlDesignerAccessor.UserData*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> containing information about the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.icontroldesigneraccessor\" data-linktype=\"relative-path\">IControlDesignerAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_DataBindings\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_DataBindings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBindingsAccessor.DataBindings</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IDataBindingsAccessor.DataBindings*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.databindingcollection\" data-linktype=\"relative-path\">DataBindingCollection</a></div>\r\n                  </div>\r\n                  <p>The collection of data bindings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.idatabindingsaccessor\" data-linktype=\"relative-path\">IDataBindingsAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_HasDataBindings\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_HasDataBindings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBindingsAccessor.HasDataBindings</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IDataBindingsAccessor.HasDataBindings*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control contains data-binding logic; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.idatabindingsaccessor\" data-linktype=\"relative-path\">IDataBindingsAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_Expressions\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_Expressions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IExpressionsAccessor.Expressions</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IExpressionsAccessor.Expressions*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.expressionbindingcollection\" data-linktype=\"relative-path\">ExpressionBindingCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.expressionbindingcollection\" data-linktype=\"relative-path\">ExpressionBindingCollection</a> containing <a class=\"xref\" href=\"system.web.ui.expressionbinding\" data-linktype=\"relative-path\">ExpressionBinding</a> objects that represent the properties and expressions for a control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.iexpressionsaccessor\" data-linktype=\"relative-path\">IExpressionsAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_HasExpressions\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_HasExpressions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IExpressionsAccessor.HasExpressions</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IExpressionsAccessor.HasExpressions*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control has properties set through expressions; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.iexpressionsaccessor\" data-linktype=\"relative-path\">IExpressionsAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_Control_System_Web_UI_IParserAccessor_AddParsedSubObject_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_Control_System_Web_UI_IParserAccessor_AddParsedSubObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IParserAccessor.AddParsedSubObject(Object)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IParserAccessor.AddParsedSubObject*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IParserAccessor.AddParsedSubObject (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.iparseraccessor\" data-linktype=\"relative-path\">IParserAccessor</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.Control.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.Control.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Adapter\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.AddedControl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.AddParsedSubObject\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ApplyStyleSheetSkin\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.AppRelativeTemplateSourceDirectory\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.BeginRenderTracing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.BindingContainer\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.BuildProfileTree\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ChildControlsCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClearCachedClientID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClearChildControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClearChildState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClearChildViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClearEffectiveClientIDMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClientID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClientIDMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ClientIDSeparator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Context\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Controls\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.CreateChildControls\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.CreateControlCollection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.DataBind\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.DataBindChildren\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.DataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.add_DataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.remove_DataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.DataItemContainer\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.DataKeysContainer\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.DesignMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Disposed\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.add_Disposed\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.remove_Disposed\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.EnableTheming\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.EnableViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.EndRenderTracing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.EnsureChildControls\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.EnsureID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Events\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.FindControl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Focus\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.GetDesignModeState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.GetRouteUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.GetUniqueIDRelativeTo\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.HasChildViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.HasControls\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.HasEvents\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IdSeparator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Init\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.add_Init\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.remove_Init\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IsChildControlStateCleared\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IsLiteralContent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IsTrackingViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IsViewStateEnabled\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Load\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.add_Load\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.remove_Load\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.LoadControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.LoadViewStateByID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.MapPathSecure\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.NamingContainer\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OnBubbleEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OnDataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OnInit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OnLoad\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OnPreRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OnUnload\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.OpenFile\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Page\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Parent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.PreRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.add_PreRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.remove_PreRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.RaiseBubbleEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.RemovedControl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Render\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.RenderChildren\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.RenderControl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.RenderingCompatibility\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ResolveAdapter\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ResolveClientUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ResolveUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.SaveControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.SetDesignModeState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.SetRenderMethodDelegate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.SetTraceData\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Site\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.SkinID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IControlBuilderAccessor.ControlBuilder\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IControlDesignerAccessor.GetDesignModeState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IControlDesignerAccessor.SetDesignModeState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IControlDesignerAccessor.SetOwnerControl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IControlDesignerAccessor.UserData\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IDataBindingsAccessor.DataBindings\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IDataBindingsAccessor.HasDataBindings\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IExpressionsAccessor.Expressions\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IExpressionsAccessor.HasExpressions\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.IParserAccessor.AddParsedSubObject\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.TemplateControl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.TemplateSourceDirectory\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.TrackViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.UniqueID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Unload\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.add_Unload\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.remove_Unload\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ValidateRequestMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ViewStateIgnoresCase\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.ViewStateMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.Control.Visible\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8a3c345a-76b2-8783-7b0f-767c3bdef818\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the properties, methods, and events that are shared by all ASP.NET server controls.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.Control\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.Control.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.Control.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.Control","System.Web.UI.Control..ctor","System.Web.UI.Control.Adapter","System.Web.UI.Control.AddedControl","System.Web.UI.Control.AddParsedSubObject","System.Web.UI.Control.ApplyStyleSheetSkin","System.Web.UI.Control.AppRelativeTemplateSourceDirectory","System.Web.UI.Control.BeginRenderTracing","System.Web.UI.Control.BindingContainer","System.Web.UI.Control.BuildProfileTree","System.Web.UI.Control.ChildControlsCreated","System.Web.UI.Control.ClearCachedClientID","System.Web.UI.Control.ClearChildControlState","System.Web.UI.Control.ClearChildState","System.Web.UI.Control.ClearChildViewState","System.Web.UI.Control.ClearEffectiveClientIDMode","System.Web.UI.Control.ClientID","System.Web.UI.Control.ClientIDMode","System.Web.UI.Control.ClientIDSeparator","System.Web.UI.Control.Context","System.Web.UI.Control.Controls","System.Web.UI.Control.CreateChildControls","System.Web.UI.Control.CreateControlCollection","System.Web.UI.Control.DataBind","System.Web.UI.Control.DataBindChildren","System.Web.UI.Control.DataBinding","System.Web.UI.Control.add_DataBinding","System.Web.UI.Control.remove_DataBinding","System.Web.UI.Control.DataItemContainer","System.Web.UI.Control.DataKeysContainer","System.Web.UI.Control.DesignMode","System.Web.UI.Control.Dispose","System.Web.UI.Control.Disposed","System.Web.UI.Control.add_Disposed","System.Web.UI.Control.remove_Disposed","System.Web.UI.Control.EnableTheming","System.Web.UI.Control.EnableViewState","System.Web.UI.Control.EndRenderTracing","System.Web.UI.Control.EnsureChildControls","System.Web.UI.Control.EnsureID","System.Web.UI.Control.Events","System.Web.UI.Control.FindControl","System.Web.UI.Control.Focus","System.Web.UI.Control.GetDesignModeState","System.Web.UI.Control.GetRouteUrl","System.Web.UI.Control.GetUniqueIDRelativeTo","System.Web.UI.Control.HasChildViewState","System.Web.UI.Control.HasControls","System.Web.UI.Control.HasEvents","System.Web.UI.Control.ID","System.Web.UI.Control.IdSeparator","System.Web.UI.Control.Init","System.Web.UI.Control.add_Init","System.Web.UI.Control.remove_Init","System.Web.UI.Control.IsChildControlStateCleared","System.Web.UI.Control.IsLiteralContent","System.Web.UI.Control.IsTrackingViewState","System.Web.UI.Control.IsViewStateEnabled","System.Web.UI.Control.Load","System.Web.UI.Control.add_Load","System.Web.UI.Control.remove_Load","System.Web.UI.Control.LoadControlState","System.Web.UI.Control.LoadViewState","System.Web.UI.Control.LoadViewStateByID","System.Web.UI.Control.MapPathSecure","System.Web.UI.Control.NamingContainer","System.Web.UI.Control.OnBubbleEvent","System.Web.UI.Control.OnDataBinding","System.Web.UI.Control.OnInit","System.Web.UI.Control.OnLoad","System.Web.UI.Control.OnPreRender","System.Web.UI.Control.OnUnload","System.Web.UI.Control.OpenFile","System.Web.UI.Control.Page","System.Web.UI.Control.Parent","System.Web.UI.Control.PreRender","System.Web.UI.Control.add_PreRender","System.Web.UI.Control.remove_PreRender","System.Web.UI.Control.RaiseBubbleEvent","System.Web.UI.Control.RemovedControl","System.Web.UI.Control.Render","System.Web.UI.Control.RenderChildren","System.Web.UI.Control.RenderControl","System.Web.UI.Control.RenderingCompatibility","System.Web.UI.Control.ResolveAdapter","System.Web.UI.Control.ResolveClientUrl","System.Web.UI.Control.ResolveUrl","System.Web.UI.Control.SaveControlState","System.Web.UI.Control.SaveViewState","System.Web.UI.Control.SetDesignModeState","System.Web.UI.Control.SetRenderMethodDelegate","System.Web.UI.Control.SetTraceData","System.Web.UI.Control.Site","System.Web.UI.Control.SkinID","System.Web.UI.Control.IControlBuilderAccessor.ControlBuilder","System.Web.UI.Control.IControlDesignerAccessor.GetDesignModeState","System.Web.UI.Control.IControlDesignerAccessor.SetDesignModeState","System.Web.UI.Control.IControlDesignerAccessor.SetOwnerControl","System.Web.UI.Control.IControlDesignerAccessor.UserData","System.Web.UI.Control.IDataBindingsAccessor.DataBindings","System.Web.UI.Control.IDataBindingsAccessor.HasDataBindings","System.Web.UI.Control.IExpressionsAccessor.Expressions","System.Web.UI.Control.IExpressionsAccessor.HasExpressions","System.Web.UI.Control.IParserAccessor.AddParsedSubObject","System.Web.UI.Control.TemplateControl","System.Web.UI.Control.TemplateSourceDirectory","System.Web.UI.Control.TrackViewState","System.Web.UI.Control.UniqueID","System.Web.UI.Control.Unload","System.Web.UI.Control.add_Unload","System.Web.UI.Control.remove_Unload","System.Web.UI.Control.ValidateRequestMode","System.Web.UI.Control.ViewState","System.Web.UI.Control.ViewStateIgnoresCase","System.Web.UI.Control.ViewStateMode","System.Web.UI.Control.Visible"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.Control","System::Web::UI::Control","System.Web.UI.Control.#ctor","System::Web::UI::Control::#ctor","System.Web.UI.Control.Adapter","System::Web::UI::Control::Adapter","System.Web.UI.Control.AddedControl","System::Web::UI::Control::AddedControl","System.Web.UI.Control.AddParsedSubObject","System::Web::UI::Control::AddParsedSubObject","System.Web.UI.Control.ApplyStyleSheetSkin","System::Web::UI::Control::ApplyStyleSheetSkin","System.Web.UI.Control.AppRelativeTemplateSourceDirectory","System::Web::UI::Control::AppRelativeTemplateSourceDirectory","System.Web.UI.Control.BeginRenderTracing","System::Web::UI::Control::BeginRenderTracing","System.Web.UI.Control.BindingContainer","System::Web::UI::Control::BindingContainer","System.Web.UI.Control.BuildProfileTree","System::Web::UI::Control::BuildProfileTree","System.Web.UI.Control.ChildControlsCreated","System::Web::UI::Control::ChildControlsCreated","System.Web.UI.Control.ClearCachedClientID","System::Web::UI::Control::ClearCachedClientID","System.Web.UI.Control.ClearChildControlState","System::Web::UI::Control::ClearChildControlState","System.Web.UI.Control.ClearChildState","System::Web::UI::Control::ClearChildState","System.Web.UI.Control.ClearChildViewState","System::Web::UI::Control::ClearChildViewState","System.Web.UI.Control.ClearEffectiveClientIDMode","System::Web::UI::Control::ClearEffectiveClientIDMode","System.Web.UI.Control.ClientID","System::Web::UI::Control::ClientID","System.Web.UI.Control.ClientIDMode","System::Web::UI::Control::ClientIDMode","System.Web.UI.Control.ClientIDSeparator","System::Web::UI::Control::ClientIDSeparator","System.Web.UI.Control.Context","System::Web::UI::Control::Context","System.Web.UI.Control.Controls","System::Web::UI::Control::Controls","System.Web.UI.Control.CreateChildControls","System::Web::UI::Control::CreateChildControls","System.Web.UI.Control.CreateControlCollection","System::Web::UI::Control::CreateControlCollection","System.Web.UI.Control.DataBind","System::Web::UI::Control::DataBind","System.Web.UI.Control.DataBindChildren","System::Web::UI::Control::DataBindChildren","System.Web.UI.Control.DataBinding","System::Web::UI::Control::DataBinding","System.Web.UI.Control.DataItemContainer","System::Web::UI::Control::DataItemContainer","System.Web.UI.Control.DataKeysContainer","System::Web::UI::Control::DataKeysContainer","System.Web.UI.Control.DesignMode","System::Web::UI::Control::DesignMode","System.Web.UI.Control.Dispose","System::Web::UI::Control::Dispose","System.Web.UI.Control.Disposed","System::Web::UI::Control::Disposed","System.Web.UI.Control.EnableTheming","System::Web::UI::Control::EnableTheming","System.Web.UI.Control.EnableViewState","System::Web::UI::Control::EnableViewState","System.Web.UI.Control.EndRenderTracing","System::Web::UI::Control::EndRenderTracing","System.Web.UI.Control.EnsureChildControls","System::Web::UI::Control::EnsureChildControls","System.Web.UI.Control.EnsureID","System::Web::UI::Control::EnsureID","System.Web.UI.Control.Events","System::Web::UI::Control::Events","System.Web.UI.Control.FindControl","System::Web::UI::Control::FindControl","System.Web.UI.Control.Focus","System::Web::UI::Control::Focus","System.Web.UI.Control.GetDesignModeState","System::Web::UI::Control::GetDesignModeState","System.Web.UI.Control.GetRouteUrl","System::Web::UI::Control::GetRouteUrl","System.Web.UI.Control.GetUniqueIDRelativeTo","System::Web::UI::Control::GetUniqueIDRelativeTo","System.Web.UI.Control.HasChildViewState","System::Web::UI::Control::HasChildViewState","System.Web.UI.Control.HasControls","System::Web::UI::Control::HasControls","System.Web.UI.Control.HasEvents","System::Web::UI::Control::HasEvents","System.Web.UI.Control.ID","System::Web::UI::Control::ID","System.Web.UI.Control.IdSeparator","System::Web::UI::Control::IdSeparator","System.Web.UI.Control.Init","System::Web::UI::Control::Init","System.Web.UI.Control.IsChildControlStateCleared","System::Web::UI::Control::IsChildControlStateCleared","System.Web.UI.Control.IsLiteralContent","System::Web::UI::Control::IsLiteralContent","System.Web.UI.Control.IsTrackingViewState","System::Web::UI::Control::IsTrackingViewState","System.Web.UI.Control.IsViewStateEnabled","System::Web::UI::Control::IsViewStateEnabled","System.Web.UI.Control.Load","System::Web::UI::Control::Load","System.Web.UI.Control.LoadControlState","System::Web::UI::Control::LoadControlState","System.Web.UI.Control.LoadViewState","System::Web::UI::Control::LoadViewState","System.Web.UI.Control.LoadViewStateByID","System::Web::UI::Control::LoadViewStateByID","System.Web.UI.Control.MapPathSecure","System::Web::UI::Control::MapPathSecure","System.Web.UI.Control.NamingContainer","System::Web::UI::Control::NamingContainer","System.Web.UI.Control.OnBubbleEvent","System::Web::UI::Control::OnBubbleEvent","System.Web.UI.Control.OnDataBinding","System::Web::UI::Control::OnDataBinding","System.Web.UI.Control.OnInit","System::Web::UI::Control::OnInit","System.Web.UI.Control.OnLoad","System::Web::UI::Control::OnLoad","System.Web.UI.Control.OnPreRender","System::Web::UI::Control::OnPreRender","System.Web.UI.Control.OnUnload","System::Web::UI::Control::OnUnload","System.Web.UI.Control.OpenFile","System::Web::UI::Control::OpenFile","System.Web.UI.Control.Page","System::Web::UI::Control::Page","System.Web.UI.Control.Parent","System::Web::UI::Control::Parent","System.Web.UI.Control.PreRender","System::Web::UI::Control::PreRender","System.Web.UI.Control.RaiseBubbleEvent","System::Web::UI::Control::RaiseBubbleEvent","System.Web.UI.Control.RemovedControl","System::Web::UI::Control::RemovedControl","System.Web.UI.Control.Render","System::Web::UI::Control::Render","System.Web.UI.Control.RenderChildren","System::Web::UI::Control::RenderChildren","System.Web.UI.Control.RenderControl","System::Web::UI::Control::RenderControl","System.Web.UI.Control.RenderingCompatibility","System::Web::UI::Control::RenderingCompatibility","System.Web.UI.Control.ResolveAdapter","System::Web::UI::Control::ResolveAdapter","System.Web.UI.Control.ResolveClientUrl","System::Web::UI::Control::ResolveClientUrl","System.Web.UI.Control.ResolveUrl","System::Web::UI::Control::ResolveUrl","System.Web.UI.Control.SaveControlState","System::Web::UI::Control::SaveControlState","System.Web.UI.Control.SaveViewState","System::Web::UI::Control::SaveViewState","System.Web.UI.Control.SetDesignModeState","System::Web::UI::Control::SetDesignModeState","System.Web.UI.Control.SetRenderMethodDelegate","System::Web::UI::Control::SetRenderMethodDelegate","System.Web.UI.Control.SetTraceData","System::Web::UI::Control::SetTraceData","System.Web.UI.Control.Site","System::Web::UI::Control::Site","System.Web.UI.Control.SkinID","System::Web::UI::Control::SkinID","System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder","System::Web::UI::Control::System#Web#UI#IControlBuilderAccessor#ControlBuilder","System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState","System::Web::UI::Control::System#Web#UI#IControlDesignerAccessor#GetDesignModeState","System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState","System::Web::UI::Control::System#Web#UI#IControlDesignerAccessor#SetDesignModeState","System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl","System::Web::UI::Control::System#Web#UI#IControlDesignerAccessor#SetOwnerControl","System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData","System::Web::UI::Control::System#Web#UI#IControlDesignerAccessor#UserData","System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings","System::Web::UI::Control::System#Web#UI#IDataBindingsAccessor#DataBindings","System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings","System::Web::UI::Control::System#Web#UI#IDataBindingsAccessor#HasDataBindings","System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions","System::Web::UI::Control::System#Web#UI#IExpressionsAccessor#Expressions","System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions","System::Web::UI::Control::System#Web#UI#IExpressionsAccessor#HasExpressions","System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject","System::Web::UI::Control::System#Web#UI#IParserAccessor#AddParsedSubObject","System.Web.UI.Control.TemplateControl","System::Web::UI::Control::TemplateControl","System.Web.UI.Control.TemplateSourceDirectory","System::Web::UI::Control::TemplateSourceDirectory","System.Web.UI.Control.TrackViewState","System::Web::UI::Control::TrackViewState","System.Web.UI.Control.UniqueID","System::Web::UI::Control::UniqueID","System.Web.UI.Control.Unload","System::Web::UI::Control::Unload","System.Web.UI.Control.ValidateRequestMode","System::Web::UI::Control::ValidateRequestMode","System.Web.UI.Control.ViewState","System::Web::UI::Control::ViewState","System.Web.UI.Control.ViewStateIgnoresCase","System::Web::UI::Control::ViewStateIgnoresCase","System.Web.UI.Control.ViewStateMode","System::Web::UI::Control::ViewStateMode","System.Web.UI.Control.Visible","System::Web::UI::Control::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8a3c345a-76b2-8783-7b0f-767c3bdef818","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI/Control.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Control class | Microsoft Docs","_op_ogTitle":"Control class","description":"Defines the properties, methods, and events that are shared by all ASP.NET server controls.\n","toc_asset_id":"_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.Control","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.control","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.control","fileRelativePath":"System.Web.UI.Control.html"},"themesRelativePathToOutputRoot":"_themes/"}