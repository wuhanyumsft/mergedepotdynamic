{"content":"    \r\n    <h1 id=\"System_IO_DriveInfo\">\r\n      <span class=\"lang-csharp\">DriveInfo</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to information on a drive.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class DriveInfo : System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DriveInfo</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class models a drive and provides methods and properties to query for drive information. Use DriveInfo to determine what drives are available, and what type of drives they are. You can also query to determine the capacity and available free space on the drive.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo__ctor_System_String_\" data-linktype=\"self-bookmark\">DriveInfo(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides access to information on the specified drive.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_AvailableFreeSpace\" data-linktype=\"self-bookmark\">AvailableFreeSpace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates the amount of available free space on a drive, in bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_DriveFormat\" data-linktype=\"self-bookmark\">DriveFormat</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the file system, such as NTFS or FAT32.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_DriveType\" data-linktype=\"self-bookmark\">DriveType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the drive type, such as CD-ROM, removable, network, or fixed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_IsReady\" data-linktype=\"self-bookmark\">IsReady</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether a drive is ready.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of a drive, such as C:\\.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_RootDirectory\" data-linktype=\"self-bookmark\">RootDirectory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the root directory of a drive.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_TotalFreeSpace\" data-linktype=\"self-bookmark\">TotalFreeSpace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the total amount of free space available on a drive, in bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_TotalSize\" data-linktype=\"self-bookmark\">TotalSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the total size of storage space on a drive, in bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_VolumeLabel\" data-linktype=\"self-bookmark\">VolumeLabel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the volume label of a drive.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_GetDrives\" data-linktype=\"self-bookmark\">GetDrives()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the drive names of all logical drives on a computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a drive name as a string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_DriveInfo_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data needed to serialize the target object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo__ctor_System_String_\">\r\n    \r\n            <a id=\"System_IO_DriveInfo__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DriveInfo(String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides access to information on the specified drive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DriveInfo (string driveName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>driveName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A valid drive path or drive letter. This can be either uppercase or lowercase, &#39;a&#39; to &#39;z&#39;. A null value is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The drive letter cannot be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The first letter of <code>driveName</code> is not an uppercase or lowercase letter from &#39;a&#39; to &#39;z&#39;.  </p>\n<p> -or-  </p>\n<p> <code>driveName</code> does not refer to a valid drive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this class to obtain information on drives. The drive name must be either an uppercase or lowercase letter from &#39;a&#39; to &#39;z&#39;. You cannot use this method to obtain information on drive names that are <code>null</code> or use UNC (\\\\server\\share) paths.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_AvailableFreeSpace\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_AvailableFreeSpace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AvailableFreeSpace</div>        \r\n          </div>\r\n    \r\n            <p>Indicates the amount of available free space on a drive, in bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long AvailableFreeSpace { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The amount of free space available on the drive, in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access to the drive information is denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurred (for example, a disk error or a drive was not ready).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates the amount of free space available on the drive. Note that this number may be different from the <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_TotalFreeSpace_\" data-linktype=\"relative-path\">TotalFreeSpace</a> number because this property takes into account disk quotas.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_DriveFormat\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_DriveFormat_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DriveFormat</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the file system, such as NTFS or FAT32.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DriveFormat { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the file system on the specified drive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access to the drive information is denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.drivenotfoundexception\" data-linktype=\"relative-path\">DriveNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The drive does not exist or is not mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurred (for example, a disk error or a drive was not ready).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use DriveFormat to determine what formatting a drive uses.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_DriveType\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_DriveType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DriveType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the drive type, such as CD-ROM, removable, network, or fixed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.DriveType DriveType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.drivetype\" data-linktype=\"relative-path\">DriveType</a></div>\r\n                  </div>\r\n                  <p>One of the enumeration values that specifies a drive type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DriveType property indicates whether a drive is one of the following: <code>CDRom</code>, <code>Fixed</code>, <code>Network</code>, <code>NoRootDirectory</code>, <code>Ram</code>, <code>Removable</code>, or <code>Unknown</code>. These values are described in the <a class=\"xref\" href=\"system.io.drivetype\" data-linktype=\"relative-path\">DriveType</a> enumeration.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_IsReady\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_IsReady_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReady</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether a drive is ready.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReady { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the drive is ready; <code>false</code> if the drive is not ready.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IsReady indicates whether a drive is ready. For example, it indicates whether a CD is in a CD drive or whether a removable storage device is ready for read/write operations. If you do not test whether a drive is ready, and it is not ready,  querying the drive using <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> will raise an <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>.  </p>\n<p> Do not rely on IsReady to avoid catching exceptions from other members such as <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_TotalSize_\" data-linktype=\"relative-path\">TotalSize</a>, <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_TotalFreeSpace_\" data-linktype=\"relative-path\">TotalFreeSpace</a>, and <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_DriveFormat_\" data-linktype=\"relative-path\">DriveFormat</a>. Between the time that your code checks IsReady and then accesses one of the other properties (even if the access occurs immediately after the check), a drive may have been disconnected or a disk may have been removed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_Name\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of a drive, such as C:\\.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the drive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is the name assigned to the drive, such as C:\\ or E:\\.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_RootDirectory\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_RootDirectory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RootDirectory</div>        \r\n          </div>\r\n    \r\n            <p>Gets the root directory of a drive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.DirectoryInfo RootDirectory { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.directoryinfo\" data-linktype=\"relative-path\">DirectoryInfo</a></div>\r\n                  </div>\r\n                  <p>An object that contains the root directory of the drive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_TotalFreeSpace\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_TotalFreeSpace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TotalFreeSpace</div>        \r\n          </div>\r\n    \r\n            <p>Gets the total amount of free space available on a drive, in bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long TotalFreeSpace { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The total free space available on a drive, in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access to the drive information is denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.drivenotfoundexception\" data-linktype=\"relative-path\">DriveNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The drive is not mapped or does not exist.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurred (for example, a disk error or a drive was not ready).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates the total amount of free space available on the drive, not just what is available to the current user.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_TotalSize\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_TotalSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TotalSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the total size of storage space on a drive, in bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long TotalSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The total size of the drive, in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access to the drive information is denied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.drivenotfoundexception\" data-linktype=\"relative-path\">DriveNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The drive is not mapped or does not exist.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurred (for example, a disk error or a drive was not ready).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates the total size of the drive in bytes, not just what is available to the current user.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_VolumeLabel\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_VolumeLabel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VolumeLabel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the volume label of a drive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string VolumeLabel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The volume label.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurred (for example, a disk error or a drive was not ready).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.drivenotfoundexception\" data-linktype=\"relative-path\">DriveNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The drive is not mapped or does not exist.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>The volume label is being set on a network or CD-ROM drive.  </p>\n<p> -or-  </p>\n<p> Access to the drive information is denied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The label length is determined by the operating system. For example, NTFS allows a volume label to be up to 32 characters long. Note that <code>null</code> is a valid VolumeLabel.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_GetDrives\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_GetDrives_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDrives()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the drive names of all logical drives on a computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.DriveInfo[] GetDrives ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> that represents the logical drives on a computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurred (for example, a disk error or a drive was not ready).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves all logical drive names on a computer. You can use this information to iterate through the array and obtain information on the drives using other <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> methods and properties. Use the <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_IsReady_\" data-linktype=\"relative-path\">IsReady</a> property to test whether a drive is ready because using this method on a drive that is not ready will throw a <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> class to display information about all of the drives on the current system.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.DriveInfo#00\">using System;\nusing System.IO;\n\nclass Test\n{\n    public static void Main()\n    {\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name);\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType);\n            if (d.IsReady == true)\n            {\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel);\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat);\n                Console.WriteLine(\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, \n                    d.AvailableFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total available space:          {0, 15} bytes&quot;,\n                    d.TotalFreeSpace);\n\n                Console.WriteLine(\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;,\n                    d.TotalSize);\n            }\n        }\n    }\n}\n/* \nThis code produces output similar to the following:\n\nDrive A:\\\n  Drive type: Removable\nDrive C:\\\n  Drive type: Fixed\n  Volume label: \n  File system: FAT32\n  Available space to current user:     4770430976 bytes\n  Total available space:               4770430976 bytes\n  Total size of drive:                10731683840 bytes \nDrive D:\\\n  Drive type: Fixed\n  Volume label: \n  File system: NTFS\n  Available space to current user:    15114977280 bytes\n  Total available space:              15114977280 bytes\n  Total size of drive:                25958948864 bytes \nDrive E:\\\n  Drive type: CDRom\n\nThe actual output of this code will vary based on machine and the permissions\ngranted to the user executing it.\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.DriveInfo#00\">Imports System\nImports System.IO\n\nClass Test\n    Public Shared Sub Main()\n        Dim allDrives() As DriveInfo = DriveInfo.GetDrives()\n\n        Dim d As DriveInfo\n        For Each d In allDrives\n            Console.WriteLine(&quot;Drive {0}&quot;, d.Name)\n            Console.WriteLine(&quot;  Drive type: {0}&quot;, d.DriveType)\n            If d.IsReady = True Then\n                Console.WriteLine(&quot;  Volume label: {0}&quot;, d.VolumeLabel)\n                Console.WriteLine(&quot;  File system: {0}&quot;, d.DriveFormat)\n                Console.WriteLine( _\n                    &quot;  Available space to current user:{0, 15} bytes&quot;, _\n                    d.AvailableFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total available space:          {0, 15} bytes&quot;, _\n                    d.TotalFreeSpace)\n\n                Console.WriteLine( _\n                    &quot;  Total size of drive:            {0, 15} bytes &quot;, _\n                    d.TotalSize)\n            End If\n        Next\n    End Sub\nEnd Class\n&#39;This code produces output similar to the following:\n&#39;\n&#39;Drive A:\\\n&#39;  Drive type: Removable\n&#39;Drive C:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: FAT32\n&#39;  Available space to current user:     4770430976 bytes\n&#39;  Total available space:               4770430976 bytes\n&#39;  Total size of drive:                10731683840 bytes \n&#39;Drive D:\\\n&#39;  Drive type: Fixed\n&#39;  Volume label: \n&#39;  File system: NTFS\n&#39;  Available space to current user:    15114977280 bytes\n&#39;  Total available space:              15114977280 bytes\n&#39;  Total size of drive:                25958948864 bytes \n&#39;Drive E:\\\n&#39;  Drive type: CDRom\n&#39;\n&#39;The actual output of this code will vary based on machine and the permissions\n&#39;granted to the user executing it.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_ToString\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a drive name as a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the drive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the <a class=\"xref\" href=\"system.io.driveinfo#System_IO_DriveInfo_Name_\" data-linktype=\"relative-path\">Name</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_DriveInfo_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_IO_DriveInfo_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data needed to serialize the target object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>) for this serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any objects included in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object are automatically tracked and serialized by the formatter.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.io.driveinfo\" data-linktype=\"relative-path\">DriveInfo</a> instance is cast to an <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.DriveInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.DriveInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.AvailableFreeSpace\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.DriveFormat\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.DriveType\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.GetDrives\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.IsReady\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.Name\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.RootDirectory\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.ToString\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.TotalFreeSpace\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.TotalSize\">\r\n<meta name=\"APIName\" content=\"System.IO.DriveInfo.VolumeLabel\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"77f246b7-bd6f-ea72-f4d5-825f8a0d8fc7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to information on a drive.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.DriveInfo\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.DriveInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.DriveInfo.yml","open_to_public_contributors":true,"api_name":["System.IO.DriveInfo","System.IO.DriveInfo..ctor","System.IO.DriveInfo.AvailableFreeSpace","System.IO.DriveInfo.DriveFormat","System.IO.DriveInfo.DriveType","System.IO.DriveInfo.GetDrives","System.IO.DriveInfo.IsReady","System.IO.DriveInfo.Name","System.IO.DriveInfo.RootDirectory","System.IO.DriveInfo.ISerializable.GetObjectData","System.IO.DriveInfo.ToString","System.IO.DriveInfo.TotalFreeSpace","System.IO.DriveInfo.TotalSize","System.IO.DriveInfo.VolumeLabel"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.DriveInfo","System::IO::DriveInfo","System.IO.DriveInfo.#ctor","System::IO::DriveInfo::#ctor","System.IO.DriveInfo.AvailableFreeSpace","System::IO::DriveInfo::AvailableFreeSpace","System.IO.DriveInfo.DriveFormat","System::IO::DriveInfo::DriveFormat","System.IO.DriveInfo.DriveType","System::IO::DriveInfo::DriveType","System.IO.DriveInfo.GetDrives","System::IO::DriveInfo::GetDrives","System.IO.DriveInfo.IsReady","System::IO::DriveInfo::IsReady","System.IO.DriveInfo.Name","System::IO::DriveInfo::Name","System.IO.DriveInfo.RootDirectory","System::IO::DriveInfo::RootDirectory","System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData","System::IO::DriveInfo::System#Runtime#Serialization#ISerializable#GetObjectData","System.IO.DriveInfo.ToString","System::IO::DriveInfo::ToString","System.IO.DriveInfo.TotalFreeSpace","System::IO::DriveInfo::TotalFreeSpace","System.IO.DriveInfo.TotalSize","System::IO::DriveInfo::TotalSize","System.IO.DriveInfo.VolumeLabel","System::IO::DriveInfo::VolumeLabel"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"77f246b7-bd6f-ea72-f4d5-825f8a0d8fc7","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO/DriveInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DriveInfo class | Microsoft Docs","_op_ogTitle":"DriveInfo class","description":"Provides access to information on a drive.\n","toc_asset_id":"_splitted/System.IO/toc.json","toc_rel":"_splitted/System.IO/toc.json","source_url":"","ms.assetid":"System.IO.DriveInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.driveinfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.driveinfo","fileRelativePath":"System.IO.DriveInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}