{"content":"    \r\n    <h1 id=\"System_Windows_Automation_Provider_IToggleProvider\">\r\n      <span class=\"lang-csharp\">IToggleProvider</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Exposes methods and properties to support UI Automation client access to controls that can cycle through a set of states and maintain a state once set.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Runtime.InteropServices.Guid(&quot;56d00bd0-c4f4-433c-a836-1a52a57e0892&quot;)]\n[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\npublic interface IToggleProvider</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Implemented on a UI Automation provider that must support the <a class=\"xref\" href=\"system.windows.automation.togglepattern\" data-linktype=\"relative-path\">TogglePattern</a> control pattern.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_IToggleProvider_ToggleState\" data-linktype=\"self-bookmark\">ToggleState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the toggle state of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_IToggleProvider_Toggle\" data-linktype=\"self-bookmark\">Toggle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cycles through the toggle states of a control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_IToggleProvider_ToggleState\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_IToggleProvider_ToggleState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToggleState</div>        \r\n          </div>\r\n    \r\n            <p>Gets the toggle state of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.ToggleState ToggleState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a> of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A control must cycle through its <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a> in this order: <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a>, <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a>, and (if supported) <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of this method for a control that can be toggled. The ToggleState returned is based on the color of the control; this is analogous to the <a class=\"xref\" href=\"system.windows.controls.primitives.togglebutton#System_Windows_Controls_Primitives_ToggleButton_IsChecked_\" data-linktype=\"relative-path\">IsChecked</a> property of a CheckBox control.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAIToggleProvider_snip#ToggleState\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Retrieves the toggle state of the control.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; For this custom control the toggle state is reflected by the color \n&#39;&#39;&#39; of the control. This is analogous to the CheckBox IsChecked property.\n&#39;&#39;&#39; Green   - ToggleState.On\n&#39;&#39;&#39; Red     - ToggleState.Off\n&#39;&#39;&#39; Yellow  - ToggleState.Indeterminate\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate ReadOnly Property IToggleProvider_ToggleState() As ToggleState Implements IToggleProvider.ToggleState\n    Get\n        Return customControl.toggleStateColor(customControl.controlColor)\n\n    End Get\nEnd Property\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAIToggleProvider_snip#ToggleState\">/// &lt;summary&gt;\n/// Retrieves the toggle state of the control.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// For this custom control the toggle state is reflected by the color \n/// of the control. This is analogous to the CheckBox IsChecked property.\n/// Green   - ToggleState.On\n/// Red     - ToggleState.Off\n/// Yellow  - ToggleState.Indeterminate\n/// &lt;/remarks&gt;\nToggleState IToggleProvider.ToggleState\n{\n    get\n    {\n        return customControl.toggleStateColor[customControl.controlColor];;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_IToggleProvider_Toggle\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_IToggleProvider_Toggle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Toggle()</div>        \r\n          </div>\r\n    \r\n            <p>Cycles through the toggle states of a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Toggle ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A control must cycle through its toggle states in this order: <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a>, <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a>, and (if supported) <a class=\"xref\" href=\"system.windows.automation.togglestate\" data-linktype=\"relative-path\">ToggleState</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows one possible implementation of this method for a custom control that can be toggled.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAIToggleProvider_snip#Toggle\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Toggles the control.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; For this custom control the toggle state is reflected by the color \n&#39;&#39;&#39; of the control. This is analogous to the CheckBox IsChecked property.\n&#39;&#39;&#39; Green   - ToggleState.On\n&#39;&#39;&#39; Red     - ToggleState.Off\n&#39;&#39;&#39; Yellow  - ToggleState.Indeterminate\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub Toggle() Implements IToggleProvider.Toggle\n    Dim toggleState As ToggleState = customControl.toggleStateColor(customControl.controlColor)\n    &#39; Invoke control method on separate thread to avoid clashing with UI.\n    &#39; Use anonymous method for simplicity.\n    Me.customControl.Invoke(New MethodInvoker(Sub()\n                                                  If toggleState = Windows.Automation.ToggleState.On Then\n                                                      customControl.controlColor = Color.Red\n                                                  ElseIf toggleState = Windows.Automation.ToggleState.Off Then\n                                                      customControl.controlColor = Color.Yellow\n                                                  ElseIf toggleState = Windows.Automation.ToggleState.Indeterminate Then\n                                                      customControl.controlColor = Color.Green\n                                                  End If\n                                                  customControl.Refresh()\n                                              End Sub))\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAIToggleProvider_snip#Toggle\">/// &lt;summary&gt;\n/// Toggles the control.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// For this custom control the toggle state is reflected by the color \n/// of the control. This is analogous to the CheckBox IsChecked property.\n/// Green   - ToggleState.On\n/// Red     - ToggleState.Off\n/// Yellow  - ToggleState.Indeterminate\n/// &lt;/remarks&gt;\nvoid IToggleProvider.Toggle()\n{\n    ToggleState toggleState = \n        customControl.toggleStateColor[customControl.controlColor];\n    // Invoke control method on separate thread to avoid clashing with UI.\n    // Use anonymous method for simplicity.\n    this.customControl.Invoke(new MethodInvoker(delegate()\n    {\n        if (toggleState == ToggleState.On)\n        {\n            customControl.controlColor = Color.Red;\n        }\n        else if (toggleState == ToggleState.Off)\n        {\n            customControl.controlColor = Color.Yellow;\n        }\n        else if (toggleState == ToggleState.Indeterminate)\n        {\n            customControl.controlColor = Color.Green;\n        }\n        customControl.Refresh();\n    }));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Provider.IToggleProvider.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Provider.IToggleProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.IToggleProvider\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.IToggleProvider.Toggle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.IToggleProvider.ToggleState\">\r\n<meta name=\"APILocation\" content=\"UIAutomationProvider.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a6359896-cc42-b950-86f8-64150fc1cfcc\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Exposes methods and properties to support UI Automation client access to controls that can cycle through a set of states and maintain a state once set.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation.Provider/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.Provider.IToggleProvider\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Provider.IToggleProvider.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Provider.IToggleProvider.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.Provider.IToggleProvider","System.Windows.Automation.Provider.IToggleProvider.Toggle","System.Windows.Automation.Provider.IToggleProvider.ToggleState"],"api_location":["UIAutomationProvider.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.Provider.IToggleProvider","System::Windows::Automation::Provider::IToggleProvider","System.Windows.Automation.Provider.IToggleProvider.Toggle","System::Windows::Automation::Provider::IToggleProvider::Toggle","System.Windows.Automation.Provider.IToggleProvider.ToggleState","System::Windows::Automation::Provider::IToggleProvider::ToggleState"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a6359896-cc42-b950-86f8-64150fc1cfcc","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation.Provider/IToggleProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IToggleProvider interface | Microsoft Docs","_op_ogTitle":"IToggleProvider interface","description":"Exposes methods and properties to support UI Automation client access to controls that can cycle through a set of states and maintain a state once set.\n","toc_asset_id":"_splitted/System.Windows.Automation.Provider/toc.json","toc_rel":"_splitted/System.Windows.Automation.Provider/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.Provider.IToggleProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.provider.itoggleprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.provider.itoggleprovider","fileRelativePath":"System.Windows.Automation.Provider.IToggleProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}