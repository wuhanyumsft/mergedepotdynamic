{"content":"    \r\n    <h1 id=\"System_Int16\">\r\n      <span class=\"lang-csharp\">Int16</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a 16-bit signed integer.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic struct Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Int16</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The Int16 value type represents signed integers with values ranging from negative 32768 through positive 32767.  </p>\n<p> This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.  </p>\n<p> You can also call the members of the <a class=\"xref\" href=\"system.math\" data-linktype=\"relative-path\">Math</a> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.  </p>\n<p> For information about how format specification codes control the string representation of value types, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.</p>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_MaxValue\" data-linktype=\"self-bookmark\">MaxValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the largest possible value of an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. This field is constant.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_MinValue\" data-linktype=\"self-bookmark\">MinValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the smallest possible value of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. This field is constant.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_CompareTo_System_Int16_\" data-linktype=\"self-bookmark\">CompareTo(Int16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_CompareTo_System_Object_\" data-linktype=\"self-bookmark\">CompareTo(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_Equals_System_Int16_\" data-linktype=\"self-bookmark\">Equals(Int16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether this instance is equal to a specified <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether this instance is equal to a specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_GetTypeCode\" data-linktype=\"self-bookmark\">GetTypeCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a> for value type <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_Parse_System_String_\" data-linktype=\"self-bookmark\">Parse(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number to its 16-bit signed integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_Parse_System_String_System_Globalization_NumberStyles_\" data-linktype=\"self-bookmark\">Parse(String,NumberStyles)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_Parse_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">Parse(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"self-bookmark\">Parse(String,NumberStyles,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_ToString_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_ToString_System_String_\" data-linktype=\"self-bookmark\">ToString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_ToString_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_TryParse_System_String_System_Int16__\" data-linktype=\"self-bookmark\">TryParse(String,Int16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_Int16__\" data-linktype=\"self-bookmark\">TryParse(String,NumberStyles,IFormatProvider,Int16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToBoolean_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToBoolean(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToBoolean*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToByte_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToByte(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToByte*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToChar_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToChar(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToChar*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToDateTime_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToDateTime(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToDecimal_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToDecimal(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDecimal*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToDouble_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToDouble(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDouble*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToInt16_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToInt16(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt16*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToInt32_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToInt32(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt32*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToInt64_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToInt64(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt64*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToSByte_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToSByte(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSByte*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToSingle_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToSingle(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSingle*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToType_System_Type_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToType(Type,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToType*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToUInt16_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToUInt16(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt16*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToUInt32_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToUInt32(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt32*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Int16_System_IConvertible_ToUInt64_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IConvertible.ToUInt64(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt64*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_MaxValue\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxValue</div>        \r\n          </div>\r\n    \r\n            <p>Represents the largest possible value of an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. This field is constant.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const short MaxValue = 32767;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this constant is 32767; that is, hexadecimal 0x7FFF.  </p>\n<p> The MaxValue property is typically used to prevent an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> when converting from a numeric type with a greater upper range (such as a <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> or a <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>) to an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. The example illustrates this usage.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the MaxValue property to prevent an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> when converting to an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Int16.MaxValue#1\">      long[] numbersToConvert = {162345, 32183, -54000};\n      short newNumber;\n      foreach (long number in numbersToConvert)\n      {\n         if (number &gt;= Int16.MinValue &amp;&amp; number &lt;= Int16.MaxValue)\n         {\n            newNumber = Convert.ToInt16(number);\n            Console.WriteLine(&quot;Successfully converted {0} to an Int16.&quot;, \n                              newNumber);\n         }\n         else\n         {\n            Console.WriteLine(&quot;Unable to convert {0} to an Int16.&quot;, number);\n         }\n      }\n      // The example displays the following output to the console:\n      //       Unable to convert 162345 to an Int16.\n      //       Successfully converted 32183 to an Int16.\n      //       Unable to convert -54000 to an Int16.   \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Int16.MaxValue#1\">      array&lt;Int64&gt;^ numbersToConvert = {162345, 32183, -54000};\n      Int16 newNumber;\n      for each (Int64 number in numbersToConvert)\n      {\n         if (number &gt;= Int16::MinValue &amp;&amp; number &lt;= Int16::MaxValue)\n         {\n            newNumber = Convert::ToInt16(number);\n            Console::WriteLine(&quot;Successfully converted {0} to an Int16.&quot;, \n                               newNumber);\n         }\n         else\n         {\n            Console::WriteLine(&quot;Unable to convert {0} to an Int16.&quot;, number);\n         }\n      }\n      // The example displays the following output:\n      //       Unable to convert 162345 to an Int16.\n      //       Successfully converted 32183 to an Int16.\n      //       Unable to convert -54000 to an Int16.   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.MaxValue#1\">      Dim numbersToConvert() As Long = {162345, 32183, -54000}\n      Dim newNumber As Int16\n      For Each number As Long In NumbersToConvert\n         If number &gt;= Int16.MinValue And number &lt;= Int16.MaxValue Then\n            newNumber = Convert.ToInt16(number)\n            Console.WriteLine(&quot;Successfully converted {0} to an Int16.&quot;, _\n                              newNumber)\n         Else\n            Console.WriteLine(&quot;Unable to convert {0} to an Int16.&quot;, number)\n         End If                     \n      Next\n      &#39; The example displays the following output to the console:\n      &#39;       Unable to convert 162345 to an Int16.\n      &#39;       Successfully converted 32183 to an Int16.\n      &#39;       Unable to convert -54000 to an Int16.   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_MinValue\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinValue</div>        \r\n          </div>\r\n    \r\n            <p>Represents the smallest possible value of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. This field is constant.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const short MinValue = -32768;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this constant is -32768; that is, hexadecimal 0x8000.  </p>\n<p> The MinValue property is typically used to prevent an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> when converting from a numeric type with a greater lower range (such as an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> or an <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>) to an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. The example illustrates this usage.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the MinValue property to prevent an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> when converting to an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Int16.MaxValue#1\">      long[] numbersToConvert = {162345, 32183, -54000};\n      short newNumber;\n      foreach (long number in numbersToConvert)\n      {\n         if (number &gt;= Int16.MinValue &amp;&amp; number &lt;= Int16.MaxValue)\n         {\n            newNumber = Convert.ToInt16(number);\n            Console.WriteLine(&quot;Successfully converted {0} to an Int16.&quot;, \n                              newNumber);\n         }\n         else\n         {\n            Console.WriteLine(&quot;Unable to convert {0} to an Int16.&quot;, number);\n         }\n      }\n      // The example displays the following output to the console:\n      //       Unable to convert 162345 to an Int16.\n      //       Successfully converted 32183 to an Int16.\n      //       Unable to convert -54000 to an Int16.   \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Int16.MaxValue#1\">      array&lt;Int64&gt;^ numbersToConvert = {162345, 32183, -54000};\n      Int16 newNumber;\n      for each (Int64 number in numbersToConvert)\n      {\n         if (number &gt;= Int16::MinValue &amp;&amp; number &lt;= Int16::MaxValue)\n         {\n            newNumber = Convert::ToInt16(number);\n            Console::WriteLine(&quot;Successfully converted {0} to an Int16.&quot;, \n                               newNumber);\n         }\n         else\n         {\n            Console::WriteLine(&quot;Unable to convert {0} to an Int16.&quot;, number);\n         }\n      }\n      // The example displays the following output:\n      //       Unable to convert 162345 to an Int16.\n      //       Successfully converted 32183 to an Int16.\n      //       Unable to convert -54000 to an Int16.   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.MaxValue#1\">      Dim numbersToConvert() As Long = {162345, 32183, -54000}\n      Dim newNumber As Int16\n      For Each number As Long In NumbersToConvert\n         If number &gt;= Int16.MinValue And number &lt;= Int16.MaxValue Then\n            newNumber = Convert.ToInt16(number)\n            Console.WriteLine(&quot;Successfully converted {0} to an Int16.&quot;, _\n                              newNumber)\n         Else\n            Console.WriteLine(&quot;Unable to convert {0} to an Int16.&quot;, number)\n         End If                     \n      Next\n      &#39; The example displays the following output to the console:\n      &#39;       Unable to convert 162345 to an Int16.\n      &#39;       Successfully converted 32183 to an Int16.\n      &#39;       Unable to convert -54000 to an Int16.   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_CompareTo_System_Int16_\">\r\n    \r\n            <a id=\"System_Int16_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(Int16)</div>        \r\n          </div>\r\n    \r\n            <p>Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (short value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance is less than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is equal to <code>value</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance is greater than <code>value</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method implements the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> interface and performs slightly better than the <a class=\"xref\" href=\"system.int16#System_Int16_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method because it does not have to convert the <code>value</code> parameter to an object.  </p>\n<p> Depending on your programming language, it might be possible to code a <a class=\"xref\" href=\"system.int16#System_Int16_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.  </p>\n<p> For example, suppose the instance type is <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> and the parameter type is <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> object, then generates a <a class=\"xref\" href=\"system.int32#System_Int32_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method that compares the values of the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> instance and the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> parameter representation.  </p>\n<p> Consult your programming language&#39;s documentation to determine whether its compiler performs implicit widening conversions on numeric types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates generic and nongeneric versions of the <a class=\"xref\" href=\"system.int16#System_Int16_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method for several value and reference types.  </p>\n<pre><code class=\"lang-vb\" name=\"T.CompareTo#1\">&#39; This example demonstrates the generic and non-generic versions of the \n&#39; CompareTo method for several base types.\n&#39; The non-generic version takes a parameter of type Object, while the generic\n&#39; version takes a type-specific parameter, such as Boolean, Int32, or Double.\n\nImports System\n\nClass Sample\n   Public Shared Sub Main()\n      Dim nl As String = Environment.NewLine\n      Dim msg As String = _\n          &quot;{0}The following is the result of using the generic and non-generic{0}&quot; &amp; _\n          &quot;versions of the CompareTo method for several base types:{0}&quot;\n      \n      Dim now As DateTime = DateTime.Now\n      &#39; Time span = 11 days, 22 hours, 33 minutes, 44 seconds\n      Dim tsX As New TimeSpan(11, 22, 33, 44)\n      &#39; Version = 1.2.333.4\n      Dim versX As New Version(&quot;1.2.333.4&quot;)\n      &#39; Guid = CA761232-ED42-11CE-BACD-00AA0057B223\n      Dim guidX As New Guid(&quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;)\n      \n      Dim a1 As [Boolean] = True,    a2 As [Boolean] = True\n      Dim b1 As [Byte] = 1,          b2 As [Byte] = 1\n      Dim c1 As Int16 = -2,          c2 As Int16 = 2\n      Dim d1 As Int32 = 3,           d2 As Int32 = 3\n      Dim e1 As Int64 = 4,           e2 As Int64 = -4\n      Dim f1 As [Decimal] = -5.5D,   f2 As [Decimal] = 5.5D\n      Dim g1 As [Single] = 6.6F,     g2 As [Single] = 6.6F\n      Dim h1 As [Double] = 7.7,      h2 As [Double] = -7.7\n      Dim i1 As [Char] = &quot;A&quot;c,       i2 As [Char] = &quot;A&quot;c\n      Dim j1 As String = &quot;abc&quot;,      j2 As String = &quot;abc&quot;\n      Dim k1 As DateTime = now,      k2 As DateTime = now\n      Dim l1 As TimeSpan = tsX,      l2 As TimeSpan = tsX\n      Dim m1 As Version = versX,     m2 As New Version(&quot;2.0&quot;)\n      Dim n1 As Guid = guidX,        n2 As Guid = guidX\n      \n      &#39; The following types are not CLS-compliant.\n      &#39; SByte, UInt16, UInt32, UInt64\n\n      Console.WriteLine(msg, nl)\n      Try\n         &#39; The second and third Show method call parameters are automatically boxed because\n         &#39; the second and third Show method declaration arguments expect type Object.\n\n         Show(&quot;Boolean:  &quot;, a1, a2, a1.CompareTo(a2), a1.CompareTo(CObj(a2)))\n         Show(&quot;Byte:     &quot;, b1, b2, b1.CompareTo(b2), b1.CompareTo(CObj(b2)))\n         Show(&quot;Int16:    &quot;, c1, c2, c1.CompareTo(c2), c1.CompareTo(CObj(c2)))\n         Show(&quot;Int32:    &quot;, d1, d2, d1.CompareTo(d2), d1.CompareTo(CObj(d2)))\n         Show(&quot;Int64:    &quot;, e1, e2, e1.CompareTo(e2), e1.CompareTo(CObj(e2)))\n         Show(&quot;Decimal:  &quot;, f1, f2, f1.CompareTo(f2), f1.CompareTo(CObj(f2)))\n         Show(&quot;Single:   &quot;, g1, g2, g1.CompareTo(g2), g1.CompareTo(CObj(g2)))\n         Show(&quot;Double:   &quot;, h1, h2, h1.CompareTo(h2), h1.CompareTo(CObj(h2)))\n         Show(&quot;Char:     &quot;, i1, i2, i1.CompareTo(i2), i1.CompareTo(CObj(i2)))\n         Show(&quot;String:   &quot;, j1, j2, j1.CompareTo(j2), j1.CompareTo(CObj(j2)))\n         Show(&quot;DateTime: &quot;, k1, k2, k1.CompareTo(k2), k1.CompareTo(CObj(k2)))\n         Show(&quot;TimeSpan: &quot;, l1, l2, l1.CompareTo(l2), l1.CompareTo(CObj(l2)))\n         Show(&quot;Version:  &quot;, m1, m2, m1.CompareTo(m2), m1.CompareTo(CObj(m2)))\n         Show(&quot;Guid:     &quot;, n1, n2, n1.CompareTo(n2), n1.CompareTo(CObj(n2)))\n         &#39;\n         Console.WriteLine(&quot;{0}The following types are not CLS-compliant:&quot;, nl)\n         Console.WriteLine(&quot;SByte, UInt16, UInt32, UInt64&quot;)\n\n      Catch e As Exception\n         Console.WriteLine(e)\n      End Try\n   End Sub &#39;Main\n   \n   Public Shared Sub Show(caption As String, var1 As [Object], var2 As [Object], _\n                          resultGeneric As Integer, resultNonGeneric As Integer)\n      Dim relation As String\n      \n      Console.Write(caption)\n      If resultGeneric = resultNonGeneric Then\n         If resultGeneric &lt; 0 Then\n            relation = &quot;less than&quot;\n         ElseIf resultGeneric &gt; 0 Then\n            relation = &quot;greater than&quot;\n         Else\n            relation = &quot;equal to&quot;\n         End If\n         Console.WriteLine(&quot;{0} is {1} {2}&quot;, var1, relation, var2)\n      \n      &#39; The following condition will never occur because the generic and non-generic\n      &#39; CompareTo methods are equivalent.\n\n      Else\n         Console.WriteLine(&quot;Generic CompareTo = {0}; non-generic CompareTo = {1}&quot;, _\n                            resultGeneric, resultNonGeneric)\n      End If\n   End Sub &#39;Show\nEnd Class &#39;Sample\n&#39;\n&#39;This example produces the following results:\n&#39;\n&#39;The following is the result of using the generic and non-generic versions of the\n&#39;CompareTo method for several base types:\n&#39;\n&#39;Boolean:  True is equal to True\n&#39;Byte:     1 is equal to 1\n&#39;Int16:    -2 is less than 2\n&#39;Int32:    3 is equal to 3\n&#39;Int64:    4 is greater than -4\n&#39;Decimal:  -5.5 is less than 5.5\n&#39;Single:   6.6 is equal to 6.6\n&#39;Double:   7.7 is greater than -7.7\n&#39;Char:     A is equal to A\n&#39;String:   abc is equal to abc\n&#39;DateTime: 12/1/2003 5:37:46 PM is equal to 12/1/2003 5:37:46 PM\n&#39;TimeSpan: 11.22:33:44 is equal to 11.22:33:44\n&#39;Version:  1.2.333.4 is less than 2.0\n&#39;Guid:     ca761232-ed42-11ce-bacd-00aa0057b223 is equal to ca761232-ed42-11ce-bacd-00\n&#39;aa0057b223\n&#39;\n&#39;The following types are not CLS-compliant:\n&#39;SByte, UInt16, UInt32, UInt64\n&#39;\n</code></pre><pre><code class=\"lang-cpp\" name=\"T.CompareTo#1\">// This example demonstrates the two versions of the \n// CompareTo method for several base types.\n// The general version takes a parameter of type Object, while the specific\n// version takes a type-specific parameter, such as Boolean, Int32, or Double.\nusing namespace System;\n\nvoid Show( String^ caption, Object^ var1, Object^ var2, int resultGeneric, int resultNonGeneric )\n{\n   String^ relation;\n   Console::Write( caption );\n   if ( resultGeneric == resultNonGeneric )\n   {\n      if ( resultGeneric &lt; 0 )\n            relation = &quot;less than&quot;;\n      else\n      if ( resultGeneric &gt; 0 )\n            relation = &quot;greater than&quot;;\n      else\n            relation = &quot;equal to&quot;;\n      Console::WriteLine( &quot;{0} is {1} {2}&quot;, var1, relation, var2 );\n   }\n   // The following condition will never occur because the generic and non-generic\n   // CompareTo methods are equivalent.\n   else\n   {\n      Console::WriteLine( &quot;Generic CompareTo = {0}; non-generic CompareTo = {1}&quot;, resultGeneric, resultNonGeneric );\n   }\n}\n\nint main()\n{\n   String^ nl = Environment::NewLine;\n   String^ msg = &quot;{0}The following is the result of using the generic and non-generic{0}&quot;\n   &quot;versions of the CompareTo method for several base types:{0}&quot;;\n   Object^ obj; // An Object used to insure CompareTo(Object) is called.\n\n   DateTime now = DateTime::Now;\n   \n   // Time span = 11 days, 22 hours, 33 minutes, 44 seconds\n   TimeSpan tsX = TimeSpan(11,22,33,44);\n   \n   // Version = 1.2.333.4\n   Version^ versX = gcnew Version(  &quot;1.2.333.4&quot; );\n   \n   // Guid = CA761232-ED42-11CE-BACD-00AA0057B223\n   Guid guidX = Guid( &quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;);\n   Boolean a1 = true,a2 = true;\n   Byte b1 = 1,b2 = 1;\n   Int16 c1 = -2,c2 = 2;\n   Int32 d1 = 3,d2 = 3;\n   Int64 e1 = 4,e2 = -4;\n   Decimal f1 = Decimal(-5.5), f2 = Decimal(5.5);\n   Single g1 = 6.6f,g2 = 6.6f;\n   Double h1 = 7.7,h2 = -7.7;\n   Char i1 = &#39;A&#39;,i2 = &#39;A&#39;;\n   String^ j1 = &quot;abc&quot;, ^j2 = &quot;abc&quot;;\n   DateTime k1 = now,k2 = now;\n   TimeSpan l1 = tsX,l2 = tsX;\n   Version^ m1 = versX, ^m2 = gcnew Version(  &quot;2.0&quot; );\n   Guid n1 = guidX,n2 = guidX;\n   \n   // The following types are not CLS-compliant.\n   SByte w1 = 8,w2 = 8;\n   UInt16 x1 = 9,x2 = 9;\n   UInt32 y1 = 10,y2 = 10;\n   UInt64 z1 = 11,z2 = 11;\n   \n   //\n   Console::WriteLine( msg, nl );\n   try\n   {\n      Show( &quot;Boolean: &quot;, a1, a2, a1.CompareTo( a2 ), a1.CompareTo( a2 ) );\n      Show( &quot;Byte:    &quot;, b1, b2, b1.CompareTo( b2 ), b1.CompareTo( b2 ) );\n      Show( &quot;Int16:   &quot;, c1, c2, c1.CompareTo( c2 ), c1.CompareTo( c2 ) );\n      Show( &quot;Int32:   &quot;, d1, d2, d1.CompareTo( d2 ), d1.CompareTo( d2 ) );\n      Show( &quot;Int64:   &quot;, e1, e2, e1.CompareTo( e2 ), e1.CompareTo( e2 ) );\n      Show( &quot;Decimal: &quot;, f1, f2, f1.CompareTo( f2 ), f1.CompareTo( f2 ) );\n      Show( &quot;Single:  &quot;, g1, g2, g1.CompareTo( g2 ), g1.CompareTo( g2 ) );\n      Show( &quot;Double:  &quot;, h1, h2, h1.CompareTo( h2 ), h1.CompareTo( h2 ) );\n      Show( &quot;Char:    &quot;, i1, i2, i1.CompareTo( i2 ), i1.CompareTo( i2 ) );\n      \n      // Use an anonymous object to hide the String object.\n      obj = j2;\n      Show( &quot;String:  &quot;, j1, j2, j1-&gt;CompareTo( j2 ), j1-&gt;CompareTo( obj ) );\n      Show( &quot;DateTime:&quot;, k1, k2, k1.CompareTo( k2 ), k1.CompareTo( k2 ) );\n      Show(  &quot;TimeSpan: &quot;, l1, l2, l1.CompareTo( l2 ), l1.CompareTo( l2 ) );\n      \n      // Use an anonymous object to hide the Version object.\n      obj = m2;\n      Show(  &quot;Version:  &quot;, m1, m2, m1-&gt;CompareTo( m2 ), m1-&gt;CompareTo( obj ) );\n      Show(  &quot;Guid:     &quot;, n1, n2, n1.CompareTo( n2 ), n1.CompareTo( n2 ) );\n      \n      //\n      Console::WriteLine( &quot;{0}The following types are not CLS-compliant:&quot;, nl );\n      Show( &quot;SByte:   &quot;, w1, w2, w1.CompareTo( w2 ), w1.CompareTo( w2 ) );\n      Show( &quot;UInt16:  &quot;, x1, x2, x1.CompareTo( x2 ), x1.CompareTo( x2 ) );\n      Show( &quot;UInt32:  &quot;, y1, y2, y1.CompareTo( y2 ), y1.CompareTo( y2 ) );\n      Show( &quot;UInt64:  &quot;, z1, z2, z1.CompareTo( z2 ), z1.CompareTo( z2 ) );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( e );\n   }\n\n}\n//     This example displays the following output:\n//     \n//     The following is the result of using the generic and non-generic versions of the\n//     CompareTo method for several base types:\n//     \n//     Boolean:  True is equal to True\n//     Byte:     1 is equal to 1\n//     Int16:    -2 is less than 2\n//     Int32:    3 is equal to 3\n//     Int64:    4 is greater than -4\n//     Decimal:  -5.5 is less than 5.5\n//     Single:   6.6 is equal to 6.6\n//     Double:   7.7 is greater than -7.7\n//     Char:     A is equal to A\n//     String:   abc is equal to abc\n//     DateTime: 12/1/2003 5:37:46 PM is equal to 12/1/2003 5:37:46 PM\n//     TimeSpan: 11.22:33:44 is equal to 11.22:33:44\n//     Version:  1.2.333.4 is less than 2.0\n//     Guid:     ca761232-ed42-11ce-bacd-00aa0057b223 is equal to ca761232-ed42-11ce-bacd-00\n//     aa0057b223\n//     \n//     The following types are not CLS-compliant:\n//     SByte:    8 is equal to 8\n//     UInt16:   9 is equal to 9\n//     UInt32:   10 is equal to 10\n//     UInt64:   11 is equal to 11\n</code></pre><pre><code class=\"lang-cs\" name=\"T.CompareTo#1\">// This example demonstrates the generic and non-generic versions of the \n// CompareTo method for several base types.\n// The non-generic version takes a parameter of type Object, while the generic\n// version takes a type-specific parameter, such as Boolean, Int32, or Double.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    string    nl = Environment.NewLine;\n    string    msg = &quot;{0}The following is the result of using the generic and non-generic{0}&quot; +\n                    &quot;versions of the CompareTo method for several base types:{0}&quot;;\n\n    DateTime  now = DateTime.Now;\n// Time span = 11 days, 22 hours, 33 minutes, 44 seconds\n    TimeSpan  tsX = new TimeSpan(11, 22, 33, 44); \n// Version = 1.2.333.4\n    Version   versX = new Version(&quot;1.2.333.4&quot;);  \n// Guid = CA761232-ED42-11CE-BACD-00AA0057B223\n    Guid      guidX = new Guid(&quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;);\n\n    Boolean  a1 = true,  a2 = true;\n    Byte     b1 = 1,     b2 = 1;\n    Int16    c1 = -2,    c2 = 2;\n    Int32    d1 = 3,     d2 = 3;\n    Int64    e1 = 4,     e2 = -4;\n    Decimal  f1 = -5.5m, f2 = 5.5m;\n    Single   g1 = 6.6f,  g2 = 6.6f;\n    Double   h1 = 7.7d,  h2 = -7.7d;\n    Char     i1 = &#39;A&#39;,   i2 = &#39;A&#39;;\n    String   j1 = &quot;abc&quot;, j2 = &quot;abc&quot;;\n    DateTime k1 = now,   k2 = now;\n    TimeSpan l1 = tsX,   l2 = tsX;\n    Version  m1 = versX, m2 = new Version(&quot;2.0&quot;);\n    Guid     n1 = guidX, n2 = guidX;\n\n// The following types are not CLS-compliant.\n    SByte    w1 = 8,     w2 = 8;\n    UInt16   x1 = 9,     x2 = 9;\n    UInt32   y1 = 10,    y2 = 10;\n    UInt64   z1 = 11,    z2 = 11;\n//\n    Console.WriteLine(msg, nl);\n    try \n        {\n// The second and third Show method call parameters are automatically boxed because\n// the second and third Show method declaration arguments expect type Object.\n\n        Show(&quot;Boolean:  &quot;, a1, a2, a1.CompareTo(a2), a1.CompareTo((Object)a2));\n        Show(&quot;Byte:     &quot;, b1, b2, b1.CompareTo(b2), b1.CompareTo((Object)b2));\n        Show(&quot;Int16:    &quot;, c1, c2, c1.CompareTo(c2), c1.CompareTo((Object)c2));\n        Show(&quot;Int32:    &quot;, d1, d2, d1.CompareTo(d2), d1.CompareTo((Object)d2));\n        Show(&quot;Int64:    &quot;, e1, e2, e1.CompareTo(e2), e1.CompareTo((Object)e2));\n        Show(&quot;Decimal:  &quot;, f1, f2, f1.CompareTo(f2), f1.CompareTo((Object)f2));\n        Show(&quot;Single:   &quot;, g1, g2, g1.CompareTo(g2), g1.CompareTo((Object)g2));\n        Show(&quot;Double:   &quot;, h1, h2, h1.CompareTo(h2), h1.CompareTo((Object)h2));\n        Show(&quot;Char:     &quot;, i1, i2, i1.CompareTo(i2), i1.CompareTo((Object)i2));\n        Show(&quot;String:   &quot;, j1, j2, j1.CompareTo(j2), j1.CompareTo((Object)j2));\n        Show(&quot;DateTime: &quot;, k1, k2, k1.CompareTo(k2), k1.CompareTo((Object)k2));\n        Show(&quot;TimeSpan: &quot;, l1, l2, l1.CompareTo(l2), l1.CompareTo((Object)l2));\n        Show(&quot;Version:  &quot;, m1, m2, m1.CompareTo(m2), m1.CompareTo((Object)m2));\n        Show(&quot;Guid:     &quot;, n1, n2, n1.CompareTo(n2), n1.CompareTo((Object)n2));\n//\n        Console.WriteLine(&quot;{0}The following types are not CLS-compliant:&quot;, nl);\n        Show(&quot;SByte:    &quot;, w1, w2, w1.CompareTo(w2), w1.CompareTo((Object)w2));\n        Show(&quot;UInt16:   &quot;, x1, x2, x1.CompareTo(x2), x1.CompareTo((Object)x2));\n        Show(&quot;UInt32:   &quot;, y1, y2, y1.CompareTo(y2), y1.CompareTo((Object)y2));\n        Show(&quot;UInt64:   &quot;, z1, z2, z1.CompareTo(z2), z1.CompareTo((Object)z2));\n        }\n    catch (Exception e)\n        {\n        Console.WriteLine(e);\n        }\n    }\n\n    public static void Show(string caption, Object var1, Object var2, \n                            int resultGeneric, int resultNonGeneric)\n    {\n    string relation;\n\n    Console.Write(caption);\n    if (resultGeneric == resultNonGeneric) \n        {\n        if      (resultGeneric &lt; 0) relation = &quot;less than&quot;;\n        else if (resultGeneric &gt; 0) relation = &quot;greater than&quot;;\n        else                        relation = &quot;equal to&quot;;\n        Console.WriteLine(&quot;{0} is {1} {2}&quot;, var1, relation, var2);\n        }\n\n// The following condition will never occur because the generic and non-generic\n// CompareTo methods are equivalent.\n\n    else\n        {\n        Console.WriteLine(&quot;Generic CompareTo = {0}; non-generic CompareTo = {1}&quot;, \n                           resultGeneric, resultNonGeneric);\n        }\n   }\n}\n/*\nThis example produces the following results:\n\nThe following is the result of using the generic and non-generic versions of the\nCompareTo method for several base types:\n\nBoolean:  True is equal to True\nByte:     1 is equal to 1\nInt16:    -2 is less than 2\nInt32:    3 is equal to 3\nInt64:    4 is greater than -4\nDecimal:  -5.5 is less than 5.5\nSingle:   6.6 is equal to 6.6\nDouble:   7.7 is greater than -7.7\nChar:     A is equal to A\nString:   abc is equal to abc\nDateTime: 12/1/2003 5:37:46 PM is equal to 12/1/2003 5:37:46 PM\nTimeSpan: 11.22:33:44 is equal to 11.22:33:44\nVersion:  1.2.333.4 is less than 2.0\nGuid:     ca761232-ed42-11ce-bacd-00aa0057b223 is equal to ca761232-ed42-11ce-bacd-00\naa0057b223\n\nThe following types are not CLS-compliant:\nSByte:    8 is equal to 8\nUInt16:   9 is equal to 9\nUInt32:   10 is equal to 10\nUInt64:   11 is equal to 11\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_CompareTo_System_Object_\">\r\n    \r\n            <a id=\"System_Int16_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare, or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance is less than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is equal to <code>value</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance is greater than <code>value</code>.<br>\n -or-<br>\n <code>value</code> is <code>null</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>, regardless of its value, is considered greater than a null reference.  </p>\n<p> The <code>value</code> parameter must be <code>null</code> or an instance of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>; otherwise, an exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_Equals_System_Int16_\">\r\n    \r\n            <a id=\"System_Int16_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Int16)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether this instance is equal to a specified <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (short obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> has the same value as this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> interface, and performs slightly better than <a class=\"xref\" href=\"system.int16#System_Int16_Equals_\" data-linktype=\"relative-path\">Equals</a> because it does not have to convert the <code>obj</code> parameter to an object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Int16_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether this instance is equal to a specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>obj</code> is an instance of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> and equals the value of this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of <code>Equals</code> in the context of <code>Int16</code>, comparing two short values and returning <code>true</code> if they represent the same number, or <code>false</code> if they do not.  </p>\n<pre><code class=\"lang-cs\" name=\"Int16_Equals#1\">            Int16 myVariable1 = 20;\n            Int16 myVariable2 = 20;\n\n            // Get and display the declaring type.\n            Console.WriteLine(&quot;<br>Type of &#39;myVariable1&#39; is &#39;{0}&#39; and&quot;+\n                 &quot; value is :{1}&quot;,myVariable1.GetType(), myVariable1); \n            Console.WriteLine(&quot;Type of &#39;myVariable2&#39; is &#39;{0}&#39; and&quot;+\n                 &quot; value is :{1}&quot;,myVariable2.GetType(), myVariable2);\n\n            // Compare &#39;myVariable1&#39; instance with &#39;myVariable2&#39; Object.\n            if( myVariable1.Equals( myVariable2 ) )\n               Console.WriteLine( &quot;<br>Structures &#39;myVariable1&#39; and &quot;+\n                     &quot;&#39;myVariable2&#39; are equal&quot;);\n            else\n               Console.WriteLine( &quot;<br>Structures &#39;myVariable1&#39; and &quot;+\n                     &quot;&#39;myVariable2&#39; are not equal&quot;);\n            \n</code></pre><pre><code class=\"lang-vb\" name=\"Int16_Equals#1\">         Dim myVariable1 As Int16 = 20\n         Dim myVariable2 As Int16 = 20\n         \n       &#39; Get and display the declaring type.\n       Console.WriteLine(ControlChars.NewLine + &quot;Type of &#39;myVariable1&#39; is &#39;{0}&#39; and&quot; +  _\n                     &quot; value is :{1}&quot;, myVariable1.GetType().ToString(), myVariable1.ToString())\n       Console.WriteLine(&quot;Type of &#39;myVariable2&#39; is &#39;{0}&#39; and&quot; +  _\n                  &quot; value is :{1}&quot;, myVariable2.GetType().ToString(), myVariable2.ToString())\n         \n         &#39; Compare &#39;myVariable1&#39; instance with &#39;myVariable2&#39; Object.\n         If myVariable1.Equals(myVariable2) Then\n            Console.WriteLine(ControlChars.NewLine + &quot;Structures &#39;myVariable1&#39; and &quot; +  _\n                        &quot;&#39;myVariable2&#39; are equal&quot;)\n         Else\n            Console.WriteLine(ControlChars.NewLine + &quot;Structures &#39;myVariable1&#39; and &quot; +   _\n                     &quot;&#39;myVariable2&#39; are not equal&quot;)\n         End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"Int16_Equals#1\">      Int16 myVariable1 = 20;\n      Int16 myVariable2 = 20;\n      \n      // Get and display the declaring type.\n      Console::WriteLine( &quot;<br>Type of &#39;myVariable1&#39; is &#39;{0}&#39; and  value is : {1}&quot;, myVariable1.GetType(), myVariable1 );\n      Console::WriteLine( &quot;Type of &#39;myVariable2&#39; is &#39;{0}&#39; and  value is : {1}&quot;, myVariable2.GetType(), myVariable2 );\n      \n      // Compare &#39;myVariable1&#39; instance with &#39;myVariable2&#39; Object.\n      if ( myVariable1.Equals( myVariable2 ) )\n            Console::WriteLine( &quot;<br>Structures &#39;myVariable1&#39; and &#39;myVariable2&#39; are equal&quot; );\n      else\n            Console::WriteLine( &quot;<br>Structures &#39;myVariable1&#39; and &#39;myVariable2&#39; are not equal&quot; );\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_GetHashCode\">\r\n    \r\n            <a id=\"System_Int16_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_GetTypeCode\">\r\n    \r\n            <a id=\"System_Int16_GetTypeCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a> for value type <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TypeCode GetTypeCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a></div>\r\n                  </div>\r\n                  <p>The enumerated constant, <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_Parse_System_String_\">\r\n    \r\n            <a id=\"System_Int16_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number to its 16-bit signed integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static short Parse (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing a number to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>A 16-bit signed integer equivalent to the number contained in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> or greater than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>s</code> parameter contains a number of the form:  </p>\n<p> [ws][sign]digits[ws]  </p>\n<p> Elements in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits ranging from 0 to 9.</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>s</code> parameter is interpreted using the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style. In addition to the integer value&#39;s decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in <code>s</code>, use either the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_System_Globalization_NumberStyles_\" data-linktype=\"relative-path\">System.Int16.Parse(String,NumberStyles)</a> or the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_\" data-linktype=\"relative-path\">Parse</a> method.  </p>\n<p> The <code>s</code> parameter is parsed using the formatting information in a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that is initialized for the current system culture. For more information, see <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a>. To parse a string using the formatting information of some other culture, use the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Int16.Parse(String,IFormatProvider)</a> or the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Int16.Parse(String,NumberStyles,IFormatProvider)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to convert a string value into a 16-bit signed integer value using the Parse method. The resulting integer value is then displayed to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Int16.Parse#1\">   String^ value;\n   Int16 number;\n      \n   value = &quot; 12603 &quot;;\n   try\n   {\n      number = Int16::Parse(value);\n      Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n   }\n   catch (FormatException ^e)\n   {\n      Console::WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, \n                         value);\n   }\n      \n   value = &quot; 16,054&quot;;\n   try\n   {\n      number = Int16::Parse(value);\n      Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n   }\n   catch (FormatException ^e)\n   {\n      Console::WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, \n                        value);\n   }\n                              \n   value = &quot; -17264&quot;;\n   try\n   {\n      number = Int16::Parse(value);\n      Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n   }\n   catch (FormatException ^e)\n   {\n      Console::WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, \n                         value);\n   }\n   // The example displays the following output to the console:\n   //       Converted &#39; 12603 &#39; to 12603.\n   //       Unable to convert &#39; 16,054&#39; to a 16-bit signed integer.\n   //       Converted &#39; -17264&#39; to -17264.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Int16.Parse#1\">      string value;\n      short number;\n      \n      value = &quot; 12603 &quot;;\n      try\n      {\n         number = Int16.Parse(value);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, \n                           value);\n      }\n      \n      value = &quot; 16,054&quot;;\n      try\n      {\n         number = Int16.Parse(value);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, \n                           value);\n      }\n                              \n      value = &quot; -17264&quot;;\n      try\n      {\n         number = Int16.Parse(value);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, \n                           value);\n      }\n      // The example displays the following output to the console:\n      //       Converted &#39; 12603 &#39; to 12603.\n      //       Unable to convert &#39; 16,054&#39; to a 16-bit signed integer.\n      //       Converted &#39; -17264&#39; to -17264.      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.Parse#1\">      Dim value As String\n      Dim number As Short\n      \n      value = &quot; 12603 &quot;\n      Try\n         number = Short.Parse(value)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, _\n                           value)\n      End Try\n      \n      value = &quot; 16,054&quot;\n      Try\n         number = Short.Parse(value)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, _\n                           value)\n      End Try\n                              \n      value = &quot; -17264&quot;\n      Try\n         number = Short.Parse(value)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to convert &#39;{0}&#39; to a 16-bit signed integer.&quot;, _\n                           value)\n      End Try\n      &#39; The example displays the following output to the console:\n      &#39;       Converted &#39; 12603 &#39; to 12603.\n      &#39;       Unable to convert &#39; 16,054&#39; to a 16-bit signed integer.\n      &#39;       Converted &#39; -17264&#39; to -17264.      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_Parse_System_String_System_Globalization_NumberStyles_\">\r\n    \r\n            <a id=\"System_Int16_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,NumberStyles)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static short Parse (string s, System.Globalization.NumberStyles style);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing a number to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>A 16-bit signed integer equivalent to the number specified in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>style</code> is not a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>style</code> is not a combination of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in a format compliant with <code>style</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> or greater than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> includes non-zero fractional digits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>style</code> parameter defines the style elements (such as white space or a sign symbol) that are allowed in the <code>s</code> parameter for the parse operation to succeed. It must be a combination of bit flags from the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration. Depending on the value of <code>style</code>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]  </p>\n<p> Or, if <code>style</code> includes <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>:  </p>\n<p> [ws]hexdigits[ws]  </p>\n<p> Items in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space. White space can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, or at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>$</em></td>\n<td>A culture-specific currency symbol. Its position in the string is defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a> and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyNegativePattern_\" data-linktype=\"relative-path\">CurrencyNegativePattern</a> property of the current culture. The current culture&#39;s currency symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. The sign can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. Parentheses can be used in <code>s</code> to indicate a negative value if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits from 0 through 9.</td>\n</tr>\n<tr>\n<td><em>,</em></td>\n<td>A culture-specific thousands separator symbol. The current culture&#39;s thousands separator symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>.</em></td>\n<td>A culture-specific decimal point symbol. The current culture&#39;s decimal point symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>fractional_digits</em></td>\n<td>A sequence of the 0 digit. Fractional digits can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. If any digit other than 0 appears in <em>fractional_digits</em>, the method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a>.</td>\n</tr>\n<tr>\n<td><em>e</em></td>\n<td>The &#39;e&#39; or &#39;E&#39; character, which indicates that <code>s</code> can be represented in exponential notation. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. However, the <code>s</code> parameter must represent a number in the range of the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> data type and cannot have a non-zero fractional component.</td>\n</tr>\n<tr>\n<td><em>hexdigits</em></td>\n<td>A sequence of hexadecimal digits from 0 through f, or 0 through F.</td>\n</tr>\n</tbody>\n</table>\n<p> A string with <em>digits</em> only (which corresponds to the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style) always parses successfully. Most of the remaining <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members affect the elements that may be present in <code>s</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Non-composite NumberStyles values</th>\n<th>Elements permitted in s in addition to digits</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>Decimal digits only.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>.</em> and <em>fractional_digits</em> elements. However, <em>fractional_digits</em> must consist of only one or more 0 digits or an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> is thrown.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <code>s</code> parameter can also use exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign can appear before <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign can appear after <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>sign</em> element in the form of parentheses enclosing the numeric value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>,</em> element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>$</em> element.</td>\n</tr>\n</tbody>\n</table>\n<p> If the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag is used, <code>s</code> must be the string representation of a hexadecimal value without a prefix. For example, &quot;9AF3&quot; parses successfully, but &quot;0x9AF3&quot; does not. The only other flags that can be present in <code>style</code> are <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>. (The <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration has a composite number style, <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, that includes both white space flags.)  </p>\n<p> The <code>s</code> parameter is parsed using the formatting information in a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that is initialized for the current system culture. For more information, see <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a>. To parse <code>s</code> using the formatting information of a specific culture, call the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Int16.Parse(String,NumberStyles,IFormatProvider)</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Parse method to parse the string representations of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values using the en-US culture.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Int16.Parse#2\">using namespace System;\nusing namespace System::Globalization;\n\nref class ParseSample\n{\npublic:\n   static void Main()\n   {\n      String^ value;\n      NumberStyles style;\n\n      // Parse a number with a thousands separator (throws an exception).\n      value = &quot;14,644&quot;;\n      style = NumberStyles::None;\n      ParseSample::ParseToInt16(value, style);\n      \n      style = NumberStyles::AllowThousands;\n      ParseToInt16(value, style);\n      \n      // Parse a number with a thousands separator and decimal point.\n      value = &quot;14,644.00&quot;;\n      style = NumberStyles::AllowThousands | NumberStyles::Integer |\n              NumberStyles::AllowDecimalPoint;\n      ParseToInt16(value, style);\n      \n      // Parse a number with a fractional component (throws an exception).\n      value = &quot;14,644.001&quot;;\n      ParseToInt16(value, style);\n      \n      // Parse a number in exponential notation.\n      value = &quot;145E02&quot;;\n      style = style | NumberStyles::AllowExponent;\n      ParseToInt16(value, style);\n      \n      // Parse a number in exponential notation with a positive sign.\n      value = &quot;145E+02&quot;;\n      ParseToInt16(value, style);\n      \n      // Parse a number in exponential notation with a negative sign\n      // (throws an exception).\n      value = &quot;145E-02&quot;;\n      ParseToInt16(value, style);\n   }\n\nprivate:\n   static void ParseToInt16(String^ value, NumberStyles style)\n   {\n      try\n      {\n         Int16 number = Int16::Parse(value, style);\n         Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n      }\n      catch (FormatException ^e)\n      {\n         Console::WriteLine(&quot;Unable to parse &#39;{0}&#39; with style {1}.&quot;, value, \n                            style);\n      }\n      catch (OverflowException ^e)\n      {\n         Console::WriteLine(&quot;&#39;{0}&#39; is out of range of the Int16 type.&quot;, value);\n      }\n   }\n};\n\nint main()\n{\n    ParseSample::Main();\n    Console::ReadLine();\n    return 0;\n}\n// The example displays the following output:\n//       Unable to parse &#39;14,644&#39; with style None.\n//       Converted &#39;14,644&#39; to 14644.\n//       Converted &#39;14,644.00&#39; to 14644.\n//       &#39;14,644.001&#39; is out of range of the Int16 type.\n//       Converted &#39;145E02&#39; to 14500.\n//       Converted &#39;145E+02&#39; to 14500.\n//       &#39;145E-02&#39; is out of range of the Int16 type.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Int16.Parse#2\">using System;\nusing System.Globalization;\n\npublic class ParseSample\n{\n   public static void Main()\n   {\n      string value; \n      NumberStyles style;\n      \n      // Parse a number with a thousands separator (throws an exception).\n      value = &quot;14,644&quot;;\n      style = NumberStyles.None;\n      ParseToInt16(value, style);\n      \n      style = NumberStyles.AllowThousands;\n      ParseToInt16(value, style);\n      \n      // Parse a number with a thousands separator and decimal point.\n      value = &quot;14,644.00&quot;;\n      style = NumberStyles.AllowThousands | NumberStyles.Integer |\n              NumberStyles.AllowDecimalPoint;\n      ParseToInt16(value, style);\n      \n      // Parse a number with a fractional component (throws an exception).\n      value = &quot;14,644.001&quot;;\n      ParseToInt16(value, style);\n      \n      // Parse a number in exponential notation.\n      value = &quot;145E02&quot;;\n      style = style | NumberStyles.AllowExponent;\n      ParseToInt16(value, style);\n      \n      // Parse a number in exponential notation with a positive sign.\n      value = &quot;145E+02&quot;;\n      ParseToInt16(value, style);\n      \n      // Parse a number in exponential notation with a negative sign\n      // (throws an exception).\n      value = &quot;145E-02&quot;;\n      ParseToInt16(value, style);\n   }\n\n   private static void ParseToInt16(string value, NumberStyles style)\n   {\n      try\n      {\n         short number = Int16.Parse(value, style);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39; with style {1}.&quot;, value, \n                           style.ToString());\n      }\n      catch (OverflowException)\n      {\n         Console.WriteLine(&quot;&#39;{0}&#39; is out of range of the Int16 type.&quot;, value);\n      }\n   }   \n}\n// The example displays the following output to the console:\n//       Unable to parse &#39;14,644&#39; with style None.\n//       Converted &#39;14,644&#39; to 14644.\n//       Converted &#39;14,644.00&#39; to 14644.\n//       &#39;14,644.001&#39; is out of range of the Int16 type.\n//       Converted &#39;145E02&#39; to 14500.\n//       Converted &#39;145E+02&#39; to 14500.\n//       &#39;145E-02&#39; is out of range of the Int16 type.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.Parse#2\">Imports System.Globalization\n\nModule ParseSample\n   Public Sub Main()\n      Dim value As String \n      Dim style As NumberStyles\n      \n      &#39; Parse a number with a thousands separator (throws an exception).\n      value = &quot;14,644&quot;\n      style = NumberStyles.None\n      ParseToInt16(value, style)\n      \n      style = NumberStyles.AllowThousands\n      ParseToInt16(value, style)\n      \n      &#39; Parse a number with a thousands separator and decimal point.\n      value = &quot;14,644.00&quot;\n      style = NumberStyles.AllowThousands Or NumberStyles.Integer Or _\n              NumberStyles.AllowDecimalPoint\n      ParseToInt16(value, style)\n      \n      &#39; Parse a number with a fractional component (throws an exception).\n      value = &quot;14,644.001&quot;\n      ParseToInt16(value, style)\n      \n      &#39; Parse a number in exponential notation.\n      value = &quot;145E02&quot;\n      style = style Or NumberStyles.AllowExponent\n      ParseToInt16(value, style)\n      \n      &#39; Parse a number in exponential notation with a positive sign.\n      value = &quot;145E+02&quot;\n      ParseToInt16(value, style)\n      \n      &#39; Parse a number in exponential notation with a negative sign\n      &#39; (throws an exception).\n      value = &quot;145E-02&quot;\n      ParseToInt16(value, style)\n   End Sub\n   \n   Private Sub ParseToInt16(value As String, style As NumberStyles)\n      Try\n         Dim number As Short = Int16.Parse(value, style)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39; with style {1}.&quot;, value, _\n                           style.ToString())\n      Catch e As OverflowException\n         Console.WriteLine(&quot;&#39;{0}&#39; is out of range of the Int16 type.&quot;, value)\n      End Try\n   End Sub   \nEnd Module\n&#39; The example displays the following output to the console:\n&#39;       Unable to parse &#39;14,644&#39; with style None.\n&#39;       Converted &#39;14,644&#39; to 14644.\n&#39;       Converted &#39;14,644.00&#39; to 14644.\n&#39;       &#39;14,644.001&#39; is out of range of the Int16 type.\n&#39;       Converted &#39;145E02&#39; to 14500.\n&#39;       Converted &#39;145E+02&#39; to 14500.\n&#39;       &#39;145E-02&#39; is out of range of the Int16 type.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_Parse_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static short Parse (string s, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing a number to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>A 16-bit signed integer equivalent to the number specified in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> or greater than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>s</code> parameter contains a number of the form:  </p>\n<p> [ws][sign]digits[ws]  </p>\n<p> Elements in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ws</td>\n<td>An optional white space.</td>\n</tr>\n<tr>\n<td>sign</td>\n<td>An optional sign.</td>\n</tr>\n<tr>\n<td>digits</td>\n<td>A sequence of digits ranging from 0 to 9.</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>s</code> parameter is interpreted using the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in <code>s</code>. To explicitly define the style elements together with the culture-specific formatting information that can be present in <code>s</code>, use the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Int16.Parse(String,NumberStyles,IFormatProvider)</a> method.  </p>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation that obtains a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object. The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> provides culture-specific information about the format of <code>s</code>. If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> for the current culture is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example parses string representations of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values with the Parse method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Int16.Parse#4\">      String^ stringToConvert;\n      Int16 number;\n      \n      stringToConvert = &quot; 214 &quot;;\n      try\n      {\n         number = Int16::Parse(stringToConvert, CultureInfo::InvariantCulture);\n         Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      }\n      catch (FormatException ^e)\n      {\n         Console::WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert);\n      }\n      catch (OverflowException ^e)\n      {\n         Console::WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, \n                           stringToConvert);\n      }\n      \n      stringToConvert = &quot; + 214&quot;;                     \n      try\n      {\n         number = Int16::Parse(stringToConvert, CultureInfo::InvariantCulture);\n         Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      }\n      catch (FormatException ^e)\n      {\n         Console::WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert);\n      }\n      catch (OverflowException ^e)\n      {\n         Console::WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, \n                           stringToConvert);\n      }\n      \n      stringToConvert = &quot; +214 &quot;; \n      try\n      {\n         number = Int16::Parse(stringToConvert, CultureInfo::InvariantCulture);\n         Console::WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      }\n      catch (FormatException ^e)\n      {\n         Console::WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert);\n      }\n      catch (OverflowException ^e)\n      {\n         Console::WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, \n                           stringToConvert);\n      }\n      // The example displays the following output to the console:\n      //       Converted &#39; 214 &#39; to 214.\n      //       Unable to parse &#39; + 214&#39;.\n      //       Converted &#39; +214 &#39; to 214.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Int16.Parse#4\">      string stringToConvert;\n      short number;\n      \n      stringToConvert = &quot; 214 &quot;;\n      try\n      {\n         number = Int16.Parse(stringToConvert, CultureInfo.InvariantCulture);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert);\n      }\n      catch (OverflowException)\n      {\n         Console.WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, \n                           stringToConvert);\n      }\n      \n      stringToConvert = &quot; + 214&quot;;                     \n      try\n      {\n         number = Int16.Parse(stringToConvert, CultureInfo.InvariantCulture);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert);\n      }\n      catch (OverflowException)\n      {\n         Console.WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, \n                           stringToConvert);\n      }\n      \n      stringToConvert = &quot; +214 &quot;; \n      try\n      {\n         number = Int16.Parse(stringToConvert, CultureInfo.InvariantCulture);\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert);\n      }\n      catch (OverflowException)\n      {\n         Console.WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, \n                           stringToConvert);\n      }\n      // The example displays the following output to the console:\n      //       Converted &#39; 214 &#39; to 214.\n      //       Unable to parse &#39; + 214&#39;.\n      //       Converted &#39; +214 &#39; to 214.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.Parse#4\">      Dim stringToConvert As String\n      Dim number As Short\n      \n      stringToConvert = &quot; 214 &quot;\n      Try\n         number = Int16.Parse(stringToConvert, CultureInfo.InvariantCulture)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert)\n      Catch e As OverflowException\n         Console.WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, _\n                           stringToConvert)\n      End Try\n      \n      stringToConvert = &quot; + 214&quot;                                 \n      Try\n         number = Int16.Parse(stringToConvert, CultureInfo.InvariantCulture)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert)\n      Catch e As OverflowException\n         Console.WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, _\n                           stringToConvert)\n      End Try\n      \n      stringToConvert = &quot; +214 &quot; \n      Try\n         number = Int16.Parse(stringToConvert, CultureInfo.InvariantCulture)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, stringToConvert)\n      Catch e As OverflowException\n         Console.WriteLine(&quot;&#39;{0&#39;} is out of range of the Int16 data type.&quot;, _\n                           stringToConvert)\n      End Try\n      &#39; The example displays the following output to the console:\n      &#39;       Converted &#39; 214 &#39; to 214.\n      &#39;       Unable to parse &#39; + 214&#39;.\n      &#39;       Converted &#39; +214 &#39; to 214.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,NumberStyles,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static short Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing a number to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>A 16-bit signed integer equivalent to the number specified in <code>s</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>style</code> is not a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>style</code> is not a combination of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in a format compliant with <code>style</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int16#System_Int16_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.int16#System_Int16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> -or-  </p>\n<p> <code>s</code> includes non-zero fractional digits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>style</code> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <code>s</code> parameter for the parse operation to succeed. It must be a combination of bit flags from the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration. Depending on the value of <code>style</code>, the <code>s</code> parameter may include the following elements:  </p>\n<p> [ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]  </p>\n<p> Or, if <code>style</code> includes <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>:  </p>\n<p> [ws]hexdigits[ws]  </p>\n<p> Elements in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space. White space can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, or at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>$</em></td>\n<td>A culture-specific currency symbol. Its position in the string is defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a> and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyNegativePattern_\" data-linktype=\"relative-path\">CurrencyNegativePattern</a> property of the current culture. The current culture&#39;s currency symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign. The sign can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, and it can appear at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. Parentheses can be used in <code>s</code> to indicate a negative value if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits from 0 through 9.</td>\n</tr>\n<tr>\n<td><em>,</em></td>\n<td>A culture-specific thousands separator symbol. The current culture&#39;s thousands separator symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>.</em></td>\n<td>A culture-specific decimal point symbol. The current culture&#39;s decimal point symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>fractional_digits</em></td>\n<td>A sequence of the 0 digit. Fractional digits can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. If any digit other than 0 appears in <em>fractional_digits</em>, the method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a>.</td>\n</tr>\n<tr>\n<td><em>e</em></td>\n<td>The &#39;e&#39; or &#39;E&#39; character, which indicates that <code>s</code> can be represented in exponential notation. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag. However, the <code>s</code> parameter must represent a number in the range of the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> data type and cannot have a non-zero fractional component.</td>\n</tr>\n<tr>\n<td><em>hexdigits</em></td>\n<td>A sequence of hexadecimal digits from 0 through f, or 0 through F.</td>\n</tr>\n</tbody>\n</table>\n<p> A string with <em>digits</em> only (which corresponds to the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style) always parses successfully. Most of the remaining <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members affect the elements that may be present in <code>s</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Non-composite NumberStyles values</th>\n<th>Elements permitted in s in addition to digits</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>Decimal digits only.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>.</em> and <em>fractional_digits</em> elements. However, <em>fractional_digits</em> must consist of only one or more 0 digits or an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> is thrown.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <code>s</code> parameter can also use exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign can appear before <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign can appear after <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>sign</em> element in the form of parentheses enclosing the numeric value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>,</em> element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>$</em> element.</td>\n</tr>\n</tbody>\n</table>\n<p> If the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag is used, <code>s</code> must be the string representation of a hexadecimal value without a prefix. For example, &quot;9AF3&quot; parses successfully, but &quot;0x9AF3&quot; does not.. The only other flags that can be present in <code>style</code> are <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>. (The <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration has a composite number style, <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, that includes both white space flags.)  </p>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method obtains a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object. The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object provides culture-specific information about the format of <code>s</code>. If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for the current culture is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses a variety of <code>style</code> and <code>provider</code> parameters to parse the string representations of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Int16.Parse#3\">      String^ value;\n      Int16 number;\n      NumberStyles style;\n      \n      // Parse string using &quot;.&quot; as the thousands separator \n      // and &quot; &quot; as the decimal separator.\n      value = &quot;19 694,00&quot;;\n      style = NumberStyles::AllowDecimalPoint | NumberStyles::AllowThousands;\n      CultureInfo^ provider = gcnew CultureInfo(&quot;fr-FR&quot;);\n      \n      number = Int16::Parse(value, style, provider);\n      Console::WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      // Displays:\n      //    &#39;19 694,00&#39; converted to 19694.\n\n      try\n      {\n         number = Int16::Parse(value, style, CultureInfo::InvariantCulture);\n         Console::WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      }\n      catch (FormatException ^e)\n      {\n         Console::WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, value);\n      }\n      // Displays:\n      //    Unable to parse &#39;19 694,00&#39;.\n      \n      // Parse string using &quot;$&quot; as the currency symbol for en_GB and\n      // en-US cultures.\n      value = &quot;$6,032.00&quot;;\n      style = NumberStyles::Number | NumberStyles::AllowCurrencySymbol;\n      provider = gcnew CultureInfo(&quot;en-GB&quot;);\n      \n      try\n      {\n         number = Int16::Parse(value, style, CultureInfo::InvariantCulture);\n         Console::WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      }\n      catch (FormatException ^e)\n      {\n         Console::WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, value);\n      }\n      // Displays:\n      //    Unable to parse &#39;$6,032.00&#39;.\n                              \n      provider = gcnew CultureInfo(&quot;en-US&quot;);\n      number = Int16::Parse(value, style, provider);\n      Console::WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      // Displays:\n      //    &#39;$6,032.00&#39; converted to 6032.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Int16.Parse#3\">      string value;\n      short number;\n      NumberStyles style;\n      CultureInfo provider;\n      \n      // Parse string using &quot;.&quot; as the thousands separator \n      // and &quot; &quot; as the decimal separator.\n      value = &quot;19 694,00&quot;;\n      style = NumberStyles.AllowDecimalPoint | NumberStyles.AllowThousands;\n      provider = new CultureInfo(&quot;fr-FR&quot;);\n      \n      number = Int16.Parse(value, style, provider);\n      Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      // Displays:\n      //    &#39;19 694,00&#39; converted to 19694.\n\n      try\n      {\n         number = Int16.Parse(value, style, CultureInfo.InvariantCulture);\n         Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, value);\n      }\n      // Displays:\n      //    Unable to parse &#39;19 694,00&#39;.\n      \n      // Parse string using &quot;$&quot; as the currency symbol for en_GB and\n      // en-US cultures.\n      value = &quot;$6,032.00&quot;;\n      style = NumberStyles.Number | NumberStyles.AllowCurrencySymbol;\n      provider = new CultureInfo(&quot;en-GB&quot;);\n      \n      try\n      {\n         number = Int16.Parse(value, style, CultureInfo.InvariantCulture);\n         Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, value);\n      }\n      // Displays:\n      //    Unable to parse &#39;$6,032.00&#39;.\n                              \n      provider = new CultureInfo(&quot;en-US&quot;);\n      number = Int16.Parse(value, style, provider);\n      Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number);\n      // Displays:\n      //    &#39;$6,032.00&#39; converted to 6032.      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.Parse#3\">      Dim value As String\n      Dim number As Short\n      Dim style As NumberStyles\n      Dim provider As CultureInfo\n      \n      &#39; Parse string using &quot;.&quot; as the thousands separator \n      &#39; and &quot; &quot; as the decimal separator.\n      value = &quot;19 694,00&quot;\n      style = NumberStyles.AllowDecimalPoint Or NumberStyles.AllowThousands\n      provider = New CultureInfo(&quot;fr-FR&quot;)\n      \n      number = Int16.Parse(value, style, provider)\n      Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number)\n      &#39; Displays:\n      &#39;    &#39;19 694,00&#39; converted to 19694.\n\n      Try\n         number = Int16.Parse(value, style, CultureInfo.InvariantCulture)\n         Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, value)\n      End Try\n      &#39; Displays:\n      &#39;    Unable to parse &#39;19 694,00&#39;.\n      \n      &#39; Parse string using &quot;$&quot; as the currency symbol for en_GB and\n      &#39; en-US cultures.\n      value = &quot;$6,032.00&quot;\n      style = NumberStyles.Number Or NumberStyles.AllowCurrencySymbol\n      provider = New CultureInfo(&quot;en-GB&quot;)\n      \n      Try\n         number = Int16.Parse(value, style, CultureInfo.InvariantCulture)\n         Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number)\n      Catch e As FormatException\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, value)\n      End Try\n      &#39; Displays:\n      &#39;    Unable to parse &#39;$6,032.00&#39;.\n                              \n      provider = New CultureInfo(&quot;en-US&quot;)\n      number = Int16.Parse(value, style, provider)\n      Console.WriteLine(&quot;&#39;{0}&#39; converted to {1}.&quot;, value, number)\n      &#39; Displays:\n      &#39;    &#39;$6,032.00&#39; converted to 6032.      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_ToString\">\r\n    \r\n            <a id=\"System_Int16_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value in the default (&quot;G&quot;, or general) format by using the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <a class=\"xref\" href=\"system.int16#System_Int16_ToString_\" data-linktype=\"relative-path\">ToString</a> method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  </p>\n<ul>\n<li><p>For more information about numeric format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n</li>\n<li><p>For more information about formatting, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ToString method to display an array of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Int16.ToString#1\">      short[] numbers = {0, 14624, 13982, short.MaxValue, \n                         short.MinValue, -16667};\n      foreach (short number in numbers)\n      {\n         Console.WriteLine(number.ToString());\n      }            \n      // The example displays the following output to the console:\n      //       0\n      //       14624\n      //       13982\n      //       32767\n      //       -32768\n      //       -16667                             \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.ToString#1\">      Dim numbers() As Short = {0, 14624, 13982, Short.MaxValue, _\n                               Short.MinValue, -16667}\n      For Each number As Short In numbers\n         Console.WriteLine(number.ToString())\n      Next        \n      &#39; The example displays the following output to the console:\n      &#39;       0\n      &#39;       14624\n      &#39;       13982\n      &#39;       32767\n      &#39;       -32768\n      &#39;       -16667                             \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_ToString_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> that supplies culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance as specified by <code>provider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value in the default (&quot;G&quot;, or general) format by using the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <a class=\"xref\" href=\"system.int16#System_Int16_ToString_\" data-linktype=\"relative-path\">ToString</a> method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString\" data-linktype=\"relative-path\">ToString()</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  </p>\n<ul>\n<li><p>For more information about numeric format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n</li>\n<li><p>For more information about formatting, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<p>The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object. Typically, <code>provider</code> is a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object or a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object. The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object provides culture-specific information about the format of the string returned by this method. If <code>provider</code> is <code>null</code>, this instance is formatted with the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for the current culture.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example iterates an array of <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values and displays each of them to the console by calling the ToString method with different format providers. Because of the simple formatting defined by the default &quot;G&quot; format specifier, the formatted strings produced for each <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value are identical regardless of the value of the <code>provider</code> parameter.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Int16.ToString#2\">      short[] numbers = {-23092, 0, 14894, Int16.MaxValue};\n      CultureInfo[] providers = {new CultureInfo(&quot;en-us&quot;), \n                                 new CultureInfo(&quot;fr-fr&quot;), \n                                 new CultureInfo(&quot;de-de&quot;), \n                                 new CultureInfo(&quot;es-es&quot;)};\n      foreach (Int16 int16Value in numbers)\n      {\n         foreach (CultureInfo provider in providers)\n         {\n            Console.Write(&quot;{0, 6} ({1})     &quot;, \n                          int16Value.ToString(provider), \n                          provider.Name);\n         }\n         Console.WriteLine();\n      }\n      // The example displays the following output to the console:\n      //       -23092 (en-US)     -23092 (fr-FR)     -23092 (de-DE)     -23092 (es-ES)\n      //            0 (en-US)          0 (fr-FR)          0 (de-DE)          0 (es-ES)\n      //        14894 (en-US)      14894 (fr-FR)      14894 (de-DE)      14894 (es-ES)\n      //        32767 (en-US)      32767 (fr-FR)      32767 (de-DE)      32767 (es-ES)      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.ToString#2\">      Dim numbers() As Short = {-23092, 0, 14894, Int16.MaxValue}\n      Dim providers() As CultureInfo = {New CultureInfo(&quot;en-us&quot;), _\n                                        New CultureInfo(&quot;fr-fr&quot;), _\n                                        New CultureInfo(&quot;de-de&quot;), _\n                                        New CultureInfo(&quot;es-es&quot;)}\n      For Each int16Value As Short In Numbers\n         For Each provider As CultureInfo In providers\n            Console.Write(&quot;{0, 6} ({1})     &quot;, _\n                          int16Value.ToString(provider), _\n                          provider.Name)\n         Next                     \n         Console.WriteLine()\n      Next \n      &#39; The example displays the following output to the console:\n      &#39;       -23092 (en-US)     -23092 (fr-FR)     -23092 (de-DE)     -23092 (es-ES)\n      &#39;            0 (en-US)          0 (fr-FR)          0 (de-DE)          0 (es-ES)\n      &#39;        14894 (en-US)      14894 (fr-FR)      14894 (de-DE)      14894 (es-ES)\n      &#39;        32767 (en-US)      32767 (fr-FR)      32767 (de-DE)      32767 (es-ES)      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_ToString_System_String_\">\r\n    \r\n            <a id=\"System_Int16_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A numeric format string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance as specified by <code>format</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value in a specified format by using a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that represents the conventions of the current culture. If you want to use the default (&quot;G&quot;, or general) format or specify a different culture, use the other overloads of the ToString method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString\" data-linktype=\"relative-path\">ToString()</a></td>\n</tr>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The <code>format</code> parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than &quot;R&quot; (or &quot;r&quot;) are supported, as are all custom numeric format characters. If <code>format</code> is <code>null</code> or an empty string, the return value of this instance is formatted with the general numeric format specifier (&quot;G&quot;).  </p>\n<p> The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  </p>\n<ul>\n<li><p>For more information about numeric format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n</li>\n<li><p>For more information about formatting, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<p>The return value of this instance is formatted with the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> for the current culture.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example initializes two <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values and displays them to the console using each of the supported standard format strings and several custom format strings. The example is run with en-US as the current culture.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Int16.ToString#3\">      Int16[] values = {-23805, 32194};\n      string[] formats = {&quot;C4&quot;, &quot;D6&quot;, &quot;e1&quot;, &quot;E2&quot;, &quot;F1&quot;, &quot;G&quot;, &quot;N1&quot;, \n                          &quot;P0&quot;, &quot;X4&quot;, &quot;000000.0000&quot;, &quot;##000.0&quot;};\n      foreach (string format in formats)\n      {\n         Console.WriteLine(&quot;&#39;{0,2}&#39; format specifier: {1,17}   {2,17}&quot;,  \n                           format, \n                           values[0].ToString(format), \n                           values[1].ToString(format));\n      }                                                               \n      // The example displays the following output to the console:\n      //    &#39;C4&#39; format specifier:    ($23,805.0000)        $32,194.0000\n      //    &#39;D6&#39; format specifier:           -023805              032194\n      //    &#39;e1&#39; format specifier:         -2.4e+004            3.2e+004\n      //    &#39;E2&#39; format specifier:        -2.38E+004           3.22E+004\n      //    &#39;F1&#39; format specifier:          -23805.0             32194.0\n      //    &#39; G&#39; format specifier:            -23805               32194\n      //    &#39;N1&#39; format specifier:         -23,805.0            32,194.0\n      //    &#39;P0&#39; format specifier:      -2,380,500 %         3,219,400 %\n      //    &#39;X4&#39; format specifier:              A303                7DC2\n      //    &#39;000000.0000&#39; format specifier:      -023805.0000         032194.0000\n      //    &#39;##000.0&#39; format specifier:          -23805.0             32194.0      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.ToString#3\">      Dim values() As Int16 = {-23805, 32194}\n      Dim formats() As String = {&quot;C4&quot;, &quot;D6&quot;, &quot;e1&quot;, &quot;E2&quot;, &quot;F1&quot;, &quot;G&quot;, &quot;N1&quot;, _\n                                 &quot;P0&quot;, &quot;X4&quot;, &quot;000000.0000&quot;, &quot;##000.0&quot;}\n      For Each format As String In formats\n         Console.WriteLine(&quot;&#39;{0,2}&#39; format specifier: {1,17}   {2,17}&quot;, _ \n                           format, _\n                           values(0).ToString(format), _\n                           values(1).ToString(format))\n      Next                                                               \n      &#39; The example displays the following output to the console:\n      &#39;    &#39;C4&#39; format specifier:    ($23,805.0000)        $32,194.0000\n      &#39;    &#39;D6&#39; format specifier:           -023805              032194\n      &#39;    &#39;e1&#39; format specifier:         -2.4e+004            3.2e+004\n      &#39;    &#39;E2&#39; format specifier:        -2.38E+004           3.22E+004\n      &#39;    &#39;F1&#39; format specifier:          -23805.0             32194.0\n      &#39;    &#39; G&#39; format specifier:            -23805               32194\n      &#39;    &#39;N1&#39; format specifier:         -23,805.0            32,194.0\n      &#39;    &#39;P0&#39; format specifier:      -2,380,500 %         3,219,400 %\n      &#39;    &#39;X4&#39; format specifier:              A303                7DC2\n      &#39;    &#39;000000.0000&#39; format specifier:      -023805.0000         032194.0000\n      &#39;    &#39;##000.0&#39; format specifier:          -23805.0             32194.0      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_ToString_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A numeric format string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToString method formats an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value in a specified format by using the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <a class=\"xref\" href=\"system.int16#System_Int16_ToString_\" data-linktype=\"relative-path\">ToString</a> method, as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>To use format</th>\n<th>For culture</th>\n<th>Use the overload</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString\" data-linktype=\"relative-path\">ToString()</a></td>\n</tr>\n<tr>\n<td>Default (&quot;G&quot;) format</td>\n<td>A specific culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a></td>\n</tr>\n<tr>\n<td>A specific format</td>\n<td>Default (current) culture</td>\n<td><a class=\"xref\" href=\"system.int16#System_Int16_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a></td>\n</tr>\n</tbody>\n</table>\n<p> The <code>format</code> parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than &quot;R&quot; (or &quot;r&quot;) are supported, as are all custom numeric format characters. If <code>format</code> is <code>null</code> or an empty string (&quot;&quot;), the string returned by this method is formatted with the general numeric format specifier (&quot;G&quot;).  </p>\n<p> The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  </p>\n<ul>\n<li><p>For more information about numeric format specifiers, see <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Numeric Format Strings</a> and <a href=\"../Topic/Custom%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Numeric Format Strings</a>.  </p>\n</li>\n<li><p>For more information about formatting, see <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a>.  </p>\n<p>The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> can be any of the following:  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting rules are to be used.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that contains specific numeric formatting information for this value.  </p>\n</li>\n<li><p>A custom object that implements <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>.  </p>\n<p>If <code>provider</code> is <code>null</code>, or a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object cannot be obtained from <code>provider</code>, the return value is formatted with the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> for the current culture.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays an <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value using each of the supported standard format strings in four different cultures.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Int16.ToString#4\">      Int16 value = 14603;\n      string[] formats = {&quot;C&quot;, &quot;D6&quot;, &quot;e1&quot;, &quot;E2&quot;, &quot;F1&quot;, &quot;G&quot;, &quot;N1&quot;, \n                          &quot;P0&quot;, &quot;X4&quot;, &quot;000000.0000&quot;, &quot;##000.0&quot;};\n      CultureInfo[] providers = {new CultureInfo(&quot;en-us&quot;), \n                                 new CultureInfo(&quot;fr-fr&quot;), \n                                 new CultureInfo(&quot;de-de&quot;), \n                                 new CultureInfo(&quot;es-es&quot;)};\n      // Display header.\n      Console.WriteLine(&quot;{0,24}{1,14}{2,14}{3,14}&quot;, providers[0], providers[1], \n                        providers[2], providers[3]);\n      Console.WriteLine();\n      // Display a value using each format string.\n      foreach (string format in formats)\n      {\n         // Display the value for each provider on the same line.\n         Console.Write(&quot;{0,-12}&quot;, format);\n         foreach (CultureInfo provider in providers)\n         {\n            Console.Write(&quot;{0,12}  &quot;, \n                          value.ToString(format, provider)); \n         }\n         Console.WriteLine();\n      }\n      // The example displays the following output to the console:\n      //                       en-US         fr-FR         de-DE         es-ES\n      //    \n      //    C             $14,603.00   14&#160;603,00 â‚¬   14.603,00 â‚¬   14.603,00 â‚¬  \n      //    D6                014603        014603        014603        014603  \n      //    e1              1.5e+004      1,5e+004      1,5e+004      1,5e+004  \n      //    E2             1.46E+004     1,46E+004     1,46E+004     1,46E+004  \n      //    F1               14603.0       14603,0       14603,0       14603,0  \n      //    G                  14603         14603         14603         14603  \n      //    N1              14,603.0      14&#160;603,0      14.603,0      14.603,0  \n      //    P0           1,460,300 %   1&#160;460&#160;300 %    1.460.300%   1.460.300 %  \n      //    X4                  390B          390B          390B          390B  \n      //    000000.0000  014603.0000   014603,0000   014603,0000   014603,0000  \n      //    ##000.0          14603.0       14603,0       14603,0       14603,0  \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Int16.ToString#4\">      Dim value As Int16 = 14603\n      Dim formats() As String = {&quot;C&quot;, &quot;D6&quot;, &quot;e1&quot;, &quot;E2&quot;, &quot;F1&quot;, &quot;G&quot;, &quot;N1&quot;, _\n                                 &quot;P0&quot;, &quot;X4&quot;, &quot;000000.0000&quot;, &quot;##000.0&quot;}\n      Dim providers() As CultureInfo = {New CultureInfo(&quot;en-us&quot;), _\n                                        New CultureInfo(&quot;fr-fr&quot;), _\n                                        New CultureInfo(&quot;de-de&quot;), _\n                                        New CultureInfo(&quot;es-es&quot;)}\n      &#39; Display header.\n      Console.WriteLine(&quot;{0,24}{1,14}{2,14}{3,14}&quot;, providers(0), providers(1), _\n                        providers(2), providers(3))\n      Console.WriteLine()                        \n      &#39; Display a value using each format string.\n      For Each format As String In formats\n         &#39; Display the value for each provider on the same line.\n         Console.Write(&quot;{0,-12}&quot;, format)\n         For Each provider As CultureInfo In providers\n            Console.Write(&quot;{0,12}  &quot;, _\n                          value.ToString(format, provider)) \n         Next\n         Console.WriteLine()\n      Next\n      &#39; The example displays the following output to the console:\n      &#39;                       en-US         fr-FR         de-DE         es-ES\n      &#39;    \n      &#39;    C             $14,603.00   14&#160;603,00 â‚¬   14.603,00 â‚¬   14.603,00 â‚¬  \n      &#39;    D6                014603        014603        014603        014603  \n      &#39;    e1              1.5e+004      1,5e+004      1,5e+004      1,5e+004  \n      &#39;    E2             1.46E+004     1,46E+004     1,46E+004     1,46E+004  \n      &#39;    F1               14603.0       14603,0       14603,0       14603,0  \n      &#39;    G                  14603         14603         14603         14603  \n      &#39;    N1              14,603.0      14&#160;603,0      14.603,0      14.603,0  \n      &#39;    P0           1,460,300 %   1&#160;460&#160;300 %    1.460.300%   1.460.300 %  \n      &#39;    X4                  390B          390B          390B          390B  \n      &#39;    000000.0000  014603.0000   014603,0000   014603,0000   014603,0000  \n      &#39;    ##000.0          14603.0       14603,0       14603,0       14603,0  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_TryParse_System_String_System_Int16__\">\r\n    \r\n            <a id=\"System_Int16_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,Int16)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string s, out short result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing a number to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is <code>null</code> or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, is not of the correct format, or represents a number less than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> or greater than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>s</code> was converted successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryParse method differs from the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_\" data-linktype=\"relative-path\">System.Int16.Parse(String)</a> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value. It eliminates the need to use exception handling to test for a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> in the event that <code>s</code> is invalid and cannot be successfully parsed.  </p>\n<p> The <code>s</code> parameter should be the string representation of a number in the form:  </p>\n<p> [ws][sign]digits[ws]  </p>\n<p> Items in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits ranging from 0 to 9.</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>s</code> parameter is interpreted using the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> style. In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements together with the culture-specific formatting information that can be present in <code>s</code>, use the <a class=\"xref\" href=\"system.int16#System_Int16_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_Int16__\" data-linktype=\"relative-path\">System.Int16.TryParse(String,NumberStyles,IFormatProvider,Int16)</a> method.  </p>\n<p> The <code>s</code> parameter is parsed using the formatting information in a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object that is initialized for the current system culture. For more information, see <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrentInfo_\" data-linktype=\"relative-path\">CurrentInfo</a>.  </p>\n<p> This overload of the <a class=\"xref\" href=\"system.int16#System_Int16_TryParse_\" data-linktype=\"relative-path\">TryParse</a> method interprets all digits in the <code>s</code> parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <a class=\"xref\" href=\"system.int16#System_Int16_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_Int16__\" data-linktype=\"relative-path\">System.Int16.TryParse(String,NumberStyles,IFormatProvider,Int16)</a> overload.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the TryParsemethod with a number of different string values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Int16.TryParse#1\">Module StringParsing\n   Public Sub Main()\n      TryToParse(Nothing)\n      TryToParse(&quot;16051&quot;)\n      TryToParse(&quot;9432.0&quot;)\n      TryToParse(&quot;16,667&quot;)\n      TryToParse(&quot;   -322   &quot;)\n      TryToParse(&quot;+4302&quot;)\n      TryToParse(&quot;(100)&quot;)\n      TryToParse(&quot;01FA&quot;)\n      \n   End Sub\n   \n   Private Sub TryToParse(value As String)\n      Dim number As Int16\n      Dim result As Boolean = Int16.TryParse(value, number)\n      If result Then\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number)\n      Else\n         If value Is Nothing Then value = &quot;&quot; \n         Console.WriteLine(&quot;Attempted conversion of &#39;{0}&#39; failed.&quot;, value)\n      End If     \n   End Sub\nEnd Module\n&#39; The example displays the following output to the console:\n&#39;       Attempted conversion of &#39;&#39; failed.\n&#39;       Converted &#39;16051&#39; to 16051.\n&#39;       Attempted conversion of &#39;9432.0&#39; failed.\n&#39;       Attempted conversion of &#39;16,667&#39; failed.\n&#39;       Converted &#39;   -322   &#39; to -322.\n&#39;       Converted &#39;+4302&#39; to 4302.\n&#39;       Attempted conversion of &#39;(100)&#39; failed.\n&#39;       Attempted conversion of &#39;01FA&#39; failed.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Int16.TryParse#1\">using System;\n\npublic class StringParsing\n{\n   public static void Main()\n   {\n      TryToParse(null);\n      TryToParse(&quot;16051&quot;);\n      TryToParse(&quot;9432.0&quot;);\n      TryToParse(&quot;16,667&quot;);\n      TryToParse(&quot;   -322   &quot;);\n      TryToParse(&quot;+4302&quot;);\n      TryToParse(&quot;(100);&quot;);\n      TryToParse(&quot;01FA&quot;);\n   }\n\n   private static void TryToParse(string value)\n   {\n      short number;\n      bool result = Int16.TryParse(value, out number);\n      if (result)\n      {\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, value, number);         \n      }\n      else\n      {\n         if (value == null) value = &quot;&quot;; \n         Console.WriteLine(&quot;Attempted conversion of &#39;{0}&#39; failed.&quot;, value);\n      }\n   }\n}\n// The example displays the following output to the console:\n//       Attempted conversion of &#39;&#39; failed.\n//       Converted &#39;16051&#39; to 16051.\n//       Attempted conversion of &#39;9432.0&#39; failed.\n//       Attempted conversion of &#39;16,667&#39; failed.\n//       Converted &#39;   -322   &#39; to -322.\n//       Converted &#39;+4302&#39; to 4302.\n//       Attempted conversion of &#39;(100)&#39; failed.\n//       Attempted conversion of &#39;01FA&#39; failed.\n</code></pre><p> Some of the strings that the TryParse method is unable to convert in this example are:  </p>\n<ul>\n<li><p>&quot;9432.0&quot;. The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.  </p>\n</li>\n<li><p>&quot;16,667&quot;. The conversion fails because the string cannot contain group separators; it must contain integral digits only.  </p>\n</li>\n<li><p>&quot;(100)&quot;. The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture&#39;s <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> and <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NumberNegativePattern_\" data-linktype=\"relative-path\">NumberNegativePattern</a> properties.  </p>\n</li>\n<li><p>&quot;01FA&quot;. The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_TryParse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_System_Int16__\">\r\n    \r\n            <a id=\"System_Int16_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,NumberStyles,IFormatProvider,Int16)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string containing a number to convert. The string is interpreted using the style specified by <code>style</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, is not in a format compliant with <code>style</code>, or represents a number less than <a class=\"xref\" href=\"system.int16#System_Int16_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.int16#System_Int16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>s</code> was converted successfully; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>style</code> is not a <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>style</code> is not a combination of <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryParse method differs from the <a class=\"xref\" href=\"system.int16#System_Int16_Parse_System_String_System_Globalization_NumberStyles_System_IFormatProvider_\" data-linktype=\"relative-path\">System.Int16.Parse(String,NumberStyles,IFormatProvider)</a> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value. It eliminates the need to use exception handling to test for a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> in the event that <code>s</code> is invalid and cannot be successfully parsed.  </p>\n<p> The <code>style</code> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <code>s</code> parameter for the parse operation to succeed. It must be a combination of bit flags from the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration. Depending on the value of style, the <code>s</code> parameter may include the following elements:  </p>\n<p> [ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]  </p>\n<p> Or, if the <code>style</code> parameter includes <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>:  </p>\n<p> [ws]hexdigits[ws]  </p>\n<p> Items in square brackets ([ and ]) are optional. The following table describes each element.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>ws</em></td>\n<td>Optional white space. White space can appear at the beginning of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag, or at the end of <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>$</em></td>\n<td>A culture-specific currency symbol. Its position in the string is defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_CurrencyPositivePattern_\" data-linktype=\"relative-path\">CurrencyPositivePattern</a> property of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method of the <code>provider</code> parameter. The currency symbol can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>sign</em></td>\n<td>An optional sign.</td>\n</tr>\n<tr>\n<td><em>digits</em></td>\n<td>A sequence of digits from 0 through 9.</td>\n</tr>\n<tr>\n<td><em>,</em></td>\n<td>A culture-specific thousands separator. The thousands separator of the culture specified by <code>provider</code> can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>.</em></td>\n<td>A culture-specific decimal point symbol. The decimal point symbol of the culture specified by <code>provider</code> can appear in <code>s</code> if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>fractional_digits</em></td>\n<td>One or more occurrences of the digit 0. Fractional digits can appear in <code>s</code> only if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>e</em></td>\n<td>The &#39;e&#39; or &#39;E&#39; character, which indicates that the value is represented in exponential notation. The <code>s</code> parameter can represent a number in exponential notation if <code>style</code> includes the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag.</td>\n</tr>\n<tr>\n<td><em>hexdigits</em></td>\n<td>A sequence of hexadecimal digits from 0 through f, or 0 through F.</td>\n</tr>\n</tbody>\n</table>\n<p> A string with decimal digits only (which corresponds to the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag) always parses successfully. Most of the remaining <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> members affect the elements that may be present in <code>s</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Non-composite NumberStyles values</th>\n<th>Elements permitted in s in addition to digits</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>Decimal digits only.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>.</em> and <em>fractional_digits</em> elements. However, <em>fractional_digits</em> must consist of only one or more 0 digits or the method returns <code>false</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <code>s</code> parameter can also use exponential notation. If <code>s</code> represents a number in exponential notation, it must represent an integer within the range of the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> data type without a non-zero fractional component.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the beginning of <em>s</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the end of <em>s</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign can appear before <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>A sign can appear after <em>digits</em>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>sign</em> element in the form of parentheses enclosing the numeric value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>,</em> element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>$</em> element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>All elements. The <em>s</em> parameter cannot represent a hexadecimal number or a number in exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em> element at the beginning or end of <code>s</code>, <em>sign</em> at the beginning of <code>s</code>, and the <em>.</em> symbol. The <code>s</code> parameter can also use exponential notation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>The <em>ws</em>, <em>sign</em>, thousands separator (<em>,</em>), and decimal point (<em>.</em>) elements.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a></td>\n<td>All styles, except <code>s</code> cannot represent a hexadecimal number.</td>\n</tr>\n</tbody>\n</table>\n<p> If the <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> flag is used, <code>s</code> must be a hexadecimal value without a prefix. For example, &quot;9AF3&quot; parses successfully, but &quot;0x9AF3&quot; does not. The only other flags that can be present in <code>style</code> are <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a> and <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>. (The <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">NumberStyles</a> enumeration has a composite style, <a class=\"xref\" href=\"system.globalization.numberstyles\" data-linktype=\"relative-path\">System.Globalization.NumberStyles</a>, that includes both white space flags.)  </p>\n<p> The <code>provider</code> parameter is an <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation, such as a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object or a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object, whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object. The <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object provides culture-specific information about the format of <code>s</code>. If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object for the current culture is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the TryParse method with a number of different string values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Int16.TryParse#2\">Imports System.Globalization\n\nModule StringParsing\n   Public Sub Main()\n      Dim numericString As String\n      Dim styles As NumberStyles\n      \n      numericString = &quot;10677&quot;\n      styles = NumberStyles.Integer\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;-30677&quot;\n      styles = NumberStyles.None\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;10345.00&quot;\n      styles = NumberStyles.Integer Or NumberStyles.AllowDecimalPoint\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;10345.72&quot;\n      styles = NumberStyles.Integer Or NumberStyles.AllowDecimalPoint\n      CallTryParse(numericString, styles)\n\n      numericString = &quot;22,593&quot; \n      styles = NumberStyles.Integer Or NumberStyles.AllowThousands\n      CallTryParse(numericString, styles)\n      \n      numericString = &quot;12E-01&quot;\n      styles = NumberStyles.Integer Or NumberStyles.AllowExponent\n      CallTryParse(numericString, styles) \n          \n      numericString = &quot;12E03&quot;\n      CallTryParse(numericString, styles) \n      \n      numericString = &quot;80c1&quot;\n      CallTryParse(numericString, NumberStyles.HexNumber)\n      \n      numericString = &quot;0x80C1&quot;\n      CallTryParse(numericString, NumberStyles.HexNumber)\n   End Sub\n   \n   Private Sub CallTryParse(stringToConvert As String, styles AS NumberStyles)\n      Dim number As Short\n      Dim result As Boolean = Int16.TryParse(stringToConvert, styles, _\n                                             CultureInfo.InvariantCulture, number)\n      If result Then\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number)\n      Else\n         Console.WriteLine(&quot;Attempted conversion of &#39;{0}&#39; failed.&quot;, _\n                           Convert.ToString(stringToConvert))\n      End If                                                                           \n   End Sub\nEnd Module\n&#39; The example displays the following output to the console:\n&#39;       Converted &#39;10677&#39; to 10677.\n&#39;       Attempted conversion of &#39;-30677&#39; failed.\n&#39;       Converted &#39;10345.00&#39; to 10345.\n&#39;       Attempted conversion of &#39;10345.72&#39; failed.\n&#39;       Converted &#39;22,593&#39; to 22593.\n&#39;       Attempted conversion of &#39;12E-01&#39; failed.\n&#39;       Converted &#39;12E03&#39; to 12000.\n&#39;       Converted &#39;80c1&#39; to -32575.\n&#39;       Attempted conversion of &#39;0x80C1&#39; failed.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Int16.TryParse#2\">using System;\nusing System.Globalization;\n\npublic class StringParsing\n{\n   public static void Main()\n   {\n      string numericString;\n      NumberStyles styles;\n      \n      numericString = &quot;10677&quot;;\n      styles = NumberStyles.Integer;\n      CallTryParse(numericString, styles);\n\n      numericString = &quot;-30677&quot;;\n      styles = NumberStyles.None;\n      CallTryParse(numericString, styles);\n      \n      numericString = &quot;10345.00&quot;;\n      styles = NumberStyles.Integer | NumberStyles.AllowDecimalPoint;\n      CallTryParse(numericString, styles);\n      \n      numericString = &quot;10345.72&quot;;\n      styles = NumberStyles.Integer | NumberStyles.AllowDecimalPoint;\n      CallTryParse(numericString, styles);\n\n      numericString = &quot;22,593&quot;; \n      styles = NumberStyles.Integer | NumberStyles.AllowThousands;\n      CallTryParse(numericString, styles);\n      \n      numericString = &quot;12E-01&quot;;\n      styles = NumberStyles.Integer | NumberStyles.AllowExponent;\n      CallTryParse(numericString, styles); \n          \n      numericString = &quot;12E03&quot;;\n      CallTryParse(numericString, styles); \n      \n      numericString = &quot;80c1&quot;;\n      CallTryParse(numericString, NumberStyles.HexNumber);\n      \n      numericString = &quot;0x80C1&quot;;\n      CallTryParse(numericString, NumberStyles.HexNumber);      \n   }\n\n   private static void CallTryParse(string stringToConvert, NumberStyles styles)\n   {\n      short number;\n      bool result = Int16.TryParse(stringToConvert, styles, \n                                   CultureInfo.InvariantCulture, out number);\n      if (result)\n         Console.WriteLine(&quot;Converted &#39;{0}&#39; to {1}.&quot;, stringToConvert, number);\n      else\n         Console.WriteLine(&quot;Attempted conversion of &#39;{0}&#39; failed.&quot;, \n                           Convert.ToString(stringToConvert));\n   }\n}\n// The example displays the following output to the console:\n//       Converted &#39;10677&#39; to 10677.\n//       Attempted conversion of &#39;-30677&#39; failed.\n//       Converted &#39;10345.00&#39; to 10345.\n//       Attempted conversion of &#39;10345.72&#39; failed.\n//       Converted &#39;22,593&#39; to 22593.\n//       Attempted conversion of &#39;12E-01&#39; failed.\n//       Converted &#39;12E03&#39; to 12000.\n//       Converted &#39;80c1&#39; to -32575.\n//       Attempted conversion of &#39;0x80C1&#39; failed.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToBoolean_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToBoolean_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToBoolean(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToBoolean*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IConvertible.ToBoolean (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of the current instance is not zero; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToBoolean_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToBoolean(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToByte_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToByte(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToByte*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">byte IConvertible.ToByte (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToByte_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToByte(Int16)</a> method</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToChar_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToChar(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToChar*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">char IConvertible.ToChar (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToChar_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToChar(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToDateTime_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToDateTime(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">DateTime IConvertible.ToDateTime (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>This conversion is not supported. No value is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>In all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToDecimal_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToDecimal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToDecimal(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDecimal*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">decimal IConvertible.ToDecimal (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToDecimal_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToDecimal(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToDouble_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToDouble_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToDouble(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToDouble*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">double IConvertible.ToDouble (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToDouble_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToDouble(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToInt16_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToInt16(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt16*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">short IConvertible.ToInt16 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, unchanged.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToInt32_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToInt32(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt32*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IConvertible.ToInt32 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToInt32_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToInt32(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToInt64_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToInt64(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToInt64*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">long IConvertible.ToInt64 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToInt64_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToInt64(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToSByte_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToSByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToSByte(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSByte*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">sbyte IConvertible.ToSByte (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to an <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToSByte_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToSByte(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToSingle_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToSingle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToSingle(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToSingle*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">float IConvertible.ToSingle (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToSingle_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToSingle(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToType_System_Type_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToType(Type,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToType*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IConvertible.ToType (Type type, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type to which to convert this <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation that supplies information about the format of the returned value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to <code>type</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <code>static</code> (<code>Shared</code> in Visual Basic) <a class=\"xref\" href=\"system.convert#System_Convert_ChangeType_\" data-linktype=\"relative-path\">ChangeType</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToUInt16_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToUInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToUInt16(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt16*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">ushort IConvertible.ToUInt16 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, unchanged.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToUInt16_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToUInt16(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToUInt32_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToUInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToUInt32(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt32*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">uint IConvertible.ToUInt32 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToUInt32_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToUInt32(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Int16_System_IConvertible_ToUInt64_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Int16_System_IConvertible_ToUInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IConvertible.ToUInt64(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.IConvertible.ToUInt64*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">ulong IConvertible.ToUInt64 (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This parameter is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance, converted to a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> instance is cast to an <a class=\"xref\" href=\"system.iconvertible\" data-linktype=\"relative-path\">IConvertible</a> interface. The recommended alternative is to call the <a class=\"xref\" href=\"system.convert#System_Convert_ToUInt64_System_Int16_\" data-linktype=\"relative-path\">System.Convert.ToUInt64(Int16)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Int16.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Int16.yml\">\r\n<meta name=\"APIName\" content=\"System.Int16\">\r\n<meta name=\"APIName\" content=\"System.Int16.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.Int16.Equals\">\r\n<meta name=\"APIName\" content=\"System.Int16.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Int16.GetTypeCode\">\r\n<meta name=\"APIName\" content=\"System.Int16.MaxValue\">\r\n<meta name=\"APIName\" content=\"System.Int16.MinValue\">\r\n<meta name=\"APIName\" content=\"System.Int16.Parse\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToBoolean\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToByte\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToChar\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToDateTime\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToDecimal\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToDouble\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToInt16\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToInt32\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToInt64\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToSByte\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToSingle\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToType\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToUInt16\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToUInt32\">\r\n<meta name=\"APIName\" content=\"System.Int16.IConvertible.ToUInt64\">\r\n<meta name=\"APIName\" content=\"System.Int16.ToString\">\r\n<meta name=\"APIName\" content=\"System.Int16.TryParse\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"101ff519-72c8-54b5-008b-df1c589eb8ed\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a 16-bit signed integer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Int16\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Int16.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Int16.yml","open_to_public_contributors":true,"api_name":["System.Int16","System.Int16.CompareTo","System.Int16.Equals","System.Int16.GetHashCode","System.Int16.GetTypeCode","System.Int16.MaxValue","System.Int16.MinValue","System.Int16.Parse","System.Int16.IConvertible.ToBoolean","System.Int16.IConvertible.ToByte","System.Int16.IConvertible.ToChar","System.Int16.IConvertible.ToDateTime","System.Int16.IConvertible.ToDecimal","System.Int16.IConvertible.ToDouble","System.Int16.IConvertible.ToInt16","System.Int16.IConvertible.ToInt32","System.Int16.IConvertible.ToInt64","System.Int16.IConvertible.ToSByte","System.Int16.IConvertible.ToSingle","System.Int16.IConvertible.ToType","System.Int16.IConvertible.ToUInt16","System.Int16.IConvertible.ToUInt32","System.Int16.IConvertible.ToUInt64","System.Int16.ToString","System.Int16.TryParse"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Int16","System::Int16","System.Int16.CompareTo","System::Int16::CompareTo","System.Int16.Equals","System::Int16::Equals","System.Int16.GetHashCode","System::Int16::GetHashCode","System.Int16.GetTypeCode","System::Int16::GetTypeCode","System.Int16.MaxValue","System::Int16::MaxValue","System.Int16.MinValue","System::Int16::MinValue","System.Int16.Parse","System::Int16::Parse","System.Int16.System#IConvertible#ToBoolean","System::Int16::System#IConvertible#ToBoolean","System.Int16.System#IConvertible#ToByte","System::Int16::System#IConvertible#ToByte","System.Int16.System#IConvertible#ToChar","System::Int16::System#IConvertible#ToChar","System.Int16.System#IConvertible#ToDateTime","System::Int16::System#IConvertible#ToDateTime","System.Int16.System#IConvertible#ToDecimal","System::Int16::System#IConvertible#ToDecimal","System.Int16.System#IConvertible#ToDouble","System::Int16::System#IConvertible#ToDouble","System.Int16.System#IConvertible#ToInt16","System::Int16::System#IConvertible#ToInt16","System.Int16.System#IConvertible#ToInt32","System::Int16::System#IConvertible#ToInt32","System.Int16.System#IConvertible#ToInt64","System::Int16::System#IConvertible#ToInt64","System.Int16.System#IConvertible#ToSByte","System::Int16::System#IConvertible#ToSByte","System.Int16.System#IConvertible#ToSingle","System::Int16::System#IConvertible#ToSingle","System.Int16.System#IConvertible#ToType","System::Int16::System#IConvertible#ToType","System.Int16.System#IConvertible#ToUInt16","System::Int16::System#IConvertible#ToUInt16","System.Int16.System#IConvertible#ToUInt32","System::Int16::System#IConvertible#ToUInt32","System.Int16.System#IConvertible#ToUInt64","System::Int16::System#IConvertible#ToUInt64","System.Int16.ToString","System::Int16::ToString","System.Int16.TryParse","System::Int16::TryParse"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"101ff519-72c8-54b5-008b-df1c589eb8ed","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/Int16.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Int16 struct | Microsoft Docs","_op_ogTitle":"Int16 struct","description":"Represents a 16-bit signed integer.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Int16","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.int16","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.int16","fileRelativePath":"System.Int16.html"},"themesRelativePathToOutputRoot":"_themes/"}