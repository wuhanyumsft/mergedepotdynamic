{"content":"    \r\n    <h1 id=\"System_Windows_Forms_PaintEventArgs\">\r\n      <span class=\"lang-csharp\">PaintEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class PaintEventArgs : EventArgs, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PaintEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event occurs when a control is redrawn. A PaintEventArgs specifies the <a class=\"xref\" href=\"system.windows.forms.painteventargs#System_Windows_Forms_PaintEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> to use to paint the control and the <a class=\"xref\" href=\"system.windows.forms.painteventargs#System_Windows_Forms_PaintEventArgs_ClipRectangle_\" data-linktype=\"relative-path\">ClipRectangle</a> in which to paint.  </p>\n<p> For information about the event model, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_PaintEventArgs__ctor_System_Drawing_Graphics_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">PaintEventArgs(Graphics,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> class with the specified graphics and clipping rectangle.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_PaintEventArgs_ClipRectangle\" data-linktype=\"self-bookmark\">ClipRectangle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the rectangle in which to paint.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_PaintEventArgs_Graphics\" data-linktype=\"self-bookmark\">Graphics</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the graphics used to paint.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_PaintEventArgs_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_PaintEventArgs_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_PaintEventArgs_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_PaintEventArgs__ctor_System_Drawing_Graphics_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_PaintEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintEventArgs(Graphics,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> class with the specified graphics and clipping rectangle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PaintEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipRect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the rectangle in which to paint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> identified by the <code>graphics</code> parameter is disposed when the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> is disposed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code examples draws lines and text on a <a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"Control.Paint#1\">        // This example creates a PictureBox control on the form and draws to it.\n        // This example assumes that the Form_Load event handler method is\n        // connected to the Load event of the form.\n\n        private PictureBox pictureBox1 = new PictureBox();\n        private void Form1_Load(object sender, System.EventArgs e)\n        {\n            // Dock the PictureBox to the form and set its background to white.\n            pictureBox1.Dock = DockStyle.Fill;\n            pictureBox1.BackColor = Color.White;\n            // Connect the Paint event of the PictureBox to the event handler method.\n            pictureBox1.Paint += new System.Windows.Forms.PaintEventHandler(this.pictureBox1_Paint);\n\n            // Add the PictureBox control to the Form.\n            this.Controls.Add(pictureBox1);\n        }\n\n        private void pictureBox1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)\n        {\n            // Create a local version of the graphics object for the PictureBox.\n            Graphics g = e.Graphics;\n\n            // Draw a string on the PictureBox.\n            g.DrawString(&quot;This is a diagonal line drawn on the control&quot;,\n                new Font(&quot;Arial&quot;,10), System.Drawing.Brushes.Blue, new Point(30,30));\n            // Draw a line in the PictureBox.\n            g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, pictureBox1.Top,\n                pictureBox1.Right, pictureBox1.Bottom);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Control.Paint#1\">   // This example creates a PictureBox control on the form and draws to it.\n   // This example assumes that the Form_Load event handler method is\n   // connected to the Load event of the form.\nprivate:\n   PictureBox^ pictureBox1;\n   void Form1_Load( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      pictureBox1 = gcnew PictureBox;\n\n      // Dock the PictureBox to the form and set its background to white.\n      pictureBox1-&gt;Dock = DockStyle::Fill;\n      pictureBox1-&gt;BackColor = Color::White;\n\n      // Connect the Paint event of the PictureBox to the event handler method.\n      pictureBox1-&gt;Paint += gcnew System::Windows::Forms::PaintEventHandler( this, &amp;Form1::pictureBox1_Paint );\n\n      // Add the PictureBox control to the Form.\n      this-&gt;Controls-&gt;Add( pictureBox1 );\n   }\n\n   void pictureBox1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n   {\n      // Create a local version of the graphics object for the PictureBox.\n      Graphics^ g = e-&gt;Graphics;\n\n      // Draw a string on the PictureBox.\n      g-&gt;DrawString( &quot;This is a diagonal line drawn on the control&quot;,\n         gcnew System::Drawing::Font( &quot;Arial&quot;,10 ), System::Drawing::Brushes::Blue, Point(30,30) );\n\n      // Draw a line in the PictureBox.\n      g-&gt;DrawLine( System::Drawing::Pens::Red, pictureBox1-&gt;Left, pictureBox1-&gt;Top,\n         pictureBox1-&gt;Right, pictureBox1-&gt;Bottom );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control.Paint#1\">    &#39; This example creates a PictureBox control on the form and draws to it. \n    &#39; This example assumes that the Form_Load event handler method is connected \n    &#39; to the Load event of the form.\n    Private pictureBox1 As New PictureBox()\n\n    Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load\n        &#39; Dock the PictureBox to the form and set its background to white.\n        pictureBox1.Dock = DockStyle.Fill\n        pictureBox1.BackColor = Color.White\n        &#39; Connect the Paint event of the PictureBox to the event handler method.\n        AddHandler pictureBox1.Paint, AddressOf Me.pictureBox1_Paint\n\n        &#39; Add the PictureBox control to the Form.\n        Me.Controls.Add(pictureBox1)\n    End Sub &#39;Form1_Load\n\n\n    Private Sub pictureBox1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs)\n        &#39; Create a local version of the graphics object for the PictureBox.\n        Dim g As Graphics = e.Graphics\n\n        &#39; Draw a string on the PictureBox.\n        g.DrawString(&quot;This is a diagonal line drawn on the control&quot;, _\n            New Font(&quot;Arial&quot;, 10), Brushes.Red, New PointF(30.0F, 30.0F))\n        &#39; Draw a line in the PictureBox.\n        g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, _ \n            pictureBox1.Top, pictureBox1.Right, pictureBox1.Bottom)\n    End Sub &#39;pictureBox1_Paint\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_PaintEventArgs_ClipRectangle\">\r\n    \r\n            <a id=\"System_Windows_Forms_PaintEventArgs_ClipRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClipRectangle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the rectangle in which to paint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle ClipRectangle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> in which to paint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Paint</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, such as a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> or <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>. Then name the instance <code>Control1</code> and ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Paint</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#42\">private void Control1_Paint(Object sender, PaintEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipRectangle&quot;, e.ClipRectangle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Paint Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#42\">Private Sub Control1_Paint(sender as Object, e as PaintEventArgs) _ \n     Handles Control1.Paint\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipRectangle&quot;, e.ClipRectangle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Paint Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_PaintEventArgs_Graphics\">\r\n    \r\n            <a id=\"System_Windows_Forms_PaintEventArgs_Graphics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Graphics</div>        \r\n          </div>\r\n    \r\n            <p>Gets the graphics used to paint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object used to paint. The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object provides methods for drawing objects on the display device.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates handling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and using the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> class to draw rectangles on the form. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> events are handled to determine the size of the rectangle. The example also demonstrates the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a> method to invalidate the area of the rectangle, causing it to be redrawn.  </p>\n<pre><code class=\"lang-cpp\" name=\"Demontrates Form Paint Event#1\">private:\n   Rectangle RcDraw;\n   void Form1_MouseDown( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n   {\n      // Determine the initial rectangle coordinates...\n      RcDraw.X = e-&gt;X;\n      RcDraw.Y = e-&gt;Y;\n   }\n\n   void Form1_MouseUp( Object^ /*sender*/, System::Windows::Forms::MouseEventArgs^ e )\n   {\n      // Determine the width and height of the rectangle...\n      if ( e-&gt;X &lt; RcDraw.X )\n      {\n         RcDraw.Width = RcDraw.X - e-&gt;X;\n         RcDraw.X = e-&gt;X;\n      }\n      else\n      {\n         RcDraw.Width = e-&gt;X - RcDraw.X;\n      }\n\n      if ( e-&gt;Y &lt; RcDraw.Y )\n      {\n         RcDraw.Height = RcDraw.Y - e-&gt;Y;\n         RcDraw.Y = e-&gt;Y;\n      }\n      else\n      {\n         RcDraw.Height = e-&gt;Y - RcDraw.Y;\n      }\n\n      // Force a repaint of the region occupied by the rectangle...\n      this-&gt;Invalidate( RcDraw );\n   }\n\n   void Form1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n   {\n      // Draw the rectangle...\n      float PenWidth = 5;\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Blue,PenWidth ), RcDraw );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Demontrates Form Paint Event#1\">\n\t\tprivate Rectangle RcDraw;\n\t\tprivate float PenWidth = 5;\n\n\t\tprivate void Form1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)\n\t\t{\n\n\t\t\t// Determine the initial rectangle coordinates...\n\n\t\t\tRcDraw.X = e.X;\n\t\t\tRcDraw.Y = e.Y;\n\t\t\n\t\t}\n\n\t\tprivate void Form1_MouseUp(object sender, System.Windows.Forms.MouseEventArgs e)\n\t\t{\n\n\t\t\t// Determine the width and height of the rectangle...\n\n\t\t\tif(e.X &lt; RcDraw.X)\n\t\t\t{\n\t\t\t\tRcDraw.Width = RcDraw.X - e.X;\n\t\t\t\tRcDraw.X = e.X;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tRcDraw.Width = e.X - RcDraw.X;\n\t\t\t}\n\n\t\t\tif(e.Y &lt; RcDraw.Y)\n\t\t\t{\n\t\t\t\tRcDraw.Height = RcDraw.Y - e.Y;\n\t\t\t\tRcDraw.Y = e.Y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tRcDraw.Height = e.Y - RcDraw.Y;\n\t\t\t}\n\n\t\t\t// Force a repaint of the region occupied by the rectangle...\n\n\t\t\tthis.Invalidate(RcDraw);\n\t\t\n\t\t}\n\n\t\tprivate void Form1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)\n\t\t{\n\n\t\t\t// Draw the rectangle...\n\n\t\t\te.Graphics.DrawRectangle(new Pen(Color.Blue, PenWidth), RcDraw);\n\t\t\t\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Demontrates Form Paint Event#1\">    Dim RcDraw As Rectangle\n    Dim PenWidth As Integer = 5\n\n\n    Private Sub Form1_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles MyBase.MouseDown\n\n        &#39; Determine the initial rectangle coordinates...\n\n        RcDraw.X = e.X\n        RcDraw.Y = e.Y\n\n    End Sub\n\n    Private Sub Form1_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles MyBase.MouseUp\n\n        &#39; Determine the width and height of the rectangle...\n\n        If e.X &lt; RcDraw.X Then\n            RcDraw.Width = RcDraw.X - e.X\n            RcDraw.X = e.X\n        Else\n            RcDraw.Width = e.X - RcDraw.X\n        End If\n\n        If e.Y &lt; RcDraw.Y Then\n            RcDraw.Height = RcDraw.Y - e.Y\n            RcDraw.Y = e.Y\n        Else\n            RcDraw.Height = e.Y - RcDraw.Y\n        End If\n\n        &#39; Force a repaint of the region occupied by the rectangle...\n\n        Me.Invalidate(RcDraw)\n\n    End Sub\n\n    Private Sub Form1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles MyBase.Paint\n\n        &#39; Draw the rectangle...\n\n        e.Graphics.DrawRectangle(New Pen(Color.Blue, PenWidth), RcDraw)\n\n    End Sub\n\n</code></pre><pre><code class=\"lang-cs\" name=\"Control.Paint#1\">        // This example creates a PictureBox control on the form and draws to it.\n        // This example assumes that the Form_Load event handler method is\n        // connected to the Load event of the form.\n\n        private PictureBox pictureBox1 = new PictureBox();\n        private void Form1_Load(object sender, System.EventArgs e)\n        {\n            // Dock the PictureBox to the form and set its background to white.\n            pictureBox1.Dock = DockStyle.Fill;\n            pictureBox1.BackColor = Color.White;\n            // Connect the Paint event of the PictureBox to the event handler method.\n            pictureBox1.Paint += new System.Windows.Forms.PaintEventHandler(this.pictureBox1_Paint);\n\n            // Add the PictureBox control to the Form.\n            this.Controls.Add(pictureBox1);\n        }\n\n        private void pictureBox1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)\n        {\n            // Create a local version of the graphics object for the PictureBox.\n            Graphics g = e.Graphics;\n\n            // Draw a string on the PictureBox.\n            g.DrawString(&quot;This is a diagonal line drawn on the control&quot;,\n                new Font(&quot;Arial&quot;,10), System.Drawing.Brushes.Blue, new Point(30,30));\n            // Draw a line in the PictureBox.\n            g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, pictureBox1.Top,\n                pictureBox1.Right, pictureBox1.Bottom);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Control.Paint#1\">   // This example creates a PictureBox control on the form and draws to it.\n   // This example assumes that the Form_Load event handler method is\n   // connected to the Load event of the form.\nprivate:\n   PictureBox^ pictureBox1;\n   void Form1_Load( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      pictureBox1 = gcnew PictureBox;\n\n      // Dock the PictureBox to the form and set its background to white.\n      pictureBox1-&gt;Dock = DockStyle::Fill;\n      pictureBox1-&gt;BackColor = Color::White;\n\n      // Connect the Paint event of the PictureBox to the event handler method.\n      pictureBox1-&gt;Paint += gcnew System::Windows::Forms::PaintEventHandler( this, &amp;Form1::pictureBox1_Paint );\n\n      // Add the PictureBox control to the Form.\n      this-&gt;Controls-&gt;Add( pictureBox1 );\n   }\n\n   void pictureBox1_Paint( Object^ /*sender*/, System::Windows::Forms::PaintEventArgs^ e )\n   {\n      // Create a local version of the graphics object for the PictureBox.\n      Graphics^ g = e-&gt;Graphics;\n\n      // Draw a string on the PictureBox.\n      g-&gt;DrawString( &quot;This is a diagonal line drawn on the control&quot;,\n         gcnew System::Drawing::Font( &quot;Arial&quot;,10 ), System::Drawing::Brushes::Blue, Point(30,30) );\n\n      // Draw a line in the PictureBox.\n      g-&gt;DrawLine( System::Drawing::Pens::Red, pictureBox1-&gt;Left, pictureBox1-&gt;Top,\n         pictureBox1-&gt;Right, pictureBox1-&gt;Bottom );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Control.Paint#1\">    &#39; This example creates a PictureBox control on the form and draws to it. \n    &#39; This example assumes that the Form_Load event handler method is connected \n    &#39; to the Load event of the form.\n    Private pictureBox1 As New PictureBox()\n\n    Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load\n        &#39; Dock the PictureBox to the form and set its background to white.\n        pictureBox1.Dock = DockStyle.Fill\n        pictureBox1.BackColor = Color.White\n        &#39; Connect the Paint event of the PictureBox to the event handler method.\n        AddHandler pictureBox1.Paint, AddressOf Me.pictureBox1_Paint\n\n        &#39; Add the PictureBox control to the Form.\n        Me.Controls.Add(pictureBox1)\n    End Sub &#39;Form1_Load\n\n\n    Private Sub pictureBox1_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs)\n        &#39; Create a local version of the graphics object for the PictureBox.\n        Dim g As Graphics = e.Graphics\n\n        &#39; Draw a string on the PictureBox.\n        g.DrawString(&quot;This is a diagonal line drawn on the control&quot;, _\n            New Font(&quot;Arial&quot;, 10), Brushes.Red, New PointF(30.0F, 30.0F))\n        &#39; Draw a line in the PictureBox.\n        g.DrawLine(System.Drawing.Pens.Red, pictureBox1.Left, _ \n            pictureBox1.Top, pictureBox1.Right, pictureBox1.Bottom)\n    End Sub &#39;pictureBox1_Paint\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_PaintEventArgs_Dispose\">\r\n    \r\n            <a id=\"System_Windows_Forms_PaintEventArgs_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_PaintEventArgs_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_PaintEventArgs_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected Dispose method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_PaintEventArgs_Finalize\">\r\n    \r\n            <a id=\"System_Windows_Forms_PaintEventArgs_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~PaintEventArgs ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.PaintEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.PaintEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.ClipRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.PaintEventArgs.Graphics\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d297945a-59fd-267e-76db-a4ecef6b2357\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\PaintEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.PaintEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.PaintEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.PaintEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.PaintEventArgs","System.Windows.Forms.PaintEventArgs..ctor","System.Windows.Forms.PaintEventArgs.ClipRectangle","System.Windows.Forms.PaintEventArgs.Dispose","System.Windows.Forms.PaintEventArgs.Finalize","System.Windows.Forms.PaintEventArgs.Graphics"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.PaintEventArgs","System::Windows::Forms::PaintEventArgs","System.Windows.Forms.PaintEventArgs.#ctor","System::Windows::Forms::PaintEventArgs::#ctor","System.Windows.Forms.PaintEventArgs.ClipRectangle","System::Windows::Forms::PaintEventArgs::ClipRectangle","System.Windows.Forms.PaintEventArgs.Dispose","System::Windows::Forms::PaintEventArgs::Dispose","System.Windows.Forms.PaintEventArgs.Finalize","System::Windows::Forms::PaintEventArgs::Finalize","System.Windows.Forms.PaintEventArgs.Graphics","System::Windows::Forms::PaintEventArgs::Graphics"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d297945a-59fd-267e-76db-a4ecef6b2357","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\PaintEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/PaintEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PaintEventArgs class | Microsoft Docs","_op_ogTitle":"PaintEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.PaintEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.painteventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.painteventargs","fileRelativePath":"System.Windows.Forms.PaintEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}