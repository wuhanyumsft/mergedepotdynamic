{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SecurityTokenHandler</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The abstract base class for security token handlers.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">SecurityTokenHandler</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The SecurityTokenHandler class is the base class from which all security token handlers derive. A security token handler is responsible for:  </p>\n<ul>\n<li><p>Validating security tokens (<a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a>) of the type it is designed to process and packaging the claims contained in the token into a <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> object.  </p>\n</li>\n<li><p>Serializing and deserializing security tokens of the type it is designed to process.  </p>\n</li>\n<li><p>Serializing and deserializing key identifier clauses (<a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a>) that refer to tokens of the type it is designed to process to and from <code>&lt;wsse:SecurityTokenReference&gt;</code> elements.  </p>\n</li>\n<li><p>Creating security tokens from a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokendescriptor\" data-linktype=\"relative-path\">SecurityTokenDescriptor</a> object passed by implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n</li>\n<li><p>Creating key identifier clauses from a security token for implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n<p>Windows Identity Foundation (WIF) ships the following security token handlers out of the box:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.encryptedsecuritytokenhandler\" data-linktype=\"relative-path\">EncryptedSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.kerberossecuritytokenhandler\" data-linktype=\"relative-path\">KerberosSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.services.tokens.machinekeysessionsecuritytokenhandler\" data-linktype=\"relative-path\">MachineKeySessionSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.services.tokens.membershipusernamesecuritytokenhandler\" data-linktype=\"relative-path\">MembershipUserNameSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.rsasecuritytokenhandler\" data-linktype=\"relative-path\">RsaSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.saml2securitytokenhandler\" data-linktype=\"relative-path\">Saml2SecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.samlsecuritytokenhandler\" data-linktype=\"relative-path\">SamlSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.sessionsecuritytokenhandler\" data-linktype=\"relative-path\">SessionSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.usernamesecuritytokenhandler\" data-linktype=\"relative-path\">UserNameSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.windowsusernamesecuritytokenhandler\" data-linktype=\"relative-path\">WindowsUserNameSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.x509securitytokenhandler\" data-linktype=\"relative-path\">X509SecurityTokenHandler</a>  \n\n<p>Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed. In many cases it may be better to derive from one of these classes rather than directly from the SecurityTokenHandler class.  </p>\n<p>A security token handler can be added or removed from  a token handler collection by specifying the <a href=\"../Topic/%3Cadd%3E.md\" data-linktype=\"relative-path\">&amp;lt;add&amp;gt;</a>, <a href=\"../Topic/%3Cremove%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or <a href=\"../Topic/%3Cclear%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a> elements under the <a href=\"../Topic/%3CsecurityTokenHandlers%3E.md\" data-linktype=\"relative-path\">&amp;lt;securityTokenHandlers&amp;gt;</a> element in a configuration file. The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a> object that contains the configuration settings for the handler collection can be accessed through the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\" data-linktype=\"relative-path\">Configuration</a> property and the handler collection that the token handler is a member of can be accessed from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ContainingCollection_\" data-linktype=\"relative-path\">ContainingCollection</a> property. You can override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_LoadCustomConfiguration_\" data-linktype=\"relative-path\">LoadCustomConfiguration</a> method to process any custom configuration elements that your handler takes.  </p>\n<p>The SecurityTokenHandler class exposes several other properties and methods. Depending on the functionality that you choose to implement, you may override some or all of these members.  </p>\n<p>You must override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_TokenType_\" data-linktype=\"relative-path\">TokenType</a> property and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_GetTokenTypeIdentifiers_\" data-linktype=\"relative-path\">GetTokenTypeIdentifiers</a> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.  </p>\n<p>Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality. The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanValidateToken_\" data-linktype=\"relative-path\">CanValidateToken</a> property and  the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method: Validates a token and packages the claims contained in the token into a <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\" data-linktype=\"relative-path\">CanWriteToken</a> property and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_\" data-linktype=\"relative-path\">WriteToken</a> methods: Token serialization.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> methods and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> methods: Token deserialization.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\" data-linktype=\"relative-path\">CanReadKeyIdentifierClause</a> method and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_\" data-linktype=\"relative-path\">ReadKeyIdentifierClause</a> method: Deserializing key identifier clauses.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_\" data-linktype=\"relative-path\">CanWriteKeyIdentifierClause</a> method and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_\" data-linktype=\"relative-path\">WriteKeyIdentifierClause</a> method: Serializing key identifier clauses.  </p>\n<p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CreateToken_\" data-linktype=\"relative-path\">CreateToken</a> and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CreateSecurityTokenReference_\" data-linktype=\"relative-path\">CreateSecurityTokenReference</a> methods are called from the pipeline in implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n<p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_DetectReplayedToken_\" data-linktype=\"relative-path\">DetectReplayedToken</a> method is called by the WIF infrastructure to determine whether the specified token has already been received. By default this method returns <code>false</code>, which indicates that the token has not already been received. You can override the method and provide logic to detect replayed tokens.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SecurityTokenHandler()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Called from constructors in derived classes to initialize the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler\" data-linktype=\"relative-path\">SecurityTokenHandler</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected SecurityTokenHandler ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanValidateToken\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanValidateToken</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether the handler supports validation of security tokens.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanValidateToken { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the class is capable of validating security tokens; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To implement validation in a derived class, override this property to return <code>true</code> and override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method to implement the validation logic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanWriteToken</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether the handler can serialize security tokens.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanWriteToken { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the class is capable of serializing tokens; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To implement serialization in a derived class, override this property to return <code>true</code> and override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_\" data-linktype=\"relative-path\">WriteToken</a> methods to implement the serialization logic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_Configuration\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Configuration</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a> object that provides configuration for the current instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The configuration object for the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Configuration property is typically set by the configuration infrastructure from the <a href=\"../Topic/%3CsecurityTokenHandlerConfiguration%3E.md\" data-linktype=\"relative-path\">&amp;lt;securityTokenHandlerConfiguration&amp;gt;</a> element in the configuration file during application start up.  </p>\n<p> In derived classes, you use the Configuration property to access configuration settings; for example, the issuer name registry to use in the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method can be accessed from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration#System_IdentityModel_Tokens_SecurityTokenHandlerConfiguration_IssuerNameRegistry_\" data-linktype=\"relative-path\">IssuerNameRegistry</a> property of the configuration object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ContainingCollection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContainingCollection</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the token handler collection that contains the current instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlercollection\" data-linktype=\"relative-path\">SecurityTokenHandlerCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token handler collection that contains the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the token handler is added to a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlercollection\" data-linktype=\"relative-path\">SecurityTokenHandlerCollection</a> instance, this property is automatically set.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TokenType\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TokenType</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, gets the type of the security token that is processed by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract Type TokenType { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The type of the security token that is processed by this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You must override this property in derived classes and return the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the security token (<a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a>) that is processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanReadKeyIdentifierClause(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XML reader positioned at the start element. The reader should not be advanced by this method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*</span> method can read the element; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation returns <code>false</code> to indicate that the key identifier clause cannot be read.  </p>\n<p> A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause. This is typically accomplished through a call to the <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_IsStartElement_\" data-linktype=\"relative-path\">IsStartElement</a> method with the appropriate element and namespace strings specified. If you override CanReadKeyIdentifierClause, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_\" data-linktype=\"relative-path\">ReadKeyIdentifierClause</a> method to provide the logic to deserialize the key identifier clause.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanReadToken(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanReadToken (string tokenString);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tokenString</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token string to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityTokenHandler.ReadToken*</span> method can read the element; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation always returns <code>false</code>.  </p>\n<p> If you override this method, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method to provide the logic to deserialize the token.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanReadToken(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanReadToken (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XML reader positioned at a start element. The reader should not be advanced by this method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityTokenHandler.ReadToken*</span> method can read the element; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation always returns <code>false</code>.  </p>\n<p> A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token. This is typically accomplished through a call to the <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_IsStartElement_\" data-linktype=\"relative-path\">IsStartElement</a> method with the appropriate element and namespace strings specified. If you override <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\" data-linktype=\"relative-path\">CanReadKeyIdentifierClause</a>, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method or the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method to provide the logic to deserialize the key identifier clause.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>securityKeyIdentifierClause</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key identifier clause to be checked.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the key identifier clause can be serialized; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation always returns <code>false</code>.  </p>\n<p> If you override CanWriteKeyIdentifierClause, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_\" data-linktype=\"relative-path\">WriteKeyIdentifierClause</a> method to provide the logic to serialize the key identifier clause.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CreateSecurityTokenReference_System_IdentityModel_Tokens_SecurityToken_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateSecurityTokenReference(SecurityToken,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, creates the security token reference for tokens processed by that class. This method is typically called by a security token service (STS).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token for which the reference is to be created.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attached</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if an attached reference should be created; <code>false</code> if an unattached reference should be created.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A key identifier clause that references the specified token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Derived classes override this method to return a key identifier clause (<a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a>) that can be used to create a <code>&lt;wsse:SecurityTokenReference&gt;</code> element for the specified token.  </p>\n<p> Called from implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n<p> Typically, a <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CreateToken_System_IdentityModel_Tokens_SecurityTokenDescriptor_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateToken(SecurityTokenDescriptor)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, creates a security token using the specified token descriptor. This method is called by a security token service (STS).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tokenDescriptor</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytokendescriptor\" data-linktype=\"relative-path\">SecurityTokenDescriptor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The security token descriptor from which the token is to be created. Properties of the token descriptor are set before this method is called.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A security token that matches the properties of the token descriptor.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Called from implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_DetectReplayedToken_System_IdentityModel_Tokens_SecurityToken_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DetectReplayedToken(SecurityToken)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token to check for replay.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation does nothing.  </p>\n<p> Derived classes should throw a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenreplaydetectedexception\" data-linktype=\"relative-path\">SecurityTokenReplayDetectedException</a> if the token has already been used.  </p>\n<p> Windows Identity Foundation (WIF) provides the <a class=\"xref\" href=\"system.identitymodel.tokens.tokenreplaycache\" data-linktype=\"relative-path\">TokenReplayCache</a> class from which replay caches may be derived and the <a href=\"../Topic/%3CtokenReplayCache%3E.md\" data-linktype=\"relative-path\">&amp;lt;tokenReplayCache&amp;gt;</a> configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the DetectReplayedToken method is up to the designer of the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_GetTokenTypeIdentifiers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTokenTypeIdentifiers()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract string[] GetTokenTypeIdentifiers ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The set of URIs that identify the token type that this handler supports.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the token processed by the current instance is accessed through the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_TokenType_\" data-linktype=\"relative-path\">TokenType</a> property. The GetTokenTypeIdentifiers method returns the set of acceptable identifiers that can be used in messages to refer to the token type. For example, the URI value used in the <code>&lt;wst:TokenType&gt;</code> element under the <code>&lt;wst:RequestSecurityToken&gt;</code> element to request a specific kind of token (represented by the <a class=\"xref\" href=\"system.identitymodel.protocols.wstrust.wstrustmessage#System_IdentityModel_Protocols_WSTrust_WSTrustMessage_TokenType_\" data-linktype=\"relative-path\">TokenType</a> property in the object model).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_LoadCustomConfiguration_System_Xml_XmlNodeList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadCustomConfiguration(XmlNodeList)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, loads custom configuration from XML.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nodelist</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The configuration XML elements. Each node in the list is of type <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the <code>nodelist</code> will contain the top-level child elements of the token handler’s <a href=\"../Topic/%3Cadd%3E.md\" data-linktype=\"relative-path\">&amp;lt;add&amp;gt;</a> element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  </p>\n<p> The default implementation throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>. Override this method in your derived class to enable initialization of your security token handler from a configuration file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadKeyIdentifierClause(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key identifier clause that was deserialized from the XML.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to deserialize a key identifier clause from XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\" data-linktype=\"relative-path\">CanReadKeyIdentifierClause</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadToken(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tokenString</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be deserialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The security token that was deserialized from the specified string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<p> By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide functionality that can deserialize a security token from a string. If you override, this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadToken(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XML reader positioned at the start element of the token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The security token that was deserialized from the XML.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<p> By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to deserialize a security token from XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> method. Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_Xml_XmlReader_System_IdentityModel_Selectors_SecurityTokenResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadToken(XmlReader,SecurityTokenResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An XML reader positioned at the start element of the token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tokenResolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.selectors.securitytokenresolver\" data-linktype=\"relative-path\">SecurityTokenResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A token resolver that contains out-of-band and cached tokens.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The security token that was deserialized from the XML.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<p> The default implementation ignores the <code>tokenResolver</code> parameter and delegates the call to the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method.  </p>\n<p> Override this method to provide the logic to deserialize a security token from XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> method. Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationFailure_System_IdentityModel_Tokens_SecurityToken_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TraceTokenValidationFailure(SecurityToken,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Traces the failure event during the validation of security tokens when tracing is enabled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The security token that is being validated.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>errorMessage</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The message to write to the trace.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method should be called from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method when validation of the token fails.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationSuccess_System_IdentityModel_Tokens_SecurityToken_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TraceTokenValidationSuccess(SecurityToken)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Traces the successful validation of security tokens event when tracing is enabled.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token that was validated.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method should be called from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method after the token has been successfully validated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_System_IdentityModel_Tokens_SecurityToken_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ValidateToken(SecurityToken)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, validates the specified security token. The token must be of the type processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token to validate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The identities contained in the token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> The ValidateToken method is called by the infrastructure to validate and extract the claims from the deserialized security token. These claims are returned in the collection of <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> objects returned by the method. In the typical case, this collection will contain a single identity.  </p>\n<p> In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration#System_IdentityModel_Tokens_SecurityTokenHandlerConfiguration_AudienceRestriction_\" data-linktype=\"relative-path\">AudienceRestriction</a> property of the token handler configuration object specified on the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\" data-linktype=\"relative-path\">Configuration</a> property. These URIs are typically set in the configuration file under the <a href=\"../Topic/%3CaudienceUris%3E.md\" data-linktype=\"relative-path\">&amp;lt;audienceUris&amp;gt;</a> element. If the audience cannot be validated, an <a class=\"xref\" href=\"system.identitymodel.tokens.audienceurivalidationfailedexception\" data-linktype=\"relative-path\">AudienceUriValidationFailedException</a> exception should be thrown.  </p>\n<p> When processing the token, the issuer is typically validated by passing the issuer token to one of the <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry#System_IdentityModel_Tokens_IssuerNameRegistry_GetIssuerName_\" data-linktype=\"relative-path\">GetIssuerName</a> methods on the <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry\" data-linktype=\"relative-path\">IssuerNameRegistry</a> object that is configured for the handler through the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\" data-linktype=\"relative-path\">Configuration</a> property. The issuer name registry is typically configured through the <a href=\"../Topic/%3CissuerNameRegistry%3E.md\" data-linktype=\"relative-path\">&amp;lt;issuerNameRegistry&amp;gt;</a> element in the configuration file. The <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry#System_IdentityModel_Tokens_IssuerNameRegistry_GetIssuerName_\" data-linktype=\"relative-path\">GetIssuerName</a> returns the name of the issuer. This name should be used to set the <a class=\"xref\" href=\"system.security.claims.claim#System_Security_Claims_Claim_Issuer_\" data-linktype=\"relative-path\">Issuer</a> property in claims contained in the token. If the issuer name registry does not contain an entry for the issuer token, <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry#System_IdentityModel_Tokens_IssuerNameRegistry_GetIssuerName_\" data-linktype=\"relative-path\">GetIssuerName</a> returns <code>null</code>. In this case a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenexception\" data-linktype=\"relative-path\">SecurityTokenException</a> is typically thrown in derived classes, but this behavior is up to the designer of the class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_System_Xml_XmlWriter_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, serializes the specified key identifier clause to XML. The key identifier clause must be of the type supported by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML writer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>securityKeyIdentifierClause</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key identifier clause to serialize.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to serialize a key identifier clause to XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_\" data-linktype=\"relative-path\">CanWriteKeyIdentifierClause</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_System_IdentityModel_Tokens_SecurityToken_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteToken(SecurityToken)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, serializes the specified security token to a string. The token must be of the type processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token to serialize.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The serialized token.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to serialize a security token to XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\" data-linktype=\"relative-path\">CanWriteToken</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_System_Xml_XmlWriter_System_IdentityModel_Tokens_SecurityToken_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteToken(XmlWriter,SecurityToken)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, serializes the specified security token to XML. The token must be of the type processed by the derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML writer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>token</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The token to serialize.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to serialize a security token to XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\" data-linktype=\"relative-path\">CanWriteToken</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.TokenType\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken\">\r\n<meta name=\"APILocation\" content=\"System.IdentityModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"9d63dcfc-6772-8b07-77f9-30fab45c7ade\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The abstract base class for security token handlers.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IdentityModel.Tokens/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml","open_to_public_contributors":true,"api_name":["System.IdentityModel.Tokens.SecurityTokenHandler","System.IdentityModel.Tokens.SecurityTokenHandler..ctor","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken","System.IdentityModel.Tokens.SecurityTokenHandler.Configuration","System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection","System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference","System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken","System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken","System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers","System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration","System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.TokenType","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess","System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken"],"api_location":["System.IdentityModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IdentityModel.Tokens.SecurityTokenHandler","System::IdentityModel::Tokens::SecurityTokenHandler","System.IdentityModel.Tokens.SecurityTokenHandler.#ctor","System::IdentityModel::Tokens::SecurityTokenHandler::#ctor","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::CanReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken","System::IdentityModel::Tokens::SecurityTokenHandler::CanReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken","System::IdentityModel::Tokens::SecurityTokenHandler::CanValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::CanWriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken","System::IdentityModel::Tokens::SecurityTokenHandler::CanWriteToken","System.IdentityModel.Tokens.SecurityTokenHandler.Configuration","System::IdentityModel::Tokens::SecurityTokenHandler::Configuration","System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection","System::IdentityModel::Tokens::SecurityTokenHandler::ContainingCollection","System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference","System::IdentityModel::Tokens::SecurityTokenHandler::CreateSecurityTokenReference","System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken","System::IdentityModel::Tokens::SecurityTokenHandler::CreateToken","System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken","System::IdentityModel::Tokens::SecurityTokenHandler::DetectReplayedToken","System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers","System::IdentityModel::Tokens::SecurityTokenHandler::GetTokenTypeIdentifiers","System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration","System::IdentityModel::Tokens::SecurityTokenHandler::LoadCustomConfiguration","System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::ReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken","System::IdentityModel::Tokens::SecurityTokenHandler::ReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.TokenType","System::IdentityModel::Tokens::SecurityTokenHandler::TokenType","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure","System::IdentityModel::Tokens::SecurityTokenHandler::TraceTokenValidationFailure","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess","System::IdentityModel::Tokens::SecurityTokenHandler::TraceTokenValidationSuccess","System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken","System::IdentityModel::Tokens::SecurityTokenHandler::ValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::WriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken","System::IdentityModel::Tokens::SecurityTokenHandler::WriteToken"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"9d63dcfc-6772-8b07-77f9-30fab45c7ade","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IdentityModel.Tokens/SecurityTokenHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SecurityTokenHandler class | Microsoft Docs","_op_ogTitle":"SecurityTokenHandler class","description":"The abstract base class for security token handlers.\n","toc_asset_id":"_splitted/System.IdentityModel.Tokens/toc.json","toc_rel":"_splitted/System.IdentityModel.Tokens/toc.json","source_url":"","ms.assetid":"System.IdentityModel.Tokens.SecurityTokenHandler","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.identitymodel.tokens.securitytokenhandler","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.identitymodel.tokens.securitytokenhandler","fileRelativePath":"System.IdentityModel.Tokens.SecurityTokenHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}