{"content":"    \r\n    <h1 id=\"System_IdentityModel_Tokens_SecurityTokenHandler\">\r\n      <span class=\"lang-csharp\">SecurityTokenHandler</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The abstract base class for security token handlers.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SecurityTokenHandler</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SecurityTokenHandler class is the base class from which all security token handlers derive. A security token handler is responsible for:  </p>\n<ul>\n<li><p>Validating security tokens (<a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a>) of the type it is designed to process and packaging the claims contained in the token into a <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> object.  </p>\n</li>\n<li><p>Serializing and deserializing security tokens of the type it is designed to process.  </p>\n</li>\n<li><p>Serializing and deserializing key identifier clauses (<a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a>) that refer to tokens of the type it is designed to process to and from <code>&lt;wsse:SecurityTokenReference&gt;</code> elements.  </p>\n</li>\n<li><p>Creating security tokens from a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokendescriptor\" data-linktype=\"relative-path\">SecurityTokenDescriptor</a> object passed by implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n</li>\n<li><p>Creating key identifier clauses from a security token for implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n<p>Windows Identity Foundation (WIF) ships the following security token handlers out of the box:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.encryptedsecuritytokenhandler\" data-linktype=\"relative-path\">EncryptedSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.kerberossecuritytokenhandler\" data-linktype=\"relative-path\">KerberosSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.services.tokens.machinekeysessionsecuritytokenhandler\" data-linktype=\"relative-path\">MachineKeySessionSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.services.tokens.membershipusernamesecuritytokenhandler\" data-linktype=\"relative-path\">MembershipUserNameSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.rsasecuritytokenhandler\" data-linktype=\"relative-path\">RsaSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.saml2securitytokenhandler\" data-linktype=\"relative-path\">Saml2SecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.samlsecuritytokenhandler\" data-linktype=\"relative-path\">SamlSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.sessionsecuritytokenhandler\" data-linktype=\"relative-path\">SessionSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.usernamesecuritytokenhandler\" data-linktype=\"relative-path\">UserNameSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.windowsusernamesecuritytokenhandler\" data-linktype=\"relative-path\">WindowsUserNameSecurityTokenHandler</a>  \n</li>\n<li><a class=\"xref\" href=\"system.identitymodel.tokens.x509securitytokenhandler\" data-linktype=\"relative-path\">X509SecurityTokenHandler</a>  \n\n<p>Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed. In many cases it may be better to derive from one of these classes rather than directly from the SecurityTokenHandler class.  </p>\n<p>A security token handler can be added or removed from  a token handler collection by specifying the <a href=\"../Topic/%3Cadd%3E.md\" data-linktype=\"relative-path\">&amp;lt;add&amp;gt;</a>, <a href=\"../Topic/%3Cremove%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or <a href=\"../Topic/%3Cclear%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a> elements under the <a href=\"../Topic/%3CsecurityTokenHandlers%3E.md\" data-linktype=\"relative-path\">&amp;lt;securityTokenHandlers&amp;gt;</a> element in a configuration file. The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a> object that contains the configuration settings for the handler collection can be accessed through the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\" data-linktype=\"relative-path\">Configuration</a> property and the handler collection that the token handler is a member of can be accessed from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ContainingCollection_\" data-linktype=\"relative-path\">ContainingCollection</a> property. You can override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_LoadCustomConfiguration_\" data-linktype=\"relative-path\">LoadCustomConfiguration</a> method to process any custom configuration elements that your handler takes.  </p>\n<p>The SecurityTokenHandler class exposes several other properties and methods. Depending on the functionality that you choose to implement, you may override some or all of these members.  </p>\n<p>You must override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_TokenType_\" data-linktype=\"relative-path\">TokenType</a> property and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_GetTokenTypeIdentifiers_\" data-linktype=\"relative-path\">GetTokenTypeIdentifiers</a> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.  </p>\n<p>Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality. The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanValidateToken_\" data-linktype=\"relative-path\">CanValidateToken</a> property and  the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method: Validates a token and packages the claims contained in the token into a <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\" data-linktype=\"relative-path\">CanWriteToken</a> property and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_\" data-linktype=\"relative-path\">WriteToken</a> methods: Token serialization.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> methods and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> methods: Token deserialization.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\" data-linktype=\"relative-path\">CanReadKeyIdentifierClause</a> method and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_\" data-linktype=\"relative-path\">ReadKeyIdentifierClause</a> method: Deserializing key identifier clauses.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_\" data-linktype=\"relative-path\">CanWriteKeyIdentifierClause</a> method and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_\" data-linktype=\"relative-path\">WriteKeyIdentifierClause</a> method: Serializing key identifier clauses.  </p>\n<p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CreateToken_\" data-linktype=\"relative-path\">CreateToken</a> and the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CreateSecurityTokenReference_\" data-linktype=\"relative-path\">CreateSecurityTokenReference</a> methods are called from the pipeline in implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n<p>The <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_DetectReplayedToken_\" data-linktype=\"relative-path\">DetectReplayedToken</a> method is called by the WIF infrastructure to determine whether the specified token has already been received. By default this method returns <code>false</code>, which indicates that the token has not already been received. You can override the method and provide logic to detect replayed tokens.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler__ctor\" data-linktype=\"self-bookmark\">SecurityTokenHandler()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called from constructors in derived classes to initialize the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler\" data-linktype=\"relative-path\">SecurityTokenHandler</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CanValidateToken\" data-linktype=\"self-bookmark\">CanValidateToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the handler supports validation of security tokens.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken\" data-linktype=\"self-bookmark\">CanWriteToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the handler can serialize security tokens.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration\" data-linktype=\"self-bookmark\">Configuration</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a> object that provides configuration for the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_ContainingCollection\" data-linktype=\"self-bookmark\">ContainingCollection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the token handler collection that contains the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_TokenType\" data-linktype=\"self-bookmark\">TokenType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the type of the security token that is processed by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">CanReadKeyIdentifierClause(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_System_String_\" data-linktype=\"self-bookmark\">CanReadToken(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">CanReadToken(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\" data-linktype=\"self-bookmark\">CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CreateSecurityTokenReference_System_IdentityModel_Tokens_SecurityToken_System_Boolean_\" data-linktype=\"self-bookmark\">CreateSecurityTokenReference(SecurityToken,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, creates the security token reference for tokens processed by that class. This method is typically called by a security token service (STS).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_CreateToken_System_IdentityModel_Tokens_SecurityTokenDescriptor_\" data-linktype=\"self-bookmark\">CreateToken(SecurityTokenDescriptor)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, creates a security token using the specified token descriptor. This method is called by a security token service (STS).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_DetectReplayedToken_System_IdentityModel_Tokens_SecurityToken_\" data-linktype=\"self-bookmark\">DetectReplayedToken(SecurityToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_GetTokenTypeIdentifiers\" data-linktype=\"self-bookmark\">GetTokenTypeIdentifiers()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_LoadCustomConfiguration_System_Xml_XmlNodeList_\" data-linktype=\"self-bookmark\">LoadCustomConfiguration(XmlNodeList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, loads custom configuration from XML.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">ReadKeyIdentifierClause(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_String_\" data-linktype=\"self-bookmark\">ReadToken(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">ReadToken(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_Xml_XmlReader_System_IdentityModel_Selectors_SecurityTokenResolver_\" data-linktype=\"self-bookmark\">ReadToken(XmlReader,SecurityTokenResolver)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationFailure_System_IdentityModel_Tokens_SecurityToken_System_String_\" data-linktype=\"self-bookmark\">TraceTokenValidationFailure(SecurityToken,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Traces the failure event during the validation of security tokens when tracing is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationSuccess_System_IdentityModel_Tokens_SecurityToken_\" data-linktype=\"self-bookmark\">TraceTokenValidationSuccess(SecurityToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Traces the successful validation of security tokens event when tracing is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_System_IdentityModel_Tokens_SecurityToken_\" data-linktype=\"self-bookmark\">ValidateToken(SecurityToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, validates the specified security token. The token must be of the type processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_System_Xml_XmlWriter_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\" data-linktype=\"self-bookmark\">WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, serializes the specified key identifier clause to XML. The key identifier clause must be of the type supported by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_System_IdentityModel_Tokens_SecurityToken_\" data-linktype=\"self-bookmark\">WriteToken(SecurityToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, serializes the specified security token to a string. The token must be of the type processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_System_Xml_XmlWriter_System_IdentityModel_Tokens_SecurityToken_\" data-linktype=\"self-bookmark\">WriteToken(XmlWriter,SecurityToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, serializes the specified security token to XML. The token must be of the type processed by the derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler__ctor\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SecurityTokenHandler()</div>        \r\n          </div>\r\n    \r\n            <p>Called from constructors in derived classes to initialize the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler\" data-linktype=\"relative-path\">SecurityTokenHandler</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected SecurityTokenHandler ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanValidateToken\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanValidateToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanValidateToken</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the handler supports validation of security tokens.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanValidateToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the class is capable of validating security tokens; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To implement validation in a derived class, override this property to return <code>true</code> and override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method to implement the validation logic.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the CanValidateToken property to indicate that a custom handler can validate tokens. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#2\">/// &lt;summary&gt;\n/// Gets a value indicating whether this handler can validate tokens of type &lt;see cref=&quot;SimpleWebToken&quot;/&gt;.\n/// &lt;/summary&gt;     \n/// &lt;value&gt;True if this handler can validate the token of type &lt;see cref=&quot;SimpleWebToken&quot;/&gt;.&lt;/value&gt;\npublic override bool CanValidateToken\n{\n    get\n    {\n        return true;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWriteToken</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the handler can serialize security tokens.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanWriteToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the class is capable of serializing tokens; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To implement serialization in a derived class, override this property to return <code>true</code> and override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_\" data-linktype=\"relative-path\">WriteToken</a> methods to implement the serialization logic.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the CanWriteToken property to indicate that a custom handler can serialize tokens. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#3\">/// &lt;summary&gt;\n/// Gets a value indicating whether the SecurityTokenHandler can Serialize Tokens. Return true by default.\n/// &lt;/summary&gt;\n/// &lt;value&gt;True is the handler can serialize tokens of type &lt;see cref=&quot;SimpleWebToken&quot;/&gt;.&lt;/value&gt;\npublic override bool CanWriteToken\n{\n    get\n    {\n        return true;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_Configuration\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Configuration</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a> object that provides configuration for the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration\" data-linktype=\"relative-path\">SecurityTokenHandlerConfiguration</a></div>\r\n                  </div>\r\n                  <p>The configuration object for the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Configuration property is typically set by the configuration infrastructure from the <a href=\"../Topic/%3CsecurityTokenHandlerConfiguration%3E.md\" data-linktype=\"relative-path\">&amp;lt;securityTokenHandlerConfiguration&amp;gt;</a> element in the configuration file during application start up.  </p>\n<p> In derived classes, you use the Configuration property to access configuration settings; for example, the issuer name registry to use in the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method can be accessed from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration#System_IdentityModel_Tokens_SecurityTokenHandlerConfiguration_IssuerNameRegistry_\" data-linktype=\"relative-path\">IssuerNameRegistry</a> property of the configuration object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ContainingCollection\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ContainingCollection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContainingCollection</div>        \r\n          </div>\r\n    \r\n            <p>Gets the token handler collection that contains the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlercollection\" data-linktype=\"relative-path\">SecurityTokenHandlerCollection</a></div>\r\n                  </div>\r\n                  <p>The token handler collection that contains the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the token handler is added to a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlercollection\" data-linktype=\"relative-path\">SecurityTokenHandlerCollection</a> instance, this property is automatically set.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TokenType\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TokenType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TokenType</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the type of the security token that is processed by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract Type TokenType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type of the security token that is processed by this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must override this property in derived classes and return the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the security token (<a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a>) that is processed by the derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the TokenType property to return the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the security tokens that are processed by a custom handler. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#18\">/// &lt;summary&gt;\n/// Gets the System.Type of the SecurityToken is supported by this handler.\n/// &lt;/summary&gt;\n/// &lt;value&gt;The System.Type of the SecurityToken is supported by this handler.&lt;/value&gt;\npublic override Type TokenType\n{\n    get\n    {\n        return typeof( SimpleWebToken );\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanReadKeyIdentifierClause(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An XML reader positioned at the start element. The reader should not be advanced by this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause*</span> method can read the element; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns <code>false</code> to indicate that the key identifier clause cannot be read.  </p>\n<p> A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause. This is typically accomplished through a call to the <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_IsStartElement_\" data-linktype=\"relative-path\">IsStartElement</a> method with the appropriate element and namespace strings specified. If you override CanReadKeyIdentifierClause, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_\" data-linktype=\"relative-path\">ReadKeyIdentifierClause</a> method to provide the logic to deserialize the key identifier clause.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_System_String_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanReadToken(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanReadToken (string tokenString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tokenString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token string to read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityTokenHandler.ReadToken*</span> method can read the element; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation always returns <code>false</code>.  </p>\n<p> If you override this method, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method to provide the logic to deserialize the token.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanReadToken(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanReadToken (System.Xml.XmlReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An XML reader positioned at a start element. The reader should not be advanced by this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.IdentityModel.Tokens.SecurityTokenHandler.ReadToken*</span> method can read the element; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation always returns <code>false</code>.  </p>\n<p> A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token. This is typically accomplished through a call to the <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_IsStartElement_\" data-linktype=\"relative-path\">IsStartElement</a> method with the appropriate element and namespace strings specified. If you override <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\" data-linktype=\"relative-path\">CanReadKeyIdentifierClause</a>, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method or the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method to provide the logic to deserialize the key identifier clause.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the CanReadToken method to determine whether a token can be read by a handler. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#1\">/// &lt;summary&gt;\n/// Indicates whether the current XML element can be read as a token of the type handled by this instance.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;reader&quot;&gt;An XML reader positioned at a start element. The reader should not be advanced.&lt;/param&gt;\n/// &lt;returns&gt;True if the ReadToken method can the element.&lt;/returns&gt;\npublic override bool CanReadToken( XmlReader reader )\n{\n    bool canRead = false;\n\n    if ( reader != null )\n    {\n        if ( reader.IsStartElement( BinarySecurityToken)\n            &amp;&amp; ( reader.GetAttribute( ValueType ) == SimpleWebTokenConstants.ValueTypeUri ) )\n        {\n            canRead = true;\n        }\n    }\n\n    return canRead;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityKeyIdentifierClause</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key identifier clause to be checked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key identifier clause can be serialized; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation always returns <code>false</code>.  </p>\n<p> If you override CanWriteKeyIdentifierClause, you must also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_\" data-linktype=\"relative-path\">WriteKeyIdentifierClause</a> method to provide the logic to serialize the key identifier clause.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CreateSecurityTokenReference_System_IdentityModel_Tokens_SecurityToken_System_Boolean_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CreateSecurityTokenReference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateSecurityTokenReference(SecurityToken,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, creates the security token reference for tokens processed by that class. This method is typically called by a security token service (STS).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token for which the reference is to be created.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attached</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if an attached reference should be created; <code>false</code> if an unattached reference should be created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></div>\r\n                  </div>\r\n                  <p>A key identifier clause that references the specified token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Derived classes override this method to return a key identifier clause (<a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a>) that can be used to create a <code>&lt;wsse:SecurityTokenReference&gt;</code> element for the specified token.  </p>\n<p> Called from implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.  </p>\n<p> Typically, a <a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the CreateSecurityTokenReference method to create a key identifier clause from the specified token. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#5\">public override SecurityKeyIdentifierClause CreateSecurityTokenReference(SecurityToken token, bool attached)\n{\n    return token.CreateKeyIdentifierClause&lt;LocalIdKeyIdentifierClause&gt;();           \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CreateToken_System_IdentityModel_Tokens_SecurityTokenDescriptor_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_CreateToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateToken(SecurityTokenDescriptor)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, creates a security token using the specified token descriptor. This method is called by a security token service (STS).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tokenDescriptor</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytokendescriptor\" data-linktype=\"relative-path\">SecurityTokenDescriptor</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The security token descriptor from which the token is to be created. Properties of the token descriptor are set before this method is called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </div>\r\n                  <p>A security token that matches the properties of the token descriptor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Called from implementations of the <a class=\"xref\" href=\"system.identitymodel.securitytokenservice\" data-linktype=\"relative-path\">SecurityTokenService</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the CreateToken method to create and return a token from a token descriptor. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#4\">public override SecurityToken CreateToken(SecurityTokenDescriptor tokenDescriptor)\n{\n    if (tokenDescriptor == null)\n    {\n        throw new ArgumentNullException(&quot;tokenDescriptor&quot;);\n    }\n\n    NameValueCollection properties = new NameValueCollection();\n    properties.Add(SimpleWebTokenConstants.Id, Guid.NewGuid().ToString());\n    properties.Add(SimpleWebTokenConstants.Issuer, tokenDescriptor.TokenIssuerName);\n    properties.Add(SimpleWebTokenConstants.Audience, tokenDescriptor.AppliesToAddress);\n    properties.Add(SimpleWebTokenConstants.ExpiresOn, SecondsFromSwtBaseTime(tokenDescriptor.Lifetime.Expires));\n    properties.Add(SimpleWebTokenConstants.ValidFrom, SecondsFromSwtBaseTime(tokenDescriptor.Lifetime.Created));\n\n    foreach (Claim claim in tokenDescriptor.Subject.Claims)\n    {\n        properties.Add(claim.Type, claim.Value);\n    }\n\n    SimpleWebToken token = new SimpleWebToken(properties);\n    return token;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_DetectReplayedToken_System_IdentityModel_Tokens_SecurityToken_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_DetectReplayedToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DetectReplayedToken(SecurityToken)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to check for replay.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation does nothing.  </p>\n<p> Derived classes should throw a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenreplaydetectedexception\" data-linktype=\"relative-path\">SecurityTokenReplayDetectedException</a> if the token has already been used.  </p>\n<p> Windows Identity Foundation (WIF) provides the <a class=\"xref\" href=\"system.identitymodel.tokens.tokenreplaycache\" data-linktype=\"relative-path\">TokenReplayCache</a> class from which replay caches may be derived and the <a href=\"../Topic/%3CtokenReplayCache%3E.md\" data-linktype=\"relative-path\">&amp;lt;tokenReplayCache&amp;gt;</a> configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the DetectReplayedToken method is up to the designer of the derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_GetTokenTypeIdentifiers\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_GetTokenTypeIdentifiers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTokenTypeIdentifiers()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string[] GetTokenTypeIdentifiers ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>The set of URIs that identify the token type that this handler supports.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the token processed by the current instance is accessed through the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_TokenType_\" data-linktype=\"relative-path\">TokenType</a> property. The GetTokenTypeIdentifiers method returns the set of acceptable identifiers that can be used in messages to refer to the token type. For example, the URI value used in the <code>&lt;wst:TokenType&gt;</code> element under the <code>&lt;wst:RequestSecurityToken&gt;</code> element to request a specific kind of token (represented by the <a class=\"xref\" href=\"system.identitymodel.protocols.wstrust.wstrustmessage#System_IdentityModel_Protocols_WSTrust_WSTrustMessage_TokenType_\" data-linktype=\"relative-path\">TokenType</a> property in the object model).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the GetTokenTypeIdentifiers method to return the token type identifiers for a custom token. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#17\">public const string SimpleWebTokenTypeUri = &quot;http://schemas.xmlsoap.org/ws/2009/11/swt-token-profile-1.0&quot;;\n</code></pre><pre><code class=\"lang-cs\" name=\"WifRcCustomToken#6\">/// &lt;summary&gt;\n/// Returns the simple web token&#39;s token type that is supported by this handler.\n/// &lt;/summary&gt; \n/// &lt;returns&gt;A list of supported token type identifiers.&lt;/returns&gt;\npublic override string[] GetTokenTypeIdentifiers()\n{\n    return new string[] { SimpleWebTokenTypeUri };\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_LoadCustomConfiguration_System_Xml_XmlNodeList_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_LoadCustomConfiguration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadCustomConfiguration(XmlNodeList)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, loads custom configuration from XML.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nodelist</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The configuration XML elements. Each node in the list is of type <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the <code>nodelist</code> will contain the top-level child elements of the token handlerâ€™s <a href=\"../Topic/%3Cadd%3E.md\" data-linktype=\"relative-path\">&amp;lt;add&amp;gt;</a> element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  </p>\n<p> The default implementation throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a>. Override this method in your derived class to enable initialization of your security token handler from a configuration file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadKeyIdentifierClause_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadKeyIdentifierClause(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></div>\r\n                  </div>\r\n                  <p>The key identifier clause that was deserialized from the XML.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to deserialize a key identifier clause from XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadKeyIdentifierClause_\" data-linktype=\"relative-path\">CanReadKeyIdentifierClause</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_String_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadToken(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>tokenString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </div>\r\n                  <p>The security token that was deserialized from the specified string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<p> By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide functionality that can deserialize a security token from a string. If you override, this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadToken(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An XML reader positioned at the start element of the token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </div>\r\n                  <p>The security token that was deserialized from the XML.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<p> By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to deserialize a security token from XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> method. Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the ReadToken method to read a custom token from the specified XML reader. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#7\">/// &lt;summary&gt;\n/// Reads a serialized token and converts it into a &lt;see cref=&quot;SecurityToken&quot;/&gt;.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;reader&quot;&gt;An XML reader positioned at the token&#39;s start element.&lt;/param&gt;\n/// &lt;returns&gt;The parsed form of the token.&lt;/returns&gt;\npublic override SecurityToken ReadToken( XmlReader reader )\n{\n    if ( reader == null )\n    {\n        throw new ArgumentNullException( &quot;reader&quot; );\n    }\n\n    XmlDictionaryReader dictionaryReader = XmlDictionaryReader.CreateDictionaryReader(reader);\n\n    byte[] binaryData;\n    string encoding = dictionaryReader.GetAttribute( EncodingType );\n    if ( encoding == null || encoding == Base64EncodingType )\n    {\n        dictionaryReader.Read();\n        binaryData = dictionaryReader.ReadContentAsBase64();\n    }\n    else\n    {\n        throw new SecurityTokenException(\n            &quot;Cannot read SecurityToken as its encoding is&quot; + encoding + &quot;. Expected a BinarySecurityToken with base64 encoding.&quot;);\n    }\n    \n    string serializedToken = Encoding.UTF8.GetString(binaryData);\n\n    return ReadSecurityTokenFromString(serializedToken);\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WifRcCustomToken#8\">/// &lt;summary&gt;\n/// Parse the string token and generates a &lt;see cref=&quot;SecurityToken&quot;/&gt;.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;serializedToken&quot;&gt;The serialized form of the token received.&lt;/param&gt;\n/// &lt;returns&gt;The parsed form of the token.&lt;/returns&gt;\nprotected SecurityToken ReadSecurityTokenFromString( string serializedToken )\n{\n    if (String.IsNullOrEmpty(serializedToken))\n    {\n        throw new ArgumentException(&quot;The parameter &#39;serializedToken&#39; cannot be null or empty string.&quot;);\n    }\n\n    // Create a collection of SWT name value pairs\n    NameValueCollection properties = ParseToken( serializedToken );\n    SimpleWebToken swt = new SimpleWebToken( properties, serializedToken );\n\n    return swt;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WifRcCustomToken#14\">/// &lt;summary&gt;\n/// Parses the token into a collection.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;encodedToken&quot;&gt;The serialized token.&lt;/param&gt;\n/// &lt;returns&gt;A colleciton of all name-value pairs from the token.&lt;/returns&gt;\nNameValueCollection ParseToken( string encodedToken )\n{\n    if ( String.IsNullOrEmpty( encodedToken ) )\n    {\n        throw new ArgumentException( &quot;The parameter &#39;encodedToken&#39; cannot be null or empty string.&quot;);\n    }\n\n    NameValueCollection keyValuePairs = new NameValueCollection();\n    foreach ( string nameValue in encodedToken.Split( ParameterSeparator ) )\n    {\n        string[] keyValueArray = nameValue.Split( &#39;=&#39; );\n\n        if ( ( keyValueArray.Length &lt; 2 ) || String.IsNullOrEmpty( keyValueArray[0] ) )\n        {\n            throw new SecurityTokenException(&quot;The incoming token was not in an expected format.&quot;);\n        }\n\n        // Names must be decoded for the claim type case\n        string key = HttpUtility.UrlDecode( keyValueArray[0].Trim() );\n\n        // remove any unwanted &quot;\n        string value = HttpUtility.UrlDecode( keyValueArray[1].Trim().Trim( &#39;&quot;&#39; ) ); \n        keyValuePairs.Add( key, value );\n    }\n\n    return keyValuePairs;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_System_Xml_XmlReader_System_IdentityModel_Selectors_SecurityTokenResolver_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadToken(XmlReader,SecurityTokenResolver)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An XML reader positioned at the start element of the token.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tokenResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.selectors.securitytokenresolver\" data-linktype=\"relative-path\">SecurityTokenResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A token resolver that contains out-of-band and cached tokens.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </div>\r\n                  <p>The security token that was deserialized from the XML.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.  </p>\n</div>\n<p> The default implementation ignores the <code>tokenResolver</code> parameter and delegates the call to the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ReadToken_\" data-linktype=\"relative-path\">ReadToken</a> method.  </p>\n<p> Override this method to provide the logic to deserialize a security token from XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanReadToken_\" data-linktype=\"relative-path\">CanReadToken</a> method. Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationFailure_System_IdentityModel_Tokens_SecurityToken_System_String_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationFailure_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceTokenValidationFailure(SecurityToken,String)</div>        \r\n          </div>\r\n    \r\n            <p>Traces the failure event during the validation of security tokens when tracing is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The security token that is being validated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errorMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to write to the trace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method should be called from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method when validation of the token fails.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationSuccess_System_IdentityModel_Tokens_SecurityToken_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_TraceTokenValidationSuccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceTokenValidationSuccess(SecurityToken)</div>        \r\n          </div>\r\n    \r\n            <p>Traces the successful validation of security tokens event when tracing is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token that was validated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method should be called from the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\" data-linktype=\"relative-path\">ValidateToken</a> method after the token has been successfully validated.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_System_IdentityModel_Tokens_SecurityToken_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_ValidateToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateToken(SecurityToken)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, validates the specified security token. The token must be of the type processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a>&gt;</div>\r\n                  </div>\r\n                  <p>The identities contained in the token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> The ValidateToken method is called by the infrastructure to validate and extract the claims from the deserialized security token. These claims are returned in the collection of <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> objects returned by the method. In the typical case, this collection will contain a single identity.  </p>\n<p> In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandlerconfiguration#System_IdentityModel_Tokens_SecurityTokenHandlerConfiguration_AudienceRestriction_\" data-linktype=\"relative-path\">AudienceRestriction</a> property of the token handler configuration object specified on the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\" data-linktype=\"relative-path\">Configuration</a> property. These URIs are typically set in the configuration file under the <a href=\"../Topic/%3CaudienceUris%3E.md\" data-linktype=\"relative-path\">&amp;lt;audienceUris&amp;gt;</a> element. If the audience cannot be validated, an <a class=\"xref\" href=\"system.identitymodel.tokens.audienceurivalidationfailedexception\" data-linktype=\"relative-path\">AudienceUriValidationFailedException</a> exception should be thrown.  </p>\n<p> When processing the token, the issuer is typically validated by passing the issuer token to one of the <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry#System_IdentityModel_Tokens_IssuerNameRegistry_GetIssuerName_\" data-linktype=\"relative-path\">GetIssuerName</a> methods on the <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry\" data-linktype=\"relative-path\">IssuerNameRegistry</a> object that is configured for the handler through the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_Configuration_\" data-linktype=\"relative-path\">Configuration</a> property. The issuer name registry is typically configured through the <a href=\"../Topic/%3CissuerNameRegistry%3E.md\" data-linktype=\"relative-path\">&amp;lt;issuerNameRegistry&amp;gt;</a> element in the configuration file. The <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry#System_IdentityModel_Tokens_IssuerNameRegistry_GetIssuerName_\" data-linktype=\"relative-path\">GetIssuerName</a> returns the name of the issuer. This name should be used to set the <a class=\"xref\" href=\"system.security.claims.claim#System_Security_Claims_Claim_Issuer_\" data-linktype=\"relative-path\">Issuer</a> property in claims contained in the token. If the issuer name registry does not contain an entry for the issuer token, <a class=\"xref\" href=\"system.identitymodel.tokens.issuernameregistry#System_IdentityModel_Tokens_IssuerNameRegistry_GetIssuerName_\" data-linktype=\"relative-path\">GetIssuerName</a> returns <code>null</code>. In this case a <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenexception\" data-linktype=\"relative-path\">SecurityTokenException</a> is typically thrown in derived classes, but this behavior is up to the designer of the class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows an override of the ValidateToken method for a security token handler that processes simple web tokens (SWT). The code is taken from the <code>CustomToken</code> sample. For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#9\">/// &lt;summary&gt;\n/// This method validates the Simple Web Token.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;token&quot;&gt;A simple web token.&lt;/param&gt;\n/// &lt;returns&gt;A Claims Collection which contains all the claims from the token.&lt;/returns&gt;\npublic override ReadOnlyCollection&lt;ClaimsIdentity&gt; ValidateToken(SecurityToken token)\n{\n    if ( token == null )\n    {\n        throw new ArgumentNullException( &quot;token&quot; );\n    }\n\n    SimpleWebToken simpleWebToken = token as SimpleWebToken;\n    if ( simpleWebToken == null )\n    {\n        throw new ArgumentException(&quot;The token provided must be of type SimpleWebToken.&quot;);                    \n    }\n\n    if ( DateTime.Compare( simpleWebToken.ValidTo.Add( Configuration.MaxClockSkew ), DateTime.UtcNow ) &lt;= 0 )\n    {\n        throw new SecurityTokenExpiredException(&quot;The incoming token has expired. Get a new access token from the Authorization Server.&quot;);\n    }\n\n    ValidateSignature( simpleWebToken );\n \n    ValidateAudience( simpleWebToken.Audience );\n \n    ClaimsIdentity claimsIdentity = CreateClaims( simpleWebToken );\n   \n    if (this.Configuration.SaveBootstrapContext)\n    {\n        claimsIdentity.BootstrapContext = new BootstrapContext(simpleWebToken.SerializedToken);\n    }\n\n    List&lt;ClaimsIdentity&gt; claimCollection = new List&lt;ClaimsIdentity&gt;(new ClaimsIdentity[] { claimsIdentity });\n    return claimCollection.AsReadOnly();\n}\n</code></pre><p> The following code shows <code>CreateClaims</code> method that is invoked from the override of the ValidateToken method in the previous example. This method returns a <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> object that is created from the claims in the token. The code is taken from the <code>CustomToken</code> sample. For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#15\">/// &lt;summary&gt;Creates &lt;see cref=&quot;Claim&quot;/&gt;&#39;s from the incoming token.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;simpleWebToken&quot;&gt;The incoming &lt;see cref=&quot;SimpleWebToken&quot;/&gt;.&lt;/param&gt;\n/// &lt;returns&gt;A &lt;see cref=&quot;ClaimsIdentity&quot;/&gt; created from the token.&lt;/returns&gt;\nprotected virtual ClaimsIdentity CreateClaims( SimpleWebToken simpleWebToken )\n{\n    if ( simpleWebToken == null )\n    {\n        throw new ArgumentNullException( &quot;simpleWebToken&quot; );\n    }\n\n    NameValueCollection tokenProperties = simpleWebToken.GetAllProperties();\n    if ( tokenProperties == null )\n    {\n        throw new SecurityTokenValidationException( &quot;No claims can be created from this Simple Web Token.&quot; );\n    }\n\n    if ( Configuration.IssuerNameRegistry == null )\n    {\n        throw new InvalidOperationException( &quot;The Configuration.IssuerNameRegistry property of this SecurityTokenHandler is set to null. Tokens cannot be validated in this state.&quot; );\n    }\n\n    string normalizedIssuer = Configuration.IssuerNameRegistry.GetIssuerName( simpleWebToken );\n\n    ClaimsIdentity identity = new ClaimsIdentity(AuthenticationTypes.Federation);\n    \n    foreach ( string key in tokenProperties.Keys )\n    {\n        if ( ! IsReservedKeyName(key) &amp;&amp;  !string.IsNullOrEmpty( tokenProperties[key] ) )\n        {\n            identity.AddClaim( new Claim( key, tokenProperties[key], ClaimValueTypes.String, normalizedIssuer ) );\n            if ( key == AcsNameClaimType )\n            {\n                // add a default name claim from the Name identifier claim.\n                identity.AddClaim( new Claim( DefaultNameClaimType, tokenProperties[key], ClaimValueTypes.String, normalizedIssuer ) );\n            }\n        }\n    }\n\n    return identity;\n}\n</code></pre><p> The following code shows <code>ValidateSignature</code> method that is invoked from the override of the ValidateToken method in the simple web token handler. This method validates the signature on the token by using the configured <a class=\"xref\" href=\"system.identitymodel.tokens.issuertokenresolver\" data-linktype=\"relative-path\">IssuerTokenResolver</a>. The code is taken from the <code>CustomToken</code> sample. For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#12\">/// &lt;summary&gt;\n/// Validates the signature on the incoming token.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;simpleWebToken&quot;&gt;The incoming &lt;see cref=&quot;SimpleWebToken&quot;/&gt;.&lt;/param&gt;\nprotected virtual void ValidateSignature( SimpleWebToken simpleWebToken )\n{\n    if ( simpleWebToken == null )\n    {\n        throw new ArgumentNullException( &quot;simpleWebToken&quot; );\n    }\n\n    if ( String.IsNullOrEmpty( simpleWebToken.SerializedToken ) || String.IsNullOrEmpty( simpleWebToken.Signature ) )\n    {\n        throw new SecurityTokenValidationException( &quot;The token does not have a signature to verify&quot; );\n    }\n\n    string serializedToken = simpleWebToken.SerializedToken;           \n    string unsignedToken = null;\n\n    // Find the last parameter. The signature must be last per SWT specification.\n    int lastSeparator = serializedToken.LastIndexOf( ParameterSeparator );\n\n    // Check whether the last parameter is an hmac.\n    if ( lastSeparator &gt; 0 )\n    {\n        string lastParamStart = ParameterSeparator + SimpleWebTokenConstants.Signature + &quot;=&quot;;\n        string lastParam = serializedToken.Substring( lastSeparator );\n\n        // Strip the trailing hmac to obtain the original unsigned string for later hmac verification.               \n        if ( lastParam.StartsWith( lastParamStart, StringComparison.Ordinal ) )\n        {\n            unsignedToken = serializedToken.Substring( 0, lastSeparator );\n        }\n    }\n\n    SimpleWebTokenKeyIdentifierClause clause = new SimpleWebTokenKeyIdentifierClause(simpleWebToken.Audience);\n    InMemorySymmetricSecurityKey securityKey = null;\n    try\n    {\n        securityKey = (InMemorySymmetricSecurityKey)this.Configuration.IssuerTokenResolver.ResolveSecurityKey(clause);\n    }\n    catch (InvalidOperationException)\n    {\n        throw new SecurityTokenValidationException( &quot;A Symmetric key was not found for the given key identifier clause.&quot;);\n    }\n\n    string generatedSignature = GenerateSignature( unsignedToken, securityKey.GetSymmetricKey() );\n\n    if ( string.CompareOrdinal( generatedSignature, simpleWebToken.Signature ) != 0 )\n    {\n        throw new SecurityTokenValidationException( &quot;The signature on the incoming token is invalid.&quot;) ;\n    }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WifRcCustomToken#11\">/// &lt;summary&gt;\n/// Generates an HMACSHA256 signature for a given string and key.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;unsignedToken&quot;&gt;The token to be signed.&lt;/param&gt;\n/// &lt;param name=&quot;signingKey&quot;&gt;The key used to generate the signature.&lt;/param&gt;\n/// &lt;returns&gt;The generated signature.&lt;/returns&gt;\nprotected static string GenerateSignature(string unsignedToken, byte[] signingKey)\n{\n    using (HMACSHA256 hmac = new HMACSHA256(signingKey))\n    {\n        byte[] signatureBytes = hmac.ComputeHash(Encoding.ASCII.GetBytes(unsignedToken));\n        string signature = HttpUtility.UrlEncode(Convert.ToBase64String(signatureBytes));\n\n        return signature;\n    }\n}\n</code></pre><p> The following code shows <code>ValidateAudience</code> method that is invoked from the override of the ValidateToken method in the simple web token handler. This method validates the audience contained in the token against the audience URIs that were specified in configuration. The code is taken from the <code>CustomToken</code> sample. For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#13\">/// &lt;summary&gt;\n/// Validates the audience of the incoming token with those specified in configuration.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;tokenAudience&quot;&gt;The audience of the incoming token.&lt;/param&gt;\nprotected virtual void ValidateAudience( string tokenAudience )\n{\n    if ( Configuration.AudienceRestriction.AudienceMode != AudienceUriMode.Never )\n    {\n        if ( String.IsNullOrEmpty( tokenAudience ) )\n        {\n            throw new SecurityTokenValidationException(&quot;The incoming token does not have a valid audience Uri and the Audience Restriction is not set to &#39;None&#39;.&quot;);\n        }\n\n        if ( Configuration.AudienceRestriction.AllowedAudienceUris.Count == 0 )\n        {\n            throw new InvalidOperationException( &quot; Audience Restriction is not set to &#39;None&#39; but no valid audience URI&#39;s are configured.&quot; );\n        }\n\n        IList&lt;Uri&gt; allowedAudienceUris = Configuration.AudienceRestriction.AllowedAudienceUris;\n        \n        Uri audienceUri = null;\n\n        Uri.TryCreate(tokenAudience, UriKind.RelativeOrAbsolute, out audienceUri);\n        \n        // Strip off any query string or fragment. \n        Uri audienceLeftPart;\n\n        if ( audienceUri.IsAbsoluteUri )\n        {\n            audienceLeftPart = new Uri( audienceUri.GetLeftPart( UriPartial.Path ) );\n        }\n        else\n        {\n            Uri baseUri = new Uri( &quot;http://www.example.com&quot; );\n            Uri resolved = new Uri( baseUri, tokenAudience );\n            audienceLeftPart = baseUri.MakeRelativeUri( new Uri( resolved.GetLeftPart( UriPartial.Path ) ) );\n        }\n\n        if ( !allowedAudienceUris.Contains( audienceLeftPart ) )\n        {\n            throw new AudienceUriValidationFailedException(\n                    &quot;The Audience Uri of the incoming token is not present in the list of permitted Audience Uri&#39;s.&quot;);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_System_Xml_XmlWriter_System_IdentityModel_Tokens_SecurityKeyIdentifierClause_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteKeyIdentifierClause_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, serializes the specified key identifier clause to XML. The key identifier clause must be of the type supported by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML writer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityKeyIdentifierClause</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitykeyidentifierclause\" data-linktype=\"relative-path\">SecurityKeyIdentifierClause</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key identifier clause to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to serialize a key identifier clause to XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteKeyIdentifierClause_\" data-linktype=\"relative-path\">CanWriteKeyIdentifierClause</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_System_IdentityModel_Tokens_SecurityToken_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteToken(SecurityToken)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, serializes the specified security token to a string. The token must be of the type processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The serialized token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to serialize a security token to XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\" data-linktype=\"relative-path\">CanWriteToken</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_System_Xml_XmlWriter_System_IdentityModel_Tokens_SecurityToken_\">\r\n    \r\n            <a id=\"System_IdentityModel_Tokens_SecurityTokenHandler_WriteToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteToken(XmlWriter,SecurityToken)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, serializes the specified security token to XML. The token must be of the type processed by the derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML writer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.tokens.securitytoken\" data-linktype=\"relative-path\">SecurityToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default this method throws a <a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a> exception.  </p>\n<p> Override this method to provide the logic to serialize a security token to XML. If you override this method, you should also override the <a class=\"xref\" href=\"system.identitymodel.tokens.securitytokenhandler#System_IdentityModel_Tokens_SecurityTokenHandler_CanWriteToken_\" data-linktype=\"relative-path\">CanWriteToken</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to override the WriteToken method to serialize a custom token. The code is taken from the <code>Custom Token</code> sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). For information about this sample and other samples available for WIF and where to download them, see <a href=\"../Topic/WIF%20Code%20Sample%20Index.md\" data-linktype=\"relative-path\">WIF Code Sample Index</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WifRcCustomToken#10\">/// &lt;summary&gt;\n/// Serializes the given SecurityToken to the XmlWriter.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;writer&quot;&gt;XmlWriter into which the token is serialized.&lt;/param&gt;\n/// &lt;param name=&quot;token&quot;&gt;SecurityToken to be serialized.&lt;/param&gt;\npublic override void WriteToken( XmlWriter writer, SecurityToken token )\n{\n    SimpleWebToken simpleWebToken = token as SimpleWebToken;\n    if ( simpleWebToken == null )\n    {\n        throw new SecurityTokenException(&quot;The given token is not of the expected type &#39;SimpleWebToken&#39;.&quot;);\n    }\n\n    string signedToken = null;\n\n    if ( String.IsNullOrEmpty( simpleWebToken.SerializedToken ) )\n    {\n        StringBuilder strBuilder = new StringBuilder();\n\n        bool skipDelimiter = true;\n        NameValueCollection tokenProperties = simpleWebToken.GetAllProperties();\n\n        // remove the signature if present\n        if ( String.IsNullOrEmpty( tokenProperties[SimpleWebTokenConstants.Signature] ) )\n        {\n            tokenProperties.Remove( SimpleWebTokenConstants.Signature );\n        }\n\n        foreach ( string key in tokenProperties.Keys )\n        {\n            if ( tokenProperties[key] != null )\n            {\n                if ( !skipDelimiter )\n                {\n                    strBuilder.Append( ParameterSeparator );\n                }\n\n                strBuilder.Append( String.Format(\n                    CultureInfo.InvariantCulture,\n                    &quot;{0}={1}&quot;,\n                    HttpUtility.UrlEncode( key ),\n                    HttpUtility.UrlEncode( tokenProperties[key] ) ) );\n\n                skipDelimiter = false;\n            }\n        }\n\n        string serializedToken = strBuilder.ToString();\n\n        SimpleWebTokenKeyIdentifierClause clause = new SimpleWebTokenKeyIdentifierClause(simpleWebToken.Audience);\n        InMemorySymmetricSecurityKey securityKey = null;\n        try\n        {\n            securityKey = (InMemorySymmetricSecurityKey)this.Configuration.IssuerTokenResolver.ResolveSecurityKey(clause);\n        }\n        catch (InvalidOperationException)\n        {\n            throw new SecurityTokenValidationException(&quot;A Symmetric key was not found for the given key identifier clause.&quot;);\n        }\n       \n        // append the signature\n        string signature = GenerateSignature( serializedToken, securityKey.GetSymmetricKey() );\n        strBuilder.Append( String.Format(\n                    CultureInfo.InvariantCulture,\n                    &quot;{0}{1}={2}&quot;,\n                    ParameterSeparator,\n                    HttpUtility.UrlEncode( SimpleWebTokenConstants.Signature ),\n                    HttpUtility.UrlEncode( signature ) ) );\n\n        signedToken = strBuilder.ToString();\n    }\n    else\n    {\n        // reuse the stored serialized token if present\n        signedToken = simpleWebToken.SerializedToken;\n    }\n\n    string encodedToken = Convert.ToBase64String( Encoding.UTF8.GetBytes( signedToken ) );\n    writer.WriteStartElement(BinarySecurityToken);\n    writer.WriteAttributeString(&quot;Id&quot;, &quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;, token.Id);\n    writer.WriteAttributeString( ValueType, SimpleWebTokenConstants.ValueTypeUri );\n    writer.WriteAttributeString( EncodingType, Base64EncodingType );\n    writer.WriteString( encodedToken );\n    writer.WriteEndElement();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WifRcCustomToken#11\">/// &lt;summary&gt;\n/// Generates an HMACSHA256 signature for a given string and key.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;unsignedToken&quot;&gt;The token to be signed.&lt;/param&gt;\n/// &lt;param name=&quot;signingKey&quot;&gt;The key used to generate the signature.&lt;/param&gt;\n/// &lt;returns&gt;The generated signature.&lt;/returns&gt;\nprotected static string GenerateSignature(string unsignedToken, byte[] signingKey)\n{\n    using (HMACSHA256 hmac = new HMACSHA256(signingKey))\n    {\n        byte[] signatureBytes = hmac.ComputeHash(Encoding.ASCII.GetBytes(unsignedToken));\n        string signature = HttpUtility.UrlEncode(Convert.ToBase64String(signatureBytes));\n\n        return signature;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler..ctor\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.TokenType\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken\">\r\n<meta name=\"APILocation\" content=\"System.IdentityModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"9d63dcfc-6772-8b07-77f9-30fab45c7ade\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.IdentityModel.Tokens\\SecurityTokenHandler.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The abstract base class for security token handlers.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IdentityModel.Tokens/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IdentityModel.Tokens.SecurityTokenHandler\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IdentityModel.Tokens.SecurityTokenHandler.yml","open_to_public_contributors":true,"api_name":["System.IdentityModel.Tokens.SecurityTokenHandler","System.IdentityModel.Tokens.SecurityTokenHandler..ctor","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken","System.IdentityModel.Tokens.SecurityTokenHandler.Configuration","System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection","System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference","System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken","System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken","System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers","System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration","System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.TokenType","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess","System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken"],"api_location":["System.IdentityModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IdentityModel.Tokens.SecurityTokenHandler","System::IdentityModel::Tokens::SecurityTokenHandler","System.IdentityModel.Tokens.SecurityTokenHandler.#ctor","System::IdentityModel::Tokens::SecurityTokenHandler::#ctor","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::CanReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken","System::IdentityModel::Tokens::SecurityTokenHandler::CanReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken","System::IdentityModel::Tokens::SecurityTokenHandler::CanValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::CanWriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken","System::IdentityModel::Tokens::SecurityTokenHandler::CanWriteToken","System.IdentityModel.Tokens.SecurityTokenHandler.Configuration","System::IdentityModel::Tokens::SecurityTokenHandler::Configuration","System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection","System::IdentityModel::Tokens::SecurityTokenHandler::ContainingCollection","System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference","System::IdentityModel::Tokens::SecurityTokenHandler::CreateSecurityTokenReference","System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken","System::IdentityModel::Tokens::SecurityTokenHandler::CreateToken","System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken","System::IdentityModel::Tokens::SecurityTokenHandler::DetectReplayedToken","System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers","System::IdentityModel::Tokens::SecurityTokenHandler::GetTokenTypeIdentifiers","System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration","System::IdentityModel::Tokens::SecurityTokenHandler::LoadCustomConfiguration","System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::ReadKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken","System::IdentityModel::Tokens::SecurityTokenHandler::ReadToken","System.IdentityModel.Tokens.SecurityTokenHandler.TokenType","System::IdentityModel::Tokens::SecurityTokenHandler::TokenType","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure","System::IdentityModel::Tokens::SecurityTokenHandler::TraceTokenValidationFailure","System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess","System::IdentityModel::Tokens::SecurityTokenHandler::TraceTokenValidationSuccess","System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken","System::IdentityModel::Tokens::SecurityTokenHandler::ValidateToken","System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause","System::IdentityModel::Tokens::SecurityTokenHandler::WriteKeyIdentifierClause","System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken","System::IdentityModel::Tokens::SecurityTokenHandler::WriteToken"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"9d63dcfc-6772-8b07-77f9-30fab45c7ade","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.IdentityModel.Tokens\\SecurityTokenHandler.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IdentityModel.Tokens/SecurityTokenHandler.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SecurityTokenHandler class | Microsoft Docs","_op_ogTitle":"SecurityTokenHandler class","description":"The abstract base class for security token handlers.\n","toc_asset_id":"_splitted/System.IdentityModel.Tokens/toc.json","toc_rel":"_splitted/System.IdentityModel.Tokens/toc.json","source_url":"","ms.assetid":"System.IdentityModel.Tokens.SecurityTokenHandler","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.identitymodel.tokens.securitytokenhandler","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.identitymodel.tokens.securitytokenhandler","fileRelativePath":"System.IdentityModel.Tokens.SecurityTokenHandler.html"},"themesRelativePathToOutputRoot":"_themes/"}