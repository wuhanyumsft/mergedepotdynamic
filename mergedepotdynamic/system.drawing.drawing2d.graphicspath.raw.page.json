{"content":"    \r\n    <h1 id=\"System_Drawing_Drawing2D_GraphicsPath\">\r\n      <span class=\"lang-csharp\">GraphicsPath</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a series of connected lines and curves. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">GraphicsPath</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions. The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.  </p>\n<p> A path may be composed of any number of figures (subpaths). Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive. The starting point of a figure is the first point in the sequence of connected lines and curves. The ending point is the last point in the sequence. The starting and ending points of a geometric shape primitive are defined by the primitive specification.  </p>\n<p> A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly. A figure can be closed explicitly, by using the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_CloseFigure_\" data-linktype=\"relative-path\">CloseFigure</a> method, which closes the current figure by connecting a line from the ending point to the starting point. A figure that consists of a geometric shape primitive is a closed figure.  </p>\n<p> For purposes of filling and clipping (for example, if a path is rendered using <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a>), all open figures are closed by adding a line from the figure&#39;s first point to its last point.  </p>\n<p> A new figure is implicitly started when a path is created or when a figure is closed. A new figure is explicitly created when the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_StartFigure_\" data-linktype=\"relative-path\">StartFigure</a> method is called.  </p>\n<p> When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure. Consequently, there is always a current figure in a path. When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.  </p>\n<p> A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point. The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive. The direction is used in determining the path interiors for clipping and fill.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath__ctor\" data-linktype=\"self-bookmark\">GraphicsPath()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with a <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.FillMode*</span> value of <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">GraphicsPath(FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_Point___System_Byte___\" data-linktype=\"self-bookmark\">GraphicsPath(Point[],Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> arrays.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_PointF___System_Byte___\" data-linktype=\"self-bookmark\">GraphicsPath(PointF[],Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> array with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> arrays.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_Point___System_Byte___System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">GraphicsPath(Point[],Byte[],FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> arrays and with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_PointF___System_Byte___System_Drawing_Drawing2D_FillMode_\" data-linktype=\"self-bookmark\">GraphicsPath(PointF[],Byte[],FillMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> array with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> arrays and with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration element.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_FillMode\" data-linktype=\"self-bookmark\">FillMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the interiors of shapes in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> are filled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_PathData\" data-linktype=\"self-bookmark\">PathData</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.drawing.drawing2d.pathdata\" data-linktype=\"relative-path\">PathData</a> that encapsulates arrays of points (<code>points</code>) and types (<code>types</code>) for this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_PathPoints\" data-linktype=\"self-bookmark\">PathPoints</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the points in the path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_PathTypes\" data-linktype=\"self-bookmark\">PathTypes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the types of the corresponding points in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_PointCount\" data-linktype=\"self-bookmark\">PointCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of elements in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> or the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathTypes*</span> array.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddArc(Rectangle,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_RectangleF_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddArc(RectangleF,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddArc(Int32,Int32,Int32,Int32,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddArc(Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_\" data-linktype=\"self-bookmark\">AddBezier(Point,Point,Point,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">AddBezier(PointF,PointF,PointF,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddBeziers_System_Drawing_Point___\" data-linktype=\"self-bookmark\">AddBeziers(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a sequence of connected cubic Bézier curves to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddBeziers_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">AddBeziers(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a sequence of connected cubic Bézier curves to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_Point___\" data-linktype=\"self-bookmark\">AddClosedCurve(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">AddClosedCurve(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_Point___System_Single_\" data-linktype=\"self-bookmark\">AddClosedCurve(Point[],Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_PointF___System_Single_\" data-linktype=\"self-bookmark\">AddClosedCurve(PointF[],Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_Point___\" data-linktype=\"self-bookmark\">AddCurve(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">AddCurve(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_Point___System_Single_\" data-linktype=\"self-bookmark\">AddCurve(Point[],Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_PointF___System_Single_\" data-linktype=\"self-bookmark\">AddCurve(PointF[],Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_Point___System_Int32_System_Int32_System_Single_\" data-linktype=\"self-bookmark\">AddCurve(Point[],Int32,Int32,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_PointF___System_Int32_System_Int32_System_Single_\" data-linktype=\"self-bookmark\">AddCurve(PointF[],Int32,Int32,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">AddEllipse(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an ellipse to the current path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">AddEllipse(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an ellipse to the current path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">AddEllipse(Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an ellipse to the current path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddEllipse(Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an ellipse to the current path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Drawing_Point_System_Drawing_Point_\" data-linktype=\"self-bookmark\">AddLine(Point,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a line segment to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Drawing_PointF_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">AddLine(PointF,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a line segment to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">AddLine(Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a line segment to the current figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddLine(Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a line segment to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddLines_System_Drawing_Point___\" data-linktype=\"self-bookmark\">AddLines(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a series of connected line segments to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddLines_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">AddLines(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a series of connected line segments to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddPath_System_Drawing_Drawing2D_GraphicsPath_System_Boolean_\" data-linktype=\"self-bookmark\">AddPath(GraphicsPath,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddPie(Rectangle,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the outline of a pie shape to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddPie(Int32,Int32,Int32,Int32,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the outline of a pie shape to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">AddPie(Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the outline of a pie shape to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddPolygon_System_Drawing_Point___\" data-linktype=\"self-bookmark\">AddPolygon(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a polygon to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddPolygon_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">AddPolygon(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a polygon to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddRectangle_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">AddRectangle(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a rectangle to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddRectangle_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">AddRectangle(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a rectangle to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddRectangles_System_Drawing_Rectangle___\" data-linktype=\"self-bookmark\">AddRectangles(Rectangle[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a series of rectangles to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddRectangles_System_Drawing_RectangleF___\" data-linktype=\"self-bookmark\">AddRectangles(RectangleF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a series of rectangles to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Point_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">AddString(String,FontFamily,Int32,Single,Point,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a text string to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_PointF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">AddString(String,FontFamily,Int32,Single,PointF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a text string to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Rectangle_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a text string to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_RectangleF_System_Drawing_StringFormat_\" data-linktype=\"self-bookmark\">AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a text string to this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_ClearMarkers\" data-linktype=\"self-bookmark\">ClearMarkers()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all markers from this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_CloseAllFigures\" data-linktype=\"self-bookmark\">CloseAllFigures()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes all open figures in this path and starts a new figure. It closes each open figure by connecting a line from its endpoint to its starting point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_CloseFigure\" data-linktype=\"self-bookmark\">CloseFigure()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the current figure and starts a new figure. If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Flatten\" data-linktype=\"self-bookmark\">Flatten()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts each curve in this path into a sequence of connected line segments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Flatten_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">Flatten(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified transform and then converts each curve in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> into a sequence of connected line segments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Flatten_System_Drawing_Drawing2D_Matrix_System_Single_\" data-linktype=\"self-bookmark\">Flatten(Matrix,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts each curve in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> into a sequence of connected line segments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_GetBounds\" data-linktype=\"self-bookmark\">GetBounds()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_GetBounds_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">GetBounds(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when this path is transformed by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_GetBounds_System_Drawing_Drawing2D_Matrix_System_Drawing_Pen_\" data-linktype=\"self-bookmark\">GetBounds(Matrix,Pen)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when the current path is transformed by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> and drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_GetLastPoint\" data-linktype=\"self-bookmark\">GetLastPoint()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the last point in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> array of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_Point_System_Drawing_Pen_\" data-linktype=\"self-bookmark\">IsOutlineVisible(Point,Pen)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_PointF_System_Drawing_Pen_\" data-linktype=\"self-bookmark\">IsOutlineVisible(PointF,Pen)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_Point_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsOutlineVisible(Point,Pen,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_PointF_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsOutlineVisible(PointF,Pen,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_\" data-linktype=\"self-bookmark\">IsOutlineVisible(Int32,Int32,Pen)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Single_System_Single_System_Drawing_Pen_\" data-linktype=\"self-bookmark\">IsOutlineVisible(Single,Single,Pen)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Single_System_Single_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsOutlineVisible(Single,Single,Pen,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_Point_\" data-linktype=\"self-bookmark\">IsVisible(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">IsVisible(PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_Point_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Point,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_PointF_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(PointF,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Single_System_Single_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Single_System_Single_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> in the visible clip region of the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Empties the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> and <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathTypes*</span> arrays and sets the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Reverse\" data-linktype=\"self-bookmark\">Reverse()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reverses the order of points in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> array of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_SetMarkers\" data-linktype=\"self-bookmark\">SetMarkers()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets a marker on this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_StartFigure\" data-linktype=\"self-bookmark\">StartFigure()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts a new figure without closing the current figure. All subsequent points added to the path are added to this new figure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Transform_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">Transform(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a transform matrix to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Warp(PointF[],RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">Warp(PointF[],RectangleF,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_WarpMode_\" data-linktype=\"self-bookmark\">Warp(PointF[],RectangleF,Matrix,WarpMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_WarpMode_System_Single_\" data-linktype=\"self-bookmark\">Warp(PointF[],RectangleF,Matrix,WarpMode,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_\" data-linktype=\"self-bookmark\">Widen(Pen)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an additional outline to the path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">Widen(Pen,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an additional outline to the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_System_Drawing_Drawing2D_Matrix_System_Single_\" data-linktype=\"self-bookmark\">Widen(Pen,Matrix,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Replaces this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> with curves that enclose the area that is filled when this path is drawn by the specified pen.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath__ctor\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GraphicsPath()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with a <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.FillMode*</span> value of <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GraphicsPath ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GraphicsPath(FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the interior of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> is filled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_Point___System_Byte___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GraphicsPath(Point[],Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> arrays.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GraphicsPath (System.Drawing.Point[] pts, byte[] types);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that defines the coordinates of the points that make up this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> enumeration elements that specifies the type of each corresponding point in the <code>pts</code> array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_PointF___System_Byte___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GraphicsPath(PointF[],Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> array with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> arrays.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that defines the coordinates of the points that make up this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> enumeration elements that specifies the type of each corresponding point in the <code>pts</code> array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_Point___System_Byte___System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GraphicsPath(Point[],Byte[],FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> class with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> arrays and with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that defines the coordinates of the points that make up this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> enumeration elements that specifies the type of each corresponding point in the <code>pts</code> array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that specifies how the interiors of shapes in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> are filled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_System_Drawing_PointF___System_Byte___System_Drawing_Drawing2D_FillMode_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GraphicsPath(PointF[],Byte[],FillMode)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> array with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> and <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> arrays and with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that defines the coordinates of the points that make up this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.drawing2d.pathpointtype\" data-linktype=\"relative-path\">PathPointType</a> enumeration elements that specifies the type of each corresponding point in the <code>pts</code> array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that specifies how the interiors of shapes in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> are filled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_FillMode\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_FillMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that determines how the interiors of shapes in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> are filled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.FillMode FillMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> enumeration that specifies how the interiors of shapes in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> are filled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_PathData\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_PathData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PathData</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.drawing.drawing2d.pathdata\" data-linktype=\"relative-path\">PathData</a> that encapsulates arrays of points (<code>points</code>) and types (<code>types</code>) for this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.PathData PathData { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.pathdata\" data-linktype=\"relative-path\">PathData</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.pathdata\" data-linktype=\"relative-path\">PathData</a> that encapsulates arrays for both the points and types for this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_PathPoints\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_PathPoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PathPoints</div>        \r\n          </div>\r\n    \r\n            <p>Gets the points in the path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.PointF[] PathPoints { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> objects that represent the path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_PathTypes\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_PathTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PathTypes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the types of the corresponding points in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] PathTypes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>An array of bytes that specifies the types of the corresponding points in the path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The array of bytes returned by the PathTypes property specifies point types and flags for the data points in a path. For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point. The following table shows possible values and their meanings.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Indicates that the point is the start of a figure.</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Indicates that the point is one of the two endpoints of a line.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Indicates that the point is an endpoint or control point of a cubic Bézier spline.</td>\n</tr>\n<tr>\n<td>0x7</td>\n<td>Masks all bits except for the three low-order bits, which indicate the point type.</td>\n</tr>\n<tr>\n<td>0x20</td>\n<td>Specifies that the point is a marker.</td>\n</tr>\n<tr>\n<td>0x80</td>\n<td>Specifies that the point is the last point in a closed subpath (figure).</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_PointCount\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_PointCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PointCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of elements in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> or the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathTypes*</span> array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PointCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer that specifies the number of elements in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> or the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathTypes*</span> array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_Rectangle_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArc(Rectangle,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the rectangular bounds of the ellipse from which the arc is taken.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle of the arc, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.  </p>\n<p> The arc is traced along the perimeter of the ellipse bounded by the specified rectangle. The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle. The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle. If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle, from which the arc is defined.  </p>\n</li>\n<li><p>Creates a path, <code>myPath</code>.  </p>\n</li>\n<li><p>Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.  </p>\n</li>\n<li><p>Draws the path to screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1\">        private void AddArcExample(PaintEventArgs e)\n        {\n                     \n            // Create a GraphicsPath object.\n            GraphicsPath myPath = new GraphicsPath();\n                     \n            // Set up and call AddArc, and close the figure.\n            Rectangle rect = new Rectangle(20, 20, 50, 100);\n            myPath.StartFigure();\n            myPath.AddArc(rect, 0, 180);\n            myPath.CloseFigure();\n                     \n            // Draw the path to screen.\n            e.Graphics.DrawPath(new Pen(Color.Red, 3), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1\">private:\n   void AddArcExample( PaintEventArgs^ e )\n   {\n      // Create a GraphicsPath object.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n\n      // Set up and call AddArc, and close the figure.\n      Rectangle rect = Rectangle(20,20,50,100);\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddArc( rect, 0, 180 );\n      myPath-&gt;CloseFigure();\n\n      // Draw the path to screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Red,3.0f ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1\">    Public Sub AddArcExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a GraphicsPath object.\n        Dim myPath As New GraphicsPath\n\n        &#39; Set up and call AddArc, and close the figure.\n        Dim rect As New Rectangle(20, 20, 50, 100)\n        myPath.StartFigure()\n        myPath.AddArc(rect, 0, 180)\n        myPath.CloseFigure()\n\n        &#39; Draw the path to screen.\n        e.Graphics.DrawPath(New Pen(Color.Red, 3), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_RectangleF_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArc(RectangleF,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangular bounds of the ellipse from which the arc is taken.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle of the arc, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.  </p>\n<p> The arc is traced along the perimeter of the ellipse bounded by the specified rectangle. The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle. The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle. If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"relative-path\">AddArc(Rectangle,Single,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArc(Int32,Int32,Int32,Int32,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle of the arc, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.  </p>\n<p> The arc is traced along the perimeter of the ellipse bounded by the specified rectangle. The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle. The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle. If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"relative-path\">AddArc(Rectangle,Single,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddArc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddArc(Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Appends an elliptical arc to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangular region that defines the ellipse from which the arc is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle of the arc, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the arc.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.  </p>\n<p> The arc is traced along the perimeter of the ellipse bounded by the specified rectangle. The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle. The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle. If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddArc_System_Drawing_Rectangle_System_Single_System_Single_\" data-linktype=\"relative-path\">AddArc(Rectangle,Single,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBezier(Point,Point,Point,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the endpoint of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.  </p>\n<p> If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBezier(PointF,PointF,PointF,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the endpoint of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.  </p>\n<p> If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the endpoint of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the endpoint of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.  </p>\n<p> If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.  </p>\n</li>\n<li><p>Closes the curve.  </p>\n</li>\n<li><p>Draws the path to screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2\">        private void AddBezierExample(PaintEventArgs e)\n        {\n                     \n            // Create a new Path.\n            GraphicsPath myPath = new GraphicsPath();\n                     \n            // Call AddBezier.\n            myPath.StartFigure();\n            myPath.AddBezier(50, 50, 70, 0, 100, 120, 150, 50);\n                     \n            // Close the curve.\n            myPath.CloseFigure();\n                     \n            // Draw the path to screen.\n            e.Graphics.DrawPath(new Pen(Color.Red, 2), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2\">private:\n   void AddBezierExample( PaintEventArgs^ e )\n   {\n      // Create a new Path.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n\n      // Call AddBezier.\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddBezier( 50, 50, 70, 0, 100, 120, 150, 50 );\n\n      // Close the curve.\n      myPath-&gt;CloseFigure();\n\n      // Draw the path to screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Red,2.0f ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2\">    Public Sub AddBezierExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a new Path.\n        Dim myPath As New GraphicsPath\n\n        &#39; Call AddBezier.\n        myPath.StartFigure()\n        myPath.AddBezier(50, 50, 70, 0, 100, 120, 150, 50)\n\n        &#39; Close the curve.\n        myPath.CloseFigure()\n\n        &#39; Draw the path to screen.\n        e.Graphics.DrawPath(New Pen(Color.Red, 2), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddBezier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a cubic Bézier curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the starting point of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the first control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the second control point for the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the endpoint of the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y4</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the endpoint of the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.  </p>\n<p> If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddBezier_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddBeziers_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddBeziers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBeziers(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a sequence of connected cubic Bézier curves to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBeziers (System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the curves.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>points</code> parameter specifies an array of endpoints and control points of the connected curves. The first curve is constructed from the first point to the fourth point in the <code>points</code> array by using the second and third points as control points. In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.  </p>\n<p> If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of seven points (representing two connected Bézier curves).  </p>\n</li>\n<li><p>Creates a path and adds the series of Bézier curve points to the path.  </p>\n</li>\n<li><p>Draws the path to screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3\">        private void AddBeziersExample(PaintEventArgs e)\n        {\n                     \n            // Adds two Bezier curves.\n            Point[] myArray =\n                     {\n                         new Point(20, 100),\n                         new Point(40, 75),\n                         new Point(60, 125),\n                         new Point(80, 100),\n                         new Point(100, 50),\n                         new Point(120, 150),\n                         new Point(140, 100)\n                     };\n                     \n            // Create the path and add the curves.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddBeziers(myArray);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3\">private:\n   void AddBeziersExample( PaintEventArgs^ e )\n   {\n      // Adds two Bezier curves.\n      array&lt;Point&gt;^ myArray = {Point(20,100),Point(40,75),Point(60,125),Point(80,100),Point(100,50),Point(120,150),Point(140,100)};\n\n      // Create the path and add the curves.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddBeziers( myArray );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3\">    Public Sub AddBeziersExample(ByVal e As PaintEventArgs)\n\n        &#39; Adds two Bezier curves.\n        Dim myArray As Point() = {New Point(20, 100), New Point(40, 75), _\n        New Point(60, 125), New Point(80, 100), New Point(100, 50), _\n        New Point(120, 150), New Point(140, 100)}\n        Dim myPath As New GraphicsPath\n        myPath.AddBeziers(myArray)\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddBeziers_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddBeziers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBeziers(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a sequence of connected cubic Bézier curves to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBeziers (System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the curves.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>points</code> parameter specifies an array of endpoints and control points of the connected curves. The first curve is constructed from the first point to the fourth point in the <code>points</code> array by using the second and third points as control points. In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.  </p>\n<p> If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example see:  </p>\n<p> [AddBeziers(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29&gt;</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddClosedCurve(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddClosedCurve (System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points. If the first point and the last point in the <code>points</code> array are not the same point, the curve is closed by connecting these two points. The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddClosedCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddClosedCurve(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddClosedCurve (System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points. If the first point and the last point in the <code>points</code> array are not the same point, the curve is closed by connecting these two points. The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddClosedCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_Point___System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddClosedCurve(Point[],Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddClosedCurve (System.Drawing.Point[] points, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points. If the first point and the last point in the <code>points</code> array are not the same point, the curve is closed by connecting these two points.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of six points (representing a cardinal spline).  </p>\n</li>\n<li><p>Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).  </p>\n</li>\n<li><p>Draws the path to screen.  </p>\n<p>Notice that a tension of 0.5 is used.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4\">        private void AddClosedCurveExample(PaintEventArgs e)\n        {\n                     \n            // Creates a symetrical, closed curve.\n            Point[] myArray =\n                     {\n                         new Point(20,100),\n                         new Point(40,150),\n                         new Point(60,125),\n                         new Point(40,100),\n                         new Point(60,75),\n                         new Point(40,50)\n                     };\n                     \n            // Create a new path and add curve.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddClosedCurve(myArray,.5f);\n            Pen myPen = new Pen(Color.Black, 2);\n                     \n            // Draw the path to screen.\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4\">private:\n   void AddClosedCurveExample( PaintEventArgs^ e )\n   {\n      // Creates a symetrical, closed curve.\n      array&lt;Point&gt;^ myArray = {Point(20,100),Point(40,150),Point(60,125),Point(40,100),Point(60,75),Point(40,50)};\n\n      // Create a new path and add curve.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddClosedCurve( myArray, .5f );\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n\n      // Draw the path to screen.\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4\">    Public Sub AddClosedCurveExample(ByVal e As PaintEventArgs)\n\n        &#39; Creates a symetrical, closed curve.\n        Dim myArray As Point() = {New Point(20, 100), New Point(40, 150), _\n        New Point(60, 125), New Point(40, 100), New Point(60, 75), _\n        New Point(40, 50)}\n        Dim myPath As New GraphicsPath\n        myPath.AddClosedCurve(myArray, 0.5F)\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_System_Drawing_PointF___System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddClosedCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddClosedCurve(PointF[],Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddClosedCurve (System.Drawing.PointF[] points, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points. If the first point and the last point in the <code>points</code> array are not the same point, the curve is closed by connecting these two points.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddClosedCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCurve(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCurve (System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddClosedCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCurve(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCurve (System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_Point___System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCurve(Point[],Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCurve (System.Drawing.Point[] points, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddClosedCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_PointF___System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCurve(PointF[],Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCurve (System.Drawing.PointF[] points, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_Point___System_Int32_System_Int32_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCurve(Point[],Int32,Int32,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the element in the <code>points</code> array that is used as the first point in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>numberOfSegments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.  </p>\n<p> The curve begins at the point in the array specified by the <code>offset</code> parameter and includes the number of points (segments) specified by <code>numberOfSegments</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of four points (representing a cardinal spline).  </p>\n</li>\n<li><p>Creates a path and using the array of points, adds the curve to the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n<p>Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddCurve_\" data-linktype=\"relative-path\">AddCurve</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5\">        private void AddCurveExample(PaintEventArgs e)\n        {\n                     \n            // Create some points.\n            Point point1 = new Point(20, 20);\n            Point point2 = new Point(40, 0);\n            Point point3 = new Point(60, 40);\n            Point point4 = new Point(80, 20);\n                     \n            // Create an array of the points.\n            Point[] curvePoints = {point1, point2, point3, point4};\n                     \n            // Create a GraphicsPath object and add a curve.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddCurve(curvePoints, 0, 3, 0.8f);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5\">private:\n   void AddCurveExample( PaintEventArgs^ e )\n   {\n      // Create some points.\n      Point point1 = Point(20,20);\n      Point point2 = Point(40,0);\n      Point point3 = Point(60,40);\n      Point point4 = Point(80,20);\n\n      // Create an array of the points.\n      array&lt;Point&gt;^ curvePoints = {point1,point2,point3,point4};\n\n      // Create a GraphicsPath object and add a curve.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddCurve( curvePoints, 0, 3, 0.8f );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5\">    Public Sub AddCurveExample(ByVal e As PaintEventArgs)\n\n        &#39; Create some points.\n        Dim point1 As New Point(20, 20)\n        Dim point2 As New Point(40, 0)\n        Dim point3 As New Point(60, 40)\n        Dim point4 As New Point(80, 20)\n\n        &#39; Create an array of the points.\n        Dim curvePoints As Point() = {point1, point2, point3, point4}\n\n        &#39; Create a GraphicsPath object and add a curve.\n        Dim myPath As New GraphicsPath\n        myPath.AddCurve(curvePoints, 0, 3, 0.8F)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_System_Drawing_PointF___System_Int32_System_Int32_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddCurve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCurve(PointF[],Int32,Int32,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a spline curve to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the element in the <code>points</code> array that is used as the first point in the curve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>numberOfSegments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of segments used to draw the curve. A segment can be thought of as a line connecting two points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tension</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.  </p>\n<p> The curve begins at the point in the array specified by <code>offset</code>, and includes the number of points (segments) specified by <code>numberOfSegments</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddCurve(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddEllipse(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an ellipse to the current path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddEllipse (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<p> Creates a bounding rectangle that defines an ellipse.  </p>\n<p> Creates a path and adds the ellipse to the path.  </p>\n<p> Draws the path to screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6\">        private void AddEllipseExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and add an ellipse.\n            Rectangle myEllipse = new Rectangle(20, 20, 100, 50);\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddEllipse(myEllipse);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6\">private:\n   void AddEllipseExample( PaintEventArgs^ e )\n   {\n      // Create a path and add an ellipse.\n      Rectangle myEllipse = Rectangle(20,20,100,50);\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddEllipse( myEllipse );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6\">    Public Sub AddEllipseExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path and add an ellipse.\n        Dim myEllipse As New Rectangle(20, 20, 100, 50)\n        Dim myPath As New GraphicsPath\n        myPath.AddEllipse(myEllipse)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddEllipse(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an ellipse to the current path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddEllipse (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">AddEllipse(Rectangle)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddEllipse(Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an ellipse to the current path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddEllipse (int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">AddEllipse(Rectangle)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddEllipse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddEllipse(Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an ellipse to the current path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddEllipse (float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the bounding rectangle that defines the ellipse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddEllipse_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">AddEllipse(Rectangle)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Drawing_Point_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLine(Point,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a line segment to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the starting point of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the endpoint of the line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method adds the line segment defined by the specified points to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>. If there are previous lines or curves in the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AddLine(Int32,Int32,Int32,Int32)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Drawing_PointF_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLine(PointF,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a line segment to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the starting point of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the endpoint of the line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method adds the line segment defined by the specified points to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>. If there are previous lines or curves in the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AddLine(Int32,Int32,Int32,Int32)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLine(Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a line segment to the current figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLine (int x1, int y1, int x2, int y2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the starting point of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the starting point of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the endpoint of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the endpoint of the line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method adds the line segment defined by the specified points to the end of the current figure. If there are previous lines or curves in the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7\">        private void AddLineExample(PaintEventArgs e)\n        {\n                     \n            //Create a path and add a symetrical triangle using AddLine.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLine(30, 30, 60, 60);\n            myPath.AddLine(60, 60, 0, 60);\n            myPath.AddLine(0, 60, 30, 30);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7\">private:\n   void AddLineExample( PaintEventArgs^ e )\n   {\n      //Create a path and add a symetrical triangle using AddLine.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLine( 30, 30, 60, 60 );\n      myPath-&gt;AddLine( 60, 60, 0, 60 );\n      myPath-&gt;AddLine( 0, 60, 30, 30 );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7\">    Public Sub AddLineExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path and add a symetrical triangle using AddLine.\n        Dim myPath As New GraphicsPath\n        myPath.AddLine(30, 30, 60, 60)\n        myPath.AddLine(60, 60, 0, 60)\n        myPath.AddLine(0, 60, 30, 30)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLine(Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a line segment to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLine (float x1, float y1, float x2, float y2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the starting point of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the starting point of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the endpoint of the line.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the endpoint of the line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method adds the line segment defined by the specified points to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>. If there are previous lines or curves in the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddLine_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AddLine(Int32,Int32,Int32,Int32)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddLines_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLines(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Appends a series of connected line segments to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLines (System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points that define the line segments to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line. The <code>points</code> parameter specifies an array of endpoints. The first two specify the first line. Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of four points that describe a triangle.  </p>\n</li>\n<li><p>Creates a path and adds the array of lines.  </p>\n</li>\n<li><p>Draws the path to screen.  </p>\n<p>Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8\">        private void AddLinesExample(PaintEventArgs e)\n        {\n                     \n            // Create a symetrical triangle using an array of points.\n            Point[] myArray =\n                     {\n                         new Point(30,30),\n                         new Point(60,60),\n                         new Point(0,60),\n                         new Point(30,30)\n                     };\n                     \n            //Create a path and add lines.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLines(myArray);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8\">private:\n   void AddLinesExample( PaintEventArgs^ e )\n   {\n      // Create a symetrical triangle using an array of points.\n      array&lt;Point&gt;^ myArray = {Point(30,30),Point(60,60),Point(0,60),Point(30,30)};\n\n      //Create a path and add lines.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLines( myArray );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8\">    Public Sub AddLinesExample(ByVal e As PaintEventArgs)\n\n        &#39;Create a symetrical triangle using an array of points.\n        Dim myArray As Point() = {New Point(30, 30), New Point(60, 60), _\n        New Point(0, 60), New Point(30, 30)}\n        Dim myPath As New GraphicsPath\n        myPath.AddLines(myArray)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddLines_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLines(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Appends a series of connected line segments to the end of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLines (System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points that define the line segments to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line. The <code>points</code> parameter specifies an array of endpoints. The first two specify the first line. Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddLines(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddPath_System_Drawing_Drawing2D_GraphicsPath_System_Boolean_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPath(GraphicsPath,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Appends the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>addingPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>connect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path. A value of <code>true</code> specifies that (if possible) the first figure in the added path is part of the last figure in this path. A value of <code>false</code> specifies that the first figure in the added path is separate from the last figure in this path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates two paths one a right-side-up triangle and the other an up-side-down triangle.  </p>\n</li>\n<li><p>Adds the second path to the first.  </p>\n</li>\n<li><p>Draws the resultant path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9\">        private void AddPathExample(PaintEventArgs e)\n        {\n                     \n            // Create the first pathright side up triangle.\n            Point[] myArray =\n                     {\n                         new Point(30,30),\n                         new Point(60,60),\n                         new Point(0,60),\n                         new Point(30,30)\n                     };\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLines(myArray);\n                     \n            // Create the second pathinverted triangle.\n            Point[] myArray2 =\n                     {\n                         new Point(30,30),\n                         new Point(0,0),\n                         new Point(60,0),\n                         new Point(30,30)\n                     };\n            GraphicsPath myPath2 = new GraphicsPath();\n            myPath2.AddLines(myArray2);\n                     \n            // Add the second path to the first path.\n            myPath.AddPath(myPath2,true);\n                     \n            // Draw the combined path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9\">private:\n   void AddPathExample( PaintEventArgs^ e )\n   {\n      // Create the first pathright side up triangle.\n      array&lt;Point&gt;^ myArray = {Point(30,30),Point(60,60),Point(0,60),Point(30,30)};\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLines( myArray );\n\n      // Create the second pathinverted triangle.\n      array&lt;Point&gt;^ myArray2 = {Point(30,30),Point(0,0),Point(60,0),Point(30,30)};\n      GraphicsPath^ myPath2 = gcnew GraphicsPath;\n      myPath2-&gt;AddLines( myArray2 );\n\n      // Add the second path to the first path.\n      myPath-&gt;AddPath( myPath2, true );\n\n      // Draw the combined path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9\">    Public Sub AddPathExample(ByVal e As PaintEventArgs)\n\n        &#39; Creates a symetrical triangle and adds an inverted triangle.\n\n        &#39; Create the first path - right side up triangle.\n        Dim myArray As Point() = {New Point(30, 30), New Point(60, 60), _\n        New Point(0, 60), New Point(30, 30)}\n        Dim myPath As New GraphicsPath\n        myPath.AddLines(myArray)\n\n        &#39; Create the second path - inverted triangle.\n        Dim myArray2 As Point() = {New Point(30, 30), New Point(0, 0), _\n        New Point(60, 0), New Point(30, 30)}\n        Dim myPath2 As New GraphicsPath\n        myPath2.AddLines(myArray2)\n\n        &#39; Add the second path to the first path.\n        myPath.AddPath(myPath2, True)\n\n        &#39; Draw the combined path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Drawing_Rectangle_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPie(Rectangle,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the outline of a pie shape to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the pie section, measured in degrees clockwise from <code>startAngle</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline. The partial outline begins at <code>startAngle</code> (measured clockwise from the x-axis) and ends at <code>startAngle</code> + <code>sweepAngle</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_System_Single_\" data-linktype=\"relative-path\">AddPie(Int32,Int32,Int32,Int32,Single,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPie(Int32,Int32,Int32,Int32,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the outline of a pie shape to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the pie section, measured in degrees clockwise from <code>startAngle</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline. The partial outline begins at <code>startAngle</code> (measured clockwise from the x-axis) and ends at <code>startAngle</code> + <code>sweepAngle</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code creates a graphics path, adds the pie shape, and then draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10\">        private void AddPieExample(PaintEventArgs e)\n        {\n                     \n            // Create a pie slice of a circle using the AddPie method.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddPie(20, 20, 70, 70, -45, 90);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10\">private:\n   void AddPieExample( PaintEventArgs^ e )\n   {\n      // Create a pie slice of a circle using the AddPie method.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddPie( 20, 20, 70, 70, -45, 90 );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10\">    Public Sub AddPieExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a pie slice of a circle using the AddPie method.\n        Dim myPath As New GraphicsPath\n        myPath.AddPie(20, 20, 70, 70, -45, 90)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddPie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPie(Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the outline of a pie shape to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sweepAngle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle between <code>startAngle</code> and the end of the pie section, measured in degrees clockwise from <code>startAngle</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline. The partial outline begins at <code>startAngle</code> (measured clockwise from the x-axis) and ends at <code>startAngle</code> + <code>sweepAngle</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddPie_System_Int32_System_Int32_System_Int32_System_Int32_System_Single_System_Single_\" data-linktype=\"relative-path\">AddPie(Int32,Int32,Int32,Int32,Single,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddPolygon_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPolygon(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a polygon to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPolygon (System.Drawing.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that defines the polygon to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The points in the <code>points</code> array specify the vertices of a polygon. If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of points that defines a polygon.  </p>\n</li>\n<li><p>Creates a path and adds the polygon to the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11\">        private void AddPolygonExample(PaintEventArgs e)\n        {\n                     \n            // Create an array of points.\n            Point[] myArray =\n                     {\n                         new Point(23, 20),\n                         new Point(40, 10),\n                         new Point(57, 20),\n                         new Point(50, 40),\n                         new Point(30, 40)\n                     };\n                     \n            // Create a GraphicsPath object and add a polygon.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddPolygon(myArray);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11\">private:\n   void AddPolygonExample( PaintEventArgs^ e )\n   {\n      // Create an array of points.\n      array&lt;Point&gt;^ myArray = {Point(23,20),Point(40,10),Point(57,20),Point(50,40),Point(30,40)};\n\n      // Create a GraphicsPath object and add a polygon.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddPolygon( myArray );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11\">    Public Sub AddPolygonExample(ByVal e As PaintEventArgs)\n\n        &#39; Create an array of points.\n        Dim myArray As Point() = {New Point(23, 20), New Point(40, 10), _\n        New Point(57, 20), New Point(50, 40), New Point(30, 40)}\n\n        &#39; Create a GraphicsPath object and add a polygon.\n        Dim myPath As New GraphicsPath\n        myPath.AddPolygon(myArray)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddPolygon_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddPolygon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPolygon(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a polygon to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPolygon (System.Drawing.PointF[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that defines the polygon to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The points in the <code>points</code> array specify the vertices of a polygon. If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddPolygon(Point&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangle_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRectangle(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a rectangle to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRectangle (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the rectangle to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Creates a rectangle and adds the rectangle to the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12\">        private void AddRectangleExample(PaintEventArgs e)\n        {\n                     \n            // Create a GraphicsPath object and add a rectangle to it.\n            GraphicsPath myPath = new GraphicsPath();\n            Rectangle pathRect = new Rectangle(20, 20, 100, 200);\n            myPath.AddRectangle(pathRect);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12\">private:\n   void AddRectangleExample( PaintEventArgs^ e )\n   {\n      // Create a GraphicsPath object and add a rectangle to it.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      Rectangle pathRect = Rectangle(20,20,100,200);\n      myPath-&gt;AddRectangle( pathRect );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12\">    Public Sub AddRectangleExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a GraphicsPath object and add a rectangle to it.\n        Dim myPath As New GraphicsPath\n        Dim pathRect As New Rectangle(20, 20, 100, 200)\n        myPath.AddRectangle(pathRect)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangle_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRectangle(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a rectangle to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRectangle (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangle to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddRectangle_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">AddRectangle(Rectangle)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangles_System_Drawing_Rectangle___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRectangles(Rectangle[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a series of rectangles to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRectangles (System.Drawing.Rectangle[] rects);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structures that represents the rectangles to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Creates an array of rectangles and adds the rectangles to the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13\">        private void AddRectanglesExample(PaintEventArgs e)\n        {\n                     \n            // Adds a pattern of rectangles to a GraphicsPath object.\n            GraphicsPath myPath = new GraphicsPath();\n            Rectangle[] pathRects =\n                     {\n                         new Rectangle(20,20,100,200),\n                         new Rectangle(40,40,120,220),\n                         new Rectangle(60,60,240,140)\n                     };\n            myPath.AddRectangles(pathRects);\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13\">private:\n   void AddRectanglesExample( PaintEventArgs^ e )\n   {\n      // Adds a pattern of rectangles to a GraphicsPath object.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      array&lt;Rectangle&gt;^ pathRects = {Rectangle(20,20,100,200),Rectangle(40,40,120,220),Rectangle(60,60,240,140)};\n      myPath-&gt;AddRectangles( pathRects );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13\">    Public Sub AddRectanglesExample(ByVal e As PaintEventArgs)\n\n        &#39; Adds a pattern of rectangles to a GraphicsPath object.\n        Dim myPath As New GraphicsPath\n        Dim pathRects As Rectangle() = {New Rectangle(20, 20, 100, 200), _\n        New Rectangle(40, 40, 120, 220), New Rectangle(60, 60, 240, 140)}\n        myPath.AddRectangles(pathRects)\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangles_System_Drawing_RectangleF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddRectangles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRectangles(RectangleF[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds a series of rectangles to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRectangles (System.Drawing.RectangleF[] rects);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that represents the rectangles to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [AddRectangles(Rectangle&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Point_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddString(String,FontFamily,Int32,Single,Point,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a text string to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>family</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a> that represents the name of the font with which the test is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>emSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the em square box that bounds the character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the point where the text starts.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies text formatting information, such as line spacing and alignment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Sets up string and font arguments.  </p>\n</li>\n<li><p>Adds the string to the path.  </p>\n</li>\n<li><p>Draws the string to the screen.  </p>\n<p>There are two important things to be pointed out. First, notice that the <code>fontStyle</code> argument is cast as an integer. The AddString method requires this so that two or more <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a> members can be combined to create the desired font style (in this case, <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a> and <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a>). Secondly, notice that the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a> method is used rather than the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPath_\" data-linktype=\"relative-path\">DrawPath</a> method. If <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a> is used, solid text is rendered, whereas if <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPath_\" data-linktype=\"relative-path\">DrawPath</a> is used, the text will be an outline style.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14\">        private void AddStringExample(PaintEventArgs e)\n        {\n                     \n            // Create a GraphicsPath object.\n            GraphicsPath myPath = new GraphicsPath();\n                     \n            // Set up all the string parameters.\n            string stringText = &quot;Sample Text&quot;;\n            FontFamily family = new FontFamily(&quot;Arial&quot;);\n            int fontStyle = (int)FontStyle.Italic;\n            int emSize = 26;\n            Point origin = new Point(20, 20);\n            StringFormat format = StringFormat.GenericDefault;\n                     \n            // Add the string to the path.\n            myPath.AddString(stringText,\n                family,\n                fontStyle,\n                emSize,\n                origin,\n                format);\n                     \n            //Draw the path to the screen.\n            e.Graphics.FillPath(Brushes.Black, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14\">private:\n   void AddStringExample( PaintEventArgs^ e )\n   {\n      // Create a GraphicsPath object.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n\n      // Set up all the string parameters.\n      String^ stringText = &quot;Sample Text&quot;;\n      FontFamily^ family = gcnew FontFamily( &quot;Arial&quot; );\n      int fontStyle = (int)FontStyle::Italic;\n      int emSize = 26;\n      Point origin = Point(20,20);\n      StringFormat^ format = StringFormat::GenericDefault;\n\n      // Add the string to the path.\n      myPath-&gt;AddString( stringText, family, fontStyle, (float)emSize, origin, format );\n\n      //Draw the path to the screen.\n      e-&gt;Graphics-&gt;FillPath( Brushes::Black, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14\">    Public Sub AddStringExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a GraphicsPath object.\n        Dim myPath As New GraphicsPath\n\n        &#39; Set up all the string parameters.\n        Dim stringText As String = &quot;Sample Text&quot;\n        Dim family As New FontFamily(&quot;Arial&quot;)\n        Dim myfontStyle As Integer = CInt(FontStyle.Italic)\n        Dim emSize As Integer = 26\n        Dim origin As New Point(20, 20)\n        Dim format As StringFormat = StringFormat.GenericDefault\n\n        &#39; Add the string to the path.\n        myPath.AddString(stringText, family, myfontStyle, emSize, _\n        origin, format)\n\n        &#39;Draw the path to the screen.\n        e.Graphics.FillPath(Brushes.Black, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_PointF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddString(String,FontFamily,Int32,Single,PointF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a text string to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>family</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a> that represents the name of the font with which the test is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>emSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the em square box that bounds the character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the point where the text starts.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies text formatting information, such as line spacing and alignment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Point_System_Drawing_StringFormat_\" data-linktype=\"relative-path\">AddString(String,FontFamily,Int32,Single,Point,StringFormat)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Rectangle_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a text string to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>family</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a> that represents the name of the font with which the test is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>emSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the em square box that bounds the character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the rectangle that bounds the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies text formatting information, such as line spacing and alignment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Point_System_Drawing_StringFormat_\" data-linktype=\"relative-path\">AddString(String,FontFamily,Int32,Single,Point,StringFormat)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_RectangleF_System_Drawing_StringFormat_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_AddString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a text string to this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>family</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontfamily\" data-linktype=\"relative-path\">FontFamily</a> that represents the name of the font with which the test is drawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>style</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.fontstyle\" data-linktype=\"relative-path\">FontStyle</a> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>emSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the em square box that bounds the character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>layoutRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangle that bounds the text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.stringformat\" data-linktype=\"relative-path\">StringFormat</a> that specifies text formatting information, such as line spacing and alignment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_AddString_System_String_System_Drawing_FontFamily_System_Int32_System_Single_System_Drawing_Point_System_Drawing_StringFormat_\" data-linktype=\"relative-path\">AddString(String,FontFamily,Int32,Single,Point,StringFormat)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_ClearMarkers\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_ClearMarkers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearMarkers()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all markers from this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearMarkers ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_SetMarkers_\" data-linktype=\"relative-path\">SetMarkers</a> method to create a marker at the current location in a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>. Use the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspathiterator#System_Drawing_Drawing2D_GraphicsPathIterator_NextMarker_\" data-linktype=\"relative-path\">NextMarker</a> method to iterate through the existing markers in a path.  </p>\n<p> Markers are used to separate groups of subpaths. One or more subpaths can be contained between two markers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds several objects to the path.  </p>\n</li>\n<li><p>Adds markers to the path.  </p>\n</li>\n<li><p>Clears all markers from the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15\">        private void ClearMarkersExample(PaintEventArgs e)\n        {\n                     \n            // Set several markers in a path.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddEllipse(0, 0, 100, 200);\n            myPath.SetMarkers();\n            myPath.AddLine(new Point(100, 100), new Point(200, 100));\n            Rectangle rect = new Rectangle(200, 0, 100, 200);\n            myPath.AddRectangle(rect);\n            myPath.SetMarkers();\n            myPath.AddLine(new Point(250, 200), new Point(250, 300));\n            myPath.SetMarkers();\n                     \n            // Clear the markers.\n            myPath.ClearMarkers();\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15\">private:\n   void ClearMarkersExample( PaintEventArgs^ e )\n   {\n      // Set several markers in a path.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddEllipse( 0, 0, 100, 200 );\n      myPath-&gt;SetMarkers();\n      myPath-&gt;AddLine( Point(100,100), Point(200,100) );\n      Rectangle rect = Rectangle(200,0,100,200);\n      myPath-&gt;AddRectangle( rect );\n      myPath-&gt;SetMarkers();\n      myPath-&gt;AddLine( Point(250,200), Point(250,300) );\n      myPath-&gt;SetMarkers();\n\n      // Clear the markers.\n      myPath-&gt;ClearMarkers();\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15\">    Public Sub ClearMarkersExample(ByVal e As PaintEventArgs)\n\n        &#39; Set several markers in a path.\n        Dim myPath As New GraphicsPath\n        myPath.AddEllipse(0, 0, 100, 200)\n        myPath.SetMarkers()\n        myPath.AddLine(New Point(100, 100), New Point(200, 100))\n        Dim rect As New Rectangle(200, 0, 100, 200)\n        myPath.AddRectangle(rect)\n        myPath.SetMarkers()\n        myPath.AddLine(New Point(250, 200), New Point(250, 300))\n        myPath.SetMarkers()\n\n        &#39; Clear the markers.\n        myPath.ClearMarkers()\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> this method creates, cast as an object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds several figures to the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n</li>\n<li><p>Clones a copy of that path.  </p>\n</li>\n<li><p>Draws the new path to the screen.  </p>\n<p>Notice that the call the Clone method must be cast as a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16\">        private void CloneExample(PaintEventArgs e)\n        {\n                     \n            // Set several markers in a path.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddEllipse(0, 0, 100, 200);\n            myPath.AddLine(new Point(100, 100), new Point(200, 100));\n            Rectangle rect = new Rectangle(200, 0, 100, 200);\n            myPath.AddRectangle(rect);\n            myPath.AddLine(new Point(250, 200), new Point(250, 300));\n                     \n            // Draw the path to the screen.\n            Pen myPen = new Pen(Color.Black, 2);\n            e.Graphics.DrawPath(myPen, myPath);\n                     \n            // Clone a copy of myPath.\n            GraphicsPath myPath2 = (GraphicsPath)myPath.Clone();\n                     \n            // Draw the path to the screen.\n            Pen myPen2 = new Pen(Color.Red, 4);\n            e.Graphics.DrawPath(myPen2, myPath2);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16\">private:\n   void CloneExample( PaintEventArgs^ e )\n   {\n      // Set several markers in a path.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddEllipse( 0, 0, 100, 200 );\n      myPath-&gt;AddLine( Point(100,100), Point(200,100) );\n      Rectangle rect = Rectangle(200,0,100,200);\n      myPath-&gt;AddRectangle( rect );\n      myPath-&gt;AddLine( Point(250,200), Point(250,300) );\n\n      // Draw the path to the screen.\n      Pen^ myPen = gcnew Pen( Color::Black,2.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen, myPath );\n\n      // Clone a copy of myPath.\n      GraphicsPath^ myPath2 = dynamic_cast&lt;GraphicsPath^&gt;(myPath-&gt;Clone());\n\n      // Draw the path to the screen.\n      Pen^ myPen2 = gcnew Pen( Color::Red,4.0f );\n      e-&gt;Graphics-&gt;DrawPath( myPen2, myPath2 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16\">    Public Sub CloneExample(ByVal e As PaintEventArgs)\n\n        &#39; Set several markers in a path.\n        Dim myPath As New GraphicsPath\n        myPath.AddEllipse(0, 0, 100, 200)\n        myPath.AddLine(New Point(100, 100), New Point(200, 100))\n        Dim rect As New Rectangle(200, 0, 100, 200)\n        myPath.AddRectangle(rect)\n        myPath.AddLine(New Point(250, 200), New Point(250, 300))\n\n        &#39; Draw the path to the screen.\n        Dim myPen As New Pen(Color.Black, 2)\n        e.Graphics.DrawPath(myPen, myPath)\n\n        &#39; Clone a copy of myPath.\n        Dim myPath2 As GraphicsPath = CType(myPath.Clone(), GraphicsPath)\n\n        &#39; Draw the path to the screen.\n        Dim myPen2 As New Pen(Color.Red, 4)\n        e.Graphics.DrawPath(myPen2, myPath2)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_CloseAllFigures\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_CloseAllFigures_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloseAllFigures()</div>        \r\n          </div>\r\n    \r\n            <p>Closes all open figures in this path and starts a new figure. It closes each open figure by connecting a line from its endpoint to its starting point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CloseAllFigures ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds several open figures to the path.  </p>\n</li>\n<li><p>Closes all figures in the path.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17\">        private void CloseAllFiguresExample(PaintEventArgs e)\n        {\n                     \n            // Create a path containing several open-ended figures.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.StartFigure();\n            myPath.AddLine(new Point(10, 10), new Point(150, 10));\n            myPath.AddLine(new Point(150, 10), new Point(10, 150));\n            myPath.StartFigure();\n            myPath.AddArc(200, 200, 100, 100, 0, 90);\n            myPath.StartFigure();\n            Point point1 = new Point(300, 300);\n            Point point2 = new Point(400, 325);\n            Point point3 = new Point(400, 375);\n            Point point4 = new Point(300, 400);\n            Point[] points = {point1, point2, point3, point4};\n            myPath.AddCurve(points);\n                     \n            // Close all the figures.\n            myPath.CloseAllFigures();\n                     \n            // Draw the path to the screen.\n            e.Graphics.DrawPath(new Pen(Color.Black, 3), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17\">private:\n   void CloseAllFiguresExample( PaintEventArgs^ e )\n   {\n      // Create a path containing several open-ended figures.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddLine( Point(10,10), Point(150,10) );\n      myPath-&gt;AddLine( Point(150,10), Point(10,150) );\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddArc( 200, 200, 100, 100, 0, 90 );\n      myPath-&gt;StartFigure();\n      Point point1 = Point(300,300);\n      Point point2 = Point(400,325);\n      Point point3 = Point(400,375);\n      Point point4 = Point(300,400);\n      array&lt;Point&gt;^ points = {point1,point2,point3,point4};\n      myPath-&gt;AddCurve( points );\n\n      // Close all the figures.\n      myPath-&gt;CloseAllFigures();\n\n      // Draw the path to the screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Black,3.0f ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17\">    Public Sub CloseAllFiguresExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path containing several open-ended figures.\n        Dim myPath As New GraphicsPath\n        myPath.StartFigure()\n        myPath.AddLine(New Point(10, 10), New Point(150, 10))\n        myPath.AddLine(New Point(150, 10), New Point(10, 150))\n        myPath.StartFigure()\n        myPath.AddArc(200, 200, 100, 100, 0, 90)\n        myPath.StartFigure()\n        Dim point1 As New Point(300, 300)\n        Dim point2 As New Point(400, 325)\n        Dim point3 As New Point(400, 375)\n        Dim point4 As New Point(300, 400)\n        Dim points As Point() = {point1, point2, point3, point4}\n        myPath.AddCurve(points)\n\n        &#39; close all the figures.\n        myPath.CloseAllFigures()\n\n        &#39; Draw the path to the screen.\n        e.Graphics.DrawPath(New Pen(Color.Black, 3), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_CloseFigure\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_CloseFigure_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloseFigure()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the current figure and starts a new figure. If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CloseFigure ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle. The path is then drawn to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18\">        private void CloseFigureExample(PaintEventArgs e)\n        {\n                     \n            // Create a path consisting of two, open-ended lines and close\n                     \n            // the lines using CloseFigure.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.StartFigure();\n            myPath.AddLine(new Point(10, 10), new Point(200, 10));\n            myPath.AddLine(new Point(200, 10), new Point(200, 200));\n            myPath.CloseFigure();\n                     \n            // Draw the path to the screen.\n            e.Graphics.DrawPath(Pens.Black, myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18\">private:\n   void CloseFigureExample( PaintEventArgs^ e )\n   {\n      // Create a path consisting of two, open-ended lines and close\n      // the lines using CloseFigure.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddLine( Point(10,10), Point(200,10) );\n      myPath-&gt;AddLine( Point(200,10), Point(200,200) );\n      myPath-&gt;CloseFigure();\n\n      // Draw the path to the screen.\n      e-&gt;Graphics-&gt;DrawPath( Pens::Black, myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18\">    Public Sub CloseFigureExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path consisting of two, open-ended lines and close\n\n        &#39; the lines using CloseFigure.\n        Dim myPath As New GraphicsPath\n        myPath.StartFigure()\n        myPath.AddLine(New Point(10, 10), New Point(200, 10))\n        myPath.AddLine(New Point(200, 10), New Point(200, 200))\n        myPath.CloseFigure()\n\n        &#39; Draw the path to the screen.\n        e.Graphics.DrawPath(Pens.Black, myPath)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Dispose\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Dispose allows the resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to be reallocated for other purposes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Finalize\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~GraphicsPath ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Flatten\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Flatten_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flatten()</div>        \r\n          </div>\r\n    \r\n            <p>Converts each curve in this path into a sequence of connected line segments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flatten ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_Flatten_System_Drawing_Drawing2D_Matrix_System_Single_\" data-linktype=\"relative-path\">Flatten(Matrix,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Flatten_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Flatten_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flatten(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified transform and then converts each curve in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> into a sequence of connected line segments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flatten (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which to transform this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> before flattening.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_Flatten_System_Drawing_Drawing2D_Matrix_System_Single_\" data-linktype=\"relative-path\">Flatten(Matrix,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Flatten_System_Drawing_Drawing2D_Matrix_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Flatten_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flatten(Matrix,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Converts each curve in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> into a sequence of connected line segments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which to transform this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> before flattening.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flatness</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies the maximum permitted error between the curve and its flattened approximation. A value of 0.25 is the default. Reducing the flatness value will increase the number of line segments in the approximation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a graphics path and a translation matrix.  </p>\n</li>\n<li><p>Adds a curve to the path using four points.  </p>\n</li>\n<li><p>Draws the path (curve) to the screen, using a black pen.  </p>\n</li>\n<li><p>Shifts the curve down 10 pixels and flattens it.  </p>\n</li>\n<li><p>Draws the curve to the screen using, a red pen.  </p>\n<p>Notice that the red curve has flattened lines connecting the points.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19\">        private void FlattenExample(PaintEventArgs e)\n        {\n            GraphicsPath myPath = new GraphicsPath();\n            Matrix translateMatrix = new Matrix();\n            translateMatrix.Translate(0, 10);\n            Point point1 = new Point(20, 100);\n            Point point2 = new Point(70, 10);\n            Point point3 = new Point(130, 200);\n            Point point4 = new Point(180, 100);\n            Point[] points = {point1, point2, point3, point4};\n            myPath.AddCurve(points);\n            e.Graphics.DrawPath(new Pen(Color.Black, 2), myPath);\n            myPath.Flatten(translateMatrix, 10f);\n            e.Graphics.DrawPath(new Pen(Color.Red, 1), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19\">private:\n   void FlattenExample( PaintEventArgs^ e )\n   {\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      Matrix^ translateMatrix = gcnew Matrix;\n      translateMatrix-&gt;Translate( 0, 10 );\n      Point point1 = Point(20,100);\n      Point point2 = Point(70,10);\n      Point point3 = Point(130,200);\n      Point point4 = Point(180,100);\n      array&lt;Point&gt;^ points = {point1,point2,point3,point4};\n      myPath-&gt;AddCurve( points );\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Black,2.0f ), myPath );\n      myPath-&gt;Flatten( translateMatrix, 10.0f );\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Red,1.0f ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19\">    Public Sub FlattenExample(ByVal e As PaintEventArgs)\n        Dim myPath As New GraphicsPath\n        Dim translateMatrix As New Matrix\n        translateMatrix.Translate(0, 10)\n        Dim point1 As New Point(20, 100)\n        Dim point2 As New Point(70, 10)\n        Dim point3 As New Point(130, 200)\n        Dim point4 As New Point(180, 100)\n        Dim points As Point() = {point1, point2, point3, point4}\n        myPath.AddCurve(points)\n        e.Graphics.DrawPath(New Pen(Color.Black, 2), myPath)\n        myPath.Flatten(translateMatrix, 10.0F)\n        e.Graphics.DrawPath(New Pen(Color.Red, 1), myPath)\n    End Sub\n    &#39;FlattenExample\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_GetBounds\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_GetBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBounds()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF GetBounds ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a &quot;loose fit&quot; to the bounded path. The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a graphics path.  </p>\n</li>\n<li><p>Adds an ellipse (circle) to it and draws it to the screen.  </p>\n</li>\n<li><p>Retrieves the bounding rectangle for the circle with a call to GetBounds and draws the rectangle to the screen.  </p>\n</li>\n<li><p>Creates a second graphics path.  </p>\n</li>\n<li><p>Adds a circle and widens the path to a width of 10.  </p>\n</li>\n<li><p>Draws the path to the screen.  </p>\n</li>\n<li><p>Retrieves the bounding rectangle for the second circle.  </p>\n</li>\n<li><p>Draws the bounding rectangle to the screen.  </p>\n</li>\n<li><p>Displays the rectangle size in a dialog box.  </p>\n<p>Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20\">        public void GetBoundsExample(PaintEventArgs e)\n        {\n                     \n            // Create path number 1 and a Pen for drawing.\n            GraphicsPath myPath = new GraphicsPath();\n            Pen pathPen = new Pen(Color.Black, 1);\n                     \n            // Add an Ellipse to the path and Draw it (circle in start\n                     \n            // position).\n            myPath.AddEllipse(20, 20, 100, 100);\n            e.Graphics.DrawPath(pathPen, myPath);\n                     \n            // Get the path bounds for Path number 1 and draw them.\n            RectangleF boundRect = myPath.GetBounds();\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1),\n                boundRect.X,\n                boundRect.Y,\n                boundRect.Height,\n                boundRect.Width);\n                     \n            // Create a second graphics path and a wider Pen.\n            GraphicsPath myPath2 = new GraphicsPath();\n            Pen pathPen2 = new Pen(Color.Black, 10);\n                     \n            // Create a new ellipse with a width of 10.\n            myPath2.AddEllipse(150, 20, 100, 100);\n            myPath2.Widen(pathPen2);\n            e.Graphics.FillPath(Brushes.Black, myPath2);\n                     \n            // Get the second path bounds.\n            RectangleF boundRect2 = myPath2.GetBounds();\n                     \n            // Draw the bounding rectangle.\n            e.Graphics.DrawRectangle(new Pen(Color.Red, 1),\n                boundRect2.X,\n                boundRect2.Y,\n                boundRect2.Height,\n                boundRect2.Width);\n                     \n            // Display the rectangle size.\n            MessageBox.Show(boundRect2.ToString());\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20\">public:\n   void GetBoundsExample( PaintEventArgs^ e )\n   {\n      // Create path number 1 and a Pen for drawing.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      Pen^ pathPen = gcnew Pen( Color::Black,1.0f );\n\n      // Add an Ellipse to the path and Draw it (circle in start\n      // position).\n      myPath-&gt;AddEllipse( 20, 20, 100, 100 );\n      e-&gt;Graphics-&gt;DrawPath( pathPen, myPath );\n\n      // Get the path bounds for Path number 1 and draw them.\n      RectangleF boundRect = myPath-&gt;GetBounds();\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), boundRect.X, boundRect.Y, boundRect.Height, boundRect.Width );\n\n      // Create a second graphics path and a wider Pen.\n      GraphicsPath^ myPath2 = gcnew GraphicsPath;\n      Pen^ pathPen2 = gcnew Pen( Color::Black,10.0f );\n\n      // Create a new ellipse with a width of 10.\n      myPath2-&gt;AddEllipse( 150, 20, 100, 100 );\n      myPath2-&gt;Widen( pathPen2 );\n      e-&gt;Graphics-&gt;FillPath( Brushes::Black, myPath2 );\n\n      // Get the second path bounds.\n      RectangleF boundRect2 = myPath2-&gt;GetBounds();\n\n      // Draw the bounding rectangle.\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red,1.0f ), boundRect2.X, boundRect2.Y, boundRect2.Height, boundRect2.Width );\n\n      // Display the rectangle size.\n      MessageBox::Show( boundRect2.ToString() );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20\">    Public Sub GetBoundsExample(ByVal e As PaintEventArgs)\n\n        &#39; Create path number 1 and a Pen for drawing.\n        Dim myPath As New GraphicsPath\n        Dim pathPen As New Pen(Color.Black, 1)\n\n        &#39; Add an Ellipse to the path and Draw it (circle in start\n\n        &#39; position).\n        myPath.AddEllipse(20, 20, 100, 100)\n        e.Graphics.DrawPath(pathPen, myPath)\n\n        &#39; Get the path bounds for Path number 1 and draw them.\n        Dim boundRect As RectangleF = myPath.GetBounds()\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), boundRect.X, _\n        boundRect.Y, boundRect.Height, boundRect.Width)\n\n        &#39; Create a second graphics path and a wider Pen.\n        Dim myPath2 As New GraphicsPath\n        Dim pathPen2 As New Pen(Color.Black, 10)\n\n        &#39; Create a new ellipse with a width of 10.\n        myPath2.AddEllipse(150, 20, 100, 100)\n        myPath2.Widen(pathPen2)\n        e.Graphics.FillPath(Brushes.Black, myPath2)\n\n        &#39; Get the second path bounds.\n        Dim boundRect2 As RectangleF = myPath2.GetBounds()\n\n        &#39; Show the bounds in a message box.\n        e.Graphics.DrawString(&quot;Rectangle2 Bounds: &quot; + _\n        boundRect2.ToString(), New Font(&quot;Arial&quot;, 8), Brushes.Black, _\n        20, 150)\n\n        &#39; Draw the bounding rectangle.\n        e.Graphics.DrawRectangle(New Pen(Color.Red, 1), boundRect2.X, _\n        boundRect2.Y, boundRect2.Height, boundRect2.Width)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_GetBounds_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_GetBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBounds(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when this path is transformed by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a &quot;loose fit&quot; to the bounded path. The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_GetBounds\" data-linktype=\"relative-path\">GetBounds()</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_GetBounds_System_Drawing_Drawing2D_Matrix_System_Drawing_Pen_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_GetBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBounds(Matrix,Pen)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when the current path is transformed by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> and drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> with which to draw the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a &quot;loose fit&quot; to the bounded path. The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_GetBounds\" data-linktype=\"relative-path\">GetBounds()</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_GetLastPoint\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_GetLastPoint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLastPoint()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the last point in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> array of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.PointF GetLastPoint ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the last point in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code creates a path, adds a line to the path, and then gets the last point in the path.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21\">        private void GetLastPointExample(PaintEventArgs e)\n        {\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLine(20, 20, 100, 20);\n            PointF lastPoint = myPath.GetLastPoint();\n            if(lastPoint.IsEmpty == false)\n            {\n                string lastPointXString = lastPoint.X.ToString();\n                string lastPointYString = lastPoint.Y.ToString();\n                MessageBox.Show(lastPointXString + &quot;, &quot; + lastPointYString);\n            }\n            else\n                MessageBox.Show(&quot;lastPoint is empty&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21\">private:\n   void GetLastPointExample( PaintEventArgs^ /*e*/ )\n   {\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLine( 20, 20, 100, 20 );\n      PointF lastPoint = myPath-&gt;GetLastPoint();\n      if ( lastPoint.IsEmpty == false )\n      {\n         String^ lastPointXString = lastPoint.X.ToString();\n         String^ lastPointYString = lastPoint.Y.ToString();\n         MessageBox::Show( String::Concat( lastPointXString, &quot;, &quot;, lastPointYString ) );\n      }\n      else\n            MessageBox::Show( &quot;lastPoint is empty&quot; );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21\">    Public Sub GetLastPointExample(ByVal e As PaintEventArgs)\n        Dim myPath As New GraphicsPath\n        myPath.AddLine(20, 20, 100, 20)\n        Dim lastPoint As PointF = myPath.GetLastPoint()\n        If lastPoint.IsEmpty = False Then\n            Dim lastPointXString As String = lastPoint.X.ToString()\n            Dim lastPointYString As String = lastPoint.Y.ToString()\n            MessageBox.Show((lastPointXString + &quot;, &quot; + lastPointYString))\n        Else\n            MessageBox.Show(&quot;lastPoint is empty&quot;)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_Point_System_Drawing_Pen_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(Point,Pen)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that specifies the location to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_PointF_System_Drawing_Pen_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(PointF,Pen)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that specifies the location to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_Point_System_Drawing_Pen_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(Point,Pen,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that specifies the location to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> as drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point. The coordinates of the point to be tested are given in world coordinates. The transform matrix of <code>graphics</code> is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Drawing_PointF_System_Drawing_Pen_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(PointF,Pen,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that specifies the location to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> as drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point. The coordinates of the point to be tested are given in world coordinates. The transform matrix of <code>graphics</code> is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(Int32,Int32,Pen)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Single_System_Single_System_Drawing_Pen_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(Single,Single,Pen)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> as drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point. The coordinates of the point to be tested are given in world coordinates. The transform matrix of <code>graphics</code> is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds a rectangle to the path.  </p>\n</li>\n<li><p>Creates a wide pen and widens the path with that pen (to make the example clearer),  </p>\n</li>\n<li><p>Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling IsOutlineVisible.  </p>\n<p>The result is shown in the message box (in this case, true). In other words the edge is rendered over that point.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22\">        public void IsOutlineVisibleExample(PaintEventArgs e)\n        {\n            GraphicsPath myPath = new GraphicsPath();\n            Rectangle rect = new Rectangle(20, 20, 100, 100);\n            myPath.AddRectangle(rect);\n            Pen testPen = new Pen(Color.Black, 20);\n            myPath.Widen(testPen);\n            e.Graphics.FillPath(Brushes.Black, myPath);\n            bool visible = myPath.IsOutlineVisible(100, 50, testPen,\n                e.Graphics);\n            MessageBox.Show(&quot;visible = &quot; + visible.ToString());\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22\">public:\n   void IsOutlineVisibleExample( PaintEventArgs^ e )\n   {\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      Rectangle rect = Rectangle(20,20,100,100);\n      myPath-&gt;AddRectangle( rect );\n      Pen^ testPen = gcnew Pen( Color::Black,20.0f );\n      myPath-&gt;Widen( testPen );\n      e-&gt;Graphics-&gt;FillPath( Brushes::Black, myPath );\n      bool visible = myPath-&gt;IsOutlineVisible( 100, 50, testPen, e-&gt;Graphics );\n      MessageBox::Show( String::Format( &quot;visible = {0}&quot;, visible ) );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22\">    Public Sub IsOutlineVisibleExample(ByVal e As PaintEventArgs)\n        Dim myPath As New GraphicsPath\n        Dim rect As New Rectangle(20, 20, 100, 100)\n        myPath.AddRectangle(rect)\n        Dim testPen As New Pen(Color.Black, 20)\n        myPath.Widen(testPen)\n        e.Graphics.FillPath(Brushes.Black, myPath)\n        Dim visible As Boolean = myPath.IsOutlineVisible(100, 50, _\n        testPen, e.Graphics)\n        MessageBox.Show((&quot;visible = &quot; + visible.ToString()))\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Single_System_Single_System_Drawing_Pen_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOutlineVisible(Single,Single,Pen,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> when drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within (under) the outline of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> as drawn with the specified <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests to see if the outline of a given path is rendered visible at the specified point. The coordinates of the point to be tested are given in world coordinates. The transform matrix of the <code>graphics</code> parameter is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsOutlineVisible_System_Int32_System_Int32_System_Drawing_Pen_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsOutlineVisible(Int32,Int32,Pen,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the point to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <code>GraphicsPath.IsVisible Method (Int32, Int32, Graphics)</code>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.PointF point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the point to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsVisible(Int32,Int32,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_Point_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Point,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The coordinates of the point to be tested are given in world coordinates. The transform matrix of the <code>graphics</code> parameter is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <code>GraphicsPath.IsVisible Method (Int32, Int32, Graphics)</code>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Drawing_PointF_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(PointF,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The coordinates of the point to be tested are given in world coordinates. The transform matrix of the <code>graphics</code> parameter is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsVisible(Int32,Int32,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsVisible(Int32,Int32,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsVisible(Int32,Int32,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The coordinates of the point to be tested are given in world coordinates. The transform matrix of <code>graphics</code> is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path and adds an ellipse to the path.  </p>\n</li>\n<li><p>Tests whether the specified point is contained within the path.  </p>\n</li>\n<li><p>Displays the result in a dialog box.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23\">        private void IsVisibleExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and add an ellipse.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddEllipse(0, 0, 100, 100);\n                     \n            // Test the visibility of point (50, 50).\n            bool visible = myPath.IsVisible(50, 50, e.Graphics);\n                     \n            // Show the result.\n            MessageBox.Show(visible.ToString());\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23\">private:\n   void IsVisibleExample( PaintEventArgs^ e )\n   {\n      \n      // Create a path and add an ellipse.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddEllipse( 0, 0, 100, 100 );\n      \n      // Test the visibility of point (50, 50).\n      bool visible = myPath-&gt;IsVisible( 50, 50, e-&gt;Graphics );\n      \n      // Show the result.\n      MessageBox::Show( visible.ToString() );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23\">    Public Sub IsVisibleExample(ByVal e As PaintEventArgs)\n        Dim myPath As New GraphicsPath\n        myPath.AddEllipse(0, 0, 100, 100)\n        Dim visible As Boolean = myPath.IsVisible(50, 50, e.Graphics)\n        MessageBox.Show(visible.ToString())\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Single_System_Single_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> in the visible clip region of the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> for which to test visibility.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if the specified point is contained within this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The coordinates of the point to be tested are given in world coordinates. The transform matrix of the <code>graphics</code> parameter is temporarily applied before testing for visibility.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"relative-path\">IsVisible(Int32,Int32,Graphics)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Reset\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Empties the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> and <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathTypes*</span> arrays and sets the <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a> to <a class=\"xref\" href=\"system.drawing.drawing2d.fillmode\" data-linktype=\"relative-path\">FillMode</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds several primitives to it.  </p>\n</li>\n<li><p>Draws the path&#39;s points array to the screen.  </p>\n</li>\n<li><p>Resets the path to an empty state.  </p>\n</li>\n<li><p>Re-acquires the points array (if it exists).  </p>\n</li>\n<li><p>Draws the array to the screen.  </p>\n<p>Notice that it finds no array following the reset call.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24\">        public void GraphicsPathResetExample(PaintEventArgs e)\n        {\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n                     \n            // Create a path and add a line, an ellipse, and an arc.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLine(new Point(0, 0), new Point(100, 100));\n            myPath.AddEllipse(100, 100, 200, 250);\n            myPath.AddArc(300, 250, 100, 100, 0, 90);\n                     \n            // Draw the pre-reset points array to the screen.\n            DrawPoints1(e, myPath.PathPoints, 20);\n                     \n            // Reset the path.\n            myPath.Reset();\n                     \n            // See if any points remain.\n            if(myPath.PointCount &gt; 0)\n            {\n                     \n                // Draw the post-reset points array to the screen.\n                DrawPoints1(e, myPath.PathPoints, 150);\n            }\n            else\n                     \n                // If there are no points, say so.\n                e.Graphics.DrawString(&quot;No Points&quot;,\n                    myFont,\n                    Brushes.Black,\n                    150,\n                    20);\n        } \n        //End GraphicsPathResetExample\n                     \n        // A helper function GraphicsPathResetExample uses to draw the points.\n                     \n        // to the screen.\n        public void DrawPoints1(PaintEventArgs e, PointF[] pathPoints, int xOffset)\n        {\n            int y = 20;\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n            for(int i=0;i &lt; pathPoints.Length; i++)\n            {\n                e.Graphics.DrawString(pathPoints[i].X.ToString() + &quot;, &quot; +\n                    pathPoints[i].Y.ToString(),\n                    myFont,\n                    Brushes.Black,\n                    xOffset,\n                    y);\n                y += 20;\n            }\n        } \n        // End DrawPoints\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24\">public:\n   void GraphicsPathResetExample( PaintEventArgs^ e )\n   {\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      \n      // Create a path and add a line, an ellipse, and an arc.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLine( Point(0,0), Point(100,100) );\n      myPath-&gt;AddEllipse( 100, 100, 200, 250 );\n      myPath-&gt;AddArc( 300, 250, 100, 100, 0, 90 );\n      \n      // Draw the pre-reset points array to the screen.\n      DrawPoints1( e, myPath-&gt;PathPoints, 20 );\n      \n      // Reset the path.\n      myPath-&gt;Reset();\n      \n      // See if any points remain.\n      if ( myPath-&gt;PointCount &gt; 0 )\n      {\n         \n         // Draw the post-reset points array to the screen.\n         DrawPoints1( e, myPath-&gt;PathPoints, 150 );\n      }\n      else\n            e-&gt;Graphics-&gt;DrawString( &quot;No Points&quot;, myFont, Brushes::Black, 150, 20 );\n      // If there are no points, say so.\n   }\n\n\n   //End GraphicsPathResetExample\n   // A helper function GraphicsPathResetExample uses to draw the points.\n   // to the screen.\n   void DrawPoints1( PaintEventArgs^ e, array&lt;PointF&gt;^ pathPoints, int xOffset )\n   {\n      int y = 20;\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      for ( int i = 0; i &lt; pathPoints-&gt;Length; i++ )\n      {\n         e-&gt;Graphics-&gt;DrawString( String::Concat( pathPoints[ i ].X, &quot;, &quot;, pathPoints[ i ].Y ), myFont, Brushes::Black, (float)xOffset, (float)y );\n         y += 20;\n\n      }\n   }\n   // End DrawPoints\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24\">    Public Sub GraphicsPathResetExample(ByVal e As PaintEventArgs)\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n\n        &#39; Create a path and add a line, an ellipse, and an arc.\n        Dim myPath As New GraphicsPath\n        myPath.AddLine(New Point(0, 0), New Point(100, 100))\n        myPath.AddEllipse(100, 100, 200, 250)\n        myPath.AddArc(300, 250, 100, 100, 0, 90)\n\n        &#39; Draw the pre-reset points array to the screen.\n        DrawPointsHelper1(e, myPath.PathPoints, 20)\n\n        &#39; Reset the path.\n        myPath.Reset()\n\n        &#39; See if any points remain.\n        If myPath.PointCount &gt; 0 Then\n\n            &#39; Draw the post-reset points array to the screen.\n            DrawPointsHelper1(e, myPath.PathPoints, 150)\n\n            &#39; If there are no points, say so.\n        Else\n            e.Graphics.DrawString(&quot;No Points&quot;, myFont, Brushes.Black, _\n            150, 20)\n        End If\n    End Sub\n\n    &#39; A helper function used by GraphicsPathResetExample to draw points.\n    Public Sub DrawPointsHelper1(ByVal e As PaintEventArgs, _\n    ByVal pathPoints() As PointF, ByVal xOffset As Integer)\n        Dim y As Integer = 20\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n        Dim i As Integer\n        For i = 0 To pathPoints.Length - 1\n            e.Graphics.DrawString(pathPoints(i).X.ToString() + _\n            &quot;, &quot; + pathPoints(i).Y.ToString(), myFont, Brushes.Black, _\n            xOffset, y)\n            y += 20\n        Next i\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Reverse\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Reverse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reverse()</div>        \r\n          </div>\r\n    \r\n            <p>Reverses the order of points in the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.PathPoints*</span> array of this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Reverse ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path and adds several primitives to the path.  </p>\n</li>\n<li><p>Draws the path&#39;s points array to the screen.  </p>\n</li>\n<li><p>Draws the reversed points array to the screen.  </p>\n<p>Notice that the second listing of points is in reverse order from the first.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25\">        public void GraphicsPathReverseExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and add a line, ellipse, and arc.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLine(new Point(0, 0), new Point(100, 100));\n            myPath.AddEllipse(100, 100, 200, 250);\n            myPath.AddArc(300, 250, 100, 100, 0, 90);\n                     \n            // Draw the first set of points to the screen.\n            DrawPoints2(e, myPath.PathPoints, 20);\n                     \n            // Call GraphicsPath.Reverse.\n            myPath.Reverse();\n                     \n            // Draw the reversed set of points to the screen.\n            DrawPoints2(e, myPath.PathPoints, 150);\n        }\n        //End GraphicsPathReverseExample.\n                     \n        // A helper function GraphicsPathReverseExample is used to draw the\n                     \n        // points to the screen.\n        public void DrawPoints2(PaintEventArgs e, PointF[] pathPoints, int xOffset)\n        {\n            int y = 20;\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n            for(int i=0;i &lt; pathPoints.Length; i++)\n            {\n                e.Graphics.DrawString(pathPoints[i].X.ToString() + &quot;, &quot; +\n                    pathPoints[i].Y.ToString(),\n                    myFont,\n                    Brushes.Black,\n                    xOffset,\n                    y);\n                y += 20;\n            }\n        } \n        // End DrawPoints\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25\">   void GraphicsPathReverseExample( PaintEventArgs^ e )\n   {\n      // Create a path and add a line, ellipse, and arc.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLine( Point(0,0), Point(100,100) );\n      myPath-&gt;AddEllipse( 100, 100, 200, 250 );\n      myPath-&gt;AddArc( 300, 250, 100, 100, 0, 90 );\n\n      // Draw the first set of points to the screen.\n      DrawPoints2( e, myPath-&gt;PathPoints, 20 );\n\n      // Call GraphicsPath.Reverse.\n      myPath-&gt;Reverse();\n\n      // Draw the reversed set of points to the screen.\n      DrawPoints2( e, myPath-&gt;PathPoints, 150 );\n   }\n\n   //End GraphicsPathReverseExample.\n   // A helper function GraphicsPathReverseExample is used to draw the\n   // points to the screen.\n   void DrawPoints2( PaintEventArgs^ e, array&lt;PointF&gt;^ pathPoints, int xOffset )\n   {\n      int y = 20;\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      for ( int i = 0; i &lt; pathPoints-&gt;Length; i++ )\n      {\n         e-&gt;Graphics-&gt;DrawString( String::Concat( pathPoints[ i ].X, &quot;, &quot;, pathPoints[ i ].Y ), myFont, Brushes::Black, (float)xOffset, (float)y );\n         y += 20;\n\n      }\n   }\n   // End DrawPoints\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25\">    Public Sub GraphicsPathReverseExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path and add a line, ellipse, and arc.\n        Dim myPath As New GraphicsPath\n        myPath.AddLine(New Point(0, 0), New Point(100, 100))\n        myPath.AddEllipse(100, 100, 200, 250)\n        myPath.AddArc(300, 250, 100, 100, 0, 90)\n\n        &#39; Draw the first set of points to the screen.\n        DrawPointsHelper2(e, myPath.PathPoints, 20)\n\n        &#39; Call GraphicsPath.Reverse.\n        myPath.Reverse()\n\n        &#39; Draw the reversed set of points to the screen.\n        DrawPointsHelper2(e, myPath.PathPoints, 150)\n    End Sub\n\n    &#39; A helper function used by GraphicsPathReverseExample to draw points.\n    Public Sub DrawPointsHelper2(ByVal e As PaintEventArgs, _\n    ByVal pathPoints() As PointF, ByVal xOffset As Integer)\n        Dim y As Integer = 20\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n        Dim i As Integer\n        For i = 0 To pathPoints.Length - 1\n            e.Graphics.DrawString(pathPoints(i).X.ToString() + _\n            &quot;, &quot; + pathPoints(i).Y.ToString(), myFont, Brushes.Black, _\n            xOffset, y)\n            y += 20\n        Next i\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_SetMarkers\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_SetMarkers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetMarkers()</div>        \r\n          </div>\r\n    \r\n            <p>Sets a marker on this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetMarkers ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates a marker on the path that can be used to separate sections of the path. You can then use the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspathiterator#System_Drawing_Drawing2D_GraphicsPathIterator_NextMarker_\" data-linktype=\"relative-path\">NextMarker</a> methods to iterate through the markers in the path.  </p>\n<p> Markers are used to separate groups of subpaths. One or more subpaths can be contained between two markers in the path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26\">        private void SetMarkersExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and set two markers.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddLine(new Point(0, 0), new Point(50, 50));\n            myPath.SetMarkers();\n            Rectangle rect = new Rectangle(50, 50, 50, 50);\n            myPath.AddRectangle(rect);\n            myPath.SetMarkers();\n            myPath.AddEllipse(100, 100, 100, 50);\n                     \n            // Draw the path to screen.\n            e.Graphics.DrawPath(new Pen(Color.Black, 2), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26\">private:\n   void SetMarkersExample( PaintEventArgs^ e )\n   {\n      // Create a path and set two markers.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddLine( Point(0,0), Point(50,50) );\n      myPath-&gt;SetMarkers();\n      Rectangle rect = Rectangle(50,50,50,50);\n      myPath-&gt;AddRectangle( rect );\n      myPath-&gt;SetMarkers();\n      myPath-&gt;AddEllipse( 100, 100, 100, 50 );\n\n      // Draw the path to screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Black,2.0f ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26\">    Public Sub SetMarkersExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path and set two markers.\n        Dim myPath As New GraphicsPath\n        myPath.AddLine(New Point(0, 0), New Point(50, 50))\n        myPath.SetMarkers()\n        Dim rect As New Rectangle(50, 50, 50, 50)\n        myPath.AddRectangle(rect)\n        myPath.SetMarkers()\n        myPath.AddEllipse(100, 100, 100, 50)\n\n        &#39; Draw the path to screen.\n        e.Graphics.DrawPath(New Pen(Color.Black, 2), myPath)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_StartFigure\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_StartFigure_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartFigure()</div>        \r\n          </div>\r\n    \r\n            <p>Starts a new figure without closing the current figure. All subsequent points added to the path are added to this new figure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void StartFigure ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The user must keep the original points if they are needed. The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.  </p>\n<p> This method starts a new subpath in the path. Subpaths allow you to separate a path into sections and use the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspathiterator\" data-linktype=\"relative-path\">GraphicsPathIterator</a> class to iterate through the subpaths.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path.  </p>\n</li>\n<li><p>Adds two sets of figures. The first set of figures combines four primitives into two figures. The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.  </p>\n</li>\n<li><p>Draws all the figures to the screen.  </p>\n<p>Notice the difference in the appearance between the two sets of figures.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27\">        public void StartFigureExample(PaintEventArgs e)\n        {\n                     \n            // Create a GraphicsPath object.\n            GraphicsPath myPath = new GraphicsPath();\n                     \n            // First set of figures.\n            myPath.StartFigure();\n            myPath.AddArc(10, 10, 50, 50, 0, 270);\n            myPath.AddLine(new Point(50, 0), new Point(100, 50));\n            myPath.AddArc(50, 100, 75, 75, 0, 270);\n            myPath.CloseFigure();\n            myPath.StartFigure();\n            myPath.AddArc(100, 10, 50, 50, 0, 270);\n                     \n            // Second set of figures.\n            myPath.StartFigure();\n            myPath.AddArc(10, 200, 50, 50, 0, 270);\n            myPath.CloseFigure();\n            myPath.StartFigure();\n            myPath.AddLine(new Point(60, 200), new Point(110, 250));\n            myPath.AddArc(50, 300, 75, 75, 0, 270);\n            myPath.CloseFigure();\n            myPath.StartFigure();\n            myPath.AddArc(100, 200, 50, 50, 0, 270);\n                     \n            // Draw the path to the screen.\n            e.Graphics.DrawPath(new Pen(Color.Black), myPath);\n        } \n        // End StartFigureExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27\">public:\n   void StartFigureExample( PaintEventArgs^ e )\n   {\n      // Create a GraphicsPath object.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n\n      // First set of figures.\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddArc( 10, 10, 50, 50, 0, 270 );\n      myPath-&gt;AddLine( Point(50,0), Point(100,50) );\n      myPath-&gt;AddArc( 50, 100, 75, 75, 0, 270 );\n      myPath-&gt;CloseFigure();\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddArc( 100, 10, 50, 50, 0, 270 );\n\n      // Second set of figures.\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddArc( 10, 200, 50, 50, 0, 270 );\n      myPath-&gt;CloseFigure();\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddLine( Point(60,200), Point(110,250) );\n      myPath-&gt;AddArc( 50, 300, 75, 75, 0, 270 );\n      myPath-&gt;CloseFigure();\n      myPath-&gt;StartFigure();\n      myPath-&gt;AddArc( 100, 200, 50, 50, 0, 270 );\n\n      // Draw the path to the screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Black ), myPath );\n   }\n   // End StartFigureExample\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27\">    Public Sub StartFigureExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a GraphicsPath object.\n        Dim myPath As New GraphicsPath\n\n        &#39; First set of figures.\n        myPath.StartFigure()\n        myPath.AddArc(10, 10, 50, 50, 0, 270)\n        myPath.AddLine(New Point(50, 0), New Point(100, 50))\n        myPath.AddArc(50, 100, 75, 75, 0, 270)\n        myPath.CloseFigure()\n        myPath.StartFigure()\n        myPath.AddArc(100, 10, 50, 50, 0, 270)\n\n        &#39; Second set of figures.\n        myPath.StartFigure()\n        myPath.AddArc(10, 200, 50, 50, 0, 270)\n        myPath.CloseFigure()\n        myPath.StartFigure()\n        myPath.AddLine(New Point(60, 200), New Point(110, 250))\n        myPath.AddArc(50, 300, 75, 75, 0, 270)\n        myPath.CloseFigure()\n        myPath.StartFigure()\n        myPath.AddArc(100, 200, 50, 50, 0, 270)\n\n        &#39; Draw the path to the screen.\n        e.Graphics.DrawPath(New Pen(Color.Black), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Transform_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a transform matrix to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Transform (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the transformation to apply.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The transformation can scale, translate, rotate, or skew the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path and adds an ellipse to the path.  </p>\n</li>\n<li><p>Draws path to the screen.  </p>\n</li>\n<li><p>Creates a transform matrix to translate the path 100 units in the x-axis direction.  </p>\n</li>\n<li><p>Draws the transformed path to the screen.  </p>\n<p>Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28\">        private void TransformExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and add and ellipse.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddEllipse(0, 0, 100, 200);\n                     \n            // Draw the starting position to screen.\n            e.Graphics.DrawPath(Pens.Black, myPath);\n                     \n            // Move the ellipse 100 points to the right.\n            Matrix translateMatrix = new Matrix();\n            translateMatrix.Translate(100, 0);\n            myPath.Transform(translateMatrix);\n                     \n            // Draw the transformed ellipse to the screen.\n            e.Graphics.DrawPath(new Pen(Color.Red, 2), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28\">private:\n   void TransformExample( PaintEventArgs^ e )\n   {\n      // Create a path and add and ellipse.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddEllipse( 0, 0, 100, 200 );\n\n      // Draw the starting position to screen.\n      e-&gt;Graphics-&gt;DrawPath( Pens::Black, myPath );\n\n      // Move the ellipse 100 points to the right.\n      Matrix^ translateMatrix = gcnew Matrix;\n      translateMatrix-&gt;Translate( 100, 0 );\n      myPath-&gt;Transform(translateMatrix);\n\n      // Draw the transformed ellipse to the screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Red,2.0f ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28\">    Public Sub TransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path and add and ellipse.\n        Dim myPath As New GraphicsPath\n        myPath.AddEllipse(0, 0, 100, 200)\n\n        &#39; Draw the starting position to screen.\n        e.Graphics.DrawPath(Pens.Black, myPath)\n\n        &#39; Move the ellipse 100 points to the right.\n        Dim translateMatrix As New Matrix\n        translateMatrix.Translate(100, 0)\n        myPath.Transform(translateMatrix)\n\n        &#39; Draw the transformed ellipse to the screen.\n        e.Graphics.DrawPath(New Pen(Color.Red, 2), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Warp(PointF[],RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram to which the rectangle defined by <code>srcRect</code> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangle that is transformed to the parallelogram defined by <code>destPoints</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [Warp(PointF&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Warp(PointF[],RectangleF,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram to which the rectangle defined by <code>srcRect</code> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangle that is transformed to the parallelogram defined by <code>destPoints</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a geometric transform to apply to the path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [Warp(PointF&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_WarpMode_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Warp(PointF[],RectangleF,Matrix,WarpMode)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that defines a parallelogram to which the rectangle defined by <code>srcRect</code> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangle that is transformed to the parallelogram defined by <code>destPoints</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a geometric transform to apply to the path.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>warpMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.warpmode\" data-linktype=\"relative-path\">WarpMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.warpmode\" data-linktype=\"relative-path\">WarpMode</a> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [Warp(PointF&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_System_Drawing_PointF___System_Drawing_RectangleF_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_WarpMode_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Warp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Warp(PointF[],RectangleF,Matrix,WarpMode,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a warp transform, defined by a rectangle and a parallelogram, to this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destPoints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that define a parallelogram to which the rectangle defined by <code>srcRect</code> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>srcRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> that represents the rectangle that is transformed to the parallelogram defined by <code>destPoints</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a geometric transform to apply to the path.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>warpMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.warpmode\" data-linktype=\"relative-path\">WarpMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.warpmode\" data-linktype=\"relative-path\">WarpMode</a> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flatness</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the <span class=\"xref\">stem.Drawing.Drawing2D.GraphicsPath.Flatten*</span> methods.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path and adds a rectangle to the path.  </p>\n</li>\n<li><p>Draws that rectangle to the screen in black.  </p>\n</li>\n<li><p>Warps the path with a perspective warp.  </p>\n</li>\n<li><p>Draws the warped rectangle (path) to the screen in red.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29\">        private void WarpExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and add a rectangle.\n            GraphicsPath myPath = new GraphicsPath();\n            RectangleF srcRect = new RectangleF(0, 0, 100, 200);\n            myPath.AddRectangle(srcRect);\n                     \n            // Draw the source path (rectangle)to the screen.\n            e.Graphics.DrawPath(Pens.Black, myPath);\n                     \n            // Create a destination for the warped rectangle.\n            PointF point1 = new PointF(200, 200);\n            PointF point2 = new PointF(400, 250);\n            PointF point3 = new PointF(220, 400);\n            PointF[] destPoints = {point1, point2, point3};\n                     \n            // Create a translation matrix.\n            Matrix translateMatrix = new Matrix();\n            translateMatrix.Translate(100, 0);\n                     \n            // Warp the source path (rectangle).\n            myPath.Warp(destPoints, srcRect, translateMatrix,\n                WarpMode.Perspective, 0.5f);\n                     \n            // Draw the warped path (rectangle) to the screen.\n            e.Graphics.DrawPath(new Pen(Color.Red), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29\">private:\n   void WarpExample( PaintEventArgs^ e )\n   {\n      // Create a path and add a rectangle.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      RectangleF srcRect = RectangleF(0,0,100,200);\n      myPath-&gt;AddRectangle( srcRect );\n\n      // Draw the source path (rectangle)to the screen.\n      e-&gt;Graphics-&gt;DrawPath( Pens::Black, myPath );\n\n      // Create a destination for the warped rectangle.\n      PointF point1 = PointF(200,200);\n      PointF point2 = PointF(400,250);\n      PointF point3 = PointF(220,400);\n      array&lt;PointF&gt;^ destPoints = {point1,point2,point3};\n\n      // Create a translation matrix.\n      Matrix^ translateMatrix = gcnew Matrix;\n      translateMatrix-&gt;Translate( 100, 0 );\n\n      // Warp the source path (rectangle).\n      myPath-&gt;Warp( destPoints, srcRect, translateMatrix, WarpMode::Perspective, 0.5f );\n\n      // Draw the warped path (rectangle) to the screen.\n      e-&gt;Graphics-&gt;DrawPath( gcnew Pen( Color::Red ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29\">    Public Sub WarpExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a path and add a rectangle.\n        Dim myPath As New GraphicsPath\n        Dim srcRect As New RectangleF(0, 0, 100, 200)\n        myPath.AddRectangle(srcRect)\n\n        &#39; Draw the source path (rectangle)to the screen.\n        e.Graphics.DrawPath(Pens.Black, myPath)\n\n        &#39; Create a destination for the warped rectangle.\n        Dim point1 As New PointF(200, 200)\n        Dim point2 As New PointF(400, 250)\n        Dim point3 As New PointF(220, 400)\n        Dim destPoints As PointF() = {point1, point2, point3}\n\n        &#39; Create a translation matrix.\n        Dim translateMatrix As New Matrix\n        translateMatrix.Translate(100, 0)\n\n        &#39; Warp the source path (rectangle).\n        myPath.Warp(destPoints, srcRect, translateMatrix, _\n        WarpMode.Perspective, 0.5F)\n\n        &#39; Draw the warped path (rectangle) to the screen.\n        e.Graphics.DrawPath(New Pen(Color.Red), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Widen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Widen(Pen)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an additional outline to the path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Widen (System.Drawing.Pen pen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that specifies the width between the original outline of the path and the new outline this method creates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates an outline around the original lines in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, with a distance between the existing lines and the new outline equal to that of the width of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> used in the call to Widen. If you want to fill the space between the lines you must use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a> rather then the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPath_\" data-linktype=\"relative-path\">DrawPath</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_System_Drawing_Drawing2D_Matrix_System_Single_\" data-linktype=\"relative-path\">Widen(Pen,Matrix,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Widen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Widen(Pen,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an additional outline to the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that specifies the width between the original outline of the path and the new outline this method creates.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a transform to apply to the path before widening.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates an outline around the original lines in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, with a distance between the existing lines and the new outline equal to that of the width of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> used in the call to Widen. If you want to fill the space between the lines you must use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a> rather then the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPath_\" data-linktype=\"relative-path\">DrawPath</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_System_Drawing_Drawing2D_Matrix_System_Single_\" data-linktype=\"relative-path\">Widen(Pen,Matrix,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_GraphicsPath_Widen_System_Drawing_Pen_System_Drawing_Drawing2D_Matrix_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_GraphicsPath_Widen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Widen(Pen,Matrix,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Replaces this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> with curves that enclose the area that is filled when this path is drawn by the specified pen.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that specifies the width between the original outline of the path and the new outline this method creates.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that specifies a transform to apply to the path before widening.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flatness</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies the flatness for curves.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates an outline around the original lines in this <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, with a distance between the existing lines and the new outline equal to that of the width of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> used in the call to Widen. If you want to fill the space between the lines you must use the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a> rather then the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPath_\" data-linktype=\"relative-path\">DrawPath</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnPaint_\" data-linktype=\"relative-path\">OnPaint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a path and adds two ellipses to the path.  </p>\n</li>\n<li><p>Draws the path in black.  </p>\n</li>\n<li><p>Widens the path.  </p>\n</li>\n<li><p>Draws the path in red.  </p>\n<p>Notice that the second rendering uses <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillPath_\" data-linktype=\"relative-path\">FillPath</a> instead of <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawPath_\" data-linktype=\"relative-path\">DrawPath</a>, and hence the rendered figure has the outline filled.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30\">        private void WidenExample(PaintEventArgs e)\n        {\n                     \n            // Create a path and add two ellipses.\n            GraphicsPath myPath = new GraphicsPath();\n            myPath.AddEllipse(0, 0, 100, 100);\n            myPath.AddEllipse(100, 0, 100, 100);\n                     \n            // Draw the original ellipses to the screen in black.\n            e.Graphics.DrawPath(Pens.Black, myPath);\n                     \n            // Widen the path.\n            Pen widenPen = new Pen(Color.Black, 10);\n            Matrix widenMatrix = new Matrix();\n            widenMatrix.Translate(50, 50);\n            myPath.Widen(widenPen, widenMatrix, 1.0f);\n                     \n            // Draw the widened path to the screen in red.\n            e.Graphics.FillPath(new SolidBrush(Color.Red), myPath);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30\">private:\n   void WidenExample( PaintEventArgs^ e )\n   {\n      // Create a path and add two ellipses.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      myPath-&gt;AddEllipse( 0, 0, 100, 100 );\n      myPath-&gt;AddEllipse( 100, 0, 100, 100 );\n\n      // Draw the original ellipses to the screen in black.\n      e-&gt;Graphics-&gt;DrawPath( Pens::Black, myPath );\n\n      // Widen the path.\n      Pen^ widenPen = gcnew Pen( Color::Black,10.0f );\n      Matrix^ widenMatrix = gcnew Matrix;\n      widenMatrix-&gt;Translate( 50, 50 );\n      myPath-&gt;Widen( widenPen, widenMatrix, 1.0f );\n\n      // Draw the widened path to the screen in red.\n      e-&gt;Graphics-&gt;FillPath( gcnew SolidBrush( Color::Red ), myPath );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30\">    Public Sub WidenExample(ByVal e As PaintEventArgs)\n        Dim myPath As New GraphicsPath\n        myPath.AddEllipse(0, 0, 100, 100)\n        myPath.AddEllipse(100, 0, 100, 100)\n        e.Graphics.DrawPath(Pens.Black, myPath)\n        Dim widenPen As New Pen(Color.Black, 10)\n        Dim widenMatrix As New Matrix\n        widenMatrix.Translate(50, 50)\n        myPath.Widen(widenPen, widenMatrix, 1.0F)\n        &#39; Sets tension for curves.\n        e.Graphics.FillPath(New SolidBrush(Color.Red), myPath)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.GraphicsPath.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.GraphicsPath.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddArc\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddBezier\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddBeziers\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddCurve\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddEllipse\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddLine\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddLines\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddPath\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddPie\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddPolygon\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddRectangle\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddRectangles\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.AddString\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.ClearMarkers\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.CloseFigure\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.FillMode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Flatten\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.GetBounds\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.GetLastPoint\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.IsVisible\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.PathData\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.PathPoints\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.PathTypes\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.PointCount\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Reset\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Reverse\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.SetMarkers\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.StartFigure\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Transform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Warp\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.GraphicsPath.Widen\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"09884e83-72f7-4406-740d-660c2b779c69\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a series of connected lines and curves. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Drawing2D/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Drawing2D.GraphicsPath\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.GraphicsPath.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.GraphicsPath.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Drawing2D.GraphicsPath","System.Drawing.Drawing2D.GraphicsPath..ctor","System.Drawing.Drawing2D.GraphicsPath.AddArc","System.Drawing.Drawing2D.GraphicsPath.AddBezier","System.Drawing.Drawing2D.GraphicsPath.AddBeziers","System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve","System.Drawing.Drawing2D.GraphicsPath.AddCurve","System.Drawing.Drawing2D.GraphicsPath.AddEllipse","System.Drawing.Drawing2D.GraphicsPath.AddLine","System.Drawing.Drawing2D.GraphicsPath.AddLines","System.Drawing.Drawing2D.GraphicsPath.AddPath","System.Drawing.Drawing2D.GraphicsPath.AddPie","System.Drawing.Drawing2D.GraphicsPath.AddPolygon","System.Drawing.Drawing2D.GraphicsPath.AddRectangle","System.Drawing.Drawing2D.GraphicsPath.AddRectangles","System.Drawing.Drawing2D.GraphicsPath.AddString","System.Drawing.Drawing2D.GraphicsPath.ClearMarkers","System.Drawing.Drawing2D.GraphicsPath.Clone","System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures","System.Drawing.Drawing2D.GraphicsPath.CloseFigure","System.Drawing.Drawing2D.GraphicsPath.Dispose","System.Drawing.Drawing2D.GraphicsPath.FillMode","System.Drawing.Drawing2D.GraphicsPath.Finalize","System.Drawing.Drawing2D.GraphicsPath.Flatten","System.Drawing.Drawing2D.GraphicsPath.GetBounds","System.Drawing.Drawing2D.GraphicsPath.GetLastPoint","System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible","System.Drawing.Drawing2D.GraphicsPath.IsVisible","System.Drawing.Drawing2D.GraphicsPath.PathData","System.Drawing.Drawing2D.GraphicsPath.PathPoints","System.Drawing.Drawing2D.GraphicsPath.PathTypes","System.Drawing.Drawing2D.GraphicsPath.PointCount","System.Drawing.Drawing2D.GraphicsPath.Reset","System.Drawing.Drawing2D.GraphicsPath.Reverse","System.Drawing.Drawing2D.GraphicsPath.SetMarkers","System.Drawing.Drawing2D.GraphicsPath.StartFigure","System.Drawing.Drawing2D.GraphicsPath.Transform","System.Drawing.Drawing2D.GraphicsPath.Warp","System.Drawing.Drawing2D.GraphicsPath.Widen"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Drawing2D.GraphicsPath","System::Drawing::Drawing2D::GraphicsPath","System.Drawing.Drawing2D.GraphicsPath.#ctor","System::Drawing::Drawing2D::GraphicsPath::#ctor","System.Drawing.Drawing2D.GraphicsPath.AddArc","System::Drawing::Drawing2D::GraphicsPath::AddArc","System.Drawing.Drawing2D.GraphicsPath.AddBezier","System::Drawing::Drawing2D::GraphicsPath::AddBezier","System.Drawing.Drawing2D.GraphicsPath.AddBeziers","System::Drawing::Drawing2D::GraphicsPath::AddBeziers","System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve","System::Drawing::Drawing2D::GraphicsPath::AddClosedCurve","System.Drawing.Drawing2D.GraphicsPath.AddCurve","System::Drawing::Drawing2D::GraphicsPath::AddCurve","System.Drawing.Drawing2D.GraphicsPath.AddEllipse","System::Drawing::Drawing2D::GraphicsPath::AddEllipse","System.Drawing.Drawing2D.GraphicsPath.AddLine","System::Drawing::Drawing2D::GraphicsPath::AddLine","System.Drawing.Drawing2D.GraphicsPath.AddLines","System::Drawing::Drawing2D::GraphicsPath::AddLines","System.Drawing.Drawing2D.GraphicsPath.AddPath","System::Drawing::Drawing2D::GraphicsPath::AddPath","System.Drawing.Drawing2D.GraphicsPath.AddPie","System::Drawing::Drawing2D::GraphicsPath::AddPie","System.Drawing.Drawing2D.GraphicsPath.AddPolygon","System::Drawing::Drawing2D::GraphicsPath::AddPolygon","System.Drawing.Drawing2D.GraphicsPath.AddRectangle","System::Drawing::Drawing2D::GraphicsPath::AddRectangle","System.Drawing.Drawing2D.GraphicsPath.AddRectangles","System::Drawing::Drawing2D::GraphicsPath::AddRectangles","System.Drawing.Drawing2D.GraphicsPath.AddString","System::Drawing::Drawing2D::GraphicsPath::AddString","System.Drawing.Drawing2D.GraphicsPath.ClearMarkers","System::Drawing::Drawing2D::GraphicsPath::ClearMarkers","System.Drawing.Drawing2D.GraphicsPath.Clone","System::Drawing::Drawing2D::GraphicsPath::Clone","System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures","System::Drawing::Drawing2D::GraphicsPath::CloseAllFigures","System.Drawing.Drawing2D.GraphicsPath.CloseFigure","System::Drawing::Drawing2D::GraphicsPath::CloseFigure","System.Drawing.Drawing2D.GraphicsPath.Dispose","System::Drawing::Drawing2D::GraphicsPath::Dispose","System.Drawing.Drawing2D.GraphicsPath.FillMode","System::Drawing::Drawing2D::GraphicsPath::FillMode","System.Drawing.Drawing2D.GraphicsPath.Finalize","System::Drawing::Drawing2D::GraphicsPath::Finalize","System.Drawing.Drawing2D.GraphicsPath.Flatten","System::Drawing::Drawing2D::GraphicsPath::Flatten","System.Drawing.Drawing2D.GraphicsPath.GetBounds","System::Drawing::Drawing2D::GraphicsPath::GetBounds","System.Drawing.Drawing2D.GraphicsPath.GetLastPoint","System::Drawing::Drawing2D::GraphicsPath::GetLastPoint","System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible","System::Drawing::Drawing2D::GraphicsPath::IsOutlineVisible","System.Drawing.Drawing2D.GraphicsPath.IsVisible","System::Drawing::Drawing2D::GraphicsPath::IsVisible","System.Drawing.Drawing2D.GraphicsPath.PathData","System::Drawing::Drawing2D::GraphicsPath::PathData","System.Drawing.Drawing2D.GraphicsPath.PathPoints","System::Drawing::Drawing2D::GraphicsPath::PathPoints","System.Drawing.Drawing2D.GraphicsPath.PathTypes","System::Drawing::Drawing2D::GraphicsPath::PathTypes","System.Drawing.Drawing2D.GraphicsPath.PointCount","System::Drawing::Drawing2D::GraphicsPath::PointCount","System.Drawing.Drawing2D.GraphicsPath.Reset","System::Drawing::Drawing2D::GraphicsPath::Reset","System.Drawing.Drawing2D.GraphicsPath.Reverse","System::Drawing::Drawing2D::GraphicsPath::Reverse","System.Drawing.Drawing2D.GraphicsPath.SetMarkers","System::Drawing::Drawing2D::GraphicsPath::SetMarkers","System.Drawing.Drawing2D.GraphicsPath.StartFigure","System::Drawing::Drawing2D::GraphicsPath::StartFigure","System.Drawing.Drawing2D.GraphicsPath.Transform","System::Drawing::Drawing2D::GraphicsPath::Transform","System.Drawing.Drawing2D.GraphicsPath.Warp","System::Drawing::Drawing2D::GraphicsPath::Warp","System.Drawing.Drawing2D.GraphicsPath.Widen","System::Drawing::Drawing2D::GraphicsPath::Widen"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"09884e83-72f7-4406-740d-660c2b779c69","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Drawing2D/GraphicsPath.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GraphicsPath class | Microsoft Docs","_op_ogTitle":"GraphicsPath class","description":"Represents a series of connected lines and curves. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing.Drawing2D/toc.json","toc_rel":"_splitted/System.Drawing.Drawing2D/toc.json","source_url":"","ms.assetid":"System.Drawing.Drawing2D.GraphicsPath","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.graphicspath","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.graphicspath","fileRelativePath":"System.Drawing.Drawing2D.GraphicsPath.html"},"themesRelativePathToOutputRoot":"_themes/"}