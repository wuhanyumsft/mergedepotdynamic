{"content":"    \r\n    <h1 id=\"System_Security_Permissions_StrongNameIdentityPermission\">\r\n      <span class=\"lang-csharp\">StrongNameIdentityPermission</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the identity permission for strong names. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission\" data-linktype=\"relative-path\">System.Security.CodeAccessPermission</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">StrongNameIdentityPermission</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert\" data-linktype=\"relative-path\">Assert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Demand\" data-linktype=\"relative-path\">Demand()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny\" data-linktype=\"relative-path\">Deny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_PermitOnly\" data-linktype=\"relative-path\">PermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAll\" data-linktype=\"relative-path\">RevertAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAssert\" data-linktype=\"relative-path\">RevertAssert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertDeny\" data-linktype=\"relative-path\">RevertDeny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertPermitOnly\" data-linktype=\"relative-path\">RevertPermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"IMPORTANT\"><h5>Important</h5><p> Starting with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/net-v40-long-md.md&quot; -->.NET Framework 4<!--END INCLUDE -->, identity permissions are not used.  </p>\n<p> In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> permission state value. In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.  This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <a class=\"xref\" href=\"system.security.permissions.iunrestrictedpermission\" data-linktype=\"relative-path\">IUnrestrictedPermission</a> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.  </p>\n</div>\n<p> Use StrongNameIdentityPermission to confirm that the calling code is in a particular strong-named code assembly. Full demands for StrongNameIdentityPermission succeed only if all the assemblies in the stack have the correct evidence to satisfy the demand. Link demands that use the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermissionattribute\" data-linktype=\"relative-path\">StrongNameIdentityPermissionAttribute</a> attribute succeed only if the immediate caller has the correct evidence.  </p>\n<p> A strong name identity is based on a cryptographic public key called a binary large object (BLOB),  which is optionally combined with the name and version of a specific assembly. The key defines a unique namespace and provides strong verification that the name is genuine, because the definition of the name must be in an assembly that is signed by the corresponding private key.  </p>\n<p> Note that the validity of the strong name key is not dependent on a trust relationship or on any certificate necessarily being issued for the key.  </p>\n<p> In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, even if the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust. This ensures consistency for all permissions and eliminates the treatment of identity permissions as a special case.  </p>\n<p> For a complete description of strong names, see the <a class=\"xref\" href=\"system.security.policy.strongname\" data-linktype=\"relative-path\">StrongName</a> reference page. For more information about strong-named assemblies, see <a href=\"../Topic/Strong-Named%20Assemblies.md\" data-linktype=\"relative-path\">Strong-Named Assemblies</a>.  </p>\n<p> The StrongNameIdentityPermission class is used to define strong-name requirements for accessing the public members of a type. The <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermissionattribute\" data-linktype=\"relative-path\">StrongNameIdentityPermissionAttribute</a> attribute can be used to define strong-name requirements at the assembly level. In the .NET Framework version 2.0 and later, you can also use the <a class=\"xref\" href=\"system.runtime.compilerservices.internalsvisibletoattribute\" data-linktype=\"relative-path\">InternalsVisibleToAttribute</a> attribute to specify that all nonpublic types in that assembly are visible to another assembly. For more information, see <a href=\"../Topic/Friend%20Assemblies%20(C%23%20and%20Visual%20Basic).md\" data-linktype=\"relative-path\">Friend Assemblies</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission__ctor_System_Security_Permissions_PermissionState_\" data-linktype=\"self-bookmark\">StrongNameIdentityPermission(PermissionState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class with the specified <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission__ctor_System_Security_Permissions_StrongNamePublicKeyBlob_System_String_System_Version_\" data-linktype=\"self-bookmark\">StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class for the specified strong name identity.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the simple name portion of the strong name identity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_PublicKey\" data-linktype=\"self-bookmark\">PublicKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the public key blob that defines the strong name identity namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_Version\" data-linktype=\"self-bookmark\">Version</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the version number of the identity.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_Copy\" data-linktype=\"self-bookmark\">Copy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns an identical copy of the current permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_FromXml_System_Security_SecurityElement_\" data-linktype=\"self-bookmark\">FromXml(SecurityElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reconstructs a permission with a specified state from an XML encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_Intersect_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Intersect(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a permission that is the intersection of the current permission and the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_IsSubsetOf_System_Security_IPermission_\" data-linktype=\"self-bookmark\">IsSubsetOf(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current permission is a subset of the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_ToXml\" data-linktype=\"self-bookmark\">ToXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an XML encoding of the permission and its current state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_StrongNameIdentityPermission_Union_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Union(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a permission that is the union of the current permission and the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission__ctor_System_Security_Permissions_PermissionState_\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StrongNameIdentityPermission(PermissionState)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class with the specified <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>state</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Creates either a fully restricted (<code>None</code>) or <code>Unrestricted</code> permission.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> permission state value. In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.  This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <a class=\"xref\" href=\"system.security.permissions.iunrestrictedpermission\" data-linktype=\"relative-path\">IUnrestrictedPermission</a> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.  </p>\n</div>\n<p> In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  </p>\n<p> Use this constructor with a permission state value of <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> to create an identity permission that matches no strong names. If you subsequently set the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission#System_Security_Permissions_StrongNameIdentityPermission_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission#System_Security_Permissions_StrongNameIdentityPermission_Version_\" data-linktype=\"relative-path\">Version</a> properties, a specific strong name identity can be represented by the permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the StrongNameIdentityPermission constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#7\">        snIdPerm2 = New StrongNameIdentityPermission(PermissionState.None)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#7\">        snIdPerm2 = gcnew StrongNameIdentityPermission(PermissionState::None);\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#7\">        snIdPerm2 = new StrongNameIdentityPermission(PermissionState.None);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission__ctor_System_Security_Permissions_StrongNamePublicKeyBlob_System_String_System_Version_\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class for the specified strong name identity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>blob</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.strongnamepublickeyblob\" data-linktype=\"relative-path\">StrongNamePublicKeyBlob</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The public key defining the strong name identity namespace.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The simple name part of the strong name identity. This corresponds to the name of the assembly.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>version</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The version number of the identity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>blob</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>name</code> and <code>version</code> parameters can be <code>null</code> only when the public key is used to identify the assembly. An empty string (&quot;&quot;) should not be used in place of <code>null</code>. If <code>name</code> is an empty string, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n<p> For more information on names and version numbers of assemblies, see <a href=\"../Topic/Strong-Named%20Assemblies.md\" data-linktype=\"relative-path\">Strong-Named Assemblies</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the StrongNameIdentityPermission constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#8\">        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#8\">        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#8\">        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_Name\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the simple name portion of the strong name identity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The simple name of the identity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The property value cannot be retrieved because it contains an ambiguous identity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the Name property can be an exact name or can be modified by a wildcard character in the final position; for example, both MyCompany.MyDepartment.MyFile and MyCompany.MyDepartment.* are valid names. If you attempt to set the Name property to an empty string (&quot;&quot;), an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_PublicKey\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_PublicKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PublicKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the public key blob that defines the strong name identity namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.strongnamepublickeyblob\" data-linktype=\"relative-path\">StrongNamePublicKeyBlob</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.permissions.strongnamepublickeyblob\" data-linktype=\"relative-path\">StrongNamePublicKeyBlob</a> that contains the public key of the identity, or <code>null</code> if there is no key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The property value is set to <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The property value cannot be retrieved because it contains an ambiguous identity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_Version\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_Version_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Version</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the version number of the identity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Version Version { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </div>\r\n                  <p>The version of the identity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The property value cannot be retrieved because it contains an ambiguous identity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_Copy\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_Copy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Copy()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns an identical copy of the current permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Copy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A copy of the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A copy of a permission represents the same access to resources as the original permission.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class. The best use for this example is to build and execute the entire example, and view its output.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#5\">    &#39;Copy creates and returns an identical copy of the current permission.\n    Private Function CopyDemo() As Boolean \n        Dim returnValue As Boolean = True\n        \n        Dim snIdPerm1, snIdPerm2 As StrongNameIdentityPermission\n        \n        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n        snIdPerm2 = New StrongNameIdentityPermission(PermissionState.None)\n        snIdPerm2 = CType(snIdPerm1.Copy(), StrongNameIdentityPermission)\n        Console.WriteLine(&quot;Result of copy = &quot; + snIdPerm2.ToString() + vbLf)\n        \n        Return returnValue\n    \n    End Function &#39;CopyDemo\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#5\">    //Copy creates and returns an identical copy of the current permission.\n    bool CopyDemo()\n    {\n        bool returnValue = true;\n        StrongNameIdentityPermission^ snIdPerm1;\n        StrongNameIdentityPermission^ snIdPerm2;\n        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = gcnew StrongNameIdentityPermission(PermissionState::None);\n\n        snIdPerm2 = dynamic_cast&lt;StrongNameIdentityPermission^&gt;(snIdPerm1-&gt;Copy());\n        Console::WriteLine(&quot;Result of copy = &quot; + snIdPerm2-&gt;ToString() + &quot;<br>&quot;);\n\n        return returnValue;\n    }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#5\">    //Copy creates and returns an identical copy of the current permission.\n    private bool CopyDemo()\n    {\n        bool returnValue = true;\n\n        StrongNameIdentityPermission snIdPerm1, snIdPerm2;\n\n        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = new StrongNameIdentityPermission(PermissionState.None);\n\n        snIdPerm2 = (StrongNameIdentityPermission)snIdPerm1.Copy();\n        Console.WriteLine(&quot;Result of copy = &quot; + snIdPerm2.ToString() + &quot;<br>&quot;);\n\n        return returnValue;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_FromXml_System_Security_SecurityElement_\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_FromXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromXml(SecurityElement)</div>        \r\n          </div>\r\n    \r\n            <p>Reconstructs a permission with a specified state from an XML encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void FromXml (System.Security.SecurityElement e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML encoding to use to reconstruct the permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>e</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>e</code> parameter is not a valid permission element.  </p>\n<p> -or-  </p>\n<p> The <code>e</code> parameter&#39;s version number is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not used by application code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class. The best use for this example is to build and execute the entire example, and view its output.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#6\">    &#39; ToXml creates an XML encoding of the permission and its current state;\n    &#39;FromXml reconstructs a permission with the specified state from the XML encoding.\n    Private Function ToFromXmlDemo() As Boolean \n        \n        Dim returnValue As Boolean = True\n        \n        Dim snIdPerm1, snIdPerm2 As StrongNameIdentityPermission\n        \n        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n        snIdPerm2 = New StrongNameIdentityPermission(PermissionState.None)\n        snIdPerm2.FromXml(snIdPerm1.ToXml())\n        Console.WriteLine(&quot;Result of ToFromXml = &quot; + snIdPerm2.ToString() + vbLf)\n        \n        Return returnValue\n    \n    End Function &#39;ToFromXmlDemo\n     \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#6\">    // ToXml creates an XML encoding of the permission and its current state;\n    //FromXml reconstructs a permission with the specified state from the XML encoding.\n    bool ToFromXmlDemo()\n    {\n        bool returnValue = true;\n        StrongNameIdentityPermission^ snIdPerm1;\n        StrongNameIdentityPermission^ snIdPerm2;\n        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));    \n        snIdPerm2 = gcnew StrongNameIdentityPermission(PermissionState::None);\n        snIdPerm2-&gt;FromXml(snIdPerm1-&gt;ToXml());\n        Console::WriteLine(&quot;Result of ToFromXml = &quot; + snIdPerm2-&gt;ToString() + &quot;<br>&quot;);\n\n        return returnValue;\n    }\n\n\npublic:\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#6\">    // ToXml creates an XML encoding of the permission and its current state;\n    //FromXml reconstructs a permission with the specified state from the XML encoding.\n    private bool ToFromXmlDemo()\n    {\n\n        bool returnValue = true;\n\n        StrongNameIdentityPermission snIdPerm1, snIdPerm2;\n\n        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));    \n        snIdPerm2 = new StrongNameIdentityPermission(PermissionState.None);\n        snIdPerm2.FromXml(snIdPerm1.ToXml());\n        Console.WriteLine(&quot;Result of ToFromXml = &quot; + snIdPerm2.ToString() + &quot;<br>&quot;);\n\n        return returnValue;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_Intersect_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a permission that is the intersection of the current permission and the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Intersect (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to intersect with the current permission. It must be of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new permission that represents the intersection of the current permission and the specified permission, or <code>null</code> if the intersection is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.  </p>\n<p> The intersection of two identical strong name identity permissions is the same permission. The intersection of two different (not wildcard) expressions is an empty permission. The intersection of a wildcard expression and a matching strong name is the strong name. The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the results of the use of the Intersect method, not how to use the method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class. The best use for this example is to build and execute the entire example, and view its output.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#4\">    &#39; Intersect creates and returns a new permission that is the intersection of the current\n    &#39; permission and the permission specified.\n    Private Function IntersectDemo() As Boolean \n        \n        Dim returnValue As Boolean = True\n        \n        Dim snIdPerm1, snIdPerm2, snIdPerm3 As StrongNameIdentityPermission\n        \n        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n        snIdPerm2 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, New Version(&quot;1.0.0.0&quot;))\n        \n        Try\n            \n            snIdPerm3 = CType(snIdPerm1.Intersect(snIdPerm2), StrongNameIdentityPermission)\n            \n            Console.WriteLine(&quot;The intersection of MyCompany.MyDepartment.*&quot; + &quot;MyCompany.MyDepartment.MyFile is &quot; + CType(snIdPerm3, StrongNameIdentityPermission).Name.ToString())\n        \n        Catch e As Exception\n            Console.WriteLine(&quot;An exception was thrown: &quot; + e.ToString())\n            returnValue = False\n        End Try\n        \n        Return returnValue\n    \n    End Function &#39;IntersectDemo\n     \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#4\">    // Intersect creates and returns a new permission that is the intersection of the current\n    // permission and the permission specified.\n    bool IntersectDemo()\n    {\n        bool returnValue = true;\n        StrongNameIdentityPermission^ snIdPerm1;\n        StrongNameIdentityPermission^ snIdPerm2;\n        StrongNameIdentityPermission^ snIdPerm3;\n        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n\n        try\n        {\n\n            snIdPerm3 = dynamic_cast&lt;StrongNameIdentityPermission^&gt;(snIdPerm1-&gt;Intersect(snIdPerm2));\n\n            Console::WriteLine(&quot;The intersection of MyCompany.MyDepartment.*&quot; +\n                &quot;and MyCompany.MyDepartment.MyFile is &quot; +\n                (dynamic_cast&lt;StrongNameIdentityPermission^&gt;(snIdPerm3))-&gt;Name);\n        }\n        catch (Exception^ e)\n        {\n            Console::WriteLine(&quot;An exception was thrown: &quot; + e);\n            returnValue = false;\n        }\n\n        return returnValue;\n\n    }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#4\">    // Intersect creates and returns a new permission that is the intersection of the current\n    // permission and the permission specified.\n    private bool IntersectDemo()\n    {\n\n        bool returnValue = true;\n\n        StrongNameIdentityPermission snIdPerm1, snIdPerm2, snIdPerm3;\n\n        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, new Version(&quot;1.0.0.0&quot;));\n\n        try\n        {\n\n            snIdPerm3 = (StrongNameIdentityPermission)snIdPerm1.Intersect(snIdPerm2);\n\n            Console.WriteLine(&quot;The intersection of MyCompany.MyDepartment.*&quot;\n            + &quot;MyCompany.MyDepartment.MyFile is &quot;\n            + ((StrongNameIdentityPermission)snIdPerm3).Name.ToString());\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;An exception was thrown: &quot; + e);\n            returnValue = false;\n        }\n\n        return returnValue;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_IsSubsetOf_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_IsSubsetOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSubsetOf(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current permission is a subset of the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsSubsetOf (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current permission is a subset of the specified permission; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, the other properties being equal, an identity with the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission#System_Security_Permissions_StrongNameIdentityPermission_Name_\" data-linktype=\"relative-path\">Name</a> property containing the wildcard expression MyCompany.MyDepartment.* is identified as a subset of an identity with the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission#System_Security_Permissions_StrongNameIdentityPermission_Name_\" data-linktype=\"relative-path\">Name</a> property MyCompany.MyDepartment.MyFile.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the results of the use of the IsSubsetOf method, not how to use the method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class. The best use for this example is to build and execute the entire example, and view its output.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#2\">    &#39; IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    Private Function IsSubsetOfDemo() As Boolean \n        \n        Dim returnValue As Boolean = True\n        \n        Dim snIdPerm1, snIdPerm2 As StrongNameIdentityPermission\n        \n        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n        snIdPerm2 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, New Version(&quot;1.0.0.0&quot;))\n        \n        If snIdPerm1.IsSubsetOf(snIdPerm2) Then\n            \n            Console.WriteLine(&quot;MyCompany.MyDepartment.* is a subset &quot; + &quot;of MyCompany.MyDepartment.MyFile &quot; + vbLf)\n        Else\n            Console.WriteLine(&quot;MyCompany.MyDepartment.*&quot; + &quot; is not a subset of MyCompany.MyDepartment.MyFile &quot; + vbLf)\n        End If\n        \n        Return returnValue\n    \n    End Function &#39;IsSubsetOfDemo\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#2\">    // IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    bool IsSubsetOfDemo()\n    {\n        bool returnValue = true;\n\n        StrongNameIdentityPermission^ snIdPerm1;\n        StrongNameIdentityPermission^ snIdPerm2;\n\n        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n\n        if (snIdPerm1-&gt;IsSubsetOf(snIdPerm2))\n        {\n\n            Console::WriteLine(&quot;MyCompany.MyDepartment.* is a subset &quot; +\n                &quot;of MyCompany.MyDepartment.MyFile <br>&quot;);\n        }\n        else\n        {\n            Console::WriteLine(&quot;MyCompany.MyDepartment.*&quot; +\n                &quot; is not a subset of MyCompany.MyDepartment.MyFile <br>&quot;);\n        }\n\n        return returnValue;\n    }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#2\">    // IsSubsetOf determines whether the current permission is a subset of the specified permission.\n    private bool IsSubsetOfDemo()\n    {\n\n        bool returnValue = true;\n\n        StrongNameIdentityPermission snIdPerm1, snIdPerm2;\n\n        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, new Version(&quot;1.0.0.0&quot;));\n\n        if (snIdPerm1.IsSubsetOf(snIdPerm2))\n        {\n\n            Console.WriteLine(&quot;MyCompany.MyDepartment.* is a subset &quot; +\n            &quot;of MyCompany.MyDepartment.MyFile <br>&quot;);\n        }\n        else\n        {\n            Console.WriteLine(&quot;MyCompany.MyDepartment.*&quot; +\n            &quot; is not a subset of MyCompany.MyDepartment.MyFile <br>&quot;);\n        }\n\n        return returnValue;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_ToXml\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_ToXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToXml()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an XML encoding of the permission and its current state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.SecurityElement ToXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </div>\r\n                  <p>An XML encoding of the permission, including any state information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not typically used by application code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the behavior of the ToXml method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#6\">    &#39; ToXml creates an XML encoding of the permission and its current state;\n    &#39;FromXml reconstructs a permission with the specified state from the XML encoding.\n    Private Function ToFromXmlDemo() As Boolean \n        \n        Dim returnValue As Boolean = True\n        \n        Dim snIdPerm1, snIdPerm2 As StrongNameIdentityPermission\n        \n        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n        snIdPerm2 = New StrongNameIdentityPermission(PermissionState.None)\n        snIdPerm2.FromXml(snIdPerm1.ToXml())\n        Console.WriteLine(&quot;Result of ToFromXml = &quot; + snIdPerm2.ToString() + vbLf)\n        \n        Return returnValue\n    \n    End Function &#39;ToFromXmlDemo\n     \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#6\">    // ToXml creates an XML encoding of the permission and its current state;\n    //FromXml reconstructs a permission with the specified state from the XML encoding.\n    bool ToFromXmlDemo()\n    {\n        bool returnValue = true;\n        StrongNameIdentityPermission^ snIdPerm1;\n        StrongNameIdentityPermission^ snIdPerm2;\n        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));    \n        snIdPerm2 = gcnew StrongNameIdentityPermission(PermissionState::None);\n        snIdPerm2-&gt;FromXml(snIdPerm1-&gt;ToXml());\n        Console::WriteLine(&quot;Result of ToFromXml = &quot; + snIdPerm2-&gt;ToString() + &quot;<br>&quot;);\n\n        return returnValue;\n    }\n\n\npublic:\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#6\">    // ToXml creates an XML encoding of the permission and its current state;\n    //FromXml reconstructs a permission with the specified state from the XML encoding.\n    private bool ToFromXmlDemo()\n    {\n\n        bool returnValue = true;\n\n        StrongNameIdentityPermission snIdPerm1, snIdPerm2;\n\n        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));    \n        snIdPerm2 = new StrongNameIdentityPermission(PermissionState.None);\n        snIdPerm2.FromXml(snIdPerm1.ToXml());\n        Console.WriteLine(&quot;Result of ToFromXml = &quot; + snIdPerm2.ToString() + &quot;<br>&quot;);\n\n        return returnValue;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_StrongNameIdentityPermission_Union_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_StrongNameIdentityPermission_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a permission that is the union of the current permission and the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Union (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to combine with the current permission. It must be of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new permission that represents the union of the current permission and the specified permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.  </p>\n<p> -or-  </p>\n<p> The two permissions are not equal and one is a subset of the other.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.  </p>\n<p> The union of a permission and <code>null</code> is the permission that is not <code>null</code>. The union of a permission and a subset of that permission is the permission that contains the other. Any other combination results in an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> exception being thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the results of the use of the Union method, not how to use the method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> class. The best use for this example is to build and execute the entire example, and view its output.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.StrongNameIdentityPermission#3\">    &#39; Union creates a new permission that is the union of the current permission and the specified permission.\n    Private Function UnionDemo() As Boolean \n        \n        Dim returnValue As Boolean = True\n        \n        Dim snIdPerm1, snIdPerm2 As StrongNameIdentityPermission\n        Dim snIdPerm3 As IPermission\n        \n        snIdPerm1 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, New Version(&quot;1.0.0.0&quot;))\n        snIdPerm2 = New StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, New Version(&quot;1.0.0.0&quot;))\n        \n        snIdPerm3 = CType(snIdPerm1.Union(snIdPerm2), StrongNameIdentityPermission)\n        \n        Try\n            Console.WriteLine(&quot;The union of MyCompany.MyDepartment.*&quot; + &quot;and MyCompany.MyDepartment.MyFile is &quot; + CType(snIdPerm3, StrongNameIdentityPermission).Name.ToString())\n        Catch e As Exception\n            Console.WriteLine(&quot;An expected exception was thrown: &quot; + e.Message)\n        End Try\n        \n        \n        Return returnValue\n    \n    End Function &#39;UnionDemo\n     \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Permissions.StrongNameIdentityPermission#3\">    // Union creates a new permission that is the union of the current permission and the specified permission.\n    bool UnionDemo()\n    {\n        bool returnValue = true;\n        StrongNameIdentityPermission^ snIdPerm1;\n        StrongNameIdentityPermission^ snIdPerm2;\n        IPermission^ snIdPerm3;\n        snIdPerm1 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = gcnew StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, gcnew Version(&quot;1.0.0.0&quot;));\n        snIdPerm3 = dynamic_cast&lt;StrongNameIdentityPermission^&gt;(snIdPerm1-&gt;Union( snIdPerm2 ));\n        snIdPerm3 = snIdPerm1-&gt;Union( snIdPerm2 );\n\n        try\n        {\n            Console::WriteLine(&quot;The union of MyCompany.MyDepartment.*&quot; +\n                &quot;and MyCompany.MyDepartment.MyFile is &quot; +\n                (dynamic_cast&lt;StrongNameIdentityPermission^&gt;(snIdPerm3))-&gt;Name); \n        }\n        catch (Exception^ e)\n        {\n            Console::WriteLine(&quot;An expected exception was thrown: &quot; + e-&gt;Message);\n        }\n\n\n        return returnValue;\n    }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.StrongNameIdentityPermission#3\">    // Union creates a new permission that is the union of the current permission and the specified permission.\n    private bool UnionDemo()\n    {\n\n        bool returnValue = true;\n\n        StrongNameIdentityPermission snIdPerm1, snIdPerm2;\n        IPermission snIdPerm3;\n\n        snIdPerm1 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.*&quot;, new Version(&quot;1.0.0.0&quot;));\n        snIdPerm2 = new StrongNameIdentityPermission(blob, &quot;MyCompany.MyDepartment.MyFile&quot;, new Version(&quot;1.0.0.0&quot;));\n\n        snIdPerm3 = (StrongNameIdentityPermission)snIdPerm1.Union(snIdPerm2);\n\n        try\n        {\n            Console.WriteLine(&quot;The union of MyCompany.MyDepartment.*&quot; +\n            &quot;and MyCompany.MyDepartment.MyFile is &quot; +\n            ((StrongNameIdentityPermission)snIdPerm3).Name.ToString());\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;An expected exception was thrown: &quot; + e.Message);\n        }\n\n\n        return returnValue;\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Permissions.StrongNameIdentityPermission.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Permissions.StrongNameIdentityPermission.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.Copy\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.FromXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.Name\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.PublicKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.ToXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.Union\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.StrongNameIdentityPermission.Version\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f8a24abd-0ef4-d726-1374-622a0a7b3a4e\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Permissions\\StrongNameIdentityPermission.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the identity permission for strong names. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Permissions/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Permissions.StrongNameIdentityPermission\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Permissions.StrongNameIdentityPermission.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Permissions.StrongNameIdentityPermission.yml","open_to_public_contributors":true,"api_name":["System.Security.Permissions.StrongNameIdentityPermission","System.Security.Permissions.StrongNameIdentityPermission..ctor","System.Security.Permissions.StrongNameIdentityPermission.Copy","System.Security.Permissions.StrongNameIdentityPermission.FromXml","System.Security.Permissions.StrongNameIdentityPermission.Intersect","System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf","System.Security.Permissions.StrongNameIdentityPermission.Name","System.Security.Permissions.StrongNameIdentityPermission.PublicKey","System.Security.Permissions.StrongNameIdentityPermission.ToXml","System.Security.Permissions.StrongNameIdentityPermission.Union","System.Security.Permissions.StrongNameIdentityPermission.Version"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Permissions.StrongNameIdentityPermission","System::Security::Permissions::StrongNameIdentityPermission","System.Security.Permissions.StrongNameIdentityPermission.#ctor","System::Security::Permissions::StrongNameIdentityPermission::#ctor","System.Security.Permissions.StrongNameIdentityPermission.Copy","System::Security::Permissions::StrongNameIdentityPermission::Copy","System.Security.Permissions.StrongNameIdentityPermission.FromXml","System::Security::Permissions::StrongNameIdentityPermission::FromXml","System.Security.Permissions.StrongNameIdentityPermission.Intersect","System::Security::Permissions::StrongNameIdentityPermission::Intersect","System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf","System::Security::Permissions::StrongNameIdentityPermission::IsSubsetOf","System.Security.Permissions.StrongNameIdentityPermission.Name","System::Security::Permissions::StrongNameIdentityPermission::Name","System.Security.Permissions.StrongNameIdentityPermission.PublicKey","System::Security::Permissions::StrongNameIdentityPermission::PublicKey","System.Security.Permissions.StrongNameIdentityPermission.ToXml","System::Security::Permissions::StrongNameIdentityPermission::ToXml","System.Security.Permissions.StrongNameIdentityPermission.Union","System::Security::Permissions::StrongNameIdentityPermission::Union","System.Security.Permissions.StrongNameIdentityPermission.Version","System::Security::Permissions::StrongNameIdentityPermission::Version"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f8a24abd-0ef4-d726-1374-622a0a7b3a4e","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Permissions\\StrongNameIdentityPermission.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Permissions/StrongNameIdentityPermission.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StrongNameIdentityPermission class | Microsoft Docs","_op_ogTitle":"StrongNameIdentityPermission class","description":"Defines the identity permission for strong names. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Permissions/toc.json","toc_rel":"_splitted/System.Security.Permissions/toc.json","source_url":"","ms.assetid":"System.Security.Permissions.StrongNameIdentityPermission","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.permissions.strongnameidentitypermission","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.permissions.strongnameidentitypermission","fileRelativePath":"System.Security.Permissions.StrongNameIdentityPermission.html"},"themesRelativePathToOutputRoot":"_themes/"}