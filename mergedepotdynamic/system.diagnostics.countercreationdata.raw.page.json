{"content":"    \r\n    <h1 id=\"System_Diagnostics_CounterCreationData\">\r\n      <span class=\"lang-csharp\">CounterCreationData</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the counter type, name, and Help string for a custom counter.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(&quot;System.Diagnostics.Design.CounterCreationDataConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\npublic class CounterCreationData</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CounterCreationData</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationData__ctor\" data-linktype=\"self-bookmark\">CounterCreationData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class, to a counter of type <code>NumberOfItems32</code>, and with empty name and help strings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationData__ctor_System_String_System_String_System_Diagnostics_PerformanceCounterType_\" data-linktype=\"self-bookmark\">CounterCreationData(String,String,PerformanceCounterType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class, to a counter of the specified type, using the specified counter name and Help strings.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationData_CounterHelp\" data-linktype=\"self-bookmark\">CounterHelp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the custom counter&#39;s description.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationData_CounterName\" data-linktype=\"self-bookmark\">CounterName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the custom counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_CounterCreationData_CounterType\" data-linktype=\"self-bookmark\">CounterType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the performance counter type of the custom counter.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationData__ctor\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterCreationData()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class, to a counter of type <code>NumberOfItems32</code>, and with empty name and help strings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CounterCreationData ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to create an empty instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class. Because the example does not pass in any parameters, the <a class=\"xref\" href=\"system.diagnostics.countercreationdata#System_Diagnostics_CounterCreationData_CounterHelp_\" data-linktype=\"relative-path\">CounterHelp</a>, <a class=\"xref\" href=\"system.diagnostics.countercreationdata#System_Diagnostics_CounterCreationData_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.countercreationdata#System_Diagnostics_CounterCreationData_CounterType_\" data-linktype=\"relative-path\">CounterType</a> properties are not specified and must be defined later.  </p>\n<pre><code class=\"lang-cs\" name=\"Diagnostics_CounterCreationData#3\">using System;\nusing System.Diagnostics;\n\nnamespace MyDiagnostics\n{\n    class MyCounterCreationData\n    {\n        static void Main()\n        {\n            CounterCreationDataCollection myCol =\n                                       new CounterCreationDataCollection();\n\n            // Create two custom counter objects.\n            CounterCreationData myCounter1 = new CounterCreationData(&quot;Counter1&quot;,\n               &quot;First custom counter&quot;, PerformanceCounterType.CounterDelta32);\n\n            CounterCreationData myCounter2 = new CounterCreationData();\n\n            // Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32;\n\n            // Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1);\n            myCol.Add(myCounter2);\n\n            if (PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;))\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;);\n\n            // Bind the counters to a PerformanceCounterCategory.\n            PerformanceCounterCategory myCategory =\n                  PerformanceCounterCategory.Create(&quot;New Counter Category&quot;, &quot;Category Help&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCol);\n\n\n            Console.WriteLine(&quot;Counter Information:&quot;);\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName);\n            for (int i = 0; i &lt; myCol.Count; i++)\n            {\n                // Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol[i].CounterName);\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol[i].CounterHelp);\n                Console.WriteLine(&quot;CounterType : &quot; + myCol[i].CounterType);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Diagnostics_CounterCreationData#3\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   CounterCreationDataCollection^ myCol = gcnew CounterCreationDataCollection;\n   \n   // Create two custom counter objects.\n   CounterCreationData^ myCounter1 = gcnew CounterCreationData( &quot;Counter1&quot;,&quot;First custom counter&quot;,PerformanceCounterType::CounterDelta32 );\n   CounterCreationData^ myCounter2 = gcnew CounterCreationData;\n   \n   // Set the properties of the &#39;CounterCreationData&#39; Object*.\n   myCounter2-&gt;CounterName = &quot;Counter2&quot;;\n   myCounter2-&gt;CounterHelp = &quot;Second custom counter&quot;;\n   myCounter2-&gt;CounterType = PerformanceCounterType::NumberOfItemsHEX32;\n   \n   // Add custom counter objects to CounterCreationDataCollection.\n   myCol-&gt;Add( myCounter1 );\n   myCol-&gt;Add( myCounter2 );\n   if ( PerformanceCounterCategory::Exists( &quot;New Counter Category&quot; ) )\n      PerformanceCounterCategory::Delete( &quot;New Counter Category&quot; );\n   \n   // Bind the counters to a PerformanceCounterCategory.\n   PerformanceCounterCategory^ myCategory = PerformanceCounterCategory::Create( &quot;New Counter Category&quot;, &quot;Category Help&quot;, myCol );\n   Console::WriteLine( &quot;Counter Information:&quot; );\n   Console::WriteLine( &quot;Category Name: {0}&quot;, myCategory-&gt;CategoryName );\n   for ( int i = 0; i &lt; myCol-&gt;Count; i++ )\n   {\n      // Display the properties of the CounterCreationData objects.\n      Console::WriteLine( &quot;CounterName : {0}&quot;, myCol[ i ]-&gt;CounterName );\n      Console::WriteLine( &quot;CounterHelp : {0}&quot;, myCol[ i ]-&gt;CounterHelp );\n      Console::WriteLine( &quot;CounterType : {0}&quot;, myCol[ i ]-&gt;CounterType );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Diagnostics_CounterCreationData#3\">Imports System\nImports System.Diagnostics\n\nNamespace MyDiagnostics\n\n    Class MyCounterCreationData\n\n        Shared Sub Main()\n            Dim myCol As New CounterCreationDataCollection()\n\n            &#39; Create two custom counter objects.\n            Dim myCounter1 As New CounterCreationData(&quot;Counter1&quot;, &quot;First custom counter&quot;, _\n                                      PerformanceCounterType.CounterDelta32)\n            Dim myCounter2 As New CounterCreationData()\n\n            &#39; Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32\n\n            &#39; Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1)\n            myCol.Add(myCounter2)\n\n            If PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;) Then\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;)\n            End If\n            &#39; Bind the counters to a PerformanceCounterCategory.\n            Dim myCategory As PerformanceCounterCategory = PerformanceCounterCategory.Create(&quot;New &quot; + _\n                   &quot;Counter Category&quot;, &quot;Category Help&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCol)\n\n            Console.WriteLine(&quot;Counter Information:&quot;)\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName)\n            Dim i As Integer\n            For i = 0 To myCol.Count - 1\n                &#39; Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol(i).CounterName)\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol(i).CounterHelp)\n                Console.WriteLine(&quot;CounterType : &quot; + myCol(i).CounterType.ToString())\n            Next i\n        End Sub &#39;Main\n    End Class &#39;MyCounterCreationData\nEnd Namespace &#39;MyDiagnostics\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationData__ctor_System_String_System_String_System_Diagnostics_PerformanceCounterType_\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterCreationData(String,String,PerformanceCounterType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class, to a counter of the specified type, using the specified counter name and Help strings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CounterCreationData (string counterName, string counterHelp, System.Diagnostics.PerformanceCounterType counterType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the counter, which must be unique within its category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text that describes the counter&#39;s behavior.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> that identifies the counter&#39;s behavior.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>You have specified a value for <code>counterType</code> that is not a member of the <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> enumeration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>counterHelp</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to create an instance of the <a class=\"xref\" href=\"system.diagnostics.countercreationdata\" data-linktype=\"relative-path\">CounterCreationData</a> class, and pass in parameters to set the <a class=\"xref\" href=\"system.diagnostics.countercreationdata#System_Diagnostics_CounterCreationData_CounterHelp_\" data-linktype=\"relative-path\">CounterHelp</a>, <a class=\"xref\" href=\"system.diagnostics.countercreationdata#System_Diagnostics_CounterCreationData_CounterName_\" data-linktype=\"relative-path\">CounterName</a> and <a class=\"xref\" href=\"system.diagnostics.countercreationdata#System_Diagnostics_CounterCreationData_CounterType_\" data-linktype=\"relative-path\">CounterType</a> properties of the object when it is initialized.  </p>\n<pre><code class=\"lang-cs\" name=\"Diagnostics_CounterCreationData#2\">using System;\nusing System.Diagnostics;\n\nnamespace MyDiagnostics\n{\n    class MyCounterCreationData\n    {\n        static void Main()\n        {\n            CounterCreationDataCollection myCol =\n                                       new CounterCreationDataCollection();\n\n            // Create two custom counter objects.\n            CounterCreationData myCounter1 = new CounterCreationData(&quot;Counter1&quot;,\n               &quot;First custom counter&quot;, PerformanceCounterType.CounterDelta32);\n\n            CounterCreationData myCounter2 = new CounterCreationData();\n\n            // Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32;\n\n            // Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1);\n            myCol.Add(myCounter2);\n\n            if (PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;))\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;);\n\n            // Bind the counters to a PerformanceCounterCategory.\n            PerformanceCounterCategory myCategory =\n                  PerformanceCounterCategory.Create(&quot;New Counter Category&quot;, &quot;Category Help&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCol);\n\n\n            Console.WriteLine(&quot;Counter Information:&quot;);\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName);\n            for (int i = 0; i &lt; myCol.Count; i++)\n            {\n                // Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol[i].CounterName);\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol[i].CounterHelp);\n                Console.WriteLine(&quot;CounterType : &quot; + myCol[i].CounterType);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Diagnostics_CounterCreationData#2\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   CounterCreationDataCollection^ myCol = gcnew CounterCreationDataCollection;\n   \n   // Create two custom counter objects.\n   CounterCreationData^ myCounter1 = gcnew CounterCreationData( &quot;Counter1&quot;,&quot;First custom counter&quot;,PerformanceCounterType::CounterDelta32 );\n   CounterCreationData^ myCounter2 = gcnew CounterCreationData;\n   \n   // Set the properties of the &#39;CounterCreationData&#39; Object*.\n   myCounter2-&gt;CounterName = &quot;Counter2&quot;;\n   myCounter2-&gt;CounterHelp = &quot;Second custom counter&quot;;\n   myCounter2-&gt;CounterType = PerformanceCounterType::NumberOfItemsHEX32;\n   \n   // Add custom counter objects to CounterCreationDataCollection.\n   myCol-&gt;Add( myCounter1 );\n   myCol-&gt;Add( myCounter2 );\n   if ( PerformanceCounterCategory::Exists( &quot;New Counter Category&quot; ) )\n      PerformanceCounterCategory::Delete( &quot;New Counter Category&quot; );\n   \n   // Bind the counters to a PerformanceCounterCategory.\n   PerformanceCounterCategory^ myCategory = PerformanceCounterCategory::Create( &quot;New Counter Category&quot;, &quot;Category Help&quot;, myCol );\n   Console::WriteLine( &quot;Counter Information:&quot; );\n   Console::WriteLine( &quot;Category Name: {0}&quot;, myCategory-&gt;CategoryName );\n   for ( int i = 0; i &lt; myCol-&gt;Count; i++ )\n   {\n      // Display the properties of the CounterCreationData objects.\n      Console::WriteLine( &quot;CounterName : {0}&quot;, myCol[ i ]-&gt;CounterName );\n      Console::WriteLine( &quot;CounterHelp : {0}&quot;, myCol[ i ]-&gt;CounterHelp );\n      Console::WriteLine( &quot;CounterType : {0}&quot;, myCol[ i ]-&gt;CounterType );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Diagnostics_CounterCreationData#2\">Imports System\nImports System.Diagnostics\n\nNamespace MyDiagnostics\n\n    Class MyCounterCreationData\n\n        Shared Sub Main()\n            Dim myCol As New CounterCreationDataCollection()\n\n            &#39; Create two custom counter objects.\n            Dim myCounter1 As New CounterCreationData(&quot;Counter1&quot;, &quot;First custom counter&quot;, _\n                                      PerformanceCounterType.CounterDelta32)\n            Dim myCounter2 As New CounterCreationData()\n\n            &#39; Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32\n\n            &#39; Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1)\n            myCol.Add(myCounter2)\n\n            If PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;) Then\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;)\n            End If\n            &#39; Bind the counters to a PerformanceCounterCategory.\n            Dim myCategory As PerformanceCounterCategory = PerformanceCounterCategory.Create(&quot;New &quot; + _\n                   &quot;Counter Category&quot;, &quot;Category Help&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCol)\n\n            Console.WriteLine(&quot;Counter Information:&quot;)\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName)\n            Dim i As Integer\n            For i = 0 To myCol.Count - 1\n                &#39; Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol(i).CounterName)\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol(i).CounterHelp)\n                Console.WriteLine(&quot;CounterType : &quot; + myCol(i).CounterType.ToString())\n            Next i\n        End Sub &#39;Main\n    End Class &#39;MyCounterCreationData\nEnd Namespace &#39;MyDiagnostics\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationData_CounterHelp\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationData_CounterHelp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterHelp</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the custom counter&#39;s description.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CounterHelp { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text that describes the counter&#39;s behavior.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The specified value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to get and set the CounterHelp property. This example creates two counters and sets their CounterHelp property by using different techniques. When the first counter is initialized, the CounterHelp data is passed to the constructor, whereas the second counter sets the property explicitly.  </p>\n<pre><code class=\"lang-cs\" name=\"Diagnostics_CounterCreationData#5\">using System;\nusing System.Diagnostics;\n\nnamespace MyDiagnostics\n{\n    class MyCounterCreationData\n    {\n        static void Main()\n        {\n            CounterCreationDataCollection myCol =\n                                       new CounterCreationDataCollection();\n\n            // Create two custom counter objects.\n            CounterCreationData myCounter1 = new CounterCreationData(&quot;Counter1&quot;,\n               &quot;First custom counter&quot;, PerformanceCounterType.CounterDelta32);\n\n            CounterCreationData myCounter2 = new CounterCreationData();\n\n            // Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32;\n\n            // Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1);\n            myCol.Add(myCounter2);\n\n            if (PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;))\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;);\n\n            // Bind the counters to a PerformanceCounterCategory.\n            PerformanceCounterCategory myCategory =\n                  PerformanceCounterCategory.Create(&quot;New Counter Category&quot;, &quot;Category Help&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCol);\n\n\n            Console.WriteLine(&quot;Counter Information:&quot;);\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName);\n            for (int i = 0; i &lt; myCol.Count; i++)\n            {\n                // Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol[i].CounterName);\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol[i].CounterHelp);\n                Console.WriteLine(&quot;CounterType : &quot; + myCol[i].CounterType);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Diagnostics_CounterCreationData#5\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   CounterCreationDataCollection^ myCol = gcnew CounterCreationDataCollection;\n   \n   // Create two custom counter objects.\n   CounterCreationData^ myCounter1 = gcnew CounterCreationData( &quot;Counter1&quot;,&quot;First custom counter&quot;,PerformanceCounterType::CounterDelta32 );\n   CounterCreationData^ myCounter2 = gcnew CounterCreationData;\n   \n   // Set the properties of the &#39;CounterCreationData&#39; Object*.\n   myCounter2-&gt;CounterName = &quot;Counter2&quot;;\n   myCounter2-&gt;CounterHelp = &quot;Second custom counter&quot;;\n   myCounter2-&gt;CounterType = PerformanceCounterType::NumberOfItemsHEX32;\n   \n   // Add custom counter objects to CounterCreationDataCollection.\n   myCol-&gt;Add( myCounter1 );\n   myCol-&gt;Add( myCounter2 );\n   if ( PerformanceCounterCategory::Exists( &quot;New Counter Category&quot; ) )\n      PerformanceCounterCategory::Delete( &quot;New Counter Category&quot; );\n   \n   // Bind the counters to a PerformanceCounterCategory.\n   PerformanceCounterCategory^ myCategory = PerformanceCounterCategory::Create( &quot;New Counter Category&quot;, &quot;Category Help&quot;, myCol );\n   Console::WriteLine( &quot;Counter Information:&quot; );\n   Console::WriteLine( &quot;Category Name: {0}&quot;, myCategory-&gt;CategoryName );\n   for ( int i = 0; i &lt; myCol-&gt;Count; i++ )\n   {\n      // Display the properties of the CounterCreationData objects.\n      Console::WriteLine( &quot;CounterName : {0}&quot;, myCol[ i ]-&gt;CounterName );\n      Console::WriteLine( &quot;CounterHelp : {0}&quot;, myCol[ i ]-&gt;CounterHelp );\n      Console::WriteLine( &quot;CounterType : {0}&quot;, myCol[ i ]-&gt;CounterType );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Diagnostics_CounterCreationData#5\">Imports System\nImports System.Diagnostics\n\nNamespace MyDiagnostics\n\n    Class MyCounterCreationData\n\n        Shared Sub Main()\n            Dim myCol As New CounterCreationDataCollection()\n\n            &#39; Create two custom counter objects.\n            Dim myCounter1 As New CounterCreationData(&quot;Counter1&quot;, &quot;First custom counter&quot;, _\n                                      PerformanceCounterType.CounterDelta32)\n            Dim myCounter2 As New CounterCreationData()\n\n            &#39; Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32\n\n            &#39; Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1)\n            myCol.Add(myCounter2)\n\n            If PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;) Then\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;)\n            End If\n            &#39; Bind the counters to a PerformanceCounterCategory.\n            Dim myCategory As PerformanceCounterCategory = PerformanceCounterCategory.Create(&quot;New &quot; + _\n                   &quot;Counter Category&quot;, &quot;Category Help&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCol)\n\n            Console.WriteLine(&quot;Counter Information:&quot;)\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName)\n            Dim i As Integer\n            For i = 0 To myCol.Count - 1\n                &#39; Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol(i).CounterName)\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol(i).CounterHelp)\n                Console.WriteLine(&quot;CounterType : &quot; + myCol(i).CounterType.ToString())\n            Next i\n        End Sub &#39;Main\n    End Class &#39;MyCounterCreationData\nEnd Namespace &#39;MyDiagnostics\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationData_CounterName\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationData_CounterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the custom counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CounterName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A name for the counter, which is unique in its category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The specified value is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not between 1 and 80 characters long or contains double quotes, control characters or leading or trailing spaces.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to get and set the CounterName property. This example creates two counters and sets their CounterName property by using different techniques. When the first counter is initialized, the CounterName data is passed to the constructor, whereas the second counter sets the property explicitly.  </p>\n<pre><code class=\"lang-cs\" name=\"Diagnostics_CounterCreationData#4\">using System;\nusing System.Diagnostics;\n\nnamespace MyDiagnostics\n{\n    class MyCounterCreationData\n    {\n        static void Main()\n        {\n            CounterCreationDataCollection myCol =\n                                       new CounterCreationDataCollection();\n\n            // Create two custom counter objects.\n            CounterCreationData myCounter1 = new CounterCreationData(&quot;Counter1&quot;,\n               &quot;First custom counter&quot;, PerformanceCounterType.CounterDelta32);\n\n            CounterCreationData myCounter2 = new CounterCreationData();\n\n            // Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32;\n\n            // Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1);\n            myCol.Add(myCounter2);\n\n            if (PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;))\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;);\n\n            // Bind the counters to a PerformanceCounterCategory.\n            PerformanceCounterCategory myCategory =\n                  PerformanceCounterCategory.Create(&quot;New Counter Category&quot;, &quot;Category Help&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCol);\n\n\n            Console.WriteLine(&quot;Counter Information:&quot;);\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName);\n            for (int i = 0; i &lt; myCol.Count; i++)\n            {\n                // Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol[i].CounterName);\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol[i].CounterHelp);\n                Console.WriteLine(&quot;CounterType : &quot; + myCol[i].CounterType);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Diagnostics_CounterCreationData#4\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   CounterCreationDataCollection^ myCol = gcnew CounterCreationDataCollection;\n   \n   // Create two custom counter objects.\n   CounterCreationData^ myCounter1 = gcnew CounterCreationData( &quot;Counter1&quot;,&quot;First custom counter&quot;,PerformanceCounterType::CounterDelta32 );\n   CounterCreationData^ myCounter2 = gcnew CounterCreationData;\n   \n   // Set the properties of the &#39;CounterCreationData&#39; Object*.\n   myCounter2-&gt;CounterName = &quot;Counter2&quot;;\n   myCounter2-&gt;CounterHelp = &quot;Second custom counter&quot;;\n   myCounter2-&gt;CounterType = PerformanceCounterType::NumberOfItemsHEX32;\n   \n   // Add custom counter objects to CounterCreationDataCollection.\n   myCol-&gt;Add( myCounter1 );\n   myCol-&gt;Add( myCounter2 );\n   if ( PerformanceCounterCategory::Exists( &quot;New Counter Category&quot; ) )\n      PerformanceCounterCategory::Delete( &quot;New Counter Category&quot; );\n   \n   // Bind the counters to a PerformanceCounterCategory.\n   PerformanceCounterCategory^ myCategory = PerformanceCounterCategory::Create( &quot;New Counter Category&quot;, &quot;Category Help&quot;, myCol );\n   Console::WriteLine( &quot;Counter Information:&quot; );\n   Console::WriteLine( &quot;Category Name: {0}&quot;, myCategory-&gt;CategoryName );\n   for ( int i = 0; i &lt; myCol-&gt;Count; i++ )\n   {\n      // Display the properties of the CounterCreationData objects.\n      Console::WriteLine( &quot;CounterName : {0}&quot;, myCol[ i ]-&gt;CounterName );\n      Console::WriteLine( &quot;CounterHelp : {0}&quot;, myCol[ i ]-&gt;CounterHelp );\n      Console::WriteLine( &quot;CounterType : {0}&quot;, myCol[ i ]-&gt;CounterType );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Diagnostics_CounterCreationData#4\">Imports System\nImports System.Diagnostics\n\nNamespace MyDiagnostics\n\n    Class MyCounterCreationData\n\n        Shared Sub Main()\n            Dim myCol As New CounterCreationDataCollection()\n\n            &#39; Create two custom counter objects.\n            Dim myCounter1 As New CounterCreationData(&quot;Counter1&quot;, &quot;First custom counter&quot;, _\n                                      PerformanceCounterType.CounterDelta32)\n            Dim myCounter2 As New CounterCreationData()\n\n            &#39; Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32\n\n            &#39; Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1)\n            myCol.Add(myCounter2)\n\n            If PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;) Then\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;)\n            End If\n            &#39; Bind the counters to a PerformanceCounterCategory.\n            Dim myCategory As PerformanceCounterCategory = PerformanceCounterCategory.Create(&quot;New &quot; + _\n                   &quot;Counter Category&quot;, &quot;Category Help&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCol)\n\n            Console.WriteLine(&quot;Counter Information:&quot;)\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName)\n            Dim i As Integer\n            For i = 0 To myCol.Count - 1\n                &#39; Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol(i).CounterName)\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol(i).CounterHelp)\n                Console.WriteLine(&quot;CounterType : &quot; + myCol(i).CounterType.ToString())\n            Next i\n        End Sub &#39;Main\n    End Class &#39;MyCounterCreationData\nEnd Namespace &#39;MyDiagnostics\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_CounterCreationData_CounterType\">\r\n    \r\n            <a id=\"System_Diagnostics_CounterCreationData_CounterType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the performance counter type of the custom counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.PerformanceCounterType CounterType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> that defines the behavior of the performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>You have specified a type that is not a member of the <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to get and set the CounterType property. This example creates two counters and sets their CounterType property by using different techniques. When the first counter is initialized, the CounterType data is passed to the constructor, whereas the second counter sets the property explicitly.  </p>\n<pre><code class=\"lang-cs\" name=\"Diagnostics_CounterCreationData#6\">using System;\nusing System.Diagnostics;\n\nnamespace MyDiagnostics\n{\n    class MyCounterCreationData\n    {\n        static void Main()\n        {\n            CounterCreationDataCollection myCol =\n                                       new CounterCreationDataCollection();\n\n            // Create two custom counter objects.\n            CounterCreationData myCounter1 = new CounterCreationData(&quot;Counter1&quot;,\n               &quot;First custom counter&quot;, PerformanceCounterType.CounterDelta32);\n\n            CounterCreationData myCounter2 = new CounterCreationData();\n\n            // Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32;\n\n            // Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1);\n            myCol.Add(myCounter2);\n\n            if (PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;))\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;);\n\n            // Bind the counters to a PerformanceCounterCategory.\n            PerformanceCounterCategory myCategory =\n                  PerformanceCounterCategory.Create(&quot;New Counter Category&quot;, &quot;Category Help&quot;,\n                PerformanceCounterCategoryType.SingleInstance, myCol);\n\n\n            Console.WriteLine(&quot;Counter Information:&quot;);\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName);\n            for (int i = 0; i &lt; myCol.Count; i++)\n            {\n                // Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol[i].CounterName);\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol[i].CounterHelp);\n                Console.WriteLine(&quot;CounterType : &quot; + myCol[i].CounterType);\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Diagnostics_CounterCreationData#6\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   CounterCreationDataCollection^ myCol = gcnew CounterCreationDataCollection;\n   \n   // Create two custom counter objects.\n   CounterCreationData^ myCounter1 = gcnew CounterCreationData( &quot;Counter1&quot;,&quot;First custom counter&quot;,PerformanceCounterType::CounterDelta32 );\n   CounterCreationData^ myCounter2 = gcnew CounterCreationData;\n   \n   // Set the properties of the &#39;CounterCreationData&#39; Object*.\n   myCounter2-&gt;CounterName = &quot;Counter2&quot;;\n   myCounter2-&gt;CounterHelp = &quot;Second custom counter&quot;;\n   myCounter2-&gt;CounterType = PerformanceCounterType::NumberOfItemsHEX32;\n   \n   // Add custom counter objects to CounterCreationDataCollection.\n   myCol-&gt;Add( myCounter1 );\n   myCol-&gt;Add( myCounter2 );\n   if ( PerformanceCounterCategory::Exists( &quot;New Counter Category&quot; ) )\n      PerformanceCounterCategory::Delete( &quot;New Counter Category&quot; );\n   \n   // Bind the counters to a PerformanceCounterCategory.\n   PerformanceCounterCategory^ myCategory = PerformanceCounterCategory::Create( &quot;New Counter Category&quot;, &quot;Category Help&quot;, myCol );\n   Console::WriteLine( &quot;Counter Information:&quot; );\n   Console::WriteLine( &quot;Category Name: {0}&quot;, myCategory-&gt;CategoryName );\n   for ( int i = 0; i &lt; myCol-&gt;Count; i++ )\n   {\n      // Display the properties of the CounterCreationData objects.\n      Console::WriteLine( &quot;CounterName : {0}&quot;, myCol[ i ]-&gt;CounterName );\n      Console::WriteLine( &quot;CounterHelp : {0}&quot;, myCol[ i ]-&gt;CounterHelp );\n      Console::WriteLine( &quot;CounterType : {0}&quot;, myCol[ i ]-&gt;CounterType );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Diagnostics_CounterCreationData#6\">Imports System\nImports System.Diagnostics\n\nNamespace MyDiagnostics\n\n    Class MyCounterCreationData\n\n        Shared Sub Main()\n            Dim myCol As New CounterCreationDataCollection()\n\n            &#39; Create two custom counter objects.\n            Dim myCounter1 As New CounterCreationData(&quot;Counter1&quot;, &quot;First custom counter&quot;, _\n                                      PerformanceCounterType.CounterDelta32)\n            Dim myCounter2 As New CounterCreationData()\n\n            &#39; Set the properties of the &#39;CounterCreationData&#39; object.\n            myCounter2.CounterName = &quot;Counter2&quot;\n            myCounter2.CounterHelp = &quot;Second custom counter&quot;\n            myCounter2.CounterType = PerformanceCounterType.NumberOfItemsHEX32\n\n            &#39; Add custom counter objects to CounterCreationDataCollection.\n            myCol.Add(myCounter1)\n            myCol.Add(myCounter2)\n\n            If PerformanceCounterCategory.Exists(&quot;New Counter Category&quot;) Then\n                PerformanceCounterCategory.Delete(&quot;New Counter Category&quot;)\n            End If\n            &#39; Bind the counters to a PerformanceCounterCategory.\n            Dim myCategory As PerformanceCounterCategory = PerformanceCounterCategory.Create(&quot;New &quot; + _\n                   &quot;Counter Category&quot;, &quot;Category Help&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, myCol)\n\n            Console.WriteLine(&quot;Counter Information:&quot;)\n            Console.WriteLine(&quot;Category Name: &quot; + myCategory.CategoryName)\n            Dim i As Integer\n            For i = 0 To myCol.Count - 1\n                &#39; Display the properties of the CounterCreationData objects.\n                Console.WriteLine(&quot;CounterName : &quot; + myCol(i).CounterName)\n                Console.WriteLine(&quot;CounterHelp : &quot; + myCol(i).CounterHelp)\n                Console.WriteLine(&quot;CounterType : &quot; + myCol(i).CounterType.ToString())\n            Next i\n        End Sub &#39;Main\n    End Class &#39;MyCounterCreationData\nEnd Namespace &#39;MyDiagnostics\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.CounterCreationData.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.CounterCreationData.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationData\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationData..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationData.CounterHelp\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationData.CounterName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.CounterCreationData.CounterType\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3bfab268-fb8b-8427-5d23-939ca44fb68b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the counter type, name, and Help string for a custom counter.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.CounterCreationData\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.CounterCreationData.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.CounterCreationData.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.CounterCreationData","System.Diagnostics.CounterCreationData..ctor","System.Diagnostics.CounterCreationData.CounterHelp","System.Diagnostics.CounterCreationData.CounterName","System.Diagnostics.CounterCreationData.CounterType"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.CounterCreationData","System::Diagnostics::CounterCreationData","System.Diagnostics.CounterCreationData.#ctor","System::Diagnostics::CounterCreationData::#ctor","System.Diagnostics.CounterCreationData.CounterHelp","System::Diagnostics::CounterCreationData::CounterHelp","System.Diagnostics.CounterCreationData.CounterName","System::Diagnostics::CounterCreationData::CounterName","System.Diagnostics.CounterCreationData.CounterType","System::Diagnostics::CounterCreationData::CounterType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3bfab268-fb8b-8427-5d23-939ca44fb68b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/CounterCreationData.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CounterCreationData class | Microsoft Docs","_op_ogTitle":"CounterCreationData class","description":"Defines the counter type, name, and Help string for a custom counter.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.CounterCreationData","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.countercreationdata","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.countercreationdata","fileRelativePath":"System.Diagnostics.CounterCreationData.html"},"themesRelativePathToOutputRoot":"_themes/"}