{"content":"    \r\n    <h1 id=\"System_Xml_XPath_Extensions\">\r\n      <span class=\"lang-csharp\">Extensions</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>This class contains the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/sqltecxlinq-md.md&quot; -->LINQ to XML<!--END INCLUDE --> extension methods that enable you to evaluate XPath expressions.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class Extensions</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Extensions</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>There is some performance penalty for using these methods. Using <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/sqltecxlinq-md.md&quot; -->LINQ to XML<!--END INCLUDE --> queries yields better performance.  </p>\n<p> Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.  </p>\n<p> Note that nodes are returned in document order even when you use a reverse axis, such as <code>preceding-sibling</code> or <code>ancestor-or-self</code>.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_CreateNavigator_System_Xml_Linq_XNode_\" data-linktype=\"self-bookmark\">CreateNavigator(XNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> for an <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_CreateNavigator_System_Xml_Linq_XNode_System_Xml_XmlNameTable_\" data-linktype=\"self-bookmark\">CreateNavigator(XNode,XmlNameTable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> for an <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a>. The <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> enables more efficient XPath expression processing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_XPathEvaluate_System_Xml_Linq_XNode_System_String_\" data-linktype=\"self-bookmark\">XPathEvaluate(XNode,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Evaluates an XPath expression.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_XPathEvaluate_System_Xml_Linq_XNode_System_String_System_Xml_IXmlNamespaceResolver_\" data-linktype=\"self-bookmark\">XPathEvaluate(XNode,String,IXmlNamespaceResolver)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Evaluates an XPath expression, resolving namespace prefixes using the specified <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_XPathSelectElement_System_Xml_Linq_XNode_System_String_\" data-linktype=\"self-bookmark\">XPathSelectElement(XNode,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects an <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> using a XPath expression.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_XPathSelectElement_System_Xml_Linq_XNode_System_String_System_Xml_IXmlNamespaceResolver_\" data-linktype=\"self-bookmark\">XPathSelectElement(XNode,String,IXmlNamespaceResolver)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects an <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> using a XPath expression, resolving namespace prefixes using the specified <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_XPathSelectElements_System_Xml_Linq_XNode_System_String_\" data-linktype=\"self-bookmark\">XPathSelectElements(XNode,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a collection of elements using an XPath expression.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XPath_Extensions_XPathSelectElements_System_Xml_Linq_XNode_System_String_System_Xml_IXmlNamespaceResolver_\" data-linktype=\"self-bookmark\">XPathSelectElements(XNode,String,IXmlNamespaceResolver)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_CreateNavigator_System_Xml_Linq_XNode_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_CreateNavigator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateNavigator(XNode)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> for an <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> that can process XPath queries.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> that can process XPath queries.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot edit the XML tree by using the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> that is returned by this method. The <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator#System_Xml_XPath_XPathNavigator_CanEdit_\" data-linktype=\"relative-path\">CanEdit</a> property returns <code>false</code>.  </p>\n<p> You cannot create an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> for a <a class=\"xref\" href=\"system.xml.linq.xdocumenttype\" data-linktype=\"relative-path\">XDocumentType</a> node. Document types do not participate in the XPath data model.  </p>\n<p> Namespace declarations are reported from left to right. In contrast, for <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> namespaces are reported from right to left. This is conformant behavior because namespace declarations are not ordered in the XPath data model.  </p>\n<p> The method <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator#System_Xml_XPath_XPathNavigator_MoveToId_\" data-linktype=\"relative-path\">MoveToId</a> is not supported for navigators that are returned by this method.  </p>\n<p> You can use this method to perform an XSLT transformation. You can create an XML tree, create an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> from the XML tree, create a new document, and create a <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> that will write into the new document. Then, you can invoke the XSLT transformation, passing the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> and <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to the transform. After the transformation successfully completes, the new XML tree is populated with the results of the transformation.  </p>\n<p> To perform an XSLT transformation, you can use either an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> or an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>. The two approaches have different performance characteristics. Some transformations will execute faster when using an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>, and others will execute faster when using a <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>. If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-c#\">\n                string xslMarkup = @&quot;&lt;?xml version=&#39;1.0&#39;?&gt;  \n&lt;xsl:stylesheet xmlns:xsl=&#39;http://www.w3.org/1999/XSL/Transform&#39; version=&#39;1.0&#39;&gt;  \n    &lt;xsl:template match=&#39;/Parent&#39;&gt;  \n        &lt;Root&gt;  \n            &lt;C1&gt;&lt;xsl:value-of select=&#39;Child1&#39;/&gt;&lt;/C1&gt;  \n            &lt;C2&gt;&lt;xsl:value-of select=&#39;Child2&#39;/&gt;&lt;/C2&gt;  \n        &lt;/Root&gt;  \n    &lt;/xsl:template&gt;  \n&lt;/xsl:stylesheet&gt;&quot;;  \n\nXDocument xmlTree = new XDocument(  \n    new XElement(&quot;Parent&quot;,  \n        new XElement(&quot;Child1&quot;, &quot;Child1 data&quot;),  \n        new XElement(&quot;Child2&quot;, &quot;Child2 data&quot;)  \n    )  \n);  \n\nXDocument newTree = new XDocument();  \nusing (XmlWriter writer = newTree.CreateWriter()) {  \n    // Load the style sheet.  \n    XslCompiledTransform xslt = new XslCompiledTransform();  \n    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  \n\n    // Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateNavigator(), writer);  \n}  \n\nConsole.WriteLine(newTree);\n</code></pre><pre><code class=\"lang-vb\">\n                Dim xslMarkup As XDocument = _  \n    &lt;?xml version=&#39;1.0&#39;?&gt;  \n    &lt;xsl:stylesheet xmlns:xsl=&#39;http://www.w3.org/1999/XSL/Transform&#39; version=&#39;1.0&#39;&gt;  \n        &lt;xsl:template match=&#39;/Parent&#39;&gt;  \n            &lt;Root&gt;  \n                &lt;C1&gt;&lt;xsl:value-of select=&#39;Child1&#39;/&gt;&lt;/C1&gt;  \n                &lt;C2&gt;&lt;xsl:value-of select=&#39;Child2&#39;/&gt;&lt;/C2&gt;  \n            &lt;/Root&gt;  \n        &lt;/xsl:template&gt;  \n    &lt;/xsl:stylesheet&gt;  \n\nDim xmlTree As XDocument = _  \n    &lt;?xml version=&#39;1.0&#39;?&gt;  \n    &lt;Parent&gt;  \n        &lt;Child1&gt;Child1 data&lt;/Child1&gt;  \n        &lt;Child2&gt;Child2 data&lt;/Child2&gt;  \n    &lt;/Parent&gt;  \n\nDim newTree As XDocument = New XDocument()  \n\nUsing writer As XmlWriter = newTree.CreateWriter()  \n    &#39; Load the style sheet.  \n    Dim xslt As XslCompiledTransform = _  \n        New XslCompiledTransform()  \n    xslt.Load(xslMarkup.CreateReader())  \n\n    &#39; Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateNavigator(), writer)  \nEnd Using  \n\nConsole.WriteLine(newTree)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code class=\"lang-xml\">\n                &lt;Root&gt;  \n  &lt;C1&gt;Child1 data&lt;/C1&gt;  \n  &lt;C2&gt;Child2 data&lt;/C2&gt;  \n&lt;/Root&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_CreateNavigator_System_Xml_Linq_XNode_System_Xml_XmlNameTable_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_CreateNavigator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateNavigator(XNode,XmlNameTable)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> for an <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a>. The <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> enables more efficient XPath expression processing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> that can process an XPath query.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>nameTable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> to be used by <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> that can process XPath queries.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot edit the XML tree using the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> that is returned by this method. The <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator#System_Xml_XPath_XPathNavigator_CanEdit_\" data-linktype=\"relative-path\">CanEdit</a> property returns <code>false</code>.  </p>\n<p> You cannot create an <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> for a <a class=\"xref\" href=\"system.xml.linq.xdocumenttype\" data-linktype=\"relative-path\">XDocumentType</a> node. Document types do not participate in the XPath data model.  </p>\n<p> Namespace declarations are reported from left to right. In contrast, for <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> namespaces are reported from right to left. This is conformant behavior because namespace declarations are not ordered in the XPath data model.  </p>\n<p> The method <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator#System_Xml_XPath_XPathNavigator_MoveToId_\" data-linktype=\"relative-path\">MoveToId</a> is not supported for navigators that are returned by this method.  </p>\n<p> If you use an <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> with this method to create the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>, you will get better performance when evaluating XPath expressions.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_XPathEvaluate_System_Xml_Linq_XNode_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_XPathEvaluate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPathEvaluate(XNode,String)</div>        \r\n          </div>\r\n    \r\n            <p>Evaluates an XPath expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> on which to evaluate the XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an XPath expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can contain a <code>bool</code>, a <code>double</code>, a <code>string</code>, or an <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the collection is an enumeration of elements or attributes, you can use the <code>Cast</code> operator to get a collection of <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> or <a class=\"xref\" href=\"system.xml.linq.xattribute\" data-linktype=\"relative-path\">XAttribute</a>.  </p>\n<p> Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.  </p>\n<p> Note that nodes are returned in document order even when you use a reverse axis, such as <code>preceding-sibling</code> or <code>ancestor-or-self</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a small XML tree with an attribute, then uses the <a class=\"xref\" href=\"system.xml.xpath.extensions#System_Xml_XPath_Extensions_XPathEvaluate_\" data-linktype=\"relative-path\">XPathEvaluate</a> method to retrieve the attribute.  </p>\n<pre><code class=\"lang-c#\">\n                String xml = &quot;&lt;root a=&#39;value&#39;/&gt;&quot;;  \nXDocument d = XDocument.Parse(xml);  \nIEnumerable att = (IEnumerable)d.XPathEvaluate(&quot;/root/@a&quot;);  \nConsole.WriteLine(att.Cast&lt;XAttribute&gt;().FirstOrDefault());\n</code></pre><pre><code class=\"lang-vb\">\n                Dim d As XDocument = _  \n    &lt;?xml version=&#39;1.0&#39;?&gt;  \n    &lt;root a=&#39;value&#39;/&gt;  \nDim att As IEnumerable = CType(d.XPathEvaluate(&quot;/root/@a&quot;), IEnumerable)  \nConsole.WriteLine(att.Cast(Of XAttribute)().FirstOrDefault())\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>a=&quot;value&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_XPathEvaluate_System_Xml_Linq_XNode_System_String_System_Xml_IXmlNamespaceResolver_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_XPathEvaluate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPathEvaluate(XNode,String,IXmlNamespaceResolver)</div>        \r\n          </div>\r\n    \r\n            <p>Evaluates an XPath expression, resolving namespace prefixes using the specified <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> on which to evaluate the XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>resolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> for the namespace prefixes in the XPath expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that contains the result of evaluating the expression. The object can be a <code>bool</code>, a <code>double</code>, a <code>string</code>, or an <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to evaluate XPath expressions that contain namespace prefixes.  </p>\n<p> Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.  </p>\n<p> Note that nodes are returned in document order even when you use a reverse axis, such as <code>preceding-sibling</code> or <code>ancestor-or-self</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an XML tree that contains a namespace. It uses an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to read the XML document. It then gets an <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> from the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>, and an <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> from the <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a>. It uses the <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> when selecting an element.  </p>\n<pre><code class=\"lang-c#\">\n                string markup =  \n@&quot;&lt;aw:Root xmlns:aw=&#39;http://www.adventure-works.com&#39;&gt;  \n    &lt;aw:Child1 aw:Att=&#39;attdata&#39;&gt;child one data 1&lt;/aw:Child1&gt;  \n&lt;/aw:Root&gt;&quot;;  \nXmlReader reader = XmlReader.Create(new StringReader(markup));  \nXElement root = XElement.Load(reader);  \nXmlNameTable nameTable = reader.NameTable;  \nXmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;);  \nIEnumerable atts = (IEnumerable)root.XPathEvaluate(&quot;./aw:Child1/@aw:Att&quot;, namespaceManager);  \nIEnumerable&lt;XAttribute&gt; attList = atts.Cast&lt;XAttribute&gt;();  \nXAttribute att = attList.First();  \nConsole.WriteLine(att);\n</code></pre><pre><code class=\"lang-vb\">\n                Dim markup As XElement = _  \n    &lt;aw:Root xmlns:aw=&#39;http://www.adventure-works.com&#39;&gt;  \n        &lt;aw:Child1 aw:Att=&#39;attdata&#39;&gt;child one data 1&lt;/aw:Child1&gt;  \n    &lt;/aw:Root&gt;  \nDim reader As XmlReader = markup.CreateReader  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;)  \nDim atts As IEnumerable = CType(markup.XPathEvaluate(&quot;./aw:Child1/@aw:Att&quot;, namespaceManager), IEnumerable)  \nDim attList As IEnumerable(Of XAttribute) = atts.Cast(Of XAttribute)()  \nDim att As XAttribute = attList.First()  \nConsole.WriteLine(att)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>aw:Att=&quot;attdata&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_XPathSelectElement_System_Xml_Linq_XNode_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_XPathSelectElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPathSelectElement(XNode,String)</div>        \r\n          </div>\r\n    \r\n            <p>Selects an <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> using a XPath expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> on which to evaluate the XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an XPath expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a>, or null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a small XML tree and uses <a class=\"xref\" href=\"system.xml.xpath.extensions#System_Xml_XPath_Extensions_XPathSelectElement_\" data-linktype=\"relative-path\">XPathSelectElement</a> to select a single element.  </p>\n<pre><code class=\"lang-c#\">\n                XElement root = new XElement(&quot;Root&quot;,  \n    new XElement(&quot;Child1&quot;, 1),  \n    new XElement(&quot;Child2&quot;, 2),  \n    new XElement(&quot;Child3&quot;, 3),  \n    new XElement(&quot;Child4&quot;, 4),  \n    new XElement(&quot;Child5&quot;, 5),  \n    new XElement(&quot;Child6&quot;, 6)  \n);  \nXElement el = root.XPathSelectElement(&quot;./Child4&quot;);  \nConsole.WriteLine(el);\n</code></pre><pre><code class=\"lang-vb\">\n                Dim root As XElement = _  \n    &lt;Root&gt;  \n        &lt;Child1&gt;1&lt;/Child1&gt;  \n        &lt;Child2&gt;2&lt;/Child2&gt;  \n        &lt;Child3&gt;3&lt;/Child3&gt;  \n        &lt;Child4&gt;4&lt;/Child4&gt;  \n        &lt;Child5&gt;5&lt;/Child5&gt;  \n        &lt;Child6&gt;6&lt;/Child6&gt;  \n    &lt;/Root&gt;  \nDim el As XElement = root.XPathSelectElement(&quot;./Child4&quot;)  \nConsole.WriteLine(el)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>&lt;Child4&gt;4&lt;/Child4&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_XPathSelectElement_System_Xml_Linq_XNode_System_String_System_Xml_IXmlNamespaceResolver_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_XPathSelectElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPathSelectElement(XNode,String,IXmlNamespaceResolver)</div>        \r\n          </div>\r\n    \r\n            <p>Selects an <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> using a XPath expression, resolving namespace prefixes using the specified <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> on which to evaluate the XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>resolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> for the namespace prefixes in the XPath expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a>, or null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to evaluate XPath expressions that contain namespace prefixes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an XML tree that contains a namespace. It uses an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to read the XML document. It then gets an <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> from the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>, and an <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> from the <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a>. It uses the <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> when selecting an element.  </p>\n<pre><code class=\"lang-c#\">\n                string markup = @&quot;  \n&lt;aw:Root xmlns:aw=&#39;http://www.adventure-works.com&#39;&gt;  \n    &lt;aw:Child1&gt;child one data&lt;/aw:Child1&gt;  \n    &lt;aw:Child2&gt;child two data&lt;/aw:Child2&gt;  \n&lt;/aw:Root&gt;&quot;;  \nXmlReader reader = XmlReader.Create(new StringReader(markup));  \nXElement root = XElement.Load(reader);  \nXmlNameTable nameTable = reader.NameTable;  \nXmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;);  \nXElement child1 = root.XPathSelectElement(&quot;./aw:Child1&quot;, namespaceManager);  \nConsole.WriteLine(child1);\n</code></pre><pre><code class=\"lang-vb\">\n                Dim markup As XElement = _  \n    &lt;aw:Root xmlns:aw=&#39;http://www.adventure-works.com&#39;&gt;  \n        &lt;aw:Child1&gt;child one data&lt;/aw:Child1&gt;  \n        &lt;aw:Child2&gt;child two data&lt;/aw:Child2&gt;  \n    &lt;/aw:Root&gt;  \nDim reader As XmlReader = markup.CreateReader  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;)  \nDim child1 As XElement = markup.XPathSelectElement(&quot;./aw:Child1&quot;, namespaceManager)  \nConsole.WriteLine(child1)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>&lt;aw:Child1 xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;child one data&lt;/aw:Child1&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_XPathSelectElements_System_Xml_Linq_XNode_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_XPathSelectElements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPathSelectElements(XNode,String)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a collection of elements using an XPath expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> on which to evaluate the XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an XPath expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a>&gt;</div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span> of <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> that contains the selected elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.  </p>\n<p> Note that nodes are returned in document order even when you use a reverse axis, such as <code>preceding-sibling</code> or <code>ancestor-or-self</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a small XML tree and uses <a class=\"xref\" href=\"system.xml.xpath.extensions#System_Xml_XPath_Extensions_XPathSelectElements_\" data-linktype=\"relative-path\">XPathSelectElements</a> to select a set of elements.  </p>\n<pre><code class=\"lang-c#\">\n                XElement root = new XElement(&quot;Root&quot;,  \n    new XElement(&quot;Child1&quot;, 1),  \n    new XElement(&quot;Child1&quot;, 2),  \n    new XElement(&quot;Child1&quot;, 3),  \n    new XElement(&quot;Child2&quot;, 4),  \n    new XElement(&quot;Child2&quot;, 5),  \n    new XElement(&quot;Child2&quot;, 6)  \n);  \nIEnumerable&lt;XElement&gt; list = root.XPathSelectElements(&quot;./Child2&quot;);  \nforeach (XElement el in list)  \n    Console.WriteLine(el);\n</code></pre><pre><code class=\"lang-vb\">\n                Dim root As XElement = _  \n    &lt;Root&gt;  \n        &lt;Child1&gt;1&lt;/Child1&gt;  \n        &lt;Child1&gt;2&lt;/Child1&gt;  \n        &lt;Child1&gt;3&lt;/Child1&gt;  \n        &lt;Child2&gt;4&lt;/Child2&gt;  \n        &lt;Child2&gt;5&lt;/Child2&gt;  \n        &lt;Child2&gt;6&lt;/Child2&gt;  \n    &lt;/Root&gt;  \nDim list As IEnumerable(Of XElement) = root.XPathSelectElements(&quot;./Child2&quot;)  \nFor Each el As XElement In list  \n    Console.WriteLine(el)  \nNext\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>&lt;Child2&gt;4&lt;/Child2&gt;  \n&lt;Child2&gt;5&lt;/Child2&gt;  \n&lt;Child2&gt;6&lt;/Child2&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XPath_Extensions_XPathSelectElements_System_Xml_Linq_XNode_System_String_System_Xml_IXmlNamespaceResolver_\">\r\n    \r\n            <a id=\"System_Xml_XPath_Extensions_XPathSelectElements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPathSelectElements(XNode,String,IXmlNamespaceResolver)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> on which to evaluate the XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an XPath expression.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>resolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> for the namespace prefixes in the XPath expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a>&gt;</div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span> of <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> that contains the selected elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to evaluate XPath expressions that contain namespace prefixes.  </p>\n<p> Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.  </p>\n<p> Note that nodes are returned in document order even when you use a reverse axis, such as <code>preceding-sibling</code> or <code>ancestor-or-self</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example creates an XML tree that contains a namespace. It uses an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to read the XML document. It then gets an <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> from the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>, and an <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> from the <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a>. It uses the <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> when selecting the list of elements.  </p>\n<pre><code class=\"lang-c#\">\n                string markup = @&quot;  \n&lt;aw:Root xmlns:aw=&#39;http://www.adventure-works.com&#39;&gt;  \n    &lt;aw:Child1&gt;child one data 1&lt;/aw:Child1&gt;  \n    &lt;aw:Child1&gt;child one data 2&lt;/aw:Child1&gt;  \n    &lt;aw:Child1&gt;child one data 3&lt;/aw:Child1&gt;  \n    &lt;aw:Child2&gt;child two data 4&lt;/aw:Child2&gt;  \n    &lt;aw:Child2&gt;child two data 5&lt;/aw:Child2&gt;  \n    &lt;aw:Child2&gt;child two data 6&lt;/aw:Child2&gt;  \n&lt;/aw:Root&gt;&quot;;  \nXmlReader reader = XmlReader.Create(new StringReader(markup));  \nXElement root = XElement.Load(reader);  \nXmlNameTable nameTable = reader.NameTable;  \nXmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;);  \nIEnumerable&lt;XElement&gt; elements = root.XPathSelectElements(&quot;./aw:Child1&quot;, namespaceManager);  \nforeach (XElement el in elements)  \n    Console.WriteLine(el);\n</code></pre><pre><code class=\"lang-vb\">\n                Dim markup As XElement = _  \n&lt;aw:Root xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;  \n    &lt;aw:Child1&gt;child one data 1&lt;/aw:Child1&gt;  \n    &lt;aw:Child1&gt;child one data 2&lt;/aw:Child1&gt;  \n    &lt;aw:Child1&gt;child one data 3&lt;/aw:Child1&gt;  \n    &lt;aw:Child2&gt;child two data 4&lt;/aw:Child2&gt;  \n    &lt;aw:Child2&gt;child two data 5&lt;/aw:Child2&gt;  \n    &lt;aw:Child2&gt;child two data 6&lt;/aw:Child2&gt;  \n&lt;/aw:Root&gt;  \nDim reader As XmlReader = markup.CreateReader  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(&quot;aw&quot;, &quot;http://www.adventure-works.com&quot;)  \nDim elements As IEnumerable(Of XElement) = markup.XPathSelectElements(&quot;./aw:Child1&quot;, namespaceManager)  \nFor Each el As XElement In elements  \n    Console.WriteLine(el)  \nNext\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>&lt;aw:Child1 xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;child one data 1&lt;/aw:Child1&gt;  \n&lt;aw:Child1 xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;child one data 2&lt;/aw:Child1&gt;  \n&lt;aw:Child1 xmlns:aw=&quot;http://www.adventure-works.com&quot;&gt;child one data 3&lt;/aw:Child1&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XPath.Extensions.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XPath.Extensions.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XPath.Extensions\">\r\n<meta name=\"APIName\" content=\"System.Xml.XPath.Extensions.CreateNavigator\">\r\n<meta name=\"APIName\" content=\"System.Xml.XPath.Extensions.XPathEvaluate\">\r\n<meta name=\"APIName\" content=\"System.Xml.XPath.Extensions.XPathSelectElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XPath.Extensions.XPathSelectElements\">\r\n<meta name=\"APILocation\" content=\"System.Xml.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"dbf0efdd-801b-c759-075f-a30ed052b904\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.XPath\\Extensions.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.XPath/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XPath.Extensions\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XPath.Extensions.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XPath.Extensions.yml","open_to_public_contributors":true,"api_name":["System.Xml.XPath.Extensions","System.Xml.XPath.Extensions.CreateNavigator","System.Xml.XPath.Extensions.XPathEvaluate","System.Xml.XPath.Extensions.XPathSelectElement","System.Xml.XPath.Extensions.XPathSelectElements"],"api_location":["System.Xml.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XPath.Extensions","System::Xml::XPath::Extensions","System.Xml.XPath.Extensions.CreateNavigator","System::Xml::XPath::Extensions::CreateNavigator","System.Xml.XPath.Extensions.XPathEvaluate","System::Xml::XPath::Extensions::XPathEvaluate","System.Xml.XPath.Extensions.XPathSelectElement","System::Xml::XPath::Extensions::XPathSelectElement","System.Xml.XPath.Extensions.XPathSelectElements","System::Xml::XPath::Extensions::XPathSelectElements"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"dbf0efdd-801b-c759-075f-a30ed052b904","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.XPath\\Extensions.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.XPath/Extensions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Extensions class | Microsoft Docs","_op_ogTitle":"Extensions class","description":"This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.\n","toc_asset_id":"_splitted/System.Xml.XPath/toc.json","toc_rel":"_splitted/System.Xml.XPath/toc.json","source_url":"","ms.assetid":"System.Xml.XPath.Extensions","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xpath.extensions","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xpath.extensions","fileRelativePath":"System.Xml.XPath.Extensions.html"},"themesRelativePathToOutputRoot":"_themes/"}