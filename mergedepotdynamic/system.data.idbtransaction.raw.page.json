{"content":"    \r\n    <h1 id=\"System_Data_IDbTransaction\">\r\n      <span class=\"lang-csharp\">IDbTransaction</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IDbTransaction : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IDbTransaction interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information about Transaction classes, see <a href=\"../Topic/Transactions%20and%20Concurrency.md\" data-linktype=\"relative-path\">Transactions and Concurrency</a>.  </p>\n<p> An application does not create an instance of the IDbTransaction interface directly, but creates an instance of a class that inherits IDbTransaction.  </p>\n<p> Classes that inherit IDbTransaction must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbTransaction interface defines the <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> method. In turn, the <a class=\"xref\" href=\"system.data.oledb.oledbtransaction\" data-linktype=\"relative-path\">OleDbTransaction</a> class inherits this property, and also defines the <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Begin_\" data-linktype=\"relative-path\">Begin</a> method.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbTransaction_Connection\" data-linktype=\"self-bookmark\">Connection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the Connection object to associate with the transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbTransaction_IsolationLevel\" data-linktype=\"self-bookmark\">IsolationLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> for this transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbTransaction_Commit\" data-linktype=\"self-bookmark\">Commit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Commits the database transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbTransaction_Rollback\" data-linktype=\"self-bookmark\">Rollback()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rolls back a transaction from a pending state.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbTransaction_Connection\">\r\n    \r\n            <a id=\"System_Data_IDbTransaction_Connection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connection</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the Connection object to associate with the transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.IDbConnection Connection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbconnection\" data-linktype=\"relative-path\">IDbConnection</a></div>\r\n                  </div>\r\n                  <p>The Connection object to associate with the transaction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbTransaction_IsolationLevel\">\r\n    \r\n            <a id=\"System_Data_IDbTransaction_IsolationLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsolationLevel</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> for this transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.IsolationLevel IsolationLevel { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> for this transaction. The default is <code>ReadCommitted</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Parallel transactions are not supported. Therefore, the <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> applies to the entire transaction.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbTransaction_Commit\">\r\n    \r\n            <a id=\"System_Data_IDbTransaction_Commit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Commit()</div>        \r\n          </div>\r\n    \r\n            <p>Commits the database transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Commit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred while trying to commit the transaction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The transaction has already been committed or rolled back.  </p>\n<p> -or-  </p>\n<p> The connection is broken.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates instances of the derived classes, <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> and a <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction\" data-linktype=\"relative-path\">SqlTransaction</a>. It also demonstrates how to use the <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction#System_Data_SqlClient_SqlTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a>, and <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction#System_Data_SqlClient_SqlTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData SqlConnection.BeginTransaction Example#1\">        private static void ExecuteSqlTransaction(string connectionString)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n                SqlCommand command = connection.CreateCommand();\n                SqlTransaction transaction;\n\n                // Start a local transaction.\n                transaction = connection.BeginTransaction(&quot;SampleTransaction&quot;);\n\n                // Must assign both transaction object and connection\n                // to Command object for a pending local transaction\n                command.Connection = connection;\n                command.Transaction = transaction;\n\n                try\n                {\n                    command.CommandText =\n                        &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;;\n                    command.ExecuteNonQuery();\n                    command.CommandText =\n                        &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;;\n                    command.ExecuteNonQuery();\n\n                    // Attempt to commit the transaction.\n                    transaction.Commit();\n                    Console.WriteLine(&quot;Both records are written to database.&quot;);\n                }\n                catch (Exception ex)\n                {\n                    Console.WriteLine(&quot;Commit Exception Type: {0}&quot;, ex.GetType());\n                    Console.WriteLine(&quot;  Message: {0}&quot;, ex.Message);\n\n                    // Attempt to roll back the transaction.\n                    try\n                    {\n                        transaction.Rollback();\n                    }\n                    catch (Exception ex2)\n                    {\n                        // This catch block will handle any errors that may have occurred\n                        // on the server that would cause the rollback to fail, such as\n                        // a closed connection.\n                        Console.WriteLine(&quot;Rollback Exception Type: {0}&quot;, ex2.GetType());\n                        Console.WriteLine(&quot;  Message: {0}&quot;, ex2.Message);\n                    }\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData SqlConnection.BeginTransaction Example#1\">    Private Sub ExecuteSqlTransaction(ByVal connectionString As String)\n        Using connection As New SqlConnection(connectionString)\n            connection.Open()\n\n            Dim command As SqlCommand = connection.CreateCommand()\n            Dim transaction As SqlTransaction\n\n            &#39; Start a local transaction\n            transaction = connection.BeginTransaction(&quot;SampleTransaction&quot;)\n\n            &#39; Must assign both transaction object and connection\n            &#39; to Command object for a pending local transaction.\n            command.Connection = connection\n            command.Transaction = transaction\n\n            Try\n                command.CommandText = _\n                  &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;\n                command.ExecuteNonQuery()\n                command.CommandText = _\n                  &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;\n\n                command.ExecuteNonQuery()\n\n                &#39; Attempt to commit the transaction.\n                transaction.Commit()\n                Console.WriteLine(&quot;Both records are written to database.&quot;)\n\n            Catch ex As Exception\n                Console.WriteLine(&quot;Commit Exception Type: {0}&quot;, ex.GetType())\n                Console.WriteLine(&quot;  Message: {0}&quot;, ex.Message)\n\n                &#39; Attempt to roll back the transaction.\n                Try\n                    transaction.Rollback()\n\n                Catch ex2 As Exception\n                    &#39; This catch block will handle any errors that may have occurred\n                    &#39; on the server that would cause the rollback to fail, such as\n                    &#39; a closed connection.\n                    Console.WriteLine(&quot;Rollback Exception Type: {0}&quot;, ex2.GetType())\n                    Console.WriteLine(&quot;  Message: {0}&quot;, ex2.Message)\n                End Try\n            End Try\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbTransaction_Rollback\">\r\n    \r\n            <a id=\"System_Data_IDbTransaction_Rollback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rollback()</div>        \r\n          </div>\r\n    \r\n            <p>Rolls back a transaction from a pending state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rollback ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred while trying to commit the transaction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The transaction has already been committed or rolled back.  </p>\n<p> -or-  </p>\n<p> The connection is broken.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The transaction can only be rolled back from a pending state (after <a class=\"xref\" href=\"system.data.idbconnection#System_Data_IDbConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a> has been called, but before <a class=\"xref\" href=\"system.data.idbtransaction#System_Data_IDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> is called).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates instances of the derived classes, <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> and a <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction\" data-linktype=\"relative-path\">SqlTransaction</a>. It also demonstrates how to use the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a>, <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction#System_Data_SqlClient_SqlTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a>, and <a class=\"xref\" href=\"system.data.sqlclient.sqltransaction#System_Data_SqlClient_SqlTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData SqlConnection.BeginTransaction Example#1\">        private static void ExecuteSqlTransaction(string connectionString)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n                SqlCommand command = connection.CreateCommand();\n                SqlTransaction transaction;\n\n                // Start a local transaction.\n                transaction = connection.BeginTransaction(&quot;SampleTransaction&quot;);\n\n                // Must assign both transaction object and connection\n                // to Command object for a pending local transaction\n                command.Connection = connection;\n                command.Transaction = transaction;\n\n                try\n                {\n                    command.CommandText =\n                        &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;;\n                    command.ExecuteNonQuery();\n                    command.CommandText =\n                        &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;;\n                    command.ExecuteNonQuery();\n\n                    // Attempt to commit the transaction.\n                    transaction.Commit();\n                    Console.WriteLine(&quot;Both records are written to database.&quot;);\n                }\n                catch (Exception ex)\n                {\n                    Console.WriteLine(&quot;Commit Exception Type: {0}&quot;, ex.GetType());\n                    Console.WriteLine(&quot;  Message: {0}&quot;, ex.Message);\n\n                    // Attempt to roll back the transaction.\n                    try\n                    {\n                        transaction.Rollback();\n                    }\n                    catch (Exception ex2)\n                    {\n                        // This catch block will handle any errors that may have occurred\n                        // on the server that would cause the rollback to fail, such as\n                        // a closed connection.\n                        Console.WriteLine(&quot;Rollback Exception Type: {0}&quot;, ex2.GetType());\n                        Console.WriteLine(&quot;  Message: {0}&quot;, ex2.Message);\n                    }\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData SqlConnection.BeginTransaction Example#1\">    Private Sub ExecuteSqlTransaction(ByVal connectionString As String)\n        Using connection As New SqlConnection(connectionString)\n            connection.Open()\n\n            Dim command As SqlCommand = connection.CreateCommand()\n            Dim transaction As SqlTransaction\n\n            &#39; Start a local transaction\n            transaction = connection.BeginTransaction(&quot;SampleTransaction&quot;)\n\n            &#39; Must assign both transaction object and connection\n            &#39; to Command object for a pending local transaction.\n            command.Connection = connection\n            command.Transaction = transaction\n\n            Try\n                command.CommandText = _\n                  &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;\n                command.ExecuteNonQuery()\n                command.CommandText = _\n                  &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;\n\n                command.ExecuteNonQuery()\n\n                &#39; Attempt to commit the transaction.\n                transaction.Commit()\n                Console.WriteLine(&quot;Both records are written to database.&quot;)\n\n            Catch ex As Exception\n                Console.WriteLine(&quot;Commit Exception Type: {0}&quot;, ex.GetType())\n                Console.WriteLine(&quot;  Message: {0}&quot;, ex.Message)\n\n                &#39; Attempt to roll back the transaction.\n                Try\n                    transaction.Rollback()\n\n                Catch ex2 As Exception\n                    &#39; This catch block will handle any errors that may have occurred\n                    &#39; on the server that would cause the rollback to fail, such as\n                    &#39; a closed connection.\n                    Console.WriteLine(&quot;Rollback Exception Type: {0}&quot;, ex2.GetType())\n                    Console.WriteLine(&quot;  Message: {0}&quot;, ex2.Message)\n                End Try\n            End Try\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.IDbTransaction.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.IDbTransaction.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.Commit\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.Connection\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.IsolationLevel\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbTransaction.Rollback\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c91cca3a-5a45-d783-d464-15c2112c2490\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.IDbTransaction\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.IDbTransaction.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.IDbTransaction.yml","open_to_public_contributors":true,"api_name":["System.Data.IDbTransaction","System.Data.IDbTransaction.Commit","System.Data.IDbTransaction.Connection","System.Data.IDbTransaction.IsolationLevel","System.Data.IDbTransaction.Rollback"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.IDbTransaction","System::Data::IDbTransaction","System.Data.IDbTransaction.Commit","System::Data::IDbTransaction::Commit","System.Data.IDbTransaction.Connection","System::Data::IDbTransaction::Connection","System.Data.IDbTransaction.IsolationLevel","System::Data::IDbTransaction::IsolationLevel","System.Data.IDbTransaction.Rollback","System::Data::IDbTransaction::Rollback"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c91cca3a-5a45-d783-d464-15c2112c2490","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data/IDbTransaction.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDbTransaction interface | Microsoft Docs","_op_ogTitle":"IDbTransaction interface","description":"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.\n","toc_asset_id":"_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.IDbTransaction","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.idbtransaction","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.idbtransaction","fileRelativePath":"System.Data.IDbTransaction.html"},"themesRelativePathToOutputRoot":"_themes/"}