{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IOrderedEnumerable&lt;TElement&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a sorted sequence.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IOrderedEnumerable&lt;TElement&gt; : System.Collections.Generic.IEnumerable&lt;TElement&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TElement</td>\r\n  \t\t\t<td><p>The type of the elements of the sequence.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>This type is enumerable because it inherits from <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a>.  </p>\n<p> The extension methods &lt;xref:System.Linq.Enumerable.ThenBy%2A&gt; and &lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt; operate on objects of type IOrderedEnumerable(TElement). An object of type IOrderedEnumerable(TElement) can be obtained by calling one of the primary sort methods, &lt;xref:System.Linq.Enumerable.OrderBy%2A&gt; or &lt;xref:System.Linq.Enumerable.OrderByDescending%2A&gt;, which return an IOrderedEnumerable(TElement). &lt;xref:System.Linq.Enumerable.ThenBy%2A&gt; and &lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;, the subordinate sort methods, in turn also return an object of type IOrderedEnumerable(TElement). This design allows for any number of consecutive calls to &lt;xref:System.Linq.Enumerable.ThenBy%2A&gt; or &lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;, where each call performs a subordinate ordering on the sorted data returned from the previous call.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Linq_IOrderedEnumerable_1_CreateOrderedEnumerable__1_System_Func__0___0__System_Collections_Generic_IComparer___0__System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateOrderedEnumerable&lt;TKey&gt;(Func&lt;TElement,TKey&gt;,IComparer&lt;TKey&gt;,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs a subsequent ordering on the elements of an <span class=\"xref\">stem.Linq.IOrderedEnumerable`1</span> according to a key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Linq.IOrderedEnumerable&lt;TElement&gt; CreateOrderedEnumerable&lt;TKey&gt; (Func&lt;TElement,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer, bool descending);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>keySelector</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TElement</span>,<span class=\"xref\">TKey</span>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Func`2</span> used to extract the key for each element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>comparer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.icomparer-1\" data-linktype=\"relative-path\">IComparer</a>&lt;<span class=\"xref\">TKey</span>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Collections.Generic.IComparer`1</span> used to compare keys for placement in the returned sequence.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>descending</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to sort the elements in descending order; <code>false</code> to sort the elements in ascending order.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.iorderedenumerable-1\" data-linktype=\"relative-path\">IOrderedEnumerable&lt;TElement&gt;</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <span class=\"xref\">stem.Linq.IOrderedEnumerable`1</span> whose elements are sorted according to a key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The functionality provided by this method is like that provided by &lt;xref:System.Linq.Enumerable.ThenBy%2A&gt; or &lt;xref:System.Linq.Enumerable.ThenByDescending%2A&gt;, depending on whether <code>descending</code> is <code>true</code> or <code>false</code>. They both perform a subordinate ordering of an already sorted sequence of type <a class=\"xref\" href=\"system.linq.iorderedenumerable-1\" data-linktype=\"relative-path\">IOrderedEnumerable&lt;TElement&gt;</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.IOrderedEnumerable-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Linq.IOrderedEnumerable&lt;TElement&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.IOrderedEnumerable&lt;TElement&gt;.CreateOrderedEnumerable&lt;TKey&gt;\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-20 08:28 AM\">\r\n<meta name=\"document_id\" content=\"2b0b0dfe-ebbf-f44b-0ba7-b0d7f3d7e732\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a sorted sequence.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Linq/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Linq.IOrderedEnumerable`1\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.IOrderedEnumerable-1.yml","open_to_public_contributors":true,"api_name":["System.Linq.IOrderedEnumerable<TElement>","System.Linq.IOrderedEnumerable<TElement>.CreateOrderedEnumerable<TKey>"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Linq.IOrderedEnumerable`1","System::Linq::IOrderedEnumerable`1","System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1","System::Linq::IOrderedEnumerable`1::CreateOrderedEnumerable``1"],"dev_langs":["csharp"],"updated_at":"2017-03-20 08:28 AM","document_id":"2b0b0dfe-ebbf-f44b-0ba7-b0d7f3d7e732","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Linq/IOrderedEnumerable`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IOrderedEnumerable<TElement> interface | Microsoft Docs","_op_ogTitle":"IOrderedEnumerable<TElement> interface","description":"Represents a sorted sequence.\n","toc_asset_id":"_splitted/System.Linq/toc.json","toc_rel":"_splitted/System.Linq/toc.json","source_url":"","ms.assetid":"System.Linq.IOrderedEnumerable`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.iorderedenumerable-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.iorderedenumerable-1","fileRelativePath":"System.Linq.IOrderedEnumerable-1.html"},"themesRelativePathToOutputRoot":"_themes/"}