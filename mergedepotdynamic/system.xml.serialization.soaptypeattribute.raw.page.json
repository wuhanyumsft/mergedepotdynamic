{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_SoapTypeAttribute\">\r\n      <span class=\"lang-csharp\">SoapTypeAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls the schema generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> when a class instance is serialized as SOAP encoded XML.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)]\npublic class SoapTypeAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SoapTypeAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SoapTypeAttribute class belongs to a family of attributes that controls how the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes or deserializes an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, &quot;Simple Object Access Protocol (SOAP) 1.1&quot;. For a complete list of similar attributes, see <a href=\"../Topic/Attributes%20That%20Control%20Encoded%20SOAP%20Serialization.md\" data-linktype=\"relative-path\">Attributes That Control Encoded SOAP Serialization</a>.  </p>\n<p> To serialize an object as an encoded SOAP message, construct the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> using an <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a> created with the <a class=\"xref\" href=\"system.xml.serialization.soapreflectionimporter#System_Xml_Serialization_SoapReflectionImporter_ImportTypeMapping_\" data-linktype=\"relative-path\">ImportTypeMapping</a> method of the <a class=\"xref\" href=\"system.xml.serialization.soapreflectionimporter\" data-linktype=\"relative-path\">SoapReflectionImporter</a> class.  </p>\n<p> The SoapTypeAttribute can only be applied to class declarations.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_IncludeInSchema_\" data-linktype=\"relative-path\">IncludeInSchema</a> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream. To see the schema, compile the class into a DLL file. Pass the resulting file as an argument to the <a href=\"../Topic/XML%20Schema%20Definition%20Tool%20(Xsd.exe).md\" data-linktype=\"relative-path\">XML Schema Definition Tool (Xsd.exe)</a>. The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class.  </p>\n<p> Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapTypeAttribute__ctor\" data-linktype=\"self-bookmark\">SoapTypeAttribute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapTypeAttribute__ctor_System_String_\" data-linktype=\"self-bookmark\">SoapTypeAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class and specifies the name of the XML type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapTypeAttribute__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">SoapTypeAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class and specifies the name and XML namespace of the type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapTypeAttribute_IncludeInSchema\" data-linktype=\"self-bookmark\">IncludeInSchema</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapTypeAttribute_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the namespace of the XML type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_SoapTypeAttribute_TypeName\" data-linktype=\"self-bookmark\">TypeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the XML type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapTypeAttribute__ctor\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapTypeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoapTypeAttribute()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoapTypeAttribute ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Create a <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> when overriding the serialization of a type. Assign the object to the <a class=\"xref\" href=\"system.xml.serialization.soapattributes#System_Xml_Serialization_SoapAttributes_SoapType_\" data-linktype=\"relative-path\">SoapType</a> property of a <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> and add the <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> to a <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a>. See the <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> class overview for more details about overriding SOAP serialization.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is applied to the class with the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> set to &quot;SoapGroupType&quot;. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is also overridden, changing the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> to &quot;Team&quot;. Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapTypeAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n[SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)]\npublic class Group\n{\n   public string GroupName;\n   public Employee[] Employees;\n}\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapType.xml&quot;);\n      test.SerializeOverride(&quot;SoapType2.xml&quot;);\n      test.DeserializeObject(&quot;SoapType2.xml&quot;);\n   }\n\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping mapp = \n         (new SoapReflectionImporter()).ImportTypeMapping(typeof(Group));\n      XmlSerializer mySerializer = new XmlSerializer(mapp);\n      \n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides object.\n      \n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      // override and create SOAP messages.\n      SoapAttributeOverrides mySoapAttributeOverrides = \n          new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapType.IncludeInSchema = false;\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts.SoapType = soapType;\n      \n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n    \n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader reader = new StreamReader(filename);\n\n      // Create an XML text reader.\n      XmlTextReader xmlReader = new XmlTextReader(reader);\n      xmlReader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup = (Group) mySerializer.Deserialize(xmlReader);\n      xmlReader.ReadEndElement();\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName);\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; +\n        &quot;files for the generated XML.&quot;);\n\n      // Close the readers.\n      xmlReader.Close();\n      reader.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapTypeAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n&#39; The SoapType is overridden when the\n&#39; SerializeOverride  method is called.\n&lt;SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)&gt; _\nPublic class Group\n   Public GroupName As String\n   Public Employees() As Employee\nEnd Class\n\n&lt;SoapType(&quot;EmployeeType&quot;)&gt; _\nPublic Class Employee\n   Public Name As String\nEnd Class\n   \nPublic class Run\n   Public Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapType.xml&quot;)\n      test.SerializeOverride(&quot;SoapType2.xml&quot;)\n      test.DeserializeObject(&quot;SoapType2.xml&quot;)\n   End Sub\n\n   Public Sub SerializeOriginal(filename As String )\n      &#39; Create an instance of the XmlSerializer class that\n      &#39; can be used for serializing as a SOAP message.\n     Dim mapp  As XmlTypeMapping = _\n      (New SoapReflectionImporter()).ImportTypeMapping(GetType(Group))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(mapp)\n      \n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees=New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As string )\n   \n      &#39; Create an instance of the XmlSerializer class that\n      &#39; uses a SoapAttributeOverrides object.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees = New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n      &#39; Create and return an XmlSerializer instance used to\n      &#39; override and create SOAP messages.\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      \tNew SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      &#39; Override the SoapTypeAttribute.\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapType.IncludeInSchema = false\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;\n      soapAtts.SoapType = soapType\n      \n      mySoapAttributeOverrides.Add(GetType(Group),soapAtts)\n\n      &#39; Create an XmlTypeMapping that is used to create an instance \n      &#39; of the XmlSerializer. Then return the XmlSerializer object.\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim  ser As XmlSerializer = New XmlSerializer(myMapping)\n      \n      return ser\n   End Function\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Reading the file requires a TextReader.\n      Dim reader As TextReader = New StreamReader(filename)\n\n      &#39; Create an XML text reader.\n      Dim xmlReader As XmlTextReader = New XmlTextReader(reader)\n      xmlReader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = CType(mySerializer.Deserialize(xmlReader), Group)\n      xmlReader.ReadEndElement()\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName)\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; + _\n        &quot;files for the generated XML.&quot;)\n\n      &#39; Close the readers.\n      xmlReader.Close()\n      reader.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapTypeAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n\n[SoapType(&quot;SoapGroupType&quot;,&quot;http://www.cohowinery.com&quot;)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   array&lt;Employee^&gt;^Employees;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping^ mapp = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( mapp );\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides Object*.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader^ reader = gcnew StreamReader( filename );\n\n      // Create an XML text reader.\n      XmlTextReader^ xmlReader = gcnew XmlTextReader( reader );\n      xmlReader-&gt;ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( xmlReader ));\n      xmlReader-&gt;ReadEndElement();\n      Console::WriteLine( &quot;The GroupName is {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine( &quot;Look at the SoapType.xml and SoapType2.xml &quot;\n      &quot;files for the generated XML.&quot; );\n\n      // Close the readers.\n      xmlReader-&gt;Close();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      //  and create SOAP messages.\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapType-&gt;IncludeInSchema = false;\n      soapType-&gt;Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer Object*.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOriginal( &quot;SoapType.xml&quot; );\n   test-&gt;SerializeOverride( &quot;SoapType2.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapType2.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapTypeAttribute__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapTypeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoapTypeAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class and specifies the name of the XML type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoapTypeAttribute (string typeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML type that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Create a <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> when overriding the serialization of a type. Assign the object to the <a class=\"xref\" href=\"system.xml.serialization.soapattributes#System_Xml_Serialization_SoapAttributes_SoapType_\" data-linktype=\"relative-path\">SoapType</a> property of a <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> and add the <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> to a <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a>. See the <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> class overview for more details about overriding SOAP serialization.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is applied to the class with the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> set to &quot;SoapGroupType&quot;. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is also overridden, changing the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> to &quot;Team&quot;. Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapTypeAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n[SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)]\npublic class Group\n{\n   public string GroupName;\n   public Employee[] Employees;\n}\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapType.xml&quot;);\n      test.SerializeOverride(&quot;SoapType2.xml&quot;);\n      test.DeserializeObject(&quot;SoapType2.xml&quot;);\n   }\n\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping mapp = \n         (new SoapReflectionImporter()).ImportTypeMapping(typeof(Group));\n      XmlSerializer mySerializer = new XmlSerializer(mapp);\n      \n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides object.\n      \n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      // override and create SOAP messages.\n      SoapAttributeOverrides mySoapAttributeOverrides = \n          new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapType.IncludeInSchema = false;\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts.SoapType = soapType;\n      \n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n    \n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader reader = new StreamReader(filename);\n\n      // Create an XML text reader.\n      XmlTextReader xmlReader = new XmlTextReader(reader);\n      xmlReader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup = (Group) mySerializer.Deserialize(xmlReader);\n      xmlReader.ReadEndElement();\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName);\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; +\n        &quot;files for the generated XML.&quot;);\n\n      // Close the readers.\n      xmlReader.Close();\n      reader.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapTypeAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n&#39; The SoapType is overridden when the\n&#39; SerializeOverride  method is called.\n&lt;SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)&gt; _\nPublic class Group\n   Public GroupName As String\n   Public Employees() As Employee\nEnd Class\n\n&lt;SoapType(&quot;EmployeeType&quot;)&gt; _\nPublic Class Employee\n   Public Name As String\nEnd Class\n   \nPublic class Run\n   Public Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapType.xml&quot;)\n      test.SerializeOverride(&quot;SoapType2.xml&quot;)\n      test.DeserializeObject(&quot;SoapType2.xml&quot;)\n   End Sub\n\n   Public Sub SerializeOriginal(filename As String )\n      &#39; Create an instance of the XmlSerializer class that\n      &#39; can be used for serializing as a SOAP message.\n     Dim mapp  As XmlTypeMapping = _\n      (New SoapReflectionImporter()).ImportTypeMapping(GetType(Group))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(mapp)\n      \n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees=New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As string )\n   \n      &#39; Create an instance of the XmlSerializer class that\n      &#39; uses a SoapAttributeOverrides object.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees = New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n      &#39; Create and return an XmlSerializer instance used to\n      &#39; override and create SOAP messages.\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      \tNew SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      &#39; Override the SoapTypeAttribute.\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapType.IncludeInSchema = false\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;\n      soapAtts.SoapType = soapType\n      \n      mySoapAttributeOverrides.Add(GetType(Group),soapAtts)\n\n      &#39; Create an XmlTypeMapping that is used to create an instance \n      &#39; of the XmlSerializer. Then return the XmlSerializer object.\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim  ser As XmlSerializer = New XmlSerializer(myMapping)\n      \n      return ser\n   End Function\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Reading the file requires a TextReader.\n      Dim reader As TextReader = New StreamReader(filename)\n\n      &#39; Create an XML text reader.\n      Dim xmlReader As XmlTextReader = New XmlTextReader(reader)\n      xmlReader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = CType(mySerializer.Deserialize(xmlReader), Group)\n      xmlReader.ReadEndElement()\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName)\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; + _\n        &quot;files for the generated XML.&quot;)\n\n      &#39; Close the readers.\n      xmlReader.Close()\n      reader.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapTypeAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n\n[SoapType(&quot;SoapGroupType&quot;,&quot;http://www.cohowinery.com&quot;)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   array&lt;Employee^&gt;^Employees;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping^ mapp = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( mapp );\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides Object*.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader^ reader = gcnew StreamReader( filename );\n\n      // Create an XML text reader.\n      XmlTextReader^ xmlReader = gcnew XmlTextReader( reader );\n      xmlReader-&gt;ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( xmlReader ));\n      xmlReader-&gt;ReadEndElement();\n      Console::WriteLine( &quot;The GroupName is {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine( &quot;Look at the SoapType.xml and SoapType2.xml &quot;\n      &quot;files for the generated XML.&quot; );\n\n      // Close the readers.\n      xmlReader-&gt;Close();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      //  and create SOAP messages.\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapType-&gt;IncludeInSchema = false;\n      soapType-&gt;Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer Object*.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOriginal( &quot;SoapType.xml&quot; );\n   test-&gt;SerializeOverride( &quot;SoapType2.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapType2.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapTypeAttribute__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapTypeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoapTypeAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class and specifies the name and XML namespace of the type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoapTypeAttribute (string typeName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML type that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespace of the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Create a <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> when overriding the serialization of a type. Assign the object to the <a class=\"xref\" href=\"system.xml.serialization.soapattributes#System_Xml_Serialization_SoapAttributes_SoapType_\" data-linktype=\"relative-path\">SoapType</a> property of a <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> and add the <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> to a <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a>. See the <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> class overview for more details on overriding SOAP serialization.  </p>\n<p> If you set a <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> value for more than one type (that is, if you apply the attribute to more than one class with a different <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> value for each one), the <a href=\"../Topic/XML%20Schema%20Definition%20Tool%20(Xsd.exe).md\" data-linktype=\"relative-path\">XML Schema Definition Tool (Xsd.exe)</a> generates a separate schema file (.xsd) for each type. This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is applied to the class with the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> set to &quot;SoapGroupType&quot;. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is also overridden, changing the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> to &quot;Team&quot;. Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapTypeAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n[SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)]\npublic class Group\n{\n   public string GroupName;\n   public Employee[] Employees;\n}\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapType.xml&quot;);\n      test.SerializeOverride(&quot;SoapType2.xml&quot;);\n      test.DeserializeObject(&quot;SoapType2.xml&quot;);\n   }\n\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping mapp = \n         (new SoapReflectionImporter()).ImportTypeMapping(typeof(Group));\n      XmlSerializer mySerializer = new XmlSerializer(mapp);\n      \n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides object.\n      \n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      // override and create SOAP messages.\n      SoapAttributeOverrides mySoapAttributeOverrides = \n          new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapType.IncludeInSchema = false;\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts.SoapType = soapType;\n      \n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n    \n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader reader = new StreamReader(filename);\n\n      // Create an XML text reader.\n      XmlTextReader xmlReader = new XmlTextReader(reader);\n      xmlReader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup = (Group) mySerializer.Deserialize(xmlReader);\n      xmlReader.ReadEndElement();\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName);\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; +\n        &quot;files for the generated XML.&quot;);\n\n      // Close the readers.\n      xmlReader.Close();\n      reader.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapTypeAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n&#39; The SoapType is overridden when the\n&#39; SerializeOverride  method is called.\n&lt;SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)&gt; _\nPublic class Group\n   Public GroupName As String\n   Public Employees() As Employee\nEnd Class\n\n&lt;SoapType(&quot;EmployeeType&quot;)&gt; _\nPublic Class Employee\n   Public Name As String\nEnd Class\n   \nPublic class Run\n   Public Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapType.xml&quot;)\n      test.SerializeOverride(&quot;SoapType2.xml&quot;)\n      test.DeserializeObject(&quot;SoapType2.xml&quot;)\n   End Sub\n\n   Public Sub SerializeOriginal(filename As String )\n      &#39; Create an instance of the XmlSerializer class that\n      &#39; can be used for serializing as a SOAP message.\n     Dim mapp  As XmlTypeMapping = _\n      (New SoapReflectionImporter()).ImportTypeMapping(GetType(Group))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(mapp)\n      \n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees=New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As string )\n   \n      &#39; Create an instance of the XmlSerializer class that\n      &#39; uses a SoapAttributeOverrides object.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees = New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n      &#39; Create and return an XmlSerializer instance used to\n      &#39; override and create SOAP messages.\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      \tNew SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      &#39; Override the SoapTypeAttribute.\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapType.IncludeInSchema = false\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;\n      soapAtts.SoapType = soapType\n      \n      mySoapAttributeOverrides.Add(GetType(Group),soapAtts)\n\n      &#39; Create an XmlTypeMapping that is used to create an instance \n      &#39; of the XmlSerializer. Then return the XmlSerializer object.\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim  ser As XmlSerializer = New XmlSerializer(myMapping)\n      \n      return ser\n   End Function\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Reading the file requires a TextReader.\n      Dim reader As TextReader = New StreamReader(filename)\n\n      &#39; Create an XML text reader.\n      Dim xmlReader As XmlTextReader = New XmlTextReader(reader)\n      xmlReader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = CType(mySerializer.Deserialize(xmlReader), Group)\n      xmlReader.ReadEndElement()\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName)\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; + _\n        &quot;files for the generated XML.&quot;)\n\n      &#39; Close the readers.\n      xmlReader.Close()\n      reader.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapTypeAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n\n[SoapType(&quot;SoapGroupType&quot;,&quot;http://www.cohowinery.com&quot;)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   array&lt;Employee^&gt;^Employees;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping^ mapp = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( mapp );\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides Object*.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader^ reader = gcnew StreamReader( filename );\n\n      // Create an XML text reader.\n      XmlTextReader^ xmlReader = gcnew XmlTextReader( reader );\n      xmlReader-&gt;ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( xmlReader ));\n      xmlReader-&gt;ReadEndElement();\n      Console::WriteLine( &quot;The GroupName is {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine( &quot;Look at the SoapType.xml and SoapType2.xml &quot;\n      &quot;files for the generated XML.&quot; );\n\n      // Close the readers.\n      xmlReader-&gt;Close();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      //  and create SOAP messages.\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapType-&gt;IncludeInSchema = false;\n      soapType-&gt;Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer Object*.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOriginal( &quot;SoapType.xml&quot; );\n   test-&gt;SerializeOverride( &quot;SoapType2.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapType2.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapTypeAttribute_IncludeInSchema\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapTypeAttribute_IncludeInSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IncludeInSchema</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IncludeInSchema { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to include the type in SOAP-encoded XML Schema documents; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Apply the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> to a class declaration to specify whether to include the type in the XML schema document. To see the results of setting the properties of the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> class, compile your application as an executable or DLL, and pass the resulting file to the <a href=\"../Topic/XML%20Schema%20Definition%20Tool%20(Xsd.exe).md\" data-linktype=\"relative-path\">XML Schema Definition Tool (Xsd.exe)</a>. The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is applied to the class with the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> set to &quot;SoapGroupType&quot;. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is also overridden, changing the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> to &quot;Team&quot;. Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapTypeAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n[SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)]\npublic class Group\n{\n   public string GroupName;\n   public Employee[] Employees;\n}\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapType.xml&quot;);\n      test.SerializeOverride(&quot;SoapType2.xml&quot;);\n      test.DeserializeObject(&quot;SoapType2.xml&quot;);\n   }\n\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping mapp = \n         (new SoapReflectionImporter()).ImportTypeMapping(typeof(Group));\n      XmlSerializer mySerializer = new XmlSerializer(mapp);\n      \n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides object.\n      \n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      // override and create SOAP messages.\n      SoapAttributeOverrides mySoapAttributeOverrides = \n          new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapType.IncludeInSchema = false;\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts.SoapType = soapType;\n      \n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n    \n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader reader = new StreamReader(filename);\n\n      // Create an XML text reader.\n      XmlTextReader xmlReader = new XmlTextReader(reader);\n      xmlReader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup = (Group) mySerializer.Deserialize(xmlReader);\n      xmlReader.ReadEndElement();\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName);\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; +\n        &quot;files for the generated XML.&quot;);\n\n      // Close the readers.\n      xmlReader.Close();\n      reader.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapTypeAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n&#39; The SoapType is overridden when the\n&#39; SerializeOverride  method is called.\n&lt;SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)&gt; _\nPublic class Group\n   Public GroupName As String\n   Public Employees() As Employee\nEnd Class\n\n&lt;SoapType(&quot;EmployeeType&quot;)&gt; _\nPublic Class Employee\n   Public Name As String\nEnd Class\n   \nPublic class Run\n   Public Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapType.xml&quot;)\n      test.SerializeOverride(&quot;SoapType2.xml&quot;)\n      test.DeserializeObject(&quot;SoapType2.xml&quot;)\n   End Sub\n\n   Public Sub SerializeOriginal(filename As String )\n      &#39; Create an instance of the XmlSerializer class that\n      &#39; can be used for serializing as a SOAP message.\n     Dim mapp  As XmlTypeMapping = _\n      (New SoapReflectionImporter()).ImportTypeMapping(GetType(Group))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(mapp)\n      \n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees=New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As string )\n   \n      &#39; Create an instance of the XmlSerializer class that\n      &#39; uses a SoapAttributeOverrides object.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees = New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n      &#39; Create and return an XmlSerializer instance used to\n      &#39; override and create SOAP messages.\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      \tNew SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      &#39; Override the SoapTypeAttribute.\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapType.IncludeInSchema = false\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;\n      soapAtts.SoapType = soapType\n      \n      mySoapAttributeOverrides.Add(GetType(Group),soapAtts)\n\n      &#39; Create an XmlTypeMapping that is used to create an instance \n      &#39; of the XmlSerializer. Then return the XmlSerializer object.\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim  ser As XmlSerializer = New XmlSerializer(myMapping)\n      \n      return ser\n   End Function\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Reading the file requires a TextReader.\n      Dim reader As TextReader = New StreamReader(filename)\n\n      &#39; Create an XML text reader.\n      Dim xmlReader As XmlTextReader = New XmlTextReader(reader)\n      xmlReader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = CType(mySerializer.Deserialize(xmlReader), Group)\n      xmlReader.ReadEndElement()\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName)\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; + _\n        &quot;files for the generated XML.&quot;)\n\n      &#39; Close the readers.\n      xmlReader.Close()\n      reader.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapTypeAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n\n[SoapType(&quot;SoapGroupType&quot;,&quot;http://www.cohowinery.com&quot;)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   array&lt;Employee^&gt;^Employees;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping^ mapp = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( mapp );\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides Object*.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader^ reader = gcnew StreamReader( filename );\n\n      // Create an XML text reader.\n      XmlTextReader^ xmlReader = gcnew XmlTextReader( reader );\n      xmlReader-&gt;ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( xmlReader ));\n      xmlReader-&gt;ReadEndElement();\n      Console::WriteLine( &quot;The GroupName is {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine( &quot;Look at the SoapType.xml and SoapType2.xml &quot;\n      &quot;files for the generated XML.&quot; );\n\n      // Close the readers.\n      xmlReader-&gt;Close();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      //  and create SOAP messages.\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapType-&gt;IncludeInSchema = false;\n      soapType-&gt;Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer Object*.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOriginal( &quot;SoapType.xml&quot; );\n   test-&gt;SerializeOverride( &quot;SoapType2.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapType2.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapTypeAttribute_Namespace\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapTypeAttribute_Namespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the namespace of the XML type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Namespace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The namespace of the XML type. The default is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you set a Namespace value for more than one type (that is, if you apply the attribute to more than one class with a different Namespace value for each one), the <a href=\"../Topic/XML%20Schema%20Definition%20Tool%20(Xsd.exe).md\" data-linktype=\"relative-path\">XML Schema Definition Tool (Xsd.exe)</a> generates a separate schema file (.xsd) for each type. This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is applied to the class with the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> set to &quot;SoapGroupType&quot;. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is also overridden, changing the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute#System_Xml_Serialization_SoapTypeAttribute_TypeName_\" data-linktype=\"relative-path\">TypeName</a> to &quot;Team&quot;. Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapTypeAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n[SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)]\npublic class Group\n{\n   public string GroupName;\n   public Employee[] Employees;\n}\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapType.xml&quot;);\n      test.SerializeOverride(&quot;SoapType2.xml&quot;);\n      test.DeserializeObject(&quot;SoapType2.xml&quot;);\n   }\n\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping mapp = \n         (new SoapReflectionImporter()).ImportTypeMapping(typeof(Group));\n      XmlSerializer mySerializer = new XmlSerializer(mapp);\n      \n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides object.\n      \n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      // override and create SOAP messages.\n      SoapAttributeOverrides mySoapAttributeOverrides = \n          new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapType.IncludeInSchema = false;\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts.SoapType = soapType;\n      \n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n    \n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader reader = new StreamReader(filename);\n\n      // Create an XML text reader.\n      XmlTextReader xmlReader = new XmlTextReader(reader);\n      xmlReader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup = (Group) mySerializer.Deserialize(xmlReader);\n      xmlReader.ReadEndElement();\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName);\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; +\n        &quot;files for the generated XML.&quot;);\n\n      // Close the readers.\n      xmlReader.Close();\n      reader.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapTypeAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n&#39; The SoapType is overridden when the\n&#39; SerializeOverride  method is called.\n&lt;SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)&gt; _\nPublic class Group\n   Public GroupName As String\n   Public Employees() As Employee\nEnd Class\n\n&lt;SoapType(&quot;EmployeeType&quot;)&gt; _\nPublic Class Employee\n   Public Name As String\nEnd Class\n   \nPublic class Run\n   Public Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapType.xml&quot;)\n      test.SerializeOverride(&quot;SoapType2.xml&quot;)\n      test.DeserializeObject(&quot;SoapType2.xml&quot;)\n   End Sub\n\n   Public Sub SerializeOriginal(filename As String )\n      &#39; Create an instance of the XmlSerializer class that\n      &#39; can be used for serializing as a SOAP message.\n     Dim mapp  As XmlTypeMapping = _\n      (New SoapReflectionImporter()).ImportTypeMapping(GetType(Group))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(mapp)\n      \n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees=New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As string )\n   \n      &#39; Create an instance of the XmlSerializer class that\n      &#39; uses a SoapAttributeOverrides object.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees = New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n      &#39; Create and return an XmlSerializer instance used to\n      &#39; override and create SOAP messages.\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      \tNew SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      &#39; Override the SoapTypeAttribute.\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapType.IncludeInSchema = false\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;\n      soapAtts.SoapType = soapType\n      \n      mySoapAttributeOverrides.Add(GetType(Group),soapAtts)\n\n      &#39; Create an XmlTypeMapping that is used to create an instance \n      &#39; of the XmlSerializer. Then return the XmlSerializer object.\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim  ser As XmlSerializer = New XmlSerializer(myMapping)\n      \n      return ser\n   End Function\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Reading the file requires a TextReader.\n      Dim reader As TextReader = New StreamReader(filename)\n\n      &#39; Create an XML text reader.\n      Dim xmlReader As XmlTextReader = New XmlTextReader(reader)\n      xmlReader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = CType(mySerializer.Deserialize(xmlReader), Group)\n      xmlReader.ReadEndElement()\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName)\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; + _\n        &quot;files for the generated XML.&quot;)\n\n      &#39; Close the readers.\n      xmlReader.Close()\n      reader.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapTypeAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n\n[SoapType(&quot;SoapGroupType&quot;,&quot;http://www.cohowinery.com&quot;)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   array&lt;Employee^&gt;^Employees;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping^ mapp = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( mapp );\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides Object*.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader^ reader = gcnew StreamReader( filename );\n\n      // Create an XML text reader.\n      XmlTextReader^ xmlReader = gcnew XmlTextReader( reader );\n      xmlReader-&gt;ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( xmlReader ));\n      xmlReader-&gt;ReadEndElement();\n      Console::WriteLine( &quot;The GroupName is {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine( &quot;Look at the SoapType.xml and SoapType2.xml &quot;\n      &quot;files for the generated XML.&quot; );\n\n      // Close the readers.\n      xmlReader-&gt;Close();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      //  and create SOAP messages.\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapType-&gt;IncludeInSchema = false;\n      soapType-&gt;Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer Object*.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOriginal( &quot;SoapType.xml&quot; );\n   test-&gt;SerializeOverride( &quot;SoapType2.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapType2.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_SoapTypeAttribute_TypeName\">\r\n    \r\n            <a id=\"System_Xml_Serialization_SoapTypeAttribute_TypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the XML type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TypeName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the XML type. The default is the class name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Apply the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> to a class to specify the XML type&#39;s namespace, the XML type name, and whether to include the type in the XML Schema document. To see the results of setting the <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> object&#39;s properties, compile your application as an executable or DLL, and pass the resulting file to the <a href=\"../Topic/XML%20Schema%20Definition%20Tool%20(Xsd.exe).md\" data-linktype=\"relative-path\">XML Schema Definition Tool (Xsd.exe)</a>. The tool writes the schema, including the type definition.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is applied to the class with the TypeName set to &quot;SoapGroupType&quot;. The <a class=\"xref\" href=\"system.xml.serialization.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> is also overridden, changing the TypeName to &quot;Team&quot;. Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  </p>\n<pre><code class=\"lang-cs\" name=\"SoapTypeAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n[SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)]\npublic class Group\n{\n   public string GroupName;\n   public Employee[] Employees;\n}\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapType.xml&quot;);\n      test.SerializeOverride(&quot;SoapType2.xml&quot;);\n      test.DeserializeObject(&quot;SoapType2.xml&quot;);\n   }\n\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping mapp = \n         (new SoapReflectionImporter()).ImportTypeMapping(typeof(Group));\n      XmlSerializer mySerializer = new XmlSerializer(mapp);\n      \n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides object.\n      \n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create an XML text writer.\n      XmlTextWriter xmlWriter = new XmlTextWriter(writer);\n      xmlWriter.Formatting = Formatting.Indented;\n      xmlWriter.Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n      Employee e1 = new Employee();\n      e1.Name = &quot;Pat&quot;;\n      myGroup.Employees=new Employee[]{e1};\n\n      // Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;);\n\n      // Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup);\n\n      // Close the root tag.\n      xmlWriter.WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter.Close();\n\n      // Close the TextWriter.\n      writer.Close();\n   }\n\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      // override and create SOAP messages.\n      SoapAttributeOverrides mySoapAttributeOverrides = \n          new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapType.IncludeInSchema = false;\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts.SoapType = soapType;\n      \n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n    \n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer mySerializer =  CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader reader = new StreamReader(filename);\n\n      // Create an XML text reader.\n      XmlTextReader xmlReader = new XmlTextReader(reader);\n      xmlReader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup = (Group) mySerializer.Deserialize(xmlReader);\n      xmlReader.ReadEndElement();\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName);\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; +\n        &quot;files for the generated XML.&quot;);\n\n      // Close the readers.\n      xmlReader.Close();\n      reader.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapTypeAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n&#39; The SoapType is overridden when the\n&#39; SerializeOverride  method is called.\n&lt;SoapType(&quot;SoapGroupType&quot;, &quot;http://www.cohowinery.com&quot;)&gt; _\nPublic class Group\n   Public GroupName As String\n   Public Employees() As Employee\nEnd Class\n\n&lt;SoapType(&quot;EmployeeType&quot;)&gt; _\nPublic Class Employee\n   Public Name As String\nEnd Class\n   \nPublic class Run\n   Public Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapType.xml&quot;)\n      test.SerializeOverride(&quot;SoapType2.xml&quot;)\n      test.DeserializeObject(&quot;SoapType2.xml&quot;)\n   End Sub\n\n   Public Sub SerializeOriginal(filename As String )\n      &#39; Create an instance of the XmlSerializer class that\n      &#39; can be used for serializing as a SOAP message.\n     Dim mapp  As XmlTypeMapping = _\n      (New SoapReflectionImporter()).ImportTypeMapping(GetType(Group))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(mapp)\n      \n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees=New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As string )\n   \n      &#39; Create an instance of the XmlSerializer class that\n      &#39; uses a SoapAttributeOverrides object.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As TextWriter = New StreamWriter(filename)\n\n      &#39; Create an XML text writer.\n      Dim xmlWriter As XmlTextWriter = New XmlTextWriter(writer)\n      xmlWriter.Formatting = Formatting.Indented\n      xmlWriter.Indentation = 2\n\n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n      Dim e1 As Employee = New Employee()\n      e1.Name = &quot;Pat&quot;\n      myGroup.Employees = New Employee(){e1}\n\n      &#39; Write the root element.\n      xmlWriter.WriteStartElement(&quot;root&quot;)\n\n      &#39; Serialize the class.\n      mySerializer.Serialize(xmlWriter, myGroup)\n\n      &#39; Close the root tag.\n      xmlWriter.WriteEndElement()\n\n      &#39; Close the XmlWriter.\n      xmlWriter.Close()\n\n      &#39; Close the TextWriter.\n      writer.Close()\n   End Sub\n\n   Private Function CreateOverrideSerializer() As XmlSerializer \n      &#39; Create and return an XmlSerializer instance used to\n      &#39; override and create SOAP messages.\n      Dim mySoapAttributeOverrides As SoapAttributeOverrides = _\n      \tNew SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      &#39; Override the SoapTypeAttribute.\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapType.IncludeInSchema = false\n      soapType.Namespace = &quot;http://www.microsoft.com&quot;\n      soapAtts.SoapType = soapType\n      \n      mySoapAttributeOverrides.Add(GetType(Group),soapAtts)\n\n      &#39; Create an XmlTypeMapping that is used to create an instance \n      &#39; of the XmlSerializer. Then return the XmlSerializer object.\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      mySoapAttributeOverrides)).ImportTypeMapping(GetType(Group))\n\t\n      Dim  ser As XmlSerializer = New XmlSerializer(myMapping)\n      \n      return ser\n   End Function\n\n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim mySerializer As XmlSerializer =  CreateOverrideSerializer()\n\n      &#39; Reading the file requires a TextReader.\n      Dim reader As TextReader = New StreamReader(filename)\n\n      &#39; Create an XML text reader.\n      Dim xmlReader As XmlTextReader = New XmlTextReader(reader)\n      xmlReader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = CType(mySerializer.Deserialize(xmlReader), Group)\n      xmlReader.ReadEndElement()\n      Console.WriteLine(&quot;The GroupName is &quot; + myGroup.GroupName)\n      Console.WriteLine(&quot;Look at the SoapType.xml and SoapType2.xml &quot; + _\n        &quot;files for the generated XML.&quot;)\n\n      &#39; Close the readers.\n      xmlReader.Close()\n      reader.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"SoapTypeAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n[SoapType(&quot;EmployeeType&quot;)]\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\n\n// The SoapType is overridden when the\n// SerializeOverride  method is called.\n\n[SoapType(&quot;SoapGroupType&quot;,&quot;http://www.cohowinery.com&quot;)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   array&lt;Employee^&gt;^Employees;\n};\n\npublic ref class Run\n{\npublic:\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // can be used for serializing as a SOAP message.\n      XmlTypeMapping^ mapp = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( mapp );\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class that\n      // uses a SoapAttributeOverrides Object*.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Writing the file requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Create an XML text writer.\n      XmlTextWriter^ xmlWriter = gcnew XmlTextWriter( writer );\n      xmlWriter-&gt;Formatting = Formatting::Indented;\n      xmlWriter-&gt;Indentation = 2;\n\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the Object* properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      Employee^ e1 = gcnew Employee;\n      e1-&gt;Name = &quot;Pat&quot;;\n      myGroup-&gt;Employees = gcnew array&lt;Employee^&gt;(1);\n      myGroup-&gt;Employees[ 0 ] = e1;\n\n      // Write the root element.\n      xmlWriter-&gt;WriteStartElement( &quot;root&quot; );\n\n      // Serialize the class.\n      mySerializer-&gt;Serialize( xmlWriter, myGroup );\n\n      // Close the root tag.\n      xmlWriter-&gt;WriteEndElement();\n\n      // Close the XmlWriter.\n      xmlWriter-&gt;Close();\n\n      // Close the TextWriter.\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ mySerializer = CreateOverrideSerializer();\n\n      // Reading the file requires a TextReader.\n      TextReader^ reader = gcnew StreamReader( filename );\n\n      // Create an XML text reader.\n      XmlTextReader^ xmlReader = gcnew XmlTextReader( reader );\n      xmlReader-&gt;ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( xmlReader ));\n      xmlReader-&gt;ReadEndElement();\n      Console::WriteLine( &quot;The GroupName is {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine( &quot;Look at the SoapType.xml and SoapType2.xml &quot;\n      &quot;files for the generated XML.&quot; );\n\n      // Close the readers.\n      xmlReader-&gt;Close();\n      reader-&gt;Close();\n   }\n\nprivate:\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      // Create and return an XmlSerializer instance used to\n      //  and create SOAP messages.\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n\n      // Override the SoapTypeAttribute.\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapType-&gt;IncludeInSchema = false;\n      soapType-&gt;Namespace = &quot;http://www.microsoft.com&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer Object*.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;SerializeOriginal( &quot;SoapType.xml&quot; );\n   test-&gt;SerializeOverride( &quot;SoapType2.xml&quot; );\n   test-&gt;DeserializeObject( &quot;SoapType2.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.SoapTypeAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.SoapTypeAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapTypeAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapTypeAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapTypeAttribute.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.SoapTypeAttribute.TypeName\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c5cd94fd-b7e0-48ad-24d9-d85ff7efe0ed\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.Serialization\\SoapTypeAttribute.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls the schema generated by the  when a class instance is serialized as SOAP encoded XML.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.SoapTypeAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.SoapTypeAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.SoapTypeAttribute.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.SoapTypeAttribute","System.Xml.Serialization.SoapTypeAttribute..ctor","System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema","System.Xml.Serialization.SoapTypeAttribute.Namespace","System.Xml.Serialization.SoapTypeAttribute.TypeName"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.SoapTypeAttribute","System::Xml::Serialization::SoapTypeAttribute","System.Xml.Serialization.SoapTypeAttribute.#ctor","System::Xml::Serialization::SoapTypeAttribute::#ctor","System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema","System::Xml::Serialization::SoapTypeAttribute::IncludeInSchema","System.Xml.Serialization.SoapTypeAttribute.Namespace","System::Xml::Serialization::SoapTypeAttribute::Namespace","System.Xml.Serialization.SoapTypeAttribute.TypeName","System::Xml::Serialization::SoapTypeAttribute::TypeName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c5cd94fd-b7e0-48ad-24d9-d85ff7efe0ed","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.Serialization\\SoapTypeAttribute.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/SoapTypeAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoapTypeAttribute class | Microsoft Docs","_op_ogTitle":"SoapTypeAttribute class","description":"Controls the schema generated by the  when a class instance is serialized as SOAP encoded XML.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.SoapTypeAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.soaptypeattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.soaptypeattribute","fileRelativePath":"System.Xml.Serialization.SoapTypeAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}