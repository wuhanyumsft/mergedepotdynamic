{"content":"    \r\n    <h1 id=\"System_Threading_CompressedStack\">\r\n      <span class=\"lang-csharp\">CompressedStack</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class CompressedStack : System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CompressedStack</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The compressed stack is a compact representation of all the code access security information on the call stack, such as <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a> and <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert_\" data-linktype=\"relative-path\">Assert</a> actions. For example, if a <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a> action is two stack frames up from the current frame and there are no other code access security annotations between there and the current frame, the compressed stack records only that information, without having to serialize the entire call stack.  </p>\n<p> The CompressedStackclass is used internally by the <a class=\"xref\" href=\"system.security.securitycontext\" data-linktype=\"relative-path\">SecurityContext</a> class. For example, the <a class=\"xref\" href=\"system.security.securitycontext#System_Security_SecurityContext_Capture_\" data-linktype=\"relative-path\">Capture</a> method captures the compressed stack for the current call stack, along with impersonation and culture information. The <a class=\"xref\" href=\"system.security.securitycontext\" data-linktype=\"relative-path\">SecurityContext</a> class is used in turn by the <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a> class to flow context across threads, for example when scheduling thread pool tasks.  </p>\n<p> This class is not used in ordinary application programming.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CompressedStack_Capture\" data-linktype=\"self-bookmark\">Capture()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Captures the compressed stack from the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CompressedStack_CreateCopy\" data-linktype=\"self-bookmark\">CreateCopy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of the current compressed stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CompressedStack_GetCompressedStack\" data-linktype=\"self-bookmark\">GetCompressedStack()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the compressed stack for the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CompressedStack_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the logical context information needed to recreate an instance of this execution context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CompressedStack_Run_System_Threading_CompressedStack_System_Threading_ContextCallback_System_Object_\" data-linktype=\"self-bookmark\">Run(CompressedStack,ContextCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs a method in the specified compressed stack on the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CompressedStack_Capture\">\r\n    \r\n            <a id=\"System_Threading_CompressedStack_Capture_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Capture()</div>        \r\n          </div>\r\n    \r\n            <p>Captures the compressed stack from the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.CompressedStack Capture ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Captures all the code access security information on the call stack, such as <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a> and <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert_\" data-linktype=\"relative-path\">Assert</a> actions, in a compressed format. For example, if a <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a> action is two stack frames up from the current frame and there are no other code access security annotations between there and the current frame, the compressed stack records only that information, without having to serialize the entire call stack.  </p>\n<p> The captured compressed stack can be applied to another thread.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CompressedStack_CreateCopy\">\r\n    \r\n            <a id=\"System_Threading_CompressedStack_CreateCopy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCopy()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of the current compressed stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CompressedStack CreateCopy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a> object representing the current compressed stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful for creating a copy of the current compressed stack to apply to another thread.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CompressedStack_GetCompressedStack\">\r\n    \r\n            <a id=\"System_Threading_CompressedStack_GetCompressedStack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCompressedStack()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the compressed stack for the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.CompressedStack GetCompressedStack ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a> for the current thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A caller in the call chain does not have permission to access unmanaged code.  </p>\n<p> -or-  </p>\n<p> The request for <a class=\"xref\" href=\"system.security.permissions.strongnameidentitypermission\" data-linktype=\"relative-path\">StrongNameIdentityPermission</a> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If security is enabled, the current compressed stack is returned. If security is disabled, GetCompressedStack returns an empty <a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method uses <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityAction</a> to prevent it from being called from untrusted code; only the immediate caller is required to have <a class=\"xref\" href=\"system.security.permissions.securitypermissionattribute#System_Security_Permissions_SecurityPermissionAttribute_UnmanagedCode_\" data-linktype=\"relative-path\">UnmanagedCode</a> permission. For important limitations on using the <code>LinkDemand</code> member, see <a href=\"http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5\" data-linktype=\"external\">Demand vs. LinkDemand</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member also makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key. Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key. The security exception is based on the Microsoft public key, not the ECMA pseudo key.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CompressedStack_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Threading_CompressedStack_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the logical context information needed to recreate an instance of this execution context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object to be populated with serialization information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> structure representing the destination context of the serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>info</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetObjectData sets a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the logical call context information. During deserialization, the execution context object is reconstituted from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> transmitted over the stream.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CompressedStack_Run_System_Threading_CompressedStack_System_Threading_ContextCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_CompressedStack_Run_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Run(CompressedStack,ContextCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Runs a method in the specified compressed stack on the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Run (System.Threading.CompressedStack compressedStack, System.Threading.ContextCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressedStack</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.compressedstack\" data-linktype=\"relative-path\">CompressedStack</a> to set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.contextcallback\" data-linktype=\"relative-path\">ContextCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.contextcallback\" data-linktype=\"relative-path\">ContextCallback</a> that represents the method to be run in the specified security context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to be passed to the callback method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>compressedStack</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The compressed stack is returned to its previous state when the method completes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.CompressedStack.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.CompressedStack.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.CompressedStack\">\r\n<meta name=\"APIName\" content=\"System.Threading.CompressedStack.Capture\">\r\n<meta name=\"APIName\" content=\"System.Threading.CompressedStack.CreateCopy\">\r\n<meta name=\"APIName\" content=\"System.Threading.CompressedStack.GetCompressedStack\">\r\n<meta name=\"APIName\" content=\"System.Threading.CompressedStack.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Threading.CompressedStack.Run\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e7ca381e-c0d5-fe86-553b-73ec9235c683\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.CompressedStack\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.CompressedStack.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.CompressedStack.yml","open_to_public_contributors":true,"api_name":["System.Threading.CompressedStack","System.Threading.CompressedStack.Capture","System.Threading.CompressedStack.CreateCopy","System.Threading.CompressedStack.GetCompressedStack","System.Threading.CompressedStack.GetObjectData","System.Threading.CompressedStack.Run"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.CompressedStack","System::Threading::CompressedStack","System.Threading.CompressedStack.Capture","System::Threading::CompressedStack::Capture","System.Threading.CompressedStack.CreateCopy","System::Threading::CompressedStack::CreateCopy","System.Threading.CompressedStack.GetCompressedStack","System::Threading::CompressedStack::GetCompressedStack","System.Threading.CompressedStack.GetObjectData","System::Threading::CompressedStack::GetObjectData","System.Threading.CompressedStack.Run","System::Threading::CompressedStack::Run"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e7ca381e-c0d5-fe86-553b-73ec9235c683","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/CompressedStack.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CompressedStack class | Microsoft Docs","_op_ogTitle":"CompressedStack class","description":"Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.CompressedStack","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.compressedstack","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.compressedstack","fileRelativePath":"System.Threading.CompressedStack.html"},"themesRelativePathToOutputRoot":"_themes/"}