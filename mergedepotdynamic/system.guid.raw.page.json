{"content":"    \r\n    <h1 id=\"System_Guid\">\r\n      <span class=\"lang-csharp\">Guid</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a globally unique identifier (GUID).  </p>\n<p> To browse the .NET Framework source code for this type, see the <a href=\"http://referencesource.microsoft.com/#mscorlib/system/guid.cs#b622ef5f6b76c10a\" data-linktype=\"external\">Reference Source</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic struct Guid : IComparable, IComparable&lt;Guid&gt;, IEquatable&lt;Guid&gt;, IFormattable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Guid</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> To view the .NET Framework source code for this type, see the <a href=\"http://referencesource.microsoft.com/#mscorlib/system/guid.cs#b622ef5f6b76c10a\" data-linktype=\"external\">Reference Source</a>. You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <a href=\"http://referencesource.microsoft.com/\" data-linktype=\"external\">instructions</a>.  </p>\n</div>\n<p> A GUID is a 128-bit integer (16 bytes) that can be used across all computers and networks wherever a unique identifier is required. Such an identifier has a very low probability of being duplicated.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid__ctor_System_Byte___\" data-linktype=\"self-bookmark\">Guid(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified array of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid__ctor_System_String_\" data-linktype=\"self-bookmark\">Guid(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the value represented by the specified string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid__ctor_System_Int32_System_Int16_System_Int16_System_Byte___\" data-linktype=\"self-bookmark\">Guid(Int32,Int16,Int16,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified integers and byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid__ctor_System_Int32_System_Int16_System_Int16_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_\" data-linktype=\"self-bookmark\">Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified integers and bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid__ctor_System_UInt32_System_UInt16_System_UInt16_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_\" data-linktype=\"self-bookmark\">Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified unsigned integers and bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_Empty\" data-linktype=\"self-bookmark\">Empty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A read-only instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure whose value is all zeros.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_CompareTo_System_Guid_\" data-linktype=\"self-bookmark\">CompareTo(Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares this instance to a specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> object and returns an indication of their relative values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_CompareTo_System_Object_\" data-linktype=\"self-bookmark\">CompareTo(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares this instance to a specified object and returns an indication of their relative values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_Equals_System_Guid_\" data-linktype=\"self-bookmark\">Equals(Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether this instance and a specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> object represent the same value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether this instance is equal to a specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_NewGuid\" data-linktype=\"self-bookmark\">NewGuid()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_Parse_System_String_\" data-linktype=\"self-bookmark\">Parse(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_ParseExact_System_String_System_String_\" data-linktype=\"self-bookmark\">ParseExact(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure, provided that the string is in the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_ToByteArray\" data-linktype=\"self-bookmark\">ToByteArray()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a 16-element byte array that contains the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of the value of this instance in registry format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_ToString_System_String_\" data-linktype=\"self-bookmark\">ToString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of the value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> instance, according to the provided format specifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_ToString_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of the value of this instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> class, according to the provided format specifier and culture-specific format information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_TryParse_System_String_System_Guid__\" data-linktype=\"self-bookmark\">TryParse(String,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_TryParseExact_System_String_System_String_System_Guid__\" data-linktype=\"self-bookmark\">TryParseExact(String,String,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure, provided that the string is in the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_op_Equality_System_Guid_System_Guid_\" data-linktype=\"self-bookmark\">op_Equality(Guid,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the values of two specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Guid_op_Inequality_System_Guid_System_Guid_\" data-linktype=\"self-bookmark\">op_Inequality(Guid,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the values of two specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Guid__ctor_System_Byte___\">\r\n    \r\n            <a id=\"System_Guid__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Guid(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified array of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid (byte[] b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 16-element byte array containing values with which to initialize the GUID.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>b</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>b</code> is not 16 bytes long.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Guid__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Guid(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the value represented by the specified string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid (string g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a GUID in one of the following formats (&quot;d&quot; represents a hexadecimal digit whose case is ignored):  </p>\n<p> 32 contiguous digits:  </p>\n<p> dddddddddddddddddddddddddddddddd  </p>\n<p> -or-  </p>\n<p> Groups of 8, 4, 4, 4, and 12 digits with hyphens between the groups. The entire GUID can optionally be enclosed in matching braces or parentheses:  </p>\n<p> dddddddd-dddd-dddd-dddd-dddddddddddd  </p>\n<p> -or-  </p>\n<p> {dddddddd-dddd-dddd-dddd-dddddddddddd}  </p>\n<p> -or-  </p>\n<p> (dddddddd-dddd-dddd-dddd-dddddddddddd)  </p>\n<p> -or-  </p>\n<p> Groups of 8, 4, and 4 digits, and a subset of eight groups of 2 digits, with each group prefixed by &quot;0x&quot; or &quot;0X&quot;, and separated by commas. The entire GUID, as well as the subset, is enclosed in matching braces:  </p>\n<p> {0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}  </p>\n<p> All braces, commas, and &quot;0x&quot; prefixes are required. All embedded spaces are ignored. All leading zeros in a group are ignored.  </p>\n<p> The digits shown in a group are the maximum number of meaningful digits that can appear in that group. You can specify from 1 to the number of digits shown for a group. The specified digits are assumed to be the low-order digits of the group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>g</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The format of <code>g</code> is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p>The format of <code>g</code> is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The alphabetic hexadecimal digits in the <code>g</code> parameter can be uppercase or lowercase. For example, the following strings represent the same GUID:  </p>\n<p> &quot;ca761232ed4211cebacd00aa0057b223&quot;  </p>\n<p> &quot;CA761232-ED42-11CE-BACD-00AA0057B223&quot;  </p>\n<p> &quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;  </p>\n<p> &quot;(CA761232-ED42-11CE-BACD-00AA0057B223)&quot;  </p>\n<p> &quot;{0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}&quot;</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example passes each string listed in the Remarks section to the Guid constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.ctor#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] guidStrings = { &quot;ca761232ed4211cebacd00aa0057b223&quot;,\n                               &quot;CA761232-ED42-11CE-BACD-00AA0057B223&quot;, \n                               &quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;, \n                               &quot;(CA761232-ED42-11CE-BACD-00AA0057B223)&quot;, \n                               &quot;{0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}&quot; };\n      foreach (var guidString in guidStrings) {\n         Guid guid = new Guid(guidString);\n         Console.WriteLine(&quot;Original string: {0}&quot;, guidString);\n         Console.WriteLine(&quot;Guid:            {0}&quot;, guid);\n         Console.WriteLine();\n      }\n   }\n}\n// The example displays the following output:\n//    Original string: ca761232ed4211cebacd00aa0057b223\n//    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n//    \n//    Original string: CA761232-ED42-11CE-BACD-00AA0057B223\n//    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n//    \n//    Original string: {CA761232-ED42-11CE-BACD-00AA0057B223}\n//    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n//    \n//    Original string: (CA761232-ED42-11CE-BACD-00AA0057B223)\n//    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n//    \n//    Original string: {0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}\n//    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.ctor#1\">Module Example\n   Public Sub Main()\n      Dim guidStrings() As String = { &quot;ca761232ed4211cebacd00aa0057b223&quot;,\n                                      &quot;CA761232-ED42-11CE-BACD-00AA0057B223&quot;, \n                                      &quot;{CA761232-ED42-11CE-BACD-00AA0057B223}&quot;, \n                                      &quot;(CA761232-ED42-11CE-BACD-00AA0057B223)&quot;, \n                                      &quot;{0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}&quot; }\n      For Each guidString In guidStrings\n         Dim guid As New Guid(guidString)\n         Console.WriteLine(&quot;Original string: {0}&quot;, guidString)\n         Console.WriteLine(&quot;Guid:            {0}&quot;, guid)\n         Console.WriteLine()\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Original string: ca761232ed4211cebacd00aa0057b223\n&#39;    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n&#39;    \n&#39;    Original string: CA761232-ED42-11CE-BACD-00AA0057B223\n&#39;    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n&#39;    \n&#39;    Original string: {CA761232-ED42-11CE-BACD-00AA0057B223}\n&#39;    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n&#39;    \n&#39;    Original string: (CA761232-ED42-11CE-BACD-00AA0057B223)\n&#39;    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n&#39;    \n&#39;    Original string: {0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}\n&#39;    Guid:            ca761232-ed42-11ce-bacd-00aa0057b223\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid__ctor_System_Int32_System_Int16_System_Int16_System_Byte___\">\r\n    \r\n            <a id=\"System_Guid__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Guid(Int32,Int16,Int16,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified integers and byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid (int a, short b, short c, byte[] d);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first 4 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next 2 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>c</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next 2 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>d</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The remaining 8 bytes of the GUID.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>d</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>d</code> is not 8 bytes long.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p><code>Guid(1,2,3,new byte[]{0,1,2,3,4,5,6,7})</code> creates a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> that corresponds to &quot;00000001-0002-0003-0001-020304050607&quot;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid__ctor_System_Int32_System_Int16_System_Int16_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_\">\r\n    \r\n            <a id=\"System_Guid__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified integers and bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid (int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first 4 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next 2 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>c</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next 2 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>d</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>f</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>h</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>j</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>k</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specifying individual bytes in this manner can be used to circumvent byte order restrictions (big-endian or little-endian byte order) on particular types of computers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a GUID whose string representation is &quot;0000000a-000b-000c-0001-020304050607&quot;.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Guid.Ctor#2\">Module Example\n   Public Sub Main()\n      Dim g As New Guid(&amp;hA, &amp;hB, &amp;hC, \n                        New Byte() { 0, 1, 2, 3, 4, 5, 6, 7 } )\n      Console.WriteLine(&quot;{0:B}&quot;, g)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;   {0000000a-000b-000c-0001-020304050607}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Guid.Ctor#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Guid g = new Guid(0xA, 0xB, 0xC, \n                        new Byte[] { 0, 1, 2, 3, 4, 5, 6, 7 } );\n      Console.WriteLine(&quot;{0:B}&quot;, g);\n   }\n}\n// The example displays the following output:\n//        {0000000a-000b-000c-0001-020304050607}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid__ctor_System_UInt32_System_UInt16_System_UInt16_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_System_Byte_\">\r\n    \r\n            <a id=\"System_Guid__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure by using the specified unsigned integers and bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid (uint a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first 4 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next 2 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>c</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next 2 bytes of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>d</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>f</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>h</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>j</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>k</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The next byte of the GUID.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specifying the bytes in this manner avoids endianness issues.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>Guid(0xa,0xb,0xc,0,1,2,3,4,5,6,7) creates a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> that corresponds to &quot;0000000a-000b-000c-0001-020304050607&quot;.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_Empty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Empty</div>        \r\n          </div>\r\n    \r\n            <p>A read-only instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure whose value is all zeros.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly Guid Empty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can compare a GUID with the value of the Empty field to determine whether a GUID is non-zero. The following example uses the <a class=\"xref\" href=\"system.guid#System_Guid_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a> operator to compare two GUID values with Empty to determine whether they consist exclusively of zeros.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Guid.Empty#1\">Module Example\n   Public Sub Main()\n      &#39; Create a GUID and determine whether it consists of all zeros.\n      Dim guid1 As Guid = Guid.NewGuid\n      Console.WriteLine(guid1)\n      Console.WriteLine(&quot;Empty: {0}&quot;, guid1 = Guid.Empty)\n      Console.WriteLine()\n      \n      &#39; Create a GUID with all zeros and compare it to Empty.\n      Dim bytes(15) As Byte\n      Dim guid2 As New Guid(bytes)\n      Console.WriteLine(guid2)\n      Console.WriteLine(&quot;Empty: {0}&quot;, guid2 = Guid.Empty)\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       11c43ee8-b9d3-4e51-b73f-bd9dda66e29c\n&#39;       Empty: False\n&#39;       \n&#39;       00000000-0000-0000-0000-000000000000\n&#39;       Empty: True\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Guid.Empty#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Create a GUID and determine whether it consists of all zeros.\n      Guid guid1 = Guid.NewGuid();\n      Console.WriteLine(guid1);\n      Console.WriteLine(&quot;Empty: {0}\\n&quot;, guid1 == Guid.Empty);\n      \n      // Create a GUID with all zeros and compare it to Empty.\n      Byte[] bytes = new Byte[16];\n      Guid guid2 = new Guid(bytes);\n      Console.WriteLine(guid2);\n      Console.WriteLine(&quot;Empty: {0}&quot;, guid2 == Guid.Empty);\n   }\n}\n// The example displays output like the following:\n//       11c43ee8-b9d3-4e51-b73f-bd9dda66e29c\n//       Empty: False\n//       \n//       00000000-0000-0000-0000-000000000000\n//       Empty: True\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_CompareTo_System_Guid_\">\r\n    \r\n            <a id=\"System_Guid_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Compares this instance to a specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> object and returns an indication of their relative values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (Guid value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Return value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> A negative integer<br>\n </td><td> This instance is less than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is equal to <code>value</code>.<br>\n </td></tr><tr><td> A positive integer<br>\n </td><td> This instance is greater than <code>value</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CompareTo method compares the GUIDs as if they were values provided to the [Guid(Int32, Int16, Int16, Byte&lt;xref:System.Guid.%23ctor%28System.Int32%2CSystem.Int16%2CSystem.Int16%2CSystem.Byte%5B%5D%29&gt; constructor, as follows:  </p>\n<ul>\n<li><p>It compares the <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  </p>\n</li>\n<li><p>It compares the first <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  </p>\n</li>\n<li><p>It compares the second <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  </p>\n</li>\n<li><p>If performs a byte-by-byte comparison of the next eight <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> values. When it encounters the first unequal pair, it returns the result. Otherwise, it returns 0 to indicate that the two <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> values are equal.  </p>\n<p>Note that the final eight bytes appear in the string representation of a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> in reverse order, from low byte to high byte. For example, in the string representation of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value &quot;01e75c83-c6f5-4192-b57e-7427cec5560d&quot;, the final eight bytes are &quot;b57e-7427cec5560d.&quot; In other words, the final eight bytes are compared on a byte-by-byte basis from left to right starting with 0xb5.  </p>\n<p>If two GUIDs have equal values for a component, the method compares the next component. When it finds a component whose values are unequal, it returns the result.  </p>\n<p>This method implements the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> interface and performs slightly better than the <a class=\"xref\" href=\"system.guid#System_Guid_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method because it does not have to convert the <code>value</code> parameter to a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the CompareTo method to compare a GUID value with two similar GUID values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.CompareTo#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Guid mainGuid = Guid.Parse(&quot;01e75c83-c6f5-4192-b57e-7427cec5560d&quot;);\n      unchecked {\n         Guid guid2 = new Guid(0x01e75c83, (short) 0xc6f5, \n                               0x4192,\n                               new Byte[] { 0xb5, 0x7e, 0x74, 0x27, 0xce, 0xc5, 0x56, 0x0c} );\n         Guid guid3 = Guid.Parse(&quot;01e75c84-c6f5-4192-b57e-7427cec5560d&quot;);\n         \n         Console.WriteLine(&quot;{0} {1:F} {2}&quot;, mainGuid, \n                           (Comparison) mainGuid.CompareTo(guid2), guid2);\n         Console.WriteLine(&quot;{0} {1:F} {2}&quot;, mainGuid, \n                           (Comparison) mainGuid.CompareTo(guid3), guid3);\n      }\n   }\n\n   private enum Comparison\n   { LessThan = -1, Equals = 0, GreaterThan = 1 }\n}\n// The example displays the following output:\n//    01e75c83-c6f5-4192-b57e-7427cec5560d GreaterThan 01e75c83-c6f5-4192-b57e-7427cec5560c\n//    01e75c83-c6f5-4192-b57e-7427cec5560d LessThan 01e75c84-c6f5-4192-b57e-7427cec5560d\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.CompareTo#1\">Module Example\n   Public Sub Main()\n      Dim mainGuid As Guid = Guid.Parse(&quot;01e75c83-c6f5-4192-b57e-7427cec5560d&quot;)\n      Dim guid2 As New Guid(&amp;h01e75c83, \n                            BitConverter.ToInt16(new Byte() { &amp;hf5, &amp;hc6 }, 0), \n                            &amp;h4192, \n                            new Byte() { &amp;hb5, &amp;h7e, &amp;h74, &amp;h27, &amp;hce, &amp;hc5, &amp;h56, &amp;h0c} )\n      Dim guid3 As Guid = Guid.Parse(&quot;01e75c84-c6f5-4192-b57e-7427cec5560d&quot;)\n      \n      Console.WriteLine(&quot;{0} {1:F} {2}&quot;, mainGuid, \n                        CType(mainGuid.CompareTo(guid2), Comparison), guid2)\n      Console.WriteLine(&quot;{0} {1:F} {2}&quot;, mainGuid, \n                        CType(mainGuid.CompareTo(guid3), Comparison), guid3)\n   End Sub\n   \n   Private Enum Comparison As Integer\n      LessThan = -1\n      Equals = 0\n      GreaterThan = 1\n   End Enum\nEnd Module\n&#39; The example displays the following output:\n&#39;    01e75c83-c6f5-4192-b57e-7427cec5560d GreaterThan 01e75c83-c6f5-4192-b57e-7427cec5560c\n&#39;    01e75c83-c6f5-4192-b57e-7427cec5560d LessThan 01e75c84-c6f5-4192-b57e-7427cec5560d\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_CompareTo_System_Object_\">\r\n    \r\n            <a id=\"System_Guid_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares this instance to a specified object and returns an indication of their relative values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare, or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Return value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> A negative integer<br>\n </td><td> This instance is less than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is equal to <code>value</code>.<br>\n </td></tr><tr><td> A positive integer<br>\n </td><td> This instance is greater than <code>value</code>, or <code>value</code> is <code>null</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>value</code> parameter must be <code>null</code> or an instance of <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>; otherwise, an exception is thrown. Any instance of <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>, regardless of its value, is considered greater than <code>null</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.guid#System_Guid_CompareTo_\" data-linktype=\"relative-path\">CompareTo</a> method compares the GUIDs as if they were values provided to the <a class=\"xref\" href=\"system.guid#System_Guid__ctor_\" data-linktype=\"relative-path\">Guid</a> constructor, as follows:  </p>\n<ul>\n<li><p>It compares the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  </p>\n</li>\n<li><p>It compares the first <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  </p>\n</li>\n<li><p>It compares the second <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  </p>\n</li>\n<li><p>If performs a byte-by-byte comparison of the next eight <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> values. When it encounters the first unequal pair, it returns the result. Otherwise, it returns 0 to indicate that the two <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> values are equal.  </p>\n<p>If two GUIDs have equal values for a component, the method compares the next component. When it finds a component whose values are unequal, it returns the result.  </p>\n<p>Note that the final eight bytes appear in the string representation of a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> in reverse order, from low byte to high byte. For example, in the string representation of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value &quot;01e75c83-c6f5-4192-b57e-7427cec5560d&quot;, the final eight bytes are &quot;b57e-7427cec5560d.&quot;</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.runtime.interopservices.guidattribute\" data-linktype=\"relative-path\">GuidAttribute</a> attribute to assign a GUID to a class. It retrieves the value of this GUID by calling the <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_\" data-linktype=\"relative-path\">GetCustomAttribute</a> method and passing the <a class=\"xref\" href=\"system.runtime.interopservices.guidattribute#System_Runtime_InteropServices_GuidAttribute_Value_\" data-linktype=\"relative-path\">Value</a> property of the returned <a class=\"xref\" href=\"system.runtime.interopservices.guidattribute\" data-linktype=\"relative-path\">GuidAttribute</a> object to the <a class=\"xref\" href=\"system.guid#System_Guid_Parse_\" data-linktype=\"relative-path\">Parse</a> method. Then it compares that GUID with an array of values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.CompareTo#2\">using System;\nusing System.Runtime.InteropServices;\n\n[Guid(&quot;936DA01F-9ABD-4d9d-80C7-02AF85C822A8&quot;)]\npublic class Example\n{\n   public static void Main()\n   {\n      GuidAttribute guidAttr = (GuidAttribute) Attribute.GetCustomAttribute(typeof(Example), \n                                                      typeof(GuidAttribute));\n      Guid guidValue = Guid.Parse(guidAttr.Value);\n      Object[] values = { null , 16, \n                          Guid.Parse(&quot;01e75c83-c6f5-4192-b57e-7427cec5560d&quot;),\n                          guidValue };\n      foreach (var value in values) {\n         try {\n            Console.WriteLine(&quot;{0} and {1}: {2}&quot;, guidValue, \n                              value == null ? &quot;null&quot; : value,\n                              guidValue.CompareTo(value));\n         }\n         catch (ArgumentException) {\n            Console.WriteLine(&quot;Cannot compare {0} and {1}&quot;, guidValue,\n                              value == null ? &quot;null&quot; : value);\n         }                     \n      }                         \n   }\n}\n// The example displays the following output:\n//    936da01f-9abd-4d9d-80c7-02af85c822a8 and null: 1\n//    Cannot compare 936da01f-9abd-4d9d-80c7-02af85c822a8 and 16\n//    936da01f-9abd-4d9d-80c7-02af85c822a8 and 01e75c83-c6f5-4192-b57e-7427cec5560d: 1\n//    936da01f-9abd-4d9d-80c7-02af85c822a8 and 936da01f-9abd-4d9d-80c7-02af85c822a8: 0\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.CompareTo#2\">Imports System.Runtime.InteropServices\n\n&lt;Guid(&quot;936DA01F-9ABD-4d9d-80C7-02AF85C822A8&quot;)&gt;\nModule Example\n   Public Sub Main()\n      Dim guidAttr As GuidAttribute = CType(Attribute.GetCustomAttribute(GetType(Example), \n                                                      GetType(GuidAttribute)), GuidAttribute)\n      Dim guidValue As Guid = Guid.Parse(guidAttr.Value)\n      Dim values() As Object = { Nothing, 16, \n                               Guid.Parse(&quot;01e75c83-c6f5-4192-b57e-7427cec5560d&quot;),\n                               guidValue }\n      For Each value In values\n         Try\n            Console.WriteLine(&quot;{0} and {1}: {2}&quot;, guidValue, \n                              If(value Is Nothing, &quot;null&quot;, value),\n                              guidValue.CompareTo(value))\n         Catch e As ArgumentException\n            Console.WriteLine(&quot;Cannot compare {0} and {1}&quot;, guidValue,\n                              If(value Is Nothing, &quot;null&quot;, value))\n         End Try                     \n      Next                         \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    936da01f-9abd-4d9d-80c7-02af85c822a8 and null: 1\n&#39;    Cannot compare 936da01f-9abd-4d9d-80c7-02af85c822a8 and 16\n&#39;    936da01f-9abd-4d9d-80c7-02af85c822a8 and 01e75c83-c6f5-4192-b57e-7427cec5560d: 1\n&#39;    936da01f-9abd-4d9d-80c7-02af85c822a8 and 936da01f-9abd-4d9d-80c7-02af85c822a8: 0\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_Equals_System_Guid_\">\r\n    \r\n            <a id=\"System_Guid_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether this instance and a specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> object represent the same value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (Guid g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>g</code> is equal to this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects are equal if they have identical byte values.  </p>\n<p> This method performs slightly better than the <a class=\"xref\" href=\"system.guid#System_Guid_Equals_\" data-linktype=\"relative-path\">Equals</a> method because it does not have to box the <code>g</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Guid_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether this instance is equal to a specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>o</code> is a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> that has the same value as this instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects are equal if they have identical byte values.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_GetHashCode\">\r\n    \r\n            <a id=\"System_Guid_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code for this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_NewGuid\">\r\n    \r\n            <a id=\"System_Guid_NewGuid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewGuid()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Guid NewGuid ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A new GUID object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is a convenient <code>static</code> method that you can call to get a new <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>. The method wraps a call to the Windows <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms688568.aspx\" data-linktype=\"external\">CoCreateGuid</a> function. The returned <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> is guaranteed to not equal <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">System.Guid</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates and displays the values of two <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"system.guid.newguid#1\">&#39; This code example demonstrates the Guid.NewGuid() method.\nImports System\n\nClass Sample\n    Public Shared Sub Main() \n        Dim g As Guid\n&#39; Create and display the value of two GUIDs.\n        g = Guid.NewGuid()\n        Console.WriteLine(g)\n        Console.WriteLine(Guid.NewGuid())\n    End Sub &#39;Main\nEnd Class &#39;Sample\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;0f8fad5b-d9cb-469f-a165-70867728950e\n&#39;7c9e6679-7425-40de-944b-e07fc1f90ae7\n&#39;\n</code></pre><pre><code class=\"lang-cs\" name=\"system.guid.newguid#1\">// This code example demonstrates the Guid.NewGuid() method.\n\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    Guid g;\n// Create and display the value of two GUIDs.\n    g = Guid.NewGuid();\n    Console.WriteLine(g);\n    Console.WriteLine(Guid.NewGuid());\n    }\n}\n\n/*\nThis code example produces the following results:\n\n0f8fad5b-d9cb-469f-a165-70867728950e\n7c9e6679-7425-40de-944b-e07fc1f90ae7\n\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_Parse_System_String_\">\r\n    \r\n            <a id=\"System_Guid_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Guid Parse (string input);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A structure that contains the value that was parsed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is not in a recognized format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Parse method trims any leading or trailing white space from <code>input</code> and converts the string representation of a GUID to a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value. This method can convert strings in any of the five formats produced by the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> and <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a> methods, as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Specifier</th>\n<th>Description</th>\n<th>Format</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>N</code></td>\n<td>32 digits</td>\n<td>00000000000000000000000000000000</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>32 digits separated by hyphens</td>\n<td>00000000-0000-0000-0000-000000000000</td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td>32 digits separated by hyphens, enclosed in braces</td>\n<td>{00000000-0000-0000-0000-000000000000}</td>\n</tr>\n<tr>\n<td><code>P</code></td>\n<td>32 digits separated by hyphens, enclosed in parentheses</td>\n<td>(00000000-0000-0000-0000-000000000000)</td>\n</tr>\n<tr>\n<td><code>X</code></td>\n<td>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces</td>\n<td>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</td>\n</tr>\n</tbody>\n</table>\n<p> The method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> if it is unable to successfully parse the string. Here are some of the reasons why this might occur include:  </p>\n<ul>\n<li><p><code>input</code> contains characters that are not part of the hexadecimal character set.  </p>\n</li>\n<li><p><code>input</code> has too many or too few numeric characters.  </p>\n</li>\n<li><p><code>input</code> has too many or too few of the non-numeric characters appropriate for a particular format.  </p>\n</li>\n<li><p><code>input</code> is not in one of the formats recognized by the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_\" data-linktype=\"relative-path\">ToString</a> method and listed in the previous table.  </p>\n<p>Use the <a class=\"xref\" href=\"system.guid#System_Guid_TryParse_\" data-linktype=\"relative-path\">TryParse</a> method to catch any unsuccessful parse operations without having to handle an exception.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new GUID, converts it to three separate string representations by calling the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;B&quot;, &quot;D&quot;, and &quot;X&quot; format specifiers, and then calls the Parse method to convert the strings back to <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.Parse#3\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Guid originalGuid = Guid.NewGuid();\n      // Create an array of string representations of the GUID.\n      string[] stringGuids = { originalGuid.ToString(&quot;B&quot;),\n                               originalGuid.ToString(&quot;D&quot;),\n                               originalGuid.ToString(&quot;X&quot;) };\n      \n      // Parse each string representation.\n      foreach (var stringGuid in stringGuids) {\n         try {     \n            Guid newGuid = Guid.Parse(stringGuid);\n            Console.WriteLine(&quot;Converted {0} to a Guid&quot;, stringGuid);\n         }   \n         catch (ArgumentNullException) {\n            Console.WriteLine(&quot;The string to be parsed is null.&quot;);   \n         }                                   \n         catch (FormatException) {\n            Console.WriteLine(&quot;Bad format: {0}&quot;, stringGuid);\n         }\n      }                                      \n   }\n}\n// The example displays the following output:\n//    Converted {81a130d2-502f-4cf1-a376-63edeb000e9f} to a Guid\n//    Converted 81a130d2-502f-4cf1-a376-63edeb000e9f to a Guid\n//    Converted {0x81a130d2,0x502f,0x4cf1,{0xa3,0x76,0x63,0xed,0xeb,0x00,0x0e,0x9f}} to a Guid\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.Parse#3\">Module Example\n   Public Sub Main()\n      Dim originalGuid As Guid = Guid.NewGuid()\n      &#39; Create an array of string representations of the GUID.\n      Dim stringGuids() As String = { originalGuid.ToString(&quot;B&quot;),\n                                      originalGuid.ToString(&quot;D&quot;),\n                                      originalGuid.ToString(&quot;X&quot;) }\n      \n      &#39; Parse each string representation.\n      For Each stringGuid In stringGuids\n         Try \n            Dim newGuid As Guid = Guid.Parse(stringGuid) \n            Console.WriteLine(&quot;Converted {0} to a Guid&quot;, stringGuid)\n         Catch e As ArgumentNullException\n            Console.WriteLine(&quot;The string to be parsed is null.&quot;)   \n         Catch e As FormatException\n            Console.WriteLine(&quot;Bad format: {0}&quot;, stringGuid)\n         End Try     \n      Next                                      \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Converted {81a130d2-502f-4cf1-a376-63edeb000e9f} to a Guid\n&#39;    Converted 81a130d2-502f-4cf1-a376-63edeb000e9f to a Guid\n&#39;    Converted {0x81a130d2,0x502f,0x4cf1,{0xa3,0x76,0x63,0xed,0xeb,0x00,0x0e,0x9f}} to a Guid\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_ParseExact_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Guid_ParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParseExact(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure, provided that the string is in the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Guid ParseExact (string input, string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The GUID to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the following specifiers that indicates the exact format to use when interpreting <code>input</code>: &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, or &quot;X&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A structure that contains the value that was parsed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> or <code>format</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is not in the format specified by <code>format</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ParseExact method requires the string to convert to be exactly in the format specified by the <code>format</code> parameter, after leading and trailing white-space characters are removed. The following table shows the accepted format specifiers for the <code>format</code> parameter. &quot;0&quot; represents a digit; hyphens (&quot;-&quot;), braces (&quot;{&quot;, &quot;}&quot;), and parentheses (&quot;(&quot;, &quot;)&quot;) appear as shown.  </p>\n<table>\n<thead>\n<tr>\n<th>Specifier</th>\n<th>Format of the <code>input</code> parameter</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>N</td>\n<td>32 digits:<br><br> 00000000000000000000000000000000</td>\n</tr>\n<tr>\n<td>D</td>\n<td>32 digits separated by hyphens:<br><br> 00000000-0000-0000-0000-000000000000</td>\n</tr>\n<tr>\n<td>B</td>\n<td>32 digits separated by hyphens, enclosed in braces:<br><br> {00000000-0000-0000-0000-000000000000}</td>\n</tr>\n<tr>\n<td>P</td>\n<td>32 digits separated by hyphens, enclosed in parentheses:<br><br> (00000000-0000-0000-0000-000000000000)</td>\n</tr>\n<tr>\n<td>X</td>\n<td>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br><br> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with each of the supported format specifiers to generate an array of strings that represent a single GUID. These are then passed to the ParseExact method, which successfully parses only the string that conforms to the &quot;B&quot; format specifier.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.Parse#4\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define an array of all format specifiers.\n      string[] formats = { &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, &quot;X&quot; };\n      Guid guid = Guid.NewGuid();\n      // Create an array of valid Guid string representations.\n      string[] stringGuids = new string[formats.Length];\n      for (int ctr = 0; ctr &lt; formats.Length; ctr++)\n         stringGuids[ctr] = guid.ToString(formats[ctr]);\n\n      // Parse the strings in the array using the &quot;B&quot; format specifier.\n      foreach (var stringGuid in stringGuids) {\n         try {\n            Guid newGuid = Guid.ParseExact(stringGuid, &quot;B&quot;);\n            Console.WriteLine(&quot;Successfully parsed {0}&quot;, stringGuid);\n         }   \n         catch (ArgumentNullException) { \n            Console.WriteLine(&quot;The string to be parsed is null.&quot;);\n         }   \n         catch (FormatException) {\n            Console.WriteLine(&quot;Bad Format: {0}&quot;, stringGuid);\n         }   \n      }     \n   }\n}\n// The example displays the following output:\n//    Bad Format: eb5c8c7d187a44e68afb81e854c39457\n//    Bad Format: eb5c8c7d-187a-44e6-8afb-81e854c39457\n//    Successfully parsed {eb5c8c7d-187a-44e6-8afb-81e854c39457}\n//    Bad Format: (eb5c8c7d-187a-44e6-8afb-81e854c39457)\n//    Bad Format: {0xeb5c8c7d,0x187a,0x44e6,{0x8a,0xfb,0x81,0xe8,0x54,0xc3,0x94,0x57}}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.Parse#4\">Module Example\n   Public Sub Main()\n      &#39; Define an array of all format specifiers.\n      Dim formats() As String = { &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, &quot;X&quot; }\n      Dim guid As Guid = Guid.NewGuid()\n      &#39; Create an array of valid Guid string representations.\n      Dim stringGuids(formats.Length - 1) As String\n      For ctr As Integer = 0 To formats.Length - 1\n         stringGuids(ctr) = guid.ToString(formats(ctr))\n      Next\n\n      &#39; Parse the strings in the array using the &quot;B&quot; format specifier.\n      For Each stringGuid In stringGuids\n         Try\n            Dim newGuid As Guid = Guid.ParseExact(stringGuid, &quot;B&quot;)\n            Console.WriteLine(&quot;Successfully parsed {0}&quot;, stringGuid)\n         Catch e As ArgumentNullException\n            Console.WriteLine(&quot;The string to be parsed is null.&quot;)\n         Catch e As FormatException\n            Console.WriteLine(&quot;Bad Format: {0}&quot;, stringGuid)\n         End Try   \n      Next      \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Bad Format: 3351d3f0006747089ff928b5179b2051\n&#39;    Bad Format: 3351d3f0-0067-4708-9ff9-28b5179b2051\n&#39;    Successfully parsed {3351d3f0-0067-4708-9ff9-28b5179b2051}\n&#39;    Bad Format: (3351d3f0-0067-4708-9ff9-28b5179b2051)\n&#39;    Bad Format: {0x3351d3f0,0x0067,0x4708,{0x9f,0xf9,0x28,0xb5,0x17,0x9b,0x20,0x51}}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_ToByteArray\">\r\n    \r\n            <a id=\"System_Guid_ToByteArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToByteArray()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a 16-element byte array that contains the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] ToByteArray ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A 16-element byte array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the byte array returned by this method to round-trip a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value by calling the [Guid(Byte&lt;xref:System.Guid.%23ctor%28System.Byte%5B%5D%29&gt; constructor.  </p>\n<p> Note that the order of bytes in the returned byte array is different from the string representation of a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value. The order of the beginning four-byte group and the next two two-byte groups is reversed, whereas the order of the last two-byte group and the closing six-byte group is the same. The example provides an illustration.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the <a class=\"xref\" href=\"system.guid#System_Guid_NewGuid_\" data-linktype=\"relative-path\">NewGuid</a> method to create a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value, and then calls the ToByteArray method to represent the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value as a byte array. It then displays both values to the console. Finally, it instantiates a new <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value from the byte array and calls its <a class=\"xref\" href=\"system.guid#System_Guid_Equals_System_Guid_\" data-linktype=\"relative-path\">Equals(Guid)</a> method to show that the two <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> values are identical.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Guid.ToByteArray#1\">Module Example\n   Public Sub Main()\n      Dim guid As Guid = Guid.NewGuid\n      Console.WriteLine(&quot;Guid: {0}&quot;, guid)\n      Dim bytes() As Byte = guid.ToByteArray\n      For Each byt In bytes\n         Console.Write(&quot;{0:X2} &quot;, byt)\n      Next\n      Console.WriteLine()\n      Dim guid2 As New Guid(bytes)\n      Console.WriteLine(&quot;Guid: {0} (Same as First Guid: {1})&quot;, guid2, guid2.Equals(guid))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Guid: 35918bc9-196d-40ea-9779-889d79b753f0\n&#39;    C9 8B 91 35 6D 19 EA 40 97 79 88 9D 79 B7 53 F0\n&#39;    Guid: 35918bc9-196d-40ea-9779-889d79b753f0 (Same as First Guid: True)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Guid.ToByteArray#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Guid guid = Guid.NewGuid();\n      Console.WriteLine(&quot;Guid: {0}&quot;, guid);\n      Byte[] bytes = guid.ToByteArray();\n      foreach (var byt in bytes)\n         Console.Write(&quot;{0:X2} &quot;, byt);\n\n      Console.WriteLine();\n      Guid guid2 = new Guid(bytes);\n      Console.WriteLine(&quot;Guid: {0} (Same as First Guid: {1})&quot;, guid2, guid2.Equals(guid));\n   }\n}\n// The example displays the following output:\n//    Guid: 35918bc9-196d-40ea-9779-889d79b753f0\n//    C9 8B 91 35 6D 19 EA 40 97 79 88 9D 79 B7 53 F0\n//    Guid: 35918bc9-196d-40ea-9779-889d79b753f0 (Same as First Guid: True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_ToString\">\r\n    \r\n            <a id=\"System_Guid_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of the value of this instance in registry format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>, formatted by using the &quot;D&quot; format specifier as follows:  </p>\n<p> <code>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code>  </p>\n<p> where the value of the GUID is represented as a series of lowercase hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is &quot;382c74c3-721d-4f34-80e5-57657b6cbc27&quot;. To convert the hexadecimal digits from a through f to uppercase, call the <span class=\"xref\">stem.String.ToUpper*</span> method on the returned string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides a default GUID format that is sufficient for typical use; however, other versions of this method that take a <code>format</code> parameter provide a few common format variations.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_ToString_System_String_\">\r\n    \r\n            <a id=\"System_Guid_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of the value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> instance, according to the provided format specifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A single format specifier that indicates how to format the value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>. The <code>format</code> parameter can be &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, or &quot;X&quot;. If <code>format</code> is <code>null</code> or an empty string (&quot;&quot;), &quot;D&quot; is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>, represented as a series of lowercase hexadecimal digits in the specified format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The value of <code>format</code> is not <code>null</code>, an empty string (&quot;&quot;), &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, or &quot;X&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the accepted format specifiers for the <code>format</code> parameter. &quot;0&quot; represents a digit; hyphens (&quot;-&quot;), braces (&quot;{&quot;, &quot;}&quot;), and parentheses (&quot;(&quot;, &quot;)&quot;) appear as shown.  </p>\n<table>\n<thead>\n<tr>\n<th>Specifier</th>\n<th>Format of return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>N</code></td>\n<td>32 digits:<br><br> 00000000000000000000000000000000</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>32 digits separated by hyphens:<br><br> 00000000-0000-0000-0000-000000000000</td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td>32 digits separated by hyphens, enclosed in braces:<br><br> {00000000-0000-0000-0000-000000000000}</td>\n</tr>\n<tr>\n<td><code>P</code></td>\n<td>32 digits separated by hyphens, enclosed in parentheses:<br><br> (00000000-0000-0000-0000-000000000000)</td>\n</tr>\n<tr>\n<td><code>X</code></td>\n<td>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br><br> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</td>\n</tr>\n</tbody>\n</table>\n<p> The hexadecimal digits a through f are lowercase in the returned string. To convert them to uppercase, call the <a class=\"xref\" href=\"system.string#System_String_ToUpper_\" data-linktype=\"relative-path\">ToUpper</a> method on the returned string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_ToString_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Guid_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of the value of this instance of the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> class, according to the provided format specifier and culture-specific format information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A single format specifier that indicates how to format the value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>. The <code>format</code> parameter can be &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, or &quot;X&quot;. If <code>format</code> is <code>null</code> or an empty string (&quot;&quot;), &quot;D&quot; is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>(Reserved) An object that supplies culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>, represented as a series of lowercase hexadecimal digits in the specified format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The value of <code>format</code> is not <code>null</code>, an empty string (&quot;&quot;), &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, or &quot;X&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>provider</code> parameter is reserved for future use and does not contribute to the execution of this method. You can pass <code>null</code> in the method call.  </p>\n<p> The following table shows the accepted format specifiers for the <code>format</code> parameter. &quot;0&quot; represents a digit; hyphens (&quot;-&quot;), braces (&quot;{&quot;, &quot;}&quot;), and parentheses (&quot;(&quot;, &quot;)&quot;) appear as shown.  </p>\n<table>\n<thead>\n<tr>\n<th>Specifier</th>\n<th>Format of return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>N</code></td>\n<td>32 digits:<br><br> 00000000000000000000000000000000</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>32 digits separated by hyphens:<br><br> 00000000-0000-0000-0000-000000000000</td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td>32 digits separated by hyphens, enclosed in braces:<br><br> {00000000-0000-0000-0000-000000000000}</td>\n</tr>\n<tr>\n<td><code>P</code></td>\n<td>32 digits separated by hyphens, enclosed in parentheses:<br><br> (00000000-0000-0000-0000-000000000000)</td>\n</tr>\n<tr>\n<td><code>X</code></td>\n<td>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br><br> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</td>\n</tr>\n</tbody>\n</table>\n<p> The hexadecimal digits a through f are lowercase in the returned string. To convert them to uppercase, call the <a class=\"xref\" href=\"system.string#System_String_ToUpper_\" data-linktype=\"relative-path\">ToUpper</a> method on the returned string.  </p>\n<p> Because the <code>provider</code> parameter is ignored, you cannot use it to provide a custom formatting solution. To represent a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> value as a string in a format that isn&#39;t supported by the standard GUID format strings, call the [String.Format(IFormatProvider, String, Object&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; method with a <code>provider</code> object that implements both the <a class=\"xref\" href=\"system.icustomformatter\" data-linktype=\"relative-path\">ICustomFormatter</a> and <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interfaces. For more information, see the &quot;Custom Formatting with ICustomFormatter&quot; section in the <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a> article.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_TryParse_System_String_System_Guid__\">\r\n    \r\n            <a id=\"System_Guid_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string input, out Guid result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The GUID to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The structure that will contain the parsed value. If the method returns <code>true</code>, <code>result</code> contains a valid <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>. If the method returns <code>false</code>, <code>result</code> equals <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the parse operation was successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is like the <a class=\"xref\" href=\"system.guid#System_Guid_Parse_\" data-linktype=\"relative-path\">Parse</a> method, except that instead of returning the parsed GUID, it returns <code>false</code> if <code>input</code> is <code>null</code> or not in a recognized format, and doesn&#39;t throw an exception. It trims any leading or trailing white space from <code>input</code> and converts strings in any of the five formats recognized by the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> and <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a>methods, as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Specifier</th>\n<th>Description</th>\n<th>Format</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>N</code></td>\n<td>32 digits</td>\n<td>00000000000000000000000000000000</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>32 digits separated by hyphens</td>\n<td>00000000-0000-0000-0000-000000000000</td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td>32 digits separated by hyphens, enclosed in braces</td>\n<td>{00000000-0000-0000-0000-000000000000}</td>\n</tr>\n<tr>\n<td><code>P</code></td>\n<td>32 digits separated by hyphens, enclosed in parentheses</td>\n<td>(00000000-0000-0000-0000-000000000000)</td>\n</tr>\n<tr>\n<td><code>X</code></td>\n<td>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces</td>\n<td>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new GUID, converts it to three separate string representations by calling the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;B&quot;, &quot;D&quot;, and &quot;X&quot; format specifiers, and then calls the TryParse method to convert the strings back to <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.Parse#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Guid originalGuid = Guid.NewGuid();\n      // Create an array of string representations of the GUID.\n      string[] stringGuids = { originalGuid.ToString(&quot;B&quot;),\n                               originalGuid.ToString(&quot;D&quot;),\n                               originalGuid.ToString(&quot;X&quot;) };\n      \n      // Parse each string representation.\n      Guid newGuid;\n      foreach (var stringGuid in stringGuids) {\n         if (Guid.TryParse(stringGuid, out newGuid))\n            Console.WriteLine(&quot;Converted {0} to a Guid&quot;, stringGuid);\n         else\n            Console.WriteLine(&quot;Unable to convert {0} to a Guid&quot;, \n                              stringGuid);\n      }                                      \n   }\n}\n// The example displays the following output:\n//    Converted {81a130d2-502f-4cf1-a376-63edeb000e9f} to a Guid\n//    Converted 81a130d2-502f-4cf1-a376-63edeb000e9f to a Guid\n//    Converted {0x81a130d2,0x502f,0x4cf1,{0xa3,0x76,0x63,0xed,0xeb,0x00,0x0e,0x9f}} to a Guid\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.Parse#2\">Module Example\n   Public Sub Main()\n      Dim originalGuid As Guid = Guid.NewGuid()\n      &#39; Create an array of string representations of the GUID.\n      Dim stringGuids() As String = { originalGuid.ToString(&quot;B&quot;),\n                                      originalGuid.ToString(&quot;D&quot;),\n                                      originalGuid.ToString(&quot;X&quot;) }\n      \n      &#39; Parse each string representation.\n      Dim newGuid As Guid\n      For Each stringGuid In stringGuids\n         If Guid.TryParse(stringGuid, newGuid) Then\n            Console.WriteLine(&quot;Converted {0} to a Guid&quot;, stringGuid)\n         Else\n            Console.WriteLine(&quot;Unable to convert {0} to a Guid&quot;, \n                              stringGuid)\n         End If     \n      Next                                      \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Converted {81a130d2-502f-4cf1-a376-63edeb000e9f} to a Guid\n&#39;    Converted 81a130d2-502f-4cf1-a376-63edeb000e9f to a Guid\n&#39;    Converted {0x81a130d2,0x502f,0x4cf1,{0xa3,0x76,0x63,0xed,0xeb,0x00,0x0e,0x9f}} to a Guid\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_TryParseExact_System_String_System_String_System_Guid__\">\r\n    \r\n            <a id=\"System_Guid_TryParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParseExact(String,String,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the string representation of a GUID to the equivalent <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure, provided that the string is in the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParseExact (string input, string format, out Guid result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The GUID to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the following specifiers that indicates the exact format to use when interpreting <code>input</code>: &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, or &quot;X&quot;.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The structure that will contain the parsed value. If the method returns <code>true</code>, <code>result</code> contains a valid <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>. If the method returns <code>false</code>, <code>result</code> equals <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the parse operation was successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method requires the string to convert to be exactly in the format specified by the <code>format</code> parameter, after leading and trailing white-space characters are removed. It returns <code>false</code> if <code>input</code> is <code>null</code> or is not in the format specified by <code>format</code>, and doesn&#39;t throw an exception.  </p>\n<p> The following table shows the accepted format specifiers for the <code>format</code> parameter. &quot;0&quot; represents a digit; hyphens (&quot;-&quot;), braces (&quot;{&quot;, &quot;}&quot;), and parentheses (&quot;(&quot;, &quot;)&quot;) appear as shown.  </p>\n<table>\n<thead>\n<tr>\n<th>Specifier</th>\n<th>Format of the <code>input</code> parameter</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>N</td>\n<td>32 digits:<br><br> 00000000000000000000000000000000</td>\n</tr>\n<tr>\n<td>D</td>\n<td>32 digits separated by hyphens:<br><br> 00000000-0000-0000-0000-000000000000</td>\n</tr>\n<tr>\n<td>B</td>\n<td>32 digits separated by hyphens, enclosed in braces:<br><br> {00000000-0000-0000-0000-000000000000}</td>\n</tr>\n<tr>\n<td>P</td>\n<td>32 digits separated by hyphens, enclosed in parentheses:<br><br> (00000000-0000-0000-0000-000000000000)</td>\n</tr>\n<tr>\n<td>X</td>\n<td>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br><br> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with each of the supported format specifiers to generate an array of strings that represent a single GUID. These are then passed to the TryParseExact method, which successfully parses the string that conforms to the &quot;B&quot; format specifier.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Guid.Parse#5\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Define an array of all format specifiers.\n      string[] formats = { &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, &quot;X&quot; };\n      Guid guid = Guid.NewGuid();\n      // Create an array of valid Guid string representations.\n      string[] stringGuids = new string[formats.Length];\n      for (int ctr = 0; ctr &lt; formats.Length; ctr++)\n         stringGuids[ctr] = guid.ToString(formats[ctr]);\n\n      // Parse the strings in the array using the &quot;B&quot; format specifier.\n      foreach (var stringGuid in stringGuids) {\n         Guid newGuid;\n         if (Guid.TryParseExact(stringGuid, &quot;B&quot;, out newGuid))\n            Console.WriteLine(&quot;Successfully parsed {0}&quot;, stringGuid);\n         else \n            Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;&quot;, stringGuid);\n      }     \n   }\n}\n// The example displays the following output:\n//    Unable to parse &#39;c0fb150f6bf344df984a3a0611ae5e4a&#39;\n//    Unable to parse &#39;c0fb150f-6bf3-44df-984a-3a0611ae5e4a&#39;\n//    Successfully parsed {c0fb150f-6bf3-44df-984a-3a0611ae5e4a}\n//    Unable to parse &#39;(c0fb150f-6bf3-44df-984a-3a0611ae5e4a)&#39;\n//    Unable to parse &#39;{0xc0fb150f,0x6bf3,0x44df,{0x98,0x4a,0x3a,0x06,0x11,0xae,0x5e,0x4a}}&#39;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Guid.Parse#5\">Module Example\n   Public Sub Main()\n      &#39; Define an array of all format specifiers.\n      Dim formats() As String = { &quot;N&quot;, &quot;D&quot;, &quot;B&quot;, &quot;P&quot;, &quot;X&quot; }\n      Dim guid As Guid = Guid.NewGuid()\n      &#39; Create an array of valid Guid string representations.\n      Dim stringGuids(formats.Length - 1) As String\n      For ctr As Integer = 0 To formats.Length - 1\n         stringGuids(ctr) = guid.ToString(formats(ctr))\n      Next\n\n      &#39; Try to parse the strings in the array using the &quot;B&quot; format specifier.\n      For Each stringGuid In stringGuids\n         Dim newGuid As Guid\n         If Guid.TryParseExact(stringGuid, &quot;B&quot;, newGuid) Then\n            Console.WriteLine(&quot;Successfully parsed {0}&quot;, stringGuid)\n         Else\n            Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;&quot;, stringGuid)\n         End If   \n      Next      \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unable to parse &#39;c0fb150f6bf344df984a3a0611ae5e4a&#39;\n&#39;    Unable to parse &#39;c0fb150f-6bf3-44df-984a-3a0611ae5e4a&#39;\n&#39;    Successfully parsed {c0fb150f-6bf3-44df-984a-3a0611ae5e4a}\n&#39;    Unable to parse &#39;(c0fb150f-6bf3-44df-984a-3a0611ae5e4a)&#39;\n&#39;    Unable to parse &#39;{0xc0fb150f,0x6bf3,0x44df,{0x98,0x4a,0x3a,0x06,0x11,0xae,0x5e,0x4a}}&#39;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_op_Equality_System_Guid_System_Guid_\">\r\n    \r\n            <a id=\"System_Guid_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(Guid,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the values of two specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (Guid a, Guid b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>a</code> and <code>b</code> are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Equality operator to compare two GUID values with <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">System.Guid</a> to determine whether they consist exclusively of zeros.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Guid.Empty#1\">Module Example\n   Public Sub Main()\n      &#39; Create a GUID and determine whether it consists of all zeros.\n      Dim guid1 As Guid = Guid.NewGuid\n      Console.WriteLine(guid1)\n      Console.WriteLine(&quot;Empty: {0}&quot;, guid1 = Guid.Empty)\n      Console.WriteLine()\n      \n      &#39; Create a GUID with all zeros and compare it to Empty.\n      Dim bytes(15) As Byte\n      Dim guid2 As New Guid(bytes)\n      Console.WriteLine(guid2)\n      Console.WriteLine(&quot;Empty: {0}&quot;, guid2 = Guid.Empty)\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       11c43ee8-b9d3-4e51-b73f-bd9dda66e29c\n&#39;       Empty: False\n&#39;       \n&#39;       00000000-0000-0000-0000-000000000000\n&#39;       Empty: True\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Guid.Empty#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      // Create a GUID and determine whether it consists of all zeros.\n      Guid guid1 = Guid.NewGuid();\n      Console.WriteLine(guid1);\n      Console.WriteLine(&quot;Empty: {0}<br>&quot;, guid1 == Guid.Empty);\n      \n      // Create a GUID with all zeros and compare it to Empty.\n      Byte[] bytes = new Byte[16];\n      Guid guid2 = new Guid(bytes);\n      Console.WriteLine(guid2);\n      Console.WriteLine(&quot;Empty: {0}&quot;, guid2 == Guid.Empty);\n   }\n}\n// The example displays output like the following:\n//       11c43ee8-b9d3-4e51-b73f-bd9dda66e29c\n//       Empty: False\n//       \n//       00000000-0000-0000-0000-000000000000\n//       Empty: True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Guid_op_Inequality_System_Guid_System_Guid_\">\r\n    \r\n            <a id=\"System_Guid_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(Guid,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the values of two specified <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> objects are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (Guid a, Guid b);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>a</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>b</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>a</code> and <code>b</code> are not equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Guid.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Guid.yml\">\r\n<meta name=\"APIName\" content=\"System.Guid\">\r\n<meta name=\"APIName\" content=\"System.Guid..ctor\">\r\n<meta name=\"APIName\" content=\"System.Guid.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.Guid.Empty\">\r\n<meta name=\"APIName\" content=\"System.Guid.Equals\">\r\n<meta name=\"APIName\" content=\"System.Guid.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Guid.NewGuid\">\r\n<meta name=\"APIName\" content=\"System.Guid.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Guid.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Guid.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Guid.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Guid.Parse\">\r\n<meta name=\"APIName\" content=\"System.Guid.ParseExact\">\r\n<meta name=\"APIName\" content=\"System.Guid.ToByteArray\">\r\n<meta name=\"APIName\" content=\"System.Guid.ToString\">\r\n<meta name=\"APIName\" content=\"System.Guid.TryParse\">\r\n<meta name=\"APIName\" content=\"System.Guid.TryParseExact\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"95d44da4-0657-6a59-74d5-5336f7c2b7e0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a globally unique identifier (GUID).  \n To browse the .NET Framework source code for this type, see the Reference Source.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Guid\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Guid.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Guid.yml","open_to_public_contributors":true,"api_name":["System.Guid","System.Guid..ctor","System.Guid.CompareTo","System.Guid.Empty","System.Guid.Equals","System.Guid.GetHashCode","System.Guid.NewGuid","System.Guid.op_Equality","System.Guid.op_op_Equality","System.Guid.op_Inequality","System.Guid.op_op_Inequality","System.Guid.Parse","System.Guid.ParseExact","System.Guid.ToByteArray","System.Guid.ToString","System.Guid.TryParse","System.Guid.TryParseExact"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Guid","System::Guid","System.Guid.#ctor","System::Guid::#ctor","System.Guid.CompareTo","System::Guid::CompareTo","System.Guid.Empty","System::Guid::Empty","System.Guid.Equals","System::Guid::Equals","System.Guid.GetHashCode","System::Guid::GetHashCode","System.Guid.NewGuid","System::Guid::NewGuid","System.Guid.op_Equality","System::Guid::op_Equality","System.Guid.op_Inequality","System::Guid::op_Inequality","System.Guid.Parse","System::Guid::Parse","System.Guid.ParseExact","System::Guid::ParseExact","System.Guid.ToByteArray","System::Guid::ToByteArray","System.Guid.ToString","System::Guid::ToString","System.Guid.TryParse","System::Guid::TryParse","System.Guid.TryParseExact","System::Guid::TryParseExact"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"95d44da4-0657-6a59-74d5-5336f7c2b7e0","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/Guid.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Guid struct | Microsoft Docs","_op_ogTitle":"Guid struct","description":"Represents a globally unique identifier (GUID).  \n To browse the .NET Framework source code for this type, see the Reference Source.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Guid","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.guid","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.guid","fileRelativePath":"System.Guid.html"},"themesRelativePathToOutputRoot":"_themes/"}