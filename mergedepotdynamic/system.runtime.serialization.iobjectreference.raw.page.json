{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_IObjectReference\">\r\n      <span class=\"lang-csharp\">IObjectReference</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Indicates that the current interface implementer is a reference to another object.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IObjectReference</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IObjectReference_GetRealObject_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetRealObject(StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IObjectReference_GetRealObject_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IObjectReference_GetRealObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRealObject(StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetRealObject (System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> from which the current object is deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the actual object that is put into the graph.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission. The call will not work on a medium trusted server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object. When the proxy-creator object is deserialized, deserialization calls its GetRealObject method. At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer. Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.  </p>\n<p> For example, consider how <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects are serialized. Instead of transmitting the data from the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <a class=\"xref\" href=\"system.runtime.serialization.iobjectreference\" data-linktype=\"relative-path\">IObjectReference</a>. When both the type name and assembly name are available, the deserialization infrastructure calls GetRealObject on the holder object that has been transmitted. This holder returns the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object that is inserted into the graph.  </p>\n<p> This method is protected by a <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityAction</a> for the <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> with the <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> specified.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"IObjectReference Interface Example#1\">using System;\nusing System.Web;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\nusing System.Security.Permissions;\n\n\n// There should be only one instance of this type per AppDomain.\n[Serializable]\n[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n[AspNetHostingPermission(SecurityAction.LinkDemand, \n    Level=AspNetHostingPermissionLevel.Minimal)]\npublic sealed class Singleton : ISerializable \n{\n    // This is the one instance of this type.\n    private static readonly Singleton theOneObject = new Singleton();\n\n    // Here are the instance fields.\n    private string someString_value;\n    private Int32 someNumber_value;\n\n   public string SomeString\n   {\n       get{return someString_value;}\n       set{someString_value = value;}\n   }\n\n   public Int32 SomeNumber\n   {\n       get{return someNumber_value;}\n       set{someNumber_value = value;}\n   }\n\n    // Private constructor allowing this type to construct the Singleton.\n    private Singleton() \n    { \n        // Do whatever is necessary to initialize the Singleton.\n        someString_value = &quot;This is a string field&quot;;\n        someNumber_value = 123;\n    }\n\n    // A method returning a reference to the Singleton.\n    public static Singleton GetSingleton() \n    { \n        return theOneObject; \n    }\n\n    // A method called when serializing a Singleton.\n   [SecurityPermissionAttribute(SecurityAction.LinkDemand, \n   Flags=SecurityPermissionFlag.SerializationFormatter)]\n    void ISerializable.GetObjectData(\n        SerializationInfo info, StreamingContext context) \n    {\n        // Instead of serializing this object, \n        // serialize a SingletonSerializationHelp instead.\n        info.SetType(typeof(SingletonSerializationHelper));\n        // No other values need to be added.\n    }\n\n    // Note: ISerializable&#39;s special constructor is not necessary \n    // because it is never called.\n}\n\n\n[Serializable]\n[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n[SecurityPermissionAttribute(SecurityAction.LinkDemand, \n    Flags=SecurityPermissionFlag.SerializationFormatter)]\n[AspNetHostingPermission(SecurityAction.LinkDemand, \n   Level=AspNetHostingPermissionLevel.Minimal)]\ninternal sealed class SingletonSerializationHelper : IObjectReference \n{\n    // This object has no fields (although it could).\n\n    // GetRealObject is called after this object is deserialized.\n    public Object GetRealObject(StreamingContext context) \n    {\n        // When deserialiing this object, return a reference to \n        // the Singleton object instead.\n        return Singleton.GetSingleton();\n    }\n}\n\n\nclass App \n{\n    [STAThread]\n    static void Main() \n    {\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        try \n        {\n            // Construct a BinaryFormatter and use it \n            // to serialize the data to the stream.\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Create an array with multiple elements refering to \n            // the one Singleton object.\n            Singleton[] a1 = { Singleton.GetSingleton(), Singleton.GetSingleton() };\n\n            // This displays &quot;True&quot;.\n            Console.WriteLine(\n                &quot;Do both array elements refer to the same object? &quot; + \n                (a1[0] == a1[1]));     \n\n            // Serialize the array elements.\n            formatter.Serialize(fs, a1);\n\n            // Deserialize the array elements.\n            fs.Position = 0;\n            Singleton[] a2 = (Singleton[]) formatter.Deserialize(fs);\n\n            // This displays &quot;True&quot;.\n            Console.WriteLine(&quot;Do both array elements refer to the same object? &quot; \n                + (a2[0] == a2[1])); \n\n            // This displays &quot;True&quot;.\n            Console.WriteLine(&quot;Do all array elements refer to the same object? &quot; \n                + (a1[0] == a2[0]));\n        }   \n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IObjectReference Interface Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\n\nref class SingletonSerializationHelper;\n\n// There should be only one instance of this type per AppDomain.\n\n[Serializable]\npublic ref class Singleton sealed: public ISerializable\n{\nprivate:\n\n   // This is the one instance of this type.\n   static Singleton^ theOneObject = gcnew Singleton;\n\npublic:\n\n   // Here are the instance fields.\n   String^ someString;\n   Int32 someNumber;\n\nprivate:\n\n   // Private constructor allowing this type to construct the singleton.\n   Singleton()\n   {\n      // Do whatever is necessary to initialize the singleton.\n      someString = &quot;This is a String* field&quot;;\n      someNumber = 123;\n   }\n\npublic:\n\n   // A method returning a reference to the singleton.\n   static Singleton^ GetSingleton()\n   {\n      return theOneObject;\n   }\n\n   // A method called when serializing a Singleton.\n   [System::Security::Permissions::SecurityPermissionAttribute\n   (System::Security::Permissions::SecurityAction::LinkDemand, \n   Flags=System::Security::Permissions::SecurityPermissionFlag::SerializationFormatter)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context )\n   {\n      // Instead of serializing this Object*, we will  \n      // serialize a SingletonSerializationHelp instead.\n      info-&gt;SetType( SingletonSerializationHelper::typeid );\n      \n      // No other values need to be added.\n   }\n\n   // NOTE: ISerializable*&#39;s special constructor is NOT necessary \n   // because it&#39;s never called\n};\n\n[Serializable]\nprivate ref class SingletonSerializationHelper sealed: public IObjectReference\n{\npublic:\n\n   // This Object* has no fields (although it could).\n   // GetRealObject is called after this Object* is deserialized\n   virtual Object^ GetRealObject( StreamingContext context )\n   {\n      // When deserialiing this Object*, return a reference to \n      // the singleton Object* instead.\n      return Singleton::GetSingleton();\n   }\n};\n\n[STAThread]\nint main()\n{\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n   try\n   {\n      // Construct a BinaryFormatter and use it \n      // to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n      // Create an array with multiple elements refering to \n      // the one Singleton Object*.\n      array&lt;Singleton^&gt;^a1 = {Singleton::GetSingleton(),Singleton::GetSingleton()};\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a1[ 1 ]) );\n\n      // Serialize the array elements.\n      formatter-&gt;Serialize( fs, a1 );\n\n      // Deserialize the array elements.\n      fs-&gt;Position = 0;\n      array&lt;Singleton^&gt;^a2 = (array&lt;Singleton^&gt;^)formatter-&gt;Deserialize( fs );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a2[ 0 ] == a2[ 1 ]) );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do all  array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a2[ 0 ]) );\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IObjectReference Interface Example#1\">Imports System\nImports System.Web\nImports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\nImports System.Security.Permissions\n\n\n&#39; There should be only one instance of this type per AppDomain.\n&lt;Serializable()&gt; _\n&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic NotInheritable Class Singleton\n   Implements ISerializable\n\n   &#39; This is the one instance of this type.\n   Private Shared ReadOnly theOneObject As New Singleton\n\n   &#39; Here are the instance fields.\n   Private someString As String\n   private someNumber As Int32\n\n   &#39; Private constructor allowing this type to construct the Singleton.\n   Private Sub New()\n      &#39; Do whatever is necessary to initialize the Singleton.\n      someString = &quot;This is a string field&quot;\n      someNumber = 123\n   End Sub\n\n   &#39; A method returning a reference to the Singleton.\n   Public Shared Function GetSingleton() As Singleton\n      Return theOneObject\n   End Function\n\n   &#39; A method called when serializing a Singleton.\n   &lt;SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags:=SecurityPermissionFlag.SerializationFormatter)&gt; _\n   Private Sub GetObjectData(ByVal info As SerializationInfo, _\n      ByVal context As StreamingContext) _\n      Implements ISerializable.GetObjectData\n\n      &#39; Instead of serializing this object, we will  \n      &#39; serialize a SingletonSerializationHelp instead.\n      info.SetType(GetType(SingletonSerializationHelper))\n      &#39; No other values need to be added.\n   End Sub\n\n   &#39; Note: ISerializable&#39;s special constructor is not necessary \n   &#39; because it is never called.\nEnd Class\n\n\n&lt;Serializable()&gt; _\n&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nFriend NotInheritable Class SingletonSerializationHelper\n   Implements IObjectReference\n   &#39; This object has no fields (although it could).\n\n   &#39; GetRealObject is called after this object is deserialized.\n   &lt;SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags:=SecurityPermissionFlag.SerializationFormatter)&gt; _\n   Public Function GetRealObject(ByVal context As StreamingContext) As Object Implements IObjectReference.GetRealObject\n      &#39; When deserialiing this object, return a reference to \n      &#39; the Singleton object instead.\n      Return Singleton.GetSingleton()\n   End Function\nEnd Class\n\n\nClass App\n   &lt;STAThread()&gt; Shared Sub Main()\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n      Try\n         &#39; Construct a BinaryFormatter and use it \n         &#39; to serialize the data to the stream.\n         Dim formatter As New BinaryFormatter\n\n         &#39; Create an array with multiple elements refering to \n         &#39; the one Singleton object.\n         Dim a1() As Singleton = {Singleton.GetSingleton(), Singleton.GetSingleton()}\n\n         &#39; This displays &quot;True&quot;.\n         Console.WriteLine(&quot;Do both array elements refer to the same object? &quot; &amp; _\n            Object.ReferenceEquals(a1(0), a1(1)))\n\n         &#39; Serialize the array elements.\n         formatter.Serialize(fs, a1)\n\n         &#39; Deserialize the array elements.\n         fs.Position = 0\n         Dim a2() As Singleton = DirectCast(formatter.Deserialize(fs), Singleton())\n\n         &#39; This displays &quot;True&quot;.\n         Console.WriteLine(&quot;Do both array elements refer to the same object? &quot; &amp; _\n            Object.ReferenceEquals(a2(0), a2(1)))\n\n         &#39; This displays &quot;True&quot;.\n         Console.WriteLine(&quot;Do all array elements refer to the same object? &quot; &amp; _\n            Object.ReferenceEquals(a1(0), a2(0)))\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to serialize. Reason: &quot; &amp; e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.IObjectReference.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.IObjectReference.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IObjectReference\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IObjectReference.GetRealObject\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"266c3d16-c4f4-a47e-142e-f9e78df3cff9\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Serialization\\IObjectReference.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that the current interface implementer is a reference to another object.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.IObjectReference\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.IObjectReference.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.IObjectReference.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.IObjectReference","System.Runtime.Serialization.IObjectReference.GetRealObject"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.IObjectReference","System::Runtime::Serialization::IObjectReference","System.Runtime.Serialization.IObjectReference.GetRealObject","System::Runtime::Serialization::IObjectReference::GetRealObject"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"266c3d16-c4f4-a47e-142e-f9e78df3cff9","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Serialization\\IObjectReference.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/IObjectReference.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IObjectReference interface | Microsoft Docs","_op_ogTitle":"IObjectReference interface","description":"Indicates that the current interface implementer is a reference to another object.\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.IObjectReference","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.iobjectreference","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.iobjectreference","fileRelativePath":"System.Runtime.Serialization.IObjectReference.html"},"themesRelativePathToOutputRoot":"_themes/"}