{"content":"    \r\n    <h1 id=\"System_Net_WebException\">\r\n      <span class=\"lang-csharp\">WebException</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class WebException : InvalidOperationException</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">System.InvalidOperationException</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WebException</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The WebException class is thrown by classes descended from <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> and <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> that implement pluggable protocols for accessing the Internet.  </p>\n<p> When WebException is thrown by a descendant of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class, the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> property provides the Internet response to the application.  </p>\n<p> <strong>Associated Tips</strong>  </p>\n<p> <strong>Check the Response property of the exception to determine why the request failed.</strong><br> When a WebException exception is thrown by a descendent of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class, the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> property provides the Internet response to the application.  </p>\n<p> <strong>Check the Status property of the exception to determine why the request failed.</strong><br> The <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property of the exception provides status information for the error. For more information, see <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.  </p>\n<p> <strong>If you are timing out when stepping into an XML Web Service, set the timeout value for the XML Web Service call to infinite.</strong><br> For more information, see <a href=\"../Topic/Error:%20Timeout%20While%20Debugging%20Web%20Services.md\" data-linktype=\"relative-path\">Error: Timeout While Debugging Web Services</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException__ctor\" data-linktype=\"self-bookmark\">WebException()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException__ctor_System_String_\" data-linktype=\"self-bookmark\">WebException(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">WebException(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class from the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException__ctor_System_String_System_Exception_\" data-linktype=\"self-bookmark\">WebException(String,Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message and nested exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException__ctor_System_String_System_Net_WebExceptionStatus_\" data-linktype=\"self-bookmark\">WebException(String,WebExceptionStatus)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message and status.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException__ctor_System_String_System_Exception_System_Net_WebExceptionStatus_System_Net_WebResponse_\" data-linktype=\"self-bookmark\">WebException(String,Exception,WebExceptionStatus,WebResponse)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message, nested exception, status, and response.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException_Response\" data-linktype=\"self-bookmark\">Response</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the response that the remote host returned.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException_Status\" data-linktype=\"self-bookmark\">Status</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the status of the response.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance with the data needed to serialize the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebException_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes this instance into the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException__ctor\">\r\n    \r\n            <a id=\"System_Net_WebException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebException()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebException ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default constructor initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class. The <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property is initialized to a system-supplied message that describes the error. This message takes into account the current system culture. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> and <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> properties are initialized to <code>null</code>. The <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property is initialized to <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example throws a default <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WebException_Constructor1#1\">\n\t      try   \n\t      {\n\t\t      // A &#39;Socket&#39; object has been created.\n\t\t      Socket httpSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n\n\t\t      // The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n\t\t      \n\t\t      IPHostEntry hostEntry = Dns.Resolve(&quot;http://www.contoso.com&quot;);\n\n\t\t      IPAddress serverAddress = hostEntry.AddressList[0];\n\t\t      IPEndPoint endPoint = new IPEndPoint(serverAddress, 80);\n\t\t      httpSocket.Connect(endPoint);\n\t\t      Console.WriteLine(&quot;Connection created successfully&quot;);\n\t\t      httpSocket.Close();\n\t\t   }\n         catch(SocketException e)\n\t\t   {\n   \t\t   String exp = e.Message;\t\n\t   \t   // Throw the WebException with no parameters.\n\t\t      throw new WebException();\n\t\t   }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Constructor1#1\">        Try\n            &#39; A &#39;Socket&#39; object has been created.\n            Dim httpSocket As New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)\n            \n            &#39; The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n\t         &#39; which leads to the &#39;SocketException&#39; exception. \n            \n            Dim hostEntry As IPHostEntry = Dns.Resolve(&quot;http://www.contoso.com&quot;)\n            \n            Dim serverAddress As IPAddress = hostEntry.AddressList(0)\n            Dim endPoint As New IPEndPoint(serverAddress, 80)\n            httpSocket.Connect(endPoint)\n            Console.WriteLine(&quot;Connection created successfully&quot;)\n            httpSocket.Close()\n        Catch e As SocketException\n            Dim exp As [String] = e.Message\n            &#39; Throw the WebException with no parameters.\n            Throw New WebException()\n        End Try\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebException_Constructor1#1\">      try\n      {\n         // A &#39;Socket&#39; object has been created.\n         Socket^ httpSocket = gcnew Socket( AddressFamily::InterNetwork,SocketType::Stream,ProtocolType::Tcp );\n         \n\n         // The IPaddress of the unknown uri is resolved using the &#39;Dns::Resolve&#39; method.\n\n         IPHostEntry^ hostEntry = Dns::Resolve( &quot;http://www.contoso.com&quot; );\n\n         IPAddress^ serverAddress = hostEntry-&gt;AddressList[ 0 ];\n         IPEndPoint^ endPoint = gcnew IPEndPoint( serverAddress, 80 );\n         httpSocket-&gt;Connect( endPoint );\n         Console::WriteLine( &quot;Connection created successfully&quot; );\n         httpSocket-&gt;Close();\n      }\n      catch ( SocketException^ e ) \n      {\n         String^ exp = e-&gt;Message;\n         // Throw the WebException with no parameters.\n         throw gcnew WebException;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebException(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebException (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text of the error message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> instance is initialized with the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property set to the value of <code>message</code>. If <code>message</code> is <code>null</code>, the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property is initialized to a system-supplied message. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> and <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> properties are initialized to <code>null</code>. The <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property is initialized to <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example throws a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> by specifying an error message.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebException_Constructor2#1\">      try\n      {\n         // A &#39;Socket&#39; object has been created.\n         Socket^ httpSocket = gcnew Socket( AddressFamily::InterNetwork, SocketType::Stream, ProtocolType::Tcp );\n         \n         // The IPaddress of the unknown uri is resolved using the &#39;Dns::Resolve&#39; method.\n         IPHostEntry^ hostEntry = Dns::Resolve( connectUri );\n\n         IPAddress^ serverAddress = hostEntry-&gt;AddressList[ 0 ];\n         IPEndPoint^ endPoint = gcnew IPEndPoint( serverAddress, 80 );\n         httpSocket-&gt;Connect( endPoint );\n         Console::WriteLine( &quot;Connection created successfully&quot; );\n         httpSocket-&gt;Close();\n      }\n      catch ( SocketException^ e ) \n      {\n         Console::WriteLine( &quot;<br>Exception thrown.<br>The Original Message is: {0}&quot;, e-&gt;Message );\n         \n         // Throw the &#39;WebException&#39; object with a message string specific to the situation.\n         throw gcnew WebException( &quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot; );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Constructor2#1\">\n        Try\n            &#39; A &#39;Socket&#39; object has been created.\n            Dim httpSocket As New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)\n            \n            &#39; The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n \t         \n            Dim hostEntry As IPHostEntry = Dns.Resolve(connectUri)\n            \n            Dim serverAddress As IPAddress = hostEntry.AddressList(0)\n            Dim endPoint As New IPEndPoint(serverAddress, 80)\n            httpSocket.Connect(endPoint)\n            Console.WriteLine(&quot;Connection created successfully&quot;)\n            httpSocket.Close()\n        Catch e As SocketException\n            Console.WriteLine((ControlChars.Cr + &quot;Exception thrown.&quot; + ControlChars.Cr + &quot;The Original Message is: &quot; + e.Message))\n            &#39; Throw the &#39;WebException&#39; object with a message string specific to the situation.\n            Throw New WebException(&quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;)\n        End Try\n</code></pre><pre><code class=\"lang-cs\" name=\"WebException_Constructor2#1\">\t      try\n         {\n\t\t      // A &#39;Socket&#39; object has been created.\n\t\t      Socket httpSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n\n\t\t      // The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n\t\t      IPHostEntry hostEntry = Dns.Resolve(connectUri);\n\n\t\t      IPAddress serverAddress = hostEntry.AddressList[0];\n\t\t      IPEndPoint endPoint = new IPEndPoint(serverAddress, 80);\n \t\t      httpSocket.Connect(endPoint);\n\t\t      Console.WriteLine(&quot;Connection created successfully&quot;);\n\t\t      httpSocket.Close();\n\t\t   }\n         catch(SocketException e)\n\t\t   {\t\t     \n\t\t      Console.WriteLine(&quot;<br>Exception thrown.<br>The Original Message is: &quot;+e.Message);\n\t\t      // Throw the &#39;WebException&#39; object with a message string specific to the situation.\n\t\t      throw new WebException(&quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;);\n\t\t   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_WebException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebException(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class from the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WebException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that contains the information required to serialize the new <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that contains the source of the serialized stream that is associated with the new <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface for the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException__ctor_System_String_System_Exception_\">\r\n    \r\n            <a id=\"System_Net_WebException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebException(String,Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message and nested exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebException (string message, Exception innerException);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text of the error message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A nested exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> instance is initialized with the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property set to the value of <code>message</code> and the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property set to the value of <code>innerException</code>. If <code>message</code> is <code>null</code>, the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property is initialized to a system-supplied message. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> and <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> properties are initialized to <code>null</code>. The <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property is initialized to <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example throws a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> by specifying an error message and nested exception.  </p>\n<pre><code class=\"lang-cs\" name=\"WebException_Constructor4#1\">\n\t      try\n\t      {\n\t\t         // A &#39;Socket&#39; object has been created.\n\t\t         Socket httpSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n\n\t\t         // The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n      \t\t  \n\t\t         IPHostEntry hostEntry = Dns.Resolve(connectUri);\n\n\t\t         IPAddress serverAddress = hostEntry.AddressList[0];\n\t\t         IPEndPoint endPoint = new IPEndPoint(serverAddress, 80);\n \t\t         httpSocket.Connect(endPoint);\n\t\t         Console.WriteLine(&quot;Connection created successfully&quot;);\n\t\t         httpSocket.Close();\t\t \n\t\t   }\n         catch(SocketException e)\n   \t   { \n   \t\t      Console.WriteLine(&quot;<br>Exception thrown.<br>The Original Message is: &quot;+e.Message);\n\t   \t      //  Throw the &#39;WebException&#39; object with a message string specific to the situation; \n\t\t         //  and the &#39;InnerException&#39; which actually lead to this exception.\n\t\t         throw new WebException(&quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;,e);\n\t\t   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebException_Constructor4#1\">      try\n      {\n         // A &#39;Socket&#39; object has been created.\n         Socket^ httpSocket = gcnew Socket( AddressFamily::InterNetwork, SocketType::Stream, ProtocolType::Tcp );\n         \n         // The IPaddress of the unknown uri is resolved using the &#39;Dns::Resolve&#39; method.\n\n         IPHostEntry^ hostEntry = Dns::Resolve( connectUri );\n\n         IPAddress^ serverAddress = hostEntry-&gt;AddressList[ 0 ];\n         IPEndPoint^ endPoint = gcnew IPEndPoint( serverAddress, 80 );\n         httpSocket-&gt;Connect( endPoint );\n         Console::WriteLine( &quot;Connection created successfully&quot; );\n         httpSocket-&gt;Close();\n      }\n      catch ( SocketException^ e ) \n      {\n         Console::WriteLine( &quot;<br>Exception thrown.<br>The Original Message is: {0}&quot;, e-&gt;Message );\n         //  Throw the &#39;WebException&#39; object with a message string specific to the situation;\n         //  and the &#39;InnerException&#39; that actually led to this exception.\n         throw gcnew WebException( &quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;, e );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Constructor4#1\">\n        Try\n            &#39; A &#39;Socket&#39; object has been created.\n            Dim httpSocket As New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)\n            \n            &#39; The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n\t         Dim hostEntry As IPHostEntry = Dns.Resolve(connectUri)\n            \n            Dim serverAddress As IPAddress = hostEntry.AddressList(0)\n            Dim endPoint As New IPEndPoint(serverAddress, 80)\n            httpSocket.Connect(endPoint)\n            Console.WriteLine(&quot;Connection created successfully&quot;)\n            httpSocket.Close()\n        Catch e As SocketException\n            Console.WriteLine((ControlChars.Cr + &quot;Exception thrown.&quot; + ControlChars.Cr + &quot;The Original Message is: &quot; + e.Message))\n            &#39; Throw the &#39;WebException&#39; object with a message string specific to the situation. \n\t         &#39; and the &#39;InnerException&#39; which actually lead to this exception.\n            Throw New WebException(&quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;, e)\n        End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException__ctor_System_String_System_Net_WebExceptionStatus_\">\r\n    \r\n            <a id=\"System_Net_WebException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebException(String,WebExceptionStatus)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message and status.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebException (string message, System.Net.WebExceptionStatus status);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text of the error message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>status</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> instance is initialized with the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property set to the value of <code>message</code> and the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to the value of <code>status</code>. If <code>message</code> is <code>null</code>, the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property is initialized to a system-supplied message. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> and <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> properties are initialized to <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example throws a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> by specifying an error message and a <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebException_Constructor3#1\">      try\n      {\n         // A &#39;Socket&#39; object has been created.\n         Socket^ httpSocket = gcnew Socket( AddressFamily::InterNetwork, SocketType::Stream, ProtocolType::Tcp );\n         \n         // The IPaddress of the unknown uri is resolved using the &#39;Dns::Resolve&#39; method.\n\n         IPHostEntry^ hostEntry = Dns::Resolve( &quot;http://www.contoso.com&quot; );\n\n         IPAddress^ serverAddress = hostEntry-&gt;AddressList[ 0 ];\n         IPEndPoint^ endPoint = gcnew IPEndPoint( serverAddress, 80 );\n         httpSocket-&gt;Connect( endPoint );\n         Console::WriteLine( &quot;Connection created successfully&quot; );\n         httpSocket-&gt;Close();\n      }\n      catch ( SocketException^ e ) \n      {\n         Console::WriteLine( &quot;<br>Exception thrown.<br>The Original Message is: {0}&quot;, e-&gt;Message );\n         // Throw the &#39;WebException&#39; object with a message string and message status specific to the situation.\n         throw gcnew WebException( &quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;, WebExceptionStatus::NameResolutionFailure );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"WebException_Constructor3#1\">\n\t     try\n        {\n\t\t       // A &#39;Socket&#39; object has been created.\n\t\t       Socket httpSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n\n\t\t      // The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n\t\t  \n\t\t      IPHostEntry hostEntry = Dns.Resolve(&quot;http://www.contoso.com&quot;);\n\n\t\t      IPAddress serverAddress = hostEntry.AddressList[0];\n\t\t      IPEndPoint endPoint = new IPEndPoint(serverAddress, 80);\n \t\t      httpSocket.Connect(endPoint);\n\t\t      Console.WriteLine(&quot;Connection created successfully&quot;);\n\t\t      httpSocket.Close();\n\n\t\t   }\n        catch(SocketException e)\n\t\t  {\n\t\t      Console.WriteLine(&quot;<br>Exception thrown.<br>The Original Message is: &quot;+e.Message);\n\t\t      // Throw the &#39;WebException&#39; object with a message string and message status specific to the situation.\n\t\t      throw new WebException(&quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;,WebExceptionStatus.NameResolutionFailure);\n\t\t  }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Constructor3#1\">\n        Try\n            &#39; A &#39;Socket&#39; object has been created.\n            Dim httpSocket As New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)\n            \n            &#39; The IPaddress of the unknown uri is resolved using the &#39;Dns.Resolve&#39; method. \n\t         \n            Dim hostEntry As IPHostEntry = Dns.Resolve(connectUri)\n            \n            Dim serverAddress As IPAddress = hostEntry.AddressList(0)\n            Dim endPoint As New IPEndPoint(serverAddress, 80)\n            httpSocket.Connect(endPoint)\n            Console.WriteLine(&quot;Connection created successfully&quot;)\n            httpSocket.Close()\n        Catch e As SocketException\n            Console.WriteLine((ControlChars.Cr + &quot;Exception thrown.&quot; + ControlChars.Cr + &quot;The Original Message is: &quot; + e.Message))\n            &#39; Throw the &#39;WebException&#39; object with a message string and message status specific to the situation.\n            Throw New WebException(&quot;Unable to locate the Server with &#39;www.contoso.com&#39; Uri.&quot;, WebExceptionStatus.NameResolutionFailure)\n        End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException__ctor_System_String_System_Exception_System_Net_WebExceptionStatus_System_Net_WebResponse_\">\r\n    \r\n            <a id=\"System_Net_WebException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebException(String,Exception,WebExceptionStatus,WebResponse)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> class with the specified error message, nested exception, status, and response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebException (string message, Exception innerException, System.Net.WebExceptionStatus status, System.Net.WebResponse response);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text of the error message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A nested exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>status</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>response</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> instance that contains the response from the remote host.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> instance is initialized with the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property set to the value of <code>message</code>, the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property set to the value of <code>innerException</code>, the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to the value of <code>status</code>, and the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Response_\" data-linktype=\"relative-path\">Response</a> property set to the value of <code>response</code>. If <code>message</code> is <code>null</code>, the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property is initialized to a system-supplied message.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example throws a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> by specifying an error message and a <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebException_Constructor5#1\">      // Send the data.\n      Encoding^ ASCII = Encoding::ASCII;\n      String^ requestPage = String::Concat( &quot;GET /nhjj.htm HTTP/1.1\\r<br>Host: &quot;, connectUri, &quot;\\r<br>Connection: Close\\r<br>\\r<br>&quot; );\n      array&lt;Byte&gt;^ byteGet = ASCII-&gt;GetBytes( requestPage );\n      array&lt;Byte&gt;^ recvBytes = gcnew array&lt;Byte&gt;(256);\n\n      // Create an &#39;IPEndPoint&#39; object.\n\n      IPHostEntry^ hostEntry = Dns::Resolve( connectUri );\n      IPAddress^ serverAddress = hostEntry-&gt;AddressList[ 0 ];\n      IPEndPoint^ endPoint = gcnew IPEndPoint( serverAddress,80 );\n\n      // Create a &#39;Socket&#39; object  for sending data.\n      Socket^ connectSocket = gcnew Socket( AddressFamily::InterNetwork, SocketType::Stream, ProtocolType::Tcp );\n\n      // Connect to host using &#39;IPEndPoint&#39; object.\n\n      connectSocket-&gt;Connect( endPoint );\n\n      // Sent the &#39;requestPage&#39; text to the host.\n      connectSocket-&gt;Send( byteGet, byteGet-&gt;Length, (SocketFlags)(0) );\n\n      // Receive the information sent by the server.\n      Int32 bytesReceived = connectSocket-&gt;Receive( recvBytes, recvBytes-&gt;Length, (SocketFlags)(0) );\n      String^ headerString = ASCII-&gt;GetString( recvBytes, 0, bytesReceived );\n\n      // Check whether &#39;status 404&#39; is there or not in the information sent by server.\n      if ( headerString-&gt;IndexOf( &quot;404&quot; ) != -1 )\n      {\n         bytesReceived = connectSocket-&gt;Receive( recvBytes, recvBytes-&gt;Length, (SocketFlags)(0) );\n         MemoryStream^ memoryStream = gcnew MemoryStream( recvBytes );\n         getStream = (System::IO::Stream^)(memoryStream);\n         \n         // Create a &#39;WebResponse&#39; object\n         WebResponse^ myWebResponse = (WebResponse^)(gcnew HttpConnect( getStream ));\n         Exception^ myException = gcnew Exception( &quot;File Not found&quot; );\n\n         // Throw the &#39;WebException&#39; object with a message string, message status, InnerException and WebResponse\n         throw gcnew WebException( &quot;The Requested page is not found.&quot;,myException,WebExceptionStatus::ProtocolError,myWebResponse );\n      }\n\n      connectSocket-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"WebException_Constructor5#1\">\t\t\t // Send the data. \n\t\t\t Encoding ASCII = Encoding.ASCII;\n\t\t\t string requestPage = &quot;GET /nhjj.htm HTTP/1.1\\r<br>Host: &quot; + connectUri + &quot;\\r<br>Connection: Close\\r<br>\\r<br>&quot;;\n\t\t\t Byte[] byteGet = ASCII.GetBytes(requestPage);\n\t\t\t Byte[] recvBytes = new Byte[256];\n\n\t\t\t // Create an &#39;IPEndPoint&#39; object.\n\t    \n\t\t\t IPHostEntry hostEntry = Dns.Resolve(connectUri);\n\t\t\t IPAddress serverAddress = hostEntry.AddressList[0];\n\t\t\t IPEndPoint endPoint = new IPEndPoint(serverAddress, 80);\n\t   \n\t\t\t // Create a &#39;Socket&#39; object  for sending data.\n\t\t\t Socket connectSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream,ProtocolType.Tcp);\n\t    \n\t\t\t // Connect to host using &#39;IPEndPoint&#39; object.\n\n\t\t\t connectSocket.Connect(endPoint);\n\t    \n\t\t\t // Sent the &#39;requestPage&#39; text to the host.\n\t\t\t connectSocket.Send(byteGet, byteGet.Length, 0);\n\t    \n\t\t\t // Receive the information sent by the server.\n\t\t\t Int32 bytesReceived = connectSocket.Receive(recvBytes, recvBytes.Length, 0);\n\t\t\t String headerString = ASCII.GetString(recvBytes, 0, bytesReceived);\n\t\t\t\n\n\n\t\t\t\n\t\t\t// Check whether &#39;status 404&#39; is there or not in the information sent by server.\n\t\t\tif(headerString.IndexOf(&quot;404&quot;)!=-1)\n\t\t\t{\t \n\t\t\t\tbytesReceived = connectSocket.Receive(recvBytes, recvBytes.Length, 0);\n\t\t\t\tMemoryStream memoryStream = new MemoryStream(recvBytes);\n\t\t\t\tgetStream = (Stream) memoryStream;\n\t\t\n\t\t\t\t// Create a &#39;WebResponse&#39; object\n\t\t\t\tWebResponse myWebResponse = (WebResponse) new HttpConnect(getStream);\n\t\t\t\tException myException = new Exception(&quot;File Not found&quot;);\n\n\t\t\t\t// Throw the &#39;WebException&#39; object with a message string, message status,InnerException and WebResponse\n\t\t\t\tthrow new WebException(&quot;The Requested page is not found.&quot;,myException,WebExceptionStatus.ProtocolError,myWebResponse);\n \n\n\t\t\t}\n\n\t\t\tconnectSocket.Close();\t\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Constructor5#1\"> \n   \t  &#39; Send the data. \n        Dim ASCII As Encoding = Encoding.ASCII\n        Dim requestPage As String = &quot;GET /nhjj.htm HTTP/1.1&quot; + ControlChars.Lf + ControlChars.Cr + &quot;Host: &quot; + connectUri + ControlChars.Lf + ControlChars.Cr + &quot;Connection: Close&quot; + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr\n        Dim byteGet As [Byte]() = ASCII.GetBytes(requestPage)\n        Dim recvBytes(256) As [Byte]\n        \n        &#39; Create an &#39;IPEndPoint&#39; object.\n        Dim hostEntry As IPHostEntry = Dns.Resolve(connectUri)\n        Dim serverAddress As IPAddress = hostEntry.AddressList(0)\n        Dim endPoint As New IPEndPoint(serverAddress, 80)\n        \n        &#39; Create a &#39;Socket&#39; object  for sending data.\n        Dim connectSocket As New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)\n        \n        &#39; Connect to host using &#39;IPEndPoint&#39; object.\n        connectSocket.Connect(endPoint)\n        \n        &#39; Sent the &#39;requestPage&#39; text to the host.\n        connectSocket.Send(byteGet, byteGet.Length, 0)\n        \n        &#39; Receive the information sent by the server.\n        Dim bytesReceived As Int32 = connectSocket.Receive(recvBytes, recvBytes.Length, 0)\n        Dim headerString As [String] = ASCII.GetString(recvBytes, 0, bytesReceived)\n       \n        &#39; Check whether &#39;status 404&#39; is there or not in the information sent by server.\n        If headerString.IndexOf(&quot;404&quot;) &lt;&gt; False Then\n            bytesReceived = connectSocket.Receive(recvBytes, recvBytes.Length, 0)\n            Dim memoryStream As New MemoryStream(recvBytes)\n            getStream = CType(memoryStream, Stream)\n            \n            &#39; Create a &#39;WebResponse&#39; object.\n            Dim myWebResponse As WebResponse = CType(New HttpConnect(getStream), WebResponse)\n            Dim myException As New Exception(&quot;File Not found&quot;)\n            \n            &#39; Throw the &#39;WebException&#39; object with a message string, message status,InnerException and WebResponse.\n            Throw New WebException(&quot;The Requested page is not found.&quot;, myException, WebExceptionStatus.ProtocolError, myWebResponse)\n        End If \n\n        connectSocket.Close()\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException_Response\">\r\n    \r\n            <a id=\"System_Net_WebException_Response_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Response</div>        \r\n          </div>\r\n    \r\n            <p>Gets the response that the remote host returned.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.WebResponse Response { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>If a response is available from the Internet resource, a <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> instance that contains the error response from an Internet resource; otherwise, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Some Internet protocols, such as HTTP, return otherwise valid responses indicating that an error has occurred at the protocol level. When the response to an Internet request indicates an error, <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> sets the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property to <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">System.Net.WebExceptionStatus</a> and provides the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> that contains the error message in the Response property of the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> that was thrown. The application can examine the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> to determine the actual error.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property and prints to the console the <a class=\"xref\" href=\"system.net.httpwebresponse#System_Net_HttpWebResponse_StatusCode_\" data-linktype=\"relative-path\">StatusCode</a> and <a class=\"xref\" href=\"system.net.httpwebresponse#System_Net_HttpWebResponse_StatusDescription_\" data-linktype=\"relative-path\">StatusDescription</a> of the underlying <a class=\"xref\" href=\"system.net.httpwebresponse\" data-linktype=\"relative-path\">HttpWebResponse</a> instance.  </p>\n<pre><code class=\"lang-cs\" name=\"WebException_Status_Response#1\">        try {\n           // Create a web request for an invalid site. Substitute the &quot;invalid site&quot; strong in the Create call with a invalid name.\n             HttpWebRequest myHttpWebRequest = (HttpWebRequest) WebRequest.Create(&quot;invalid site&quot;);\n\n            // Get the associated response for the above request.\n             HttpWebResponse myHttpWebResponse = (HttpWebResponse) myHttpWebRequest.GetResponse();\n            myHttpWebResponse.Close();\n        }\n        catch(WebException e) {\n            Console.WriteLine(&quot;This program is expected to throw WebException on successful run.&quot;+\n                                &quot;<br><br>Exception Message :&quot; + e.Message);\n            if(e.Status == WebExceptionStatus.ProtocolError) {\n                Console.WriteLine(&quot;Status Code : {0}&quot;, ((HttpWebResponse)e.Response).StatusCode);\n                Console.WriteLine(&quot;Status Description : {0}&quot;, ((HttpWebResponse)e.Response).StatusDescription);\n            }\n        }\n        catch(Exception e) {\n            Console.WriteLine(e.Message);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebException_Status_Response#1\">   try\n   {\n      // Create a web request for an unknown server (this raises the WebException).\n      HttpWebRequest^ myHttpWebRequest = (HttpWebRequest^)(WebRequest::Create( &quot;http://unknown.unknown.com&quot; ));\n      \n      // Get the associated response for the above request.\n      HttpWebResponse^ myHttpWebResponse = (HttpWebResponse^)(myHttpWebRequest-&gt;GetResponse());\n      myHttpWebResponse-&gt;Close();\n   }\n   catch ( WebException^ e ) \n   {\n      Console::WriteLine( &quot;This program is expected to throw WebException on successful run.&quot; +\n         &quot;<br><br>Exception Message : &quot; + e-&gt;Message );\n      if ( e-&gt;Status == WebExceptionStatus::ProtocolError )\n      {\n         Console::WriteLine( &quot;Status Code: {0}&quot;, ( (HttpWebResponse^)(e-&gt;Response) )-&gt;StatusCode );\n         Console::WriteLine( &quot;Status Description: {0}&quot;, ( (HttpWebResponse^)(e-&gt;Response) )-&gt;StatusDescription );\n      }\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( e-&gt;Message );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Status_Response#1\">        Try\n            &#39;Create a web request for an invalid site. Substitute the &quot;invalid site&quot; strong in the Create call with a invalid name.\n            Dim myHttpWebRequest As HttpWebRequest = CType(WebRequest.Create(&quot;invalid site&quot;), HttpWebRequest)\n            \n            &#39;Get the associated response for the above request.\n            Dim myHttpWebResponse As HttpWebResponse = CType(myHttpWebRequest.GetResponse(), HttpWebResponse)\n            myHttpWebResponse.Close()\n        Catch e As WebException\n            Console.WriteLine(e.Message)\n            \n             If e.Status = WebExceptionStatus.ProtocolError Then\n                Console.WriteLine(&quot;Status Code : {0}&quot;, CType(e.Response, HttpWebResponse).StatusCode)\n                Console.WriteLine(&quot;Status Description : {0}&quot;, CType(e.Response, HttpWebResponse).StatusDescription)\n            End If\n\n       Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException_Status\">\r\n    \r\n            <a id=\"System_Net_WebException_Status_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Status</div>        \r\n          </div>\r\n    \r\n            <p>Gets the status of the response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.WebExceptionStatus Status { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Status property indicates the reason for the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>.  </p>\n<p> The value of Status is one of the <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a> values.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> The <a class=\"xref\" href=\"system.net.webexceptionstatus\" data-linktype=\"relative-path\">WebExceptionStatus</a> error is not returned to <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/win8-appname-long-md.md&quot; -->Windows 8.x Store<!--END INCLUDE --> apps.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the Status property and prints to the console the <a class=\"xref\" href=\"system.net.httpwebresponse#System_Net_HttpWebResponse_StatusCode_\" data-linktype=\"relative-path\">StatusCode</a> and <a class=\"xref\" href=\"system.net.httpwebresponse#System_Net_HttpWebResponse_StatusDescription_\" data-linktype=\"relative-path\">StatusDescription</a> of the underlying <a class=\"xref\" href=\"system.net.httpwebresponse\" data-linktype=\"relative-path\">HttpWebResponse</a> instance.  </p>\n<pre><code class=\"lang-cs\" name=\"WebException_Status_Response#1\">        try {\n           // Create a web request for an invalid site. Substitute the &quot;invalid site&quot; strong in the Create call with a invalid name.\n             HttpWebRequest myHttpWebRequest = (HttpWebRequest) WebRequest.Create(&quot;invalid site&quot;);\n\n            // Get the associated response for the above request.\n             HttpWebResponse myHttpWebResponse = (HttpWebResponse) myHttpWebRequest.GetResponse();\n            myHttpWebResponse.Close();\n        }\n        catch(WebException e) {\n            Console.WriteLine(&quot;This program is expected to throw WebException on successful run.&quot;+\n                                &quot;<br><br>Exception Message :&quot; + e.Message);\n            if(e.Status == WebExceptionStatus.ProtocolError) {\n                Console.WriteLine(&quot;Status Code : {0}&quot;, ((HttpWebResponse)e.Response).StatusCode);\n                Console.WriteLine(&quot;Status Description : {0}&quot;, ((HttpWebResponse)e.Response).StatusDescription);\n            }\n        }\n        catch(Exception e) {\n            Console.WriteLine(e.Message);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebException_Status_Response#1\">   try\n   {\n      // Create a web request for an unknown server (this raises the WebException).\n      HttpWebRequest^ myHttpWebRequest = (HttpWebRequest^)(WebRequest::Create( &quot;http://unknown.unknown.com&quot; ));\n      \n      // Get the associated response for the above request.\n      HttpWebResponse^ myHttpWebResponse = (HttpWebResponse^)(myHttpWebRequest-&gt;GetResponse());\n      myHttpWebResponse-&gt;Close();\n   }\n   catch ( WebException^ e ) \n   {\n      Console::WriteLine( &quot;This program is expected to throw WebException on successful run.&quot; +\n         &quot;<br><br>Exception Message : &quot; + e-&gt;Message );\n      if ( e-&gt;Status == WebExceptionStatus::ProtocolError )\n      {\n         Console::WriteLine( &quot;Status Code: {0}&quot;, ( (HttpWebResponse^)(e-&gt;Response) )-&gt;StatusCode );\n         Console::WriteLine( &quot;Status Description: {0}&quot;, ( (HttpWebResponse^)(e-&gt;Response) )-&gt;StatusDescription );\n      }\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( e-&gt;Message );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebException_Status_Response#1\">        Try\n            &#39;Create a web request for an invalid site. Substitute the &quot;invalid site&quot; strong in the Create call with a invalid name.\n            Dim myHttpWebRequest As HttpWebRequest = CType(WebRequest.Create(&quot;invalid site&quot;), HttpWebRequest)\n            \n            &#39;Get the associated response for the above request.\n            Dim myHttpWebResponse As HttpWebResponse = CType(myHttpWebRequest.GetResponse(), HttpWebResponse)\n            myHttpWebResponse.Close()\n        Catch e As WebException\n            Console.WriteLine(e.Message)\n            \n             If e.Status = WebExceptionStatus.ProtocolError Then\n                Console.WriteLine(&quot;Status Code : {0}&quot;, CType(e.Response, HttpWebResponse).StatusCode)\n                Console.WriteLine(&quot;Status Description : {0}&quot;, CType(e.Response, HttpWebResponse).StatusDescription)\n            End If\n\n       Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_WebException_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance with the data needed to serialize the <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to be used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> to be used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebException_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Net_WebException_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes this instance into the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object into which this <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> will be serialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination of the serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebException.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebException\">\r\n<meta name=\"APIName\" content=\"System.Net.WebException..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.WebException.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebException.Response\">\r\n<meta name=\"APIName\" content=\"System.Net.WebException.Status\">\r\n<meta name=\"APIName\" content=\"System.Net.WebException.ISerializable.GetObjectData\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-10 02:17 AM\">\r\n<meta name=\"document_id\" content=\"b409844c-da1a-ff33-2f4b-0ba2387d5cb1\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\WebException.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.WebException\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebException.yml","open_to_public_contributors":true,"api_name":["System.Net.WebException","System.Net.WebException..ctor","System.Net.WebException.GetObjectData","System.Net.WebException.Response","System.Net.WebException.Status","System.Net.WebException.ISerializable.GetObjectData"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.WebException","System::Net::WebException","System.Net.WebException.#ctor","System::Net::WebException::#ctor","System.Net.WebException.GetObjectData","System::Net::WebException::GetObjectData","System.Net.WebException.Response","System::Net::WebException::Response","System.Net.WebException.Status","System::Net::WebException::Status","System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData","System::Net::WebException::System#Runtime#Serialization#ISerializable#GetObjectData"],"dev_langs":["csharp"],"updated_at":"2017-03-10 02:17 AM","document_id":"b409844c-da1a-ff33-2f4b-0ba2387d5cb1","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\WebException.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/WebException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WebException class | Microsoft Docs","_op_ogTitle":"WebException class","description":"The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.WebException","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webexception","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webexception","fileRelativePath":"System.Net.WebException.html"},"themesRelativePathToOutputRoot":"_themes/"}