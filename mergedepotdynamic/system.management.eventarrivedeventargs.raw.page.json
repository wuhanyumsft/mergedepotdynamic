{"content":"    \r\n    <h1 id=\"System_Management_EventArrivedEventArgs\">\r\n      <span class=\"lang-csharp\">EventArrivedEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Holds event data for the <a class=\"xref\" href=\"system.management.managementeventwatcher#System_Management_ManagementEventWatcher_EventArrived\" data-linktype=\"relative-path\">EventArrived</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class EventArrivedEventArgs : System.Management.ManagementEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementeventargs\" data-linktype=\"relative-path\">System.Management.ManagementEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EventArrivedEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementeventargs#System_Management_ManagementEventArgs_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The following asynchronous example sets up a WMI timer to raise an event every second, and removes it when no longer needed. The <a class=\"xref\" href=\"system.management.managementeventwatcher\" data-linktype=\"relative-path\">ManagementEventWatcher</a> defines several .NET Framework events which are raised when WMI events are delivered. Delegates are attached to these events for handling the incoming data.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_EventArrivedEventArgs#1\">using System;\nusing System.Management;\n\n// This example shows asynchronous consumption of events.\n// In this example you are listening for timer events.\n// The first part of the example sets up the timer.\npublic class EventWatcherAsync \n{\n    public EventWatcherAsync()\n    {\n        // Set up a timer to raise events every 1 second\n        //=============================================\n        ManagementClass timerClass = \n            new ManagementClass(&quot;__IntervalTimerInstruction&quot;);\n        ManagementObject timer = timerClass.CreateInstance();\n        timer[&quot;TimerId&quot;] = &quot;Timer1&quot;;\n        timer[&quot;IntervalBetweenEvents&quot;] = 1000;\n        timer.Put();\n\n        // Set up the event consumer\n        //==========================\n        // Create event query to receive timer events\n        WqlEventQuery query = \n            new WqlEventQuery(&quot;__TimerEvent&quot;,\n            &quot;TimerId=\\&quot;Timer1\\&quot;&quot;);\n\n        // Initialize an event watcher and \n        // subscribe to timer events \n        ManagementEventWatcher watcher = \n            new ManagementEventWatcher(query);\n\n        // Set up a listener for events\n        watcher.EventArrived += \n            new EventArrivedEventHandler(\n            this.HandleEvent);\n\n        // Start listening\n        watcher.Start();\n\n        // Do something in the meantime\n        System.Threading.Thread.Sleep(10000);\n      \n        // Stop listening\n        watcher.Stop();\n        \n    }\n\n\n    private void HandleEvent(object sender,\n        EventArrivedEventArgs e)   \n    {\n        Console.WriteLine(&quot;Event arrived !&quot;);\n    }\n\n    public static void Main(string[] args) \n    {\n        // start the event watcher\n        EventWatcherAsync eventWatcher = new\n            EventWatcherAsync();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_EventArrivedEventArgs#1\">Imports System\nImports System.Management\n\n&#39; This example shows asynchronous consumption of events.\n&#39; In this example you are listening for timer events.\n&#39; The first part of the example sets up the timer.\n\nPublic Class EventWatcherAsync\n\n    Public Sub New()\n        &#39; Set up a timer to raise events every 1 second\n        &#39;=============================================\n        Dim timerClass As New ManagementClass( _\n            &quot;__IntervalTimerInstruction&quot;)\n        Dim timer As ManagementObject = _\n            timerClass.CreateInstance()\n        timer(&quot;TimerId&quot;) = &quot;Timer1&quot;\n        timer(&quot;IntervalBetweenEvents&quot;) = 1000\n        timer.Put()\n\n        &#39; Set up the event consumer\n        &#39;==========================\n        &#39; Create event query to receive timer events\n        Dim query As New WqlEventQuery(&quot;__TimerEvent&quot;, _\n            &quot;TimerId=&quot;&quot;Timer1&quot;&quot;&quot;)\n\n        &#39; Initialize an event watcher and subscribe to \n        &#39; events that match this query\n        Dim watcher As New ManagementEventWatcher(query)\n\n        &#39; Set up a listener for events\n        AddHandler watcher.EventArrived, _\n            AddressOf Me.HandleEvent\n\n        &#39; Start listening\n        watcher.Start()\n\n        &#39; Do something in the meantime\n        System.Threading.Thread.Sleep(10000)\n\n        &#39; Stop listening\n        watcher.Stop()\n\n    End Sub\n\n    Private Sub HandleEvent(ByVal sender As Object, _\n        ByVal e As EventArrivedEventArgs)\n\n        Console.WriteLine(&quot;Event arrived !&quot;)\n    End Sub\n\n    Public Overloads Shared Function _\n            Main(ByVal args() As String) As Integer\n\n        &#39;start the event watcher\n        Dim eventWatcher As New EventWatcherAsync\n\n        Return 0\n\n    End Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_EventArrivedEventArgs_NewEvent\" data-linktype=\"self-bookmark\">NewEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the WMI event that was delivered.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_EventArrivedEventArgs_NewEvent\">\r\n    \r\n            <a id=\"System_Management_EventArrivedEventArgs_NewEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewEvent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the WMI event that was delivered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Management.ManagementBaseObject NewEvent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementbaseobject\" data-linktype=\"relative-path\">ManagementBaseObject</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.management.managementbaseobject\" data-linktype=\"relative-path\">ManagementBaseObject</a> that contains the delivered WMI event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> The object representing the WMI event.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.EventArrivedEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.EventArrivedEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.EventArrivedEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Management.EventArrivedEventArgs.NewEvent\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2adbf424-fff5-3c4c-6032-ddd7fe396b08\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Holds event data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Management/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.EventArrivedEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.EventArrivedEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.EventArrivedEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Management.EventArrivedEventArgs","System.Management.EventArrivedEventArgs.NewEvent"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.EventArrivedEventArgs","System::Management::EventArrivedEventArgs","System.Management.EventArrivedEventArgs.NewEvent","System::Management::EventArrivedEventArgs::NewEvent"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2adbf424-fff5-3c4c-6032-ddd7fe396b08","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Management/EventArrivedEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventArrivedEventArgs class | Microsoft Docs","_op_ogTitle":"EventArrivedEventArgs class","description":"Holds event data for the  event.\n","toc_asset_id":"_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.EventArrivedEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.eventarrivedeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.eventarrivedeventargs","fileRelativePath":"System.Management.EventArrivedEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}