{"content":"    \r\n    <h1 id=\"Microsoft_Win32_SystemEvents\">\r\n      <span class=\"lang-csharp\">SystemEvents</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to system event notifications. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class SystemEvents</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SystemEvents</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SystemEvents class provides the ability to respond to specific types of system events.  </p>\n<p> When a system event is raised, any delegates attached to the event are called using the thread that monitors for system events. Therefore, you should make any calls from your event handlers thread-safe. If you need to call a system event that is not exposed as a member of this class, you can use the <a class=\"xref\" href=\"microsoft.win32.systemevents#Microsoft_Win32_SystemEvents_InvokeOnEventsThread_\" data-linktype=\"relative-path\">InvokeOnEventsThread</a> method.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not perform time-consuming processing on the thread that raises a system event handler because it might prevent other applications from functioning.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Some system events might not be raised on Windows Vista. Be sure to verify that your application works as expected on Windows Vista.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_CreateTimer_System_Int32_\" data-linktype=\"self-bookmark\">CreateTimer(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new window timer associated with the system events window.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_InvokeOnEventsThread_System_Delegate_\" data-linktype=\"self-bookmark\">InvokeOnEventsThread(Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes the specified delegate using the thread that listens for system events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_KillTimer_System_IntPtr_\" data-linktype=\"self-bookmark\">KillTimer(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Terminates the timer specified by the given id.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_DisplaySettingsChanged\" data-linktype=\"self-bookmark\">DisplaySettingsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user changes the display settings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_DisplaySettingsChanging\" data-linktype=\"self-bookmark\">DisplaySettingsChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the display settings are changing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_EventsThreadShutdown\" data-linktype=\"self-bookmark\">EventsThreadShutdown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before the thread that listens for system events is terminated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_InstalledFontsChanged\" data-linktype=\"self-bookmark\">InstalledFontsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user adds fonts to or removes fonts from the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_LowMemory\" data-linktype=\"self-bookmark\">LowMemory</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the system is running out of available RAM.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_PaletteChanged\" data-linktype=\"self-bookmark\">PaletteChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user switches to an application that uses a different palette.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_PowerModeChanged\" data-linktype=\"self-bookmark\">PowerModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user suspends or resumes the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_SessionEnded\" data-linktype=\"self-bookmark\">SessionEnded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user is logging off or shutting down the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_SessionEnding\" data-linktype=\"self-bookmark\">SessionEnding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user is trying to log off or shut down the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_SessionSwitch\" data-linktype=\"self-bookmark\">SessionSwitch</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the currently logged-in user has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_TimeChanged\" data-linktype=\"self-bookmark\">TimeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user changes the time on the system clock.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_TimerElapsed\" data-linktype=\"self-bookmark\">TimerElapsed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a windows timer interval has expired.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_UserPreferenceChanged\" data-linktype=\"self-bookmark\">UserPreferenceChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a user preference has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SystemEvents_UserPreferenceChanging\" data-linktype=\"self-bookmark\">UserPreferenceChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a user preference is changing.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_CreateTimer_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_Win32_SystemEvents_CreateTimer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateTimer(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new window timer associated with the system events window.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static IntPtr CreateTimer (int interval);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies the interval between timer notifications, in milliseconds.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>The ID of the new timer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The interval is less than or equal to zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_InvokeOnEventsThread_System_Delegate_\">\r\n    \r\n            <a id=\"Microsoft_Win32_SystemEvents_InvokeOnEventsThread_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeOnEventsThread(Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Invokes the specified delegate using the thread that listens for system events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void InvokeOnEventsThread (Delegate method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to invoke using the thread that listens for system events.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method any time that you need to handle a system event that is not exposed otherwise by the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n<p> When you call this method, the specified delegate will be invoked by the thread that your application is using to process system events.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_KillTimer_System_IntPtr_\">\r\n    \r\n            <a id=\"Microsoft_Win32_SystemEvents_KillTimer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KillTimer(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Terminates the timer specified by the given id.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void KillTimer (IntPtr timerId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timerId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID of the timer to terminate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_DisplaySettingsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplaySettingsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user changes the display settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler DisplaySettingsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to monitor the DisplaySettingsChanged event. This code example is part of a larger example provided for the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"SystemEvents#2\">int main()\n{\n    // Set the SystemEvents class to receive event notification\n    // when a user preference changes, the palette changes, or\n    // when display settings change.\n    SystemEvents::UserPreferenceChanging += gcnew\n        UserPreferenceChangingEventHandler(\n        SystemEvents_UserPreferenceChanging);\n    SystemEvents::PaletteChanged += gcnew\n        EventHandler(SystemEvents_PaletteChanged);\n    SystemEvents::DisplaySettingsChanged += gcnew\n        EventHandler(SystemEvents_DisplaySettingsChanged);\n\n    // For demonstration purposes, this application sits idle\n    // waiting for events.\n    Console::WriteLine(&quot;This application is waiting for system events.&quot;);\n    Console::WriteLine(&quot;Press &lt;Enter&gt; to terminate this application.&quot;);\n    Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"SystemEvents#2\">    static void Main() \n    {         \n        // Set the SystemEvents class to receive event notification when a user \n        // preference changes, the palette changes, or when display settings change.\n        SystemEvents.UserPreferenceChanging += new \n            UserPreferenceChangingEventHandler(SystemEvents_UserPreferenceChanging);\n        SystemEvents.PaletteChanged += new \n            EventHandler(SystemEvents_PaletteChanged);\n        SystemEvents.DisplaySettingsChanged += new \n            EventHandler(SystemEvents_DisplaySettingsChanged);        \n\n        // For demonstration purposes, this application sits idle waiting for events.\n        Console.WriteLine(&quot;This application is waiting for system events.&quot;);\n        Console.WriteLine(&quot;Press &lt;Enter&gt; to terminate this application.&quot;);\n        Console.ReadLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"SystemEvents#2\">        &#39;Set the SystemEvents class to receive event notification \n        &#39;when a user preference changes, the palette changes, or \n        &#39;when display settings change.\n        AddHandler SystemEvents.UserPreferenceChanging, _\n        AddressOf SystemEvents_UserPreferenceChanging\n\n        AddHandler SystemEvents.PaletteChanged, _\n        AddressOf SystemEvents_PaletteChanged\n\n        AddHandler SystemEvents.DisplaySettingsChanged, _\n        AddressOf SystemEvents_DisplaySettingsChanged\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_DisplaySettingsChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplaySettingsChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the display settings are changing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler DisplaySettingsChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_EventsThreadShutdown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventsThreadShutdown</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before the thread that listens for system events is terminated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler EventsThreadShutdown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised as the thread that listens for system events is about to be terminated. System event delegates are invoked using the thread that listens for system events.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_InstalledFontsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstalledFontsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user adds fonts to or removes fonts from the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler InstalledFontsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_LowMemory\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LowMemory</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the system is running out of available RAM.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler LowMemory;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event wraps the WM_COMPACTING message. This message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_PaletteChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaletteChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user switches to an application that uses a different palette.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler PaletteChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to monitor the PaletteChanged event. This code example is part of a larger example provided for the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"SystemEvents#2\">int main()\n{\n    // Set the SystemEvents class to receive event notification\n    // when a user preference changes, the palette changes, or\n    // when display settings change.\n    SystemEvents::UserPreferenceChanging += gcnew\n        UserPreferenceChangingEventHandler(\n        SystemEvents_UserPreferenceChanging);\n    SystemEvents::PaletteChanged += gcnew\n        EventHandler(SystemEvents_PaletteChanged);\n    SystemEvents::DisplaySettingsChanged += gcnew\n        EventHandler(SystemEvents_DisplaySettingsChanged);\n\n    // For demonstration purposes, this application sits idle\n    // waiting for events.\n    Console::WriteLine(&quot;This application is waiting for system events.&quot;);\n    Console::WriteLine(&quot;Press &lt;Enter&gt; to terminate this application.&quot;);\n    Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"SystemEvents#2\">    static void Main() \n    {         \n        // Set the SystemEvents class to receive event notification when a user \n        // preference changes, the palette changes, or when display settings change.\n        SystemEvents.UserPreferenceChanging += new \n            UserPreferenceChangingEventHandler(SystemEvents_UserPreferenceChanging);\n        SystemEvents.PaletteChanged += new \n            EventHandler(SystemEvents_PaletteChanged);\n        SystemEvents.DisplaySettingsChanged += new \n            EventHandler(SystemEvents_DisplaySettingsChanged);        \n\n        // For demonstration purposes, this application sits idle waiting for events.\n        Console.WriteLine(&quot;This application is waiting for system events.&quot;);\n        Console.WriteLine(&quot;Press &lt;Enter&gt; to terminate this application.&quot;);\n        Console.ReadLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"SystemEvents#2\">        &#39;Set the SystemEvents class to receive event notification \n        &#39;when a user preference changes, the palette changes, or \n        &#39;when display settings change.\n        AddHandler SystemEvents.UserPreferenceChanging, _\n        AddressOf SystemEvents_UserPreferenceChanging\n\n        AddHandler SystemEvents.PaletteChanged, _\n        AddressOf SystemEvents_PaletteChanged\n\n        AddHandler SystemEvents.DisplaySettingsChanged, _\n        AddressOf SystemEvents_DisplaySettingsChanged\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_PowerModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PowerModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user suspends or resumes the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_SessionEnded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SessionEnded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user is logging off or shutting down the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.SessionEndedEventHandler SessionEnded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_SessionEnding\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SessionEnding</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user is trying to log off or shut down the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.SessionEndingEventHandler SessionEnding;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is a cancelable event. Setting the <a class=\"xref\" href=\"microsoft.win32.sessionendingeventargs#Microsoft_Win32_SessionEndingEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code> will request that the session continues to run. It provides no guarantee that the session will not end.  </p>\n<p> If you are using SessionEnding in a Windows form to detect a system logoff or reboot, there is no deterministic way to decide whether the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event will fire before this event.  </p>\n<p> If you want to perform some special tasks before <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> is fired, you need to ensure that SessionEnding fires before <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a>. To do this, you need to trap the <code>WM_QUERYENDSESSION</code> in the form by overriding the <code>WndProc</code> function.  This example demonstrates how to do this.  </p>\n<pre><code class=\"lang-vb#\">Private Shared WM_QUERYENDSESSION As Integer = &amp;H11  \n Private Shared systemShutdown As Boolean = False  \n Protected Overrides Sub WndProc(ByRef m As System.Windows.Forms.Message)  \n     If m.Msg = WM_QUERYENDSESSION Then  \n         MessageBox.Show(&quot;queryendsession: this is a logoff, shutdown, or reboot&quot;)  \n         systemShutdown = True  \n     End If  \n     &#39; If this is WM_QUERYENDSESSION, the closing event should be raised in the base WndProc.  \n     MyBase.WndProc(m)  \n End Sub &#39;WndProc   \n Private Sub Form1_Closing(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing  \n     If (systemShutdown) Then  \n     &#39; Reset the variable because the user might cancel the shutdown.  \n         systemShutdown = False  \n         If (System.Windows.Forms.DialogResult.Yes = _  \n                 MessageBox.Show(&quot;My application&quot;, &quot;Do you want to save your work before logging off?&quot;, MessageBoxButtons.YesNo)) Then  \n                 e.Cancel = True  \n         Else  \n                 e.Cancel = False  \n         End If  \n     End If  \n End Sub  \n</code></pre><pre><code class=\"lang-c#\">private static int WM_QUERYENDSESSION = 0x11;  \nprivate static bool systemShutdown = false;  \nprotected override void WndProc(ref System.Windows.Forms.Message m)  \n{  \n    if (m.Msg==WM_QUERYENDSESSION)  \n    {  \n        MessageBox.Show(&quot;queryendsession: this is a logoff, shutdown, or reboot&quot;);  \n        systemShutdown = true;  \n    }  \n\n    // If this is WM_QUERYENDSESSION, the closing event should be  \n    // raised in the base WndProc.  \n    base.WndProc(ref m);  \n\n} //WndProc   \n\nprivate void Form1_Closing(  \n    System.Object sender,   \n    System.ComponentModel.CancelEventArgs e)  \n{  \n    if (systemShutdown)  \n        // Reset the variable because the user might cancel the   \n        // shutdown.  \n    {  \n        systemShutdown = false;  \n        if (DialogResult.Yes==MessageBox.Show(&quot;My application&quot;,   \n            &quot;Do you want to save your work before logging off?&quot;,   \n            MessageBoxButtons.YesNo))  \n        {  \n            e.Cancel = true;  \n        }  \n        else  \n        {  \n            e.Cancel = false;  \n        }  \n    }  \n}  \n</code></pre><div class=\"IMPORTANT\"><h5>Important</h5><p> Console applications do not raise the SessionEnding event.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_SessionSwitch\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SessionSwitch</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the currently logged-in user has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.SessionSwitchEventHandler SessionSwitch;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_TimeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user changes the time on the system clock.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler TimeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_TimerElapsed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimerElapsed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a windows timer interval has expired.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.TimerElapsedEventHandler TimerElapsed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_UserPreferenceChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserPreferenceChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a user preference has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SystemEvents_UserPreferenceChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserPreferenceChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a user preference is changing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.externalexception\" data-linktype=\"relative-path\">ExternalException</a></div>\r\n                  </div>\r\n                  <p>The attempt to create a system events window thread did not succeed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This event is only raised if the message pump is running. In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised. For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to monitor the UserPreferenceChanging event. This code example is part of a larger example provided for the <a class=\"xref\" href=\"microsoft.win32.systemevents\" data-linktype=\"relative-path\">SystemEvents</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"SystemEvents#2\">int main()\n{\n    // Set the SystemEvents class to receive event notification\n    // when a user preference changes, the palette changes, or\n    // when display settings change.\n    SystemEvents::UserPreferenceChanging += gcnew\n        UserPreferenceChangingEventHandler(\n        SystemEvents_UserPreferenceChanging);\n    SystemEvents::PaletteChanged += gcnew\n        EventHandler(SystemEvents_PaletteChanged);\n    SystemEvents::DisplaySettingsChanged += gcnew\n        EventHandler(SystemEvents_DisplaySettingsChanged);\n\n    // For demonstration purposes, this application sits idle\n    // waiting for events.\n    Console::WriteLine(&quot;This application is waiting for system events.&quot;);\n    Console::WriteLine(&quot;Press &lt;Enter&gt; to terminate this application.&quot;);\n    Console::ReadLine();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"SystemEvents#2\">    static void Main() \n    {         \n        // Set the SystemEvents class to receive event notification when a user \n        // preference changes, the palette changes, or when display settings change.\n        SystemEvents.UserPreferenceChanging += new \n            UserPreferenceChangingEventHandler(SystemEvents_UserPreferenceChanging);\n        SystemEvents.PaletteChanged += new \n            EventHandler(SystemEvents_PaletteChanged);\n        SystemEvents.DisplaySettingsChanged += new \n            EventHandler(SystemEvents_DisplaySettingsChanged);        \n\n        // For demonstration purposes, this application sits idle waiting for events.\n        Console.WriteLine(&quot;This application is waiting for system events.&quot;);\n        Console.WriteLine(&quot;Press &lt;Enter&gt; to terminate this application.&quot;);\n        Console.ReadLine();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"SystemEvents#2\">        &#39;Set the SystemEvents class to receive event notification \n        &#39;when a user preference changes, the palette changes, or \n        &#39;when display settings change.\n        AddHandler SystemEvents.UserPreferenceChanging, _\n        AddressOf SystemEvents_UserPreferenceChanging\n\n        AddHandler SystemEvents.PaletteChanged, _\n        AddressOf SystemEvents_PaletteChanged\n\n        AddHandler SystemEvents.DisplaySettingsChanged, _\n        AddressOf SystemEvents_DisplaySettingsChanged\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Win32.SystemEvents.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Win32.SystemEvents.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.CreateTimer\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.DisplaySettingsChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_DisplaySettingsChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_DisplaySettingsChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.DisplaySettingsChanging\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_DisplaySettingsChanging\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_DisplaySettingsChanging\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.EventsThreadShutdown\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_EventsThreadShutdown\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_EventsThreadShutdown\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.InstalledFontsChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_InstalledFontsChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_InstalledFontsChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.InvokeOnEventsThread\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.KillTimer\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.LowMemory\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_LowMemory\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_LowMemory\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.PaletteChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_PaletteChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_PaletteChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.PowerModeChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_PowerModeChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_PowerModeChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.SessionEnded\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_SessionEnded\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_SessionEnded\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.SessionEnding\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_SessionEnding\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_SessionEnding\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.SessionSwitch\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_SessionSwitch\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_SessionSwitch\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.TimeChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_TimeChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_TimeChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.TimerElapsed\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_TimerElapsed\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_TimerElapsed\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.UserPreferenceChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_UserPreferenceChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_UserPreferenceChanged\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.UserPreferenceChanging\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.add_UserPreferenceChanging\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SystemEvents.remove_UserPreferenceChanging\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"59f5d603-8a3a-4492-1442-45c5f97f005b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to system event notifications. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.Win32/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Win32.SystemEvents\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Win32.SystemEvents.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Win32.SystemEvents.yml","open_to_public_contributors":true,"api_name":["Microsoft.Win32.SystemEvents","Microsoft.Win32.SystemEvents.CreateTimer","Microsoft.Win32.SystemEvents.DisplaySettingsChanged","Microsoft.Win32.SystemEvents.add_DisplaySettingsChanged","Microsoft.Win32.SystemEvents.remove_DisplaySettingsChanged","Microsoft.Win32.SystemEvents.DisplaySettingsChanging","Microsoft.Win32.SystemEvents.add_DisplaySettingsChanging","Microsoft.Win32.SystemEvents.remove_DisplaySettingsChanging","Microsoft.Win32.SystemEvents.EventsThreadShutdown","Microsoft.Win32.SystemEvents.add_EventsThreadShutdown","Microsoft.Win32.SystemEvents.remove_EventsThreadShutdown","Microsoft.Win32.SystemEvents.InstalledFontsChanged","Microsoft.Win32.SystemEvents.add_InstalledFontsChanged","Microsoft.Win32.SystemEvents.remove_InstalledFontsChanged","Microsoft.Win32.SystemEvents.InvokeOnEventsThread","Microsoft.Win32.SystemEvents.KillTimer","Microsoft.Win32.SystemEvents.LowMemory","Microsoft.Win32.SystemEvents.add_LowMemory","Microsoft.Win32.SystemEvents.remove_LowMemory","Microsoft.Win32.SystemEvents.PaletteChanged","Microsoft.Win32.SystemEvents.add_PaletteChanged","Microsoft.Win32.SystemEvents.remove_PaletteChanged","Microsoft.Win32.SystemEvents.PowerModeChanged","Microsoft.Win32.SystemEvents.add_PowerModeChanged","Microsoft.Win32.SystemEvents.remove_PowerModeChanged","Microsoft.Win32.SystemEvents.SessionEnded","Microsoft.Win32.SystemEvents.add_SessionEnded","Microsoft.Win32.SystemEvents.remove_SessionEnded","Microsoft.Win32.SystemEvents.SessionEnding","Microsoft.Win32.SystemEvents.add_SessionEnding","Microsoft.Win32.SystemEvents.remove_SessionEnding","Microsoft.Win32.SystemEvents.SessionSwitch","Microsoft.Win32.SystemEvents.add_SessionSwitch","Microsoft.Win32.SystemEvents.remove_SessionSwitch","Microsoft.Win32.SystemEvents.TimeChanged","Microsoft.Win32.SystemEvents.add_TimeChanged","Microsoft.Win32.SystemEvents.remove_TimeChanged","Microsoft.Win32.SystemEvents.TimerElapsed","Microsoft.Win32.SystemEvents.add_TimerElapsed","Microsoft.Win32.SystemEvents.remove_TimerElapsed","Microsoft.Win32.SystemEvents.UserPreferenceChanged","Microsoft.Win32.SystemEvents.add_UserPreferenceChanged","Microsoft.Win32.SystemEvents.remove_UserPreferenceChanged","Microsoft.Win32.SystemEvents.UserPreferenceChanging","Microsoft.Win32.SystemEvents.add_UserPreferenceChanging","Microsoft.Win32.SystemEvents.remove_UserPreferenceChanging"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Win32.SystemEvents","Microsoft::Win32::SystemEvents","Microsoft.Win32.SystemEvents.CreateTimer","Microsoft::Win32::SystemEvents::CreateTimer","Microsoft.Win32.SystemEvents.DisplaySettingsChanged","Microsoft::Win32::SystemEvents::DisplaySettingsChanged","Microsoft.Win32.SystemEvents.DisplaySettingsChanging","Microsoft::Win32::SystemEvents::DisplaySettingsChanging","Microsoft.Win32.SystemEvents.EventsThreadShutdown","Microsoft::Win32::SystemEvents::EventsThreadShutdown","Microsoft.Win32.SystemEvents.InstalledFontsChanged","Microsoft::Win32::SystemEvents::InstalledFontsChanged","Microsoft.Win32.SystemEvents.InvokeOnEventsThread","Microsoft::Win32::SystemEvents::InvokeOnEventsThread","Microsoft.Win32.SystemEvents.KillTimer","Microsoft::Win32::SystemEvents::KillTimer","Microsoft.Win32.SystemEvents.LowMemory","Microsoft::Win32::SystemEvents::LowMemory","Microsoft.Win32.SystemEvents.PaletteChanged","Microsoft::Win32::SystemEvents::PaletteChanged","Microsoft.Win32.SystemEvents.PowerModeChanged","Microsoft::Win32::SystemEvents::PowerModeChanged","Microsoft.Win32.SystemEvents.SessionEnded","Microsoft::Win32::SystemEvents::SessionEnded","Microsoft.Win32.SystemEvents.SessionEnding","Microsoft::Win32::SystemEvents::SessionEnding","Microsoft.Win32.SystemEvents.SessionSwitch","Microsoft::Win32::SystemEvents::SessionSwitch","Microsoft.Win32.SystemEvents.TimeChanged","Microsoft::Win32::SystemEvents::TimeChanged","Microsoft.Win32.SystemEvents.TimerElapsed","Microsoft::Win32::SystemEvents::TimerElapsed","Microsoft.Win32.SystemEvents.UserPreferenceChanged","Microsoft::Win32::SystemEvents::UserPreferenceChanged","Microsoft.Win32.SystemEvents.UserPreferenceChanging","Microsoft::Win32::SystemEvents::UserPreferenceChanging"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"59f5d603-8a3a-4492-1442-45c5f97f005b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.Win32/SystemEvents.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SystemEvents class | Microsoft Docs","_op_ogTitle":"SystemEvents class","description":"Provides access to system event notifications. This class cannot be inherited.\n","toc_asset_id":"_splitted/Microsoft.Win32/toc.json","toc_rel":"_splitted/Microsoft.Win32/toc.json","source_url":"","ms.assetid":"Microsoft.Win32.SystemEvents","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.win32.systemevents","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.win32.systemevents","fileRelativePath":"Microsoft.Win32.SystemEvents.html"},"themesRelativePathToOutputRoot":"_themes/"}