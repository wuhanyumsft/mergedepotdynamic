{"content":"    \r\n    <h1 id=\"System_Windows_Automation_GridPattern_GridPatternInformation\">\r\n      <span class=\"lang-csharp\">GridPattern+GridPatternInformation</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to the property values of a <a class=\"xref\" href=\"system.windows.automation.gridpattern\" data-linktype=\"relative-path\">GridPattern</a> object using its <span class=\"xref\">stem.Windows.Automation.GridPattern.Current*</span> or <span class=\"xref\">stem.Windows.Automation.GridPattern.Cached*</span> accessors.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct GridPattern.GridPatternInformation</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">GridPattern+GridPatternInformation</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_GridPattern_GridPatternInformation_ColumnCount\" data-linktype=\"self-bookmark\">ColumnCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of columns in a grid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_GridPattern_GridPatternInformation_RowCount\" data-linktype=\"self-bookmark\">RowCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the total number of rows in a grid.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_GridPattern_GridPatternInformation_ColumnCount\">\r\n    \r\n            <a id=\"System_Windows_Automation_GridPattern_GridPatternInformation_ColumnCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of columns in a grid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The total number of columns in a grid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Hidden rows and columns, depending on the provider implementation, may be loaded in the UI Automation tree and will therefore be reflected in the <a class=\"xref\" href=\"system.windows.automation.gridpattern.gridpatterninformation#System_Windows_Automation_GridPattern_GridPatternInformation_RowCount_\" data-linktype=\"relative-path\">RowCount</a> and ColumnCount properties. If the hidden rows and columns have not yet been loaded they are not counted.  </p>\n<p> The default value is 0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an event listener is set up for a grid structure change such as a row or column grid item being added or removed from the grid.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAGridPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up grid event listeners.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void SetGridEventListeners(AutomationElement targetControl)\n{\n    StructureChangedEventHandler gridStructureChangedListener = \n        new StructureChangedEventHandler(OnGridStructureChange);\n    Automation.AddStructureChangedEventHandler(\n        targetControl, \n        TreeScope.Element, \n        gridStructureChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAGridPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up grid event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetGridEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim gridStructureChangedListener As StructureChangedEventHandler = _\n    AddressOf OnGridStructureChange\n    Automation.AddStructureChangedEventHandler( _\n    targetControl, TreeScope.Element, gridStructureChangedListener)\nEnd Sub &#39;SetGridEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIAGridPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for grid structure change.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnGridStructureChange(\n    object src, StructureChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    GridPattern gridPattern = GetGridPattern(sourceElement);\n\n    if (gridPattern == null)\n    {\n        return;\n    }\n\n    if (gridPattern.Current.ColumnCount != columnCount)\n    {\n        // Column item added.\n    }\n    else if (gridPattern.Current.RowCount != rowCount)\n    {\n        // Row item added.\n    }\n}\n// Member variables to track current row and column counts.\nprivate int columnCount = 0;\nprivate int rowCount = 0;\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles our application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAGridPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for grid structure change.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnGridStructureChange( _\nByVal src As Object, ByVal e As StructureChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement) \n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    Dim gridPattern As GridPattern = GetGridPattern(sourceElement)\n\n    If gridPattern Is Nothing Then\n        Return\n    End If\n\n    If gridPattern.Current.ColumnCount &lt;&gt; columnCount Then\n        &#39; Column item added.\n    ElseIf gridPattern.Current.RowCount &lt;&gt; rowCount Then\n        &#39; Row item added.\n    End If\n\nEnd Sub &#39;OnGridStructureChange \n&#39; Member variables to track current row and column counts.\nPrivate columnCount As Integer = 0\nPrivate rowCount As Integer = 0\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles our application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit( _\nByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\nEnd Sub &#39;OnExit\n\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAGridPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a GridPattern control pattern from an \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A GridPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate GridPattern GetGridPattern(\n    AutomationElement targetControl)\n{\n    GridPattern gridPattern = null;\n\n    try\n    {\n        gridPattern =\n            targetControl.GetCurrentPattern(\n            GridPattern.Pattern)\n            as GridPattern;\n    }\n    // Object doesn&#39;t support the \n    // GridPattern control pattern\n    catch (InvalidOperationException)\n    {\n        return null;\n    }\n\n    return gridPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAGridPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a GridPattern control pattern from an \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A GridPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetGridPattern( _\nByVal targetControl As AutomationElement) As GridPattern\n    Dim gridPattern As GridPattern = Nothing\n\n    Try\n        gridPattern = DirectCast( _\n        targetControl.GetCurrentPattern( _\n        gridPattern.Pattern), GridPattern)\n    Catch exc As InvalidOperationException\n        &#39; Object doesn&#39;t support the \n        &#39; GridPattern control pattern\n        Return Nothing\n    End Try\n\n    Return gridPattern\nEnd Function &#39;GetGridPattern    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_GridPattern_GridPatternInformation_RowCount\">\r\n    \r\n            <a id=\"System_Windows_Automation_GridPattern_GridPatternInformation_RowCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the total number of rows in a grid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The total number of rows in a grid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Hidden rows and columns, depending on the provider implementation, may be loaded in the UI Automation tree and will therefore be reflected in the RowCount and <a class=\"xref\" href=\"system.windows.automation.gridpattern.gridpatterninformation#System_Windows_Automation_GridPattern_GridPatternInformation_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a> properties. If the hidden rows and columns have not yet been loaded they will not be counted.  </p>\n<p> The default value is 0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an event listener is set up for a grid structure change such as a row or column grid item being added or removed from the grid.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAGridPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Set up grid event listeners.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void SetGridEventListeners(AutomationElement targetControl)\n{\n    StructureChangedEventHandler gridStructureChangedListener = \n        new StructureChangedEventHandler(OnGridStructureChange);\n    Automation.AddStructureChangedEventHandler(\n        targetControl, \n        TreeScope.Element, \n        gridStructureChangedListener);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAGridPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Set up grid event listeners.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub SetGridEventListeners( _\nByVal targetControl As AutomationElement)\n    Dim gridStructureChangedListener As StructureChangedEventHandler = _\n    AddressOf OnGridStructureChange\n    Automation.AddStructureChangedEventHandler( _\n    targetControl, TreeScope.Element, gridStructureChangedListener)\nEnd Sub &#39;SetGridEventListeners    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIAGridPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Event handler for grid structure change.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void OnGridStructureChange(\n    object src, StructureChangedEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n\n    GridPattern gridPattern = GetGridPattern(sourceElement);\n\n    if (gridPattern == null)\n    {\n        return;\n    }\n\n    if (gridPattern.Current.ColumnCount != columnCount)\n    {\n        // Column item added.\n    }\n    else if (gridPattern.Current.RowCount != rowCount)\n    {\n        // Row item added.\n    }\n}\n// Member variables to track current row and column counts.\nprivate int columnCount = 0;\nprivate int rowCount = 0;\n\n///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Handles our application shutdown.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n///--------------------------------------------------------------------\nprotected override void OnExit(System.Windows.ExitEventArgs args)\n{\n    Automation.RemoveAllEventHandlers();\n    base.OnExit(args);\n}\n\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAGridPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Event handler for grid structure change.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub OnGridStructureChange( _\nByVal src As Object, ByVal e As StructureChangedEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips\n    &#39; can disappear before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement) \n    Catch exc As ElementNotAvailableException\n        Return\n    End Try\n\n    Dim gridPattern As GridPattern = GetGridPattern(sourceElement)\n\n    If gridPattern Is Nothing Then\n        Return\n    End If\n\n    If gridPattern.Current.ColumnCount &lt;&gt; columnCount Then\n        &#39; Column item added.\n    ElseIf gridPattern.Current.RowCount &lt;&gt; rowCount Then\n        &#39; Row item added.\n    End If\n\nEnd Sub &#39;OnGridStructureChange \n&#39; Member variables to track current row and column counts.\nPrivate columnCount As Integer = 0\nPrivate rowCount As Integer = 0\n\n&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles our application shutdown.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;args&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nProtected Overrides Sub OnExit( _\nByVal args As System.Windows.ExitEventArgs)\n    Automation.RemoveAllEventHandlers()\n    MyBase.OnExit(args)\nEnd Sub &#39;OnExit\n\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAGridPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a GridPattern control pattern from an \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A GridPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate GridPattern GetGridPattern(\n    AutomationElement targetControl)\n{\n    GridPattern gridPattern = null;\n\n    try\n    {\n        gridPattern =\n            targetControl.GetCurrentPattern(\n            GridPattern.Pattern)\n            as GridPattern;\n    }\n    // Object doesn&#39;t support the \n    // GridPattern control pattern\n    catch (InvalidOperationException)\n    {\n        return null;\n    }\n\n    return gridPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAGridPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a GridPattern control pattern from an \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A GridPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetGridPattern( _\nByVal targetControl As AutomationElement) As GridPattern\n    Dim gridPattern As GridPattern = Nothing\n\n    Try\n        gridPattern = DirectCast( _\n        targetControl.GetCurrentPattern( _\n        gridPattern.Pattern), GridPattern)\n    Catch exc As InvalidOperationException\n        &#39; Object doesn&#39;t support the \n        &#39; GridPattern control pattern\n        Return Nothing\n    End Try\n\n    Return gridPattern\nEnd Function &#39;GetGridPattern    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.GridPattern.GridPatternInformation.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.GridPattern.GridPatternInformation.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.GridPattern+GridPatternInformation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.GridPattern+GridPatternInformation.ColumnCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.GridPattern+GridPatternInformation.RowCount\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5816174f-e70c-c834-942d-3baf81b55db1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the property values of a  object using its  or  accessors.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.GridPattern.GridPatternInformation\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.GridPattern.GridPatternInformation.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.GridPattern.GridPatternInformation.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.GridPattern+GridPatternInformation","System.Windows.Automation.GridPattern+GridPatternInformation.ColumnCount","System.Windows.Automation.GridPattern+GridPatternInformation.RowCount"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.GridPattern.GridPatternInformation","System::Windows::Automation::GridPattern::GridPatternInformation","System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount","System::Windows::Automation::GridPattern::GridPatternInformation::ColumnCount","System.Windows.Automation.GridPattern.GridPatternInformation.RowCount","System::Windows::Automation::GridPattern::GridPatternInformation::RowCount"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5816174f-e70c-c834-942d-3baf81b55db1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/GridPattern+GridPatternInformation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridPattern+GridPatternInformation struct | Microsoft Docs","_op_ogTitle":"GridPattern+GridPatternInformation struct","description":"Provides access to the property values of a  object using its  or  accessors.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.GridPattern.GridPatternInformation","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.gridpattern.gridpatterninformation","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.gridpattern.gridpatterninformation","fileRelativePath":"System.Windows.Automation.GridPattern.GridPatternInformation.html"},"themesRelativePathToOutputRoot":"_themes/"}