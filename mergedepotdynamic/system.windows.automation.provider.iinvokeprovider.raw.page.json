{"content":"    \r\n    <h1 id=\"System_Windows_Automation_Provider_IInvokeProvider\">\r\n      <span class=\"lang-csharp\">IInvokeProvider</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Runtime.InteropServices.Guid(&quot;54fcb24b-e18e-47a2-b4d3-eccbe77599a2&quot;)]\n[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\npublic interface IInvokeProvider</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Implemented on a UI Automation provider that must support the <a class=\"xref\" href=\"system.windows.automation.invokepattern\" data-linktype=\"relative-path\">InvokePattern</a> control pattern.  </p>\n<p> Controls implement IInvokeProvider if the same behavior is not exposed through another control pattern provider. For example, if the <a class=\"xref\" href=\"system.windows.automation.invokepattern#System_Windows_Automation_InvokePattern_Invoke_\" data-linktype=\"relative-path\">Invoke</a> method on a control performs the same action as the <a class=\"xref\" href=\"system.windows.automation.expandcollapsepattern#System_Windows_Automation_ExpandCollapsePattern_Expand_\" data-linktype=\"relative-path\">Expand</a> or <a class=\"xref\" href=\"system.windows.automation.expandcollapsepattern#System_Windows_Automation_ExpandCollapsePattern_Collapse_\" data-linktype=\"relative-path\">Collapse</a> method, the control should not implement IInvokeProvider.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_IInvokeProvider_Invoke\" data-linktype=\"self-bookmark\">Invoke()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends a request to activate a control and initiate its single, unambiguous action.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_IInvokeProvider_Invoke\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_IInvokeProvider_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke()</div>        \r\n          </div>\r\n    \r\n            <p>Sends a request to activate a control and initiate its single, unambiguous action.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invoke ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.elementnotenabledexception\" data-linktype=\"relative-path\">ElementNotEnabledException</a></div>\r\n                  </div>\r\n                  <p>If the control is not enabled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Invoke is an asynchronous call and must return immediately without blocking.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked. Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.  </p>\n</div>\n<p> Invoke raises the <a class=\"xref\" href=\"system.windows.automation.invokepatternidentifiers#System_Windows_Automation_InvokePatternIdentifiers_InvokedEvent\" data-linktype=\"relative-path\">InvokedEvent</a> event. If possible, the event should be raised after the control has completed its associated action.  </p>\n<p> <a class=\"xref\" href=\"system.windows.automation.invokepatternidentifiers#System_Windows_Automation_InvokePatternIdentifiers_InvokedEvent\" data-linktype=\"relative-path\">InvokedEvent</a> should be raised before servicing the Invoke request in the following scenarios:  </p>\n<ul>\n<li><p>It is not possible or practical to wait until the action is complete.  </p>\n</li>\n<li><p>The action requires user interaction.  </p>\n</li>\n<li><p>The action is time-consuming and will cause the calling client to block for a significant length of time.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example implements the Invoke method on the MouseDown event handler of a control. Assume that <code>providerControl</code> is a member variable that was initialized when the class was constructed.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAProvider_snip#106\">/// &lt;summary&gt;\n/// Responds to an InvokePattern.Invoke by simulating a MouseDown event.\n/// &lt;/summary&gt;\n/// &lt;remarks&gt;\n/// ProviderControl is a button control object that also implements \n/// IRawElementProviderSimple.\n/// &lt;/remarks&gt;\nvoid IInvokeProvider.Invoke()\n{\n    // If the control is not enabled, we&#39;re responsible for letting UIAutomation know.\n    // It catches the exception and then throws it to the client.\n    if (false == (bool)rawElementProvider.GetPropertyValue(AutomationElementIdentifiers.IsEnabledProperty.Id))\n    {\n        throw new ElementNotEnabledException();\n    }\n\n    // Create arguments for the event. The parameters aren&#39;t used.\n    MouseEventArgs mouseArgs = new MouseEventArgs(MouseButtons.Left, 1, 0, 0, 0);\n\n    // Invoke the MouseDown handler. We cannot call MyControl_MouseDown directly, \n    // because it is illegal to update the UI from a different thread.\n    MouseEventHandler onMouseEvent = ProviderControl.RootButtonControl_MouseDown;\n    ProviderControl.BeginInvoke(onMouseEvent, new object[] { this, mouseArgs });\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Provider.IInvokeProvider.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Provider.IInvokeProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.IInvokeProvider\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.IInvokeProvider.Invoke\">\r\n<meta name=\"APILocation\" content=\"UIAutomationProvider.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"26443062-a595-0a98-f143-b24d7047f6cc\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Automation.Provider\\IInvokeProvider.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation.Provider/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.Provider.IInvokeProvider\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Provider.IInvokeProvider.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Provider.IInvokeProvider.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.Provider.IInvokeProvider","System.Windows.Automation.Provider.IInvokeProvider.Invoke"],"api_location":["UIAutomationProvider.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.Provider.IInvokeProvider","System::Windows::Automation::Provider::IInvokeProvider","System.Windows.Automation.Provider.IInvokeProvider.Invoke","System::Windows::Automation::Provider::IInvokeProvider::Invoke"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"26443062-a595-0a98-f143-b24d7047f6cc","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Automation.Provider\\IInvokeProvider.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation.Provider/IInvokeProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IInvokeProvider interface | Microsoft Docs","_op_ogTitle":"IInvokeProvider interface","description":"Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.\n","toc_asset_id":"_splitted/System.Windows.Automation.Provider/toc.json","toc_rel":"_splitted/System.Windows.Automation.Provider/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.Provider.IInvokeProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.provider.iinvokeprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.provider.iinvokeprovider","fileRelativePath":"System.Windows.Automation.Provider.IInvokeProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}