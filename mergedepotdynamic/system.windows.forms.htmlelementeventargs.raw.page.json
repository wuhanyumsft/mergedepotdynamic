{"content":"    \r\n    <h1 id=\"System_Windows_Forms_HtmlElementEventArgs\">\r\n      <span class=\"lang-csharp\">HtmlElementEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the events defined on <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> and <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class HtmlElementEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HtmlElementEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>HtmlElementEventArgs encapsulates the same information found on the <code>window.event</code> object when programming against the unmanaged HTML DOM or when writing Active Script for HTML pages.  </p>\n<p> In most cases, you can use <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_ToElement_\" data-linktype=\"relative-path\">ToElement</a> to find the HTML element that is receiving the event action, and <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_FromElement_\" data-linktype=\"relative-path\">FromElement</a> to find the HTML element that the current event is causing us to leave. However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.  </p>\n<p> Many events in the HTML DOM are sent to their parent elements unless they are cancelled. This is known as event bubbling. If a <code>SPAN</code> inside of a <code>DIV</code> receives a click, then a click event is raised for the <code>SPAN</code> first, then for the <code>DIV</code>, and finally for the HTML page&#39;s <code>BODY</code> element. <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_BubbleEvent_\" data-linktype=\"relative-path\">BubbleEvent</a> controls whether an event will behave in this manner or not.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_AltKeyPressed\" data-linktype=\"self-bookmark\">AltKeyPressed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the ALT key was pressed when this event occurred.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_BubbleEvent\" data-linktype=\"self-bookmark\">BubbleEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition\" data-linktype=\"self-bookmark\">ClientMousePosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the position of the mouse cursor in the document&#39;s client area.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_CtrlKeyPressed\" data-linktype=\"self-bookmark\">CtrlKeyPressed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the CTRL key was pressed when this event occurred.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_EventType\" data-linktype=\"self-bookmark\">EventType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the event that was raised.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_FromElement\" data-linktype=\"self-bookmark\">FromElement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> the mouse pointer is moving away from.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_KeyPressedCode\" data-linktype=\"self-bookmark\">KeyPressedCode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ASCII value of the keyboard character typed in a <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>, <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>, or <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_MouseButtonsPressed\" data-linktype=\"self-bookmark\">MouseButtonsPressed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the mouse button that was clicked during a <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> or <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_MousePosition\" data-linktype=\"self-bookmark\">MousePosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the position of the mouse cursor relative to a relatively positioned parent element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition\" data-linktype=\"self-bookmark\">OffsetMousePosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the position of the mouse cursor relative to the element that raises the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_ReturnValue\" data-linktype=\"self-bookmark\">ReturnValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the return value of the handled event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_ShiftKeyPressed\" data-linktype=\"self-bookmark\">ShiftKeyPressed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the SHIFT key was pressed when this event occurred.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_HtmlElementEventArgs_ToElement\" data-linktype=\"self-bookmark\">ToElement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> toward which the user is moving the mouse pointer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_AltKeyPressed\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_AltKeyPressed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AltKeyPressed</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the ALT key was pressed when this event occurred.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AltKeyPressed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> is the ALT key was pressed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_BubbleEvent\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_BubbleEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BubbleEvent</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BubbleEvent { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event bubbles; <code>false</code> if it does not.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Not all events in the Document Object Model bubble. All of the events exposed by the <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> managed wrapper bubble with the exception of <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Stop\" data-linktype=\"relative-path\">Stop</a>. For <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a>, the <code>Error</code> and <code>Load</code> events do not bubble. Setting <code>BubbleEvent</code> to <code>true</code> during any of these events will have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientMousePosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the position of the mouse cursor in the document&#39;s client area.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point ClientMousePosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>The current position of the mouse cursor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>ClientMousePosition</code> gives the mouse position of the cursor relative to the upper-left corner of the document. Use <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_MousePosition_\" data-linktype=\"relative-path\">MousePosition</a> if you need the mouse coordinates relative to the element that raised the event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following HTML file demonstrates relative positioning of a <code>TABLE</code> inside of a <code>BODY</code> tag.  </p>\n<pre><code>&lt;HTML&gt;  \n\n&lt;BODY&gt;  \n\n    &lt;TABLE style=&quot;position:relative;top:100px;left:100px;&quot;&gt;  \n        &lt;TR&gt;  \n            &lt;TD&gt;Text&lt;/TD&gt;  \n            &lt;TD&gt;More text&lt;/TD&gt;  \n        &lt;/TR&gt;  \n    &lt;/TABLE&gt;  \n\n&lt;/BODY&gt;  \n\n&lt;/HTML&gt;\n</code></pre><p> The following code example displays the difference between <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_MousePosition_\" data-linktype=\"relative-path\">MousePosition</a>, ClientMousePosition, and <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition_\" data-linktype=\"relative-path\">OffsetMousePosition</a> when the user clicks on an element of the <code>TABLE</code>. ClientMousePosition will display coordinates relative to the upper-left corner of the document&#39;s client area. <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_MousePosition_\" data-linktype=\"relative-path\">MousePosition</a> will display coordinates relative to the upper-left corner of the <code>TABLE</code>. If you click on one of the lines of text, <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition_\" data-linktype=\"relative-path\">OffsetMousePosition</a> will display coordinates relative to that <code>TD</code> element.  </p>\n<p> This example requires that you have configured <code>Document_MouseDown</code> as a handler for the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event on <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlElementEventArgs#2\">void Document_Click(object sender, HtmlElementEventArgs e)\n{\n    HtmlDocument doc = webBrowser1.Document;\n    string msg = &quot;ClientMousePosition: &quot; + e.ClientMousePosition.ToString() + &quot;<br>&quot; +\n        &quot;MousePosition: &quot; + e.MousePosition + &quot;<br>&quot; +\n        &quot;OffsetMousePosition: &quot; + e.OffsetMousePosition;\n    MessageBox.Show(msg);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlElementEventArgs#2\">Private Sub HtmlDocument_Click(ByVal sender As Object, ByVal e As HtmlElementEventArgs)\n    Dim doc As HtmlDocument = webBrowser1.Document\n    Dim msg As String = &quot;ClientMousePosition: &quot; &amp; e.ClientMousePosition.ToString() &amp; vbCrLf &amp; _\n        &quot;MousePosition: &quot; &amp; e.MousePosition.ToString() &amp; vbCrLf &amp; _\n        &quot;OffsetMousePosition: &quot; &amp; e.OffsetMousePosition.ToString()\n    MessageBox.Show(msg)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_CtrlKeyPressed\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_CtrlKeyPressed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CtrlKeyPressed</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the CTRL key was pressed when this event occurred.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CtrlKeyPressed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the CTRL key was pressed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_EventType\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_EventType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the event that was raised.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string EventType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_FromElement\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_FromElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromElement</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> the mouse pointer is moving away from.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement FromElement { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> the mouse pointer is moving away from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>FromElement will have a valid value during mouse events such as <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a> and <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_KeyPressedCode\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_KeyPressedCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyPressedCode</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ASCII value of the keyboard character typed in a <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>, <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>, or <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int KeyPressedCode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The ASCII value of the composed keyboard entry.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_MouseButtonsPressed\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_MouseButtonsPressed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseButtonsPressed</div>        \r\n          </div>\r\n    \r\n            <p>Gets the mouse button that was clicked during a <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> or <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.MouseButtons MouseButtonsPressed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mousebuttons\" data-linktype=\"relative-path\">MouseButtons</a></div>\r\n                  </div>\r\n                  <p>The mouse button that was clicked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_MousePosition\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_MousePosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MousePosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the position of the mouse cursor relative to a relatively positioned parent element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point MousePosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>The position of the mouse cursor relative to the upper-left corner of the parent of the element that raised the event, if the parent element is relatively positioned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Relative positioning is used in HTML to place an element on a page in relation to its parent.  </p>\n<p> If an element is relatively positioned, this property will return the same result as <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition_\" data-linktype=\"relative-path\">ClientMousePosition</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following HTML file demonstrates relative positioning of a <code>TABLE</code> inside of a <code>BODY</code> tag.  </p>\n<pre><code>&lt;HTML&gt;  \n\n&lt;BODY&gt;  \n\n    &lt;TABLE style=&quot;position:relative;top:100px;left:100px;&quot;&gt;  \n        &lt;TR&gt;  \n            &lt;TD&gt;Text/TD&gt;  \n            &lt;TD&gt;More text&lt;/TD&gt;  \n        &lt;/TR&gt;  \n    &lt;/TABLE&gt;  \n\n&lt;/BODY&gt;  \n\n&lt;/HTML&gt;\n</code></pre><p> The following code example displays the difference between MousePosition, <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition_\" data-linktype=\"relative-path\">ClientMousePosition</a>, and <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition_\" data-linktype=\"relative-path\">OffsetMousePosition</a> when the user clicks on an element of the <code>TABLE</code>. <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition_\" data-linktype=\"relative-path\">ClientMousePosition</a> will display coordinates relative to the upper-left corner of the document&#39;s client area. MousePosition will display coordinates relative to the upper-left corner of the <code>TABLE</code>. If you click on one of the lines of text, <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition_\" data-linktype=\"relative-path\">OffsetMousePosition</a> will display coordinates relative to that <code>TD</code> element.  </p>\n<p> This example requires that you have configured <code>Document_MouseDown</code> as a handler for the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event on <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlElementEventArgs#2\">void Document_Click(object sender, HtmlElementEventArgs e)\n{\n    HtmlDocument doc = webBrowser1.Document;\n    string msg = &quot;ClientMousePosition: &quot; + e.ClientMousePosition.ToString() + &quot;<br>&quot; +\n        &quot;MousePosition: &quot; + e.MousePosition + &quot;<br>&quot; +\n        &quot;OffsetMousePosition: &quot; + e.OffsetMousePosition;\n    MessageBox.Show(msg);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlElementEventArgs#2\">Private Sub HtmlDocument_Click(ByVal sender As Object, ByVal e As HtmlElementEventArgs)\n    Dim doc As HtmlDocument = webBrowser1.Document\n    Dim msg As String = &quot;ClientMousePosition: &quot; &amp; e.ClientMousePosition.ToString() &amp; vbCrLf &amp; _\n        &quot;MousePosition: &quot; &amp; e.MousePosition.ToString() &amp; vbCrLf &amp; _\n        &quot;OffsetMousePosition: &quot; &amp; e.OffsetMousePosition.ToString()\n    MessageBox.Show(msg)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_OffsetMousePosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetMousePosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the position of the mouse cursor relative to the element that raises the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point OffsetMousePosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>The mouse position relative to the element that raises the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following HTML file demonstrates relative positioning of a <code>TABLE</code> inside of a <code>BODY</code> tag.  </p>\n<pre><code>&lt;HTML&gt;  \n\n&lt;BODY&gt;  \n\n    &lt;TABLE style=&quot;position:relative;top:100px;left:100px;&quot;&gt;  \n        &lt;TR&gt;  \n            &lt;TD&gt;Text&lt;/TD&gt;  \n            &lt;TD&gt;More text&lt;/TD&gt;  \n        &lt;/TR&gt;  \n    &lt;/TABLE&gt;  \n\n&lt;/BODY&gt;  \n\n&lt;/HTML&gt;\n</code></pre><p> The following code example displays the difference between <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_MousePosition_\" data-linktype=\"relative-path\">MousePosition</a>, <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition_\" data-linktype=\"relative-path\">ClientMousePosition</a> and OffsetMousePosition when the user clicks on an element of the <code>TABLE</code>. <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_ClientMousePosition_\" data-linktype=\"relative-path\">ClientMousePosition</a> will display coordinates relative to the upper-left corner of the document&#39;s client area. <a class=\"xref\" href=\"system.windows.forms.htmlelementeventargs#System_Windows_Forms_HtmlElementEventArgs_MousePosition_\" data-linktype=\"relative-path\">MousePosition</a> will display coordinates relative to the upper-left corner of the <code>TABLE</code>. If you click on one of the lines of text, OffsetMousePosition will display coordinates relative to that <code>TD</code> element.  </p>\n<p> This example requires that you have configured <code>Document_MouseDown</code> as a handler for the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event on <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.HtmlElementEventArgs#2\">void Document_Click(object sender, HtmlElementEventArgs e)\n{\n    HtmlDocument doc = webBrowser1.Document;\n    string msg = &quot;ClientMousePosition: &quot; + e.ClientMousePosition.ToString() + &quot;<br>&quot; +\n        &quot;MousePosition: &quot; + e.MousePosition + &quot;<br>&quot; +\n        &quot;OffsetMousePosition: &quot; + e.OffsetMousePosition;\n    MessageBox.Show(msg);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.HtmlElementEventArgs#2\">Private Sub HtmlDocument_Click(ByVal sender As Object, ByVal e As HtmlElementEventArgs)\n    Dim doc As HtmlDocument = webBrowser1.Document\n    Dim msg As String = &quot;ClientMousePosition: &quot; &amp; e.ClientMousePosition.ToString() &amp; vbCrLf &amp; _\n        &quot;MousePosition: &quot; &amp; e.MousePosition.ToString() &amp; vbCrLf &amp; _\n        &quot;OffsetMousePosition: &quot; &amp; e.OffsetMousePosition.ToString()\n    MessageBox.Show(msg)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_ReturnValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_ReturnValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReturnValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the return value of the handled event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ReturnValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event has been handled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_ShiftKeyPressed\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_ShiftKeyPressed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShiftKeyPressed</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the SHIFT key was pressed when this event occurred.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShiftKeyPressed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the SHIFT key was pressed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_HtmlElementEventArgs_ToElement\">\r\n    \r\n            <a id=\"System_Windows_Forms_HtmlElementEventArgs_ToElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToElement</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a> toward which the user is moving the mouse pointer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.HtmlElement ToElement { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.htmlelement\" data-linktype=\"relative-path\">HtmlElement</a></div>\r\n                  </div>\r\n                  <p>The element toward which the mouse pointer is moving.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ToElement will have a valid value during mouse events such as <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a> and <a class=\"xref\" href=\"system.windows.forms.htmlelement#System_Windows_Forms_HtmlElement_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.htmldocument\" data-linktype=\"relative-path\">HtmlDocument</a> named <code>HtmlDocument1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.htmldocument#System_Windows_Forms_HtmlDocument_Click\" data-linktype=\"relative-path\">System.Windows.Forms.HtmlDocument.Click</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#422\">private void HtmlDocument1_Click(Object sender, HtmlElementEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Click Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#422\">Private Sub HtmlDocument1_Click(sender as Object, e as HtmlElementEventArgs) _ \n     Handles HtmlDocument1.Click\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MouseButtonsPressed&quot;, e.MouseButtonsPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClientMousePosition&quot;, e.ClientMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OffsetMousePosition&quot;, e.OffsetMousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MousePosition&quot;, e.MousePosition)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;BubbleEvent&quot;, e.BubbleEvent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;KeyPressedCode&quot;, e.KeyPressedCode)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AltKeyPressed&quot;, e.AltKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CtrlKeyPressed&quot;, e.CtrlKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ShiftKeyPressed&quot;, e.ShiftKeyPressed)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EventType&quot;, e.EventType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ReturnValue&quot;, e.ReturnValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FromElement&quot;, e.FromElement)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ToElement&quot;, e.ToElement)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Click Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.HtmlElementEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.HtmlElementEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.BubbleEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.EventType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.FromElement\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.MousePosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.ReturnValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.HtmlElementEventArgs.ToElement\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"77ad348e-bce7-3449-970e-4668da79d31a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\HtmlElementEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the events defined on  and .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.HtmlElementEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.HtmlElementEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.HtmlElementEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.HtmlElementEventArgs","System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed","System.Windows.Forms.HtmlElementEventArgs.BubbleEvent","System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition","System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed","System.Windows.Forms.HtmlElementEventArgs.EventType","System.Windows.Forms.HtmlElementEventArgs.FromElement","System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode","System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed","System.Windows.Forms.HtmlElementEventArgs.MousePosition","System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition","System.Windows.Forms.HtmlElementEventArgs.ReturnValue","System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed","System.Windows.Forms.HtmlElementEventArgs.ToElement"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.HtmlElementEventArgs","System::Windows::Forms::HtmlElementEventArgs","System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed","System::Windows::Forms::HtmlElementEventArgs::AltKeyPressed","System.Windows.Forms.HtmlElementEventArgs.BubbleEvent","System::Windows::Forms::HtmlElementEventArgs::BubbleEvent","System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition","System::Windows::Forms::HtmlElementEventArgs::ClientMousePosition","System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed","System::Windows::Forms::HtmlElementEventArgs::CtrlKeyPressed","System.Windows.Forms.HtmlElementEventArgs.EventType","System::Windows::Forms::HtmlElementEventArgs::EventType","System.Windows.Forms.HtmlElementEventArgs.FromElement","System::Windows::Forms::HtmlElementEventArgs::FromElement","System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode","System::Windows::Forms::HtmlElementEventArgs::KeyPressedCode","System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed","System::Windows::Forms::HtmlElementEventArgs::MouseButtonsPressed","System.Windows.Forms.HtmlElementEventArgs.MousePosition","System::Windows::Forms::HtmlElementEventArgs::MousePosition","System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition","System::Windows::Forms::HtmlElementEventArgs::OffsetMousePosition","System.Windows.Forms.HtmlElementEventArgs.ReturnValue","System::Windows::Forms::HtmlElementEventArgs::ReturnValue","System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed","System::Windows::Forms::HtmlElementEventArgs::ShiftKeyPressed","System.Windows.Forms.HtmlElementEventArgs.ToElement","System::Windows::Forms::HtmlElementEventArgs::ToElement"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"77ad348e-bce7-3449-970e-4668da79d31a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\HtmlElementEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/HtmlElementEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HtmlElementEventArgs class | Microsoft Docs","_op_ogTitle":"HtmlElementEventArgs class","description":"Provides data for the events defined on  and .\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.HtmlElementEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.htmlelementeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.htmlelementeventargs","fileRelativePath":"System.Windows.Forms.HtmlElementEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}