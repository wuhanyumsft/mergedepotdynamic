{"content":"    \r\n    <h1 id=\"System_ComponentModel_Design_Serialization_INameCreationService\">\r\n      <span class=\"lang-csharp\">INameCreationService</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a service that can generate unique names for objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface INameCreationService</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A <a class=\"xref\" href=\"system.componentmodel.design.serialization.designerloader\" data-linktype=\"relative-path\">DesignerLoader</a> can implement this service to provide a way for a designer to create new, unique names for objects. If this service is not available, the designer uses a default implementation.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_INameCreationService_CreateName_System_ComponentModel_IContainer_System_Type_\" data-linktype=\"self-bookmark\">CreateName(IContainer,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new name that is unique to all components in the specified container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_INameCreationService_IsValidName_System_String_\" data-linktype=\"self-bookmark\">IsValidName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the specified name is valid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_INameCreationService_ValidateName_System_String_\" data-linktype=\"self-bookmark\">ValidateName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the specified name is valid.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_INameCreationService_CreateName_System_ComponentModel_IContainer_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_INameCreationService_CreateName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateName(IContainer,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new name that is unique to all components in the specified container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CreateName (System.ComponentModel.IContainer container, Type dataType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>container</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The container where the new object is added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data type of the object that receives the name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A unique name for the data type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns a name for the new object that is unique within the specified container.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an example CreateName method implementation. The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.  </p>\n<pre><code class=\"lang-vb\" name=\"INameCreationServiceExample#2\">    &#39; Creates an identifier for a particular data type that does not conflict \n    &#39; with the identifiers of any components in the specified collection\n    Public Function CreateName(ByVal container As System.ComponentModel.IContainer, ByVal dataType As System.Type) As String Implements INameCreationService.CreateName\n        &#39; Create a basic type name string\n        Dim baseName As String = dataType.Name\n        Dim uniqueID As Integer = 1\n\n        Dim unique As Boolean = False\n        &#39; Continue to increment uniqueID numeral until a unique ID is located.\n        While Not unique\n            unique = True\n            &#39; Check each component in the container for a matching \n            &#39; base type name and unique ID.\n            Dim i As Integer\n            For i = 0 To container.Components.Count - 1\n                &#39; Check component name for match with unique ID string.\n                If container.Components(i).Site.Name.StartsWith((baseName + uniqueID.ToString())) Then\n                    &#39; If a match is encountered, set flag to recycle \n                    &#39; collection, increment ID numeral, and restart.\n                    unique = False\n                    uniqueID += 1\n                    Exit For\n                End If\n            Next i\n        End While\n\n        Return baseName + uniqueID.ToString()\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"INameCreationServiceExample#2\">        // Creates an identifier for a particular data type that does not conflict \n        // with the identifiers of any components in the specified collection.\n        public string CreateName(System.ComponentModel.IContainer container, System.Type dataType)\n        {\n            // Create a basic type name string.\n            string baseName = dataType.Name;\n            int uniqueID = 1;\n\n            bool unique = false;            \n            // Continue to increment uniqueID numeral until a \n            // unique ID is located.\n            while( !unique )\n            {\n                unique = true;\n                // Check each component in the container for a matching \n                // base type name and unique ID.\n                for(int i=0; i&lt;container.Components.Count; i++)\n                {\n                    // Check component name for match with unique ID string.\n                    if( container.Components[i].Site.Name.StartsWith(baseName+uniqueID.ToString()) )\n                    {\n                        // If a match is encountered, set flag to recycle \n                        // collection, increment ID numeral, and restart.\n                        unique = false;\n                        uniqueID++;\n                        break;\n                    }\n                }\n            }\n            \n            return baseName+uniqueID.ToString();\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"INameCreationServiceExample#2\">      // Creates an identifier for a particular data type that does not conflict \n      // with the identifiers of any components in the specified collection.\n      virtual String^ CreateName( System::ComponentModel::IContainer^ container, System::Type^ dataType )\n      {\n         // Create a basic type name string.\n         String^ baseName = dataType-&gt;Name;\n         int uniqueID = 1;\n         bool unique = false;\n\n         // Continue to increment uniqueID numeral until a \n         // unique ID is located.\n         while (  !unique )\n         {\n            unique = true;\n\n            // Check each component in the container for a matching \n            // base type name and unique ID.\n            for ( int i = 0; i &lt; container-&gt;Components-&gt;Count; i++ )\n            {\n               // Check component name for match with unique ID string.\n               if ( container-&gt;Components[ i ]-&gt;Site-&gt;Name-&gt;StartsWith( String::Concat( baseName, uniqueID ) ) )\n               {\n                  // If a match is encountered, set flag to recycle \n                  // collection, increment ID numeral, and restart.\n                  unique = false;\n                  uniqueID++;\n                  break;\n               }\n            }\n         }\n\n         return String::Concat( baseName, uniqueID );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_INameCreationService_IsValidName_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_INameCreationService_IsValidName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsValidName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the specified name is valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsValidName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the name is valid; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An implementation of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.inamecreationservice\" data-linktype=\"relative-path\">INameCreationService</a> can have rules that define the parameters for valid names. This method can be implemented to validate a name and enforce those rules.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an example IsValidName method implementation. The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name. The method returns <code>true</code> if the string is valid, or <code>false</code> otherwise.  </p>\n<pre><code class=\"lang-vb\" name=\"INameCreationServiceExample#3\">    &#39; Returns whether the specified name contains \n    &#39; all valid character types.\n    Public Function IsValidName(ByVal name As String) As Boolean Implements INameCreationService.IsValidName\n        Dim i As Integer\n        For i = 0 To name.Length - 1\n            Dim ch As Char = name.Chars(i)\n            Dim uc As UnicodeCategory = [Char].GetUnicodeCategory(ch)\n            Select Case uc\n                Case UnicodeCategory.UppercaseLetter, UnicodeCategory.LowercaseLetter, UnicodeCategory.TitlecaseLetter, UnicodeCategory.DecimalDigitNumber\n                Case Else\n                    Return False\n            End Select\n        Next i\n        Return True\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"INameCreationServiceExample#3\">        // Returns whether the specified name contains \n        // all valid character types.\n        public bool IsValidName(string name)\n        {            \n            for(int i = 0; i &lt; name.Length; i++)\n            {\n                char ch = name[i];\n                UnicodeCategory uc = Char.GetUnicodeCategory(ch);\n                switch (uc) \n                {\n                    case UnicodeCategory.UppercaseLetter:       \n                    case UnicodeCategory.LowercaseLetter:     \n                    case UnicodeCategory.TitlecaseLetter:                                                  \n                    case UnicodeCategory.DecimalDigitNumber:                         \n                        break;\n                    default:\n                        return false;                \n                }\n            }\n            return true;        \n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"INameCreationServiceExample#3\">      // Returns whether the specified name contains \n      // all valid character types.\n      virtual bool IsValidName( String^ name )\n      {\n         for ( int i = 0; i &lt; name-&gt;Length; i++ )\n         {\n            Char ch = name[ i ];\n            UnicodeCategory uc = Char::GetUnicodeCategory( ch );\n            switch ( uc )\n            {\n               case UnicodeCategory::UppercaseLetter:\n               case UnicodeCategory::LowercaseLetter:\n               case UnicodeCategory::TitlecaseLetter:\n               case UnicodeCategory::DecimalDigitNumber:\n                  break;\n\n               default:\n                  return false;\n            }\n         }\n         return true;\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_INameCreationService_ValidateName_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_INameCreationService_ValidateName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the specified name is valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An implementation of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.inamecreationservice\" data-linktype=\"relative-path\">INameCreationService</a> can have rules that define the parameters for valid names. This method can be implemented to validate a name and enforce those rules.  </p>\n<p> This method is similar to <a class=\"xref\" href=\"system.componentmodel.design.serialization.inamecreationservice#System_ComponentModel_Design_Serialization_INameCreationService_IsValidName_\" data-linktype=\"relative-path\">IsValidName</a>, except that this method throws an exception if the name is invalid. This allows implementers to provide detailed information in the exception message.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an example <a class=\"xref\" href=\"system.componentmodel.design.serialization.inamecreationservice#System_ComponentModel_Design_Serialization_INameCreationService_IsValidName_\" data-linktype=\"relative-path\">IsValidName</a> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name. The method throws an exception if the string is not valid.  </p>\n<pre><code class=\"lang-vb\" name=\"INameCreationServiceExample#4\">    &#39; Throws an exception if the specified name does not contain \n    &#39; all valid character types.\n    Public Sub ValidateName(ByVal name As String) Implements INameCreationService.ValidateName\n        Dim i As Integer\n        For i = 0 To name.Length - 1\n            Dim ch As Char = name.Chars(i)\n            Dim uc As UnicodeCategory = [Char].GetUnicodeCategory(ch)\n            Select Case uc\n                Case UnicodeCategory.UppercaseLetter, UnicodeCategory.LowercaseLetter, UnicodeCategory.TitlecaseLetter, UnicodeCategory.DecimalDigitNumber\n                Case Else\n                    Throw New Exception(&quot;The name &#39;&quot; + name + &quot;&#39; is not a valid identifier.&quot;)\n            End Select\n        Next i\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"INameCreationServiceExample#4\">        // Throws an exception if the specified name does not contain \n        // all valid character types.\n        public void ValidateName(string name)\n        {\n            for(int i = 0; i &lt; name.Length; i++)\n            {\n                char ch = name[i];\n                UnicodeCategory uc = Char.GetUnicodeCategory(ch);\n                switch (uc) \n                {\n                    case UnicodeCategory.UppercaseLetter:       \n                    case UnicodeCategory.LowercaseLetter:     \n                    case UnicodeCategory.TitlecaseLetter:                                                  \n                    case UnicodeCategory.DecimalDigitNumber:                         \n                        break;\n                    default:\n                        throw new Exception(&quot;The name &#39;&quot;+name+&quot;&#39; is not a valid identifier.&quot;);                \n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"INameCreationServiceExample#4\">      // Throws an exception if the specified name does not contain \n      // all valid character types.\n      virtual void ValidateName( String^ name )\n      {\n         for ( int i = 0; i &lt; name-&gt;Length; i++ )\n         {\n            Char ch = name[ i ];\n            UnicodeCategory uc = Char::GetUnicodeCategory( ch );\n            switch ( uc )\n            {\n               case UnicodeCategory::UppercaseLetter:\n               case UnicodeCategory::LowercaseLetter:\n               case UnicodeCategory::TitlecaseLetter:\n               case UnicodeCategory::DecimalDigitNumber:\n                  break;\n\n               default:\n                  throw gcnew Exception( String::Format( &quot;The name &#39;{0}&#39; is not a valid identifier.&quot;, name ) );\n            }\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.Serialization.INameCreationService.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.Serialization.INameCreationService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.INameCreationService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.INameCreationService.CreateName\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.INameCreationService.IsValidName\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.INameCreationService.ValidateName\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"dcd45d49-6b9e-d9db-06e4-60eff90115a2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a service that can generate unique names for objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel.Design.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.Serialization.INameCreationService\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.Serialization.INameCreationService.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.Serialization.INameCreationService.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.Design.Serialization.INameCreationService","System.ComponentModel.Design.Serialization.INameCreationService.CreateName","System.ComponentModel.Design.Serialization.INameCreationService.IsValidName","System.ComponentModel.Design.Serialization.INameCreationService.ValidateName"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.Serialization.INameCreationService","System::ComponentModel::Design::Serialization::INameCreationService","System.ComponentModel.Design.Serialization.INameCreationService.CreateName","System::ComponentModel::Design::Serialization::INameCreationService::CreateName","System.ComponentModel.Design.Serialization.INameCreationService.IsValidName","System::ComponentModel::Design::Serialization::INameCreationService::IsValidName","System.ComponentModel.Design.Serialization.INameCreationService.ValidateName","System::ComponentModel::Design::Serialization::INameCreationService::ValidateName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"dcd45d49-6b9e-d9db-06e4-60eff90115a2","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel.Design.Serialization/INameCreationService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"INameCreationService interface | Microsoft Docs","_op_ogTitle":"INameCreationService interface","description":"Provides a service that can generate unique names for objects.\n","toc_asset_id":"_splitted/System.ComponentModel.Design.Serialization/toc.json","toc_rel":"_splitted/System.ComponentModel.Design.Serialization/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.Serialization.INameCreationService","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.serialization.inamecreationservice","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.serialization.inamecreationservice","fileRelativePath":"System.ComponentModel.Design.Serialization.INameCreationService.html"},"themesRelativePathToOutputRoot":"_themes/"}