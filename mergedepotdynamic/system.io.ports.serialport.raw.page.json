{"content":"    \r\n    <h1 id=\"System_IO_Ports_SerialPort\">\r\n      <span class=\"lang-csharp\">SerialPort</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a serial port resource.  </p>\n<p> To browse the .NET Framework source code for this type, see the <a href=\"http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe\" data-linktype=\"external\">Reference Source</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.MonitoringDescription(&quot;SerialPortDesc&quot;)]\npublic class SerialPort : System.ComponentModel.Component</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SerialPort</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> To view the .NET Framework source code for this type, see the <a href=\"http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe\" data-linktype=\"external\">Reference Source</a>. You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <a href=\"http://referencesource.microsoft.com/\" data-linktype=\"external\">instructions</a>.  </p>\n</div>\n<p> Use this class to control a serial port file resource. This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties. Additionally, the functionality of this class can be wrapped in an internal <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object, accessible through the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property, and passed to classes that wrap or use streams.  </p>\n<p> The SerialPort class supports the following encodings: <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a>, <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.  You can use alternate encodings, but you must use the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadByte_\" data-linktype=\"relative-path\">ReadByte</a> or <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Write_\" data-linktype=\"relative-path\">Write</a> method and perform the encoding yourself.  </p>\n<p> You use the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_GetPortNames_\" data-linktype=\"relative-path\">GetPortNames</a> method to retrieve the valid ports for the current computer.  </p>\n<p> If a SerialPort object becomes blocked during a read operation, do not abort the thread. Instead, either close the base stream or dispose of the SerialPort object.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor\" data-linktype=\"self-bookmark\">SerialPort()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor_System_ComponentModel_IContainer_\" data-linktype=\"self-bookmark\">SerialPort(IContainer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified <a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor_System_String_\" data-linktype=\"self-bookmark\">SerialPort(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor_System_String_System_Int32_\" data-linktype=\"self-bookmark\">SerialPort(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name and baud rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor_System_String_System_Int32_System_IO_Ports_Parity_\" data-linktype=\"self-bookmark\">SerialPort(String,Int32,Parity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name, baud rate, and parity bit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor_System_String_System_Int32_System_IO_Ports_Parity_System_Int32_\" data-linktype=\"self-bookmark\">SerialPort(String,Int32,Parity,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name, baud rate, parity bit, and data bits.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort__ctor_System_String_System_Int32_System_IO_Ports_Parity_System_Int32_System_IO_Ports_StopBits_\" data-linktype=\"self-bookmark\">SerialPort(String,Int32,Parity,Int32,StopBits)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name, baud rate, parity bit, data bits, and stop bit.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"self-bookmark\">InfiniteTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that no time-out should occur.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_BaseStream\" data-linktype=\"self-bookmark\">BaseStream</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the underlying <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object for a <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_BaudRate\" data-linktype=\"self-bookmark\">BaudRate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the serial baud rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_BreakState\" data-linktype=\"self-bookmark\">BreakState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the break signal state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_BytesToRead\" data-linktype=\"self-bookmark\">BytesToRead</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of bytes of data in the receive buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_BytesToWrite\" data-linktype=\"self-bookmark\">BytesToWrite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of bytes of data in the send buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_CDHolding\" data-linktype=\"self-bookmark\">CDHolding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the state of the Carrier Detect line for the port.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_CtsHolding\" data-linktype=\"self-bookmark\">CtsHolding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the state of the Clear-to-Send line.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DataBits\" data-linktype=\"self-bookmark\">DataBits</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the standard length of data bits per byte.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DiscardNull\" data-linktype=\"self-bookmark\">DiscardNull</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DsrHolding\" data-linktype=\"self-bookmark\">DsrHolding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the state of the Data Set Ready (DSR) signal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DtrEnable\" data-linktype=\"self-bookmark\">DtrEnable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Encoding\" data-linktype=\"self-bookmark\">Encoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the byte encoding for pre- and post-transmission conversion of text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Handshake\" data-linktype=\"self-bookmark\">Handshake</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the handshaking protocol for serial port transmission of data using a value from <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_IsOpen\" data-linktype=\"self-bookmark\">IsOpen</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating the open or closed status of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_NewLine\" data-linktype=\"self-bookmark\">NewLine</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value used to interpret the end of a call to the <span class=\"xref\">stem.IO.Ports.SerialPort.ReadLine*</span> and <span class=\"xref\">stem.IO.Ports.SerialPort.WriteLine*</span> methods.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Parity\" data-linktype=\"self-bookmark\">Parity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the parity-checking protocol.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ParityReplace\" data-linktype=\"self-bookmark\">ParityReplace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_PortName\" data-linktype=\"self-bookmark\">PortName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the port for communications, including but not limited to all available COM ports.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadBufferSize\" data-linktype=\"self-bookmark\">ReadBufferSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadTimeout\" data-linktype=\"self-bookmark\">ReadTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReceivedBytesThreshold\" data-linktype=\"self-bookmark\">ReceivedBytesThreshold</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of bytes in the internal input buffer before a <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"relative-path\">DataReceived</a> event occurs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_RtsEnable\" data-linktype=\"self-bookmark\">RtsEnable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_StopBits\" data-linktype=\"self-bookmark\">StopBits</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the standard number of stopbits per byte.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_WriteBufferSize\" data-linktype=\"self-bookmark\">WriteBufferSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the serial port output buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_WriteTimeout\" data-linktype=\"self-bookmark\">WriteTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the port connection, sets the <span class=\"xref\">stem.IO.Ports.SerialPort.IsOpen*</span> property to <code>false</code>, and disposes of the internal <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DiscardInBuffer\" data-linktype=\"self-bookmark\">DiscardInBuffer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Discards data from the serial driver&#39;s receive buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DiscardOutBuffer\" data-linktype=\"self-bookmark\">DiscardOutBuffer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Discards data from the serial driver&#39;s transmit buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_GetPortNames\" data-linktype=\"self-bookmark\">GetPortNames()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of serial port names for the current computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Open\" data-linktype=\"self-bookmark\">Open()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a new serial port connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Read_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Read(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads a number of bytes from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer and writes those bytes into a byte array at the specified offset.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Read_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Read(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads a number of characters from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer and writes them into an array of characters at a given offset.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadByte\" data-linktype=\"self-bookmark\">ReadByte()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously reads one byte from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadChar\" data-linktype=\"self-bookmark\">ReadChar()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously reads one character from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadExisting\" data-linktype=\"self-bookmark\">ReadExisting()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadLine\" data-linktype=\"self-bookmark\">ReadLine()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads up to the <span class=\"xref\">stem.IO.Ports.SerialPort.NewLine*</span> value in the input buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ReadTo_System_String_\" data-linktype=\"self-bookmark\">ReadTo(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads a string up to the specified <code>value</code> in the input buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string to the serial port.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Write_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a specified number of bytes to the serial port using data from a buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_Write_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a specified number of characters to the serial port using data from a buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_WriteLine_System_String_\" data-linktype=\"self-bookmark\">WriteLine(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string and the <span class=\"xref\">stem.IO.Ports.SerialPort.NewLine*</span> value to the output buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"self-bookmark\">DataReceived</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that data has been received through a port represented by the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_ErrorReceived\" data-linktype=\"self-bookmark\">ErrorReceived</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that an error has occurred with a port represented by a <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Ports_SerialPort_PinChanged\" data-linktype=\"self-bookmark\">PinChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that a non-data signal event has occurred on the port represented by the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor uses default property values when none are specified. For example, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataBits_\" data-linktype=\"relative-path\">DataBits</a> property defaults to 8, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Parity_\" data-linktype=\"relative-path\">Parity</a> property defaults to the <code>None</code> enumeration value, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_StopBits_\" data-linktype=\"relative-path\">StopBits</a> property defaults to 1, and a default port name of COM1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor_System_ComponentModel_IContainer_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort(IContainer)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified <a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort (System.ComponentModel.IContainer container);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>container</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An interface to a container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The specified port could not be found or opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor uses default property values when none are specified. For example, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataBits_\" data-linktype=\"relative-path\">DataBits</a> property defaults to 8, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Parity_\" data-linktype=\"relative-path\">Parity</a> property defaults to the <code>None</code> enumeration value, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_StopBits_\" data-linktype=\"relative-path\">StopBits</a> property defaults to 1, and a default port name of COM1.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor_System_String_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort (string portName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>portName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port to use (for example, COM1).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The specified port could not be found or opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class when you want to specify the port name.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name and baud rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort (string portName, int baudRate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>portName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port to use (for example, COM1).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baudRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The baud rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The specified port could not be found or opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class when you want to specify the port name and the baud rate.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor_System_String_System_Int32_System_IO_Ports_Parity_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort(String,Int32,Parity)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name, baud rate, and parity bit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>portName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port to use (for example, COM1).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baudRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The baud rate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.parity\" data-linktype=\"relative-path\">Parity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <span class=\"xref\">stem.IO.Ports.SerialPort.Parity*</span> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The specified port could not be found or opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class when you want to specify the port name, the baud rate, and the parity bit.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor_System_String_System_Int32_System_IO_Ports_Parity_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort(String,Int32,Parity,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name, baud rate, parity bit, and data bits.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>portName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port to use (for example, COM1).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baudRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The baud rate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.parity\" data-linktype=\"relative-path\">Parity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <span class=\"xref\">stem.IO.Ports.SerialPort.Parity*</span> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataBits</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data bits value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The specified port could not be found or opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class when you want to specify the port name, the baud rate, the parity bit, and data bits.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort__ctor_System_String_System_Int32_System_IO_Ports_Parity_System_Int32_System_IO_Ports_StopBits_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerialPort(String,Int32,Parity,Int32,StopBits)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class using the specified port name, baud rate, parity bit, data bits, and stop bit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>portName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port to use (for example, COM1).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baudRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The baud rate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.parity\" data-linktype=\"relative-path\">Parity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <span class=\"xref\">stem.IO.Ports.SerialPort.Parity*</span> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataBits</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data bits value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stopBits</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.stopbits\" data-linktype=\"relative-path\">StopBits</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <span class=\"xref\">stem.IO.Ports.SerialPort.StopBits*</span> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The specified port could not be found or opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create a new instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_InfiniteTimeout\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InfiniteTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that no time-out should occur.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const int InfiniteTimeout = -1;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This value is used with the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadTimeout_\" data-linktype=\"relative-path\">ReadTimeout</a> and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_WriteTimeout_\" data-linktype=\"relative-path\">WriteTimeout</a> properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_BaseStream\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_BaseStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseStream</div>        \r\n          </div>\r\n    \r\n            <p>Gets the underlying <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object for a <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream BaseStream { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream is in a .NET Compact Framework application and one of the following methods was called:  </p>\n <span class=\"xref\">stem.IO.Stream.BeginRead*</span><span class=\"xref\">stem.IO.Stream.BeginWrite*</span><span class=\"xref\">stem.IO.Stream.EndRead*</span><span class=\"xref\">stem.IO.Stream.EndWrite*</span>  \n\n<p> The .NET Compact Framework does not support the asynchronous model with base streams.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property for explicit asynchronous I/O operations or to pass the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> wrapper class such as <a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a>.  </p>\n<p> Any open serial port&#39;s BaseStream property returns an object that derives from the abstract <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class, and implements read and write methods using the prototypes inherited from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class: <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>, <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a>, <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Read_\" data-linktype=\"relative-path\">Read</a>, <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadByte_\" data-linktype=\"relative-path\">ReadByte</a>, <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Write_\" data-linktype=\"relative-path\">Write</a>, and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteByte_\" data-linktype=\"relative-path\">WriteByte</a>. These methods can be useful when passing a wrapped serial resource to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> wrapper class.  </p>\n<p> Due to the inaccessibility of the wrapped file handle, the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Length_\" data-linktype=\"relative-path\">Length</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Position_\" data-linktype=\"relative-path\">Position</a> properties are not supported, and the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Seek_\" data-linktype=\"relative-path\">Seek</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_SetLength_\" data-linktype=\"relative-path\">SetLength</a> methods are not supported.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_BaudRate\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_BaudRate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaudRate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the serial baud rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int BaudRate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The baud rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The baud rate must be supported by the user&#39;s serial driver. The default value is 9600 bits per second (bps).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set the BaudRate property to <code>9600</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#20\">        SerialPort mySerialPort = new SerialPort(&quot;COM1&quot;);\n\n        mySerialPort.BaudRate = 9600;\n        mySerialPort.Parity = Parity.None;\n        mySerialPort.StopBits = StopBits.One;\n        mySerialPort.DataBits = 8;\n        mySerialPort.Handshake = Handshake.None;\n        mySerialPort.RtsEnable = true;\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#20\">        SerialPort^ mySerialPort = gcnew SerialPort(&quot;COM1&quot;);\n\n        mySerialPort-&gt;BaudRate = 9600;\n        mySerialPort-&gt;Parity = Parity::None;\n        mySerialPort-&gt;StopBits = StopBits::One;\n        mySerialPort-&gt;DataBits = 8;\n        mySerialPort-&gt;Handshake = Handshake::None;\n        mySerialPort-&gt;RtsEnable = true;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#20\">        Dim mySerialPort As New SerialPort(&quot;COM1&quot;)\n\n        mySerialPort.BaudRate = 9600\n        mySerialPort.Parity = Parity.None\n        mySerialPort.StopBits = StopBits.One\n        mySerialPort.DataBits = 8\n        mySerialPort.Handshake = Handshake.None\n        mySerialPort.RtsEnable = True\n</code></pre><p> The following example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_BreakState\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_BreakState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BreakState</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the break signal state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BreakState { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the port is in a break state; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released. To enter a break state, set this property to <code>true</code>. If the port is already in a break state, setting this property again to <code>true</code> does not result in an exception. It is not possible to write to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object while BreakState is <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_BytesToRead\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_BytesToRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BytesToRead</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of bytes of data in the receive buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int BytesToRead { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes of data in the receive buffer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The port is not open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The receive buffer includes the serial driver&#39;s receive buffer as well as internal buffering in the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object itself.  </p>\n<p> Because the BytesToRead property represents both the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> buffer and the Windows-created buffer,  it can return a greater value than the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadBufferSize_\" data-linktype=\"relative-path\">ReadBufferSize</a> property, which represents only the Windows-created buffer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_BytesToWrite\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_BytesToWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BytesToWrite</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of bytes of data in the send buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int BytesToWrite { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes of data in the send buffer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The send buffer includes the serial driver&#39;s send buffer as well as internal buffering in the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object itself.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_CDHolding\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_CDHolding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CDHolding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the state of the Carrier Detect line for the port.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CDHolding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the carrier is detected; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property can be used to monitor the state of the carrier detection line for a port. No carrier usually indicates that the receiver has hung up and the carrier has been dropped.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_CtsHolding\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_CtsHolding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CtsHolding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the state of the Clear-to-Send line.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CtsHolding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the Clear-to-Send line is detected; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking. The CTS line is queried by a port before data is sent.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DataBits\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_DataBits_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBits</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the standard length of data bits per byte.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int DataBits { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The data bits length.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The data bits value is less than 5 or more than 8.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The range of values for this property is from 5 through 8. The default value is 8.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DiscardNull\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_DiscardNull_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscardNull</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DiscardNull { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if null bytes are ignored; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This value should normally be set to <code>false</code>, especially for binary transmissions.  Setting this property to <code>true</code> can cause unexpected results for UTF32- and UTF16-encoded bytes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DsrHolding\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_DsrHolding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DsrHolding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the state of the Data Set Ready (DSR) signal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DsrHolding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a Data Set Ready signal has been sent to the port; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking. The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DtrEnable\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_DtrEnable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DtrEnable</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DtrEnable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to enable Data Terminal Ready (DTR); otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Encoding\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Encoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the byte encoding for pre- and post-transmission conversion of text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding Encoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object. The default is <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The Encoding property was set to <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The Encoding property was set to an encoding that is not <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a>, <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, one of the Windows single byte encodings, or one of the Windows double byte encodings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Handshake\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Handshake_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Handshake</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the handshaking protocol for serial port transmission of data using a value from <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Ports.Handshake Handshake { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> values. The default is <code>None</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value passed is not a valid value in the <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When handshaking is used, the device connected to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object is instructed to stop sending data when there is at least (<a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadBufferSize_\" data-linktype=\"relative-path\">ReadBufferSize</a>-1024) bytes in the buffer. The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer. If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.  </p>\n<p> If the Handshake property is set to <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_CtsHolding_\" data-linktype=\"relative-path\">CtsHolding</a> is set to <code>false</code>, the XOff character will not be sent. If <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_CtsHolding_\" data-linktype=\"relative-path\">CtsHolding</a> is then set to <code>true</code>, more data must be sent before the XOff character will be sent.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_IsOpen\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_IsOpen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsOpen</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating the open or closed status of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsOpen { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the serial port is open; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The IsOpen value passed is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The IsOpen value passed is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsOpen property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_NewLine\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_NewLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewLine</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value used to interpret the end of a call to the <span class=\"xref\">stem.IO.Ports.SerialPort.ReadLine*</span> and <span class=\"xref\">stem.IO.Ports.SerialPort.WriteLine*</span> methods.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string NewLine { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A value that represents the end of a line. The default is a line feed, <span class=\"xref\">stem.Environment.NewLine*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The property value is empty.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The property value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property determines what value (byte) defines the end of a line for the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadLine_\" data-linktype=\"relative-path\">ReadLine</a> and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods. By default the end-of-line value is <a class=\"xref\" href=\"system.environment#System_Environment_NewLine_\" data-linktype=\"relative-path\">NewLine</a>. You would change this to a different value if the particular serial device you’re working with uses a different value for the same purpose.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Parity\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Parity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parity</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the parity-checking protocol.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Ports.Parity Parity { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.parity\" data-linktype=\"relative-path\">Parity</a></div>\r\n                  </div>\r\n                  <p>One of the enumeration values that represents the parity-checking protocol. The default is <a class=\"xref\" href=\"system.io.ports.parity\" data-linktype=\"relative-path\">Parity</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The Parity value passed is not a valid value in the <a class=\"xref\" href=\"system.io.ports.parity\" data-linktype=\"relative-path\">Parity</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Parity is an error-checking procedure in which the number of 1s must always be the same—either even or odd—for each group of bits that is transmitted without error. In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.  </p>\n<p> If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ParityReplace\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ParityReplace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParityReplace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte ParityReplace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </div>\r\n                  <p>A byte that replaces invalid bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is set to the null character, parity replacement is disabled.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_PortName\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_PortName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PortName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the port for communications, including but not limited to all available COM ports.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PortName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The communications port. The default is COM1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The PortName property was set to a value with a length of zero.  </p>\n<p> -or-  </p>\n<p> The PortName property was set to a value that starts with &quot;\\\\&quot;.  </p>\n<p> -or-  </p>\n<p> The port name was not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The PortName property was set to <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A list of valid port names can be obtained using the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_GetPortNames_\" data-linktype=\"relative-path\">GetPortNames</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadBufferSize\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadBufferSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadBufferSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReadBufferSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The buffer size, in bytes. The default value is 4096; the maximum value is that of a positive int, or 2147483647.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The ReadBufferSize value set is less than or equal to zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The ReadBufferSize property was set while the stream was open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The ReadBufferSize property was set to an odd integer value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ReadBufferSize property ignores any value smaller than 4096.  </p>\n<p> Because the ReadBufferSize property represents only the Windows-created buffer, it can return a smaller value than the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property, which represents both the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> buffer and the Windows-created buffer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadTimeout\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReadTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of milliseconds before a time-out occurs when a read operation does not finish.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The read time-out value is less than zero and not equal to <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The read time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>, in which case no time-out occurs. <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a> is the default.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Users of the unmanaged <code>COMMTIMEOUTS</code> structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the ReadTimeout property, however, you must specify <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>.  </p>\n</div>\n<p> This property does not affect the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method of the stream returned by the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReceivedBytesThreshold\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReceivedBytesThreshold_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReceivedBytesThreshold</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of bytes in the internal input buffer before a <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"relative-path\">DataReceived</a> event occurs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReceivedBytesThreshold { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes in the internal input buffer before a <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"relative-path\">DataReceived</a> event is fired. The default is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The ReceivedBytesThreshold value is less than or equal to zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"relative-path\">DataReceived</a> event is also raised if an <a class=\"xref\" href=\"system.io.ports.serialdata\" data-linktype=\"relative-path\">SerialData</a> character is received, regardless of the number of bytes in the internal input buffer and the value of the ReceivedBytesThreshold property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_RtsEnable\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_RtsEnable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RtsEnable</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RtsEnable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to enable Request to Transmit (RTS); otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the RtsEnable property was set or retrieved while the <span class=\"xref\">stem.IO.Ports.SerialPort.Handshake*</span> property is set to the <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> value or the <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_StopBits\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_StopBits_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StopBits</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the standard number of stopbits per byte.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Ports.StopBits StopBits { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ports.stopbits\" data-linktype=\"relative-path\">StopBits</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.io.ports.stopbits\" data-linktype=\"relative-path\">StopBits</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The StopBits value is  <a class=\"xref\" href=\"system.io.ports.stopbits\" data-linktype=\"relative-path\">StopBits</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default value for StopBits is <a class=\"xref\" href=\"system.io.ports.stopbits\" data-linktype=\"relative-path\">StopBits</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.io.ports.stopbits\" data-linktype=\"relative-path\">System.IO.Ports.StopBits</a> value is not supported.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set the StopBits property to <code>One</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#20\">        SerialPort mySerialPort = new SerialPort(&quot;COM1&quot;);\n\n        mySerialPort.BaudRate = 9600;\n        mySerialPort.Parity = Parity.None;\n        mySerialPort.StopBits = StopBits.One;\n        mySerialPort.DataBits = 8;\n        mySerialPort.Handshake = Handshake.None;\n        mySerialPort.RtsEnable = true;\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#20\">        SerialPort^ mySerialPort = gcnew SerialPort(&quot;COM1&quot;);\n\n        mySerialPort-&gt;BaudRate = 9600;\n        mySerialPort-&gt;Parity = Parity::None;\n        mySerialPort-&gt;StopBits = StopBits::One;\n        mySerialPort-&gt;DataBits = 8;\n        mySerialPort-&gt;Handshake = Handshake::None;\n        mySerialPort-&gt;RtsEnable = true;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#20\">        Dim mySerialPort As New SerialPort(&quot;COM1&quot;)\n\n        mySerialPort.BaudRate = 9600\n        mySerialPort.Parity = Parity.None\n        mySerialPort.StopBits = StopBits.One\n        mySerialPort.DataBits = 8\n        mySerialPort.Handshake = Handshake.None\n        mySerialPort.RtsEnable = True\n</code></pre><p> The following example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_WriteBufferSize\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_WriteBufferSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBufferSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the serial port output buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int WriteBufferSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The size of the output buffer. The default is 2048.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The WriteBufferSize value is less than or equal to zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The WriteBufferSize property was set while the stream was open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The WriteBufferSize property was set to an odd integer value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteBufferSize property ignores any value smaller than 2048.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_WriteTimeout\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_WriteTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int WriteTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of milliseconds before a time-out occurs. The default is <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The WriteTimeout value is less than zero and not equal to <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The write time-out value was originally set at 500 milliseconds in the Win32 Communications API. This property allows you to set this value. The time-out can be set to any value greater than zero, or set to <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>, in which case no time-out occurs. <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a> is the default.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Users of the unmanaged <code>COMMTIMEOUTS</code> structure might expect to set the time-out value to zero to suppress time-outs. To suppress time-outs with the WriteTimeout property, however, you must specify <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>.  </p>\n</div>\n<p> This property does not affect the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> method of the stream returned by the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Close\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the port connection, sets the <span class=\"xref\">stem.IO.Ports.SerialPort.IsOpen*</span> property to <code>false</code>, and disposes of the internal <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling this method closes the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object and clears both the receive and transmit buffers. This method calls the <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">System.ComponentModel.Component.Dispose()</a> method, which invokes the protected <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Dispose_System_Boolean_\" data-linktype=\"relative-path\">System.IO.Ports.SerialPort.Dispose(Boolean)</a> method with the <code>disposing</code> parameter set to <code>true</code>.  </p>\n<p> The best practice for any application is to wait for some amount of time after calling the Close method before attempting to call the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Open_\" data-linktype=\"relative-path\">Open</a> method, as the port may not be closed instantly.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DiscardInBuffer\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_DiscardInBuffer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscardInBuffer()</div>        \r\n          </div>\r\n    \r\n            <p>Discards data from the serial driver&#39;s receive buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DiscardInBuffer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is equivalent to the following Visual Basic code: <code>MSComm1.InBufferCount = 0</code>. It clears the receive buffer, but does not affect the transmit buffer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DiscardOutBuffer\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_DiscardOutBuffer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscardOutBuffer()</div>        \r\n          </div>\r\n    \r\n            <p>Discards data from the serial driver&#39;s transmit buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DiscardOutBuffer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed. This can occur because the <span class=\"xref\">stem.IO.Ports.SerialPort.Open*</span> method has not been called or the <span class=\"xref\">stem.IO.Ports.SerialPort.Close*</span> method has been called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is equivalent to the following Visual Basic code: <code>MSComm1.OutBufferCount = 0</code>. It clears the transmit buffer, but does not affect the receive buffer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> invokes the protected Dispose method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes Dispose with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> references. This method invokes the <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of each referenced object.  </p>\n<p> This method flushes and closes the stream object in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_GetPortNames\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_GetPortNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPortNames()</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of serial port names for the current computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string[] GetPortNames ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array of serial port names for the current computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The serial port names could not be queried.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The order of port names returned from GetPortNames is not specified.  </p>\n<p> Use the GetPortNames method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  </p>\n<p> The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the GetPortNames method will return incorrect data.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the GetPortNames method to display serial port names to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"IO.Ports.GetPortNames#1\">using System;\nusing System.IO.Ports;\n\nnamespace SerialPortExample\n{\n    class SerialPortExample\n    {\n        public static void Main()\n        {\n            // Get a list of serial port names.\n            string[] ports = SerialPort.GetPortNames();\n\n            Console.WriteLine(&quot;The following serial ports were found:&quot;);\n\n            // Display each port name to the console.\n            foreach(string port in ports)\n            {\n                Console.WriteLine(port);\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IO.Ports.GetPortNames#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO::Ports;\nusing namespace System::ComponentModel;\n\nvoid main()\n{\n    array&lt;String^&gt;^ serialPorts = nullptr;\n    try\n    {\n        // Get a list of serial port names.\n        serialPorts = SerialPort::GetPortNames();\n    }\n    catch (Win32Exception^ ex)\n    {\n        Console::WriteLine(ex-&gt;Message);\n    }\n\n    Console::WriteLine(&quot;The following serial ports were found:&quot;);\n\n    // Display each port name to the console.\n    for each(String^ port in serialPorts)\n    {\n        Console::WriteLine(port);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IO.Ports.GetPortNames#1\">&#39; Insert this code into a new VB Console application project, and set the\n&#39; startup object to Sub Main.\n\nImports System\nImports System.IO.Ports\n\nModule SerialPortExample\n\n    Sub Main()\n        &#39; Get a list of serial port names.\n        Dim ports As String() = SerialPort.GetPortNames()\n\n        Console.WriteLine(&quot;The following serial ports were found:&quot;)\n\n        &#39; Display each port name to the console.\n        Dim port As String\n        For Each port In ports\n            Console.WriteLine(port)\n        Next port\n\n        Console.ReadLine()\n\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Open\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open()</div>        \r\n          </div>\r\n    \r\n            <p>Opens a new serial port connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Open ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access is denied to the port.  </p>\n<p> - or -  </p>\n<p> The current process, or another process on the system, already has the specified COM port open either by a <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> instance or in unmanaged code.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>One or more of the properties for this instance are invalid. For example, the <span class=\"xref\">stem.IO.Ports.SerialPort.Parity*</span>, <span class=\"xref\">stem.IO.Ports.SerialPort.DataBits*</span>, or <span class=\"xref\">stem.IO.Ports.SerialPort.Handshake*</span> properties are not valid values; the <span class=\"xref\">stem.IO.Ports.SerialPort.BaudRate*</span> is less than or equal to zero; the <span class=\"xref\">stem.IO.Ports.SerialPort.ReadTimeout*</span> or <span class=\"xref\">stem.IO.Ports.SerialPort.WriteTimeout*</span> property is less than zero and is not <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The port name does not begin with &quot;COM&quot;.  </p>\n<p> - or -  </p>\n<p> The file type of the port is not supported.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The port is in an invalid state.  </p>\n<p> - or -  </p>\n<p> An attempt to set the state of the underlying port failed. For example, the parameters passed from this <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object were invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port on the current instance of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> is already open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only one open connection can exist per <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.  </p>\n<p> The best practice for any application is to wait for some amount of time after calling the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Close_\" data-linktype=\"relative-path\">Close</a> method before attempting to call the Open method, as the port may not be closed instantly.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Read_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Reads a number of bytes from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer and writes those bytes into a byte array at the specified offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Read (byte[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array to write the input to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset in <code>buffer</code> at which to write the bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to read. Fewer bytes are read if <code>count</code> is greater than the number of bytes in the input buffer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The buffer passed is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>No bytes were available to read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<p> Because the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, and the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not, the two might conflict about how many bytes are available to read.  The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property because they have been buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<p> The Read method does not block other operations when the number of bytes read equals <code>count</code> but there are still unread bytes available on the serial port.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Read_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Reads a number of characters from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer and writes them into an array of characters at a given offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Read (char[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write the input to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset in <code>buffer</code> at which to write the characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of characters to read. Fewer characters are read if <code>count</code> is greater than the number of characters in the input buffer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> plus <code>count</code> is greater than the length of the buffer.  </p>\n<p> - or -  </p>\n<p> <code>count</code> is 1 and there is a surrogate character in the buffer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> passed is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>No characters were available to read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method for reading characters from the serial port.  </p>\n<p> If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<p> Because the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, and the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not, the two might conflict about how many characters are available to read.  The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property because they have been buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<p> The Read method does not block other operations when the number of bytes read equals <code>count</code> but there are still unread bytes available on the serial port.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadByte\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadByte()</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously reads one byte from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReadByte ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The byte, cast to an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>, or -1 if the end of the stream has been read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.  </p>\n<p> - or -  </p>\n<p> No byte was read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method reads one byte.  </p>\n<p> Use caution when using ReadByte and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadChar_\" data-linktype=\"relative-path\">ReadChar</a> together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, and the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not, the two might conflict about how many bytes are available to read.  The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property because they have been buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadChar\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadChar()</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously reads one character from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> input buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReadChar ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The character that was read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.  </p>\n<p> - or -  </p>\n<p> No character was available in the allotted time-out period.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method reads one complete character based on the encoding.  </p>\n<p> Use caution when using <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadByte_\" data-linktype=\"relative-path\">ReadByte</a> and ReadChar together. Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior. If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, and the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not, the two might conflict about how many bytes are available to read.  The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property because they have been buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadExisting\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadExisting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadExisting()</div>        \r\n          </div>\r\n    \r\n            <p>Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ReadExisting ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The contents of the stream and the input buffer of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the contents of the stream and internal buffer of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object as a string. This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> value greater than zero.  </p>\n<p> If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, but the stream object contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not. Therefore, the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object and the stream object might differ on the number of bytes that are available to read. When bytes are buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadLine\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadLine()</div>        \r\n          </div>\r\n    \r\n            <p>Reads up to the <span class=\"xref\">stem.IO.Ports.SerialPort.NewLine*</span> value in the input buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ReadLine ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The contents of the input buffer up to the first occurrence of a <span class=\"xref\">stem.IO.Ports.SerialPort.NewLine*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.  </p>\n<p> - or -  </p>\n<p> No bytes were read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Note that while this method does not return the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_NewLine_\" data-linktype=\"relative-path\">NewLine</a> value, the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_NewLine_\" data-linktype=\"relative-path\">NewLine</a> value is removed from the input buffer.  </p>\n<p> By default, the ReadLine method will block until a line is received. If this behavior is undesirable, set the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReadTimeout_\" data-linktype=\"relative-path\">ReadTimeout</a> property to any non-zero value to force the ReadLine method to throw a <a class=\"xref\" href=\"system.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> if a line is not available on the port.  </p>\n<p> If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, and the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not, the two might conflict about how many bytes are available to read.  The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property because they have been buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ReadTo_System_String_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_ReadTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadTo(String)</div>        \r\n          </div>\r\n    \r\n            <p>Reads a string up to the specified <code>value</code> in the input buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ReadTo (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that indicates where the read operation stops.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The contents of the input buffer up to the specified <code>value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The length of the <code>value</code> parameter is 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>value</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method reads a string up to the specified <code>value</code>. While the returned string does not include the <code>value</code>, the <code>value</code> is removed from the input buffer.  </p>\n<p> If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class buffers data, and the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property does not, the two might conflict about how many bytes are available to read.  The <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BaseStream_\" data-linktype=\"relative-path\">BaseStream</a> property because they have been buffered to the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Write_System_String_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string to the serial port.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string for output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>str</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method when you want to write a string as output to a serial port.  </p>\n<p> If there are too many bytes in the output buffer and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Handshake_\" data-linktype=\"relative-path\">Handshake</a> is set to <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> then the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object may raise a <a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> while it waits for the device to be ready to accept more data.  </p>\n<p> By default, <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> uses <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> to encode the characters. <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> encodes all characters greater than 127 as (char)63 or &#39;?&#39;. To support additional characters in that range, set <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Encoding_\" data-linktype=\"relative-path\">Encoding</a> to <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a>, or <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Write_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a specified number of bytes to the serial port using data from a buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (byte[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array that contains the data to write to the port.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> passed is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method when you want to write to a byte buffer to create output to a serial port.  </p>\n<p> If there are too many bytes in the output buffer and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Handshake_\" data-linktype=\"relative-path\">Handshake</a> is set to <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> then the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object may raise a <a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> while it waits for the device to be ready to accept more data.  </p>\n<p> By default, <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> uses <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> to encode the characters. <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> encodes all characters greater than 127 as (char)63 or &#39;?&#39;. To support additional characters in that range, set <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Encoding_\" data-linktype=\"relative-path\">Encoding</a> to <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a>, or <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_Write_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a specified number of characters to the serial port using data from a buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (char[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array that contains the data to write to the port.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based byte offset in the <code>buffer</code> parameter at which to begin copying bytes to the port.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> passed is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> or <code>count</code> parameters are outside a valid region of the <code>buffer</code> being passed. Either <code>offset</code> or <code>count</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> plus <code>count</code> is greater than the length of the <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The operation did not complete before the time-out period ended.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method when you want to write to a character buffer to create output to a serial port.  </p>\n<p> If there are too many bytes in the output buffer and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Handshake_\" data-linktype=\"relative-path\">Handshake</a> is set to <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> then the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object may raise a <a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> while it waits for the device to be ready to accept more data.  </p>\n<p> By default, <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> uses <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> to encode the characters. <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> encodes all characters greater than 127 as (char)63 or &#39;?&#39;. To support additional characters in that range, set <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Encoding_\" data-linktype=\"relative-path\">Encoding</a> to <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a>, <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a>, or <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_WriteLine_System_String_\">\r\n    \r\n            <a id=\"System_IO_Ports_SerialPort_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string and the <span class=\"xref\">stem.IO.Ports.SerialPort.NewLine*</span> value to the output buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteLine (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write to the output buffer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>str</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified port is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The WriteLine method could not write to the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If there are too many bytes in the input buffer and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_Handshake_\" data-linktype=\"relative-path\">Handshake</a> is set to <a class=\"xref\" href=\"system.io.ports.handshake\" data-linktype=\"relative-path\">Handshake</a> then the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object may raise a <a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> while it waits for the device to be ready to accept more data.  </p>\n<p> The written output includes the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_NewLine_\" data-linktype=\"relative-path\">NewLine</a> string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#01\">public:\n    static void Main()\n    {\n        String^ name;\n        String^ message;\n        StringComparer^ stringComparer = StringComparer::OrdinalIgnoreCase;\n        Thread^ readThread = gcnew Thread(gcnew ThreadStart(PortChat::Read));\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = gcnew SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort-&gt;PortName = SetPortName(_serialPort-&gt;PortName);\n        _serialPort-&gt;BaudRate = SetPortBaudRate(_serialPort-&gt;BaudRate);\n        _serialPort-&gt;Parity = SetPortParity(_serialPort-&gt;Parity);\n        _serialPort-&gt;DataBits = SetPortDataBits(_serialPort-&gt;DataBits);\n        _serialPort-&gt;StopBits = SetPortStopBits(_serialPort-&gt;StopBits);\n        _serialPort-&gt;Handshake = SetPortHandshake(_serialPort-&gt;Handshake);\n\n        // Set the read/write timeouts\n        _serialPort-&gt;ReadTimeout = 500;\n        _serialPort-&gt;WriteTimeout = 500;\n\n        _serialPort-&gt;Open();\n        _continue = true;\n        readThread-&gt;Start();\n\n        Console::Write(&quot;Name: &quot;);\n        name = Console::ReadLine();\n\n        Console::WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console::ReadLine();\n\n            if (stringComparer-&gt;Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort-&gt;WriteLine(\n                    String::Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message) );\n            }\n        }\n\n        readThread-&gt;Join();\n        _serialPort-&gt;Close();\n    }\n\n    static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                String^ message = _serialPort-&gt;ReadLine();\n                Console::WriteLine(message);\n            }\n            catch (TimeoutException ^) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#01\">    public static void Main()\n    {\n        string name;\n        string message;\n        StringComparer stringComparer = StringComparer.OrdinalIgnoreCase;\n        Thread readThread = new Thread(Read);\n\n        // Create a new SerialPort object with default settings.\n        _serialPort = new SerialPort();\n\n        // Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName);\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate);\n        _serialPort.Parity = SetPortParity(_serialPort.Parity);\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits);\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits);\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake);\n\n        // Set the read/write timeouts\n        _serialPort.ReadTimeout = 500;\n        _serialPort.WriteTimeout = 500;\n\n        _serialPort.Open();\n        _continue = true;\n        readThread.Start();\n\n        Console.Write(&quot;Name: &quot;);\n        name = Console.ReadLine();\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;);\n\n        while (_continue)\n        {\n            message = Console.ReadLine();\n\n            if (stringComparer.Equals(&quot;quit&quot;, message))\n            {\n                _continue = false;\n            }\n            else\n            {\n                _serialPort.WriteLine(\n                    String.Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message));\n            }\n        }\n\n        readThread.Join();\n        _serialPort.Close();\n    }\n\n    public static void Read()\n    {\n        while (_continue)\n        {\n            try\n            {\n                string message = _serialPort.ReadLine();\n                Console.WriteLine(message);\n            }\n            catch (TimeoutException) { }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#01\">    Public Shared Sub Main()\n        Dim name As String\n        Dim message As String\n        Dim stringComparer__1 As StringComparer = StringComparer.OrdinalIgnoreCase\n        Dim readThread As New Thread(AddressOf Read)\n\n        &#39; Create a new SerialPort object with default settings.\n        _serialPort = New SerialPort()\n\n        &#39; Allow the user to set the appropriate properties.\n        _serialPort.PortName = SetPortName(_serialPort.PortName)\n        _serialPort.BaudRate = SetPortBaudRate(_serialPort.BaudRate)\n        _serialPort.Parity = SetPortParity(_serialPort.Parity)\n        _serialPort.DataBits = SetPortDataBits(_serialPort.DataBits)\n        _serialPort.StopBits = SetPortStopBits(_serialPort.StopBits)\n        _serialPort.Handshake = SetPortHandshake(_serialPort.Handshake)\n\n        &#39; Set the read/write timeouts\n        _serialPort.ReadTimeout = 500\n        _serialPort.WriteTimeout = 500\n\n        _serialPort.Open()\n        _continue = True\n        readThread.Start()\n\n        Console.Write(&quot;Name: &quot;)\n        name = Console.ReadLine()\n\n        Console.WriteLine(&quot;Type QUIT to exit&quot;)\n\n        While _continue\n            message = Console.ReadLine()\n\n            If stringComparer__1.Equals(&quot;quit&quot;, message) Then\n                _continue = False\n            Else\n                _serialPort.WriteLine([String].Format(&quot;&lt;{0}&gt;: {1}&quot;, name, message))\n            End If\n        End While\n\n        readThread.Join()\n        _serialPort.Close()\n    End Sub\n\n    Public Shared Sub Read()\n        While _continue\n            Try\n                Dim message As String = _serialPort.ReadLine()\n                Console.WriteLine(message)\n            Catch generatedExceptionName As TimeoutException\n            End Try\n        End While\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_DataReceived\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataReceived</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that data has been received through a port represented by the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Data events can be caused by any of the items in the <a class=\"xref\" href=\"system.io.ports.serialdata\" data-linktype=\"relative-path\">SerialData</a> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.  </p>\n<p> The DataReceived event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ReceivedBytesThreshold_\" data-linktype=\"relative-path\">ReceivedBytesThreshold</a> property.  </p>\n<p> <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_PinChanged\" data-linktype=\"relative-path\">PinChanged</a>, DataReceived, and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ErrorReceived\" data-linktype=\"relative-path\">ErrorReceived</a> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.  </p>\n<p> The DataReceived event is not guaranteed to be raised for every byte received. Use the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BytesToRead_\" data-linktype=\"relative-path\">BytesToRead</a> property to determine how much data is left to be read in the buffer.  </p>\n<p> The DataReceived event is raised on a secondary thread when data is received from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> or <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, post change requests back using <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, which will do the work on the proper thread.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example adds a <a class=\"xref\" href=\"system.io.ports.serialdatareceivedeventhandler\" data-linktype=\"relative-path\">SerialDataReceivedEventHandler</a> to DataReceived to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Ports.SerialPort#06\">using System;\nusing System.IO.Ports;\n\nclass PortDataReceived\n{\n    public static void Main()\n    {\n        SerialPort mySerialPort = new SerialPort(&quot;COM1&quot;);\n\n        mySerialPort.BaudRate = 9600;\n        mySerialPort.Parity = Parity.None;\n        mySerialPort.StopBits = StopBits.One;\n        mySerialPort.DataBits = 8;\n        mySerialPort.Handshake = Handshake.None;\n        mySerialPort.RtsEnable = true;\n\n        mySerialPort.DataReceived += new SerialDataReceivedEventHandler(DataReceivedHandler);\n\n        mySerialPort.Open();\n\n        Console.WriteLine(&quot;Press any key to continue...&quot;);\n        Console.WriteLine();\n        Console.ReadKey();\n        mySerialPort.Close();\n    }\n\n    private static void DataReceivedHandler(\n                        object sender,\n                        SerialDataReceivedEventArgs e)\n    {\n        SerialPort sp = (SerialPort)sender;\n        string indata = sp.ReadExisting();\n        Console.WriteLine(&quot;Data Received:&quot;);\n        Console.Write(indata);\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.Ports.SerialPort#06\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO::Ports;\n\nref class PortDataReceived\n{\npublic:\n    static void Main()\n    {\n        SerialPort^ mySerialPort = gcnew SerialPort(&quot;COM1&quot;);\n\n        mySerialPort-&gt;BaudRate = 9600;\n        mySerialPort-&gt;Parity = Parity::None;\n        mySerialPort-&gt;StopBits = StopBits::One;\n        mySerialPort-&gt;DataBits = 8;\n        mySerialPort-&gt;Handshake = Handshake::None;\n        mySerialPort-&gt;RtsEnable = true;\n\n        mySerialPort-&gt;DataReceived += gcnew SerialDataReceivedEventHandler(DataReceivedHandler);\n\n        mySerialPort-&gt;Open();\n\n        Console::WriteLine(&quot;Press any key to continue...&quot;);\n        Console::WriteLine();\n        Console::ReadKey();\n        mySerialPort-&gt;Close();\n    }\n\nprivate:\n    static void DataReceivedHandler(\n                        Object^ sender,\n                        SerialDataReceivedEventArgs^ e)\n    {\n        SerialPort^ sp = (SerialPort^)sender;\n        String^ indata = sp-&gt;ReadExisting();\n        Console::WriteLine(&quot;Data Received:&quot;);\n        Console::Write(indata);\n    }\n};\n\nint main()\n{\n    PortDataReceived::Main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Ports.SerialPort#06\">Imports System\nImports System.IO.Ports\n\nClass PortDataReceived\n    Public Shared Sub Main()\n        Dim mySerialPort As New SerialPort(&quot;COM1&quot;)\n\n        mySerialPort.BaudRate = 9600\n        mySerialPort.Parity = Parity.None\n        mySerialPort.StopBits = StopBits.One\n        mySerialPort.DataBits = 8\n        mySerialPort.Handshake = Handshake.None\n        mySerialPort.RtsEnable = True\n\n        AddHandler mySerialPort.DataReceived, AddressOf DataReceivedHandler\n\n        mySerialPort.Open()\n\n        Console.WriteLine(&quot;Press any key to continue...&quot;)\n        Console.WriteLine()\n        Console.ReadKey()\n        mySerialPort.Close()\n    End Sub\n\n    Private Shared Sub DataReceivedHandler(\n                        sender As Object,\n                        e As SerialDataReceivedEventArgs)\n        Dim sp As SerialPort = CType(sender, SerialPort)\n        Dim indata As String = sp.ReadExisting()\n        Console.WriteLine(&quot;Data Received:&quot;)\n        Console.Write(indata)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_ErrorReceived\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorReceived</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that an error has occurred with a port represented by a <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Error events can be caused by any of the items in the <a class=\"xref\" href=\"system.io.ports.serialerror\" data-linktype=\"relative-path\">SerialError</a> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported.  </p>\n<p> <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_PinChanged\" data-linktype=\"relative-path\">PinChanged</a>, <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"relative-path\">DataReceived</a>, and ErrorReceived events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed. Only one event handler can execute at a time.  </p>\n<p> If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.  </p>\n<p> The ErrorReceived event is raised on a secondary thread when an error is received from the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> or <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, post change requests back using <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, which will do the work on the proper thread.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Ports_SerialPort_PinChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PinChanged</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that a non-data signal event has occurred on the port represented by the <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Serial pin changed events can be caused by any of the items in the <a class=\"xref\" href=\"system.io.ports.serialpinchange\" data-linktype=\"relative-path\">SerialPinChange</a> enumeration. Because the operating system determines whether to raise this event or not, not all parity errors may be reported. As part of the event, the new value of the pin is set.  </p>\n<p> The PinChanged event is raised when a <a class=\"xref\" href=\"system.io.ports.serialport\" data-linktype=\"relative-path\">SerialPort</a> object enters the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BreakState_\" data-linktype=\"relative-path\">BreakState</a>, but not when the port exits the <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_BreakState_\" data-linktype=\"relative-path\">BreakState</a>. This behavior does not apply to other values in the <a class=\"xref\" href=\"system.io.ports.serialpinchange\" data-linktype=\"relative-path\">SerialPinChange</a> enumeration.  </p>\n<p> PinChanged, <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_DataReceived\" data-linktype=\"relative-path\">DataReceived</a>, and <a class=\"xref\" href=\"system.io.ports.serialport#System_IO_Ports_SerialPort_ErrorReceived\" data-linktype=\"relative-path\">ErrorReceived</a> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed. Only one event handler can execute at a time.  </p>\n<p> The PinChanged event is raised on a secondary thread. Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception. If it is necessary to modify elements in the main <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> or <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, post change requests back using <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_\" data-linktype=\"relative-path\">Invoke</a>, which will do the work on the proper thread.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Ports.SerialPort.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Ports.SerialPort.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.BaseStream\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.BaudRate\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.BreakState\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.BytesToRead\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.BytesToWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.CDHolding\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Close\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.CtsHolding\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DataBits\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DataReceived\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.add_DataReceived\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.remove_DataReceived\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DiscardInBuffer\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DiscardNull\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DiscardOutBuffer\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Dispose\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DsrHolding\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.DtrEnable\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Encoding\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ErrorReceived\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.add_ErrorReceived\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.remove_ErrorReceived\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.GetPortNames\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Handshake\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.InfiniteTimeout\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.IsOpen\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.NewLine\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Open\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Parity\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ParityReplace\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.PinChanged\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.add_PinChanged\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.remove_PinChanged\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.PortName\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Read\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadBufferSize\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadByte\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadChar\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadExisting\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadLine\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadTimeout\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReadTo\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.ReceivedBytesThreshold\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.RtsEnable\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.StopBits\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.Write\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.WriteBufferSize\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.WriteLine\">\r\n<meta name=\"APIName\" content=\"System.IO.Ports.SerialPort.WriteTimeout\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"10043961-2ba4-4470-9c03-7832f060d98f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a serial port resource.  \n To browse the .NET Framework source code for this type, see the Reference Source.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO.Ports/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.Ports.SerialPort\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Ports.SerialPort.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Ports.SerialPort.yml","open_to_public_contributors":true,"api_name":["System.IO.Ports.SerialPort","System.IO.Ports.SerialPort..ctor","System.IO.Ports.SerialPort.BaseStream","System.IO.Ports.SerialPort.BaudRate","System.IO.Ports.SerialPort.BreakState","System.IO.Ports.SerialPort.BytesToRead","System.IO.Ports.SerialPort.BytesToWrite","System.IO.Ports.SerialPort.CDHolding","System.IO.Ports.SerialPort.Close","System.IO.Ports.SerialPort.CtsHolding","System.IO.Ports.SerialPort.DataBits","System.IO.Ports.SerialPort.DataReceived","System.IO.Ports.SerialPort.add_DataReceived","System.IO.Ports.SerialPort.remove_DataReceived","System.IO.Ports.SerialPort.DiscardInBuffer","System.IO.Ports.SerialPort.DiscardNull","System.IO.Ports.SerialPort.DiscardOutBuffer","System.IO.Ports.SerialPort.Dispose","System.IO.Ports.SerialPort.DsrHolding","System.IO.Ports.SerialPort.DtrEnable","System.IO.Ports.SerialPort.Encoding","System.IO.Ports.SerialPort.ErrorReceived","System.IO.Ports.SerialPort.add_ErrorReceived","System.IO.Ports.SerialPort.remove_ErrorReceived","System.IO.Ports.SerialPort.GetPortNames","System.IO.Ports.SerialPort.Handshake","System.IO.Ports.SerialPort.InfiniteTimeout","System.IO.Ports.SerialPort.IsOpen","System.IO.Ports.SerialPort.NewLine","System.IO.Ports.SerialPort.Open","System.IO.Ports.SerialPort.Parity","System.IO.Ports.SerialPort.ParityReplace","System.IO.Ports.SerialPort.PinChanged","System.IO.Ports.SerialPort.add_PinChanged","System.IO.Ports.SerialPort.remove_PinChanged","System.IO.Ports.SerialPort.PortName","System.IO.Ports.SerialPort.Read","System.IO.Ports.SerialPort.ReadBufferSize","System.IO.Ports.SerialPort.ReadByte","System.IO.Ports.SerialPort.ReadChar","System.IO.Ports.SerialPort.ReadExisting","System.IO.Ports.SerialPort.ReadLine","System.IO.Ports.SerialPort.ReadTimeout","System.IO.Ports.SerialPort.ReadTo","System.IO.Ports.SerialPort.ReceivedBytesThreshold","System.IO.Ports.SerialPort.RtsEnable","System.IO.Ports.SerialPort.StopBits","System.IO.Ports.SerialPort.Write","System.IO.Ports.SerialPort.WriteBufferSize","System.IO.Ports.SerialPort.WriteLine","System.IO.Ports.SerialPort.WriteTimeout"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.Ports.SerialPort","System::IO::Ports::SerialPort","System.IO.Ports.SerialPort.#ctor","System::IO::Ports::SerialPort::#ctor","System.IO.Ports.SerialPort.BaseStream","System::IO::Ports::SerialPort::BaseStream","System.IO.Ports.SerialPort.BaudRate","System::IO::Ports::SerialPort::BaudRate","System.IO.Ports.SerialPort.BreakState","System::IO::Ports::SerialPort::BreakState","System.IO.Ports.SerialPort.BytesToRead","System::IO::Ports::SerialPort::BytesToRead","System.IO.Ports.SerialPort.BytesToWrite","System::IO::Ports::SerialPort::BytesToWrite","System.IO.Ports.SerialPort.CDHolding","System::IO::Ports::SerialPort::CDHolding","System.IO.Ports.SerialPort.Close","System::IO::Ports::SerialPort::Close","System.IO.Ports.SerialPort.CtsHolding","System::IO::Ports::SerialPort::CtsHolding","System.IO.Ports.SerialPort.DataBits","System::IO::Ports::SerialPort::DataBits","System.IO.Ports.SerialPort.DataReceived","System::IO::Ports::SerialPort::DataReceived","System.IO.Ports.SerialPort.DiscardInBuffer","System::IO::Ports::SerialPort::DiscardInBuffer","System.IO.Ports.SerialPort.DiscardNull","System::IO::Ports::SerialPort::DiscardNull","System.IO.Ports.SerialPort.DiscardOutBuffer","System::IO::Ports::SerialPort::DiscardOutBuffer","System.IO.Ports.SerialPort.Dispose","System::IO::Ports::SerialPort::Dispose","System.IO.Ports.SerialPort.DsrHolding","System::IO::Ports::SerialPort::DsrHolding","System.IO.Ports.SerialPort.DtrEnable","System::IO::Ports::SerialPort::DtrEnable","System.IO.Ports.SerialPort.Encoding","System::IO::Ports::SerialPort::Encoding","System.IO.Ports.SerialPort.ErrorReceived","System::IO::Ports::SerialPort::ErrorReceived","System.IO.Ports.SerialPort.GetPortNames","System::IO::Ports::SerialPort::GetPortNames","System.IO.Ports.SerialPort.Handshake","System::IO::Ports::SerialPort::Handshake","System.IO.Ports.SerialPort.InfiniteTimeout","System::IO::Ports::SerialPort::InfiniteTimeout","System.IO.Ports.SerialPort.IsOpen","System::IO::Ports::SerialPort::IsOpen","System.IO.Ports.SerialPort.NewLine","System::IO::Ports::SerialPort::NewLine","System.IO.Ports.SerialPort.Open","System::IO::Ports::SerialPort::Open","System.IO.Ports.SerialPort.Parity","System::IO::Ports::SerialPort::Parity","System.IO.Ports.SerialPort.ParityReplace","System::IO::Ports::SerialPort::ParityReplace","System.IO.Ports.SerialPort.PinChanged","System::IO::Ports::SerialPort::PinChanged","System.IO.Ports.SerialPort.PortName","System::IO::Ports::SerialPort::PortName","System.IO.Ports.SerialPort.Read","System::IO::Ports::SerialPort::Read","System.IO.Ports.SerialPort.ReadBufferSize","System::IO::Ports::SerialPort::ReadBufferSize","System.IO.Ports.SerialPort.ReadByte","System::IO::Ports::SerialPort::ReadByte","System.IO.Ports.SerialPort.ReadChar","System::IO::Ports::SerialPort::ReadChar","System.IO.Ports.SerialPort.ReadExisting","System::IO::Ports::SerialPort::ReadExisting","System.IO.Ports.SerialPort.ReadLine","System::IO::Ports::SerialPort::ReadLine","System.IO.Ports.SerialPort.ReadTimeout","System::IO::Ports::SerialPort::ReadTimeout","System.IO.Ports.SerialPort.ReadTo","System::IO::Ports::SerialPort::ReadTo","System.IO.Ports.SerialPort.ReceivedBytesThreshold","System::IO::Ports::SerialPort::ReceivedBytesThreshold","System.IO.Ports.SerialPort.RtsEnable","System::IO::Ports::SerialPort::RtsEnable","System.IO.Ports.SerialPort.StopBits","System::IO::Ports::SerialPort::StopBits","System.IO.Ports.SerialPort.Write","System::IO::Ports::SerialPort::Write","System.IO.Ports.SerialPort.WriteBufferSize","System::IO::Ports::SerialPort::WriteBufferSize","System.IO.Ports.SerialPort.WriteLine","System::IO::Ports::SerialPort::WriteLine","System.IO.Ports.SerialPort.WriteTimeout","System::IO::Ports::SerialPort::WriteTimeout"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"10043961-2ba4-4470-9c03-7832f060d98f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO.Ports/SerialPort.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SerialPort class | Microsoft Docs","_op_ogTitle":"SerialPort class","description":"Represents a serial port resource.  \n To browse the .NET Framework source code for this type, see the Reference Source.\n","toc_asset_id":"_splitted/System.IO.Ports/toc.json","toc_rel":"_splitted/System.IO.Ports/toc.json","source_url":"","ms.assetid":"System.IO.Ports.SerialPort","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.ports.serialport","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.ports.serialport","fileRelativePath":"System.IO.Ports.SerialPort.html"},"themesRelativePathToOutputRoot":"_themes/"}