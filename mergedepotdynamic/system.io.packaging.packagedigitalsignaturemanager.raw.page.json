{"content":"    \r\n    <h1 id=\"System_IO_Packaging_PackageDigitalSignatureManager\">\r\n      <span class=\"lang-csharp\">PackageDigitalSignatureManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a utility class for the creation and verification of digital signatures in a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class PackageDigitalSignatureManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PackageDigitalSignatureManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>PackageDigitalSignatureManager builds on the architecture of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-netframewk-md.md&quot; -->Microsoft .NET Framework<!--END INCLUDE --> digital signature classes and provides a utility class for performing common tasks in using digital signatures with <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> elements.  </p>\n<p> For more information about package digital signatures, see the MSDN article Digital Signing Framework of the Open Packaging Conventions available at <a href=\"http://go.microsoft.com/fwlink/?LinkId=74494\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkId=74494</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager__ctor_System_IO_Packaging_Package_\" data-linktype=\"self-bookmark\">PackageDigitalSignatureManager(Package)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager\" data-linktype=\"relative-path\">PackageDigitalSignatureManager</a> class for use with a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_CertificateOption\" data-linktype=\"self-bookmark\">CertificateOption</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the X.509 certificate embedding option used by the <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignatureManager.Sign*</span> method to digitally sign package parts.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_DefaultHashAlgorithm\" data-linktype=\"self-bookmark\">DefaultHashAlgorithm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> string that identifies the default hash algorithm used to create and verify signatures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_HashAlgorithm\" data-linktype=\"self-bookmark\">HashAlgorithm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> identifier for the <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a> instance used to create and verify signatures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_IsSigned\" data-linktype=\"self-bookmark\">IsSigned</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the package contains any signatures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_ParentWindow\" data-linktype=\"self-bookmark\">ParentWindow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a handle to the parent window for displaying a certificate selection dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_SignatureOrigin\" data-linktype=\"self-bookmark\">SignatureOrigin</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> of the signature origin part.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_SignatureOriginRelationshipType\" data-linktype=\"self-bookmark\">SignatureOriginRelationshipType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of default signature origin relationship.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Signatures\" data-linktype=\"self-bookmark\">Signatures</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of all the signatures contained in the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_TimeFormat\" data-linktype=\"self-bookmark\">TimeFormat</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the date/time format used to create a signature <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignature.SigningTime*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_TransformMapping\" data-linktype=\"self-bookmark\">TransformMapping</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary that contains each defined <span class=\"xref\">stem.IO.Packaging.PackagePart.ContentType*</span> and its associated <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> <a class=\"xref\" href=\"system.security.cryptography.xml.transform\" data-linktype=\"relative-path\">Transform</a>.<span class=\"xref\">stem.Security.Cryptography.Xml.Transform.Algorithm*</span> identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Countersign\" data-linktype=\"self-bookmark\">Countersign()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Countersigns all the signatures in the package with a user-selected X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Countersign_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">Countersign(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Countersigns all the signatures in the package with a specified X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Countersign_System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_Uri__\" data-linktype=\"self-bookmark\">Countersign(X509Certificate,IEnumerable&lt;Uri&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Countersigns a list of signatures with a given X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_GetSignature_System_Uri_\" data-linktype=\"self-bookmark\">GetSignature(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the digital signature for a given signature <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_RemoveAllSignatures\" data-linktype=\"self-bookmark\">RemoveAllSignatures()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all digital signatures from the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_RemoveSignature_System_Uri_\" data-linktype=\"self-bookmark\">RemoveSignature(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the digital signature with a given signature <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__\" data-linktype=\"self-bookmark\">Sign(IEnumerable&lt;Uri&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a list of package parts with a given X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_IO_Packaging_PackageRelationshipSelector__\" data-linktype=\"self-bookmark\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate,IEnumerable&lt;PackageRelationshipSelector&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a list of package parts and package relationships with a given X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_IO_Packaging_PackageRelationshipSelector__System_String_\" data-linktype=\"self-bookmark\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate,IEnumerable&lt;PackageRelationshipSelector&gt;,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a list of package parts and package relationships with a given X.509 certificate and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-id-md.md&quot; -->identifier (ID)<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_IO_Packaging_PackageRelationshipSelector__System_String_System_Collections_Generic_IEnumerable_System_Security_Cryptography_Xml_DataObject__System_Collections_Generic_IEnumerable_System_Security_Cryptography_Xml_Reference__\" data-linktype=\"self-bookmark\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate,IEnumerable&lt;PackageRelationshipSelector&gt;,String,IEnumerable&lt;DataObject&gt;,IEnumerable&lt;Reference&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-id-md.md&quot; -->identifier (ID)<!--END INCLUDE -->.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_VerifyCertificate_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">VerifyCertificate(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies a given X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_VerifySignatures_System_Boolean_\" data-linktype=\"self-bookmark\">VerifySignatures(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies the signatures on all signed parts within the package.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageDigitalSignatureManager_InvalidSignatureEvent\" data-linktype=\"self-bookmark\">InvalidSignatureEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*</span> encounters an invalid signature.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager__ctor_System_IO_Packaging_Package_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PackageDigitalSignatureManager(Package)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager\" data-linktype=\"relative-path\">PackageDigitalSignatureManager</a> class for use with a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PackageDigitalSignatureManager (System.IO.Packaging.Package package);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>package</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The package associated with this signature manager.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The target package associated with the signature manager is set during initialization. After it is set, the package associated with the signature manager cannot be changed. Create a new signature manager for each package as needed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this constructor.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<!-- Can not find reference ../CodeSnippet/VS_Snippets_Wpf/PackageDigitalSignature -->\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_CertificateOption\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_CertificateOption_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CertificateOption</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the X.509 certificate embedding option used by the <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignatureManager.Sign*</span> method to digitally sign package parts.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.certificateembeddingoption\" data-linktype=\"relative-path\">CertificateEmbeddingOption</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.io.packaging.certificateembeddingoption\" data-linktype=\"relative-path\">CertificateEmbeddingOption</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property specifies where the signer&#39;s X.509 certificate will be stored when digitally signing a part.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set this property in preparation to digitally sign the parts within a package.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<!-- Can not find reference ../CodeSnippet/VS_Snippets_Wpf/PackageDigitalSignature -->\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_DefaultHashAlgorithm\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_DefaultHashAlgorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultHashAlgorithm</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> string that identifies the default hash algorithm used to create and verify signatures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string DefaultHashAlgorithm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> string that identifies the default hash algorithm used to create and verify signatures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default hash algorithm for the standard <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager\" data-linktype=\"relative-path\">PackageDigitalSignatureManager</a> class is <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigSHA1Url\" data-linktype=\"relative-path\">XmlDsigSHA1Url</a> (<!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-sha1-md.md&quot; -->Secure Hash Algorithm version 1.0 (SHA1)<!--END INCLUDE -->).  </p>\n<p> The <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_HashAlgorithm_\" data-linktype=\"relative-path\">HashAlgorithm</a> property gets or sets the actual hash algorithm this is used to create and verify signatures.  </p>\n<p> The DefaultHashAlgorithm property is typically used to reset the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_HashAlgorithm_\" data-linktype=\"relative-path\">HashAlgorithm</a> property back to default after a temporary change.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_HashAlgorithm\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_HashAlgorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HashAlgorithm</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> identifier for the <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a> instance used to create and verify signatures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string HashAlgorithm { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml\" data-linktype=\"relative-path\">SignedXml</a> <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> identifier for the <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a> instance used to create and verify signatures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The string for the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> to set is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The string for the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> to set is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default hash algorithm identifier for the standard digital signature manager is <a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigSHA1Url\" data-linktype=\"relative-path\">XmlDsigSHA1Url</a> (<a class=\"xref\" href=\"system.security.cryptography.sha1\" data-linktype=\"relative-path\">SHA1</a>â€”Secure Hash Algorithm version 1.0).  </p>\n<p> Unless explicitly set otherwise, this property gets the same value as <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_DefaultHashAlgorithm_\" data-linktype=\"relative-path\">DefaultHashAlgorithm</a>.  </p>\n<p> The HashAlgorithm property is typically not changed from its default. This property must be changed only if a signature that uses a different known and accessible <a class=\"xref\" href=\"system.security.cryptography.hashalgorithm\" data-linktype=\"relative-path\">HashAlgorithm</a> is encountered.  When finished with the signature that uses a different hash algorithm, call <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_DefaultHashAlgorithm_\" data-linktype=\"relative-path\">DefaultHashAlgorithm</a> to reset the HashAlgorithm property back to default.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_IsSigned\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_IsSigned_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSigned</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the package contains any signatures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSigned { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the package contains signatures; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsSigned property does not perform signature validations. If signatures are present and IsSigned is <code>true</code>, one or more of the signatures might not be valid.  Call <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_VerifySignatures_\" data-linktype=\"relative-path\">VerifySignatures</a> to confirm that the signatures are valid and have not changed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the IsSigned property to determine if a package contains digital signatures.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageDigitalSignature#PackageDigSigValidate\">&#39; ------------------------ ValidateSignatures ------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Validates all the digital signatures of a given package.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;package&quot;&gt;\n&#39;&#39;&#39; The package for validating digital signatures.&lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; true if all digital signatures are valid; otherwise false if the\n&#39;&#39;&#39; package is unsigned or any of the signatures are invalid.&lt;/returns&gt;\nPrivate Shared Function ValidateSignatures(ByVal package As Package) As Boolean\n    If package Is Nothing Then\n        Throw New ArgumentNullException(&quot;ValidateSignatures(package)&quot;)\n    End If\n\n    &#39; Create a PackageDigitalSignatureManager for the given Package.\n    Dim dsm As New PackageDigitalSignatureManager(package)\n\n    &#39; Check to see if the package contains any signatures.\n    If Not dsm.IsSigned Then\n        Return False\n    End If\n    &#39; The package is not signed.\n    &#39; Verify that all signatures are valid.\n    Dim result As VerifyResult = dsm.VerifySignatures(False)\n    If result &lt;&gt; VerifyResult.Success Then\n        Return False\n    End If\n    &#39; One or more digital signatures are invalid.\n    &#39; else if (result == VerifyResult.Success)\n    &#39; All signatures are valid.\n    Return True\nEnd Function\n&#39; end:ValidateSignatures()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageDigitalSignature#PackageDigSigValidate\">// ------------------------ ValidateSignatures ------------------------\n/// &lt;summary&gt;\n///   Validates all the digital signatures of a given package.&lt;/summary&gt;\n/// &lt;param name=&quot;package&quot;&gt;\n///   The package for validating digital signatures.&lt;/param&gt;\n/// &lt;returns&gt;\n///   true if all digital signatures are valid; otherwise false if the\n///   package is unsigned or any of the signatures are invalid.&lt;/returns&gt;\nprivate static bool ValidateSignatures(Package package)\n{\n    if (package == null)\n        throw new ArgumentNullException(&quot;ValidateSignatures(package)&quot;);\n\n    // Create a PackageDigitalSignatureManager for the given Package.\n    PackageDigitalSignatureManager dsm =\n        new PackageDigitalSignatureManager(package);\n\n    // Check to see if the package contains any signatures.\n    if (!dsm.IsSigned)\n        return false;   // The package is not signed.\n\n    // Verify that all signatures are valid.\n    VerifyResult result = dsm.VerifySignatures(false);\n    if (result != VerifyResult.Success)\n        return false;   // One or more digital signatures are invalid.\n\n    // else if (result == VerifyResult.Success)\n    return true;        // All signatures are valid.\n\n}// end:ValidateSignatures()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_ParentWindow\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_ParentWindow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParentWindow</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a handle to the parent window for displaying a certificate selection dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr ParentWindow { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>The handle of the parent window to use to display the certificate selection dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A certificate selection dialog box is presented only if a <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_Sign_\" data-linktype=\"relative-path\">Sign</a> call contains no certificates. If no certificates are specified, <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_Sign_\" data-linktype=\"relative-path\">Sign</a> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_SignatureOrigin\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_SignatureOrigin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignatureOrigin</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> of the signature origin part.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri SignatureOrigin { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> of the signature origin part.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SignatureOrigin <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> can vary by package because the name is not formally defined. While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_SignatureOriginRelationshipType\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_SignatureOriginRelationshipType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignatureOriginRelationshipType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of default signature origin relationship.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string SignatureOriginRelationshipType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The type of default signature origin relationship.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Signatures\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Signatures_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Signatures</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of all the signatures contained in the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of all the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_TimeFormat\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_TimeFormat_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeFormat</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the date/time format used to create a signature <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignature.SigningTime*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TimeFormat { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The date/time format used to create a signature <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignature.SigningTime*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default TimeFormat is &quot;YYYY-MM-DDThh:mm:ss.sTZD&quot;.  </p>\n<p> Date/time formats follow the syntax of the &quot;W3C Date and Time Formats&quot; specification at <a href=\"http://www.w3.org/TR/Note-datetime.html\" data-linktype=\"external\">http://www.w3.org/TR/Note-datetime.html</a>. The components shown below must be present and use the syntax and punctuation as defined.  </p>\n<table>\n<thead>\n<tr>\n<th>TimeFormat</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>YYYY</td>\n<td>Year</td>\n<td>2005</td>\n</tr>\n<tr>\n<td>YYYY-MM</td>\n<td>Year and month</td>\n<td>2005-07</td>\n</tr>\n<tr>\n<td>YYYY-MM-DD</td>\n<td>Complete date</td>\n<td>2005-07-28</td>\n</tr>\n<tr>\n<td>YYYY-MM-DDThh:mmTZD</td>\n<td>Complete date plus hours and minutes</td>\n<td>2005-07-28T19:20-01:00</td>\n</tr>\n<tr>\n<td>YYYY-MM-DDThh:mm:ssTZD</td>\n<td>Complete date plus hours, minutes, and seconds</td>\n<td>2005-07-28T19:20:45-01:00</td>\n</tr>\n<tr>\n<td>YYYY-MM-DDThh:mm:ss.sTZD</td>\n<td>Complete date plus hours, minutes, and seconds with a decimal fraction</td>\n<td>2005-07-28T19:20:45.75-01:00</td>\n</tr>\n</tbody>\n</table>\n<p> where:  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>YYYY</td>\n<td>four-digit year (for example 2005)</td>\n</tr>\n<tr>\n<td>MM</td>\n<td>two-digit month (01=January)</td>\n</tr>\n<tr>\n<td>DD</td>\n<td>two-digit day of month (01 through 31)</td>\n</tr>\n<tr>\n<td>Thh</td>\n<td>two-digit hour (00 through 23, 24-hour time)</td>\n</tr>\n<tr>\n<td>mm</td>\n<td>two digits of minutes (00 through 59)</td>\n</tr>\n<tr>\n<td>ss</td>\n<td>two digits of seconds (00 through 59)</td>\n</tr>\n<tr>\n<td>s</td>\n<td>one or more digits representing a decimal fracion of a second</td>\n</tr>\n<tr>\n<td>TZD</td>\n<td>time zone designator (Z or +hh:mm or -hh:mm)</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_TransformMapping\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_TransformMapping_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformMapping</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary that contains each defined <span class=\"xref\">stem.IO.Packaging.PackagePart.ContentType*</span> and its associated <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> <a class=\"xref\" href=\"system.security.cryptography.xml.transform\" data-linktype=\"relative-path\">Transform</a>.<span class=\"xref\">stem.Security.Cryptography.Xml.Transform.Algorithm*</span> identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>A dictionary that contains each defined <span class=\"xref\">stem.IO.Packaging.PackagePart.ContentType*</span> and its associated <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> <a class=\"xref\" href=\"system.security.cryptography.xml.transform\" data-linktype=\"relative-path\">Transform</a>.<span class=\"xref\">stem.Security.Cryptography.Xml.Transform.Algorithm*</span> identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During a sign operation the associated transform algorithm for each content type is applied before the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_HashAlgorithm_\" data-linktype=\"relative-path\">HashAlgorithm</a> is executed.  </p>\n<p> Default content and transform mappings include:  </p>\n<table>\n<thead>\n<tr>\n<th>Content</th>\n<th>ContentType</th>\n<th>Transform algorithm identifier</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Relationship</td>\n<td>&quot;application/vnd.openxmlformats-package.relationships+xml&quot;</td>\n<td><a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NTransformUrl\" data-linktype=\"relative-path\">XmlDsigC14NTransformUrl</a></td>\n</tr>\n<tr>\n<td>Digital Signature</td>\n<td>&quot;application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml&quot;</td>\n<td><a class=\"xref\" href=\"system.security.cryptography.xml.signedxml#System_Security_Cryptography_Xml_SignedXml_XmlDsigC14NTransformUrl\" data-linktype=\"relative-path\">XmlDsigC14NTransformUrl</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Countersign\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Countersign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Countersign()</div>        \r\n          </div>\r\n    \r\n            <p>Countersigns all the signatures in the package with a user-selected X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Countersign ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The signature that was added as a countersign; or <code>null</code> if no certificate could be located or the user canceled the certificate selection dialog.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.  </p>\n<p> Set the window handle in the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_ParentWindow_\" data-linktype=\"relative-path\">ParentWindow</a> property before calling Countersign to make the Certificate Selection Dialog modal to the given window.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Countersign_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Countersign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Countersign(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Countersigns all the signatures in the package with a specified X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to add as a countersign signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The signature that was added as a countersign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>certificate</code> is <code>null</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Countersign_System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_Uri__\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Countersign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Countersign(X509Certificate,IEnumerable&lt;Uri&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Countersigns a list of signatures with a given X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to countersign each of the specified <code>signatures</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signatures</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of signatures to countersign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature used to countersign each of the <code>signatures</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Either the <code>certificate</code> or <code>signatures</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The package contains no signed <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The package contains no <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a> parts.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_GetSignature_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_GetSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSignature(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the digital signature for a given signature <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signatureUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> of the digital signature to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature for the specified <code>signatureUri</code>, or <code>null</code> if a signature for the given <code>signatureUri</code> cannot be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_RemoveAllSignatures\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_RemoveAllSignatures_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAllSignatures()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all digital signatures from the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveAllSignatures ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method also removes all X.509 certificates from the package.  After removing all signatures and certificates, call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Flush_\" data-linktype=\"relative-path\">Flush</a> to persist all changes to the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_RemoveSignature_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_RemoveSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveSignature(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the digital signature with a given signature <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveSignature (Uri signatureUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signatureUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> of the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a> to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method also removes the associated X.509 certificate if it is not referenced by any other digital signature.  </p>\n<p> After removing a signature, call <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Flush_\" data-linktype=\"relative-path\">Flush</a> to persist the change to the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sign(IEnumerable&lt;Uri&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-urisharpplural-md.md&quot; -->uniform resource identifiers (URIs)<!--END INCLUDE --> for the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements to sign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature used to sign the list of <code>parts</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To make the certificate selection dialog modal to a particular window, set the <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_ParentWindow_\" data-linktype=\"relative-path\">ParentWindow</a> property before calling Sign.  </p>\n<p> Sign will not prompt for certificates if there are none in the default certificate store.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to digitally sign a list of package parts.  For the complete sample, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageDigitalSignature#PackageDigSigSign\">Private Shared Sub SignAllParts(ByVal package As Package)\n    If package Is Nothing Then\n        Throw New ArgumentNullException(&quot;SignAllParts(package)&quot;)\n    End If\n\n    &#39; Create the DigitalSignature Manager\n    Dim dsm As New PackageDigitalSignatureManager(package)\n    dsm.CertificateOption = CertificateEmbeddingOption.InSignaturePart\n\n    &#39; Create a list of all the part URIs in the package to sign\n    &#39; (GetParts() also includes PackageRelationship parts).\n    Dim toSign As New System.Collections.Generic.List(Of Uri)()\n    For Each packagePart As PackagePart In package.GetParts()\n        &#39; Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri)\n    Next\n\n    &#39; Add the URI for SignatureOrigin PackageRelationship part.\n    &#39; The SignatureOrigin relationship is created when Sign() is called.\n    &#39; Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin))\n\n    &#39; Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin)\n\n    &#39; Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(New Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)))\n\n    &#39; Sign() will prompt the user to select a Certificate to sign with.\n    Try\n        dsm.Sign(toSign)\n    Catch ex As CryptographicException\n\n        &#39; If there are no certificates or the SmartCard manager is\n        &#39; not running, catch the exception and show an error message.\n        MessageBox.Show(&quot;Cannot Sign&quot; &amp; vbLf &amp; ex.Message, &quot;No Digital Certificates Available&quot;, MessageBoxButton.OK, MessageBoxImage.Exclamation)\n\n    End Try\nEnd Sub\nPrivate Shared Function InlineAssignHelper(Of T)(ByRef target As T, ByVal value As T) As T\n    target = value\n    Return value\nEnd Function\n&#39; end:SignAllParts()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageDigitalSignature#PackageDigSigSign\">private static void SignAllParts(Package package)\n{\n    if (package == null)\n        throw new ArgumentNullException(&quot;SignAllParts(package)&quot;);\n\n    // Create the DigitalSignature Manager\n    PackageDigitalSignatureManager dsm =\n        new PackageDigitalSignatureManager(package);\n    dsm.CertificateOption =\n        CertificateEmbeddingOption.InSignaturePart;\n\n    // Create a list of all the part URIs in the package to sign\n    // (GetParts() also includes PackageRelationship parts).\n    System.Collections.Generic.List&lt;Uri&gt; toSign =\n        new System.Collections.Generic.List&lt;Uri&gt;();\n    foreach (PackagePart packagePart in package.GetParts())\n    {\n        // Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri);\n    }\n\n    // Add the URI for SignatureOrigin PackageRelationship part.\n    // The SignatureOrigin relationship is created when Sign() is called.\n    // Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin));\n\n    // Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin);\n\n    // Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(new Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)));\n\n    // Sign() will prompt the user to select a Certificate to sign with.\n    try\n    {\n        dsm.Sign(toSign);\n    }\n\n    // If there are no certificates or the SmartCard manager is\n    // not running, catch the exception and show an error message.\n    catch (CryptographicException ex)\n    {\n        MessageBox.Show(\n            &quot;Cannot Sign<br>&quot; + ex.Message,\n            &quot;No Digital Certificates Available&quot;,\n            MessageBoxButton.OK,\n            MessageBoxImage.Exclamation);\n    }\n\n}// end:SignAllParts()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a list of package parts with a given X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-urisharpplural-md.md&quot; -->uniform resource identifiers (URIs)<!--END INCLUDE --> for the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> elements to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use to digitally sign each of the specified <code>parts</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature used to sign the given list of <code>parts</code>; or <code>null</code> if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to digitally sign a list of parts within a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.  For the complete example, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageDigitalSignature#PackageDigSigSign\">Private Shared Sub SignAllParts(ByVal package As Package)\n    If package Is Nothing Then\n        Throw New ArgumentNullException(&quot;SignAllParts(package)&quot;)\n    End If\n\n    &#39; Create the DigitalSignature Manager\n    Dim dsm As New PackageDigitalSignatureManager(package)\n    dsm.CertificateOption = CertificateEmbeddingOption.InSignaturePart\n\n    &#39; Create a list of all the part URIs in the package to sign\n    &#39; (GetParts() also includes PackageRelationship parts).\n    Dim toSign As New System.Collections.Generic.List(Of Uri)()\n    For Each packagePart As PackagePart In package.GetParts()\n        &#39; Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri)\n    Next\n\n    &#39; Add the URI for SignatureOrigin PackageRelationship part.\n    &#39; The SignatureOrigin relationship is created when Sign() is called.\n    &#39; Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin))\n\n    &#39; Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin)\n\n    &#39; Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(New Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)))\n\n    &#39; Sign() will prompt the user to select a Certificate to sign with.\n    Try\n        dsm.Sign(toSign)\n    Catch ex As CryptographicException\n\n        &#39; If there are no certificates or the SmartCard manager is\n        &#39; not running, catch the exception and show an error message.\n        MessageBox.Show(&quot;Cannot Sign&quot; &amp; vbLf &amp; ex.Message, &quot;No Digital Certificates Available&quot;, MessageBoxButton.OK, MessageBoxImage.Exclamation)\n\n    End Try\nEnd Sub\nPrivate Shared Function InlineAssignHelper(Of T)(ByRef target As T, ByVal value As T) As T\n    target = value\n    Return value\nEnd Function\n&#39; end:SignAllParts()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageDigitalSignature#PackageDigSigSign\">private static void SignAllParts(Package package)\n{\n    if (package == null)\n        throw new ArgumentNullException(&quot;SignAllParts(package)&quot;);\n\n    // Create the DigitalSignature Manager\n    PackageDigitalSignatureManager dsm =\n        new PackageDigitalSignatureManager(package);\n    dsm.CertificateOption =\n        CertificateEmbeddingOption.InSignaturePart;\n\n    // Create a list of all the part URIs in the package to sign\n    // (GetParts() also includes PackageRelationship parts).\n    System.Collections.Generic.List&lt;Uri&gt; toSign =\n        new System.Collections.Generic.List&lt;Uri&gt;();\n    foreach (PackagePart packagePart in package.GetParts())\n    {\n        // Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri);\n    }\n\n    // Add the URI for SignatureOrigin PackageRelationship part.\n    // The SignatureOrigin relationship is created when Sign() is called.\n    // Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin));\n\n    // Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin);\n\n    // Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(new Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)));\n\n    // Sign() will prompt the user to select a Certificate to sign with.\n    try\n    {\n        dsm.Sign(toSign);\n    }\n\n    // If there are no certificates or the SmartCard manager is\n    // not running, catch the exception and show an error message.\n    catch (CryptographicException ex)\n    {\n        MessageBox.Show(\n            &quot;Cannot Sign<br>&quot; + ex.Message,\n            &quot;No Digital Certificates Available&quot;,\n            MessageBoxButton.OK,\n            MessageBoxImage.Exclamation);\n    }\n\n}// end:SignAllParts()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_IO_Packaging_PackageRelationshipSelector__\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate,IEnumerable&lt;PackageRelationshipSelector&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a list of package parts and package relationships with a given X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-urisharpplural-md.md&quot; -->uniform resource identifiers (URIs)<!--END INCLUDE --> for the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> objects to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use to digitally sign each of the specified parts and relationships.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relationshipSelectors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.io.packaging.packagerelationshipselector\" data-linktype=\"relative-path\">PackageRelationshipSelector</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> objects to sign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any objects to sign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Between <code>parts</code> and <code>relationshipSelectors</code> there must be at least one element to sign.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to digitally sign a list of package parts.  For the complete sample, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageDigitalSignature#PackageDigSigSign\">Private Shared Sub SignAllParts(ByVal package As Package)\n    If package Is Nothing Then\n        Throw New ArgumentNullException(&quot;SignAllParts(package)&quot;)\n    End If\n\n    &#39; Create the DigitalSignature Manager\n    Dim dsm As New PackageDigitalSignatureManager(package)\n    dsm.CertificateOption = CertificateEmbeddingOption.InSignaturePart\n\n    &#39; Create a list of all the part URIs in the package to sign\n    &#39; (GetParts() also includes PackageRelationship parts).\n    Dim toSign As New System.Collections.Generic.List(Of Uri)()\n    For Each packagePart As PackagePart In package.GetParts()\n        &#39; Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri)\n    Next\n\n    &#39; Add the URI for SignatureOrigin PackageRelationship part.\n    &#39; The SignatureOrigin relationship is created when Sign() is called.\n    &#39; Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin))\n\n    &#39; Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin)\n\n    &#39; Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(New Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)))\n\n    &#39; Sign() will prompt the user to select a Certificate to sign with.\n    Try\n        dsm.Sign(toSign)\n    Catch ex As CryptographicException\n\n        &#39; If there are no certificates or the SmartCard manager is\n        &#39; not running, catch the exception and show an error message.\n        MessageBox.Show(&quot;Cannot Sign&quot; &amp; vbLf &amp; ex.Message, &quot;No Digital Certificates Available&quot;, MessageBoxButton.OK, MessageBoxImage.Exclamation)\n\n    End Try\nEnd Sub\nPrivate Shared Function InlineAssignHelper(Of T)(ByRef target As T, ByVal value As T) As T\n    target = value\n    Return value\nEnd Function\n&#39; end:SignAllParts()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageDigitalSignature#PackageDigSigSign\">private static void SignAllParts(Package package)\n{\n    if (package == null)\n        throw new ArgumentNullException(&quot;SignAllParts(package)&quot;);\n\n    // Create the DigitalSignature Manager\n    PackageDigitalSignatureManager dsm =\n        new PackageDigitalSignatureManager(package);\n    dsm.CertificateOption =\n        CertificateEmbeddingOption.InSignaturePart;\n\n    // Create a list of all the part URIs in the package to sign\n    // (GetParts() also includes PackageRelationship parts).\n    System.Collections.Generic.List&lt;Uri&gt; toSign =\n        new System.Collections.Generic.List&lt;Uri&gt;();\n    foreach (PackagePart packagePart in package.GetParts())\n    {\n        // Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri);\n    }\n\n    // Add the URI for SignatureOrigin PackageRelationship part.\n    // The SignatureOrigin relationship is created when Sign() is called.\n    // Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin));\n\n    // Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin);\n\n    // Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(new Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)));\n\n    // Sign() will prompt the user to select a Certificate to sign with.\n    try\n    {\n        dsm.Sign(toSign);\n    }\n\n    // If there are no certificates or the SmartCard manager is\n    // not running, catch the exception and show an error message.\n    catch (CryptographicException ex)\n    {\n        MessageBox.Show(\n            &quot;Cannot Sign<br>&quot; + ex.Message,\n            &quot;No Digital Certificates Available&quot;,\n            MessageBoxButton.OK,\n            MessageBoxImage.Exclamation);\n    }\n\n}// end:SignAllParts()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_IO_Packaging_PackageRelationshipSelector__System_String_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate,IEnumerable&lt;PackageRelationshipSelector&gt;,String)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a list of package parts and package relationships with a given X.509 certificate and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-id-md.md&quot; -->identifier (ID)<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-urisharpplural-md.md&quot; -->uniform resource identifiers (URIs)<!--END INCLUDE --> for the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> objects to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use to digitally sign each of the specified parts and relationships.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relationshipSelectors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.io.packaging.packagerelationshipselector\" data-linktype=\"relative-path\">PackageRelationshipSelector</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> objects to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signatureId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An identification string to associate with the signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any elements to sign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>parts</code> list can be empty or <code>null</code> if <code>relationshipSelectors</code> contains at least one entry.  </p>\n<p> The <code>relationshipSelectors</code> list can be empty or <code>null</code> if <code>parts</code> contains at least one entry.  </p>\n<p> Between the <code>parts</code> list and <code>relationshipSelectors</code> there must be at least one element to sign.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to digitally sign a list of package parts.  For the complete sample, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageDigitalSignature#PackageDigSigSign\">Private Shared Sub SignAllParts(ByVal package As Package)\n    If package Is Nothing Then\n        Throw New ArgumentNullException(&quot;SignAllParts(package)&quot;)\n    End If\n\n    &#39; Create the DigitalSignature Manager\n    Dim dsm As New PackageDigitalSignatureManager(package)\n    dsm.CertificateOption = CertificateEmbeddingOption.InSignaturePart\n\n    &#39; Create a list of all the part URIs in the package to sign\n    &#39; (GetParts() also includes PackageRelationship parts).\n    Dim toSign As New System.Collections.Generic.List(Of Uri)()\n    For Each packagePart As PackagePart In package.GetParts()\n        &#39; Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri)\n    Next\n\n    &#39; Add the URI for SignatureOrigin PackageRelationship part.\n    &#39; The SignatureOrigin relationship is created when Sign() is called.\n    &#39; Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin))\n\n    &#39; Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin)\n\n    &#39; Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(New Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)))\n\n    &#39; Sign() will prompt the user to select a Certificate to sign with.\n    Try\n        dsm.Sign(toSign)\n    Catch ex As CryptographicException\n\n        &#39; If there are no certificates or the SmartCard manager is\n        &#39; not running, catch the exception and show an error message.\n        MessageBox.Show(&quot;Cannot Sign&quot; &amp; vbLf &amp; ex.Message, &quot;No Digital Certificates Available&quot;, MessageBoxButton.OK, MessageBoxImage.Exclamation)\n\n    End Try\nEnd Sub\nPrivate Shared Function InlineAssignHelper(Of T)(ByRef target As T, ByVal value As T) As T\n    target = value\n    Return value\nEnd Function\n&#39; end:SignAllParts()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageDigitalSignature#PackageDigSigSign\">private static void SignAllParts(Package package)\n{\n    if (package == null)\n        throw new ArgumentNullException(&quot;SignAllParts(package)&quot;);\n\n    // Create the DigitalSignature Manager\n    PackageDigitalSignatureManager dsm =\n        new PackageDigitalSignatureManager(package);\n    dsm.CertificateOption =\n        CertificateEmbeddingOption.InSignaturePart;\n\n    // Create a list of all the part URIs in the package to sign\n    // (GetParts() also includes PackageRelationship parts).\n    System.Collections.Generic.List&lt;Uri&gt; toSign =\n        new System.Collections.Generic.List&lt;Uri&gt;();\n    foreach (PackagePart packagePart in package.GetParts())\n    {\n        // Add all package parts to the list for signing.\n        toSign.Add(packagePart.Uri);\n    }\n\n    // Add the URI for SignatureOrigin PackageRelationship part.\n    // The SignatureOrigin relationship is created when Sign() is called.\n    // Signing the SignatureOrigin relationship disables counter-signatures.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(dsm.SignatureOrigin));\n\n    // Also sign the SignatureOrigin part.\n    toSign.Add(dsm.SignatureOrigin);\n\n    // Add the package relationship to the signature origin to be signed.\n    toSign.Add(PackUriHelper.GetRelationshipPartUri(new Uri(&quot;/&quot;, UriKind.RelativeOrAbsolute)));\n\n    // Sign() will prompt the user to select a Certificate to sign with.\n    try\n    {\n        dsm.Sign(toSign);\n    }\n\n    // If there are no certificates or the SmartCard manager is\n    // not running, catch the exception and show an error message.\n    catch (CryptographicException ex)\n    {\n        MessageBox.Show(\n            &quot;Cannot Sign<br>&quot; + ex.Message,\n            &quot;No Digital Certificates Available&quot;,\n            MessageBoxButton.OK,\n            MessageBoxImage.Exclamation);\n    }\n\n}// end:SignAllParts()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_System_Collections_Generic_IEnumerable_System_Uri__System_Security_Cryptography_X509Certificates_X509Certificate_System_Collections_Generic_IEnumerable_System_IO_Packaging_PackageRelationshipSelector__System_String_System_Collections_Generic_IEnumerable_System_Security_Cryptography_Xml_DataObject__System_Collections_Generic_IEnumerable_System_Security_Cryptography_Xml_Reference__\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_Sign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sign(IEnumerable&lt;Uri&gt;,X509Certificate,IEnumerable&lt;PackageRelationshipSelector&gt;,String,IEnumerable&lt;DataObject&gt;,IEnumerable&lt;Reference&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-id-md.md&quot; -->identifier (ID)<!--END INCLUDE -->.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-urisharpplural-md.md&quot; -->uniform resource identifiers (URIs)<!--END INCLUDE --> for the <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> objects to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use to digitally sign each of the specified parts and relationships.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relationshipSelectors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.io.packaging.packagerelationshipselector\" data-linktype=\"relative-path\">PackageRelationshipSelector</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list of <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> objects to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signatureId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An identification string to associate with the signature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signatureObjects</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.cryptography.xml.dataobject\" data-linktype=\"relative-path\">DataObject</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of custom data objects to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>objectReferences</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.cryptography.xml.reference\" data-linktype=\"relative-path\">Reference</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of references to custom objects to sign.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packagedigitalsignature\" data-linktype=\"relative-path\">PackageDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.IO.Packaging.PackagePart.ContentType*</span> of a part being signed references an empty, <code>null</code>, or undefined <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>signatureId</code> is not <code>null</code> and is not a valid <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> schema ID (for example, begins with a leading numeric digit).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>There must be at least one element to sign in <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, or <code>objectReferences</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The terms <code>Object</code>, <code>Manifest</code>, <code>Reference</code>, <code>SignatureProperties</code>, and <code>Transform</code> in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see <a href=\"http://www.w3.org/TR/xmldsig-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmldsig-core/</a>.  </p>\n</div>\n<p> This and other <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_Sign_\" data-linktype=\"relative-path\">Sign</a> method overloads use the current <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_TransformMapping_\" data-linktype=\"relative-path\">TransformMapping</a> dictionary that defines a <code>Transform</code> to apply based on the package part <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_ContentType_\" data-linktype=\"relative-path\">ContentType</a>.  The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid <code>Transform</code> algorithms: C14 and C14N.  The W3C XML-Signature Syntax and Processing standard does not allow empty <code>Manifest</code> tags.  Also the Open Packaging Conventions specification requires a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>-specific <code>Object</code> tag that contains both <code>Manifest</code> and <code>SignatureProperties</code> tags.  Each <code>Manifest</code> tag additionally also include at least one <code>Reference</code> tag.  These tags require that each signature sign at least one <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> (non-empty parts tag) or <a class=\"xref\" href=\"system.io.packaging.packagerelationship\" data-linktype=\"relative-path\">PackageRelationship</a> (non-empty <code>relationshipSelectors</code>) even if the signature is needed only to sign <code>signatureObjects</code> or <code>objectReferences</code>.  </p>\n<p> This Sign method ignores the <a class=\"xref\" href=\"system.security.cryptography.xml.reference#System_Security_Cryptography_Xml_Reference_DigestMethod_\" data-linktype=\"relative-path\">DigestMethod</a> property associated with each <a class=\"xref\" href=\"system.security.cryptography.xml.reference\" data-linktype=\"relative-path\">Reference</a> defined in <code>objectReferences</code>.  </p>\n<p> This Sign overload provides support for generation of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> signatures that require custom <code>Object</code> tags.  For any provided <code>Object</code> tag to be signed, a corresponding <code>Reference</code> tag must be provided with a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> that specifies the <code>Object</code> tag in local fragment syntax.  For example if the <code>Object</code> tag has an ID of &quot;myObject&quot;, the URI in the <code>Reference</code> tag would be &quot;#myObject&quot;.  For unsigned objects, no <code>Reference</code> is required.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_VerifyCertificate_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_VerifyCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyCertificate(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies a given X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509chainstatusflags\" data-linktype=\"relative-path\">X509ChainStatusFlags</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509chainstatusflags\" data-linktype=\"relative-path\">X509ChainStatusFlags</a> (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_VerifySignatures_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageDigitalSignatureManager_VerifySignatures_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifySignatures(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies the signatures on all signed parts within the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>exitOnFailure</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to exit on first failure; otherwise, <code>false</code> to continue and check all signatures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.verifyresult\" data-linktype=\"relative-path\">VerifyResult</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.io.packaging.verifyresult\" data-linktype=\"relative-path\">VerifyResult</a> (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method verifies only the digital signatures; it does not verify the related X.509 certificates.  The <a class=\"xref\" href=\"system.io.packaging.packagedigitalsignaturemanager#System_IO_Packaging_PackageDigitalSignatureManager_VerifyCertificate_\" data-linktype=\"relative-path\">VerifyCertificate</a> method can be used to verify the X.509 certificates.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method to validate all signed parts within a package.  For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159966\" data-linktype=\"external\">Creating a Package with a Digital Signature Sample</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"PackageDigitalSignature#PackageDigSigValidate\">&#39; ------------------------ ValidateSignatures ------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Validates all the digital signatures of a given package.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;package&quot;&gt;\n&#39;&#39;&#39; The package for validating digital signatures.&lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; true if all digital signatures are valid; otherwise false if the\n&#39;&#39;&#39; package is unsigned or any of the signatures are invalid.&lt;/returns&gt;\nPrivate Shared Function ValidateSignatures(ByVal package As Package) As Boolean\n    If package Is Nothing Then\n        Throw New ArgumentNullException(&quot;ValidateSignatures(package)&quot;)\n    End If\n\n    &#39; Create a PackageDigitalSignatureManager for the given Package.\n    Dim dsm As New PackageDigitalSignatureManager(package)\n\n    &#39; Check to see if the package contains any signatures.\n    If Not dsm.IsSigned Then\n        Return False\n    End If\n    &#39; The package is not signed.\n    &#39; Verify that all signatures are valid.\n    Dim result As VerifyResult = dsm.VerifySignatures(False)\n    If result &lt;&gt; VerifyResult.Success Then\n        Return False\n    End If\n    &#39; One or more digital signatures are invalid.\n    &#39; else if (result == VerifyResult.Success)\n    &#39; All signatures are valid.\n    Return True\nEnd Function\n&#39; end:ValidateSignatures()\n</code></pre><pre><code class=\"lang-cs\" name=\"PackageDigitalSignature#PackageDigSigValidate\">// ------------------------ ValidateSignatures ------------------------\n/// &lt;summary&gt;\n///   Validates all the digital signatures of a given package.&lt;/summary&gt;\n/// &lt;param name=&quot;package&quot;&gt;\n///   The package for validating digital signatures.&lt;/param&gt;\n/// &lt;returns&gt;\n///   true if all digital signatures are valid; otherwise false if the\n///   package is unsigned or any of the signatures are invalid.&lt;/returns&gt;\nprivate static bool ValidateSignatures(Package package)\n{\n    if (package == null)\n        throw new ArgumentNullException(&quot;ValidateSignatures(package)&quot;);\n\n    // Create a PackageDigitalSignatureManager for the given Package.\n    PackageDigitalSignatureManager dsm =\n        new PackageDigitalSignatureManager(package);\n\n    // Check to see if the package contains any signatures.\n    if (!dsm.IsSigned)\n        return false;   // The package is not signed.\n\n    // Verify that all signatures are valid.\n    VerifyResult result = dsm.VerifySignatures(false);\n    if (result != VerifyResult.Success)\n        return false;   // One or more digital signatures are invalid.\n\n    // else if (result == VerifyResult.Success)\n    return true;        // All signatures are valid.\n\n}// end:ValidateSignatures()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageDigitalSignatureManager_InvalidSignatureEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidSignatureEvent</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when <span class=\"xref\">stem.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*</span> encounters an invalid signature.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Packaging.PackageDigitalSignatureManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Packaging.PackageDigitalSignatureManager.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.Countersign\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.GetSignature\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.add_InvalidSignatureEvent\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.remove_InvalidSignatureEvent\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.IsSigned\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.Sign\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.Signatures\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"eaa88cfb-5b59-d01a-cf98-20c9cba38706\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.IO.Packaging\\PackageDigitalSignatureManager.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a utility class for the creation and verification of digital signatures in a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO.Packaging/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.Packaging.PackageDigitalSignatureManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Packaging.PackageDigitalSignatureManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Packaging.PackageDigitalSignatureManager.yml","open_to_public_contributors":true,"api_name":["System.IO.Packaging.PackageDigitalSignatureManager","System.IO.Packaging.PackageDigitalSignatureManager..ctor","System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption","System.IO.Packaging.PackageDigitalSignatureManager.Countersign","System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm","System.IO.Packaging.PackageDigitalSignatureManager.GetSignature","System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm","System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent","System.IO.Packaging.PackageDigitalSignatureManager.add_InvalidSignatureEvent","System.IO.Packaging.PackageDigitalSignatureManager.remove_InvalidSignatureEvent","System.IO.Packaging.PackageDigitalSignatureManager.IsSigned","System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow","System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures","System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature","System.IO.Packaging.PackageDigitalSignatureManager.Sign","System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin","System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType","System.IO.Packaging.PackageDigitalSignatureManager.Signatures","System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat","System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping","System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate","System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.Packaging.PackageDigitalSignatureManager","System::IO::Packaging::PackageDigitalSignatureManager","System.IO.Packaging.PackageDigitalSignatureManager.#ctor","System::IO::Packaging::PackageDigitalSignatureManager::#ctor","System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption","System::IO::Packaging::PackageDigitalSignatureManager::CertificateOption","System.IO.Packaging.PackageDigitalSignatureManager.Countersign","System::IO::Packaging::PackageDigitalSignatureManager::Countersign","System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm","System::IO::Packaging::PackageDigitalSignatureManager::DefaultHashAlgorithm","System.IO.Packaging.PackageDigitalSignatureManager.GetSignature","System::IO::Packaging::PackageDigitalSignatureManager::GetSignature","System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm","System::IO::Packaging::PackageDigitalSignatureManager::HashAlgorithm","System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent","System::IO::Packaging::PackageDigitalSignatureManager::InvalidSignatureEvent","System.IO.Packaging.PackageDigitalSignatureManager.IsSigned","System::IO::Packaging::PackageDigitalSignatureManager::IsSigned","System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow","System::IO::Packaging::PackageDigitalSignatureManager::ParentWindow","System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures","System::IO::Packaging::PackageDigitalSignatureManager::RemoveAllSignatures","System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature","System::IO::Packaging::PackageDigitalSignatureManager::RemoveSignature","System.IO.Packaging.PackageDigitalSignatureManager.Sign","System::IO::Packaging::PackageDigitalSignatureManager::Sign","System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin","System::IO::Packaging::PackageDigitalSignatureManager::SignatureOrigin","System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType","System::IO::Packaging::PackageDigitalSignatureManager::SignatureOriginRelationshipType","System.IO.Packaging.PackageDigitalSignatureManager.Signatures","System::IO::Packaging::PackageDigitalSignatureManager::Signatures","System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat","System::IO::Packaging::PackageDigitalSignatureManager::TimeFormat","System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping","System::IO::Packaging::PackageDigitalSignatureManager::TransformMapping","System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate","System::IO::Packaging::PackageDigitalSignatureManager::VerifyCertificate","System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures","System::IO::Packaging::PackageDigitalSignatureManager::VerifySignatures"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"eaa88cfb-5b59-d01a-cf98-20c9cba38706","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.IO.Packaging\\PackageDigitalSignatureManager.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PackageDigitalSignatureManager class | Microsoft Docs","_op_ogTitle":"PackageDigitalSignatureManager class","description":"Provides a utility class for the creation and verification of digital signatures in a .\n","toc_asset_id":"_splitted/System.IO.Packaging/toc.json","toc_rel":"_splitted/System.IO.Packaging/toc.json","source_url":"","ms.assetid":"System.IO.Packaging.PackageDigitalSignatureManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.packaging.packagedigitalsignaturemanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.packaging.packagedigitalsignaturemanager","fileRelativePath":"System.IO.Packaging.PackageDigitalSignatureManager.html"},"themesRelativePathToOutputRoot":"_themes/"}